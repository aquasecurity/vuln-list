{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [
      {
        "children": [],
        "cpe_match": [
          {
            "cpe23Uri": "cpe:2.3:a:redhat:jboss_fuse:7.0.0:*:*:*:*:*:*:*",
            "cpe_name": [],
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:a:redhat:integration_camel_k:-:*:*:*:*:*:*:*",
            "cpe_name": [],
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:a:redhat:undertow:*:*:*:*:*:*:*:*",
            "cpe_name": [],
            "versionEndExcluding": "2.2.19",
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:a:redhat:undertow:2.3.0:alpha1:*:*:*:*:*:*",
            "cpe_name": [],
            "vulnerable": true
          }
        ],
        "operator": "OR"
      }
    ]
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "secalert@redhat.com",
      "ID": "CVE-2022-2053"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "When a POST request comes through AJP and the request exceeds the max-post-size limit (maxEntitySize), Undertow's AjpServerRequestConduit implementation closes a connection without sending any response to the client/proxy. This behavior results in that a front-end proxy marking the backend worker (application server) as an error state and not forward requests to the worker for a while. In mod_cluster, this continues until the next STATUS request (10 seconds intervals) from the application server updates the server state. So, in the worst case, it can result in \"All workers are in error state\" and mod_cluster responds \"503 Service Unavailable\" for a while (up to 10 seconds). In mod_proxy_balancer, it does not forward requests to the worker until the \"retry\" timeout passes. However, luckily, mod_proxy_balancer has \"forcerecovery\" setting (On by default; this parameter can force the immediate recovery of all workers without considering the retry parameter of the workers if all workers of a balancer are in error state.). So, unlike mod_cluster, mod_proxy_balancer does not result in responding \"503 Service Unavailable\". An attacker could use this behavior to send a malicious request and trigger server errors, resulting in DoS (denial of service). This flaw was fixed in Undertow 2.2.19.Final, Undertow 2.3.0.Alpha2."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-400"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://bugzilla.redhat.com/show_bug.cgi?id=2095862\u0026comment#0",
          "refsource": "MISC",
          "tags": [
            "Issue Tracking",
            "Vendor Advisory"
          ],
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2095862\u0026comment#0"
        },
        {
          "name": "https://issues.redhat.com/browse/UNDERTOW-2133",
          "refsource": "MISC",
          "tags": [
            "Vendor Advisory"
          ],
          "url": "https://issues.redhat.com/browse/UNDERTOW-2133"
        }
      ]
    }
  },
  "impact": {
    "baseMetricV3": {
      "cvssV3": {
        "attackComplexity": "LOW",
        "attackVector": "NETWORK",
        "availabilityImpact": "HIGH",
        "baseScore": 7.5,
        "baseSeverity": "HIGH",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
        "version": "3.1"
      },
      "exploitabilityScore": 3.9,
      "impactScore": 3.6
    }
  },
  "lastModifiedDate": "2022-08-11T14:06Z",
  "publishedDate": "2022-08-05T16:15Z"
}