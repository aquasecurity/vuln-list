{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [
      {
        "children": [],
        "cpe_match": [
          {
            "cpe23Uri": "cpe:2.3:a:libvips_project:libvips:*:*:*:*:*:*:*:*",
            "cpe_name": [],
            "versionEndExcluding": "8.7.4",
            "vulnerable": true
          }
        ],
        "operator": "OR"
      }
    ]
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@mitre.org",
      "ID": "CVE-2019-6976"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "libvips before 8.7.4 generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs/memory.c does not zero out allocated memory. This can result in leaking raw process memory contents through the output image."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-908"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://github.com/libvips/libvips/releases/tag/v8.7.4",
          "refsource": "MISC",
          "tags": [
            "Third Party Advisory"
          ],
          "url": "https://github.com/libvips/libvips/releases/tag/v8.7.4"
        },
        {
          "name": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a",
          "refsource": "MISC",
          "tags": [
            "Patch",
            "Third Party Advisory"
          ],
          "url": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a"
        },
        {
          "name": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/",
          "refsource": "MISC",
          "tags": [
            "Technical Description",
            "Third Party Advisory"
          ],
          "url": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/"
        }
      ]
    }
  },
  "impact": {
    "baseMetricV2": {
      "acInsufInfo": false,
      "cvssV2": {
        "accessComplexity": "LOW",
        "accessVector": "NETWORK",
        "authentication": "NONE",
        "availabilityImpact": "NONE",
        "baseScore": 5,
        "confidentialityImpact": "PARTIAL",
        "integrityImpact": "NONE",
        "vectorString": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
        "version": "2.0"
      },
      "exploitabilityScore": 10,
      "impactScore": 2.9,
      "obtainAllPrivilege": false,
      "obtainOtherPrivilege": false,
      "obtainUserPrivilege": false,
      "severity": "MEDIUM",
      "userInteractionRequired": false
    },
    "baseMetricV3": {
      "cvssV3": {
        "attackComplexity": "LOW",
        "attackVector": "NETWORK",
        "availabilityImpact": "NONE",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM",
        "confidentialityImpact": "LOW",
        "integrityImpact": "NONE",
        "privilegesRequired": "NONE",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "version": "3.0"
      },
      "exploitabilityScore": 3.9,
      "impactScore": 1.4
    }
  },
  "lastModifiedDate": "2020-08-24T17:37Z",
  "publishedDate": "2019-01-26T23:29Z"
}