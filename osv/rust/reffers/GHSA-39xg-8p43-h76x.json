{
  "id": "GHSA-39xg-8p43-h76x",
  "modified": "2023-11-08T04:03:41.295805Z",
  "published": "2021-08-25T20:51:40Z",
  "aliases": [
    "CVE-2020-36203",
    "RUSTSEC-2020-0094"
  ],
  "summary": "Data races in reffers",
  "details": "ARefss\u003c'a, V\u003e is a type that is assumed to contain objects that are Send + Sync.\n\nIn the affected versions of this crate, Send/Sync traits are unconditionally implemented for ARefss\u003c'a, V\u003e.\n\nBy using the ARefss::map() API, we can insert a !Send or !Sync object into ARefss\u003c'a, V\u003e. After that, it is possible to create a data race to the inner object of ARefss\u003c'a, V\u003e, which can lead to undefined behavior \u0026 memory corruption.\n\nThe flaw was corrected in commit `6dd7ca0` by adding trait bound V: Send + Sync to ARefss::map() API.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "reffers",
        "purl": "pkg:cargo/reffers"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.6.1"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/08/GHSA-39xg-8p43-h76x/GHSA-39xg-8p43-h76x.json"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36203"
    },
    {
      "type": "WEB",
      "url": "https://github.com/diwic/reffers-rs/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://github.com/diwic/reffers-rs/commit/6dd7ca0d50f2464df708975cdafcfaeeb6d41c66"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/diwic/reffers-rs"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0094.html"
    }
  ]
}