{
  "id": "RUSTSEC-2020-0017",
  "modified": "2023-11-08T04:03:36.887095Z",
  "published": "2020-05-28T12:00:00Z",
  "aliases": [
    "CVE-2020-35874",
    "GHSA-96w3-p368-4h8c"
  ],
  "summary": "Use after free in ArcIntern::drop",
  "details": "`ArcIntern::drop` has a race condition where it can release memory\nwhich is about to get another user. The new user will get a reference\nto freed memory.\n\nThis was fixed by serializing access to an interned object while it\nis being deallocated.\n\nVersions prior to 0.3.12 used stronger locking which avoided the problem.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "internment",
        "purl": "pkg:cargo/internment"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.3.12"
            },
            {
              "fixed": "0.4.0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [
            "internment::ArcIntern::drop"
          ],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": null,
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0017.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/internment"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0017.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/droundy/internment/issues/11"
    }
  ]
}