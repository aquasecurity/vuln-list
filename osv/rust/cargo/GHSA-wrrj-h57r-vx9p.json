{
  "id": "GHSA-wrrj-h57r-vx9p",
  "modified": "2025-06-24T20:17:26Z",
  "published": "2023-08-24T22:15:51Z",
  "aliases": [
    "CVE-2023-40030"
  ],
  "related": [
    "CVE-2023-40030"
  ],
  "summary": "Malicious dependencies can inject arbitrary JavaScript into cargo-generated timing reports",
  "details": "The Rust Security Response WG was notified that Cargo did not escape Cargo feature names when including them in the report generated by `cargo build --timings`. A malicious package included as a dependency may inject nearly arbitrary HTML here, potentially leading to XSS if the report is subsequently uploaded somewhere.\n\nThe severity of this vulnerability is \"low\" for users relying on dependencies from git, local paths, or alternative registries. Users who solely depend on crates.io are unaffected.\n\n\nNote that **by design** Cargo allows code execution at build time, due to build scripts and procedural macros. The vulnerability in this advisory allows performing a subset of the possible damage in a harder to track down way. Your dependencies must still be trusted if you want to be protected from attacks, as it's possible to perform the same attacks with build scripts and procedural macros.\n\n# Overview\n\nRust 1.60.0 [introduced](https://blog.rust-lang.org/2022/04/07/Rust-1.60.0.html#cargo---timings) `cargo build --timings`, which produces a report of how long the different steps of the build process took. It includes lists of Cargo features for each crate.\n\nPrior to Rust 1.72, Cargo feature names were allowed to contain almost any characters (with some exceptions as used by the feature syntax), but it would produce a future incompatibility warning about them [since Rust 1.49](https://github.com/rust-lang/cargo/pull/8814). crates.io is far more stringent about what it considers a valid feature name and has not allowed such feature names.\n\nAs the feature names defined in the `Cargo.toml` file were included unescaped in the timings report, they could be used to inject Javascript into the page. For example with a feature name like `features = [\"\u003cimg src='' onerror=alert(0)\"]`. If this report were subsequently uploaded to a domain that uses credentials, the injected Javascript could access resources from the website visitor.\n\nThis issue was fixed by [turning the future incompatibility warning into an error](https://github.com/rust-lang/cargo/pull/12291).\n\n# Affected versions\n\nThe vulnerability is present in all versions of Cargo after and including 1.60.0. Rust 1.72, to be released on August 24, will include a fix for it.\n\nUsers whose dependencies are entirely on crates.io are unaffected.\n\n# Mitigations\n\nWe recommend users always excercise care in which package they download, by only including trusted dependencies in their projects. Please note that even with these vulnerabilities fixed, by design Cargo allows arbitrary code execution at build time thanks to build scripts and procedural macros: a malicious dependency will be able to cause damage regardless of these vulnerabilities.\n\ncrates.io has server-side checks preventing this attack, and there are no packages on crates.io exploiting these vulnerabilities. crates.io users still need to excercise care in choosing their dependencies though, as remote code execution is allowed by design there as well.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "cargo",
        "purl": "pkg:cargo/cargo"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "1.60.0"
            },
            {
              "fixed": "1.72"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/08/GHSA-wrrj-h57r-vx9p/GHSA-wrrj-h57r-vx9p.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/cargo/security/advisories/GHSA-wrrj-h57r-vx9p"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/cargo/commit/9835622853f08be9a4b58ebe29dcec8f43b64b33"
    },
    {
      "type": "WEB",
      "url": "https://github.com/rust-lang/cargo/commit/f975722a0eac934c0722f111f107c4ea2f5c4365"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/rust-lang/cargo"
    }
  ]
}