{
  "id": "RUSTSEC-2020-0117",
  "modified": "2023-11-08T04:03:44.783101Z",
  "published": "2020-11-24T12:00:00Z",
  "aliases": [
    "CVE-2020-36437",
    "GHSA-368f-29c3-4f2r"
  ],
  "summary": "QueueSender\u003cT\u003e/QueueReceiver\u003cT\u003e: Send/Sync impls need `T: Send`",
  "details": "Affected versions of this crate unconditionally implemented `Send`/`Sync` for `QueueSender\u003cT\u003e`,\nallowing to send non-Send `T` to other threads by invoking `(\u0026QueueSender\u003cT\u003e).send()`.\n\nThis fails to prevent users from creating data races by sending types like `Rc\u003cT\u003e` or `Arc\u003cCell\u003cT\u003e\u003e` to other threads, which can lead to memory corruption.\n\nThe flaw was corrected in commit 1e462c3 by imposing `T: Send` to both `Send`/`Sync` impls for `QueueSender\u003cT\u003e`/`QueueReceiver\u003cT\u003e`.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "conqueue",
        "purl": "pkg:cargo/conqueue"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "0.4.0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption",
          "thread-safety"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": null,
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0117.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/conqueue"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0117.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/longshorej/conqueue/issues/9"
    }
  ]
}