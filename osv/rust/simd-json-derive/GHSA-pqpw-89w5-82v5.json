{
  "id": "GHSA-pqpw-89w5-82v5",
  "modified": "2024-11-12T20:53:55Z",
  "published": "2024-11-12T20:53:54Z",
  "summary": "`simd-json-derive` vulnerable to `MaybeUninit` misuse",
  "details": "An invalid use of `MaybeUninit::uninit().assume_init()` in `simd-json-derive`'s derive macro can cause undefined behavior. The original code used `MaybeUninit` to avoid initialisation of the struct and then set the fields using `ptr::write`. The undefined behavior triggered by this misuse of `MaybeUninit` can lead to invlaid memory access and panics in binaries compiled in release mode (aka simd-json-derive prior to version 0.12 has UB and optimizes into some nonsense)\n\nThe version `0.12.0` removes this section of code, avoiding the use of MaybeUninit alltogether.\n",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "simd-json-derive",
        "purl": "pkg:cargo/simd-json-derive"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.12.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/11/GHSA-pqpw-89w5-82v5/GHSA-pqpw-89w5-82v5.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/simd-lite/simd-json-derive/issues/67"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/simd-lite/simd-json-derive"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2023-0087.html"
    }
  ]
}