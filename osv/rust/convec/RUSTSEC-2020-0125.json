{
  "id": "RUSTSEC-2020-0125",
  "modified": "2023-11-08T04:03:45.276409Z",
  "published": "2020-11-24T12:00:00Z",
  "aliases": [
    "CVE-2020-36445",
    "GHSA-rpxm-vmr7-5f5f"
  ],
  "summary": "convec::ConVec\u003cT\u003e unconditionally implements Send/Sync",
  "details": "Affected versions of this crate unconditionally implement Send/Sync for `ConVec\u003cT\u003e`.\nThis allows users to insert `T` that is not Send or not Sync.\n\nThis allows users to create data races by using non-Send types like `Arc\u003cCell\u003c_\u003e\u003e` or `Rc\u003c_\u003e` as `T` in `ConVec\u003cT\u003e`. It is also possible to create data races by using types like `Cell\u003c_\u003e` or `RefCell\u003c_\u003e` as `T` (types that are `Send` but not `Sync`).\nSuch data races can lead to memory corruption.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "convec",
        "purl": "pkg:cargo/convec"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption",
          "thread-safety"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": null,
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0125.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/convec"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0125.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/krl/convec/issues/2"
    }
  ]
}