{
  "id": "RUSTSEC-2024-0344",
  "modified": "2024-06-19T00:10:32Z",
  "published": "2024-06-18T12:00:00Z",
  "summary": "Timing variability in `curve25519-dalek`'s `Scalar29::sub`/`Scalar52::sub`",
  "details": "Timing variability of any kind is problematic when working with  potentially secret values such as\nelliptic curve scalars, and such issues can potentially leak private keys and other secrets. Such a\nproblem was recently discovered in `curve25519-dalek`.\n\nThe `Scalar29::sub` (32-bit) and `Scalar52::sub` (64-bit) functions contained usage of a mask value\ninside a loop where LLVM saw an opportunity to insert a branch instruction (`jns` on x86) to\nconditionally bypass this code section when the mask value is set to zero as can be seen in godbolt:\n\n- 32-bit (see L106): \u003chttps://godbolt.org/z/zvaWxzvqv\u003e\n- 64-bit (see L48): \u003chttps://godbolt.org/z/PczYj7Pda\u003e\n\nA similar problem was recently discovered in the Kyber reference implementation:\n\n\u003chttps://groups.google.com/a/list.nist.gov/g/pqc-forum/c/hqbtIGFKIpU/m/cnE3pbueBgAJ\u003e\n\nAs discussed on that thread, one portable solution, which is also used in this PR, is to introduce a\nvolatile read as an optimization barrier, which prevents the compiler from optimizing it away.\n\nThe fix can be validated in godbolt here:\n\n- 32-bit: \u003chttps://godbolt.org/z/jc9j7eb8E\u003e\n- 64-bit: \u003chttps://godbolt.org/z/x8d46Yfah\u003e\n\nThe problem was discovered and the solution independently verified by \nAlexander Wagner \u003calexander.wagner@aisec.fraunhofer.de\u003e and Lea Themint \u003clea.thiemt@tum.de\u003e using\ntheir DATA tool:\n\n\u003chttps://github.com/Fraunhofer-AISEC/DATA\u003e",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "curve25519-dalek",
        "purl": "pkg:cargo/curve25519-dalek"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "4.1.3"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "crypto-failure"
        ],
        "cvss": null,
        "informational": null,
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2024-0344.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/curve25519-dalek"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2024-0344.html"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dalek-cryptography/curve25519-dalek/pull/659"
    }
  ]
}