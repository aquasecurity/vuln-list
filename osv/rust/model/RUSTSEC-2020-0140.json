{
  "id": "RUSTSEC-2020-0140",
  "modified": "2023-11-08T04:03:46.195914Z",
  "published": "2020-11-10T12:00:00Z",
  "aliases": [
    "CVE-2020-36460",
    "GHSA-mxv6-q98x-h958"
  ],
  "summary": "`Shared` can cause a data race",
  "details": "`Shared` data structure in `model` crate implements `Send` and `Sync` traits regardless of the inner type.\nThis allows safe Rust code to trigger a data race, which is undefined behavior in Rust.\n\nUsers are advised to treat `Shared` as an unsafe type.\nIt should not be used outside of the testing context,\nand care must be taken so that the testing code does not have a data race\nbesides a race condition that is expected to be caught by the test.\n\nCheck [the Rustonomicon](https://doc.rust-lang.org/nomicon/races.html) for the difference between\na data race and a general race condition.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "model",
        "purl": "pkg:cargo/model"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "thread-safety"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": "unsound",
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0140.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/model"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0140.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/spacejam/model/issues/3"
    }
  ]
}