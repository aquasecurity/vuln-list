{
  "id": "RUSTSEC-2020-0120",
  "modified": "2023-11-08T04:03:44.964292Z",
  "published": "2020-11-10T12:00:00Z",
  "aliases": [
    "CVE-2020-36440",
    "GHSA-f6g6-54hm-fhxv"
  ],
  "summary": "`Decoder\u003cR\u003e` can carry `R: !Send` to other threads",
  "details": "Affected versions of this crate implements `Send` for `Decoder\u003cR\u003e` for any `R: Read`. This allows `Decoder\u003cR\u003e` to contain `R: !Send` and carry (move) it to another thread.\n\nThis can result in undefined behavior such as memory corruption from data race on `R`, or dropping `R = MutexGuard\u003c_\u003e` from a thread that didn't lock the mutex.\n\nThe flaw was corrected in commit a34d6e1 by adding trait bound `R: Send` to the `Send` impl for `Decoder\u003cR\u003e`.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "libsbc",
        "purl": "pkg:cargo/libsbc"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "0.1.5"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption",
          "thread-safety"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": "unsound",
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0120.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/libsbc"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0120.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/mvertescher/libsbc-rs/issues/4"
    }
  ]
}