{
  "id": "GHSA-c9pr-q8gx-3mgp",
  "modified": "2025-04-03T13:26:08Z",
  "published": "2025-04-02T22:36:45Z",
  "aliases": [
    "CVE-2025-31477"
  ],
  "related": [
    "CVE-2025-31477"
  ],
  "summary": "Improper Scope Validation in the `open` Endpoint of `tauri-plugin-shell`",
  "details": "### Impact\n\nThe Tauri [`shell`](https://tauri.app/plugin/shell/)  plugin exposes functionality to execute code and open programs on the system. The [`open`](https://tauri.app/reference/javascript/shell/#open) endpoint of this plugin is designed to allow open functionality with the system opener (e.g. \n `xdg-open` on Linux). This was meant to be restricted to a reasonable number of protocols like `https` or `mailto` by default.\n\nThis default restriction was not functional due to improper validation of the allowed protocols, allowing for potentially dangerous protocols like `file://`, `smb://`, or `nfs://` and others  to be opened by the system registered protocol handler.\n\nBy passing untrusted user input to the `open` endpoint these potentially dangerous protocols can be abused to gain remote code execution on the system. This either requires direct exposure of the endpoint to application users or code execution in the frontend of a Tauri application.\n\nYou are not affected if you have explicitly configured a validation regex or manually set the `open` endpoint to `true` in the plugin configuration. \n\nTechnically the scope was never a limitation for the rust side as it is not seen as an enforceable security boundary but we decided to mark the rust crate as affected since the plugin does not need to be a frontend dependency to be exposed.\n\n### Patches\n\nThe issue has been patched in the `2.2.1` version of the plugin.\nThe plugin now differentiates between an unset scope and an explicit validation disable for the `open` endpoint.\n\n### Workarounds \n\nA way to prevent arbitrary protocols would be setting the shell plugin configuration value `open` to `true`.\n\n`tauri.conf.json`\n```json5 \n\"plugins\": {\n    \"shell\": {\n          \"open\": true\n     },\n}\n```\n\nThe above will only allow `mailto`, `http` and `https` links to be opened.\n\nIf the `open` endpoint should not be allowed at all there are two possible workarounds.\n- Defining a non matching regex like `tauri^` in the plugin configuration\n- Removing `shell:default` and all instances of `shell:allow-open` from the [`capabilities`](https://tauri.app/security/capabilities/) \n\nAlternatively we recommend usage of the [`opener`](https://tauri.app/plugin/opener/)  plugin, as the shell plugin deprecated the `open` endpoint previously.\n### References\n\n#### PoC\n\nThis is a windows specific proof of concept.\n\n1. Use `create-tauri-app` to make a new Tauri app.\n2. Run `tauri add shell` to add the shell plugin.\n3. Execute `await window.__TAURI_INTERNALS__.invoke(\"plugin:shell|open\", {path: \"file:///c:/windows/system32/calc.exe\"});` in the developer console.\n4. Observe the calculator being executed",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "tauri-plugin-shell",
        "purl": "pkg:cargo/tauri-plugin-shell"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2.2.1"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/04/GHSA-c9pr-q8gx-3mgp/GHSA-c9pr-q8gx-3mgp.json"
      }
    },
    {
      "package": {
        "ecosystem": "npm",
        "name": "@tauri-apps/plugin-shell",
        "purl": "pkg:npm/%40tauri-apps/plugin-shell"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2.2.1"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/04/GHSA-c9pr-q8gx-3mgp/GHSA-c9pr-q8gx-3mgp.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/tauri-apps/plugins-workspace/security/advisories/GHSA-c9pr-q8gx-3mgp"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-31477"
    },
    {
      "type": "WEB",
      "url": "https://github.com/tauri-apps/plugins-workspace/commit/9cf0390a52497e273db1a1b613a0e26827aa327c"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/tauri-apps/plugins-workspace"
    }
  ]
}