{
  "id": "RUSTSEC-2025-0109",
  "modified": "2025-10-28T06:29:26.662863Z",
  "published": "2025-10-21T12:00:00Z",
  "aliases": [
    "GHSA-wwxp-hxh6-8gf8"
  ],
  "summary": "Out-of-bounds memory access in binary_read_to_ref and binary_write_from_ref",
  "details": "Safe functions accept a single `\u0026T` or `\u0026mut T` but multiply by `n` to create slices extending beyond allocated memory when `n \u003e 1`.\n\nThese functions use `from_raw_parts` to create slices larger than the underlying allocation, violating memory safety.\n\nThe binary_vec_io repository is archived and unmaintained.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "binary_vec_io",
        "purl": "pkg:cargo/binary_vec_io"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [
            "binary_vec_io::binary_read_to_ref",
            "binary_vec_io::binary_write_from_ref"
          ],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption"
        ],
        "cvss": null,
        "informational": "unsound",
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2025-0109.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/binary_vec_io"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2025-0109.html"
    },
    {
      "type": "WEB",
      "url": "https://github.com/RustSec/advisory-db/pull/2428"
    }
  ]
}