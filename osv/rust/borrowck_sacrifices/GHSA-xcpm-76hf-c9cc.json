{
  "id": "GHSA-xcpm-76hf-c9cc",
  "modified": "2025-10-28T06:29:26.916895Z",
  "published": "2025-10-22T16:35:08Z",
  "aliases": [
    "RUSTSEC-2025-0107"
  ],
  "summary": "Borrowck Scarifices exposes uninitialized memory in any_as_u8_slice",
  "details": "The safe function `any_as_u8_slice` can create byte slices that reference uninitialized memory when used with types containing padding bytes.\n\nThe function uses `slice::from_raw_parts` to create a `\u0026[u8]` covering the entire size of a type, including padding bytes. According to Rust's documentation, `from_raw_parts` requires all bytes to be properly initialized, but padding bytes in structs are not guaranteed to be initialized. This violates the safety contract and causes undefined behavior.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "borrowck_sacrifices",
        "purl": "pkg:cargo/borrowck_sacrifices"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.2.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/10/GHSA-xcpm-76hf-c9cc/GHSA-xcpm-76hf-c9cc.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/alexpyattaev/borrowck_sacrifices/issues/1"
    },
    {
      "type": "WEB",
      "url": "https://github.com/alexpyattaev/borrowck_sacrifices/commit/1bdaa14da68a6e8207f9e81359116f53139800f2"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/alexpyattaev/borrowck_sacrifices"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2025-0107.html"
    }
  ]
}