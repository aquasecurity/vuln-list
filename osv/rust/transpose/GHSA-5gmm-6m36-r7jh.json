{
  "id": "GHSA-5gmm-6m36-r7jh",
  "modified": "2024-04-11T16:41:43.507511Z",
  "published": "2024-04-05T15:41:34Z",
  "aliases": [
    "RUSTSEC-2023-0080"
  ],
  "summary": "transpose: Buffer overflow due to integer overflow",
  "details": "Given the function `transpose::transpose`:\n```rust\nfn transpose\u003cT: Copy\u003e(input: \u0026[T], output: \u0026mut [T], input_width: usize, input_height: usize)\n```\n\nThe safety check `input_width * input_height == output.len()` can fail due to `input_width * input_height` overflowing in such a way that it equals `output.len()`.\nAs a result of failing the safety check, memory past the end of `output` is written to. This only occurs in release mode since `*` panics on overflow in debug mode.\n\nExploiting this issue requires the caller to pass `input_width` and `input_height` arguments such that multiplying them overflows, and the overflown result equals the lengths of input and output slices.\n",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "transpose",
        "purl": "pkg:cargo/transpose"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.1.0"
            },
            {
              "fixed": "0.2.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/04/GHSA-5gmm-6m36-r7jh/GHSA-5gmm-6m36-r7jh.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/ejmahler/transpose/issues/11"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ejmahler/transpose/commit/c4bcd39fabca9a31a401d0cc42d4090869b5a37a"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ejmahler/transpose"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2023-0080.html"
    }
  ]
}