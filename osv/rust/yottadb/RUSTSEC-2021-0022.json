{
  "id": "RUSTSEC-2021-0022",
  "modified": "2023-11-08T04:05:24.490347Z",
  "published": "2021-02-09T12:00:00Z",
  "aliases": [
    "CVE-2021-27377",
    "GHSA-9658-c26v-7qvf"
  ],
  "summary": "Use-after-free in `subscript_next` and `subscript_prev` wrappers",
  "details": "Affected versions of this crate had an unsound implementation which could pass\na pointer to freed memory to `ydb_subscript_next_st` and\n`ydb_subscript_prev_st` if the variable and subscripts did not have enough\nmemory allocated on the first call to hold the next variable in the database.\n\nFor example, the following code had undefined behavior:\n\n```rust\nlet mut key = Key::variable(String::from(\"a\"));\nKey::variable(\"averylongkeywithlotsofletters\")\n    .set_st(YDB_NOTTP, Vec::new(), b\"some val\")\n    .unwrap();\nkey.sub_next_self_st(YDB_NOTTP, Vec::new()).unwrap();\n```\n\n`yottadb` has no reverse-dependencies on crates.io and there are no known\ninstances of this API being used incorrectly in practice. The fix is backwards\ncompatible.\n\nThe flaw was corrected by recalculating the pointer each time it was reallocated.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "yottadb",
        "purl": "pkg:cargo/yottadb"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "1.2.0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [
            "yottadb::Key::sub_next_self_st",
            "yottadb::Key::sub_prev_self_st",
            "yottadb::KeyContext::sub_next_self_st",
            "yottadb::KeyContext::sub_prev_self_st"
          ],
          "os": []
        }
      },
      "database_specific": {
        "categories": [
          "memory-corruption"
        ],
        "cvss": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "informational": null,
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2021-0022.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/yottadb"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2021-0022.html"
    },
    {
      "type": "REPORT",
      "url": "https://gitlab.com/YottaDB/Lang/YDBRust/-/issues/40"
    }
  ]
}