{
  "id": "GHSA-5m39-wx2q-mxg3",
  "modified": "2023-11-08T04:15:48.003089Z",
  "published": "2022-11-08T21:42:06Z",
  "aliases": [
    "RUSTSEC-2022-0067"
  ],
  "summary": "Invalid use of `mem::uninitialized` causes `use-of-uninitialized-value`",
  "details": "The compression and decompression function used `mem:uninitialized` to create an array of uninitialized values, to later write values into it. This later leads to reads from uninitialized memory.\n\nThe flaw was corrected in commit b633bf265e41c60dfce3be7eac4e4dd5e18d06cf by using a heap-allocated `Vec` and removing out use of `mem::uninitialized`. The fix was released in v0.3.2 and v1.0.0\n\nSubsequently, the crate was deprecated and its use is discouraged.\n",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "lzf",
        "purl": "pkg:cargo/lzf"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.3.2"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affected_functions": [
          "lzf::compress",
          "lzf::decompress"
        ]
      },
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/11/GHSA-5m39-wx2q-mxg3/GHSA-5m39-wx2q-mxg3.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/badboy/lzf-rs/issues/9"
    },
    {
      "type": "WEB",
      "url": "https://github.com/badboy/lzf-rs/commit/b633bf265e41c60dfce3be7eac4e4dd5e18d06cf"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/badboy/lzf-rs"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2022-0067.html"
    }
  ]
}