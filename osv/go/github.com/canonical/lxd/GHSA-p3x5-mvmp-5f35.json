{
  "id": "GHSA-p3x5-mvmp-5f35",
  "modified": "2025-10-02T21:42:22.330252Z",
  "published": "2025-10-02T21:16:27Z",
  "aliases": [
    "CVE-2025-54290"
  ],
  "summary": "Canonical LXD Project Existence Determination Through Error Handling in Image Export Function",
  "details": "### Impact\nIn LXD's images export API (`/1.0/images/{fingerprint}/export`), implementation differences in error handling allow determining project existence without authentication.\n\nSpecifically, in the following code, errors when multiple images match are directly returned to users as API responses:\n\nhttps://github.com/canonical/lxd/blob/43d5189564d27f6161b430ed258c8b56603c2759/lxd/db/images.go#L239-L246\n\nWhile fingerprints generally don't duplicate, this functionality uses fingerprints with LIKE clauses, allowing prefix specification. Therefore, using LIKE wildcards such as % will match multiple images if multiple images exist in the project.\n\nhttps://github.com/canonical/lxd/blob/43d5189564d27f6161b430ed258c8b56603c2759/lxd/db/images.go#L277-L286\n\nIn the above implementation, multiple matches result in a 500 error, but if the project itself doesn't exist, there are 0 matches and a 404 is returned.\n\n1. When project exists and multiple images match: HTTP 500 error \"More than one image matches\"\n2. When project doesn't exist: HTTP 404 error \"not found\" \n \nThis behavioural difference allows attackers to confirm project existence without authentication.\n\n### Reproduction Steps\n1. Send a request with a pattern matching multiple entries to an existing project (default):\n\n```\ncurl -k 'https://lxd-host:8443/1.0/images/%25/export?project=default\u0026secret=x'\n```\n\nResponse:\n\n```json\n{\"type\":\"error\",\"status\":\"\",\"status_code\":0,\"operation\":\"\",\"error_code\":500,\"error\":\"More than one image matches\",\"metadata\":null}\n```\n\n2. Send a same request to a non-existent project (not-exist):\n\n```\ncurl -k 'https://lxd-host:8443/1.0/images/%25/export?project=not-exist\u0026secret=x'\n```\n\nResponse:\n\n```json\n{\"type\":\"error\",\"status\":\"\",\"status_code\":0,\"operation\":\"\",\"error_code\":404,\"error\":\"not found\",\"metadata\":null}\n```\n\nThis difference allows enumerating existing projects in the system by brute-forcing(dictionary attack) project names.\n\nNote that `%25` is the URL encoding of `%`, which works as a wildcard matching all characters in SQL LIKE clauses. \nThis is used to intentionally create requests matching multiple images to trigger a 500 error.\n\nAdditionally, the secret parameter is added to include non-public images in the search, increasing the possibility of multiple matches.\n\nhttps://github.com/canonical/lxd/blob/43d5189564d27f6161b430ed258c8b56603c2759/lxd/images.go#L4211-L4230\n\n### Risk\nThe attack requires only network access to the LXD API endpoint, with no authentication needed.\n\nThe attack allows confirming the existence of projects within the LXD system by exploiting differences in HTTP status codes. This could potentially increase the exploitability of other vulnerabilities. Additionally, since project IDs often use meaningful names set by users, this could lead to leakage of unpublished product information. \n\nHowever, resource information within projects cannot be obtained, limiting the impact to existence confirmation only.\n\n### Countermeasures\nIt is recommended to modify error handling in the images export API (`/1.0/images/{fingerprint}/export`) to return consistent responses regardless of project existence. \n\nSpecifically, return 404 even when errors occur during project existence verification.\nThis ensures the same error response is returned for both existing and non-existing projects, preventing determination of project existence.\n\nAdditionally, if there are no specification(compatibility) issues, allowing only exact fingerprint matches in unauthenticated states and disabling prefix matching can prevent unexpected errors from occurring.\n\n### Patches\n\n| LXD Series  | Status |\n| ------------- | ------------- |\n| 6 | Fixed in LXD 6.5  |\n| 5.21 | Fixed in LXD 5.21.4  |\n| 5.0 | Ignored - Not critical |\n| 4.0  | Ignored - EOL and not critical |\n\n### References\nReported by GMO Flatt Security Inc.",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/canonical/lxd",
        "purl": "pkg:golang/github.com/canonical/lxd"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "4.0"
            },
            {
              "fixed": "5.21.4"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/10/GHSA-p3x5-mvmp-5f35/GHSA-p3x5-mvmp-5f35.json"
      }
    },
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/canonical/lxd",
        "purl": "pkg:golang/github.com/canonical/lxd"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "6.0"
            },
            {
              "fixed": "6.5"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/10/GHSA-p3x5-mvmp-5f35/GHSA-p3x5-mvmp-5f35.json"
      }
    },
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/canonical/lxd",
        "purl": "pkg:golang/github.com/canonical/lxd"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-20200331193331-03aab09f5b5c"
            },
            {
              "fixed": "0.0.0-20250827065555-0494f5d47e41"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/10/GHSA-p3x5-mvmp-5f35/GHSA-p3x5-mvmp-5f35.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/canonical/lxd/security/advisories/GHSA-p3x5-mvmp-5f35"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54290"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/canonical/lxd"
    }
  ]
}