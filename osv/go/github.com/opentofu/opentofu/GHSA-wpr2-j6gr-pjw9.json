{
  "id": "GHSA-wpr2-j6gr-pjw9",
  "modified": "2024-10-09T22:51:43Z",
  "published": "2024-10-03T16:51:50Z",
  "aliases": [
    "GO-2024-3182"
  ],
  "summary": "OpenTofu potential leaking of secret variable values when using static evaluation in v1.8",
  "details": "### Impact\nUsers who have opted into static evaluation of module sources, versions, and backend configurations may be at risk of exposing sensitive variables and locals.  This is a workflow that should not be possible and explicitly show errors.\n\n### Workarounds\nCheck that you are not using sensitive variables in module sources and versions, as well as backend configurations.  The patch will add explicit errors and prevent this from being possible.\n\n### Examples\n```hcl\nvariable \"backend_path\" {\n        type = string\n        sensitive = true\n}\n\nterraform {\n        backend \"local\" {\n                path = var.backend_path\n        }\n}\n```\n\n```hcl\nvariable \"mod_info\" {\n        type = string\n        sensitive = true\n}\n\nmodule \"foo\" {\n        source = var.mod_info\n        //version = var.mod_info\n}\n```\n\n",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/opentofu/opentofu",
        "purl": "pkg:golang/github.com/opentofu/opentofu"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "1.8.0"
            },
            {
              "fixed": "1.8.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-wpr2-j6gr-pjw9/GHSA-wpr2-j6gr-pjw9.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/opentofu/opentofu/security/advisories/GHSA-wpr2-j6gr-pjw9"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/opentofu/opentofu"
    },
    {
      "type": "WEB",
      "url": "https://pkg.go.dev/vuln/GO-2024-3182"
    }
  ]
}