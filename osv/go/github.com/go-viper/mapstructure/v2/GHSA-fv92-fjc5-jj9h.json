{
  "id": "GHSA-fv92-fjc5-jj9h",
  "modified": "2025-07-28T20:42:20.761135Z",
  "published": "2025-06-27T16:24:59Z",
  "aliases": [
    "GO-2025-3787"
  ],
  "related": [
    "CGA-244v-rj3j-2x42",
    "CGA-2rfr-f3w5-32wg",
    "CGA-32f5-qr8m-5p42",
    "CGA-33m3-6cp5-4h3c",
    "CGA-3f66-jc99-q55c",
    "CGA-3fp8-q9w3-m7r5",
    "CGA-3fvv-3mv8-8645",
    "CGA-3gmr-g3f4-4r33",
    "CGA-3pfg-rfh3-vm8r",
    "CGA-3wc9-83gf-fh65",
    "CGA-3x98-fmrf-w23j",
    "CGA-42wq-h5vj-5cxm",
    "CGA-44p2-28fr-7gjp",
    "CGA-4553-g358-83qq",
    "CGA-45cv-h4rm-29h2",
    "CGA-4f68-mvg3-q692",
    "CGA-4p3q-r4g5-gpxv",
    "CGA-4v65-x4vv-c7rj",
    "CGA-4vfj-vxv8-5p54",
    "CGA-4whj-hccp-785f",
    "CGA-4xf2-3vxg-jg2w",
    "CGA-5827-jwrm-49qj",
    "CGA-5cj3-cfrx-p3h4",
    "CGA-5hf7-7hr5-jxmp",
    "CGA-5rgh-38cv-h5pq",
    "CGA-5v76-m5r7-577m",
    "CGA-62cc-92jj-x57c",
    "CGA-656m-h9hf-98vp",
    "CGA-65ww-m7g4-p3x8",
    "CGA-6879-9559-49m6",
    "CGA-69mj-gmfq-g3g6",
    "CGA-6p5f-rxfr-wx23",
    "CGA-6p83-rjrg-j9jr",
    "CGA-6pmj-4pv9-g3pv",
    "CGA-6q3c-677f-4hjw",
    "CGA-79h8-6c9g-jcwg",
    "CGA-7c2v-4ffj-c79f",
    "CGA-7cv7-w462-46rw",
    "CGA-7gm3-vpcm-mcx9",
    "CGA-7hcx-rm85-53m7",
    "CGA-7hmh-9mr5-ph25",
    "CGA-7mx5-2c79-9826",
    "CGA-7r83-535h-xrcw",
    "CGA-7wf9-8mr8-v7cj",
    "CGA-848v-pjmj-c36p",
    "CGA-89jw-6wqc-6cj7",
    "CGA-8whw-3336-rjcm",
    "CGA-9543-4vrh-xgg7",
    "CGA-966j-v5ww-6rjc",
    "CGA-98jc-27rq-86x3",
    "CGA-9hpv-vjh5-7p8f",
    "CGA-9j3v-j798-pxgx",
    "CGA-9j7v-5346-6prq",
    "CGA-9qr8-33w8-34gc",
    "CGA-9xcx-rxrp-4p3c",
    "CGA-c6rg-gq9c-25r4",
    "CGA-c6rv-jrm4-4c9w",
    "CGA-c83f-hj9r-g69j",
    "CGA-c8m2-wpfg-2xj8",
    "CGA-c9hw-rw9x-jfr4",
    "CGA-ccwr-7v3q-fj74",
    "CGA-cg43-8p55-8pcq",
    "CGA-f284-vmpw-vjx3",
    "CGA-f36q-pxq2-fcrc",
    "CGA-f4mc-hjfp-gv4f",
    "CGA-f6p7-jp48-98xf",
    "CGA-f6w3-qx2h-4qgp",
    "CGA-fv4m-4gc8-8268",
    "CGA-g28f-c29m-hw2p",
    "CGA-gcxm-g6wm-pf53",
    "CGA-gfqw-6j74-cwfx",
    "CGA-gfw7-pgvr-88mc",
    "CGA-ggq8-cxgw-qjxv",
    "CGA-gr7q-jgc7-54rq",
    "CGA-h55c-c278-qc6f",
    "CGA-h9jp-5c73-pxm8",
    "CGA-hfg9-ffm6-5pq6",
    "CGA-hm7h-8f5p-6mpj",
    "CGA-hpj5-w22w-v7ch",
    "CGA-hv58-w8x4-c23w",
    "CGA-j3xc-p63v-f5q9",
    "CGA-j55f-r332-7gvw",
    "CGA-j7p4-vmmp-rh2j",
    "CGA-jmcp-59jf-xpgj",
    "CGA-jvv9-qxwp-c23q",
    "CGA-jwm7-vrfq-mhff",
    "CGA-jx6j-48fv-f5cc",
    "CGA-m22g-537h-9v7x",
    "CGA-m28x-j9vq-6hpp",
    "CGA-m6mw-6grp-pw57",
    "CGA-m8c4-wgh3-cg5x",
    "CGA-m8rx-957v-82qq",
    "CGA-mf9w-fxm7-h355",
    "CGA-mgmh-fx86-9gmw",
    "CGA-mw98-cfr7-jv47",
    "CGA-mx37-99r5-wq6h",
    "CGA-p26r-hq7f-3r2c",
    "CGA-p29v-5pc2-7383",
    "CGA-p478-57mq-j6q4",
    "CGA-pg72-8g7j-6v25",
    "CGA-pm9q-q9wg-484r",
    "CGA-pmc7-82wx-fmvm",
    "CGA-ppgp-9j4q-5ww5",
    "CGA-ppm3-xgwh-xfqq",
    "CGA-q64v-26v3-xmp8",
    "CGA-qfvg-4jp7-2589",
    "CGA-qg9f-jw8x-wv4h",
    "CGA-qx32-p2p2-fpfx",
    "CGA-r5j4-vf38-wx2g",
    "CGA-r6hg-4pqr-2jx7",
    "CGA-r7pq-h44w-849w",
    "CGA-r7qm-5495-cmpq",
    "CGA-rg29-gmw2-g6rc",
    "CGA-rg64-xfp3-r4pp",
    "CGA-rjx2-7m62-3m53",
    "CGA-rpqv-pqq3-6652",
    "CGA-v538-pwch-3q93",
    "CGA-vc6m-ffw4-wwqw",
    "CGA-vj3x-699g-q6jg",
    "CGA-vp5q-g93r-42xp",
    "CGA-w59c-9q3h-h2mf",
    "CGA-w825-836w-2w9g",
    "CGA-w86r-pffm-55cc",
    "CGA-w975-c4f8-45q3",
    "CGA-wh75-6393-93gr",
    "CGA-wwqf-m95f-qc23",
    "CGA-x6xm-4jp3-j76m",
    "CGA-x8wq-h8w3-jcxr",
    "CGA-x9gw-37hf-x7xm",
    "CGA-xff4-8fh6-gwjf",
    "CGA-xfh3-p4m3-9j8h",
    "CGA-xfh8-5m86-f927",
    "CGA-xm85-63gp-fj3m",
    "CGA-xqcx-h4rg-36x7",
    "CGA-xrwp-jgqc-qjpm",
    "CGA-xw6x-ghqr-pj84",
    "CGA-xx82-wm4j-j4mv",
    "CGA-xxfp-hhj7-cgfg"
  ],
  "summary": "mapstructure May Leak Sensitive Information in Logs When Processing Malformed Data",
  "details": "### Summary\n\nUse of this library in a security-critical context may result in leaking sensitive information, if used to process sensitive fields.\n\n### Details\n\nOpenBao (and presumably HashiCorp Vault) have surfaced error messages from `mapstructure` as follows:\n\nhttps://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L43-L50\n\n```go\n\t\t\t_, _, err := d.getPrimitive(field, schema)\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf(\"error converting input for field %q: %w\", field, err)\n\t\t\t}\n```\n\nwhere this calls `mapstructure.WeakDecode(...)`: https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L181-L193\n\n```go\n\nfunc (d *FieldData) getPrimitive(k string, schema *FieldSchema) (interface{}, bool, error) {\n\traw, ok := d.Raw[k]\n\tif !ok {\n\t\treturn nil, false, nil\n\t}\n\n\tswitch t := schema.Type; t {\n\tcase TypeBool:\n\t\tvar result bool\n\t\tif err := mapstructure.WeakDecode(raw, \u0026result); err != nil {\n\t\t\treturn nil, false, err\n\t\t}\n\t\treturn result, true, nil\n```\n\nNotably, `WeakDecode(...)` eventually calls one of the decode helpers, which surfaces the original value:\n\nhttps://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L679-L686\n\nhttps://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L726-L730\n\nhttps://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L783-L787\n\n\u0026 more.\n\n### PoC\n\nTo reproduce with OpenBao:\n\n```\n$ podman run -p 8300:8300 openbao/openbao:latest server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8300\n```\n\nand in a new tab:\n\n```\n$ BAO_TOKEN=root BAO_ADDR=http://localhost:8300 bao auth enable userpass\nSuccess! Enabled userpass auth method at: userpass/\n$ curl -X PUT -H \"X-Vault-Request: true\" -H \"X-Vault-Token: root\" -d '{\"password\":{\"asdf\":\"my-sensitive-value\"}}' \"http://localhost:8300/v1/auth/userpass/users/adsf\"\n{\"errors\":[\"error converting input for field \\\"password\\\": '' expected type 'string', got unconvertible type 'map[string]interface {}', value: 'map[asdf:my-sensitive-value]'\"]}\n```\n\n### Impact\n\nThis is an information disclosure bug with little mitigation. See https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717 for a previous version. That version was fixed, but this is in the second part of that error message (starting at `'' expected a map, got 'string'` -- when the field type is `string` and a `map` is provided, we see the above information leak -- the previous example had a `map` type field with a `string` value provided).\n\nThis was rated 4.5 Medium by HashiCorp in the past iteration.",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/go-viper/mapstructure/v2",
        "purl": "pkg:golang/github.com/go-viper/mapstructure/v2"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2.3.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/06/GHSA-fv92-fjc5-jj9h/GHSA-fv92-fjc5-jj9h.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/go-viper/mapstructure/security/advisories/GHSA-fv92-fjc5-jj9h"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/go-viper/mapstructure"
    }
  ]
}