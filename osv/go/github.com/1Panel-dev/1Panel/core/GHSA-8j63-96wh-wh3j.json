{
  "id": "GHSA-8j63-96wh-wh3j",
  "modified": "2025-08-26T20:26:49Z",
  "published": "2025-08-01T18:10:21Z",
  "aliases": [
    "CVE-2025-54424",
    "GO-2025-3834"
  ],
  "summary": "1Panel agent certificate verification bypass leading to arbitrary command execution",
  "details": "### Project Address: Project Address [1Panel](https://github.com/1Panel-dev/1Panel)\n### Official website: https://www.1panel.cn/\n### Time: 2025 07 26\n### Version: 1panel V2.0.5\n### Vulnerability Summary\n - First, we introduce the concepts of 1panel v2 Core and Agent. After the new version is released, 1panel adds the node management function, which allows you to control other hosts by adding nodes.\n - The HTTPS protocol used for communication between the Core and Agent sides did not fully verify the authenticity of the certificate during certificate verification, resulting in unauthorized interfaces. The presence of a large number of command execution or high-privilege interfaces in the 1panel led to RCE.\n\n![](https://github.com/user-attachments/assets/ebd0b388-d6c0-4678-98ee-47646e69ebe9)\n\n### Code audit process\n\n1. First we go to the Agent HTTP routing fileagent/init/router/router.go\n\n![](https://github.com/user-attachments/assets/dd9152a9-6677-4674-b75f-3b67dcedb321)\n\n2. It was found that the Routersreference function in the function Certificatewas globally checked.agent/middleware/certificate.go\n\n![](https://github.com/user-attachments/assets/5585f251-61e0-4603-8e9e-f50465f265ae)\n\n3. The discovery Certificatefunction determines c.Request.TLS.HandshakeCompletewhether certificate communication has been performed\n\n![](https://github.com/user-attachments/assets/5a50bdec-cc4d-4439-9b7b-98991ca4ff9c)\n\n4. Since c.Request.TLS.HandshakeCompletethe true or false judgment is determined by agent/server/server.gothe code Startfunctiontls.RequireAnyClientCert\n\n![](https://github.com/user-attachments/assets/3785b245-6e1f-44ff-9760-708b3e76560b)\n\nNote:：`Here due to the use of tls.RequireAnyClientCert instead of tls.RequireAndVerifyClientCert，RequireAnyClientCert Only require the client to provide a certificate，Does not verify the issuance of certificates CA，So any self assigned certificate will pass TLS handshake。`\n\n5. The subsequent Certificatefunction only verified that the CN field of the certificate was panel_client, without verifying the certificate issuer. Finally, it was discovered that the WebSocket connection could bypass Proxy-ID verification.\n\n![](https://github.com/user-attachments/assets/f521d75a-cd72-41b8-b90f-f10ffb923484)\n\n6. Process WebSocket interface (based on the above questions, all processes and other sensitive information can be obtained)\nrouting address: /process/ws\nthe request format is as follows\n```\n{\n  \"type\": \"ps\",           // 数据类型: ps(进程), ssh(SSH会话), net(网络连接), wget(下载进度)\n  \"pid\": 123,             // 可选，指定进程ID进行筛选\n  \"name\": \"process_name\", // 可选，根据进程名筛选\n  \"username\": \"user\"      // 可选，根据用户名筛选\n}\n```\n![](https://github.com/user-attachments/assets/011dc303-9316-4160-ad98-165c032f6e49)\n\n - Terminal SSH WebSocket interface (according to the above problem, any command can be executed)\nrouting address: /hosts/terminal\nthe request format is as follows\n```\n{\n  \"type\": \"cmd\",\n  \"data\": \"d2hvYW1pCg==\"  // \"whoami\" 的base64编码，记住不要忘记回车。\n}\n```\n![](https://github.com/user-attachments/assets/6f2ac997-8b32-4cb6-a64c-be33db845a76)\n\n - Container Terminal WebSocket interface (container execution command interface)\nrouting address:/containers/terminal\n    \n - File Download Process WebSocket interface (automatically push download progress information)\nrouting address:/files/wget/process\n\n### Attack process\n\n1. First generate a fake certificate\nopenssl req -x509 -newkey rsa:2048 -keyout panel_client.key -out panel_client.crt -days 365 -nodes -subj \"/CN=panel_client\"\n\n2. Then use the certificate to request verification. If the websocket interface is successfully connected, there is a vulnerability.\n\n![](https://github.com/user-attachments/assets/9e3016f8-ebe0-4dc9-b797-405c6a4aec89)\n\n![](https://github.com/user-attachments/assets/8076ad9c-da30-452f-9f42-83ae1d66f9ac)",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/1Panel-dev/1Panel/core",
        "purl": "pkg:golang/github.com/1Panel-dev/1Panel/core"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "1.0.0"
            },
            {
              "fixed": "2.0.6"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-8j63-96wh-wh3j/GHSA-8j63-96wh-wh3j.json"
      }
    },
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/1Panel-dev/1Panel/core",
        "purl": "pkg:golang/github.com/1Panel-dev/1Panel/core"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.0.0-20250730021757-04b9cbd87a15"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-8j63-96wh-wh3j/GHSA-8j63-96wh-wh3j.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-8j63-96wh-wh3j"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54424"
    },
    {
      "type": "WEB",
      "url": "https://github.com/1Panel-dev/1Panel/pull/9698/commits/4003284521f8d31ddaf7215d1c30ab8b4cdb0261"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/1Panel-dev/1Panel"
    },
    {
      "type": "WEB",
      "url": "https://github.com/1Panel-dev/1Panel/releases/tag/v2.0.6"
    },
    {
      "type": "WEB",
      "url": "https://pkg.go.dev/vuln/GO-2025-3834"
    }
  ]
}