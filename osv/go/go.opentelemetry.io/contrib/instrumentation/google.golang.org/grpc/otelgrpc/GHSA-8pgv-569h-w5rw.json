{
  "id": "GHSA-8pgv-569h-w5rw",
  "modified": "2024-10-22T05:28:53.341824Z",
  "published": "2023-11-12T15:55:39Z",
  "aliases": [
    "CGA-gw7m-mhvq-98vj",
    "CVE-2023-47108",
    "GO-2023-2331"
  ],
  "related": [
    "CGA-2f62-c37v-36ch",
    "CGA-2pp2-vvqg-pjc9",
    "CGA-4724-gqwp-98cg",
    "CGA-47f7-3fcw-jgwf",
    "CGA-49w7-5qh9-mhj3",
    "CGA-57h2-x7p8-6cv9",
    "CGA-6xx8-mv4h-5jw7",
    "CGA-93vq-hhw7-gpmj",
    "CGA-9p5f-vr5c-fg78",
    "CGA-c7wx-f339-pq6c",
    "CGA-chgm-c93p-4fx5",
    "CGA-fhj5-vmvm-65wx",
    "CGA-fq2c-pwr2-7xjm",
    "CGA-g5v2-x88p-vcmg",
    "CGA-hjqc-9fvr-hx3h",
    "CGA-hwmp-8m7m-62vm",
    "CGA-j5cg-4f4c-pj84",
    "CGA-j7wv-5m2f-gwvg",
    "CGA-jxx8-chxx-qf74",
    "CGA-m6qm-g2p7-5x2j",
    "CGA-mpvf-vpc6-gqrj",
    "CGA-mq4m-5c88-mp2v",
    "CGA-p6p3-r9mx-g3mv",
    "CGA-p9gj-9f4f-q6m5",
    "CGA-pxp9-vcpx-c9gv",
    "CGA-qcg5-9m5x-fr6w",
    "CGA-r8jw-h755-9w74",
    "CGA-vhgm-j33m-pp4m",
    "CGA-vjj6-53w2-5j3x",
    "CGA-vwc2-jf2w-fxjp",
    "CGA-w4g8-fq43-cj36",
    "CGA-wm75-8mm3-grrc",
    "CGA-wvf3-f4c4-5px5",
    "CGA-www6-wg4f-cp3w",
    "CGA-x4r6-3jhh-2h6f",
    "CGA-xcfj-23mp-rgxx",
    "CGA-xj35-w6rj-qj5r",
    "CGA-xxvv-x9hc-cprv",
    "CVE-2023-47108"
  ],
  "summary": "otelgrpc DoS vulnerability due to unbound cardinality metrics ",
  "details": "### Summary\n\nThe grpc Unary Server Interceptor [opentelemetry-go-contrib/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327)\n\n```\n// UnaryServerInterceptor returns a grpc.UnaryServerInterceptor suitable\n// for use in a grpc.NewServer call.\nfunc UnaryServerInterceptor(opts ...Option) grpc.UnaryServerInterceptor {\n```\n  \nout of the box adds labels\n\n- `net.peer.sock.addr`\n- `net.peer.sock.port`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent.\n\n### Details\n\nAn attacker can easily flood the peer address and port for requests.  \n\n### PoC\n\nApply the attached patch to the example and run the client multiple times.  Observe how each request will create a unique histogram and how the memory consumption increases during it.\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use  [UnaryServerInterceptor](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327), and does not filter any client IP address and ports via middleware or proxies, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities.\n\n* [GHSA-rcjv-mgp8-qvmr](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr) ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-5r5m-65gx-7vrh](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh \"GHSA-5r5m-65gx-7vrh\") ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-cg3q-j54f-5p7p](https://github.com/advisories/GHSA-cg3q-j54f-5p7p \"GHSA-cg3q-j54f-5p7p\") ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected, a view removing the attributes can be used.\n\nThe other possibility is to disable grpc metrics instrumentation by passing [`otelgrpc.WithMeterProvider`](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322), to be released with v0.46.0, the attributes were removed.\n\n### References\n\n- [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322)",
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc",
        "purl": "pkg:golang/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.46.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-8pgv-569h-w5rw/GHSA-8pgv-569h-w5rw.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-8pgv-569h-w5rw"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47108"
    },
    {
      "type": "WEB",
      "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322"
    },
    {
      "type": "WEB",
      "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/commit/b44dfc9092b157625a5815cb437583cee663333b"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/open-telemetry/opentelemetry-go-contrib"
    },
    {
      "type": "WEB",
      "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327"
    },
    {
      "type": "WEB",
      "url": "https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138"
    },
    {
      "type": "WEB",
      "url": "https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider"
    }
  ]
}