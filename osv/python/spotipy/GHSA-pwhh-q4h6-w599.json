{
  "id": "GHSA-pwhh-q4h6-w599",
  "modified": "2025-02-28T03:12:14.312209Z",
  "published": "2025-02-28T02:34:38Z",
  "aliases": [
    "CVE-2025-27154"
  ],
  "related": [
    "CVE-2025-27154"
  ],
  "summary": "Spotipy's cache file, containing spotify auth token, is created with overly broad permissions",
  "details": "### Summary\n\nThe `CacheHandler` class creates a cache file to store the auth token here: https://github.com/spotipy-dev/spotipy/blob/master/spotipy/cache_handler.py#L93-L98\n\nThe file created has `rw-r--r--` (644) permissions by default, when it could be locked down to `rw-------` (600) permissions. I think `600` is a sensible default.\n\n![image](https://github.com/user-attachments/assets/0b7ebbc1-a27a-4528-ab6a-135c7886766a)\n\n### Details\n\nThis leads to overly broad exposure of the spotify auth token. If this token can be read by an attacker (another user on the machine, or a process running as another user), it can be used to perform administrative actions on the Spotify account, depending on the scope granted to the token.\n\n### PoC\n\nRun an application that uses spotipy with client creation like this:\n\n```python\nfrom pathlib import Path\nimport spotipy\nfrom os import getenv\n\ndef create_spotify_client(client_id: str, client_secret: str) -\u003e spotipy.Spotify:\n    \"\"\"Create and return an authenticated Spotify client.\n\n    Args:\n        client_id: Spotify API client ID\n        client_secret: Spotify API client secret\n\n    Returns:\n        An authenticated Spotify client instance\n    \"\"\"\n    cache_path = Path.home() / \".cache\" / \"spotify-backup/.auth_cache\"\n    cache_path.parent.mkdir(parents=True, exist_ok=True)\n    cache_handler = spotipy.cache_handler.CacheFileHandler(cache_path=str(cache_path))\n\n    client = spotipy.Spotify(\n        auth_manager=spotipy.oauth2.SpotifyOAuth(\n            client_id=client_id,\n            client_secret=client_secret,\n            redirect_uri=\"http://localhost:8000/callback\",\n            cache_handler=cache_handler,\n            scope=[\n                \"user-library-read\",\n                \"playlist-read-private\",\n                \"playlist-read-collaborative\",\n            ],\n        )\n    )\n\n    return client\n\ncreate_spotify_client()\n```\n\nAnd then check the file permissions on the cache file that was created with:\n\n```bash\n$ ls -la ~/.cache/spotify-backup/.auth_cache`\n.rw-r--r--. alichtman alichtman 562 B Thu Feb 20 02:12:33 2025 ï€– /home/alichtman/.cache/spotify-backup/.auth_cache\n```\n\nIf this issue is combined with another misconfiguration, like having `o+r` permissions set on your home directory, an attacker will be able to read this file and steal this auth token.\n\nGood defense in depth would be to restrict read permissions on this cache file that contains an auth token\n\n### Impact\n\nPotential exposure of Spotify auth token to other users with access to the machine. A worst case scenario is if the token is granted all permissions, and can be used to do any of:\n\n- exfiltrate spotify likes / saved playlists\n- delete your content\n- modify your content w/o your permission\n\nIf someone were to discover an RCE in Spotify that you could trigger on a machine by having a song played (or song metadata parsed or something), this auth token could maybe be used to add a song to a playlist, or control playback (allowing further exploitation).",
  "affected": [
    {
      "package": {
        "ecosystem": "PyPI",
        "name": "spotipy",
        "purl": "pkg:pypi/spotipy"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2.25.1"
            }
          ]
        }
      ],
      "versions": [
        "0.1",
        "0.2",
        "2.0.1",
        "2.0.2",
        "2.1.0",
        "2.10.0",
        "2.11.0",
        "2.11.1",
        "2.11.2",
        "2.12.0",
        "2.13.0",
        "2.14.0",
        "2.15.0",
        "2.16.0",
        "2.16.1",
        "2.17.0",
        "2.17.1",
        "2.18.0",
        "2.19.0",
        "2.19.0rc1",
        "2.2.0",
        "2.20.0",
        "2.21.0",
        "2.22.0",
        "2.22.1",
        "2.23.0",
        "2.24.0",
        "2.25.0",
        "2.3.0",
        "2.3.2",
        "2.3.3",
        "2.3.4",
        "2.3.5",
        "2.3.6",
        "2.3.7",
        "2.3.8",
        "2.4.0",
        "2.4.1",
        "2.4.2",
        "2.4.3",
        "2.4.4",
        "2.5.0",
        "2.6.0",
        "2.6.1",
        "2.6.2",
        "2.6.3",
        "2.7.0",
        "2.7.1",
        "2.8.0",
        "2.9.0"
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-pwhh-q4h6-w599/GHSA-pwhh-q4h6-w599.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/spotipy-dev/spotipy/security/advisories/GHSA-pwhh-q4h6-w599"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27154"
    },
    {
      "type": "WEB",
      "url": "https://github.com/spotipy-dev/spotipy/commit/1ca453f6ef87a2a9e9876f52b6cb38d13532ccf2"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/spotipy-dev/spotipy"
    },
    {
      "type": "WEB",
      "url": "https://github.com/spotipy-dev/spotipy/blob/master/spotipy/cache_handler.py#L93-L98"
    },
    {
      "type": "WEB",
      "url": "https://github.com/spotipy-dev/spotipy/releases/tag/2.25.1"
    }
  ]
}