{
  "id": "GHSA-r7vq-6425-j94w",
  "modified": "2023-04-11T01:45:13.955790Z",
  "published": "2022-09-15T03:35:12Z",
  "summary": "Python-TUF vulnerable to incorrect threshold signature computation for new root metadata",
  "details": "### Impact\n\nThe function `_verify_root_self_signed()`, introduced in [v0.14.0](https://github.com/theupdateframework/tuf/releases/tag/v0.14.0), and which verifies self-signatures in a new root metadata file, counted multiple signatures by any new root key towards the new threshold. That is, any single new root key could theoretically provide enough signatures to meet the threshold for new key self-signatures required during root metadata update.\n\nA scenario where this attack could be relevant is amazingly unlikely in practice to the point where labeling this issue as a security advisory is potentially overstating the impact of the issue. Given that new root keys only become trusted by the client after a successful root metadata update, which also requires the quorum of signatures from old trusted root keys, this issue has been evaluated as low in severity.\n\nIn particular, in order to exploit this vulnerability, an attacker must:\n\n1. Control one new root key.\n2. Craft a new root metadata file such that there is a number of signatures by this new root key greater than or equal to the new threshold.\n3. Cause a valid threshold of the old root keys to sign this new root metadata file.\n4. Cause this new root metadata file to be published on the repository.\n5. Cause clients to rotate to this new root metadata file.\n\n### Patches\nA [fix](https://github.com/theupdateframework/tuf/commit/83ac7be525b733f79a7e9bc573ec580ec835f179) is available since [version 0.16.0](https://github.com/theupdateframework/tuf/releases/tag/v0.16.0).\n\n### Workarounds\nNo workarounds are known for this issue.\n\n### References\n* Pull request resolving the issue [PR 1218](https://github.com/theupdateframework/tuf/pull/1218)\n* Pull request which introduced the faulty computation of signature threshold on new root metadata [PR 1101](https://github.com/theupdateframework/tuf/pull/1101)\n* A similar previous issue with incorrectly computed signature thresholds in tuf is described in [GHSA-pwqf-9h7j-7mv8](https://github.com/theupdateframework/tuf/security/advisories/GHSA-pwqf-9h7j-7mv8)",
  "affected": [
    {
      "package": {
        "ecosystem": "PyPI",
        "name": "tuf",
        "purl": "pkg:pypi/tuf"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0.14.0"
            },
            {
              "fixed": "0.16.0"
            }
          ]
        }
      ],
      "versions": [
        "0.14.0",
        "0.15.0"
      ],
      "database_specific": {
        "last_known_affected_version_range": "\u003c= 0.15.0",
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/09/GHSA-r7vq-6425-j94w/GHSA-r7vq-6425-j94w.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/python-tuf/security/advisories/GHSA-pwqf-9h7j-7mv8"
    },
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/python-tuf/security/advisories/GHSA-r7vq-6425-j94w"
    },
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/python-tuf/pull/1218"
    },
    {
      "type": "WEB",
      "url": "https://github.com/theupdateframework/tuf/pull/1101"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/theupdateframework/python-tuf"
    }
  ]
}