{
  "id": "PYSEC-2021-322",
  "modified": "2024-03-15T00:05:20.369060Z",
  "published": "2021-09-17T20:15:00Z",
  "aliases": [
    "CVE-2021-39216",
    "CVE-2021-39218",
    "CVE-2021-39219",
    "GHSA-4873-36h9-wv49",
    "GHSA-q879-9g95-56mx",
    "GHSA-v4cp-h94r-m7xf",
    "PYSEC-2021-320",
    "PYSEC-2021-321",
    "RUSTSEC-2021-0110"
  ],
  "details": "Wasmtime is an open source runtime for WebAssembly \u0026 WASI. Wasmtime before version 0.30.0 is affected by a type confusion vulnerability. As a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type. Triggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`). It's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small. The fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime. This bug has been patched and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`.",
  "affected": [
    {
      "package": {
        "ecosystem": "PyPI",
        "name": "wasmtime",
        "purl": "pkg:pypi/wasmtime"
      },
      "ranges": [
        {
          "type": "GIT",
          "repo": "https://github.com/bytecodealliance/wasmtime",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "b39f087414f27ae40c44449ed5d1154e03449bff"
            }
          ]
        },
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.30.0"
            }
          ]
        }
      ],
      "versions": [
        "0.0.1",
        "0.0.2",
        "0.11.0",
        "0.12.0",
        "0.15.0",
        "0.15.1",
        "0.16.0",
        "0.16.1",
        "0.17.0",
        "0.18.0",
        "0.18.1",
        "0.18.2",
        "0.19.0",
        "0.20.0",
        "0.21.0",
        "0.22.0",
        "0.23.0",
        "0.24.0",
        "0.25.0",
        "0.26.0",
        "0.27.0",
        "0.28.0",
        "0.28.1",
        "0.29.0",
        "0.9.0"
      ],
      "database_specific": {
        "source": "https://github.com/pypa/advisory-database/blob/main/vulns/wasmtime/PYSEC-2021-322.yaml"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://crates.io/crates/wasmtime"
    },
    {
      "type": "FIX",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/b39f087414f27ae40c44449ed5d1154e03449bff"
    },
    {
      "type": "ADVISORY",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx"
    }
  ]
}