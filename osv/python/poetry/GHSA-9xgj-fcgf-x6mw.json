{
  "id": "GHSA-9xgj-fcgf-x6mw",
  "modified": "2024-02-16T08:22:41.881897Z",
  "published": "2022-09-16T19:26:59Z",
  "aliases": [
    "CVE-2022-36069",
    "PYSEC-2022-266"
  ],
  "summary": "Poetry Argument Injection can lead to Local Code Execution",
  "details": "### Observation\n\nWhen handling dependencies that come from a Git repository instead of a registry, Poetry uses various commands, such as `git clone`. These commands are being constructed using user input (e.g. the repository URL). When building the commands, Poetry correctly avoids Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (`-`) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables.\n\nTo clone a repository, Poetry builds a git clone command, but fails to validate or sanitize the repository location properly:\n\n[`poetry/core/vcs/git.py`](https://github.com/python-poetry/poetry-core/blob/ad33bc2f92be03dc5b31a666664903c439fb1173/poetry/core/vcs/git.py#L207):\n\n```python\ndef clone(self, repository: str, dest: Path) -\u003e str:\n    return self.run(\"clone\", \"--recurse-submodules\", repository, str(dest))\n```\n\nSince this value comes from the `pyproject.toml` file, it can contain any character, including a leading dash.\n\n### Impact\n\nThis vulnerability can lead to Arbitrary Code Execution, which would lead to the takeover of the system. If a developer is exploited, the attacker could steal credentials or persist their access. If the exploit happens on a server, the attackers could use their access to attack other internal systems.\nSince this vulnerability requires a fair amount of user interaction, it is not as dangerous as a remotely exploitable one. However, it still puts developers at risk when dealing with untrusted files in a way they think is safe, because the exploit still works when the victim tries to make sure nothing can happen, e.g. by vetting any Git or Poetry config files that might be present in the directory.\nThis kind of attack vector has been used in the past to target security researchers by sending them projects to collaborate on, so we believe that there is a non-negligible risk.\n\n### Patches\n\n1.1.8 || 1.2.0b1\n\n### Remediation\n\nUpgrade to version 1.1.9 || 1.2.0b1\n\n### References\n\n[Fix PR](https://github.com/python-poetry/poetry-core/pull/202)\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@python-poetry.org](mailto:security@python-poetry.org)\n",
  "affected": [
    {
      "package": {
        "ecosystem": "PyPI",
        "name": "poetry",
        "purl": "pkg:pypi/poetry"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.1.9"
            }
          ]
        }
      ],
      "versions": [
        "0.1.0",
        "0.10.0",
        "0.10.0a0",
        "0.10.0a1",
        "0.10.0a2",
        "0.10.0a3",
        "0.10.1",
        "0.10.2",
        "0.10.3",
        "0.11.0",
        "0.11.0a0",
        "0.11.0a1",
        "0.11.0a2",
        "0.11.0a3",
        "0.11.0a4",
        "0.11.1",
        "0.11.2",
        "0.11.3",
        "0.11.4",
        "0.11.5",
        "0.12.0",
        "0.12.0a0",
        "0.12.0a1",
        "0.12.0a2",
        "0.12.0a3",
        "0.12.0a4",
        "0.12.0a5",
        "0.12.1",
        "0.12.10",
        "0.12.11",
        "0.12.12",
        "0.12.13",
        "0.12.14",
        "0.12.15",
        "0.12.16",
        "0.12.17",
        "0.12.2",
        "0.12.3",
        "0.12.4",
        "0.12.5",
        "0.12.6",
        "0.12.7",
        "0.12.8",
        "0.12.9",
        "0.2.0",
        "0.3.0",
        "0.4.0",
        "0.4.0.post1",
        "0.4.1",
        "0.4.2",
        "0.5.0",
        "0.5.0b1",
        "0.5.0b2",
        "0.6.0",
        "0.6.1",
        "0.6.2",
        "0.6.3",
        "0.6.3b1",
        "0.6.3b2",
        "0.6.3b3",
        "0.6.3b4",
        "0.6.3b5",
        "0.6.3b6",
        "0.6.3b7",
        "0.6.4",
        "0.6.4b1",
        "0.6.5",
        "0.7.0",
        "0.7.0b1",
        "0.7.0b2",
        "0.7.0b3",
        "0.7.0b4",
        "0.7.1",
        "0.8.0",
        "0.8.0a0",
        "0.8.0a1",
        "0.8.0a2",
        "0.8.0a3",
        "0.8.0a4",
        "0.8.1",
        "0.8.1a0",
        "0.8.2",
        "0.8.3",
        "0.8.4",
        "0.8.5",
        "0.8.5a0",
        "0.8.6",
        "0.9.0",
        "0.9.0a0",
        "0.9.0a1",
        "0.9.0a2",
        "0.9.0a3",
        "0.9.1",
        "1.0.0",
        "1.0.0a0",
        "1.0.0a1",
        "1.0.0a2",
        "1.0.0a3",
        "1.0.0a4",
        "1.0.0a5",
        "1.0.0b1",
        "1.0.0b2",
        "1.0.0b3",
        "1.0.0b4",
        "1.0.0b5",
        "1.0.0b6",
        "1.0.0b7",
        "1.0.0b8",
        "1.0.0b9",
        "1.0.1",
        "1.0.10",
        "1.0.2",
        "1.0.3",
        "1.0.4",
        "1.0.5",
        "1.0.6",
        "1.0.7",
        "1.0.8",
        "1.0.9",
        "1.1.0",
        "1.1.0a1",
        "1.1.0a2",
        "1.1.0a3",
        "1.1.0b1",
        "1.1.0b2",
        "1.1.0b3",
        "1.1.0b4",
        "1.1.0rc1",
        "1.1.1",
        "1.1.2",
        "1.1.3",
        "1.1.4",
        "1.1.5",
        "1.1.6",
        "1.1.7",
        "1.1.8"
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/09/GHSA-9xgj-fcgf-x6mw/GHSA-9xgj-fcgf-x6mw.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36069"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-266.yaml"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/python-poetry/poetry"
    },
    {
      "type": "WEB",
      "url": "https://github.com/python-poetry/poetry/releases/tag/1.1.9"
    },
    {
      "type": "WEB",
      "url": "https://github.com/python-poetry/poetry/releases/tag/1.2.0b1"
    },
    {
      "type": "WEB",
      "url": "https://www.sonarsource.com/blog/securing-developer-tools-package-managers"
    }
  ]
}