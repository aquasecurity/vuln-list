{
  "id": "GHSA-w2gf-jxc9-pf2q",
  "modified": "2025-01-21T21:26:53.415979Z",
  "published": "2025-01-21T21:07:56Z",
  "aliases": [
    "CVE-2024-41672",
    "PYSEC-2024-203"
  ],
  "related": [
    "CVE-2024-41672",
    "PYSEC-2024-203"
  ],
  "summary": "sniff_csv provides filesystem access even when enable_external_access is disabled in duckdb",
  "details": "### Summary\nContent in filesystem is accessible for reading using `sniff_csv`, even with `enable_external_access=false`. \n\n### Details\nDuring a pentest, a security researcher was able to access environment variable data and other system data by using the `sniff_csv` function, even though we set `enable_external_access` to false. \n\n### PoC\n```SQL\nSET enable_external_access=false;\nSET lock_configuration=true;\n\nSELECT Columns FROM sniff_csv('/proc/self/environ');\n```\n\n### Impact\nProvides an attacker with access to filesystem even when access is expected to be disabled and other similar functions do NOT provide access. \n\nFor example `select * from read_csv('/proc/self/environ')` fails with a permission error. \n\nThere seems to be two vectors to this vulnerability: \n1. Access to files that should otherwise not be allowed. (We expect `Permission Error: Scanning CSV files is disabled through configuration` and not to provide any access to the file or even acknowledge that it exists). \n2. The content from a (non-csv?) file can be read (e.g. `/etc/hosts`, `proc/self/environ`, etc) even though that doesn't seem to be the intent of the sniff_csv function (my understanding is it's intending to provide information about the shape of the data, but not provide the data itself). \n\n### Workaround\nIt is possible to work around the issue by disabling the local file system using the `disabled_filesystems` setting:\n```SQL\nSET disabled_filesystems='LocalFileSystem';\nSET lock_configuration=true;\n\nSELECT Columns FROM sniff_csv('/proc/self/environ');\n```\n\nwill result in `Permission Error: File system LocalFileSystem has been disabled by configuration`.\n\n### Fix\nA fix has been merged into the `main` branch (https://github.com/duckdb/duckdb/pull/13133), and will be released with the next DuckDB release.\n\n",
  "affected": [
    {
      "package": {
        "ecosystem": "PyPI",
        "name": "duckdb",
        "purl": "pkg:pypi/duckdb"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "1.0.0"
            },
            {
              "fixed": "1.1.0"
            }
          ]
        }
      ],
      "versions": [
        "1.0.0"
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/01/GHSA-w2gf-jxc9-pf2q/GHSA-w2gf-jxc9-pf2q.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/duckdb/duckdb/security/advisories/GHSA-w2gf-jxc9-pf2q"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-41672"
    },
    {
      "type": "WEB",
      "url": "https://github.com/duckdb/duckdb/pull/13133"
    },
    {
      "type": "WEB",
      "url": "https://github.com/duckdb/duckdb/commit/c9b7c98aa0e1cd7363fe8bb8543a95f38e980d8a"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/duckdb/duckdb"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pypa/advisory-database/tree/main/vulns/duckdb/PYSEC-2024-203.yaml"
    }
  ]
}