{
  "id": "GHSA-2gxp-6r36-m97r",
  "modified": "2025-07-23T18:50:09.083672Z",
  "published": "2025-07-21T14:08:40Z",
  "aliases": [
    "CVE-2025-53528",
    "PYSEC-2025-71"
  ],
  "summary": "Cadwyn vulnerable to XSS on the docs page",
  "details": "### Summary\nThe `version` parameter of the `/docs` endpoint is vulnerable to a Reflected XSS (Cross-Site Scripting) attack.\n\n### PoC\n1. Setup a minimal app following the quickstart guide: https://docs.cadwyn.dev/quickstart/setup/\n2. Click on the following PoC link: http://localhost:8000/docs?version=%27%2balert(document.domain)%2b%27\n\n### Impact\nRefer to this [security advisory](https://github.com/Visionatrix/Visionatrix/security/advisories/GHSA-w36r-9jvx-q48v) for an example of the impact of a similar vulnerability that shares the same root cause.\n\nThis XSS would notably allow an attacker to execute JavaScript code on a user's session for any application based on `Cadwyn` via a one-click attack.\n\nA CVSS for the average case may be: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:L/A:L\n\n### Details\nThe vulnerable code snippet can be found in the 2 functions `swagger_dashboard` and `redoc_dashboard`: https://github.com/zmievsa/cadwyn/blob/main/cadwyn/applications.py#L387-L413\n\nThe implementation uses the [get_swagger_ui_html](https://fastapi.tiangolo.com/reference/openapi/docs/?h=get_swagger_ui_html#fastapi.openapi.docs.get_swagger_ui_html) function from FastAPI. This function does not encode or sanitize its arguments before using them to generate the HTML for the swagger documentation page and is not intended to be used with user-controlled arguments.\n\n```python\n    async def swagger_dashboard(self, req: Request) -\u003e Response:\n        version = req.query_params.get(\"version\")\n\n        if version:\n            root_path = self._extract_root_path(req)\n            openapi_url = root_path + f\"{self.openapi_url}?version={version}\"\n            oauth2_redirect_url = self.swagger_ui_oauth2_redirect_url\n            if oauth2_redirect_url:\n                oauth2_redirect_url = root_path + oauth2_redirect_url\n            return get_swagger_ui_html(\n                openapi_url=openapi_url,\n                title=f\"{self.title} - Swagger UI\",\n                oauth2_redirect_url=oauth2_redirect_url,\n                init_oauth=self.swagger_ui_init_oauth,\n                swagger_ui_parameters=self.swagger_ui_parameters,\n            )\n        return self._render_docs_dashboard(req, cast(\"str\", self.docs_url))\n```\n\nIn this case, the `openapi_url` variable contains the version which comes from a user supplied query string without encoding or sanitisation. The user controlled injection ends up inside of a string in a `\u003cscript\u003e` tag context: https://github.com/fastapi/fastapi/blob/master/fastapi/openapi/docs.py#L132\n\n```python\n    f\"\"\"\n    ...\n    const ui = SwaggerUIBundle({{\n        url: '{openapi_url}',\n    \"\"\"\n```\n\nBy simply injecting a single quote we can escape from the string context and execute JavaScript like so `'+alert(document.domain)+'`\n\nThe resulting HTML sent back from the server contains the following injection:\n\n```python\n  const ui = SwaggerUIBundle({\n        url: '/openapi/flows.json?flows='+alert(document.domain)+'',\n```",
  "affected": [
    {
      "package": {
        "ecosystem": "PyPI",
        "name": "cadwyn",
        "purl": "pkg:pypi/cadwyn"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.4.3"
            }
          ]
        }
      ],
      "versions": [
        "0.1.0",
        "0.2.0",
        "1.0.0",
        "1.0.1",
        "1.0.2",
        "1.0.3",
        "1.1.0",
        "1.2.0",
        "1.3.0",
        "2.0.0",
        "2.0.1",
        "2.0.2",
        "2.0.3",
        "2.0.4",
        "2.0.5",
        "2.1.0",
        "2.1.0rc0",
        "2.1.0rc1",
        "2.2.0",
        "2.3.0",
        "2.3.0rc0",
        "2.3.1",
        "2.3.2",
        "2.3.3",
        "2.3.4",
        "2.3.5",
        "3.0.0",
        "3.0.1",
        "3.0.2",
        "3.1.0",
        "3.1.1",
        "3.1.2",
        "3.1.3",
        "3.1.4",
        "3.10.0",
        "3.10.1",
        "3.11.0",
        "3.11.1",
        "3.12.0",
        "3.12.1",
        "3.13.0",
        "3.14.0",
        "3.15.0",
        "3.15.1",
        "3.15.10",
        "3.15.2",
        "3.15.3",
        "3.15.3a1",
        "3.15.3a2",
        "3.15.4",
        "3.15.5",
        "3.15.6",
        "3.15.7",
        "3.15.8",
        "3.15.9",
        "3.2.0",
        "3.3.0",
        "3.3.1",
        "3.3.2",
        "3.3.3",
        "3.3.4",
        "3.4.0",
        "3.4.0.dev0",
        "3.4.1",
        "3.4.2",
        "3.4.3",
        "3.4.4",
        "3.4.5",
        "3.5.0",
        "3.6.0",
        "3.6.0.dev0",
        "3.6.1",
        "3.6.2",
        "3.6.3",
        "3.6.4",
        "3.6.5",
        "3.6.6",
        "3.7.0",
        "3.7.1",
        "3.8.0",
        "3.9.0",
        "3.9.1",
        "4.0.0",
        "4.1.0",
        "4.2.0",
        "4.2.1",
        "4.2.2",
        "4.2.3",
        "4.2.4",
        "4.3.0",
        "4.3.1",
        "4.4.0",
        "4.4.1",
        "4.4.2",
        "4.4.3",
        "4.4.5",
        "4.5.0",
        "4.6.0",
        "4.6.0a1",
        "5.0.0",
        "5.0.0a1",
        "5.1.0",
        "5.1.0a1",
        "5.1.1",
        "5.1.2",
        "5.1.3",
        "5.1.4",
        "5.2.0",
        "5.2.1",
        "5.2.2",
        "5.3.0",
        "5.3.1",
        "5.3.2",
        "5.3.3",
        "5.4.1",
        "5.4.2"
      ],
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/07/GHSA-2gxp-6r36-m97r/GHSA-2gxp-6r36-m97r.json"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/zmievsa/cadwyn/security/advisories/GHSA-2gxp-6r36-m97r"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-53528"
    },
    {
      "type": "WEB",
      "url": "https://github.com/zmievsa/cadwyn/commit/b424ecd57cd8dabbc8fe39b8f8ccafea629c7728"
    },
    {
      "type": "WEB",
      "url": "https://github.com/pypa/advisory-database/tree/main/vulns/cadwyn/PYSEC-2025-71.yaml"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/zmievsa/cadwyn"
    },
    {
      "type": "WEB",
      "url": "https://github.com/zmievsa/cadwyn/blob/5.4.3/CHANGELOG.md#543"
    }
  ]
}