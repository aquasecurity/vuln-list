{
 "ID": 1096,
 "Name": "Singleton Class Instance Creation without Proper Locking or Synchronization",
 "Description": "The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.",
 "PotentialMitigations": {
  "Mitigation": null
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": null
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Other"
    ],
    "Impact": [
     "Reduce Reliability"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "This issue can prevent the product from running reliably, e.g. by making the instantiation process non-thread-safe and introducing deadlock (CWE-833) or livelock conditions.  If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability."
 ]
}