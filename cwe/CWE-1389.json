{
 "Description": "The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).",
 "ExtendedDescription": [
  "Frequently, a numeric input that begins with \"0\" is treated as octal, or \"0x\" causes it to be treated as hexadecimal, e.g. by the inet_addr() function. For example, \"023\" (octal) is 35 decimal, or \"0x31\" is 49 decimal. Other bases may be used as well. If the developer assumes decimal-only inputs, the code could produce incorrect numbers when the inputs are parsed using a different base. This can result in unexpected and/or dangerous behavior. For example, a \"0127.0.0.1\" IP address is parsed as octal due to the leading \"0\", whose numeric value would be the same as 87.0.0.1 (decimal), where the developer likely expected to use 127.0.0.1.",
  "The consequences vary depending on the surrounding code in which this weakness occurs, but they can include bypassing network-based access control using unexpected IP addresses or netmasks, or causing apparently-symbolic identifiers to be processed as if they are numbers. In web applications, this can enable bypassing of SSRF restrictions."
 ],
 "RelatedWeaknesses": {
  "RelatedWeakness": [
   {
    "Nature": "ChildOf",
    "CWEID": 704,
    "ViewID": 1000,
    "ChainID": 0,
    "Ordinal": "Primary"
   }
  ]
 },
 "WeaknessOrdinalities": {
  "WeaknessOrdinality": null
 },
 "ApplicablePlatforms": {
  "Language": [
   {
    "Name": "",
    "Class": "Not Language-Specific",
    "Prevalence": "Undetermined"
   }
  ],
  "OperatingSystem": null,
  "Architecture": null,
  "Technology": [
   {
    "Name": "",
    "Class": "Not Technology-Specific",
    "Prevalence": "Undetermined"
   }
  ]
 },
 "BackgroundDetails": {
  "BackgroundDetail": null
 },
 "AlternateTerms": {
  "AlternateTerm": null
 },
 "ModesOfIntroduction": {
  "Introduction": [
   {
    "Phase": "Implementation",
    "Note": null
   },
   {
    "Phase": "Implementation",
    "Note": null
   }
  ]
 },
 "ExploitationFactors": {
  "ExploitationFactor": null
 },
 "LikelihoodOfExploit": "",
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality"
    ],
    "Impact": [
     "Read Application Data"
    ],
    "Likelihood": "Unknown",
    "Note": null,
    "ConsequenceID": ""
   },
   {
    "Scope": [
     "Integrity"
    ],
    "Impact": [
     "Bypass Protection Mechanism",
     "Alter Execution Logic"
    ],
    "Likelihood": "Unknown",
    "Note": null,
    "ConsequenceID": ""
   }
  ]
 },
 "DetectionMethods": {
  "DetectionMethod": null
 },
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "Enforcement by Conversion",
    "Description": null,
    "Effectiveness": "",
    "EffectivenessNotes": null,
    "MitigationID": ""
   },
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "Input Validation",
    "Description": null,
    "Effectiveness": "",
    "EffectivenessNotes": null,
    "MitigationID": ""
   },
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "Input Validation",
    "Description": null,
    "Effectiveness": "",
    "EffectivenessNotes": null,
    "MitigationID": ""
   }
  ]
 },
 "DemonstrativeExamples": {
  "DemonstrativeExample": [
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": null,
    "ExampleCode": {
     "Items": [
      "\n\t\t\t\t\t  import subprocess\n\t\t\t\t\t  \n\t\t\t\t\t  def validate_ip(ip: str):\n\t\t\t\t\t  \n\t\t\t\t\t  \n\t\t\t\t\t  def run_ping(ip: str):\n\t\t\t\t\t  \n\t\t\t\t\t"
     ],
     "Language": "Python",
     "Nature": "Bad"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": ""
   },
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": null,
    "ExampleCode": {
     "Items": [
      "\n\t\t\t\t\t  import subprocess\n\t\t\t\t\t  import re\n\t\t\t\t\t  \n\t\t\t\t\t  def validate_ip_regex(ip: str):\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t\tdef run_ping_regex(ip: str):\n\t\t\t\t      \n\t\t\t\t\t"
     ],
     "Language": "Python",
     "Nature": "Bad"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": "DX-154"
   },
   {
    "TitleText": "",
    "IntroText": [
     "Consider the following scenario, inspired by CWE team member Kelly Todd.",
     "Kelly wants to set up monitoring systems for his two cats, who pose very different threats. One cat, Night, tweets embarrassing or critical comments about his owner in ways that could cause reputational damage, so Night's blog needs to be monitored regularly. The other cat, Taki, likes to distract Kelly and his coworkers during business meetings with cute meows, so Kelly monitors Taki's location using a different web site.",
     "Suppose /etc/hosts provides the site info as follows:"
    ],
    "BodyText": null,
    "ExampleCode": {
     "Items": [
      "\n\t\t\t\t\t  taki.example.com 10.1.0.7\n\t\t\t\t\t  night.example.com 010.1.0.8\n\t\t\t\t\t"
     ],
     "Language": "Other",
     "Nature": "Bad"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": ""
   }
  ]
 },
 "ObservedExamples": {
  "ObservedExample": [
   {
    "Reference": "CVE-2021-29662",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29662"
   },
   {
    "Reference": "CVE-2021-28918",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2021-28918"
   },
   {
    "Reference": "CVE-2021-29921",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29921"
   },
   {
    "Reference": "CVE-2021-29923",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29923"
   },
   {
    "Reference": "CVE-2021-29424",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2021-29424"
   },
   {
    "Reference": "CVE-2016-4029",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2016-4029"
   },
   {
    "Reference": "CVE-2020-13776",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2020-13776"
   }
  ]
 },
 "FunctionalAreas": {
  "FunctionalArea": null
 },
 "AffectedResources": {
  "AffectedResource": null
 },
 "TaxonomyMappings": {
  "TaxonomyMapping": null
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": null
 },
 "References": {
  "Reference": [
   {
    "ExternalReferenceID": "REF-1284",
    "Section": ""
   }
  ]
 },
 "MappingNotes": {
  "Usage": "Allowed",
  "Rationale": null,
  "Comments": null,
  "Reasons": {
   "Reason": [
    {
     "Type": "Acceptable-Use"
    }
   ]
  },
  "Suggestions": {
   "Suggestion": null
  }
 },
 "Notes": {
  "Note": null
 },
 "ContentHistory": {
  "Submission": {
   "SubmissionName": "Anonymous External Contributor",
   "SubmissionOrganization": "",
   "SubmissionDate": "2021-05-28T00:00:00Z",
   "SubmissionVersion": "4.9",
   "SubmissionReleaseDate": "2022-10-13T00:00:00Z",
   "SubmissionComment": ""
  },
  "Modification": [
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-04-27T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Relationships, Time_of_Introduction"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-06-29T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Mapping_Notes"
   }
  ],
  "Contribution": null,
  "PreviousEntryName": null
 },
 "ID": 1389,
 "Name": "Incorrect Parsing of Numbers with Different Radices",
 "Abstraction": "Base",
 "Structure": "Simple",
 "Status": "Incomplete",
 "Diagram": ""
}