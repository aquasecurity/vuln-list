{
 "Description": "The product provides software-controllable\n\t\t\tdevice functionality for capabilities such as power and\n\t\t\tclock management, but it does not properly limit\n\t\t\tfunctionality that can lead to modification of\n\t\t\thardware memory or register bits, or the ability to\n\t\t\tobserve physical side channels.",
 "ExtendedDescription": [
  "It is frequently assumed that physical attacks\n              such as fault injection and side-channel analysis\n              require an attacker to have physical access to the\n              target device.  This assumption may be false if the\n              device has improperly secured power management features,\n              or similar features.  For mobile devices, minimizing\n              power consumption is critical, but these devices run a\n              wide variety of applications with different performance\n              requirements. Software-controllable mechanisms to\n              dynamically scale device voltage and frequency and\n              monitor power consumption are common features in today's\n              chipsets, but they also enable attackers to mount fault\n              injection and side-channel attacks without having\n              physical access to the device.",
  "Fault injection attacks involve strategic\n              manipulation of bits in a device to achieve a desired\n              effect such as skipping an authentication step,\n              elevating privileges, or altering the output of a\n              cryptographic operation.  Manipulation of the device\n              clock and voltage supply is a well-known technique to\n              inject faults and is cheap to implement with physical\n              device access.  Poorly protected power management\n              features allow these attacks to be performed from\n              software.  Other features, such as the ability to write\n              repeatedly to DRAM at a rapid rate from unprivileged\n              software, can result in bit flips in other memory\n              locations (Rowhammer, [REF-1083]).",
  "Side channel analysis requires gathering\n\t\t\t  measurement traces of physical quantities such as power\n\t\t\t  consumption.  Modern processors often include power\n\t\t\t  metering capabilities in the hardware itself (e.g.,\n\t\t\t  Intel RAPL) which if not adequately protected enable\n\t\t\t  attackers to gather measurements necessary for\n\t\t\t  performing side-channel attacks from software."
 ],
 "RelatedWeaknesses": {
  "RelatedWeakness": [
   {
    "Nature": "ChildOf",
    "CWEID": 285,
    "ViewID": 1000,
    "ChainID": 0,
    "Ordinal": "Primary"
   }
  ]
 },
 "WeaknessOrdinalities": {
  "WeaknessOrdinality": [
   {
    "Ordinality": "Primary",
    "Description": ""
   }
  ]
 },
 "ApplicablePlatforms": {
  "Language": [
   {
    "Name": "",
    "Class": "Not Language-Specific",
    "Prevalence": "Undetermined"
   }
  ],
  "OperatingSystem": [
   {
    "Name": "",
    "Version": "",
    "CPEID": "",
    "Class": "Not OS-Specific",
    "Prevalence": "Undetermined"
   }
  ],
  "Architecture": [
   {
    "Name": "",
    "Class": "Not Architecture-Specific",
    "Prevalence": "Undetermined"
   }
  ],
  "Technology": [
   {
    "Name": "",
    "Class": "Not Technology-Specific",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "Memory Hardware",
    "Class": "",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "Power Management Hardware",
    "Class": "",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "Clock/Counter Hardware",
    "Class": "",
    "Prevalence": "Undetermined"
   }
  ]
 },
 "BackgroundDetails": {
  "BackgroundDetail": null
 },
 "AlternateTerms": {
  "AlternateTerm": null
 },
 "ModesOfIntroduction": {
  "Introduction": [
   {
    "Phase": "Architecture and Design",
    "Note": null
   },
   {
    "Phase": "Implementation",
    "Note": null
   }
  ]
 },
 "ExploitationFactors": {
  "ExploitationFactor": null
 },
 "LikelihoodOfExploit": "",
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Integrity"
    ],
    "Impact": [
     "Modify Memory",
     "Modify Application Data",
     "Bypass Protection Mechanism"
    ],
    "Likelihood": "",
    "Note": null,
    "ConsequenceID": ""
   }
  ]
 },
 "DetectionMethods": {
  "DetectionMethod": [
   {
    "Method": "Manual Analysis",
    "Description": null,
    "Effectiveness": "",
    "EffectivenessNotes": null,
    "DetectionMethodID": ""
   },
   {
    "Method": "Automated Dynamic Analysis",
    "Description": [
     "Use custom software to change registers that control clock settings or power settings to try to bypass security locks, or repeatedly write DRAM to try to change adjacent locations. This can be effective in extracting or changing data. The drawback is that it cannot be run before manufacturing, and it may require specialized software."
    ],
    "Effectiveness": "Moderate",
    "EffectivenessNotes": null,
    "DetectionMethodID": ""
   }
  ]
 },
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design",
     "Implementation"
    ],
    "Strategy": "",
    "Description": [
     "Ensure proper access control mechanisms protect software-controllable features altering physical operating conditions such as clock frequency and voltage."
    ],
    "Effectiveness": "",
    "EffectivenessNotes": null,
    "MitigationID": ""
   }
  ]
 },
 "DemonstrativeExamples": {
  "DemonstrativeExample": [
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": null,
    "ExampleCode": {
     "Items": null,
     "Language": "Other",
     "Nature": "Good"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": ""
   },
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": null,
    "ExampleCode": {
     "Items": null,
     "Language": "",
     "Nature": ""
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": ""
   },
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": [
     "",
     "\n\t      We assume that untrusted software running on any of the\n\t      Core{0-N} processors has access to the input and output\n\t      ports of the hrot_iface. If untrusted software can clear\n\t      the lock_bit or write the clock frequency and voltage\n\t      registers due to inadequate protection, a fault\n\t      injection attack could be performed."
    ],
    "ExampleCode": {
     "Items": null,
     "Language": "",
     "Nature": ""
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": ""
   }
  ]
 },
 "ObservedExamples": {
  "ObservedExample": [
   {
    "Reference": "CVE-2019-11157",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2019-11157"
   },
   {
    "Reference": "CVE-2020-8694",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8694"
   },
   {
    "Reference": "CVE-2020-8695",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2020-8695"
   },
   {
    "Reference": "CVE-2020-12912",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2020-12912"
   },
   {
    "Reference": "CVE-2015-0565",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2015-0565"
   }
  ]
 },
 "FunctionalAreas": {
  "FunctionalArea": [
   "Power",
   "Clock"
  ]
 },
 "AffectedResources": {
  "AffectedResource": null
 },
 "TaxonomyMappings": {
  "TaxonomyMapping": null
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 624
   },
   {
    "CAPECID": 625
   }
  ]
 },
 "References": {
  "Reference": [
   {
    "ExternalReferenceID": "REF-1081",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1082",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1083",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1225",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1217",
    "Section": ""
   }
  ]
 },
 "MappingNotes": {
  "Usage": "Allowed",
  "Rationale": null,
  "Comments": null,
  "Reasons": {
   "Reason": [
    {
     "Type": "Acceptable-Use"
    }
   ]
  },
  "Suggestions": {
   "Suggestion": null
  }
 },
 "Notes": {
  "Note": null
 },
 "ContentHistory": {
  "Submission": {
   "SubmissionName": "Nicole Fern",
   "SubmissionOrganization": "Cycuity (originally submitted as Tortuga Logic)",
   "SubmissionDate": "2020-05-08T00:00:00Z",
   "SubmissionVersion": "4.1",
   "SubmissionReleaseDate": "2020-02-24T00:00:00Z",
   "SubmissionComment": ""
  },
  "Modification": [
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2020-08-20T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples, Description, Maintenance_Notes, Related_Attack_Patterns"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2021-03-15T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples, Functional_Areas, Maintenance_Notes"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2021-07-20T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples, Observed_Examples"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2021-10-28T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples, Description, Detection_Factors, Maintenance_Notes, Modes_of_Introduction, Name, Observed_Examples, References, Relationships, Weakness_Ordinalities"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2022-04-28T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Applicable_Platforms"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2022-06-28T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Applicable_Platforms"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-01-31T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Related_Attack_Patterns"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-04-27T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Relationships"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-06-29T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Mapping_Notes"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2025-04-03T00:00:00Z",
    "ModificationVersion": "4.17",
    "ModificationReleaseDate": "2025-04-03T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2025-09-09T00:00:00Z",
    "ModificationVersion": "4.18",
    "ModificationReleaseDate": "2025-09-09T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Relationships"
   }
  ],
  "Contribution": [
   {
    "ContributionName": "",
    "ContributionOrganization": "Cycuity (originally submitted as Tortuga Logic)",
    "ContributionDate": "2021-07-16T00:00:00Z",
    "ContributionVersion": "",
    "ContributionReleaseDate": "0001-01-01T00:00:00Z",
    "ContributionComment": "Provided Demonstrative Example for Hardware Root of Trust",
    "Type": "Content"
   },
   {
    "ContributionName": "Anders Nordstrom, Alric Althoff",
    "ContributionOrganization": "Cycuity (originally submitted as Tortuga Logic)",
    "ContributionDate": "2021-10-11T00:00:00Z",
    "ContributionVersion": "",
    "ContributionReleaseDate": "0001-01-01T00:00:00Z",
    "ContributionComment": "Provided detection method",
    "Type": "Content"
   },
   {
    "ContributionName": "Nicole Fern",
    "ContributionOrganization": "Riscure",
    "ContributionDate": "2021-10-15T00:00:00Z",
    "ContributionVersion": "",
    "ContributionReleaseDate": "0001-01-01T00:00:00Z",
    "ContributionComment": "updated description and extended description, detection method, and observed examples",
    "Type": "Content"
   }
  ],
  "PreviousEntryName": [
   {
    "Value": "Hardware Features Enable Physical Attacks from Software",
    "Date": "2021-10-28T00:00:00Z",
    "Version": ""
   }
  ]
 },
 "ID": 1256,
 "Name": "Improper Restriction of Software Interfaces to Hardware Features",
 "Abstraction": "Base",
 "Structure": "Simple",
 "Status": "Stable",
 "Diagram": ""
}