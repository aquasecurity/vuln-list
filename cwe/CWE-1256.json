{
 "ID": 1256,
 "Name": "Improper Restriction of Software Interfaces to Hardware Features",
 "Description": "The product provides software-controllable\n\t\t\tdevice functionality for capabilities such as power and\n\t\t\tclock management, but it does not properly limit\n\t\t\tfunctionality that can lead to modification of\n\t\t\thardware memory or register bits, or the ability to\n\t\t\tobserve physical side channels.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design",
     "Implementation"
    ],
    "Strategy": "",
    "Description": [
     "Ensure proper access control mechanisms protect software-controllable features altering physical operating conditions such as clock frequency and voltage."
    ]
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 624
   },
   {
    "CAPECID": 625
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Integrity"
    ],
    "Impact": [
     "Modify Memory",
     "Modify Application Data",
     "Bypass Protection Mechanism"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "It is frequently assumed that physical attacks\n              such as fault injection and side-channel analysis\n              require an attacker to have physical access to the\n              target device.  This assumption may be false if the\n              device has improperly secured power management features,\n              or similar features.  For mobile devices, minimizing\n              power consumption is critical, but these devices run a\n              wide variety of applications with different performance\n              requirements. Software-controllable mechanisms to\n              dynamically scale device voltage and frequency and\n              monitor power consumption are common features in today's\n              chipsets, but they also enable attackers to mount fault\n              injection and side-channel attacks without having\n              physical access to the device.",
  "Fault injection attacks involve strategic\n              manipulation of bits in a device to achieve a desired\n              effect such as skipping an authentication step,\n              elevating privileges, or altering the output of a\n              cryptographic operation.  Manipulation of the device\n              clock and voltage supply is a well-known technique to\n              inject faults and is cheap to implement with physical\n              device access.  Poorly protected power management\n              features allow these attacks to be performed from\n              software.  Other features, such as the ability to write\n              repeatedly to DRAM at a rapid rate from unprivileged\n              software, can result in bit flips in other memory\n              locations (Rowhammer, [REF-1083]).",
  "Side channel analysis requires gathering\n\t\t\t  measurement traces of physical quantities such as power\n\t\t\t  consumption.  Modern processors often include power\n\t\t\t  metering capabilities in the hardware itself (e.g.,\n\t\t\t  Intel RAPL) which if not adequately protected enable\n\t\t\t  attackers to gather measurements necessary for\n\t\t\t  performing side-channel attacks from software."
 ]
}