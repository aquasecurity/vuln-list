{
 "ID": 1260,
 "Name": "Improper Handling of Overlap Between Protected Memory Ranges",
 "Description": "The product allows address regions to overlap, which can result in the bypassing of intended memory protection.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": [
     "Ensure that memory regions are isolated as intended and that access control (read/write) policies are used by hardware to protect privileged software."
    ]
   },
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "",
    "Description": [
     "For all of the programmable memory protection regions, the memory protection unit (MPU) design can define a priority scheme.",
     "For example: if three memory regions can be programmed (Region_0, Region_1, and Region_2), the design can enforce a priority scheme, such that, if a system address is within multiple regions, then the region with the lowest ID takes priority and the access-control policy of that region will be applied.  In some MPU designs, the priority scheme can also be programmed by trusted software.",
     "Hardware logic or trusted firmware can also check for region definitions and block programming of memory regions with overlapping addresses. ",
     "The memory-access-control-check filter can also be designed to apply a policy filter to all of the overlapping ranges, i.e., if an address is within Region_0 and Region_1, then access to this address is only granted if both Region_0 and Region_1 policies allow the access."
    ]
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 456
   },
   {
    "CAPECID": 679
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality",
     "Integrity",
     "Availability"
    ],
    "Impact": [
     "Modify Memory",
     "Read Memory",
     "DoS: Instability"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "Isolated memory regions and access control (read/write) policies are used by hardware to protect privileged software. Software components are often allowed to change or remap memory region definitions in order to enable flexible and dynamically changeable memory management by system software.",
  "If a software component running at lower privilege can program a memory address region to overlap with other memory regions used by software running at higher privilege, privilege escalation may be available to attackers. The memory protection unit (MPU) logic can incorrectly handle such an address overlap and allow the lower-privilege software to read or write into the protected memory region, resulting in privilege escalation attack. An address overlap weakness can also be used to launch a denial of service attack on the higher-privilege software memory regions."
 ]
}