{
 "ID": 707,
 "Name": "Improper Neutralization",
 "Description": "The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.",
 "PotentialMitigations": {
  "Mitigation": null
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 250
   },
   {
    "CAPECID": 276
   },
   {
    "CAPECID": 277
   },
   {
    "CAPECID": 278
   },
   {
    "CAPECID": 279
   },
   {
    "CAPECID": 3
   },
   {
    "CAPECID": 43
   },
   {
    "CAPECID": 468
   },
   {
    "CAPECID": 52
   },
   {
    "CAPECID": 53
   },
   {
    "CAPECID": 64
   },
   {
    "CAPECID": 7
   },
   {
    "CAPECID": 78
   },
   {
    "CAPECID": 79
   },
   {
    "CAPECID": 83
   },
   {
    "CAPECID": 84
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Other"
    ],
    "Impact": [
     "Other"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "If a message is malformed, it may cause the message to be incorrectly interpreted.",
  "Neutralization is an abstract term for any technique that ensures that input (and output) conforms with expectations and is \"safe.\"  This can be done by:",
  "\n\t      \n\t      \n\t      \n\t      \n\t    ",
  "This weakness typically applies in cases where the product prepares a control message that another process must act on, such as a command or query, and malicious input that was intended as data, can enter the control plane instead. However, this weakness also applies to more general cases where there are not always control implications."
 ]
}