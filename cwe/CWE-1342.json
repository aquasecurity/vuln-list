{
 "Description": "The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.",
 "ExtendedDescription": [
  "In many processor architectures an exception, mis-speculation, or microcode assist results in a flush operation to clear results that are no longer required. This action prevents these results from influencing architectural state that is intended to be visible from software. However, traces of this transient execution may remain in microarchitectural buffers, resulting in a change in microarchitectural state that can expose sensitive information to an attacker using side-channel analysis. For example, Load Value Injection (LVI) [REF-1202] can exploit direct injection of erroneous values into intermediate load and store buffers.",
  "Several conditions may need to be fulfilled for a successful attack:",
  "\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t    "
 ],
 "RelatedWeaknesses": {
  "RelatedWeakness": [
   {
    "Nature": "ChildOf",
    "CWEID": 226,
    "ViewID": 1000,
    "ChainID": 0,
    "Ordinal": "Primary"
   },
   {
    "Nature": "ChildOf",
    "CWEID": 226,
    "ViewID": 1194,
    "ChainID": 0,
    "Ordinal": "Primary"
   }
  ]
 },
 "WeaknessOrdinalities": {
  "WeaknessOrdinality": null
 },
 "ApplicablePlatforms": {
  "Language": [
   {
    "Name": "",
    "Class": "Not Language-Specific",
    "Prevalence": "Undetermined"
   }
  ],
  "OperatingSystem": [
   {
    "Name": "",
    "Version": "",
    "CPEID": "",
    "Class": "Not OS-Specific",
    "Prevalence": "Undetermined"
   }
  ],
  "Architecture": [
   {
    "Name": "",
    "Class": "Workstation",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "x86",
    "Class": "",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "ARM",
    "Class": "",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "Other",
    "Class": "",
    "Prevalence": "Undetermined"
   }
  ],
  "Technology": [
   {
    "Name": "",
    "Class": "Not Technology-Specific",
    "Prevalence": "Undetermined"
   },
   {
    "Name": "",
    "Class": "System on Chip",
    "Prevalence": "Undetermined"
   }
  ]
 },
 "BackgroundDetails": {
  "BackgroundDetail": null
 },
 "AlternateTerms": {
  "AlternateTerm": null
 },
 "ModesOfIntroduction": {
  "Introduction": [
   {
    "Phase": "Architecture and Design",
    "Note": null
   },
   {
    "Phase": "Requirements",
    "Note": null
   }
  ]
 },
 "ExploitationFactors": {
  "ExploitationFactor": null
 },
 "LikelihoodOfExploit": "",
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality",
     "Integrity"
    ],
    "Impact": [
     "Modify Memory",
     "Read Memory",
     "Execute Unauthorized Code or Commands"
    ],
    "Likelihood": "Medium",
    "Note": null,
    "ConsequenceID": ""
   }
  ]
 },
 "DetectionMethods": {
  "DetectionMethod": null
 },
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design",
     "Requirements"
    ],
    "Strategy": "",
    "Description": null,
    "Effectiveness": "High",
    "EffectivenessNotes": null,
    "MitigationID": ""
   },
   {
    "Phase": [
     "Build and Compilation"
    ],
    "Strategy": "",
    "Description": null,
    "Effectiveness": "High",
    "EffectivenessNotes": null,
    "MitigationID": ""
   }
  ]
 },
 "DemonstrativeExamples": {
  "DemonstrativeExample": [
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": [
     "A processor with this weakness will store the value of untrusted_arg (which may be provided by an attacker) to the stack, which is trusted memory. Additionally, this store operation will save this value in some microarchitectural buffer, e.g. the store queue.",
     "In this code gadget, \n\t\t\t\t\ttrusted_ptr is dereferenced while the attacker forces a page fault. The faulting load causes the processor to mis-speculate by forwarding untrusted_arg as the (speculative) load result. The processor then uses untrusted_arg for the pointer dereference. After the fault has been handled and the load has been re-issued with the correct argument, secret-dependent information stored at the address of trusted_ptr remains in microarchitectural state and can be extracted by an attacker using a code gadget."
    ],
    "ExampleCode": {
     "Items": [
      "\n\t\t\t\t\t    void call_victim(size_t untrusted_arg) {\n\t\t\t\t\t    \n\t\t\t\t\t    }\n\t\t\t\t\t"
     ],
     "Language": "C",
     "Nature": "Bad"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": ""
   }
  ]
 },
 "ObservedExamples": {
  "ObservedExample": [
   {
    "Reference": "CVE-2020-0551",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2020-0551"
   }
  ]
 },
 "FunctionalAreas": {
  "FunctionalArea": null
 },
 "AffectedResources": {
  "AffectedResource": null
 },
 "TaxonomyMappings": {
  "TaxonomyMapping": null
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 696
   }
  ]
 },
 "References": {
  "Reference": [
   {
    "ExternalReferenceID": "REF-1202",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1203",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1204",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-1205",
    "Section": ""
   }
  ]
 },
 "MappingNotes": {
  "Usage": "Allowed",
  "Rationale": null,
  "Comments": null,
  "Reasons": {
   "Reason": [
    {
     "Type": "Acceptable-Use"
    }
   ]
  },
  "Suggestions": {
   "Suggestion": null
  }
 },
 "Notes": {
  "Note": [
   {
    "Items": null,
    "Type": "Relationship"
   },
   {
    "Items": null,
    "Type": "Maintenance"
   }
  ]
 },
 "ContentHistory": {
  "Submission": {
   "SubmissionName": "Anders Nordstrom, Alric Althoff",
   "SubmissionOrganization": "Cycuity (originally submitted as Tortuga Logic)",
   "SubmissionDate": "2021-09-22T00:00:00Z",
   "SubmissionVersion": "4.6",
   "SubmissionReleaseDate": "2021-10-28T00:00:00Z",
   "SubmissionComment": ""
  },
  "Modification": [
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2022-10-13T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples, Maintenance_Notes, Related_Attack_Patterns"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-04-27T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Relationships"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-06-29T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Mapping_Notes"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2024-02-29T00:00:00Z",
    "ModificationVersion": "4.14",
    "ModificationReleaseDate": "2024-02-29T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Description"
   }
  ],
  "Contribution": null,
  "PreviousEntryName": null
 },
 "ID": 1342,
 "Name": "Information Exposure through Microarchitectural State after Transient Execution",
 "Abstraction": "Base",
 "Structure": "Simple",
 "Status": "Incomplete",
 "Diagram": ""
}