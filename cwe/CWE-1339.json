{
 "ID": 1339,
 "Name": "Insufficient Precision or Accuracy of a Real Number",
 "Description": "The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Implementation",
     "Patching and Maintenance"
    ],
    "Strategy": "",
    "Description": null
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": null
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Availability"
    ],
    "Impact": [
     "DoS: Crash, Exit, or Restart"
    ]
   },
   {
    "Scope": [
     "Integrity"
    ],
    "Impact": [
     "Execute Unauthorized Code or Commands"
    ]
   },
   {
    "Scope": [
     "Confidentiality",
     "Availability",
     "Access Control"
    ],
    "Impact": [
     "Read Application Data",
     "Modify Application Data"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "When a security decision or calculation requires highly precise, accurate numbers such as financial calculations or prices, then small variations in the number could be exploited by an attacker.\n            ",
  "There are multiple ways to store the fractional part of a real number in a computer. In all of these cases, there is a limit to the accuracy of recording a fraction. If the fraction can be represented in a fixed number of digits (binary or decimal), there might not be enough digits assigned to represent the number. In other cases the number cannot be represented in a fixed number of digits due to repeating in decimal or binary notation (e.g. 0.333333...) or due to a transcendental number such as Π or √2. Rounding of numbers can lead to situations where the computer results do not adequately match the result of sufficiently accurate math. "
 ]
}