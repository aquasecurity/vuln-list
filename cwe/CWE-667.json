{
 "ID": 667,
 "Name": "Improper Locking",
 "Description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "Libraries or Frameworks",
    "Description": null
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 25
   },
   {
    "CAPECID": 26
   },
   {
    "CAPECID": 27
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Availability"
    ],
    "Impact": [
     "DoS: Resource Consumption (CPU)"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "Locking is a type of synchronization behavior that ensures that multiple independently-operating processes or threads do not interfere with each other when accessing the same resource. All processes/threads are expected to follow the same steps for locking. If these steps are not followed precisely - or if no locking is done at all - then another process/thread could modify the shared resource in a way that is not visible or predictable to the original process.  This can lead to data or memory corruption, denial of service, etc."
 ]
}