{
 "ID": 823,
 "Name": "Use of Out-of-range Pointer Offset",
 "Description": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
 "PotentialMitigations": {
  "Mitigation": null
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 129
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality"
    ],
    "Impact": [
     "Read Memory"
    ]
   },
   {
    "Scope": [
     "Availability"
    ],
    "Impact": [
     "DoS: Crash, Exit, or Restart"
    ]
   },
   {
    "Scope": [
     "Integrity",
     "Confidentiality",
     "Availability"
    ],
    "Impact": [
     "Execute Unauthorized Code or Commands",
     "Modify Memory"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "While a pointer can contain a reference to any arbitrary memory location, a program typically only intends to use the pointer to access limited portions of memory, such as contiguous memory used to access an individual array.",
  "Programs may use offsets in order to access fields or sub-elements stored within structured data. The offset might be out-of-range if it comes from an untrusted source, is the result of an incorrect calculation, or occurs because of another error.",
  "If an attacker can control or influence the offset so that it points outside of the intended boundaries of the structure, then the attacker may be able to read or write to memory locations that are used elsewhere in the product. As a result, the attack might change the state of the product as accessed through program variables, cause a crash or instable behavior, and possibly lead to code execution."
 ]
}