{
 "ID": 311,
 "Name": "Missing Encryption of Sensitive Data",
 "Description": "The product does not encrypt sensitive or critical information before storage or transmission.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Requirements"
    ],
    "Strategy": "",
    "Description": null
   },
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": [
     "Ensure that encryption is properly integrated into the system design, including but not necessarily limited to:",
     "\n                        \n                        \n                     ",
     "Identify the separate needs and contexts for encryption:",
     "\n                        \n                        \n                     ",
     "Using threat modeling or other techniques, assume that data can be compromised through a separate vulnerability or weakness, and determine where encryption will be most effective. Ensure that data that should be private is not being inadvertently exposed using weaknesses such as insecure permissions (CWE-732). [REF-7]"
    ]
   },
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "Libraries or Frameworks",
    "Description": [
     "When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis.",
     "For example, US government systems require FIPS 140-2 certification.",
     "Do not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak.",
     "Periodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]"
    ]
   },
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "Separation of Privilege",
    "Description": [
     "Compartmentalize the system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.",
     "Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges."
    ]
   },
   {
    "Phase": [
     "Implementation",
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": null
   },
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "Attack Surface Reduction",
    "Description": null
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 157
   },
   {
    "CAPECID": 158
   },
   {
    "CAPECID": 204
   },
   {
    "CAPECID": 31
   },
   {
    "CAPECID": 37
   },
   {
    "CAPECID": 383
   },
   {
    "CAPECID": 384
   },
   {
    "CAPECID": 385
   },
   {
    "CAPECID": 386
   },
   {
    "CAPECID": 387
   },
   {
    "CAPECID": 388
   },
   {
    "CAPECID": 477
   },
   {
    "CAPECID": 609
   },
   {
    "CAPECID": 65
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality"
    ],
    "Impact": [
     "Read Application Data"
    ]
   },
   {
    "Scope": [
     "Confidentiality",
     "Integrity"
    ],
    "Impact": [
     "Modify Application Data"
    ]
   }
  ]
 },
 "ExtendedDescription": null
}