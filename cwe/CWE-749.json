{
 "ID": 749,
 "Name": "Exposed Dangerous Method or Function",
 "Description": "The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": null
   },
   {
    "Phase": [
     "Architecture and Design",
     "Implementation"
    ],
    "Strategy": "Attack Surface Reduction",
    "Description": [
     "Identify all exposed functionality. Explicitly list all functionality that must be exposed to some user or set of users. Identify which functionality may be:",
     "\n                        \n                        \n                        \n                     ",
     "Ensure that the implemented code follows these expectations. This includes setting the appropriate access modifiers where applicable (public, private, protected, etc.) or not marking ActiveX controls safe-for-scripting."
    ]
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": [
   {
    "CAPECID": 500
   }
  ]
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Integrity",
     "Confidentiality",
     "Availability",
     "Access Control",
     "Other"
    ],
    "Impact": [
     "Gain Privileges or Assume Identity",
     "Read Application Data",
     "Modify Application Data",
     "Execute Unauthorized Code or Commands",
     "Other"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "This weakness can lead to a wide variety of resultant weaknesses, depending on the behavior of the exposed method. It can apply to any number of technologies and approaches, such as ActiveX controls, Java functions, IOCTLs, and so on.",
  "The exposure can occur in a few different ways:",
  "\n               \n               \n            "
 ]
}