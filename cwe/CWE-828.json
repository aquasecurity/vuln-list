{
 "Description": "The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.",
 "ExtendedDescription": [
  "This can lead to an unexpected system state with a variety of potential consequences depending on context, including denial of service and code execution.",
  "Signal handlers are typically intended to interrupt normal functionality of a program, or even other signals, in order to notify the process of an event. When a signal handler uses global or static variables, or invokes functions that ultimately depend on such state or its associated metadata, then it could corrupt system state that is being used by normal functionality. This could subject the program to race conditions or other weaknesses that allow an attacker to cause the program state to be corrupted. While denial of service is frequently the consequence, in some cases this weakness could be leveraged for code execution.",
  "There are several different scenarios that introduce this issue:",
  "\n                  \n                  \n                  \n               ",
  "Note that in some environments or contexts, it might be possible for the signal handler to be interrupted itself.",
  "If both a signal handler and the normal behavior of the product have to operate on the same set of state variables, and a signal is received in the middle of the normal execution's modifications of those variables, the variables may be in an incorrect or corrupt state during signal handler execution, and possibly still incorrect or corrupt upon return."
 ],
 "RelatedWeaknesses": {
  "RelatedWeakness": [
   {
    "Nature": "ChildOf",
    "CWEID": 364,
    "ViewID": 1000,
    "ChainID": 0,
    "Ordinal": "Primary"
   }
  ]
 },
 "WeaknessOrdinalities": {
  "WeaknessOrdinality": null
 },
 "ApplicablePlatforms": {
  "Language": null,
  "OperatingSystem": null,
  "Architecture": null,
  "Technology": null
 },
 "BackgroundDetails": {
  "BackgroundDetail": null
 },
 "AlternateTerms": {
  "AlternateTerm": null
 },
 "ModesOfIntroduction": {
  "Introduction": null
 },
 "ExploitationFactors": {
  "ExploitationFactor": null
 },
 "LikelihoodOfExploit": "",
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Integrity",
     "Confidentiality",
     "Availability"
    ],
    "Impact": [
     "DoS: Crash, Exit, or Restart",
     "Execute Unauthorized Code or Commands"
    ],
    "Likelihood": "",
    "Note": null,
    "ConsequenceID": ""
   }
  ]
 },
 "DetectionMethods": {
  "DetectionMethod": null
 },
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Implementation",
     "Architecture and Design"
    ],
    "Strategy": "",
    "Description": [
     "Eliminate the usage of non-reentrant functionality inside of signal handlers. This includes replacing all non-reentrant library calls with reentrant calls.",
     "Note: This will not always be possible and may require large portions of the product to be rewritten or even redesigned. Sometimes reentrant-safe library alternatives will not be available. Sometimes non-reentrant interaction between the state of the system and the signal handler will be required by design."
    ],
    "Effectiveness": "High",
    "EffectivenessNotes": null,
    "MitigationID": ""
   },
   {
    "Phase": [
     "Implementation"
    ],
    "Strategy": "",
    "Description": null,
    "Effectiveness": "",
    "EffectivenessNotes": null,
    "MitigationID": ""
   }
  ]
 },
 "DemonstrativeExamples": {
  "DemonstrativeExample": [
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": [
     "\n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                     \n                  "
    ],
    "ExampleCode": {
     "Items": [
      "char *logMessage;\n                     void handler (int sigNum) {}\n                     int main (int argc, char* argv[]) {}"
     ],
     "Language": "C",
     "Nature": "Bad"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": "DX-26"
   },
   {
    "TitleText": "",
    "IntroText": null,
    "BodyText": [
     "\n                     \n                     \n                     \n                     \n                     \n                     \n                  "
    ],
    "ExampleCode": {
     "Items": [
      "#include \u003csignal.h\u003e#include \u003csyslog.h\u003e#include \u003cstring.h\u003e#include \u003cstdlib.h\u003e\n                     void *global1, *global2;char *what;void sh (int dummy) {}\n                     int main (int argc,char* argv[]) {}"
     ],
     "Language": "C",
     "Nature": "Bad"
    },
    "References": {
     "Reference": null
    },
    "DemonstrativeExampleID": "DX-48"
   }
  ]
 },
 "ObservedExamples": {
  "ObservedExample": [
   {
    "Reference": "CVE-2008-4109",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2008-4109"
   },
   {
    "Reference": "CVE-2006-5051",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2006-5051"
   },
   {
    "Reference": "CVE-2001-1349",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2001-1349"
   },
   {
    "Reference": "CVE-2004-0794",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2004-0794"
   },
   {
    "Reference": "CVE-2004-2259",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2004-2259"
   },
   {
    "Reference": "CVE-2002-1563",
    "Description": null,
    "Link": "https://www.cve.org/CVERecord?id=CVE-2002-1563"
   }
  ]
 },
 "FunctionalAreas": {
  "FunctionalArea": null
 },
 "AffectedResources": {
  "AffectedResource": null
 },
 "TaxonomyMappings": {
  "TaxonomyMapping": [
   {
    "EntryID": "SIG31-C",
    "EntryName": "Do not access or modify shared objects in signal handlers",
    "MappingFit": "",
    "TaxonomyName": "CERT C Secure Coding"
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": null
 },
 "References": {
  "Reference": [
   {
    "ExternalReferenceID": "REF-360",
    "Section": ""
   },
   {
    "ExternalReferenceID": "REF-361",
    "Section": ""
   }
  ]
 },
 "MappingNotes": {
  "Usage": "Allowed",
  "Rationale": null,
  "Comments": null,
  "Reasons": {
   "Reason": [
    {
     "Type": "Acceptable-Use"
    }
   ]
  },
  "Suggestions": {
   "Suggestion": null
  }
 },
 "Notes": {
  "Note": null
 },
 "ContentHistory": {
  "Submission": {
   "SubmissionName": "CWE Content Team",
   "SubmissionOrganization": "MITRE",
   "SubmissionDate": "2010-11-08T00:00:00Z",
   "SubmissionVersion": "1.11",
   "SubmissionReleaseDate": "2010-12-13T00:00:00Z",
   "SubmissionComment": ""
  },
  "Modification": [
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2011-06-01T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Common_Consequences"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2012-05-11T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2014-06-23T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples, References"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2017-11-08T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Observed_Examples"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2020-02-24T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Relationships"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2021-03-15T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Demonstrative_Examples"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2022-04-28T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Observed_Examples"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-01-31T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Common_Consequences, Description, Potential_Mitigations"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-04-27T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated References, Relationships, Type"
   },
   {
    "ModificationName": "CWE Content Team",
    "ModificationOrganization": "MITRE",
    "ModificationDate": "2023-06-29T00:00:00Z",
    "ModificationVersion": "",
    "ModificationReleaseDate": "0001-01-01T00:00:00Z",
    "ModificationImportance": "",
    "ModificationComment": "updated Mapping_Notes"
   }
  ],
  "Contribution": null,
  "PreviousEntryName": null
 },
 "ID": 828,
 "Name": "Signal Handler with Functionality that is not Asynchronous-Safe",
 "Abstraction": "Variant",
 "Structure": "Simple",
 "Status": "Incomplete",
 "Diagram": ""
}