{
  "id": "ALAS2022-2022-155",
  "title": "Amazon Linux 2022 - ALAS2022-2022-155: Low priority package update for vim",
  "issued": {
    "date": "2022-10-17 23:30"
  },
  "updated": {
    "date": "2022-12-06 16:46"
  },
  "severity": "Low",
  "description": "Package updates are available for Amazon Linux 2022 that fix the following vulnerabilities:\nCVE-2022-3153:\n\tNULL Pointer Dereference in GitHub repository vim/vim prior to 9.0.0404.\n\nCVE-2022-3134:\n\tA heap use-after-free vulnerability was found in vim's do_tag() function of the src/tag.c file. The issue triggers when the 'tagfunc' closes the window. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap use-after-free that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-3099:\n\tA use-after-free vulnerability was found in vim's do_cmdline() function of the src/ex_docmd.c file. The issue triggers when an invalid line number on :for is ignored. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering use-after-free that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-3037:\n\tUse After Free in GitHub repository vim/vim prior to 9.0.0322.\n\nCVE-2022-3016:\n\tA heap use-after-free vulnerability was found in vim's get_next_valid_entry() function of the src/quickfix.c file. The issue occurs because vim is using freed memory when the location list is changed in autocmd. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap use-after-free that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2982:\n\tA heap use-after-free vulnerability was found in vim's qf_fill_buffer() function of the src/quickfix.c file. The issue occurs because vim uses freed memory when recursively using 'quickfixtextfunc.' This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap use-after-free that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2980:\n\tA NULL pointer dereference vulnerability was found in vim's do_mouse() function of the src/mouse.c file. The issue occurs with a mouse click when it is not initialized. This flaw allows an attacker to trick a user into opening a specially crafted input file, triggering the vulnerability that could cause an application to crash.\n\nCVE-2022-2946:\n\tA flaw was found in vim, where it is vulnerable to a use-after-free in the vim_vsnprintf_typval function. This flaw allows a specially crafted file to crash a program, use unexpected values, or execute code.\n\nCVE-2022-2923:\n\tA flaw was found in vim, where it is vulnerable to a NULL pointer dereference in the sug_filltree function. This flaw allows a specially crafted file to crash the software.\n\nCVE-2022-2889:\n\tA use-after-free vulnerability was found in Vim in the find_var_also_in_script function in the evalvars.c file. This issue occurs because an already freed memory is used when a specially crafted input is processed. This flaw allows an attacker who can trick a user into opening a specially crafted file into triggering the use-after-free, causing the application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2874:\n\tNULL Pointer Dereference in GitHub repository vim/vim prior to 9.0.0224.\n\nCVE-2022-2862:\n\tUse After Free in GitHub repository vim/vim prior to 9.0.0221.\n\nCVE-2022-2849:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 9.0.0220.\n\nCVE-2022-2845:\n\tBuffer Over-read in GitHub repository vim/vim prior to 9.0.0218.\n\nCVE-2022-2819:\n\tA flaw was found in vim. The vulnerability occurs due to illegal memory access and leads to a heap buffer overflow vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-2817:\n\tA use-after-free vulnerability was found in Vim in the string_quote function in the strings.c file. This issue occurs because an already freed memory is used when a specially crafted input is processed. This flaw allows an attacker who can trick a user into opening a specially crafted file into triggering the use-after-free, causing the application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2816:\n\tAn out-of-bounds read vulnerability was found in Vim in the check_vim9_unlet function in the vim9cmds.c file. This issue occurs because of invalid memory access when compiling the unlet command when a specially crafted input is processed. This flaw allows an attacker who can trick a user into opening a specially crafted file into triggering the out-of-bounds read, causing the application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2598:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a heap buffer overflow vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-2581:\n\tA flaw was found in vim. The vulnerability occurs due to illegal memory access and leads to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-2580:\n\tA flaw was found in vim. The vulnerability occurs due to illegal memory access and leads to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-2571:\n\tA flaw was found in vim. The vulnerability occurs due to illegal memory access and leads to a heap buffer overflow vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-2522:\n\tA heap buffer overflow vulnerability was found in vim's ins_compl_infercase_gettext() function of the src/insexpand.c file. This flaw occurs when vim tries to access uninitialized memory when completing a long line. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap-based buffer overflow that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2345:\n\tA use-after-free vulnerability was found in Vim in the skipwhite function in the charset.c file. This issue occurs because an already freed memory is used when a specially crafted input is processed. This flaw allows an attacker who can trick a user into opening a specially crafted file into triggering the use-after-free, and cause the application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2344:\n\tA heap-based buffer overflow was found in Vim in the ins_compl_add function in the insexpand.c file. This issue occurs due to a read past the end of a buffer when a specially crafted input is processed. This flaw allows an attacker who can trick a user into opening a specially crafted file into triggering the heap-based buffer overflow, causing the application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2343:\n\tA heap-based buffer overflow was found in Vim in the ins_compl_add function in the insexpand.c file. This issue occurs due to a read past the end of a buffer when a specially crafted input is processed. This flaw allows an attacker who can trick a user into opening a specially crafted file into triggering the heap-based buffer overflow, causing the application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2304:\n\tA stack-based buffer overflow vulnerability was found in Vim's spell_dump_compl() function of the src/spell.c file. This issue occurs because the spell dump goes beyond the end of an array when crafted input is processed. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering an out-of-bounds write that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-2289:\n\tUse After Free in GitHub repository vim/vim prior to 9.0.\n\nCVE-2022-2288:\n\tOut-of-bounds Write in GitHub repository vim/vim prior to 9.0.\n\nCVE-2022-2287:\n\tOut-of-bounds Read in GitHub repository vim/vim prior to 9.0.\n\nCVE-2022-2286:\n\tOut-of-bounds Read in GitHub repository vim/vim prior to 9.0.\n\nCVE-2022-2285:\n\tInteger Overflow or Wraparound in GitHub repository vim/vim prior to 9.0.\n\nCVE-2022-2284:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 9.0.\n\nCVE-2022-2264:\n\tA heap buffer overflow vulnerability was found in Vim's inc() function of misc2.c. This issue occurs because Vim reads beyond the end of the line with a put command. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering an out-of-bounds read that causes a crash in the CLI tool.\n\nCVE-2022-2257:\n\tA flaw was found in vim, which is vulnerable to an out-of-bounds read in the msg_outtrans_special function. This flaw allows a specially crafted file to crash software or execute code when opened in vim.\n\nCVE-2022-2231:\n\tNULL Pointer Dereference in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2210:\n\tOut-of-bounds Write in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2208:\n\tNULL Pointer Dereference in GitHub repository vim/vim prior to 8.2.5163.\n\nCVE-2022-2207:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2206:\n\tOut-of-bounds Read in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2183:\n\tOut-of-bounds Read in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2182:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2175:\n\tA heap buffer over-read vulnerability was found in Vim's put_on_cmdline() function of the src/ex_getln.c file. This issue occurs due to invalid memory access when using an expression on the command line. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap buffer overflow that causes an application to crash and corrupt memory.\n\nCVE-2022-2129:\n\tOut-of-bounds Write in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2126:\n\tOut-of-bounds Read in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2125:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2124:\n\tBuffer Over-read in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-2042:\n\tA heap use-after-free vulnerability was found in Vim's skipwhite() function of the src/charset.c file. This flaw occurs because of an uninitialized attribute value and freed memory in the spell command. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap use-after-free that causes an application to crash and corrupt memory.\n\nCVE-2022-2000:\n\tAn out-of-bounds write vulnerability was found in Vim's append_command() function of the src/ex_docmd.c file. This issue occurs when an error for a command goes over the end of IObuff. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap buffer overflow that causes an application to crash and corrupt memory.\n\nCVE-2022-1968:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a use-after-free vulnerability in the utf_ptr2char function. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1942:\n\tAn out-of-bounds write vulnerability was found in Vim's vim_regsub_both() function in the src/regexp.c file. The flaw can open a command-line window from a substitute expression when a text or buffer is locked. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering an out-of-bounds write that causes an application to crash, possibly reading and modifying some amount of memory contents.\n\nCVE-2022-1927:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a buffer over-read vulnerability in the utf_ptr2char function. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1898:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a use-after-free vulnerability in the find_pattern_in_path function. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1897:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to an out-of-bounds write vulnerability in the vim_regsub_both function. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1886:\n\tA heap buffer overflow flaw was found in Vim's utf_head_off() function in the mbyte.c file. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap buffer overflow that causes an application to crash, leading to a denial of service and possibly some amount of memory leak.\n\nCVE-2022-1851:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to an out-of-bounds read vulnerability in the gchar_cursor function. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1796:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a use after free vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1785:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to an out-of-bounds write vulnerability in the ex_cmds function. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1771:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a stack-based buffer overflow vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-1769:\n\tBuffer Over-read in GitHub repository vim/vim prior to 8.2.4974.\n\nCVE-2022-1735:\n\tClassic Buffer Overflow in GitHub repository vim/vim prior to 8.2.4969.\n\nCVE-2022-1733:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.4968.\n\nCVE-2022-1725:\n\tNULL Pointer Dereference in GitHub repository vim/vim prior to 8.2.495\n\nCVE-2022-1720:\n\tA heap buffer over-read vulnerability was found in Vim's grab_file_name() function of the src/findfile.c file. This flaw occurs because the function reads after the NULL terminates the line with \"gf\" in Visual block mode. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap buffer over-read vulnerability that causes an application to crash and corrupt memory.\n\nCVE-2022-1674:\n\tA NULL pointer dereference flaw was found in vim's vim_regexec_string() function in regexp.c file. The issue occurs when the function tries to match the buffer with an invalid pattern. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a NULL pointer dereference that causes an application to crash, leading to a denial of service.\n\nCVE-2022-1629:\n\tBuffer Over-read in function find_next_quote in GitHub repository vim/vim prior to 8.2.4925. This vulnerabilities are capable of crashing software, Modify Memory, and possible remote execution\n\nCVE-2022-1621:\n\tHeap buffer overflow in vim_strncpy find_word in GitHub repository vim/vim prior to 8.2.4919. This vulnerability is capable of crashing software, Bypass Protection Mechanism, Modify Memory, and possible remote execution\n\nCVE-2022-1620:\n\tNULL Pointer Dereference in function vim_regexec_string at regexp.c:2729 in GitHub repository vim/vim prior to 8.2.4901. NULL Pointer Dereference in function vim_regexec_string at regexp.c:2729 allows attackers to cause a denial of service (application crash) via a crafted input.\n\nCVE-2022-1619:\n\tHeap-based Buffer Overflow in function cmdline_erase_chars in GitHub repository vim/vim prior to 8.2.4899. This vulnerabilities are capable of crashing software, modify memory, and possible remote execution\n\nCVE-2022-1616:\n\tUse after free in append_command in GitHub repository vim/vim prior to 8.2.4895. This vulnerability is capable of crashing software, Bypass Protection Mechanism, Modify Memory, and possible remote execution\n\nCVE-2022-1420:\n\tA vulnerability was found in Vim. The issue occurs when using a number in a string for the lambda name, triggering an out-of-range pointer offset vulnerability. This flaw allows an attacker to trick a user into opening a crafted script containing an argument as a number and then using it as a string pointer to access any memory location, causing an application to crash and possibly access some memory.\n\nCVE-2022-1381:\n\tA global heap buffer overflow vulnerability was found in vim's skip_range() function of the src/ex_docmd.c file. This flaw occurs because vim uses an invalid pointer with V: in Ex mode. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap buffer overflow that causes an application to crash, leading to a denial of service.\n\nCVE-2022-1160:\n\tA heap buffer overflow flaw was found in vim's get_one_sourceline() function of scriptfile.c file. This flaw occurs when source can read past the end of the copied line. This flaw allows an attacker to trick a user into opening a crafted file, triggering a heap-overflow and causing an application to crash, which leads to a denial of service.\n\nCVE-2022-1154:\n\tA heap use-after-free vulnerability was found in Vim's utf_ptr2char() function of the src/mbyte.c file. This flaw occurs because vim is using a buffer line after it has been freed in the old regexp engine. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap use-after-free that causes an application to crash, possibly executing code and corrupting memory.\n\nCVE-2022-0943:\n\tA heap buffer overflow flaw was found in vim's suggest_try_change() function of the spellsuggest.c file. This flaw allows an attacker to trick a user into opening a crafted file, triggering a heap-overflow and causing an application to crash, which leads to a denial of service.\n\nCVE-2022-0729:\n\tA flaw was found in vim. The vulnerability occurs due to crashes within specific regexp patterns and strings and leads to an out-of-range vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0714:\n\tA heap-buffer-overflow flaw was found in vim's win_lbr_chartabsize() function of charset.c file. The issue occurs due to an incorrect 'vartabstop' value. This flaw allows an attacker to trick a user into opening a specially crafted file, triggering a heap-overflow, and can cause an application to crash, eventually leading to a denial of service.\n\nCVE-2022-0696:\n\tA NULL pointer dereference flaw was found in vim's find_ucmd() function of usercmd.c file. This flaw allows an attacker to trick a user into opening a crafted file, triggering a NULL pointer dereference. This issue leads to an application crash, causing a denial of service.\n\nCVE-2022-0685:\n\tA flaw was found in vim. The vulnerability occurs due to a crash when using a special multi-byte character and leads to an out-of-range vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0629:\n\tA stack-based buffer overflow flaw was found in vim's ga_concat_shorten_esc() function of src/testing.c file. This flaw allows an attacker to trick a user into opening a crafted file, triggering a stack-overflow. This issue can lead to an application crash, causing a denial of service.\n\nCVE-2022-0572:\n\tA heap-based buffer overflow flaw was found in vim's ex_retab() function of indent.c file. This flaw occurs when repeatedly using :retab. This flaw allows an attacker to trick a user into opening a crafted file triggering a heap-overflow.\n\nCVE-2022-0554:\n\tA flaw was found in vim that causes an out-of-range pointer offset vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0443:\n\tA flaw was found in vim. The vulnerability occurs due to using freed memory which results in a use-after-free vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0417:\n\tA flaw was found in vim. The vulnerability occurs due to illegal memory access and leads to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0413:\n\tA flaw was found in vim. The vulnerability occurs due to using freed memory when the substitute uses a recursive function call, resulting in a use-after-free vulnerability. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0408:\n\tA flaw was found in vim. The vulnerability occurs due to stack corruption when looking for spell suggestions and leads to a stack buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0407:\n\tA flaw was found in vim. The vulnerability occurs due to the read operation before the start of the line and leads to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0393:\n\tA flaw was found in vim. The vulnerability occurs due to a crash when recording and using Select mode and leads to an out-of-bounds read. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0392:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-0368:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access and leads to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0361:\n\tHeap-based Buffer Overflow in GitHub repository vim/vim prior to 8.2.\n\nCVE-2022-0359:\n\tA flaw was found in vim. The vulnerability occurs due to Illegal memory access with large tabstop in Ex mode, which can lead to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0351:\n\tA flaw was found in vim. The vulnerability occurs due to too many recursions, which can lead to a segmentation fault. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0319:\n\tOut-of-bounds Read in vim/vim prior to 8.2.\n\nCVE-2022-0318:\n\tA flaw was found in vim.  The vulnerability occurs due to reading beyond the end of a line in the utf_head_off function, which can lead to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0261:\n\tA heap based out-of-bounds write flaw was found in vim's ops.c. This flaw allows an attacker to trick a user to open a crafted file triggering an out-of-bounds write. This vulnerability is capable of crashing software, modify memory, and possible code execution.\n\nCVE-2022-0213:\n\tA flaw was found in vim.  The vulnerability occurs due to not checking the length for the NameBuff function, which can lead to a heap buffer overflow. This flaw allows an attacker to input a specially crafted file, leading to a crash or code execution.\n\nCVE-2022-0158:\n\tIt was found that vim was vulnerable to a 1 byte heap based out of bounds read flaw in the `compile_get_env()` function. A file could use that flaw to disclose 1 byte of vim's internal memory.\n\nCVE-2022-0156:\n\tIt was found that vim was vulnerable to use-after-free flaw in the way it was treating allocated lines in user functions. A specially crafted file could crash the vim process or possibly lead to other undefined behaviors.\n\nCVE-2022-0128:\n\tvim is vulnerable to Out-of-bounds Read\n\nCVE-2021-4193:\n\tIt was found that vim was vulnerable to an out-of-bound read flaw in getvcol(). A specially crafted file could be used to, when opened in vim, disclose some of the process's internal memory.\n\nCVE-2021-4192:\n\tIt was found that vim was vulnerable to use-after-free flaw in win_linetabsize(). Sourcing a specially crafted file in vim could crash the vim process or possibly lead to other undefined behaviors.\n\nCVE-2021-4187:\n\tA flaw was found in vim. A possible use after free vulnerability could allow an attacker to input a specially crafted file leading to a crash or code execution.\n\nCVE-2021-4173:\n\tA flaw was found in vim. A possible use after free vulnerability could allow an attacker to input a specially crafted file leading to a crash or code execution.\n\nCVE-2021-4166:\n\tA flaw was found in vim. A possible heap-based buffer overflow could allow an attacker to input a specially crafted file leading to a crash or code execution.\n\nCVE-2021-4136:\n\tA flaw was found in vim. A possible heap-based buffer overflow could allow an attacker to input a specially crafted file leading to a crash or code execution.\n\nCVE-2021-4069:\n\tvim is vulnerable to Use After Free\n\nCVE-2021-4019:\n\tA flaw was found in vim. A possible heap-based buffer overflow vulnerability allows an attacker to input a specially crafted file, leading to a crash or code execution. The highest threat from this vulnerability is system availability.\n\nCVE-2021-3984:\n\tA flaw was found in vim. A possible heap-based buffer overflow allows an attacker to input a specially crafted file, leading to a crash or code execution. The highest threat from this vulnerability is confidentiality, integrity, and system availability.\n\nCVE-2021-3974:\n\tA flaw was found in vim. A possible use-after-free vulnerability could allow an attacker to input a specially crafted file leading to a crash or code execution. The highest threat from this vulnerability is to system availability.\n\nCVE-2021-3973:\n\tA flaw was found in vim. A possible heap-based buffer overflow could allow an attacker to input a specially crafted file leading to a crash or code execution. The highest threat from this vulnerability is to system availability.\n\nCVE-2021-3968:\n\tA flaw was found in vim. A possible heap use-after-free vulnerability could allow an attacker to input a specially crafted file leading to a crash or code execution. The highest threat from this vulnerability is to system availability.\n\nCVE-2021-3928:\n\tA flaw was found in vim. A possible stack-based buffer overflow could allow an attacker to input a specially crafted file leading to a crash or code execution. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.\n\nCVE-2021-3927:\n\tA flaw was found in vim. A possible heap-based buffer overflow could allow an attacker to input a specially crafted file leading to a crash or code execution. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.\n\nCVE-2021-3903:\n\tvim is vulnerable to Heap-based Buffer Overflow\n\nCVE-2021-3770:\n\tA flaw was found in vim. A possible heap-based buffer overflow could allow an attacker to input a specially crafted file leading to a crash or code execution. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.\n",
  "packages": [
    {
      "name": "vim-enhanced-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-enhanced-debuginfo-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-filesystem",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "noarch",
      "filename": "Packages/vim-filesystem-9.0.475-1.amzn2022.0.1.noarch.rpm"
    },
    {
      "name": "vim-default-editor",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "noarch",
      "filename": "Packages/vim-default-editor-9.0.475-1.amzn2022.0.1.noarch.rpm"
    },
    {
      "name": "vim-minimal",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-minimal-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-debuginfo-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-data",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "noarch",
      "filename": "Packages/vim-data-9.0.475-1.amzn2022.0.1.noarch.rpm"
    },
    {
      "name": "vim-enhanced",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-enhanced-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-common-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-common-debuginfo-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-minimal-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-minimal-debuginfo-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-debugsource",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-debugsource-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-common",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/vim-common-9.0.475-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "vim-enhanced-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-enhanced-debuginfo-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-debugsource",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-debugsource-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-enhanced",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-enhanced-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-common",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-common-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-minimal-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-minimal-debuginfo-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-minimal",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-minimal-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-debuginfo-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-common-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/vim-common-debuginfo-9.0.475-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "vim-enhanced-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-enhanced-debuginfo-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-minimal-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-minimal-debuginfo-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-minimal",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-minimal-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-debuginfo-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-enhanced",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-enhanced-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-common-debuginfo",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-common-debuginfo-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-debugsource",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-debugsource-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "vim-common",
      "epoch": "2",
      "version": "9.0.475",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/vim-common-9.0.475-1.amzn2022.0.1.aarch64.rpm"
    }
  ],
  "references": [
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3770",
      "id": "CVE-2021-3770",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3903",
      "id": "CVE-2021-3903",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3927",
      "id": "CVE-2021-3927",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3928",
      "id": "CVE-2021-3928",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3968",
      "id": "CVE-2021-3968",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3973",
      "id": "CVE-2021-3973",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3974",
      "id": "CVE-2021-3974",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3984",
      "id": "CVE-2021-3984",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4019",
      "id": "CVE-2021-4019",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4069",
      "id": "CVE-2021-4069",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4136",
      "id": "CVE-2021-4136",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4166",
      "id": "CVE-2021-4166",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4173",
      "id": "CVE-2021-4173",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4187",
      "id": "CVE-2021-4187",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4192",
      "id": "CVE-2021-4192",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4193",
      "id": "CVE-2021-4193",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0128",
      "id": "CVE-2022-0128",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0156",
      "id": "CVE-2022-0156",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0158",
      "id": "CVE-2022-0158",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0213",
      "id": "CVE-2022-0213",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0261",
      "id": "CVE-2022-0261",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0318",
      "id": "CVE-2022-0318",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0319",
      "id": "CVE-2022-0319",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0351",
      "id": "CVE-2022-0351",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0359",
      "id": "CVE-2022-0359",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0361",
      "id": "CVE-2022-0361",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0368",
      "id": "CVE-2022-0368",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0392",
      "id": "CVE-2022-0392",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0393",
      "id": "CVE-2022-0393",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0407",
      "id": "CVE-2022-0407",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0408",
      "id": "CVE-2022-0408",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0413",
      "id": "CVE-2022-0413",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0417",
      "id": "CVE-2022-0417",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0443",
      "id": "CVE-2022-0443",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0554",
      "id": "CVE-2022-0554",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0572",
      "id": "CVE-2022-0572",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0629",
      "id": "CVE-2022-0629",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0685",
      "id": "CVE-2022-0685",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0696",
      "id": "CVE-2022-0696",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0714",
      "id": "CVE-2022-0714",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0729",
      "id": "CVE-2022-0729",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0943",
      "id": "CVE-2022-0943",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1154",
      "id": "CVE-2022-1154",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1160",
      "id": "CVE-2022-1160",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1381",
      "id": "CVE-2022-1381",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1420",
      "id": "CVE-2022-1420",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1616",
      "id": "CVE-2022-1616",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1619",
      "id": "CVE-2022-1619",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1620",
      "id": "CVE-2022-1620",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1621",
      "id": "CVE-2022-1621",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1629",
      "id": "CVE-2022-1629",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1674",
      "id": "CVE-2022-1674",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1720",
      "id": "CVE-2022-1720",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1725",
      "id": "CVE-2022-1725",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1733",
      "id": "CVE-2022-1733",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1735",
      "id": "CVE-2022-1735",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1769",
      "id": "CVE-2022-1769",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1771",
      "id": "CVE-2022-1771",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1785",
      "id": "CVE-2022-1785",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1796",
      "id": "CVE-2022-1796",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1851",
      "id": "CVE-2022-1851",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1886",
      "id": "CVE-2022-1886",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1897",
      "id": "CVE-2022-1897",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1898",
      "id": "CVE-2022-1898",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1927",
      "id": "CVE-2022-1927",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1942",
      "id": "CVE-2022-1942",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1968",
      "id": "CVE-2022-1968",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2000",
      "id": "CVE-2022-2000",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2042",
      "id": "CVE-2022-2042",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2124",
      "id": "CVE-2022-2124",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2125",
      "id": "CVE-2022-2125",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2126",
      "id": "CVE-2022-2126",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2129",
      "id": "CVE-2022-2129",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2175",
      "id": "CVE-2022-2175",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2182",
      "id": "CVE-2022-2182",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2183",
      "id": "CVE-2022-2183",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2206",
      "id": "CVE-2022-2206",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2207",
      "id": "CVE-2022-2207",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2208",
      "id": "CVE-2022-2208",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2210",
      "id": "CVE-2022-2210",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2231",
      "id": "CVE-2022-2231",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2257",
      "id": "CVE-2022-2257",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2264",
      "id": "CVE-2022-2264",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2284",
      "id": "CVE-2022-2284",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2285",
      "id": "CVE-2022-2285",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2286",
      "id": "CVE-2022-2286",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2287",
      "id": "CVE-2022-2287",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2288",
      "id": "CVE-2022-2288",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2289",
      "id": "CVE-2022-2289",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2304",
      "id": "CVE-2022-2304",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2343",
      "id": "CVE-2022-2343",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2344",
      "id": "CVE-2022-2344",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2345",
      "id": "CVE-2022-2345",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2522",
      "id": "CVE-2022-2522",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2571",
      "id": "CVE-2022-2571",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2580",
      "id": "CVE-2022-2580",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2581",
      "id": "CVE-2022-2581",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2598",
      "id": "CVE-2022-2598",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2816",
      "id": "CVE-2022-2816",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2817",
      "id": "CVE-2022-2817",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2819",
      "id": "CVE-2022-2819",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2845",
      "id": "CVE-2022-2845",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2849",
      "id": "CVE-2022-2849",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2862",
      "id": "CVE-2022-2862",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2874",
      "id": "CVE-2022-2874",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2889",
      "id": "CVE-2022-2889",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2923",
      "id": "CVE-2022-2923",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2946",
      "id": "CVE-2022-2946",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2980",
      "id": "CVE-2022-2980",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2982",
      "id": "CVE-2022-2982",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3016",
      "id": "CVE-2022-3016",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3037",
      "id": "CVE-2022-3037",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3099",
      "id": "CVE-2022-3099",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3134",
      "id": "CVE-2022-3134",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3153",
      "id": "CVE-2022-3153",
      "type": "cve"
    }
  ],
  "cveids": [
    "CVE-2021-3770",
    "CVE-2021-3903",
    "CVE-2021-3927",
    "CVE-2021-3928",
    "CVE-2021-3968",
    "CVE-2021-3973",
    "CVE-2021-3974",
    "CVE-2021-3984",
    "CVE-2021-4019",
    "CVE-2021-4069",
    "CVE-2021-4136",
    "CVE-2021-4166",
    "CVE-2021-4173",
    "CVE-2021-4187",
    "CVE-2021-4192",
    "CVE-2021-4193",
    "CVE-2022-0128",
    "CVE-2022-0156",
    "CVE-2022-0158",
    "CVE-2022-0213",
    "CVE-2022-0261",
    "CVE-2022-0318",
    "CVE-2022-0319",
    "CVE-2022-0351",
    "CVE-2022-0359",
    "CVE-2022-0361",
    "CVE-2022-0368",
    "CVE-2022-0392",
    "CVE-2022-0393",
    "CVE-2022-0407",
    "CVE-2022-0408",
    "CVE-2022-0413",
    "CVE-2022-0417",
    "CVE-2022-0443",
    "CVE-2022-0554",
    "CVE-2022-0572",
    "CVE-2022-0629",
    "CVE-2022-0685",
    "CVE-2022-0696",
    "CVE-2022-0714",
    "CVE-2022-0729",
    "CVE-2022-0943",
    "CVE-2022-1154",
    "CVE-2022-1160",
    "CVE-2022-1381",
    "CVE-2022-1420",
    "CVE-2022-1616",
    "CVE-2022-1619",
    "CVE-2022-1620",
    "CVE-2022-1621",
    "CVE-2022-1629",
    "CVE-2022-1674",
    "CVE-2022-1720",
    "CVE-2022-1725",
    "CVE-2022-1733",
    "CVE-2022-1735",
    "CVE-2022-1769",
    "CVE-2022-1771",
    "CVE-2022-1785",
    "CVE-2022-1796",
    "CVE-2022-1851",
    "CVE-2022-1886",
    "CVE-2022-1897",
    "CVE-2022-1898",
    "CVE-2022-1927",
    "CVE-2022-1942",
    "CVE-2022-1968",
    "CVE-2022-2000",
    "CVE-2022-2042",
    "CVE-2022-2124",
    "CVE-2022-2125",
    "CVE-2022-2126",
    "CVE-2022-2129",
    "CVE-2022-2175",
    "CVE-2022-2182",
    "CVE-2022-2183",
    "CVE-2022-2206",
    "CVE-2022-2207",
    "CVE-2022-2208",
    "CVE-2022-2210",
    "CVE-2022-2231",
    "CVE-2022-2257",
    "CVE-2022-2264",
    "CVE-2022-2284",
    "CVE-2022-2285",
    "CVE-2022-2286",
    "CVE-2022-2287",
    "CVE-2022-2288",
    "CVE-2022-2289",
    "CVE-2022-2304",
    "CVE-2022-2343",
    "CVE-2022-2344",
    "CVE-2022-2345",
    "CVE-2022-2522",
    "CVE-2022-2571",
    "CVE-2022-2580",
    "CVE-2022-2581",
    "CVE-2022-2598",
    "CVE-2022-2816",
    "CVE-2022-2817",
    "CVE-2022-2819",
    "CVE-2022-2845",
    "CVE-2022-2849",
    "CVE-2022-2862",
    "CVE-2022-2874",
    "CVE-2022-2889",
    "CVE-2022-2923",
    "CVE-2022-2946",
    "CVE-2022-2980",
    "CVE-2022-2982",
    "CVE-2022-3016",
    "CVE-2022-3037",
    "CVE-2022-3099",
    "CVE-2022-3134",
    "CVE-2022-3153"
  ]
}