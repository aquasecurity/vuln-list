{
  "id": "ALAS2022-2022-051",
  "title": "Amazon Linux 2022 - ALAS2022-2022-051: Important priority package update for rubygem-puma",
  "issued": {
    "date": "2022-04-19 00:04"
  },
  "updated": {
    "date": "2022-04-22 15:15"
  },
  "severity": "Important",
  "description": "Package updates are available for Amazon Linux 2022 that fix the following vulnerabilities:\nCVE-2022-24790:\n\tPuma is a simple, fast, multi-threaded, parallel HTTP 1.1 server for Ruby/Rack applications. When using Puma behind a proxy that does not properly validate that the incoming HTTP request matches the RFC7230 standard, Puma and the frontend proxy may disagree on where a request starts and ends. This would allow requests to be smuggled via the front-end proxy to Puma. The vulnerability has been fixed in 5.6.4 and 4.3.12. Users are advised to upgrade as soon as possible. Workaround: when deploying a proxy in front of Puma, turning on any and all functionality to make sure that the request matches the RFC7230 standard.\n\nCVE-2022-23634:\n\tPuma is a Ruby/Rack web server built for parallelism. Prior to `puma` version `5.6.2`, `puma` may not always call `close` on the response body. Rails, prior to version `7.0.2.2`, depended on the response body being closed in order for its `CurrentAttributes` implementation to work correctly. The combination of these two behaviors (Puma not closing the body + Rails' Executor implementation) causes information leakage. This problem is fixed in Puma versions 5.6.2 and 4.3.11. This problem is fixed in Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2. Upgrading to a patched Rails _or_ Puma version fixes the vulnerability.\n\nCVE-2021-41136:\n\tAn HTTP Request Smuggling vulnerability was found in puma. When using puma with a proxy, which forwards LF characters as line endings, an attacker could use this flaw to smuggle a request through a proxy, causing the proxy to send a response back to another unknown client.\n\nCVE-2021-29509:\n\tA flaw was found in rubygem-puma. The fix for CVE-2019-16770 was incomplete. The original fix only protected existing connections that had already been accepted from having their requests starved by greedy persistent-connections saturating all threads in the same process. However, new connections may still be starved by greedy persistent-connections saturating all threads in all processes in the cluster. A `puma` server which received more concurrent `keep-alive` connections than the server had threads in its threadpool would service only a subset of connections, denying service to the unserved connections.\n",
  "packages": [
    {
      "name": "rubygem-puma-debuginfo",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/rubygem-puma-debuginfo-4.3.12-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "rubygem-puma-debugsource",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/rubygem-puma-debugsource-4.3.12-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "rubygem-puma",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "x86_64",
      "filename": "Packages/rubygem-puma-4.3.12-1.amzn2022.0.1.x86_64.rpm"
    },
    {
      "name": "rubygem-puma-doc",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "noarch",
      "filename": "Packages/rubygem-puma-doc-4.3.12-1.amzn2022.0.1.noarch.rpm"
    },
    {
      "name": "rubygem-puma-debuginfo",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/rubygem-puma-debuginfo-4.3.12-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "rubygem-puma-debugsource",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/rubygem-puma-debugsource-4.3.12-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "rubygem-puma",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "i686",
      "filename": "Packages/rubygem-puma-4.3.12-1.amzn2022.0.1.i686.rpm"
    },
    {
      "name": "rubygem-puma-debugsource",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/rubygem-puma-debugsource-4.3.12-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "rubygem-puma-debuginfo",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/rubygem-puma-debuginfo-4.3.12-1.amzn2022.0.1.aarch64.rpm"
    },
    {
      "name": "rubygem-puma",
      "epoch": "0",
      "version": "4.3.12",
      "release": "1.amzn2022.0.1",
      "arch": "aarch64",
      "filename": "Packages/rubygem-puma-4.3.12-1.amzn2022.0.1.aarch64.rpm"
    }
  ],
  "references": [
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29509",
      "id": "CVE-2021-29509",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41136",
      "id": "CVE-2021-41136",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-23634",
      "id": "CVE-2022-23634",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24790",
      "id": "CVE-2022-24790",
      "type": "cve"
    }
  ],
  "cveids": [
    "CVE-2021-29509",
    "CVE-2021-41136",
    "CVE-2022-23634",
    "CVE-2022-24790"
  ]
}