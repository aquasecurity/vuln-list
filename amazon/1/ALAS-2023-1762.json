{
  "id": "ALAS-2023-1762",
  "title": "Amazon Linux AMI 2014.03 - ALAS-2023-1762: medium priority package update for openssl",
  "issued": {
    "date": "2023-06-05 16:39"
  },
  "updated": {
    "date": "2023-06-08 23:39"
  },
  "severity": "medium",
  "description": "Package updates are available for Amazon Linux AMI that fix the following vulnerabilities:\nCVE-2023-2650:\n\tIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.\n\nCVE-2023-0466:\n\tThe function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification. As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function. Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument. Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.\n\nCVE-2023-0465:\n\tApplications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.\n\nCVE-2023-0464:\n\tA security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.\n",
  "packages": [
    {
      "name": "openssl",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "x86_64",
      "filename": "Packages/openssl-1.0.2k-16.163.amzn1.x86_64.rpm"
    },
    {
      "name": "openssl-devel",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "x86_64",
      "filename": "Packages/openssl-devel-1.0.2k-16.163.amzn1.x86_64.rpm"
    },
    {
      "name": "openssl-static",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "x86_64",
      "filename": "Packages/openssl-static-1.0.2k-16.163.amzn1.x86_64.rpm"
    },
    {
      "name": "openssl-perl",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "x86_64",
      "filename": "Packages/openssl-perl-1.0.2k-16.163.amzn1.x86_64.rpm"
    },
    {
      "name": "openssl-debuginfo",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "x86_64",
      "filename": "Packages/openssl-debuginfo-1.0.2k-16.163.amzn1.x86_64.rpm"
    },
    {
      "name": "openssl-debuginfo",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "i686",
      "filename": "Packages/openssl-debuginfo-1.0.2k-16.163.amzn1.i686.rpm"
    },
    {
      "name": "openssl-perl",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "i686",
      "filename": "Packages/openssl-perl-1.0.2k-16.163.amzn1.i686.rpm"
    },
    {
      "name": "openssl-devel",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "i686",
      "filename": "Packages/openssl-devel-1.0.2k-16.163.amzn1.i686.rpm"
    },
    {
      "name": "openssl-static",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "i686",
      "filename": "Packages/openssl-static-1.0.2k-16.163.amzn1.i686.rpm"
    },
    {
      "name": "openssl",
      "epoch": "1",
      "version": "1.0.2k",
      "release": "16.163.amzn1",
      "arch": "i686",
      "filename": "Packages/openssl-1.0.2k-16.163.amzn1.i686.rpm"
    }
  ],
  "references": [
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0464",
      "id": "CVE-2023-0464",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0465",
      "id": "CVE-2023-0465",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0466",
      "id": "CVE-2023-0466",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2650",
      "id": "CVE-2023-2650",
      "type": "cve"
    }
  ],
  "cveids": [
    "CVE-2023-0464",
    "CVE-2023-0465",
    "CVE-2023-0466",
    "CVE-2023-2650"
  ]
}