{
  "id": "ALAS2023-2023-051",
  "title": "Amazon Linux 2023 - ALAS2023-2023-051: Important priority package update for openssl",
  "issued": {
    "date": "2023-02-17 20:45:00"
  },
  "updated": {
    "date": "2023-02-22 23:37:00"
  },
  "severity": "Important",
  "description": "Package updates are available for Amazon Linux 2023 that fix the following vulnerabilities:\nCVE-2022-3786:\n\tA buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the . character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service).\n\nCVE-2022-3602:\n\tA buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs\nafter certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution.\n.\n\nCVE-2022-2097:\n\tAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed.\n\nCVE-2022-2068:\n\tA flaw was found in OpenSSL. The issue in CVE-2022-1292 did not find other places in the `c_rehash` script where it possibly passed the file names of certificates being hashed to a command executed through the shell. Some operating systems distribute this script in a manner where it is automatically executed. On these operating systems, this flaw allows an attacker to execute arbitrary commands with the privileges of the script.\n\nCVE-2022-1473:\n\tThe OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\nCVE-2022-1434:\n\tThe OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\nCVE-2022-1343:\n\tThe function `OCSP_basic_verify` verifies the signer certificate on an OCSP response. In the case where the (non-default) flag OCSP_NOCHECKS is used then the response will be positive (meaning a successful verification) even in the case where the response signing certificate fails to verify. It is anticipated that most users of `OCSP_basic_verify` will not use the OCSP_NOCHECKS flag. In this case the `OCSP_basic_verify` function will return a negative value (indicating a fatal error) in the case of a certificate verification failure. The normal expected return value in this case would be 0. This issue also impacts the command line OpenSSL ocsp application. When verifying an ocsp response with the -no_cert_checks option the command line application will report that the verification is successful even though it has in fact failed. In this case the incorrect successful response will also be accompanied by error messages showing the failure and contradicting the apparently successful result. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\nCVE-2022-1292:\n\tThe c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).\n\nCVE-2022-0778:\n\tThe BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc). (CVE-2022-0778)\n",
  "packages": [
    {
      "name": "openssl-libs-debuginfo",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-libs-debuginfo-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl-perl",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-perl-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl-debuginfo",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-debuginfo-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl-libs",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-libs-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl-debugsource",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-debugsource-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl-devel",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "x86_64",
      "filename": "Packages/openssl-devel-3.0.5-1.amzn2023.0.4.x86_64.rpm"
    },
    {
      "name": "openssl-libs",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-libs-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl-libs-debuginfo",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-libs-debuginfo-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl-debugsource",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-debugsource-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl-devel",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-devel-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl-debuginfo",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-debuginfo-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl-perl",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "i686",
      "filename": "Packages/openssl-perl-3.0.5-1.amzn2023.0.4.i686.rpm"
    },
    {
      "name": "openssl-libs-debuginfo",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-libs-debuginfo-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    },
    {
      "name": "openssl-perl",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-perl-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    },
    {
      "name": "openssl-debuginfo",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-debuginfo-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    },
    {
      "name": "openssl-libs",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-libs-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    },
    {
      "name": "openssl",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    },
    {
      "name": "openssl-debugsource",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-debugsource-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    },
    {
      "name": "openssl-devel",
      "epoch": "1",
      "version": "3.0.5",
      "release": "1.amzn2023.0.4",
      "arch": "aarch64",
      "filename": "Packages/openssl-devel-3.0.5-1.amzn2023.0.4.aarch64.rpm"
    }
  ],
  "references": [
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-0778",
      "id": "CVE-2022-0778",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1292",
      "id": "CVE-2022-1292",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1343",
      "id": "CVE-2022-1343",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1434",
      "id": "CVE-2022-1434",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1473",
      "id": "CVE-2022-1473",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2068",
      "id": "CVE-2022-2068",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-2097",
      "id": "CVE-2022-2097",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3602",
      "id": "CVE-2022-3602",
      "type": "cve"
    },
    {
      "href": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3786",
      "id": "CVE-2022-3786",
      "type": "cve"
    }
  ],
  "cveids": [
    "CVE-2022-0778",
    "CVE-2022-1292",
    "CVE-2022-1343",
    "CVE-2022-1434",
    "CVE-2022-1473",
    "CVE-2022-2068",
    "CVE-2022-2097",
    "CVE-2022-3602",
    "CVE-2022-3786"
  ]
}