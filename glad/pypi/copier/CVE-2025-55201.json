{
  "Identifier": "CVE-2025-55201",
  "PackageSlug": "pypi/copier",
  "Title": "Copier's safe template has arbitrary filesystem read/write access",
  "Description": "Copier's current security model shall restrict filesystem access through Jinja:\n\n- Files can only be read using `{% include ... %}`, which is limited by Jinja to reading files from the subtree of the local template clone in our case.\n- Files are written in the destination directory according to their counterparts in the template.\n\nCopier suggests that it's safe to generate a project from a safe template, i.e. one that doesn't use [unsafe](https://copier.readthedocs.io/en/stable/configuring/#unsafe) features like custom Jinja extensions which would require passing the `--UNSAFE,--trust` flag. As it turns out, a safe template can currently read and write arbitrary files because we expose a few `pathlib.Path` objects in the Jinja context which have unconstrained I/O methods. This effectively renders our security model w.r.t. filesystem access useless.",
  "Date": "2025-08-18",
  "Pubdate": "2025-08-18",
  "AffectedRange": "\u003c9.9.1",
  "FixedVersions": [
    "9.9.1"
  ],
  "AffectedVersions": "All versions before 9.9.1",
  "NotImpacted": "All versions starting from 9.9.1",
  "Solution": "Upgrade to version 9.9.1 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2025-55201",
    "https://github.com/advisories/GHSA-3xw7-v6cj-5q8h",
    "https://github.com/copier-org/copier/security/advisories/GHSA-3xw7-v6cj-5q8h",
    "https://github.com/copier-org/copier/commit/3feea3b3ff3c20d80cbb16a2f3b9567ffc5606d1",
    "https://github.com/copier-org/copier"
  ],
  "CvssV2": "",
  "CvssV3": "",
  "UUID": "c9dcd2d6-e4d3-4712-a10a-bc85e9aee0d7"
}