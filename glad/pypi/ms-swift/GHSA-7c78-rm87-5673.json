{
  "Identifier": "GHSA-7c78-rm87-5673",
  "PackageSlug": "pypi/ms-swift",
  "Title": "MS SWIFT WEB-UI RCE Vulnerability",
  "Description": "**I. Detailed Description:**\n\n1. Install ms-swift\n```\npip install ms-swift -U\n```\n\n2. Start web-ui\n```\nswift web-ui --lang en\n```\n\n3. After startup, access through browser at [http://localhost:7860/](http://localhost:7860/) to see the launched fine-tuning framework program\n\n4. Fill in necessary parameters\nIn the LLM Training interface, fill in required parameters including Model id, Dataset Code. The --output_dir can be filled arbitrarily as it will be modified later through packet capture\n\n5. Click Begin to start training. Capture packets and modify the parameter corresponding to --output_dir\n\nYou can see the concatenated command being executed in the terminal where web-ui was started\n\n6. Wait for the program to run (testing shows it requires at least 5 minutes), and you can observe the effect of command execution creating files\n\n**II. Vulnerability Proof:**\n```\n/tmp/xxx'; touch /tmp/inject_success_1; #\n```\n\n**III. Fix Solution:**\n1. The swift.ui.llm_train.llm_train.LLMTrain#train() method should not directly concatenate parameters with commands after receiving commands from the frontend\n2. The swift.ui.llm_train.llm_train.LLMTrain#train_local() method should not use os.system for execution, but should be changed to subprocess.run([cmd, arg1, arg2...]) format",
  "Date": "2025-07-31",
  "Pubdate": "2025-07-31",
  "AffectedRange": "\u003c=3.6.3",
  "FixedVersions": [],
  "AffectedVersions": "All versions up to 3.6.3",
  "NotImpacted": "",
  "Solution": "Unfortunately, there is no solution available yet.",
  "Urls": [
    "https://github.com/advisories/GHSA-7c78-rm87-5673",
    "https://github.com/modelscope/ms-swift/security/advisories/GHSA-7c78-rm87-5673",
    "https://github.com/modelscope/ms-swift/commit/32f09e9b0a44f19d44210e2b5b47c58ab01740e1",
    "https://github.com/modelscope/ms-swift"
  ],
  "CvssV2": "",
  "CvssV3": "",
  "UUID": "3e8d3cfc-9fb4-43e8-9aa8-af6f9a078980"
}