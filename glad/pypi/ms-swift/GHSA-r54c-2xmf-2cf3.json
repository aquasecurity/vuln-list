{
  "Identifier": "GHSA-r54c-2xmf-2cf3",
  "PackageSlug": "pypi/ms-swift",
  "Title": "MS SWIFT Deserialization RCE Vulnerability",
  "Description": "This appears to be a security vulnerability report describing a remote code execution (RCE) exploit in the ms-swift framework through malicious pickle deserialization in adapter model files. The vulnerability allows arbitrary command execution when loading specially crafted adapter models from ModelScope.\n\nThis occurs when using machine torch version \u003c 2.6.0, while ms-swift accepts torch version \u003e= 2.0\n\n**I. Detailed Description:**\n1. Install ms-swift\n```\npip install ms-swift -U\n```\n\n2. Start web-ui\n```\nswift web-ui --lang en\n```\n\n3. After startup, you can access [http://localhost:7860/](http://localhost:7860/) through your browser to see the launched fine-tuning framework program\n\n4. Upload an adapter model repository (cyjhhh/lora_adapter_4_llama3) on ModelScope, where the lora/adapter_model.bin file is generated through the following code:\n```python\nimport torch, pickle, os\n\nclass MaliciousPayload:\ndef __reduce__(self):\nreturn (os.system, (\"touch /tmp/malicious.txt\",))  # Arbitrary command\n\nmalicious_data = {\n\"v_head.summary.weight\": MaliciousPayload(),\n\"v_head.summary.bias\": torch.randn(10)\n}\n\nif __name__ == \"__main__\":\nwith open(\"adapter_model.bin\", \"wb\") as f:\npickle.dump(malicious_data, f)\n```\n\n5. First training submission: First, fill in the required parameters in the LLM Training interface, including Model id and Dataset Code, and configure the following in the Other params section of Advanced settings\n\n6. Click Begin to submit. You can see the backend command running as follows\n\n7. By reading the ms-swift source code, swift.llm.model.utils#safe_snapshot_download() and modelscope.hub.utils.utils#get_cache_dir(), we can see that adapters are downloaded locally to the path ~/.cache/modelscope. Therefore, the complete local path for the specified remote adapters after download is:\n```\n~/.cache/modelscope/hub/models/cyjhhh/lora_adapter_4_llama3\n```\nWait for the first submission program until the adapters download is complete, then you can click \"kill running task\" on the page to terminate the first training\n\n8. Second training submission, configure the page parameters as follows\n\nClick submit to see the backend command running as follows\n\n9. After waiting for a while, you can see that torch.load() loaded the malicious adapter_model.bin file and successfully executed the command. Related execution information can also be seen in the log file corresponding to --logging_dir\n\n10. Note (Prerequisites)\nRequires machine torch version \u003c 2.6.0, while ms-swift accepts torch version \u003e= 2.0",
  "Date": "2025-07-31",
  "Pubdate": "2025-07-31",
  "AffectedRange": "\u003c=3.6.3",
  "FixedVersions": [],
  "AffectedVersions": "All versions up to 3.6.3",
  "NotImpacted": "",
  "Solution": "Unfortunately, there is no solution available yet.",
  "Urls": [
    "https://github.com/advisories/GHSA-r54c-2xmf-2cf3",
    "https://github.com/modelscope/ms-swift/security/advisories/GHSA-r54c-2xmf-2cf3",
    "https://github.com/modelscope/ms-swift/commit/cc47463bcd25a8720437cf945130f43052eec5e4",
    "https://github.com/modelscope/ms-swift"
  ],
  "CvssV2": "",
  "CvssV3": "",
  "UUID": "2c3e06d3-6917-474c-850a-561a8a950461"
}