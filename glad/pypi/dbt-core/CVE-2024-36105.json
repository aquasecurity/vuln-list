{
  "Identifier": "CVE-2024-36105",
  "PackageSlug": "pypi/dbt-core",
  "Title": "dbt allows Binding to an Unrestricted IP Address via socketsocket",
  "Description": "Binding to `INADDR_ANY (0.0.0.0)` or `IN6ADDR_ANY (::)` exposes an application on all network interfaces, increasing the risk of unauthorized access.\n\nWhile doing some static analysis and code inspection, I found the following code binding a socket to `INADDR_ANY` by passing `\"\"` as the address. This effectively binds to any network interface on the local system, not just localhost (127.0.0.1).",
  "Date": "2024-05-28",
  "Pubdate": "2024-05-28",
  "AffectedRange": "\u003c1.6.15||\u003e=1.7.0,\u003c1.7.15||\u003e=1.8.0,\u003c1.8.1||==1.8.0",
  "FixedVersions": [
    "1.6.15",
    "1.7.15",
    "1.8.1"
  ],
  "AffectedVersions": "All versions before 1.6.15, all versions starting from 1.7.0 before 1.7.15, all versions starting from 1.8.0 before 1.8.1, version 1.8.0",
  "NotImpacted": "",
  "Solution": "Upgrade to versions 1.6.15, 1.7.15, 1.8.1 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2024-36105",
    "https://github.com/advisories/GHSA-pmrx-695r-4349",
    "https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-pmrx-695r-4349",
    "https://github.com/dbt-labs/dbt-core/issues/10209",
    "https://github.com/dbt-labs/dbt-core/pull/10208",
    "https://github.com/dbt-labs/dbt-core/commit/0c08d7a19ad1740be3cb0b2e6d9d64f6537176f7",
    "https://cwe.mitre.org/data/definitions/1327.html",
    "https://docs.python.org/3/library/socket.html#socket-families",
    "https://docs.securesauce.dev/rules/PY030",
    "https://github.com/dbt-labs/dbt-core",
    "https://github.com/dbt-labs/dbt-core/blob/main/core/dbt/task/docs/serve.py#L23C38-L23C39",
    "https://github.com/dbt-labs/dbt-core/releases/tag/v1.6.15",
    "https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.15",
    "https://github.com/dbt-labs/dbt-core/releases/tag/v1.8.1"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
  "UUID": "40ebf069-5fdf-4858-b32f-1bf0f2adb3c5"
}