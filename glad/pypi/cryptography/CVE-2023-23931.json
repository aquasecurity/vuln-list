{
  "Identifier": "CVE-2023-23931",
  "PackageSlug": "pypi/cryptography",
  "Title": "Cipher.update_into can corrupt memory if passed an immutable python object as the outbuf",
  "Description": "Previously, `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers:\n\n```pycon\n\u003e\u003e\u003e outbuf = b\"\\x00\" * 32\n\u003e\u003e\u003e c = ciphers.Cipher(AES(b\"\\x00\" * 32), modes.ECB()).encryptor()\n\u003e\u003e\u003e c.update_into(b\"\\x00\" * 16, outbuf)\n16\n\u003e\u003e\u003e outbuf\nb'\\xdc\\x95\\xc0x\\xa2@\\x89\\x89\\xadH\\xa2\\x14\\x92\\x84 \\x87\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n```\n\nThis would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python. This is a soundness bug -- it allows programmers to misuse an API, it cannot be exploited by attacker controlled data alone.\n\nThis now correctly raises an exception.\n\nThis issue has been present since `update_into` was originally introduced in cryptography 1.8.",
  "Date": "2024-09-13",
  "Pubdate": "2023-02-07",
  "AffectedRange": "\u003e=1.8,\u003c39.0.1",
  "FixedVersions": [
    "39.0.1"
  ],
  "AffectedVersions": "All versions starting from 1.8 before 39.0.1",
  "NotImpacted": "All versions before 1.8, all versions starting from 39.0.1",
  "Solution": "Upgrade to version 39.0.1 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2023-23931",
    "https://github.com/advisories/GHSA-w7pp-m8wf-vj6r",
    "https://github.com/pyca/cryptography/security/advisories/GHSA-w7pp-m8wf-vj6r",
    "https://github.com/pyca/cryptography/pull/8230",
    "https://github.com/pyca/cryptography/commit/d6951dca25de45abd52da51b608055371fbcde4e",
    "https://github.com/pyca/cryptography",
    "https://github.com/pypa/advisory-database/tree/main/vulns/cryptography/PYSEC-2023-11.yaml"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L",
  "UUID": "d97dae45-1f87-44eb-82a8-661aa1ee0618"
}