{
  "Identifier": "CVE-2022-21728",
  "PackageSlug": "pypi/tensorflow-gpu",
  "Title": "Out of bounds read in Tensorflow",
  "Description": "The [implementation of shape inference for `ReverseSequence`](https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/ops/array_ops.cc#L1636-L1671) does not fully validate the value of `batch_dim` and can result in a heap OOB read:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\ny = tf.raw_ops.ReverseSequence(\ninput = ['aaa','bbb'],\nseq_lengths = [1,1,1],\nseq_dim = -10,\nbatch_dim = -10 )\nreturn y\n\ntest()\n```\n\nThere is a check to make sure the value of `batch_dim` does not go over the rank of the input, but there is no check for negative values:\n\n```cc\nconst int32_t input_rank = c-\u003eRank(input);\nif (batch_dim \u003e= input_rank) {\nreturn errors::InvalidArgument(\n\"batch_dim must be \u003c input rank: \", batch_dim, \" vs. \", input_rank);\n}\n// ...\n\nDimensionHandle batch_dim_dim = c-\u003eDim(input, batch_dim);\n```\n\nNegative dimensions are allowed in some cases to mimic Python's negative indexing (i.e., indexing from the end of the array), however if the value is too negative then [the implementation of `Dim`](https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/framework/shape_inference.h#L415-L428) would access elements before the start of an array:\n\n```cc\nDimensionHandle Dim(ShapeHandle s, int64_t idx) {\nif (!s.Handle() || s-\u003erank_ == kUnknownRank) {\nreturn UnknownDim();\n}\nreturn DimKnownRank(s, idx);\n}\nÂ·\nstatic DimensionHandle DimKnownRank(ShapeHandle s, int64_t idx) {\nCHECK_NE(s-\u003erank_, kUnknownRank);\nif (idx \u003c 0) {\nreturn s-\u003edims_[s-\u003edims_.size() + idx];\n}\nreturn s-\u003edims_[idx];\n}\n```",
  "Date": "2024-11-13",
  "Pubdate": "2022-02-09",
  "AffectedRange": "\u003c2.5.3||\u003e=2.6.0,\u003c2.6.3||\u003e=2.7.0,\u003c2.7.1||==2.7.0",
  "FixedVersions": [
    "2.5.3",
    "2.6.3",
    "2.7.1"
  ],
  "AffectedVersions": "All versions before 2.5.3, all versions starting from 2.6.0 before 2.6.3, all versions starting from 2.7.0 before 2.7.1, version 2.7.0",
  "NotImpacted": "",
  "Solution": "Upgrade to versions 2.5.3, 2.6.3, 2.7.1 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2022-21728",
    "https://github.com/advisories/GHSA-6gmv-pjp9-p8w8",
    "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6gmv-pjp9-p8w8",
    "https://github.com/tensorflow/tensorflow/commit/37c01fb5e25c3d80213060460196406c43d31995",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-52.yaml",
    "https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-107.yaml",
    "https://github.com/tensorflow/tensorflow",
    "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/framework/shape_inference.h#L415-L428",
    "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/ops/array_ops.cc#L1636-L1671"
  ],
  "CvssV2": "AV:N/AC:L/Au:S/C:P/I:N/A:P",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H",
  "UUID": "887ccf22-e884-404a-b297-eb0c9383b1e0"
}