{
  "Identifier": "CVE-2022-24795",
  "PackageSlug": "gem/yajl-ruby",
  "Title": "Heap-based Buffer Overflow",
  "Description": "yajl-ruby is a C binding to the YAJL JSON parsing and generation library. The 1.x branch and the 2.x branch of `yajl` contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs. The reallocation logic at `yajl_buf.c#L64` may result in the `need` 32bit integer wrapping to 0 when `need` approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf-\u003ealloc into a small heap chunk. These integers are declared as `size_t` in the 2.x branch of `yajl`, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which `size_t` is a 32bit integer. Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption. This vulnerability mostly impacts process availability. Maintainers believe exploitation for arbitrary code execution is unlikely. A patch is available and anticipated to be part of yajl-ruby version 1.4.2. As a workaround, avoid passing large inputs to YAJL.",
  "Date": "2023-11-07",
  "Pubdate": "2022-04-05",
  "AffectedRange": "\u003c1.4.2",
  "FixedVersions": [
    "1.4.2"
  ],
  "AffectedVersions": "All versions before 1.4.2",
  "NotImpacted": "All versions starting from 1.4.2",
  "Solution": "Upgrade to version 1.4.2 or above.",
  "Urls": [
    "https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm",
    "https://github.com/advisories/GHSA-jj47-x69x-mxrm"
  ],
  "CvssV2": "AV:N/AC:L/Au:N/C:P/I:N/A:N",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "UUID": "25255b57-91c4-41b0-980c-36a210e90a52"
}