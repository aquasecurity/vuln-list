{
  "Identifier": "CVE-2022-36078",
  "PackageSlug": "go/github.com/gagliardetto/binary",
  "Title": "Uncontrolled Resource Consumption",
  "Description": "Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(\u0026val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(\u0026val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.",
  "Date": "2023-07-21",
  "Pubdate": "2022-09-02",
  "AffectedRange": "\u003cv0.7.1",
  "FixedVersions": [
    "v0.7.1"
  ],
  "AffectedVersions": "All versions before 0.7.1",
  "NotImpacted": "",
  "Solution": "Upgrade to version 0.7.1 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2022-36078",
    "https://github.com/gagliardetto/binary/security/advisories/GHSA-4p6f-m4f9-ch88",
    "https://github.com/gagliardetto/binary/releases/tag/v0.7.1",
    "https://github.com/gagliardetto/binary/pull/7"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "UUID": "5ce4fb42-edb4-4a0f-b07c-d7e624b914eb"
}