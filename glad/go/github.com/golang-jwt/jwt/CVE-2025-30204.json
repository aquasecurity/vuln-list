{
  "Identifier": "CVE-2025-30204",
  "PackageSlug": "go/github.com/golang-jwt/jwt",
  "Title": "jwt-go allows excessive memory allocation during header parsing",
  "Description": "Function [`parse.ParseUnverified`](https://github.com/golang-jwt/jwt/blob/c035977d9e11c351f4c05dfeae193923cbab49ee/parser.go#L138-L139) currently splits (via a call to [strings.Split](https://pkg.go.dev/strings#Split)) its argument (which is untrusted data) on periods.\n\nAs a result, in the face of a malicious request whose _Authorization_ header consists of `Bearer ` followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. Relevant weakness: [CWE-405: Asymmetric Resource Consumption (Amplification)](https://cwe.mitre.org/data/definitions/405.html)",
  "Date": "2025-04-10",
  "Pubdate": "2025-03-21",
  "AffectedRange": "\u003e=5.0.0-rc.1 \u003c5.2.2",
  "FixedVersions": [
    "5.2.2"
  ],
  "AffectedVersions": "All versions starting from 5.0.0-rc.1 before 5.2.2",
  "NotImpacted": "All versions before 5.0.0-rc.1, all versions starting from 5.2.2",
  "Solution": "Upgrade to version 5.2.2 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2025-30204",
    "https://github.com/advisories/GHSA-mh63-6h87-95cp",
    "https://github.com/golang-jwt/jwt/security/advisories/GHSA-mh63-6h87-95cp",
    "https://github.com/golang-jwt/jwt/commit/0951d184286dece21f73c85673fd308786ffe9c3",
    "https://github.com/golang-jwt/jwt/commit/bf316c48137a1212f8d0af9288cc9ce8e59f1afb",
    "https://github.com/golang-jwt/jwt",
    "https://security.netapp.com/advisory/ntap-20250404-0002"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "UUID": "7606f89a-ff63-4641-814e-e7537e9bf111"
}