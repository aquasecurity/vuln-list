{
  "Identifier": "CVE-2022-21698",
  "PackageSlug": "go/github.com/prometheus/client_golang",
  "Title": "Uncontrolled Resource Consumption",
  "Description": "client_golang's HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
  "Date": "2022-02-17",
  "Pubdate": "2022-02-16",
  "AffectedRange": "\u003cv1.11.1",
  "FixedVersions": [
    "v1.11.1"
  ],
  "AffectedVersions": "All versions before 1.11.1",
  "NotImpacted": "All versions starting from 1.11.1",
  "Solution": "Upgrade to version 1.11.1 or above.",
  "Urls": [
    "https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p",
    "https://nvd.nist.gov/vuln/detail/CVE-2022-21698",
    "https://github.com/prometheus/client_golang/pull/962",
    "https://github.com/prometheus/client_golang/pull/987",
    "https://github.com/prometheus/client_golang/releases/tag/v1.11.1",
    "https://github.com/advisories/GHSA-cg3q-j54f-5p7p"
  ],
  "CvssV2": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
  "UUID": "0ed1f701-5ba1-4199-bfc3-1c5b781b033b"
}