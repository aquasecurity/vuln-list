{
  "Identifier": "CVE-2024-29903",
  "PackageSlug": "go/github.com/sigstore/cosign",
  "Title": "Cosign malicious artifacts can cause machine-wide DoS",
  "Description": "Maliciously-crafted software artifacts can cause denial of service of the machine running Cosign, thereby impacting all services on the machine. The root cause is that Cosign creates slices based on the number of signatures, manifests or attestations in untrusted artifacts. As such, the untrusted artifact can control the amount of memory that Cosign allocates.\n\nAs an example, these lines demonstrate the problem:\n\nhttps://github.com/sigstore/cosign/blob/286a98a4a99c1b2f32f84b0d560e324100312280/pkg/oci/remote/signatures.go#L56-L70\n\nThis `Get()` method gets the manifest of the image, allocates a slice equal to the length of the layers in the manifest, loops through the layers and adds a new signature to the slice.\n\nThe exact issue is Cosign allocates excessive memory on the lines that creates a slice of the same length as the manifests.",
  "Date": "2024-04-11",
  "Pubdate": "2024-04-11",
  "AffectedRange": "\u003c2.2.4",
  "FixedVersions": [
    "2.2.4"
  ],
  "AffectedVersions": "All versions before 2.2.4",
  "NotImpacted": "All versions starting from 2.2.4",
  "Solution": "Upgrade to version 2.2.4 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2024-29903",
    "https://github.com/advisories/GHSA-95pr-fxf5-86gv",
    "https://github.com/sigstore/cosign/security/advisories/GHSA-95pr-fxf5-86gv",
    "https://github.com/sigstore/cosign/commit/629f5f8fa672973503edde75f84dcd984637629e",
    "https://github.com/sigstore/cosign",
    "https://github.com/sigstore/cosign/blob/14795db16417579fac0c00c11e166868d7976b61/pkg/cosign/verify.go#L948-L955",
    "https://github.com/sigstore/cosign/blob/286a98a4a99c1b2f32f84b0d560e324100312280/pkg/oci/remote/signatures.go#L56-L70",
    "https://github.com/sigstore/cosign/releases/tag/v2.2.4"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:N/I:N/A:H",
  "UUID": "e08fb50d-26a6-4be1-971e-8e01b4b674f5"
}