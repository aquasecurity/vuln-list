{
  "Identifier": "CVE-2024-41948",
  "PackageSlug": "maven/org.biscuitsec/biscuit",
  "Title": "biscuit-java vulnerable to public key confusion in third party block",
  "Description": "Third-party blocks can be generated without transferring the whole token to the third-party authority. Instead, a `ThirdPartyBlock` request can be sent, providing only the necessary info to generate a third-party block and to sign it:\n\nthe public key of the previous block (used in the signature)\nthe public keys part of the token symbol table (for public key interning in datalog expressions)\nA third-part block request forged by a malicious user can trick the third-party authority into generating datalog trusting the wrong keypair.\n\nConsider the following example (nominal case)\n* Authority A emits the following token: `check if thirdparty(\"b\") trusting ${pubkeyB}`\n* The well-behaving holder then generates a third-party block request based on the token and sends it to third-party authority B\n* Third-party B generates the following third-party block `thirdparty(\"b\"); check if thirdparty(\"c\") trusting ${pubkeyC}`\n* The token holder now must obtain a third-party block from third party C to be able to use the token\n\nNow, with a malicious user:\n* Authority A emits the following token: `check if thirdparty(\"b\") trusting ${pubkeyB}`\n* The holder then attenuates the token with the following third party block `thirdparty(\"c\")`, signed with a keypair pubkeyD, privkeyD) they generate\n* The holder then generates a third-party block request based on this token, but alter the `ThirdPartyBlockRequest` publicKeys field and replace pubkeyD with pubkeyC\n* Third-party B generates the following third-party block `thirdparty(\"b\"); check if thirdparty(\"c\") trusting ${pubkeyC}`\n* Due to the altered symbol table, the actual meaning of the block is `thirdparty(\"b\"); check if thirdparty(\"c\") trusting ${pubkeyD}`\n* The attacker can now use the token without obtaining a third-party block from C.",
  "Date": "2024-11-18",
  "Pubdate": "2024-07-31",
  "AffectedRange": "[3.0.0,4.0.0)",
  "FixedVersions": [
    "4.0.0"
  ],
  "AffectedVersions": "All versions starting from 3.0.0 before 4.0.0",
  "NotImpacted": "All versions before 3.0.0, all versions starting from 4.0.0",
  "Solution": "Upgrade to version 4.0.0 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2024-41948",
    "https://github.com/advisories/GHSA-5hcj-rwm6-xmw4",
    "https://github.com/biscuit-auth/biscuit-java/security/advisories/GHSA-5hcj-rwm6-xmw4",
    "https://github.com/biscuit-auth/biscuit/security/advisories/GHSA-rgqv-mwc3-c78m",
    "https://github.com/biscuit-auth/biscuit-java/commit/2e05e7b3f8f2aae38f33294f19419e2d638cb564",
    "https://github.com/biscuit-auth/biscuit-java",
    "https://github.com/biscuit-auth/biscuit-java/releases/tag/4.0.0"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:L/A:N",
  "UUID": "cb726f31-3441-490b-af94-d53cea788210"
}