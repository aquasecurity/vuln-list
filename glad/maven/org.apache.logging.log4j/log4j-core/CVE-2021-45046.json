{
  "Identifier": "CVE-2021-45046",
  "PackageSlug": "maven/org.apache.logging.log4j/log4j-core",
  "Title": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
  "Description": "It was found that the fix to address CVE-2021-44228 in Apache Log4j was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, `$${ctx:loginId})` or a Thread Context Map pattern (`%X`, `%mdc`, or `%MDC`) to craft malicious input data using a JNDI Lookup pattern resulting in a denial of service (DOS) attack. Log4j restricts JNDI LDAP lookups to localhost by default. Note that previous mitigations involving configuration such as to set the system property `log4j2.noFormatMsgLookup` to `true` do NOT mitigate this specific vulnerability. Log4j fixes this issue by removing support for message lookup patterns and disabling JNDI functionality by default. This issue can be mitigated in prior releases (\u003c2.16.0) by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class).",
  "Date": "2023-10-26",
  "Pubdate": "2021-12-14",
  "AffectedRange": "[2.0,2.12.2),[2.13.0,2.16.0)",
  "FixedVersions": [
    "2.12.2",
    "2.16.0"
  ],
  "AffectedVersions": "All versions starting from 2.0 up to 2.12.1, all versions starting from 2.13.0 before 2.16.0",
  "NotImpacted": "All versions before 2.0, all versions after 2.12.2 before 2.13.0, all versions starting from 2.16.0",
  "Solution": "Upgrade to versions 2.12.2, 2.16.0 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2021-45046",
    "http://www.openwall.com/lists/oss-security/2021/12/14/4",
    "https://logging.apache.org/log4j/2.x/security.html"
  ],
  "CvssV2": "AV:N/AC:H/Au:N/C:P/I:P/A:P",
  "CvssV3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H",
  "UUID": "788f3d07-b01c-41d3-b9f0-56693bb21ec8"
}