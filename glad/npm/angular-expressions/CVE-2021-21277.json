{
  "Identifier": "CVE-2021-21277",
  "PackageSlug": "npm/angular-expressions",
  "Title": "Injection Vulnerability",
  "Description": "In angular-expressions there is a vulnerability which allows Remote Code Execution if you call `expressions.compile(userControlledInput)` where \"userControlledInput\" is text that comes from user input. The security of the package could be bypassed by using a more complex payload, using a `constructor.constructor` technique. In terms of impact: If running angular-expressions in the browser, an attacker could run any browser script when the application code calls `expressions.compile(userControlledInput)`. If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution. This is fixed of angular-expressions A temporary workaround might be either to disable user-controlled input that will be fed into angular-expressions in your application or allow only following characters in the `userControlledInput`.",
  "Date": "2022-10-19",
  "Pubdate": "2021-02-01",
  "AffectedRange": "\u003c1.1.2",
  "FixedVersions": [
    "1.1.2"
  ],
  "AffectedVersions": "All versions before 1.1.2",
  "NotImpacted": "All versions starting from 1.1.2",
  "Solution": "Upgrade to version 1.1.2 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2021-21277",
    "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html",
    "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-j6px-jwvv-vpwq"
  ],
  "CvssV2": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
  "UUID": "98dcf6ff-2e90-4fb0-a68b-7c4f3a4bea84"
}