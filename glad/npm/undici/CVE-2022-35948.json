{
  "Identifier": "CVE-2022-35948",
  "PackageSlug": "npm/undici",
  "Title": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
  "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=\u003c undici@5.8.0` users is vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
  "Date": "2023-03-28",
  "Pubdate": "2022-08-15",
  "AffectedRange": "\u003c5.8.2",
  "FixedVersions": [
    "5.8.2"
  ],
  "AffectedVersions": "All versions before 5.8.2",
  "NotImpacted": "All versions starting from 5.8.2",
  "Solution": "Upgrade to version 5.8.2 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2022-35948",
    "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3",
    "https://github.com/nodejs/undici/releases/tag/v5.8.2",
    "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
  "UUID": "1c941332-5d09-40e0-9682-12ad26ed3894"
}