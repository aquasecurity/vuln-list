{
  "Identifier": "CVE-2024-39699",
  "PackageSlug": "npm/@directus/api",
  "Title": "Directus Blind SSRF On File Import",
  "Description": "There was already a reported SSRF vulnerability via file import. [https://github.com/directus/directus/security/advisories/GHSA-j3rg-3rgm-537h](https://github.com/directus/directus/security/advisories/GHSA-j3rg-3rgm-537h)\nIt was fixed by resolving all DNS names and checking if the requested IP is an internal IP address.\n\nHowever it is possible to bypass this security measure and execute a SSRF using redirects. Directus allows redirects when importing file from the URL and does not check the result URL. Thus, it is possible to execute a request to an internal IP, for example to 127.0.0.1.\n\nHowever, it is blind SSRF, because Directus also uses response interception technique to get the information about the connect from the socket directly and it does not show a response if the IP address is internal (nice fix, by the way :) ).\n\nBut the blindness does not fully mitigate the impact of the vulnerability. The blind SSRF is still exploitable in the real life scenarios, because there could be a vulnerable software inside of the network which can be exploited with GET request. I will show the example in the PoC. Also, you can check [HackTricks](https://book.hacktricks.xyz/pentesting-web/ssrf-server-side-request-forgery/ssrf-vulnerable-platforms) page with some known cases.",
  "Date": "2024-07-08",
  "Pubdate": "2024-07-08",
  "AffectedRange": "\u003c17.1.0",
  "FixedVersions": [
    "17.1.0"
  ],
  "AffectedVersions": "All versions before 17.1.0",
  "NotImpacted": "All versions starting from 17.1.0",
  "Solution": "Upgrade to version 17.1.0 or above.",
  "Urls": [
    "https://nvd.nist.gov/vuln/detail/CVE-2024-39699",
    "https://github.com/advisories/GHSA-8p72-rcq4-h6pw",
    "https://github.com/directus/directus/security/advisories/GHSA-8p72-rcq4-h6pw",
    "https://github.com/directus/directus/commit/d577b44231c0923aca99cac5770fd853801caee1",
    "https://github.com/directus/directus"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N",
  "UUID": "25722d4f-f5c1-4615-8f0d-16c2943cb5f9"
}