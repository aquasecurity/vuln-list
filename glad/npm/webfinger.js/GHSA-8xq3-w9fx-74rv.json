{
  "Identifier": "GHSA-8xq3-w9fx-74rv",
  "PackageSlug": "npm/webfinger.js",
  "Title": "webfinger.js Blind SSRF Vulnerability",
  "Description": "The lookup function takes a user address for checking accounts as a feature, however, as per\nthe ActivityPub spec (https://www.w3.org/TR/activitypub/#security-considerations), on the\nsecurity considerations section at B.3, access to Localhost services should be prevented while\nrunning in production. The library does not prevent Localhost access (neither does it prevent\nLAN addresses such as 192.168.x.x) , thus is not safe for use in production by ActivityPub\napplications. The only check for localhost is done for selecting between HTTP and HTTPS\nprotocols, and it is done by testing for a host that starts with the string “localhost” and ends with\na port. Anything else (such as “127.0.0.1” or “localhost:1234/abc”) would not be considered\nlocalhost for this test.\n\nIn addition, the way that the function determines the host, makes it possible to access any path\nin the host, not only “/.well-known/...” paths:\n\n```javascript\nif (address.indexOf('://') \u003e -1) {\n// other uri format\nhost = address.replace(/ /g,'').split('/')[2];\n} else {\n// useraddress\nhost = address.replace(/ /g,'').split('@')[1];\n}\n\nvar uri_index = 0; // track which URIS we've tried already\nvar protocol = 'https'; // we use https by default\n\nif (self.__isLocalhost(host)) {\nprotocol = 'http';\n}\n\nfunction __buildURL() {\nvar uri = '';\nif (! address.split('://')[1]) {\n// the URI has not been defined, default to acct\nuri = 'acct:';\n}\nreturn protocol + '://' + host + '/.well-known/' +URIS[uri_index] + '?resource=' + uri + address;\n}\n```\n\nIf the address is in the format of a user address (user@host.com), the host will be anything\nafter the first found @ symbol. Since no other test is done, an adversary may pass a specially\ncrafted address such as user@localhost:7000/admin/restricted_page? and reach pages that\nwould normally be out of reach. In this example, the code would treat\nlocalhost:7000/admin/restricted_page? as the host, and the created URL would be\nhttps://localhost:7000/admin/restricted_page?/.well-known/webfinger?resource=acct:use\nr@localhost:7000/admin/restricted_page?. A server listening on localhost:7000 will then\nparse the request as a GET request for the page /admin/restricted_page with the query string\n/.well-known/webfinger?resource=acct:user@localhost:7000/admin/restricted_page?.",
  "Date": "2025-07-29",
  "Pubdate": "2025-07-28",
  "AffectedRange": "\u003c2.8.1",
  "FixedVersions": [
    "2.8.1"
  ],
  "AffectedVersions": "All versions before 2.8.1",
  "NotImpacted": "All versions starting from 2.8.1",
  "Solution": "Upgrade to version 2.8.1 or above.",
  "Urls": [
    "https://github.com/advisories/GHSA-8xq3-w9fx-74rv",
    "https://github.com/silverbucket/webfinger.js/security/advisories/GHSA-8xq3-w9fx-74rv",
    "https://github.com/silverbucket/webfinger.js/commit/b5f2f2c957297d25f4d76072963fccaee2e3095a",
    "https://github.com/silverbucket/webfinger.js",
    "https://github.com/silverbucket/webfinger.js/releases/tag/v2.8.1"
  ],
  "CvssV2": "",
  "CvssV3": "",
  "UUID": "a2c7fd1c-9d24-4e87-9888-47149b88c381"
}