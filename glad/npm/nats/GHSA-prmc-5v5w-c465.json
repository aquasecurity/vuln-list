{
  "Identifier": "GHSA-prmc-5v5w-c465",
  "PackageSlug": "npm/nats",
  "Title": "Client TLS credentials sent raw to server in npm package nats",
  "Description": "Nats is a Node.js client for the NATS messaging system.\n\n## Problem Description\n\n_Preview versions_ of two NPM packages and one Deno package from the NATS project contain an information disclosure flaw, leaking options to the NATS server; for one package, this includes TLS private credentials.\n\nThe _connection_ configuration options in these JavaScript-based implementations were fully serialized and sent to the server in the client's `CONNECT` message, immediately after TLS establishment.\n\nThe nats.js client supports Mutual TLS and the credentials for the TLS client key are included in the connection configuration options; disclosure of the client's TLS private key to the server has been observed.\n\nMost authentication mechanisms are handled after connection, instead of as part of connection, so other authentication mechanisms are unaffected.\nFor clarity: NATS account NKey authentication **is NOT affected**.\n\nNeither the nats.ws nor the nats.deno clients support Mutual TLS: the affected versions listed below are those where the logic flaw is\npresent.  We are including the nats.ws and nats.deno versions out of an abundance of caution, as library maintainers, but rate as minimal the likelihood of applications leaking sensitive data.\n\n\n## Affected versions\n\n### Security impact\n\n* NPM package nats.js:\n  + **mainline is unaffected**\n  + beta branch is vulnerable from 2.0.0-201, fixed in 2.0.0-209\n\n### Logic flaw\n\n* NPM package nats.ws:\n  + status: preview\n  + flawed from 1.0.0-85, fixed in 1.0.0-111\n\n* Deno repository https://github.com/nats-io/nats.deno\n  + status: preview\n  + flawed in all git tags prior to fix\n  + fixed with git tag v1.0.0-9\n\n\n## Impact\n\nFor deployments using TLS client certificates (for mutual TLS), private key material for TLS is leaked from the client application to the\nserver.  If the server is untrusted (run by a third party), or if the client application also disables TLS verification (and so the true identity of the server is unverifiable) then authentication credentials are leaked.\n\n## Workaround\n\n*None*\n\n## Solution\n\nUpgrade your package dependencies to fixed versions, and then reissue any TLS client credentials (with new keys, not just new certificates) and revoke the old ones.",
  "Date": "2021-04-06",
  "Pubdate": "2021-04-06",
  "AffectedRange": "\u003e=2.0.0-201 \u003c=2.0.0-208",
  "FixedVersions": [
    "2.0.0-209"
  ],
  "AffectedVersions": "All versions starting from 2.0.0-201 up to 2.0.0-208",
  "NotImpacted": "All versions before 2.0.0-201, all versions after 2.0.0-208",
  "Solution": "Upgrade to version 2.0.0-209 or above.",
  "Urls": [
    "https://github.com/nats-io/nats.js/security/advisories/GHSA-prmc-5v5w-c465",
    "https://advisories.nats.io/CVE/CVE-2020-26149.txt",
    "https://github.com/advisories/GHSA-prmc-5v5w-c465"
  ],
  "CvssV2": "",
  "CvssV3": "",
  "UUID": "80dbfe04-fdfc-4e62-8d9b-8976924ca9c9"
}