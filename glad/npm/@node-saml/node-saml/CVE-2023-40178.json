{
  "Identifier": "CVE-2023-40178",
  "PackageSlug": "npm/@node-saml/node-saml",
  "Title": "@node-saml/node-saml's validatePostRequestAsync does not include checkTimestampsValidityError",
  "Description": "### Summary\n\nThe lack of checking of current timestamp allows a LogoutRequest XML to be reused multiple times even when the current time is past the NotOnOrAfter. \n\n### Details\n\nIt was noticed that in the validatePostRequestAsync() flow in saml.js, the current timestamp is never checked. This could present a vulnerability where a user who has an XML LogoutRequest could validated it if the IssueInstance and the NotOnOrAfter are valid along with valid credentials (signature, certificate etc.). \n\n### PoC\n\nI was able to validate a sample valid LogoutRequest XML multiple times through postman by sending it to my endpoint regardless if the current present time was past the NotOnOrAfter time. After some further testing, it seems that only the IssueInstance is checked against NotOnOrAfter. Not sure if this was the intended behaviour but I believe having a never expiring valid LogoutRequest could be dangerous.\n\n### Impact\n\nThis could impact the user where they would be logged out from an expired LogoutRequest. In bigger contexts, if LogoutRequests are sent out in mass to different SPs, this could impact many users on a large scale.\n",
  "Date": "2023-08-21",
  "Pubdate": "2023-08-21",
  "AffectedRange": "\u003c4.0.5",
  "FixedVersions": [
    "4.0.5"
  ],
  "AffectedVersions": "All versions before 4.0.5",
  "NotImpacted": "All versions starting from 4.0.5",
  "Solution": "Upgrade to version 4.0.5 or above.",
  "Urls": [
    "https://github.com/node-saml/node-saml/security/advisories/GHSA-vx8m-6fhw-pccw",
    "https://github.com/node-saml/node-saml/commit/045e3b9c54211fdb95f96edf363679845b195cec",
    "https://github.com/node-saml/node-saml/releases/tag/v4.0.5",
    "https://github.com/advisories/GHSA-vx8m-6fhw-pccw"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
  "UUID": "2cf30259-7dd0-4af4-b1ea-ce160fd4bd9d"
}