{
  "Identifier": "GHSA-7vw7-qx38-37vr",
  "PackageSlug": "packagist/propel/propel",
  "Title": "Propel2 SQL injection possible with limit() on MySQL",
  "Description": "The limit() query method is susceptible to catastrophic SQL injection with MySQL.\n\nFor example, given a model User for a table users:\n```\nUserQuery::create()-\u003elimit('1;DROP TABLE users')-\u003efind();\n```\nThis will drop the users table!\n\nThe cause appears to be a lack of integer casting of the limit input in either Propel\\Runtime\\ActiveQuery\\Criteria::setLimit() or in Propel\\Runtime\\Adapter\\Pdo\\MysqlAdapter::applyLimit(). The code comments there seem to imply that casting was avoided due to overflow issues with 32-bit integers.\n\nThis is surprising behavior since one of the primary purposes of an ORM is to prevent basic SQL injection.\n\nThis affects all versions of Propel: 1.x, 2.x, and 3.",
  "Date": "2024-05-20",
  "Pubdate": "2024-05-20",
  "AffectedRange": "\u003e=2.0.0-alpha1 \u003c2.0.0-alpha8",
  "FixedVersions": [
    "2.0.0-alpha8"
  ],
  "AffectedVersions": "All versions starting from 2.0.0-alpha1 before 2.0.0-alpha8",
  "NotImpacted": "All versions before 2.0.0-alpha1, all versions starting from 2.0.0-alpha8",
  "Solution": "Upgrade to version 2.0.0-alpha8 or above.",
  "Urls": [
    "https://github.com/advisories/GHSA-7vw7-qx38-37vr",
    "https://github.com/propelorm/Propel2/issues/1463",
    "https://github.com/propelorm/Propel2/pull/1464",
    "https://github.com/propelorm/Propel2/commit/cd23d7384a15cfe203e23b3a835c8ab1d81d9246",
    "https://github.com/FriendsOfPHP/security-advisories/blob/master/propel/propel/2018-02-14.yaml",
    "https://github.com/propelorm/Propel2"
  ],
  "CvssV2": "",
  "CvssV3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
  "UUID": "ed51c887-e164-4eb0-be37-747503130974"
}