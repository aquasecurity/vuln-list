{
  "Title": "An update for python-jinja2 is now available for openEuler-22.03-LTS-SP3",
  "Type": "Security Advisory",
  "Publisher": {
    "ContactDetails": "openeuler-security@openeuler.org",
    "IssuingAuthority": "openEuler security committee"
  },
  "Tracking": {
    "ID": "openEuler-SA-2024-2598",
    "Status": "Final",
    "Version": "1.0",
    "InitialReleaseDate": "2024-12-27",
    "CurrentReleaseDate": "2024-12-27",
    "Generator": {
      "Engine": "openEuler SA Tool V1.0",
      "Date": "2024-12-27"
    },
    "RevisionHistory": [
      {
        "Number": "1.0",
        "Date": "2024-12-27",
        "Description": "Initial"
      }
    ]
  },
  "Notes": [
    {
      "Text": "python-jinja2 security update",
      "Title": "Synopsis",
      "Type": "General"
    },
    {
      "Text": "An update for python-jinja2 is now available for openEuler-22.03-LTS-SP3",
      "Title": "Summary",
      "Type": "General"
    },
    {
      "Text": "Jinja2 is one of the most used template engines for Python. It is inspired by Django's templating system but extends it with an expressive language that gives template authors a more powerful set of tools. On top of that it adds sandboxed execution and optional automatic escaping for applications where security is important.\n\nSecurity Fix(es):\n\nJinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5.(CVE-2024-56326)",
      "Title": "Description",
      "Type": "General"
    },
    {
      "Text": "An update for python-jinja2 is now available for openEuler-22.03-LTS-SP3.\n\nopenEuler Security has rated this update as having a security impact of critical. A Common Vunlnerability Scoring System(CVSS)base score,which gives a detailed severity rating, is available for each vulnerability from the CVElink(s) in the References section.",
      "Title": "Topic",
      "Type": "General"
    },
    {
      "Text": "Critical",
      "Title": "Severity",
      "Type": "General"
    },
    {
      "Text": "python-jinja2",
      "Title": "Affected Component",
      "Type": "General"
    }
  ],
  "ProductTree": {
    "Branches": [
      {
        "Type": "Product Name",
        "Name": "openEuler",
        "Productions": [
          {
            "ProductID": "openEuler-22.03-LTS-SP3",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP3",
            "Text": "openEuler-22.03-LTS-SP3"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "noarch",
        "Productions": [
          {
            "ProductID": "python-jinja2-help-3.0.3-5",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP3",
            "Text": "python-jinja2-help-3.0.3-5.oe2203sp3.noarch.rpm"
          },
          {
            "ProductID": "python3-jinja2-3.0.3-5",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP3",
            "Text": "python3-jinja2-3.0.3-5.oe2203sp3.noarch.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "src",
        "Productions": [
          {
            "ProductID": "python-jinja2-3.0.3-5",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP3",
            "Text": "python-jinja2-3.0.3-5.oe2203sp3.src.rpm"
          }
        ]
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2024-2598"
    },
    {
      "URL": "https://www.openeuler.org/en/security/cve/detail/?cveId=CVE-2024-56326"
    },
    {
      "URL": "https://nvd.nist.gov/vuln/detail/CVE-2024-56326"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2024-56326",
      "Note": "Jinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5.",
      "ReleaseDate": "2024-12-27",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Critical"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-22.03-LTS-SP3"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "10.0",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "python-jinja2 security update",
        "Date": "2024-12-27",
        "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2024-2598"
      }
    }
  ]
}