{
  "Title": "An update for intel-sgx-ssl is now available for openEuler-20.03-LTS-SP1,openEuler-20.03-LTS-SP3 and openEuler-22.03-LTS",
  "Type": "Security Advisory",
  "Publisher": {
    "ContactDetails": "openeuler-security@openeuler.org",
    "IssuingAuthority": "openEuler security committee"
  },
  "Tracking": {
    "ID": "openEuler-SA-2022-1898",
    "Status": "Final",
    "Version": "1.0",
    "InitialReleaseDate": "2022-09-08",
    "CurrentReleaseDate": "2022-09-08",
    "Generator": {
      "Engine": "openEuler SA Tool V1.0",
      "Date": "2022-09-08"
    },
    "RevisionHistory": [
      {
        "Number": "1.0",
        "Date": "2022-09-08",
        "Description": "Initial"
      }
    ]
  },
  "Notes": [
    {
      "Text": "intel-sgx-ssl security update",
      "Title": "Synopsis",
      "Type": "General"
    },
    {
      "Text": "An update for intel-sgx-ssl is now available for openEuler-20.03-LTS-SP1,openEuler-20.03-LTS-SP3 and openEuler-22.03-LTS.",
      "Title": "Summary",
      "Type": "General"
    },
    {
      "Text": "The Intel速 Software Guard Extensions SSL (Intel速 SGX SSL) cryptographic library is intended to provide cryptographic services for Intel速 Software Guard Extensions (SGX) enclave applications. The Intel速 SGX SSL cryptographic library is based on the underlying OpenSSL* Open Source project, providing a full-strength general purpose cryptography library. Supported OpenSSL version is 1.1.1l.\n\nSecurity Fix(es):\n\nThe c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).(CVE-2022-1292)\n\nIn addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).(CVE-2022-2068)\n\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).(CVE-2022-2097)\n\nThe BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).(CVE-2022-0778)",
      "Title": "Description",
      "Type": "General"
    },
    {
      "Text": "An update for intel-sgx-ssl is now available for openEuler-20.03-LTS-SP1,openEuler-20.03-LTS-SP3 and openEuler-22.03-LTS.\n\nopenEuler Security has rated this update as having a security impact of high. A Common Vunlnerability Scoring System(CVSS)base score,which gives a detailed severity rating, is available for each vulnerability from the CVElink(s) in the References section.",
      "Title": "Topic",
      "Type": "General"
    },
    {
      "Text": "High",
      "Title": "Severity",
      "Type": "General"
    },
    {
      "Text": "intel-sgx-ssl",
      "Title": "Affected Component",
      "Type": "General"
    }
  ],
  "ProductTree": {
    "Branches": [
      {
        "Type": "Product Name",
        "Name": "openEuler",
        "Productions": [
          {
            "ProductID": "openEuler-20.03-LTS-SP1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "openEuler-20.03-LTS-SP1"
          },
          {
            "ProductID": "openEuler-20.03-LTS-SP3",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "openEuler-20.03-LTS-SP3"
          },
          {
            "ProductID": "openEuler-22.03-LTS",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "openEuler-22.03-LTS"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "src",
        "Productions": [
          {
            "ProductID": "intel-sgx-ssl-2.10-4",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "intel-sgx-ssl-2.10-4.oe1.src.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-2.10-4",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "intel-sgx-ssl-2.10-4.oe1.src.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-2.15.1-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "intel-sgx-ssl-2.15.1-2.oe2203.src.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "x86_64",
        "Productions": [
          {
            "ProductID": "intel-sgx-ssl-2.10-4",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "intel-sgx-ssl-2.10-4.oe1.x86_64.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-devel-2.10-4",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "intel-sgx-ssl-devel-2.10-4.oe1.x86_64.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-2.10-4",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "intel-sgx-ssl-2.10-4.oe1.x86_64.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-devel-2.10-4",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "intel-sgx-ssl-devel-2.10-4.oe1.x86_64.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-devel-2.15.1-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "intel-sgx-ssl-devel-2.15.1-2.oe2203.x86_64.rpm"
          },
          {
            "ProductID": "intel-sgx-ssl-2.15.1-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "intel-sgx-ssl-2.15.1-2.oe2203.x86_64.rpm"
          }
        ]
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2022-1898"
    },
    {
      "URL": "https://www.openeuler.org/en/security/cve/detail.html?id=CVE-2022-0778"
    },
    {
      "URL": "https://nvd.nist.gov/vuln/detail/CVE-2022-0778"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2022-1292",
      "Note": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
      "ReleaseDate": "2022-09-08",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Medium"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1",
            "openEuler-20.03-LTS-SP3",
            "openEuler-22.03-LTS"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.7",
        "Vector": "AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "intel-sgx-ssl security update",
        "Date": "2022-09-08",
        "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2022-1898"
      }
    },
    {
      "CVE": "CVE-2022-2068",
      "Note": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
      "ReleaseDate": "2022-09-08",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Medium"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1",
            "openEuler-20.03-LTS-SP3",
            "openEuler-22.03-LTS"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.7",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "intel-sgx-ssl security update",
        "Date": "2022-09-08",
        "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2022-1898"
      }
    },
    {
      "CVE": "CVE-2022-2097",
      "Note": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn t written. In the special case of  in place  encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
      "ReleaseDate": "2022-09-08",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Medium"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1",
            "openEuler-20.03-LTS-SP3",
            "openEuler-22.03-LTS"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5.3",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "intel-sgx-ssl security update",
        "Date": "2022-09-08",
        "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2022-1898"
      }
    },
    {
      "CVE": "CVE-2022-0778",
      "Note": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
      "ReleaseDate": "2022-09-08",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1",
            "openEuler-20.03-LTS-SP3",
            "openEuler-22.03-LTS"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "intel-sgx-ssl security update",
        "Date": "2022-09-08",
        "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2022-1898"
      }
    }
  ]
}