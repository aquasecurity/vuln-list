{
  "Title": "An update for skopeo is now available for openEuler-22.03-LTS-SP4",
  "Type": "Security Advisory",
  "Publisher": {
    "ContactDetails": "openeuler-security@openeuler.org",
    "IssuingAuthority": "openEuler security committee"
  },
  "Tracking": {
    "ID": "openEuler-SA-2025-2224",
    "Status": "Final",
    "Version": "1.0",
    "InitialReleaseDate": "2025-09-05",
    "CurrentReleaseDate": "2025-09-05",
    "Generator": {
      "Engine": "openEuler SA Tool V1.0",
      "Date": "2025-09-05"
    },
    "RevisionHistory": [
      {
        "Number": "1.0",
        "Date": "2025-09-05",
        "Description": "Initial"
      }
    ]
  },
  "Notes": [
    {
      "Text": "skopeo security update",
      "Title": "Synopsis",
      "Type": "General"
    },
    {
      "Text": "An update for skopeo is now available for openEuler-22.03-LTS-SP4",
      "Title": "Summary",
      "Type": "General"
    },
    {
      "Text": "A command line utility that performs various operations on container images and image repositories\n\nSecurity Fix(es):\n\nA malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.(CVE-2023-39325)\n\nThe HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.(CVE-2023-44487)\n\nGo JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters.(CVE-2025-27144)\n\nCancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.(CVE-2025-47907)",
      "Title": "Description",
      "Type": "General"
    },
    {
      "Text": "An update for skopeo is now available for openEuler-22.03-LTS-SP4.\n\nopenEuler Security has rated this update as having a security impact of high. A Common Vunlnerability Scoring System(CVSS)base score,which gives a detailed severity rating, is available for each vulnerability from the CVElink(s) in the References section.",
      "Title": "Topic",
      "Type": "General"
    },
    {
      "Text": "High",
      "Title": "Severity",
      "Type": "General"
    },
    {
      "Text": "skopeo",
      "Title": "Affected Component",
      "Type": "General"
    }
  ],
  "ProductTree": {
    "Branches": [
      {
        "Type": "Product Name",
        "Name": "openEuler",
        "Productions": [
          {
            "ProductID": "openEuler-22.03-LTS-SP4",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "openEuler-22.03-LTS-SP4"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "aarch64",
        "Productions": [
          {
            "ProductID": "skopeo-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-1.8.0-7.oe2203sp4.aarch64.rpm"
          },
          {
            "ProductID": "skopeo-debuginfo-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-debuginfo-1.8.0-7.oe2203sp4.aarch64.rpm"
          },
          {
            "ProductID": "skopeo-debugsource-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-debugsource-1.8.0-7.oe2203sp4.aarch64.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "src",
        "Productions": [
          {
            "ProductID": "skopeo-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-1.8.0-7.oe2203sp4.src.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "x86_64",
        "Productions": [
          {
            "ProductID": "skopeo-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-1.8.0-7.oe2203sp4.x86_64.rpm"
          },
          {
            "ProductID": "skopeo-debuginfo-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-debuginfo-1.8.0-7.oe2203sp4.x86_64.rpm"
          },
          {
            "ProductID": "skopeo-debugsource-1.8.0-7",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP4",
            "Text": "skopeo-debugsource-1.8.0-7.oe2203sp4.x86_64.rpm"
          }
        ]
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2224"
    },
    {
      "URL": "https://www.openeuler.org/en/security/cve/detail/?cveId=CVE-2025-47907"
    },
    {
      "URL": "https://nvd.nist.gov/vuln/detail/CVE-2025-47907"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2023-39325",
      "Note": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "ReleaseDate": "2025-09-05",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-22.03-LTS-SP4"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "skopeo security update",
        "Date": "2025-09-05",
        "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2224"
      }
    },
    {
      "CVE": "CVE-2023-44487",
      "Note": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
      "ReleaseDate": "2025-09-05",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-22.03-LTS-SP4"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "skopeo security update",
        "Date": "2025-09-05",
        "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2224"
      }
    },
    {
      "CVE": "CVE-2025-27144",
      "Note": "Go JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters.",
      "ReleaseDate": "2025-09-05",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-22.03-LTS-SP4"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "skopeo security update",
        "Date": "2025-09-05",
        "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2224"
      }
    },
    {
      "CVE": "CVE-2025-47907",
      "Note": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
      "ReleaseDate": "2025-09-05",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-22.03-LTS-SP4"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.0",
        "Vector": "AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:L"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "skopeo security update",
        "Date": "2025-09-05",
        "URL": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2224"
      }
    }
  ]
}