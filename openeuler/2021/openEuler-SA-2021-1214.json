{
  "Title": "An update for rust is now available for openEuler-20.03-LTS-SP1",
  "Type": "Security Advisory",
  "Publisher": {
    "ContactDetails": "openeuler-security@openeuler.org",
    "IssuingAuthority": "openEuler security committee"
  },
  "Tracking": {
    "ID": "openEuler-SA-2021-1214",
    "Status": "Final",
    "Version": "1.0",
    "InitialReleaseDate": "2021-06-12",
    "CurrentReleaseDate": "2021-06-12",
    "Generator": {
      "Engine": "openEuler SA Tool V1.0",
      "Date": "2021-06-12"
    },
    "RevisionHistory": [
      {
        "Number": "1.0",
        "Date": "2021-06-12",
        "Description": "Initial"
      }
    ]
  },
  "Notes": [
    {
      "Text": "rust security update",
      "Title": "Synopsis",
      "Type": "General"
    },
    {
      "Text": "An update for rust is now available for openEuler-20.03-LTS-SP1.",
      "Title": "Summary",
      "Type": "General"
    },
    {
      "Text": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\n\nSecurity Fix(es):\n\nIn the standard library in Rust before 1.49.0, String::retain() function has a panic safety problem. It allows creation of a non-UTF-8 Rust string when the provided closure panics. This bug could result in a memory safety violation when other string APIs assume that UTF-8 encoding is used on the same string.(CVE-2020-36317)\n\nIn the standard library in Rust before 1.50.0, read_to_end() does not validate the return value from Read in an unsafe context. This bug could lead to a buffer overflow.(CVE-2021-28875)\n\nIn the standard library in Rust before 1.52.0, the Zip implementation calls __iterator_get_unchecked() more than once for the same index (under certain conditions) when next_back() and next() are used together. This bug could lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.(CVE-2021-28878)\n\nIn the standard library in Rust before 1.51.0, the Zip implementation calls __iterator_get_unchecked() for the same index more than once when nested. This bug can lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.(CVE-2021-28877)\n\nIn the standard library in Rust before 1.52.0, the Zip implementation has a panic safety issue. It calls __iterator_get_unchecked() more than once for the same index when the underlying iterator panics (in certain conditions). This bug could lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.(CVE-2021-28876)\n\nIn the standard library in Rust before 1.52.0, the Zip implementation can report an incorrect size due to an integer overflow. This bug can lead to a buffer overflow when a consumed Zip iterator is used again.(CVE-2021-28879)\n\nIn the standard library in Rust before 1.49.0, VecDeque::make_contiguous has a bug that pops the same element more than once under certain condition. This bug could result in a use-after-free or double free.(CVE-2020-36318)\n\nIn the standard library in Rust before 1.52.0, there is an optimization for joining strings that can cause uninitialized bytes to be exposed (or the program to crash) if the borrowed string changes after its length is checked.(CVE-2020-36323)",
      "Title": "Description",
      "Type": "General"
    },
    {
      "Text": "An update for rust is now available for openEuler-20.03-LTS-SP1.\n\nopenEuler Security has rated this update as having a security impact of critical. A Common Vunlnerability Scoring System(CVSS)base score,which gives a detailed severity rating, is available for each vulnerability from the CVElink(s) in the References section.",
      "Title": "Topic",
      "Type": "General"
    },
    {
      "Text": "Critical",
      "Title": "Severity",
      "Type": "General"
    },
    {
      "Text": "rust",
      "Title": "Affected Component",
      "Type": "General"
    }
  ],
  "ProductTree": {
    "Branches": [
      {
        "Type": "Product Name",
        "Name": "openEuler",
        "Productions": [
          {
            "ProductID": "openEuler-20.03-LTS-SP1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "openEuler-20.03-LTS-SP1"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "aarch64",
        "Productions": [
          {
            "ProductID": "cargo-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "cargo-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rust-debuginfo-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-debuginfo-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rust-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rls-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rls-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rustfmt-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rustfmt-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rust-std-static-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-std-static-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rust-analysis-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-analysis-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "clippy-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "clippy-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rust-debugsource-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-debugsource-1.51.0-1.oe1.aarch64.rpm"
          },
          {
            "ProductID": "rust-help-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-help-1.51.0-1.oe1.aarch64.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "noarch",
        "Productions": [
          {
            "ProductID": "rust-debugger-common-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-debugger-common-1.51.0-1.oe1.noarch.rpm"
          },
          {
            "ProductID": "rust-lldb-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-lldb-1.51.0-1.oe1.noarch.rpm"
          },
          {
            "ProductID": "rust-gdb-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-gdb-1.51.0-1.oe1.noarch.rpm"
          },
          {
            "ProductID": "rust-src-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-src-1.51.0-1.oe1.noarch.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "src",
        "Productions": [
          {
            "ProductID": "rust-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-1.51.0-1.oe1.src.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "x86_64",
        "Productions": [
          {
            "ProductID": "rust-std-static-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-std-static-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rust-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rust-debuginfo-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-debuginfo-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rust-debugsource-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-debugsource-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rust-analysis-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-analysis-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rustfmt-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rustfmt-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "cargo-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "cargo-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rls-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rls-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "clippy-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "clippy-1.51.0-1.oe1.x86_64.rpm"
          },
          {
            "ProductID": "rust-help-1.51.0-1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "rust-help-1.51.0-1.oe1.x86_64.rpm"
          }
        ]
      }
    ]
  },
  "References": [
    {
      "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
    },
    {
      "URL": "https://openeuler.org/en/security/cve/detail.html?id=CVE-2020-36323"
    },
    {
      "URL": "https://nvd.nist.gov/vuln/detail/CVE-2020-36323"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2020-36317",
      "Note": "In the standard library in Rust before 1.49.0, String::retain() function has a panic safety problem. It allows creation of a non-UTF-8 Rust string when the provided closure panics. This bug could result in a memory safety violation when other string APIs assume that UTF-8 encoding is used on the same string.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2021-28875",
      "Note": "In the standard library in Rust before 1.50.0, read_to_end() does not validate the return value from Read in an unsafe context. This bug could lead to a buffer overflow.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2021-28878",
      "Note": "In the standard library in Rust before 1.52.0, the Zip implementation calls __iterator_get_unchecked() more than once for the same index (under certain conditions) when next_back() and next() are used together. This bug could lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2021-28877",
      "Note": "In the standard library in Rust before 1.51.0, the Zip implementation calls __iterator_get_unchecked() for the same index more than once when nested. This bug can lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2021-28876",
      "Note": "In the standard library in Rust before 1.52.0, the Zip implementation has a panic safety issue. It calls __iterator_get_unchecked() more than once for the same index when the underlying iterator panics (in certain conditions). This bug could lead to a memory safety violation due to an unmet safety requirement for the TrustedRandomAccess trait.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2021-28879",
      "Note": "In the standard library in Rust before 1.52.0, the Zip implementation can report an incorrect size due to an integer overflow. This bug can lead to a buffer overflow when a consumed Zip iterator is used again.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Critical"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "9.8",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2020-36318",
      "Note": "In the standard library in Rust before 1.49.0, VecDeque::make_contiguous has a bug that pops the same element more than once under certain condition. This bug could result in a use-after-free or double free.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Critical"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "9.8",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    },
    {
      "CVE": "CVE-2020-36323",
      "Note": "In the standard library in Rust before 1.52.0, there is an optimization for joining strings that can cause uninitialized bytes to be exposed (or the program to crash) if the borrowed string changes after its length is checked.",
      "ReleaseDate": "2021-06-12",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "8.2",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "rust security update",
        "Date": "2021-06-12",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1214"
      }
    }
  ]
}