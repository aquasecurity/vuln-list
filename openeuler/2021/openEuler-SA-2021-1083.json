{
  "Title": "An update for unbound is now available for openEuler-20.03-LTS-SP1",
  "Type": "Security Advisory",
  "Publisher": {
    "ContactDetails": "openeuler-security@openeuler.org",
    "IssuingAuthority": "openEuler security committee"
  },
  "Tracking": {
    "ID": "openEuler-SA-2021-1083",
    "Status": "Final",
    "Version": "1.0",
    "InitialReleaseDate": "2021-03-05",
    "CurrentReleaseDate": "2021-03-05",
    "Generator": {
      "Engine": "openEuler SA Tool V1.0",
      "Date": "2021-03-05"
    },
    "RevisionHistory": [
      {
        "Number": "1.0",
        "Date": "2021-03-05",
        "Description": "Initial"
      }
    ]
  },
  "Notes": [
    {
      "Text": "unbound security update",
      "Title": "Synopsis",
      "Type": "General"
    },
    {
      "Text": "An update for unbound is now available for openEuler-20.03-LTS-SP1.",
      "Title": "Summary",
      "Type": "General"
    },
    {
      "Text": "Unbound is a validating, recursive, caching DNS resolver. It is designed to be fast and lean and incorporates modern features based on open standards. To help increase online privacy, Unbound supports DNS-over-TLS which allows clients to encrypt their communication. Unbound is available for most platforms such as FreeBSD, OpenBSD, NetBSD, MacOS, Linux and Microsoft Windows. Unbound is a totally free, open source software under the BSD license. It doesn't make custom builds or provide specific features to paying customers only.\n\nSecurity Fix(es):\n\nNLnet Labs Unbound, up to and including version 1.12.0, and NLnet Labs NSD, up to and including version 4.3.3, contain a local vulnerability that would allow for a local symlink attack. When writing the PID file, Unbound and NSD create the file if it is not there, or open an existing file for writing. In case the file was already present, they would follow symlinks if the file happened to be a symlink instead of a regular file. An additional chown of the file would then take place after it was written, making the user Unbound/NSD is supposed to run as the new owner of the file. If an attacker has local access to the user Unbound/NSD runs as, she could create a symlink in place of the PID file pointing to a file that she would like to erase. If then Unbound/NSD is killed and the PID file is not cleared, upon restarting with root privileges, Unbound/NSD will rewrite any file pointed at by the symlink. This is a local vulnerability that could create a Denial of Service of the system Unbound/NSD is running on. It requires an attacker having access to the limited permission user Unbound/NSD runs as and point through the symlink to a critical file on the system.(CVE-2020-28935)",
      "Title": "Description",
      "Type": "General"
    },
    {
      "Text": "An update for unbound is now available for openEuler-20.03-LTS-SP1.\n\nopenEuler Security has rated this update as having a security impact of medium. A Common Vunlnerability Scoring System(CVSS)base score,which gives a detailed severity rating, is available for each vulnerability from the CVElink(s) in the References section.",
      "Title": "Topic",
      "Type": "General"
    },
    {
      "Text": "Medium",
      "Title": "Severity",
      "Type": "General"
    },
    {
      "Text": "unbound",
      "Title": "Affected Component",
      "Type": "General"
    }
  ],
  "ProductTree": {
    "Branches": [
      {
        "Type": "Product Name",
        "Name": "openEuler",
        "Productions": [
          {
            "ProductID": "openEuler-20.03-LTS-SP1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "openEuler-20.03-LTS-SP1"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "aarch64",
        "Productions": [
          {
            "ProductID": "unbound-libs-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-libs-1.11.0-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "unbound-devel-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-devel-1.11.0-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "unbound-help-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-help-1.11.0-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "python3-unbound-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "python3-unbound-1.11.0-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "unbound-debugsource-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-debugsource-1.11.0-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "unbound-debuginfo-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-debuginfo-1.11.0-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "unbound-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-1.11.0-2.oe1.aarch64.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "src",
        "Productions": [
          {
            "ProductID": "unbound-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-1.11.0-2.oe1.src.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "x86_64",
        "Productions": [
          {
            "ProductID": "python3-unbound-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "python3-unbound-1.11.0-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "unbound-debuginfo-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-debuginfo-1.11.0-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "unbound-debugsource-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-debugsource-1.11.0-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "unbound-help-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-help-1.11.0-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "unbound-devel-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-devel-1.11.0-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "unbound-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-1.11.0-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "unbound-libs-1.11.0-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "unbound-libs-1.11.0-2.oe1.x86_64.rpm"
          }
        ]
      }
    ]
  },
  "References": [
    {
      "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1083"
    },
    {
      "URL": "https://openeuler.org/en/security/cve/detail.html?id=CVE-2020-28935"
    },
    {
      "URL": "https://nvd.nist.gov/vuln/detail/CVE-2020-28935"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2020-28935",
      "Note": "NLnet Labs Unbound, up to and including version 1.12.0, and NLnet Labs NSD, up to and including version 4.3.3, contain a local vulnerability that would allow for a local symlink attack. When writing the PID file, Unbound and NSD create the file if it is not there, or open an existing file for writing. In case the file was already present, they would follow symlinks if the file happened to be a symlink instead of a regular file. An additional chown of the file would then take place after it was written, making the user Unbound/NSD is supposed to run as the new owner of the file. If an attacker has local access to the user Unbound/NSD runs as, she could create a symlink in place of the PID file pointing to a file that she would like to erase. If then Unbound/NSD is killed and the PID file is not cleared, upon restarting with root privileges, Unbound/NSD will rewrite any file pointed at by the symlink. This is a local vulnerability that could create a Denial of Service of the system Unbound/NSD is running on. It requires an attacker having access to the limited permission user Unbound/NSD runs as and point through the symlink to a critical file on the system.",
      "ReleaseDate": "2021-03-05",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "Medium"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5.5",
        "Vector": "AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "unbound security update",
        "Date": "2021-03-05",
        "URL": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1083"
      }
    }
  ]
}