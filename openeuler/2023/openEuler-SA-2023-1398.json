{
  "Title": "An update for snappy-java is now available for openEuler-20.03-LTS-SP1,openEuler-20.03-LTS-SP3,openEuler-22.03-LTS,openEuler-22.03-LTS-SP1 and openEuler-22.03-LTS-SP2",
  "Type": "Security Advisory",
  "Publisher": {
    "ContactDetails": "openeuler-security@openeuler.org",
    "IssuingAuthority": "openEuler security committee"
  },
  "Tracking": {
    "ID": "openEuler-SA-2023-1398",
    "Status": "Final",
    "Version": "1.0",
    "InitialReleaseDate": "2023-07-08",
    "CurrentReleaseDate": "2023-07-08",
    "Generator": {
      "Engine": "openEuler SA Tool V1.0",
      "Date": "2023-07-08"
    },
    "RevisionHistory": [
      {
        "Number": "1.0",
        "Date": "2023-07-08",
        "Description": "Initial"
      }
    ]
  },
  "Notes": [
    {
      "Text": "snappy-java security update",
      "Title": "Synopsis",
      "Type": "General"
    },
    {
      "Text": "An update for snappy-java is now available for openEuler-20.03-LTS-SP1,openEuler-20.03-LTS-SP3,openEuler-22.03-LTS,openEuler-22.03-LTS-SP1 and openEuler-22.03-LTS-SP2.",
      "Title": "Summary",
      "Type": "General"
    },
    {
      "Text": "A Java port of the snappy, a fast compresser/decompresser written in C++.\n\nSecurity Fix(es):\n\nsnappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error.\n\nThe function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function.\n\nSince the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.\n\nSince the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.\n\nThe same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.\n\nVersion 1.1.10.1 contains a patch for this issue.(CVE-2023-34454)\n\nsnappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.\n\nThe code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.\n\nIn the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.\n\nVersion 1.1.10.1 contains a patch for this issue.(CVE-2023-34455)",
      "Title": "Description",
      "Type": "General"
    },
    {
      "Text": "An update for snappy-java is now available for openEuler-20.03-LTS-SP1,openEuler-20.03-LTS-SP3,openEuler-22.03-LTS,openEuler-22.03-LTS-SP1 and openEuler-22.03-LTS-SP2.\n\nopenEuler Security has rated this update as having a security impact of high. A Common Vunlnerability Scoring System(CVSS)base score,which gives a detailed severity rating, is available for each vulnerability from the CVElink(s) in the References section.",
      "Title": "Topic",
      "Type": "General"
    },
    {
      "Text": "High",
      "Title": "Severity",
      "Type": "General"
    },
    {
      "Text": "snappy-java",
      "Title": "Affected Component",
      "Type": "General"
    }
  ],
  "ProductTree": {
    "Branches": [
      {
        "Type": "Product Name",
        "Name": "openEuler",
        "Productions": [
          {
            "ProductID": "openEuler-20.03-LTS-SP1",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "openEuler-20.03-LTS-SP1"
          },
          {
            "ProductID": "openEuler-20.03-LTS-SP3",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "openEuler-20.03-LTS-SP3"
          },
          {
            "ProductID": "openEuler-22.03-LTS",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "openEuler-22.03-LTS"
          },
          {
            "ProductID": "openEuler-22.03-LTS-SP1",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP1",
            "Text": "openEuler-22.03-LTS-SP1"
          },
          {
            "ProductID": "openEuler-22.03-LTS-SP2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP2",
            "Text": "openEuler-22.03-LTS-SP2"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "aarch64",
        "Productions": [
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "snappy-java-1.1.2.4-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "snappy-java-1.1.2.4-2.oe1.aarch64.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "snappy-java-1.1.2.4-2.oe2203.aarch64.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP1",
            "Text": "snappy-java-1.1.2.4-2.oe2203sp1.aarch64.rpm"
          },
          {
            "ProductID": "",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP2",
            "Text": "snappy-java-1.1.2.4-2.oe2203sp2.aarch64.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "noarch",
        "Productions": [
          {
            "ProductID": "snappy-java-javadoc-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "snappy-java-javadoc-1.1.2.4-2.oe1.noarch.rpm"
          },
          {
            "ProductID": "snappy-java-javadoc-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "snappy-java-javadoc-1.1.2.4-2.oe1.noarch.rpm"
          },
          {
            "ProductID": "snappy-java-javadoc-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "snappy-java-javadoc-1.1.2.4-2.oe2203.noarch.rpm"
          },
          {
            "ProductID": "snappy-java-javadoc-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP1",
            "Text": "snappy-java-javadoc-1.1.2.4-2.oe2203sp1.noarch.rpm"
          },
          {
            "ProductID": "",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP2",
            "Text": "snappy-java-javadoc-1.1.2.4-2.oe2203sp2.noarch.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "src",
        "Productions": [
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "snappy-java-1.1.2.4-2.oe1.src.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "snappy-java-1.1.2.4-2.oe1.src.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "snappy-java-1.1.2.4-2.oe2203.src.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP1",
            "Text": "snappy-java-1.1.2.4-2.oe2203sp1.src.rpm"
          },
          {
            "ProductID": "",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP2",
            "Text": "snappy-java-1.1.2.4-2.oe2203sp2.src.rpm"
          }
        ]
      },
      {
        "Type": "Package Arch",
        "Name": "x86_64",
        "Productions": [
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP1",
            "Text": "snappy-java-1.1.2.4-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:20.03-LTS-SP3",
            "Text": "snappy-java-1.1.2.4-2.oe1.x86_64.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS",
            "Text": "snappy-java-1.1.2.4-2.oe2203.x86_64.rpm"
          },
          {
            "ProductID": "snappy-java-1.1.2.4-2",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP1",
            "Text": "snappy-java-1.1.2.4-2.oe2203sp1.x86_64.rpm"
          },
          {
            "ProductID": "",
            "CPE": "cpe:/a:openEuler:openEuler:22.03-LTS-SP2",
            "Text": "snappy-java-1.1.2.4-2.oe2203sp2.x86_64.rpm"
          }
        ]
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2023-1398"
    },
    {
      "URL": "https://www.openeuler.org/en/security/cve/detail.html?id=CVE-2023-34455"
    },
    {
      "URL": "https://nvd.nist.gov/vuln/detail/CVE-2023-34455"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2023-34454",
      "Note": "snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error.The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function.Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.Version 1.1.10.1 contains a patch for this issue.",
      "ReleaseDate": "2023-07-08",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1",
            "openEuler-20.03-LTS-SP3",
            "openEuler-22.03-LTS",
            "openEuler-22.03-LTS-SP1",
            "openEuler-22.03-LTS-SP2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "snappy-java security update",
        "Date": "2023-07-08",
        "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2023-1398"
      }
    },
    {
      "CVE": "CVE-2023-34455",
      "Note": "snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.Version 1.1.10.1 contains a patch for this issue.",
      "ReleaseDate": "2023-07-08",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "High"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openEuler-20.03-LTS-SP1",
            "openEuler-20.03-LTS-SP3",
            "openEuler-22.03-LTS",
            "openEuler-22.03-LTS-SP1",
            "openEuler-22.03-LTS-SP2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
      },
      "Remediations": {
        "Type": "Vendor Fix",
        "Description": "snappy-java security update",
        "Date": "2023-07-08",
        "URL": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2023-1398"
      }
    }
  ]
}