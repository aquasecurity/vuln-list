{
  "Title": "corepack16-16.17.0-2.1 on GA media",
  "Tracking": {
    "ID": "openSUSE-SU-2024:12285-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2024-06-15T00:00:00Z",
    "CurrentReleaseDate": "2024-06-15T00:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2024-06-15T00:00:00Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "corepack16-16.17.0-2.1 on GA media",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "These are all security issues fixed in the corepack16-16.17.0-2.1 package on the GA media of openSUSE Tumbleweed.",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "openSUSE-Tumbleweed-2024-12285",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "corepack16-16.17.0-2.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-16.17.0-2.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-devel-16.17.0-2.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-docs-16.17.0-2.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "npm16-16.17.0-2.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-31150/",
      "Description": "SUSE CVE CVE-2022-31150 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-35949/",
      "Description": "SUSE CVE CVE-2022-35949 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2022-31150",
      "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-31150.html",
          "Description": "CVE-2022-31150"
        },
        {
          "URL": "https://bugzilla.suse.com/1201710",
          "Description": "SUSE Bug 1201710"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:corepack16-16.17.0-2.1",
            "openSUSE Tumbleweed:nodejs16-16.17.0-2.1",
            "openSUSE Tumbleweed:nodejs16-devel-16.17.0-2.1",
            "openSUSE Tumbleweed:nodejs16-docs-16.17.0-2.1",
            "openSUSE Tumbleweed:npm16-16.17.0-2.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-35949",
      "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`undici` is vulnerable to SSRF (Server-side Request Forgery) when an application takes in **user input** into the `path/pathname` option of `undici.request`. If a user specifies a URL such as `http://127.0.0.1` or `//127.0.0.1` ```js const undici = require(\"undici\") undici.request({origin: \"http://example.com\", pathname: \"//127.0.0.1\"}) ``` Instead of processing the request as `http://example.org//127.0.0.1` (or `http://example.org/http://127.0.0.1` when `http://127.0.0.1 is used`), it actually processes the request as `http://127.0.0.1/` and sends it to `http://127.0.0.1`. If a developer passes in user input into `path` parameter of `undici.request`, it can result in an _SSRF_ as they will assume that the hostname cannot change, when in actual fact it can change because the specified path parameter is combined with the base URL. This issue was fixed in `undici@5.8.1`. The best workaround is to validate user input before passing it to the `undici.request` call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-35949.html",
          "Description": "CVE-2022-35949"
        },
        {
          "URL": "https://bugzilla.suse.com/1202382",
          "Description": "SUSE Bug 1202382"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:corepack16-16.17.0-2.1",
            "openSUSE Tumbleweed:nodejs16-16.17.0-2.1",
            "openSUSE Tumbleweed:nodejs16-devel-16.17.0-2.1",
            "openSUSE Tumbleweed:nodejs16-docs-16.17.0-2.1",
            "openSUSE Tumbleweed:npm16-16.17.0-2.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}