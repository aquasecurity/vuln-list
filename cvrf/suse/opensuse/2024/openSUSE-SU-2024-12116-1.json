{
  "Title": "tensorflow-lite-2.9.1-1.1 on GA media",
  "Tracking": {
    "ID": "openSUSE-SU-2024:12116-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2024-06-15T00:00:00Z",
    "CurrentReleaseDate": "2024-06-15T00:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2024-06-15T00:00:00Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "tensorflow-lite-2.9.1-1.1 on GA media",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "These are all security issues fixed in the tensorflow-lite-2.9.1-1.1 package on the GA media of openSUSE Tumbleweed.",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "openSUSE-Tumbleweed-2024-12116",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "tensorflow-lite-2.9.1-1.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "tensorflow-lite-devel-2.9.1-1.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-10531/",
      "Description": "SUSE CVE CVE-2020-10531 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15190/",
      "Description": "SUSE CVE CVE-2020-15190 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15191/",
      "Description": "SUSE CVE CVE-2020-15191 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15194/",
      "Description": "SUSE CVE CVE-2020-15194 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15202/",
      "Description": "SUSE CVE CVE-2020-15202 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15203/",
      "Description": "SUSE CVE CVE-2020-15203 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15204/",
      "Description": "SUSE CVE CVE-2020-15204 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15205/",
      "Description": "SUSE CVE CVE-2020-15205 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15206/",
      "Description": "SUSE CVE CVE-2020-15206 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15207/",
      "Description": "SUSE CVE CVE-2020-15207 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15208/",
      "Description": "SUSE CVE CVE-2020-15208 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15209/",
      "Description": "SUSE CVE CVE-2020-15209 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-26266/",
      "Description": "SUSE CVE CVE-2020-26266 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-26270/",
      "Description": "SUSE CVE CVE-2020-26270 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-22922/",
      "Description": "SUSE CVE CVE-2021-22922 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-22923/",
      "Description": "SUSE CVE CVE-2021-22923 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-22926/",
      "Description": "SUSE CVE CVE-2021-22926 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37635/",
      "Description": "SUSE CVE CVE-2021-37635 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37636/",
      "Description": "SUSE CVE CVE-2021-37636 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37637/",
      "Description": "SUSE CVE CVE-2021-37637 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37638/",
      "Description": "SUSE CVE CVE-2021-37638 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37639/",
      "Description": "SUSE CVE CVE-2021-37639 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37640/",
      "Description": "SUSE CVE CVE-2021-37640 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37641/",
      "Description": "SUSE CVE CVE-2021-37641 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37642/",
      "Description": "SUSE CVE CVE-2021-37642 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37643/",
      "Description": "SUSE CVE CVE-2021-37643 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37644/",
      "Description": "SUSE CVE CVE-2021-37644 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37645/",
      "Description": "SUSE CVE CVE-2021-37645 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37646/",
      "Description": "SUSE CVE CVE-2021-37646 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37647/",
      "Description": "SUSE CVE CVE-2021-37647 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37648/",
      "Description": "SUSE CVE CVE-2021-37648 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37649/",
      "Description": "SUSE CVE CVE-2021-37649 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37650/",
      "Description": "SUSE CVE CVE-2021-37650 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37651/",
      "Description": "SUSE CVE CVE-2021-37651 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37652/",
      "Description": "SUSE CVE CVE-2021-37652 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37653/",
      "Description": "SUSE CVE CVE-2021-37653 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37654/",
      "Description": "SUSE CVE CVE-2021-37654 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37655/",
      "Description": "SUSE CVE CVE-2021-37655 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37656/",
      "Description": "SUSE CVE CVE-2021-37656 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37657/",
      "Description": "SUSE CVE CVE-2021-37657 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37658/",
      "Description": "SUSE CVE CVE-2021-37658 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37659/",
      "Description": "SUSE CVE CVE-2021-37659 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37660/",
      "Description": "SUSE CVE CVE-2021-37660 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37661/",
      "Description": "SUSE CVE CVE-2021-37661 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37662/",
      "Description": "SUSE CVE CVE-2021-37662 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37663/",
      "Description": "SUSE CVE CVE-2021-37663 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37664/",
      "Description": "SUSE CVE CVE-2021-37664 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37665/",
      "Description": "SUSE CVE CVE-2021-37665 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37666/",
      "Description": "SUSE CVE CVE-2021-37666 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37667/",
      "Description": "SUSE CVE CVE-2021-37667 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37668/",
      "Description": "SUSE CVE CVE-2021-37668 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37669/",
      "Description": "SUSE CVE CVE-2021-37669 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37670/",
      "Description": "SUSE CVE CVE-2021-37670 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37671/",
      "Description": "SUSE CVE CVE-2021-37671 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37672/",
      "Description": "SUSE CVE CVE-2021-37672 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37673/",
      "Description": "SUSE CVE CVE-2021-37673 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37674/",
      "Description": "SUSE CVE CVE-2021-37674 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37675/",
      "Description": "SUSE CVE CVE-2021-37675 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37676/",
      "Description": "SUSE CVE CVE-2021-37676 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37677/",
      "Description": "SUSE CVE CVE-2021-37677 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37678/",
      "Description": "SUSE CVE CVE-2021-37678 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37679/",
      "Description": "SUSE CVE CVE-2021-37679 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37680/",
      "Description": "SUSE CVE CVE-2021-37680 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37681/",
      "Description": "SUSE CVE CVE-2021-37681 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37682/",
      "Description": "SUSE CVE CVE-2021-37682 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37683/",
      "Description": "SUSE CVE CVE-2021-37683 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37684/",
      "Description": "SUSE CVE CVE-2021-37684 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37685/",
      "Description": "SUSE CVE CVE-2021-37685 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37686/",
      "Description": "SUSE CVE CVE-2021-37686 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37687/",
      "Description": "SUSE CVE CVE-2021-37687 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37688/",
      "Description": "SUSE CVE CVE-2021-37688 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37689/",
      "Description": "SUSE CVE CVE-2021-37689 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37690/",
      "Description": "SUSE CVE CVE-2021-37690 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37691/",
      "Description": "SUSE CVE CVE-2021-37691 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-37692/",
      "Description": "SUSE CVE CVE-2021-37692 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41195/",
      "Description": "SUSE CVE CVE-2021-41195 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41196/",
      "Description": "SUSE CVE CVE-2021-41196 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41197/",
      "Description": "SUSE CVE CVE-2021-41197 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41198/",
      "Description": "SUSE CVE CVE-2021-41198 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41199/",
      "Description": "SUSE CVE CVE-2021-41199 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41200/",
      "Description": "SUSE CVE CVE-2021-41200 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41201/",
      "Description": "SUSE CVE CVE-2021-41201 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41202/",
      "Description": "SUSE CVE CVE-2021-41202 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41203/",
      "Description": "SUSE CVE CVE-2021-41203 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41204/",
      "Description": "SUSE CVE CVE-2021-41204 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41205/",
      "Description": "SUSE CVE CVE-2021-41205 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41206/",
      "Description": "SUSE CVE CVE-2021-41206 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41207/",
      "Description": "SUSE CVE CVE-2021-41207 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41208/",
      "Description": "SUSE CVE CVE-2021-41208 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41209/",
      "Description": "SUSE CVE CVE-2021-41209 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41210/",
      "Description": "SUSE CVE CVE-2021-41210 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41211/",
      "Description": "SUSE CVE CVE-2021-41211 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41212/",
      "Description": "SUSE CVE CVE-2021-41212 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41213/",
      "Description": "SUSE CVE CVE-2021-41213 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41214/",
      "Description": "SUSE CVE CVE-2021-41214 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41215/",
      "Description": "SUSE CVE CVE-2021-41215 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41216/",
      "Description": "SUSE CVE CVE-2021-41216 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41217/",
      "Description": "SUSE CVE CVE-2021-41217 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41218/",
      "Description": "SUSE CVE CVE-2021-41218 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41219/",
      "Description": "SUSE CVE CVE-2021-41219 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41220/",
      "Description": "SUSE CVE CVE-2021-41220 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41221/",
      "Description": "SUSE CVE CVE-2021-41221 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41222/",
      "Description": "SUSE CVE CVE-2021-41222 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41223/",
      "Description": "SUSE CVE CVE-2021-41223 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41224/",
      "Description": "SUSE CVE CVE-2021-41224 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41225/",
      "Description": "SUSE CVE CVE-2021-41225 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41226/",
      "Description": "SUSE CVE CVE-2021-41226 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41227/",
      "Description": "SUSE CVE CVE-2021-41227 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41228/",
      "Description": "SUSE CVE CVE-2021-41228 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21725/",
      "Description": "SUSE CVE CVE-2022-21725 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21726/",
      "Description": "SUSE CVE CVE-2022-21726 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21727/",
      "Description": "SUSE CVE CVE-2022-21727 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21728/",
      "Description": "SUSE CVE CVE-2022-21728 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21729/",
      "Description": "SUSE CVE CVE-2022-21729 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21730/",
      "Description": "SUSE CVE CVE-2022-21730 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21731/",
      "Description": "SUSE CVE CVE-2022-21731 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21732/",
      "Description": "SUSE CVE CVE-2022-21732 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21733/",
      "Description": "SUSE CVE CVE-2022-21733 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21734/",
      "Description": "SUSE CVE CVE-2022-21734 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21735/",
      "Description": "SUSE CVE CVE-2022-21735 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21736/",
      "Description": "SUSE CVE CVE-2022-21736 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21737/",
      "Description": "SUSE CVE CVE-2022-21737 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21738/",
      "Description": "SUSE CVE CVE-2022-21738 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21739/",
      "Description": "SUSE CVE CVE-2022-21739 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21740/",
      "Description": "SUSE CVE CVE-2022-21740 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-21741/",
      "Description": "SUSE CVE CVE-2022-21741 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23557/",
      "Description": "SUSE CVE CVE-2022-23557 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23558/",
      "Description": "SUSE CVE CVE-2022-23558 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23559/",
      "Description": "SUSE CVE CVE-2022-23559 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23560/",
      "Description": "SUSE CVE CVE-2022-23560 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23561/",
      "Description": "SUSE CVE CVE-2022-23561 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23562/",
      "Description": "SUSE CVE CVE-2022-23562 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23563/",
      "Description": "SUSE CVE CVE-2022-23563 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23564/",
      "Description": "SUSE CVE CVE-2022-23564 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23565/",
      "Description": "SUSE CVE CVE-2022-23565 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23566/",
      "Description": "SUSE CVE CVE-2022-23566 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23567/",
      "Description": "SUSE CVE CVE-2022-23567 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23568/",
      "Description": "SUSE CVE CVE-2022-23568 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23569/",
      "Description": "SUSE CVE CVE-2022-23569 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23570/",
      "Description": "SUSE CVE CVE-2022-23570 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23571/",
      "Description": "SUSE CVE CVE-2022-23571 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23572/",
      "Description": "SUSE CVE CVE-2022-23572 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23573/",
      "Description": "SUSE CVE CVE-2022-23573 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23574/",
      "Description": "SUSE CVE CVE-2022-23574 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23575/",
      "Description": "SUSE CVE CVE-2022-23575 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23576/",
      "Description": "SUSE CVE CVE-2022-23576 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23577/",
      "Description": "SUSE CVE CVE-2022-23577 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23578/",
      "Description": "SUSE CVE CVE-2022-23578 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23579/",
      "Description": "SUSE CVE CVE-2022-23579 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23580/",
      "Description": "SUSE CVE CVE-2022-23580 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23581/",
      "Description": "SUSE CVE CVE-2022-23581 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23582/",
      "Description": "SUSE CVE CVE-2022-23582 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23583/",
      "Description": "SUSE CVE CVE-2022-23583 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23584/",
      "Description": "SUSE CVE CVE-2022-23584 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23585/",
      "Description": "SUSE CVE CVE-2022-23585 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23586/",
      "Description": "SUSE CVE CVE-2022-23586 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23587/",
      "Description": "SUSE CVE CVE-2022-23587 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23588/",
      "Description": "SUSE CVE CVE-2022-23588 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23589/",
      "Description": "SUSE CVE CVE-2022-23589 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23590/",
      "Description": "SUSE CVE CVE-2022-23590 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23591/",
      "Description": "SUSE CVE CVE-2022-23591 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23594/",
      "Description": "SUSE CVE CVE-2022-23594 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23595/",
      "Description": "SUSE CVE CVE-2022-23595 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2020-10531",
      "Description": "An issue was discovered in International Components for Unicode (ICU) for C/C++ through 66.1. An integer overflow, leading to a heap-based buffer overflow, exists in the UnicodeString::doAppend() function in common/unistr.cpp.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-10531.html",
          "Description": "CVE-2020-10531"
        },
        {
          "URL": "https://bugzilla.suse.com/1166844",
          "Description": "SUSE Bug 1166844"
        },
        {
          "URL": "https://bugzilla.suse.com/1175778",
          "Description": "SUSE Bug 1175778"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15190",
      "Description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `tf.raw_ops.Switch` operation takes as input a tensor and a boolean and outputs two tensors. Depending on the boolean value, one of the tensors is exactly the input tensor whereas the other one should be an empty tensor. However, the eager runtime traverses all tensors in the output. Since only one of the tensors is defined, the other one is `nullptr`, hence we are binding a reference to `nullptr`. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. In this case, this results in a segmentation fault The issue is patched in commit da8558533d925694483d2c136a9220d6d49d843c, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15190.html",
          "Description": "CVE-2020-15190"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15191",
      "Description": "In Tensorflow before versions 2.2.1 and 2.3.1, if a user passes an invalid argument to `dlpack.to_dlpack` the expected validations will cause variables to bind to `nullptr` while setting a `status` variable to the error condition. However, this `status` argument is not properly checked. Hence, code following these methods will bind references to null pointers. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15191.html",
          "Description": "CVE-2020-15191"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15194",
      "Description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `SparseFillEmptyRowsGrad` implementation has incomplete validation of the shapes of its arguments. Although `reverse_index_map_t` and `grad_values_t` are accessed in a similar pattern, only `reverse_index_map_t` is validated to be of proper shape. Hence, malicious users can pass a bad `grad_values_t` to trigger an assertion failure in `vec`, causing denial of service in serving installations. The issue is patched in commit 390611e0d45c5793c7066110af37c8514e6a6c54, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15194.html",
          "Description": "CVE-2020-15194"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15202",
      "Description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `Shard` API in TensorFlow expects the last argument to be a function taking two `int64` (i.e., `long long`) arguments. However, there are several places in TensorFlow where a lambda taking `int` or `int32` arguments is being used. In these cases, if the amount of work to be parallelized is large enough, integer truncation occurs. Depending on how the two arguments of the lambda are used, this can result in segfaults, read/write outside of heap allocated arrays, stack overflows, or data corruption. The issue is patched in commits 27b417360cbd671ef55915e4bb6bb06af8b8a832 and ca8c013b5e97b1373b3bb1c97ea655e69f31a575, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15202.html",
          "Description": "CVE-2020-15202"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15203",
      "Description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, by controlling the `fill` argument of tf.strings.as_string, a malicious attacker is able to trigger a format string vulnerability due to the way the internal format use in a `printf` call is constructed. This may result in segmentation fault. The issue is patched in commit 33be22c65d86256e6826666662e40dbdfe70ee83, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15203.html",
          "Description": "CVE-2020-15203"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15204",
      "Description": "In eager mode, TensorFlow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1 does not set the session state. Hence, calling `tf.raw_ops.GetSessionHandle` or `tf.raw_ops.GetSessionHandleV2` results in a null pointer dereference In linked snippet, in eager mode, `ctx-\u003esession_state()` returns `nullptr`. Since code immediately dereferences this, we get a segmentation fault. The issue is patched in commit 9a133d73ae4b4664d22bd1aa6d654fec13c52ee1, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15204.html",
          "Description": "CVE-2020-15204"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15205",
      "Description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `data_splits` argument of `tf.raw_ops.StringNGrams` lacks validation. This allows a user to pass values that can cause heap overflow errors and even leak contents of memory In the linked code snippet, all the binary strings after `ee ff` are contents from the memory stack. Since these can contain return addresses, this data leak can be used to defeat ASLR. The issue is patched in commit 0462de5b544ed4731aa2fb23946ac22c01856b80, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15205.html",
          "Description": "CVE-2020-15205"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15206",
      "Description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, changing the TensorFlow's `SavedModel` protocol buffer and altering the name of required keys results in segfaults and data corruption while loading the model. This can cause a denial of service in products using `tensorflow-serving` or other inference-as-a-service installments. Fixed were added in commits f760f88b4267d981e13f4b302c437ae800445968 and fcfef195637c6e365577829c4d67681695956e7d (both going into TensorFlow 2.2.0 and 2.3.0 but not yet backported to earlier versions). However, this was not enough, as #41097 reports a different failure mode. The issue is patched in commit adf095206f25471e864a8e63a0f1caef53a0e3a6, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15206.html",
          "Description": "CVE-2020-15206"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15207",
      "Description": "In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, to mimic Python's indexing with negative values, TFLite uses `ResolveAxis` to convert negative values to positive indices. However, the only check that the converted index is now valid is only present in debug builds. If the `DCHECK` does not trigger, then code execution moves ahead with a negative index. This, in turn, results in accessing data out of bounds which results in segfaults and/or data corruption. The issue is patched in commit 2d88f470dea2671b430884260f3626b1fe99830a, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "critical"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15207.html",
          "Description": "CVE-2020-15207"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15208",
      "Description": "In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, when determining the common dimension size of two tensors, TFLite uses a `DCHECK` which is no-op outside of debug compilation modes. Since the function always returns the dimension of the first tensor, malicious attackers can craft cases where this is larger than that of the second tensor. In turn, this would result in reads/writes outside of bounds since the interpreter will wrongly assume that there is enough data in both tensors. The issue is patched in commit 8ee24e7949a203d234489f9da2c5bf45a7d5157d, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15208.html",
          "Description": "CVE-2020-15208"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-15209",
      "Description": "In tensorflow-lite before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, a crafted TFLite model can force a node to have as input a tensor backed by a `nullptr` buffer. This can be achieved by changing a buffer index in the flatbuffer serialization to convert a read-only tensor to a read-write one. The runtime assumes that these buffers are written to before a possible read, hence they are initialized with `nullptr`. However, by changing the buffer index for a tensor and implicitly converting that tensor to be a read-write one, as there is nothing in the model that writes to it, we get a null pointer dereference. The issue is patched in commit 0b5662bc, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15209.html",
          "Description": "CVE-2020-15209"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-26266",
      "Description": "In affected versions of TensorFlow under certain cases a saved model can trigger use of uninitialized values during code execution. This is caused by having tensor buffers be filled with the default value of the type but forgetting to default initialize the quantized floating point types in Eigen. This is fixed in versions 1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, and 2.4.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-26266.html",
          "Description": "CVE-2020-26266"
        },
        {
          "URL": "https://bugzilla.suse.com/1179946",
          "Description": "SUSE Bug 1179946"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-26270",
      "Description": "In affected versions of TensorFlow running an LSTM/GRU model where the LSTM/GRU layer receives an input with zero-length results in a CHECK failure when using the CUDA backend. This can result in a query-of-death vulnerability, via denial of service, if users can control the input to the layer. This is fixed in versions 1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, and 2.4.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-26270.html",
          "Description": "CVE-2020-26270"
        },
        {
          "URL": "https://bugzilla.suse.com/1179938",
          "Description": "SUSE Bug 1179938"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-22922",
      "Description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-22922.html",
          "Description": "CVE-2021-22922"
        },
        {
          "URL": "https://bugzilla.suse.com/1188217",
          "Description": "SUSE Bug 1188217"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2021-22923",
      "Description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-22923.html",
          "Description": "CVE-2021-22923"
        },
        {
          "URL": "https://bugzilla.suse.com/1188218",
          "Description": "SUSE Bug 1188218"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.6",
        "Vector": "AV:N/AC:H/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-22926",
      "Description": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-22926.html",
          "Description": "CVE-2021-22926"
        },
        {
          "URL": "https://bugzilla.suse.com/1188510",
          "Description": "SUSE Bug 1188510"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        },
        {
          "URL": "https://bugzilla.suse.com/1192757",
          "Description": "SUSE Bug 1192757"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37635",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor. We have patched the issue in GitHub commit 87158f43f05f2720a374f3e6d22a7aaa3a33f750. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37635.html",
          "Description": "CVE-2021-37635"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37636",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error. The [implementation](https://github.com/tensorflow/tensorflow/blob/a1bc56203f21a5a4995311825ffaba7a670d7747/tensorflow/core/kernels/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately. We have patched the issue in GitHub commit d9204be9f49520cdaaeb2541d1dc5187b23f31d9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37636.html",
          "Description": "CVE-2021-37636"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37637",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. It is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/data/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid. We have patched the issue in GitHub commit 5dc7f6981fdaf74c8c5be41f393df705841fb7c5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37637.html",
          "Description": "CVE-2021-37637"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37638",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. Sending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty. We have patched the issue in GitHub commit 301ae88b331d37a2a16159b65b255f4f9eb39314. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37638.html",
          "Description": "CVE-2021-37638"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37639",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. When restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer. Alternatively, attackers can read memory outside the bounds of heap allocated data by providing some tensor names but not enough for a successful restoration. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/kernels/save_restore_tensor.cc#L158-L159) retrieves the tensor list corresponding to the `tensor_name` user controlled input and immediately retrieves the tensor at the restoration index (controlled via `preferred_shard` argument). This occurs without validating that the provided list has enough values. If the list is empty this results in dereferencing a null pointer (undefined behavior). If, however, the list has some elements, if the restoration index is outside the bounds this results in heap OOB read. We have patched the issue in GitHub commit 9e82dce6e6bd1f36a57e08fa85af213e2b2f2622. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37639.html",
          "Description": "CVE-2021-37639"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37640",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.SparseReshape` can be made to trigger an integral division by 0 exception. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L176-L181) calls the reshaping functor whenever there is at least an index in the input but does not check that shape of the input or the target shape have both a non-zero number of elements. The [reshape functor](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/reshape_util.cc#L40-L78) blindly divides by the dimensions of the target shape. Hence, if this is not checked, code will result in a division by 0. We have patched the issue in GitHub commit 4923de56ec94fff7770df259ab7f2288a74feb41. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1 as this is the other affected version.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37640.html",
          "Description": "CVE-2021-37640"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37641",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions if the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors. We have patched the issue in GitHub commit a2b743f6017d7b97af1fe49087ae15f0ac634373. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37641.html",
          "Description": "CVE-2021-37641"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37642",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.ResourceScatterDiv` is vulnerable to a division by 0 error. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/resource_variable_ops.cc#L865) uses a common class for all binary operations but fails to treat the division by 0 case separately. We have patched the issue in GitHub commit 4aacb30888638da75023e6601149415b39763d76. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37642.html",
          "Description": "CVE-2021-37642"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37643",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. If a user does not provide a valid padding value to `tf.raw_ops.MatrixDiagPartOp`, then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/linalg/matrix_diag_op.cc#L89) reads the first value from a tensor buffer without first checking that the tensor has values to read from. We have patched the issue in GitHub commit 482da92095c4d48f8784b1f00dda4f81c28d2988. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37643.html",
          "Description": "CVE-2021-37643"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37644",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions providing a negative element to `num_elements` list argument of `tf.raw_ops.TensorListReserve` causes the runtime to abort the process due to reallocating a `std::vector` to have a negative number of elements. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/list_kernels.cc#L312) calls `std::vector.resize()` with the new size controlled by input given by the user, without checking that this input is valid. We have patched the issue in GitHub commit 8a6e874437670045e6c7dc6154c7412b4a2135e2. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37644.html",
          "Description": "CVE-2021-37644"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37645",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L126) uses the `axis` value as the size argument to `absl::InlinedVector` constructor. But, the constructor uses an unsigned type for the argument, so the implicit conversion transforms the negative value to a large integer. We have patched the issue in GitHub commit 96f364a1ca3009f98980021c4b32be5fdcca33a1. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, and TensorFlow 2.4.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37645.html",
          "Description": "CVE-2021-37645"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37646",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of `tf.raw_ops.StringNGrams` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/string_ngrams_op.cc#L184) calls `reserve` on a `tstring` with a value that sometimes can be negative if user supplies negative `ngram_widths`. The `reserve` method calls `TF_TString_Reserve` which has an `unsigned long` argument for the size of the buffer. Hence, the implicit conversion transforms the negative value to a large integer. We have patched the issue in GitHub commit c283e542a3f422420cfdb332414543b62fc4e4a5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37646.html",
          "Description": "CVE-2021-37646"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37647",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. When a user does not supply arguments that determine a valid sparse tensor, `tf.raw_ops.SparseTensorSliceDataset` implementation can be made to dereference a null pointer. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L240-L251) has some argument validation but fails to consider the case when either `indices` or `values` are provided for an empty sparse tensor when the other is not. If `indices` is empty, then [code that performs validation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/data/sparse_tensor_slice_dataset_op.cc#L260-L261) (i.e., checking that the indices are monotonically increasing) results in a null pointer dereference. If `indices` as provided by the user is empty, then `indices` in the C++ code above is backed by an empty `std::vector`, hence calling `indices-\u003edim_size(0)` results in null pointer dereferencing (same as calling `std::vector::at()` on an empty vector). We have patched the issue in GitHub commit 02cc160e29d20631de3859c6653184e3f876b9d7. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37647.html",
          "Description": "CVE-2021-37647"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37648",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the code for `tf.raw_ops.SaveV2` does not properly validate the inputs and an attacker can trigger a null pointer dereference. The [implementation](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/save_restore_v2_ops.cc) uses `ValidateInputs` to check that the input arguments are valid. This validation would have caught the illegal state represented by the reproducer above. However, the validation uses `OP_REQUIRES` which translates to setting the `Status` object of the current `OpKernelContext` to an error status, followed by an empty `return` statement which just terminates the execution of the function it is present in. However, this does not mean that the kernel execution is finalized: instead, execution continues from the next line in `Compute` that follows the call to `ValidateInputs`. This is equivalent to lacking the validation. We have patched the issue in GitHub commit 9728c60e136912a12d99ca56e106b7cce7af5986. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37648.html",
          "Description": "CVE-2021-37648"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37649",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. The code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`. We have patched the issue in GitHub commit 7bdf50bb4f5c54a4997c379092888546c97c3ebd. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37649.html",
          "Description": "CVE-2021-37649"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37650",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.ExperimentalDatasetToTFRecord` and `tf.raw_ops.DatasetToTFRecord` can trigger heap buffer overflow and segmentation fault. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/to_tf_record_op.cc#L93-L102) assumes that all records in the dataset are of string type. However, there is no check for that, and the example given above uses numeric types. We have patched the issue in GitHub commit e0b6e58c328059829c3eb968136f17aa72b6c876. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37650.html",
          "Description": "CVE-2021-37650"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37651",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area. We have patched the issue in GitHub commit 0f931751fb20f565c4e94aa6df58d54a003cdb30. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37651.html",
          "Description": "CVE-2021-37651"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37652",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/boosted_trees/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed. We have patched the issue in GitHub commit 5ecec9c6fbdbc6be03295685190a45e7eee726ab. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37652.html",
          "Description": "CVE-2021-37652"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37653",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a crash via a floating point exception in `tf.raw_ops.ResourceGather`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L725-L731) computes the value of a value, `batch_size`, and then divides by it without checking that this value is not 0. We have patched the issue in GitHub commit ac117ee8a8ea57b73d34665cdf00ef3303bc0b11. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37653.html",
          "Description": "CVE-2021-37653"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37654",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor. Since the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor. We have patched the issue in GitHub commit bc9c546ce7015c57c2f15c168b3d9201de679a1d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37654.html",
          "Description": "CVE-2021-37654"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37655",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to `tf.raw_ops.ResourceScatterUpdate`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L919-L923) has an incomplete validation of the relationship between the shapes of `indices` and `updates`: instead of checking that the shape of `indices` is a prefix of the shape of `updates` (so that broadcasting can happen), code only checks that the number of elements in these two tensors are in a divisibility relationship. We have patched the issue in GitHub commit 01cff3f986259d661103412a20745928c727326f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37655.html",
          "Description": "CVE-2021-37655"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37656",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToSparse`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc#L30) has an incomplete validation of the splits values: it does not check that they are in increasing order. We have patched the issue in GitHub commit 1071f554dbd09f7e101324d366eec5f4fe5a3ece. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37656.html",
          "Description": "CVE-2021-37656"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37657",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong. We have patched the issue in GitHub commit f2a673bd34f0d64b8e40a551ac78989d16daad09. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37657.html",
          "Description": "CVE-2021-37657"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37658",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong. We have patched the issue in GitHub commit ff8894044dfae5568ecbf2ed514c1a37dc394f1b. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37658.html",
          "Description": "CVE-2021-37658"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37659",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations). The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/cwise_ops_common.h#L264) assumes that the two inputs have exactly the same number of elements but does not check that. Hence, when the eigen functor executes it triggers heap OOB reads and undefined behavior due to binding to nullptr. We have patched the issue in GitHub commit 93f428fd1768df147171ed674fee1fc5ab8309ec. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37659.html",
          "Description": "CVE-2021-37659"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37660",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause a floating point exception by calling inplace operations with crafted arguments that would result in a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/inplace_ops.cc#L283) has a logic error: it should skip processing if `x` and `v` are empty but the code uses `||` instead of `\u0026\u0026`. We have patched the issue in GitHub commit e86605c0a336c088b638da02135ea6f9f6753618. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37660.html",
          "Description": "CVE-2021-37660"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37661",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause a denial of service in `boosted_trees_create_quantile_stream_resource` by using negative arguments. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantile_ops.cc#L96) does not validate that `num_streams` only contains non-negative numbers. In turn, [this results in using this value to allocate memory](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/quantiles/quantile_stream_resource.h#L31-L40). However, `reserve` receives an unsigned integer so there is an implicit conversion from a negative value to a large positive unsigned. This results in a crash from the standard library. We have patched the issue in GitHub commit 8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37661.html",
          "Description": "CVE-2021-37661"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37662",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature` and similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) does not validate the input values. We have patched the issue in GitHub commit 9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad and in commit 429f009d2b2c09028647dd4bb7b3f6f414bbaad7. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37662.html",
          "Description": "CVE-2021-37662"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37663",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37663.html",
          "Description": "CVE-2021-37663"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37664",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `BoostedTreesSparseCalculateBestFeatureSplit`. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/boosted_trees/stats_ops.cc) needs to validate that each value in `stats_summary_indices` is in range. We have patched the issue in GitHub commit e84c975313e8e8e38bb2ea118196369c45c51378. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37664.html",
          "Description": "CVE-2021-37664"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37665",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37665.html",
          "Description": "CVE-2021-37665"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37666",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty. We have patched the issue in GitHub commit be7a4de6adfbd303ce08be4332554dff70362612. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37666.html",
          "Description": "CVE-2021-37666"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37667",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty. We have patched the issue in GitHub commit 2e0ee46f1a47675152d3d865797a18358881d7a6. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37667.html",
          "Description": "CVE-2021-37667"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37668",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause denial of service in applications serving models using `tf.raw_ops.UnravelIndex` by triggering a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unravel_index_op.cc#L36) does not check that the tensor subsumed by `dims` is not empty. Hence, if one element of `dims` is 0, the implementation does a division by 0. We have patched the issue in GitHub commit a776040a5e7ebf76eeb7eb923bf1ae417dd4d233. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37668.html",
          "Description": "CVE-2021-37668"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37669",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause denial of service in applications serving models using `tf.raw_ops.NonMaxSuppressionV5` by triggering a division by 0. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/image/non_max_suppression_op.cc#L170-L271) uses a user controlled argument to resize a `std::vector`. However, as `std::vector::resize` takes the size argument as a `size_t` and `output_size` is an `int`, there is an implicit conversion to unsigned. If the attacker supplies a negative value, this conversion results in a crash. A similar issue occurs in `CombinedNonMaxSuppression`. We have patched the issue in GitHub commit 3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d and commit [b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37669.html",
          "Description": "CVE-2021-37669"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37670",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.UpperBound`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/searchsorted_op.cc#L85-L104) does not validate the rank of `sorted_input` argument. A similar issue occurs in `tf.raw_ops.LowerBound`. We have patched the issue in GitHub commit 42459e4273c2e47a3232cc16c4f4fff3b3a35c38. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37670.html",
          "Description": "CVE-2021-37670"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-37671",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.Map*` and `tf.raw_ops.OrderedMap*` operations. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L222-L248) has a check in place to ensure that `indices` is in ascending order, but does not check that `indices` is not empty. We have patched the issue in GitHub commit 532f5c5a547126c634fefd43bbad1dc6417678ac. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37671.html",
          "Description": "CVE-2021-37671"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37672",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.SdcaOptimizerV2`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/sdca_internal.cc#L320-L353) does not check that the length of `example_labels` is the same as the number of examples. We have patched the issue in GitHub commit a4e138660270e7599793fa438cd7b2fc2ce215a6. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37672.html",
          "Description": "CVE-2021-37672"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-37673",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor. We have patched the issue in GitHub commit d7de67733925de196ec8863a33445b73f9562d1d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37673.html",
          "Description": "CVE-2021-37673"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37674",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37674.html",
          "Description": "CVE-2021-37674"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37675",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions most implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/framework/common_shape_fns.cc#L577) is missing several validations before doing divisions and modulo operations. We have patched the issue in GitHub commit 8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37675.html",
          "Description": "CVE-2021-37675"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37676",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.SparseFillEmptyRows`. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/sparse_ops.cc#L608-L634) does not validate that the input arguments are not empty tensors. We have patched the issue in GitHub commit 578e634b4f1c1c684d4b4294f9e5281b2133b3ed. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37676.html",
          "Description": "CVE-2021-37676"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37677",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37677.html",
          "Description": "CVE-2021-37677"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37678",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104) uses `yaml.unsafe_load` which can perform arbitrary code execution on the input. Given that YAML format support requires a significant amount of work, we have removed it for now. We have patched the issue in GitHub commit 23d6383eb6c14084a8fc3bdf164043b974818012. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37678.html",
          "Description": "CVE-2021-37678"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37679",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions it is possible to nest a `tf.map_fn` within another `tf.map_fn` call. However, if the input tensor is a `RaggedTensor` and there is no function signature provided, code assumes the output is a fully specified tensor and fills output buffer with uninitialized contents from the heap. The `t` and `z` outputs should be identical, however this is not the case. The last row of `t` contains data from the heap which can be used to leak other memory information. The bug lies in the conversion from a `Variant` tensor to a `RaggedTensor`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/ragged_tensor_from_variant_op.cc#L177-L190) does not check that all inner shapes match and this results in the additional dimensions. The same implementation can result in data loss, if input tensor is tweaked. We have patched the issue in GitHub commit 4e2565483d0ffcadc719bd44893fb7f609bb5f12. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37679.html",
          "Description": "CVE-2021-37679"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37680",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of fully connected layers in TFLite is [vulnerable to a division by zero error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/fully_connected.cc#L226). We have patched the issue in GitHub commit 718721986aa137691ee23f03638867151f74935f. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37680.html",
          "Description": "CVE-2021-37680"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37681",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of SVDF in TFLite is [vulnerable to a null pointer error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/svdf.cc#L300-L313). The [`GetVariableInput` function](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L115-L119) can return a null pointer but `GetTensorData` assumes that the argument is always a valid tensor. Furthermore, because `GetVariableInput` calls [`GetMutableInput`](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/kernel_util.cc#L82-L90) which might return `nullptr`, the `tensor-\u003eis_variable` expression can also trigger a null pointer exception. We have patched the issue in GitHub commit 5b048e87e4e55990dae6b547add4dae59f4e1c76. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37681.html",
          "Description": "CVE-2021-37681"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37682",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions all TFLite operations that use quantization can be made to use unitialized values. [For example](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/depthwise_conv.cc#L198-L200). The issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code. We have patched the issue in GitHub commits 537bc7c723439b9194a358f64d871dd326c18887, 4a91f2069f7145aab6ba2d8cfe41be8a110c18a5 and 8933b8a21280696ab119b63263babdb54c298538. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37682.html",
          "Description": "CVE-2021-37682"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37683",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementation of division in TFLite is [vulnerable to a division by 0 error](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/lite/kernels/div.cc). There is no check that the divisor tensor does not contain zero elements. We have patched the issue in GitHub commit 1e206baedf8bef0334cca3eb92bab134ef525a28. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37683.html",
          "Description": "CVE-2021-37683"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37684",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the implementations of pooling in TFLite are vulnerable to division by 0 errors as there are no checks for divisors not being 0. We have patched the issue in GitHub commit [dfa22b348b70bb89d6d6ec0ff53973bacb4f4695](https://github.com/tensorflow/tensorflow/commit/dfa22b348b70bb89d6d6ec0ff53973bacb4f4695). The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37684.html",
          "Description": "CVE-2021-37684"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37685",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`expand_dims.cc`](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/expand_dims.cc#L36-L50) contains a vulnerability which allows reading one element outside of bounds of heap allocated data. If `axis` is a large negative value (e.g., `-100000`), then after the first `if` it would still be negative. The check following the `if` statement will pass and the `for` loop would read one element before the start of `input_dims.data` (when `i = 0`). We have patched the issue in GitHub commit d94ffe08a65400f898241c0374e9edc6fa8ed257. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37685.html",
          "Description": "CVE-2021-37685"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-37686",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the strided slice implementation in TFLite has a logic bug which can allow an attacker to trigger an infinite loop. This arises from newly introduced support for [ellipsis in axis definition](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/strided_slice.cc#L103-L122). An attacker can craft a model such that `ellipsis_end_idx` is smaller than `i` (e.g., always negative). In this case, the inner loop does not increase `i` and the `continue` statement causes execution to skip over the preincrement at the end of the outer loop. We have patched the issue in GitHub commit dfa22b348b70bb89d6d6ec0ff53973bacb4f4695. TensorFlow 2.6.0 is the only affected version.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37686.html",
          "Description": "CVE-2021-37686"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37687",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`GatherNd` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation. Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`. Similar issue exists in [`Gather` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc). We have patched the issue in GitHub commits bb6a0383ed553c286f87ca88c207f6774d5c4a8f and eb921122119a6b6e470ee98b89e65d721663179d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37687.html",
          "Description": "CVE-2021-37687"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-37688",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285) unconditionally dereferences a pointer. We have patched the issue in GitHub commit 15691e456c7dc9bd6be203b09765b063bf4a380c. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37688.html",
          "Description": "CVE-2021-37688"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37689",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service. This is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements. We have patched the issue in GitHub commit d6b57f461b39fd1aa8c1b870f1b974aac3554955. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37689.html",
          "Description": "CVE-2021-37689"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37690",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions when running shape functions, some functions (such as `MutableHashTableShape`) produce extra output information in the form of a `ShapeAndType` struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault. `ShapeRefiner` is mitigating this for normal output shapes by cloning them (and thus putting the newly created shape under ownership of an inference context that will not die), but we were not doing the same for shapes and types. This commit fixes that by doing similar logic on output shapes and types. We have patched the issue in GitHub commit ee119d4a498979525046fba1c3dd3f13a039fbb1. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37690.html",
          "Description": "CVE-2021-37690"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37691",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can craft a TFLite model that would trigger a division by zero error in LSH [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/lsh_projection.cc#L118). We have patched the issue in GitHub commit 0575b640091680cfb70f4dd93e70658de43b94f9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37691.html",
          "Description": "CVE-2021-37691"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-37692",
      "Description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions under certain conditions, Go code can trigger a segfault in string deallocation. For string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function. However, tensor structure isn't checked until encoding to avoid a performance penalty. The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions). To fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written. We have patched the issue in GitHub commit 8721ba96e5760c229217b594f6d2ba332beedf22. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, which is the other affected version.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-37692.html",
          "Description": "CVE-2021-37692"
        },
        {
          "URL": "https://bugzilla.suse.com/1189423",
          "Description": "SUSE Bug 1189423"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41195",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `tf.math.segment_*` operations results in a `CHECK`-fail related abort (and denial of service) if a segment id in `segment_ids` is large. This is similar to CVE-2021-29584 (and similar other reported vulnerabilities in TensorFlow, localized to specific APIs): the implementation (both on CPU and GPU) computes the output shape using `AddDim`. However, if the number of elements in the tensor overflows an `int64_t` value, `AddDim` results in a `CHECK` failure which provokes a `std::abort`. Instead, code should use `AddDimWithStatus`. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41195.html",
          "Description": "CVE-2021-41195"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41196",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the Keras pooling layers can trigger a segfault if the size of the pool is 0 or if a dimension is negative. This is due to the TensorFlow's implementation of pooling operations where the values in the sliding window are not checked to be strictly positive. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41196.html",
          "Description": "CVE-2021-41196"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41197",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions TensorFlow allows tensor to have a large number of dimensions and each dimension can be as large as desired. However, the total number of elements in a tensor must fit within an `int64_t`. If an overflow occurs, `MultiplyWithoutOverflow` would return a negative result. In the majority of TensorFlow codebase this then results in a `CHECK`-failure. Newer constructs exist which return a `Status` instead of crashing the binary. This is similar to CVE-2021-29584. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41197.html",
          "Description": "CVE-2021-41197"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        },
        {
          "URL": "https://bugzilla.suse.com/1199814",
          "Description": "SUSE Bug 1199814"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41198",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions if `tf.tile` is called with a large input argument then the TensorFlow process will crash due to a `CHECK`-failure caused by an overflow. The number of elements in the output tensor is too much for the `int64_t` type and the overflow is detected via a `CHECK` statement. This aborts the process. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41198.html",
          "Description": "CVE-2021-41198"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41199",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions if `tf.image.resize` is called with a large input argument then the TensorFlow process will crash due to a `CHECK`-failure caused by an overflow. The number of elements in the output tensor is too much for the `int64_t` type and the overflow is detected via a `CHECK` statement. This aborts the process. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41199.html",
          "Description": "CVE-2021-41199"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41200",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions if `tf.summary.create_file_writer` is called with non-scalar arguments code crashes due to a `CHECK`-fail. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41200.html",
          "Description": "CVE-2021-41200"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41201",
      "Description": "TensorFlow is an open source platform for machine learning. In affeced versions during execution, `EinsumHelper::ParseEquation()` is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output. However, the code only changes these flags to `true` and never assigns `false`. This results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41201.html",
          "Description": "CVE-2021-41201"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41202",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions while calculating the size of the output within the `tf.range` kernel, there is a conditional statement of type `int64 = condition ? int64 : double`. Due to C++ implicit conversion rules, both branches of the condition will be cast to `double` and the result would be truncated before the assignment. This result in overflows. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41202.html",
          "Description": "CVE-2021-41202"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41203",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions an attacker can trigger undefined behavior, integer overflows, segfaults and `CHECK`-fail crashes if they can change saved checkpoints from outside of TensorFlow. This is because the checkpoints loading infrastructure is missing validation for invalid file formats. The fixes will be included in TensorFlow 2.7.0. We will also cherrypick these commits on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41203.html",
          "Description": "CVE-2021-41203"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41204",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions during TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41204.html",
          "Description": "CVE-2021-41204"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41205",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference functions for the `QuantizeAndDequantizeV*` operations can trigger a read outside of bounds of heap allocated array. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41205.html",
          "Description": "CVE-2021-41205"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41206",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions several TensorFlow operations are missing validation for the shapes of the tensor arguments involved in the call. Depending on the API, this can result in undefined behavior and segfault or `CHECK`-fail related crashes but in some scenarios writes and reads from heap populated arrays are also possible. We have discovered these issues internally via tooling while working on improving/testing GPU op determinism. As such, we don't have reproducers and there will be multiple fixes for these issues. These fixes will be included in TensorFlow 2.7.0. We will also cherrypick these commits on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41206.html",
          "Description": "CVE-2021-41206"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41207",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `ParallelConcat` misses some input validation and can produce a division by 0. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41207.html",
          "Description": "CVE-2021-41207"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41208",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the code for boosted trees in TensorFlow is still missing validation. As a result, attackers can trigger denial of service (via dereferencing `nullptr`s or via `CHECK`-failures) as well as abuse undefined behavior (binding references to `nullptr`s). An attacker can also read and write from heap buffers, depending on the API that gets used and the arguments that are passed to the call. Given that the boosted trees implementation in TensorFlow is unmaintained, it is recommend to no longer use these APIs. We will deprecate TensorFlow's boosted trees APIs in subsequent releases. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41208.html",
          "Description": "CVE-2021-41208"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41209",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementations for convolution operators trigger a division by 0 if passed empty filter tensor arguments. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41209.html",
          "Description": "CVE-2021-41209"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41210",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference functions for `SparseCountSparseOutput` can trigger a read outside of bounds of heap allocated array. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41210.html",
          "Description": "CVE-2021-41210"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41211",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for `QuantizeV2` can trigger a read outside of bounds of heap allocated array. This occurs whenever `axis` is a negative value less than `-1`. In this case, we are accessing data before the start of a heap buffer. The code allows `axis` to be an optional argument (`s` would contain an `error::NOT_FOUND` error code). Otherwise, it assumes that `axis` is a valid index into the dimensions of the `input` tensor. If `axis` is less than `-1` then this results in a heap OOB read. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41211.html",
          "Description": "CVE-2021-41211"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41212",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for `tf.ragged.cross` can trigger a read outside of bounds of heap allocated array. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41212.html",
          "Description": "CVE-2021-41212"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41213",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the code behind `tf.function` API can be made to deadlock when two `tf.function` decorated Python functions are mutually recursive. This occurs due to using a non-reentrant `Lock` Python object. Loading any model which contains mutually recursive functions is vulnerable. An attacker can cause denial of service by causing users to load such models and calling a recursive `tf.function`, although this is not a frequent scenario. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41213.html",
          "Description": "CVE-2021-41213"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41214",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for `tf.ragged.cross` has an undefined behavior due to binding a reference to `nullptr`. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41214.html",
          "Description": "CVE-2021-41214"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41215",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for `DeserializeSparse` can trigger a null pointer dereference. This is because the shape inference function assumes that the `serialize_sparse` tensor is a tensor with positive rank (and having `3` as the last dimension). The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41215.html",
          "Description": "CVE-2021-41215"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41216",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference function for `Transpose` is vulnerable to a heap buffer overflow. This occurs whenever `perm` contains negative elements. The shape inference function does not validate that the indices in `perm` are all valid. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41216.html",
          "Description": "CVE-2021-41216"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41217",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the process of building the control flow graph for a TensorFlow model is vulnerable to a null pointer exception when nodes that should be paired are not. This occurs because the code assumes that the first node in the pairing (e.g., an `Enter` node) always exists when encountering the second node (e.g., an `Exit` node). When this is not the case, `parent` is `nullptr` so dereferencing it causes a crash. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41217.html",
          "Description": "CVE-2021-41217"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41218",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for `AllToAll` can be made to execute a division by 0. This occurs whenever the `split_count` argument is 0. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41218.html",
          "Description": "CVE-2021-41218"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41219",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the code for sparse matrix multiplication is vulnerable to undefined behavior via binding a reference to `nullptr`. This occurs whenever the dimensions of `a` or `b` are 0 or less. In the case on one of these is 0, an empty output tensor should be allocated (to conserve the invariant that output tensors are always allocated when the operation is successful) but nothing should be written to it (that is, we should return early from the kernel implementation). Otherwise, attempts to write to this empty tensor would result in heap OOB access. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41219.html",
          "Description": "CVE-2021-41219"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41220",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the async implementation of `CollectiveReduceV2` suffers from a memory leak and a use after free. This occurs due to the asynchronous computation and the fact that objects that have been `std::move()`d from are still accessed. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41220.html",
          "Description": "CVE-2021-41220"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41221",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference code for the `Cudnn*` operations in TensorFlow can be tricked into accessing invalid memory, via a heap buffer overflow. This occurs because the ranks of the `input`, `input_h` and `input_c` parameters are not validated, but code assumes they have certain values. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41221.html",
          "Description": "CVE-2021-41221"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41222",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `SplitV` can trigger a segfault is an attacker supplies negative arguments. This occurs whenever `size_splits` contains more than one value and at least one value is negative. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41222.html",
          "Description": "CVE-2021-41222"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41223",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `FusedBatchNorm` kernels is vulnerable to a heap OOB access. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41223.html",
          "Description": "CVE-2021-41223"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41224",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `SparseFillEmptyRows` can be made to trigger a heap OOB access. This occurs whenever the size of `indices` does not match the size of `values`. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41224.html",
          "Description": "CVE-2021-41224"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41225",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions TensorFlow's Grappler optimizer has a use of unitialized variable. If the `train_nodes` vector (obtained from the saved model that gets optimized) does not contain a `Dequeue` node, then `dequeue_node` is left unitialized. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41225.html",
          "Description": "CVE-2021-41225"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-41226",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `SparseBinCount` is vulnerable to a heap OOB access. This is because of missing validation between the elements of the `values` argument and the shape of the sparse output. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41226.html",
          "Description": "CVE-2021-41226"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41227",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions the `ImmutableConst` operation in TensorFlow can be tricked into reading arbitrary memory contents. This is because the `tstring` TensorFlow string class has a special case for memory mapped strings but the operation itself does not offer any support for this datatype. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41227.html",
          "Description": "CVE-2021-41227"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41228",
      "Description": "TensorFlow is an open source platform for machine learning. In affected versions TensorFlow's `saved_model_cli` tool is vulnerable to a code injection as it calls `eval` on user supplied strings. This can be used by attackers to run arbitrary code on the plaform where the CLI tool runs. However, given that the tool is always run manually, the impact of this is not severe. We have patched this by adding a `safe` flag which defaults to `True` and an explicit warning for users. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41228.html",
          "Description": "CVE-2021-41228"
        },
        {
          "URL": "https://bugzilla.suse.com/1192447",
          "Description": "SUSE Bug 1192447"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21725",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The estimator for the cost of some convolution operations can be made to execute a division by 0. The function fails to check that the stride argument is strictly positive. Hence, the fix is to add a check for the stride argument to ensure it is valid. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21725.html",
          "Description": "CVE-2022-21725"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21726",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `Dequantize` does not fully validate the value of `axis` and can result in heap OOB accesses. The `axis` argument can be `-1` (the default value for the optional argument) or any other positive value at most the number of dimensions of the input. Unfortunately, the upper bound is not checked and this results in reading past the end of the array containing the dimensions of the input tensor. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21726.html",
          "Description": "CVE-2022-21726"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21727",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of shape inference for `Dequantize` is vulnerable to an integer overflow weakness. The `axis` argument can be `-1` (the default value for the optional argument) or any other positive value at most the number of dimensions of the input. Unfortunately, the upper bound is not checked, and, since the code computes `axis + 1`, an attacker can trigger an integer overflow. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21727.html",
          "Description": "CVE-2022-21727"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21728",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of shape inference for `ReverseSequence` does not fully validate the value of `batch_dim` and can result in a heap OOB read. There is a check to make sure the value of `batch_dim` does not go over the rank of the input, but there is no check for negative values. Negative dimensions are allowed in some cases to mimic Python's negative indexing (i.e., indexing from the end of the array), however if the value is too negative then the implementation of `Dim` would access elements before the start of an array. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21728.html",
          "Description": "CVE-2022-21728"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21729",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `UnravelIndex` is vulnerable to a division by zero caused by an integer overflow bug. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21729.html",
          "Description": "CVE-2022-21729"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21730",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `FractionalAvgPoolGrad` does not consider cases where the input tensors are invalid allowing an attacker to read from outside of bounds of heap. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21730.html",
          "Description": "CVE-2022-21730"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21731",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of shape inference for `ConcatV2` can be used to trigger a denial of service attack via a segfault caused by a type confusion. The `axis` argument is translated into `concat_dim` in the `ConcatShapeHelper` helper function. Then, a value for `min_rank` is computed based on `concat_dim`. This is then used to validate that the `values` tensor has at least the required rank. However, `WithRankAtLeast` receives the lower bound as a 64-bits value and then compares it against the maximum 32-bits integer value that could be represented. Due to the fact that `min_rank` is a 32-bits value and the value of `axis`, the `rank` argument is a negative value, so the error check is bypassed. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21731.html",
          "Description": "CVE-2022-21731"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21732",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `ThreadPoolHandle` can be used to trigger a denial of service attack by allocating too much memory. This is because the `num_threads` argument is only checked to not be negative, but there is no upper bound on its value. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21732.html",
          "Description": "CVE-2022-21732"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21733",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `StringNGrams` can be used to trigger a denial of service attack by causing an out of memory condition after an integer overflow. We are missing a validation on `pad_witdh` and that result in computing a negative value for `ngram_width` which is later used to allocate parts of the output. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21733.html",
          "Description": "CVE-2022-21733"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21734",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `MapStage` is vulnerable a `CHECK`-fail if the key tensor is not a scalar. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21734.html",
          "Description": "CVE-2022-21734"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21735",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `FractionalMaxPool` can be made to crash a TensorFlow process via a division by 0. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21735.html",
          "Description": "CVE-2022-21735"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21736",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `SparseTensorSliceDataset` has an undefined behavior: under certain condition it can be made to dereference a `nullptr` value. The 3 input arguments to `SparseTensorSliceDataset` represent a sparse tensor. However, there are some preconditions that these arguments must satisfy but these are not validated in the implementation. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21736.html",
          "Description": "CVE-2022-21736"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21737",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `*Bincount` operations allows malicious users to cause denial of service by passing in arguments which would trigger a `CHECK`-fail. There are several conditions that the input arguments must satisfy. Some are not caught during shape inference and others are not caught during kernel implementation. This results in `CHECK` failures later when the output tensors get allocated. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21737.html",
          "Description": "CVE-2022-21737"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21738",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `SparseCountSparseOutput` can be made to crash a TensorFlow process by an integer overflow whose result is then used in a memory allocation. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21738.html",
          "Description": "CVE-2022-21738"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21739",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `QuantizedMaxPool` has an undefined behavior where user controlled inputs can trigger a reference binding to null pointer. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21739.html",
          "Description": "CVE-2022-21739"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21740",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `SparseCountSparseOutput` is vulnerable to a heap overflow. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21740.html",
          "Description": "CVE-2022-21740"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-21741",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. ### Impact An attacker can craft a TFLite model that would trigger a division by zero in the implementation of depthwise convolutions. The parameters of the convolution can be user controlled and are also used within a division operation to determine the size of the padding that needs to be added before applying the convolution. There is no check before this division that the divisor is strictly positive. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-21741.html",
          "Description": "CVE-2022-21741"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23557",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would trigger a division by zero in `BiasAndClamp` implementation. There is no check that the `bias_size` is non zero. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23557.html",
          "Description": "CVE-2022-23557"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23558",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would cause an integer overflow in `TfLiteIntArrayCreate`. The `TfLiteIntArrayGetSizeInBytes` returns an `int` instead of a `size_t. An attacker can control model inputs such that `computed_size` overflows the size of `int` datatype. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23558.html",
          "Description": "CVE-2022-23558"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23559",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would cause an integer overflow in embedding lookup operations. Both `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication. In certain scenarios, this can then result in heap OOB read/write. Users are advised to upgrade to a patched version.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23559.html",
          "Description": "CVE-2022-23559"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23560",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would allow limited reads and writes outside of arrays in TFLite. This exploits missing validation in the conversion from sparse tensors to dense tensors. The fix is included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range. Users are advised to upgrade as soon as possible.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23560.html",
          "Description": "CVE-2022-23560"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23561",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would cause a write outside of bounds of an array in TFLite. In fact, the attacker can override the linked list used by the memory allocator. This can be leveraged for an arbitrary write primitive under certain conditions. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23561.html",
          "Description": "CVE-2022-23561"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23562",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `Range` suffers from integer overflows. These can trigger undefined behavior or, in some scenarios, extremely large allocations. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23562.html",
          "Description": "CVE-2022-23562"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23563",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. In multiple places, TensorFlow uses `tempfile.mktemp` to create temporary files. While this is acceptable in testing, in utilities and libraries it is dangerous as a different process can create the file between the check for the filename in `mktemp` and the actual creation of the file by a subsequent operation (a TOC/TOU type of weakness). In several instances, TensorFlow was supposed to actually create a temporary directory instead of a file. This logic bug is hidden away by the `mktemp` function usage. We have patched the issue in several commits, replacing `mktemp` with the safer `mkstemp`/`mkdtemp` functions, according to the usage pattern. Users are advised to upgrade as soon as possible.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23563.html",
          "Description": "CVE-2022-23563"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.3",
        "Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2022-23564",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. When decoding a resource handle tensor from protobuf, a TensorFlow process can encounter cases where a `CHECK` assertion is invalidated based on user controlled arguments. This allows attackers to cause denial of services in TensorFlow processes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23564.html",
          "Description": "CVE-2022-23564"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23565",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. An attacker can trigger denial of service via assertion failure by altering a `SavedModel` on disk such that `AttrDef`s of some operation are duplicated. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23565.html",
          "Description": "CVE-2022-23565"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23566",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. TensorFlow is vulnerable to a heap OOB write in `Grappler`. The `set_output` function writes to an array at the specified index. Hence, this gives a malicious user a write primitive. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23566.html",
          "Description": "CVE-2022-23566"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23567",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementations of `Sparse*Cwise*` ops are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or `CHECK`-fails when building new `TensorShape` objects (so, assert failures based denial of service). We are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23567.html",
          "Description": "CVE-2022-23567"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23568",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `AddManySparseToTensorsMap` is vulnerable to an integer overflow which results in a `CHECK`-fail when building new `TensorShape` objects (so, an assert failure based denial of service). We are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23568.html",
          "Description": "CVE-2022-23568"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23569",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. Multiple operations in TensorFlow can be used to trigger a denial of service via `CHECK`-fails (i.e., assertion failures). This is similar to TFSA-2021-198 and has similar fixes. We have patched the reported issues in multiple GitHub commits. It is possible that other similar instances exist in TensorFlow, we will issue fixes as these are discovered. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23569.html",
          "Description": "CVE-2022-23569"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23570",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. When decoding a tensor from protobuf, TensorFlow might do a null-dereference if attributes of some mutable arguments to some operations are missing from the proto. This is guarded by a `DCHECK`. However, `DCHECK` is a no-op in production builds and an assertion failure in debug builds. In the first case execution proceeds to the dereferencing of the null pointer, whereas in the second case it results in a crash due to the assertion failure. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23570.html",
          "Description": "CVE-2022-23570"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23571",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. When decoding a tensor from protobuf, a TensorFlow process can encounter cases where a `CHECK` assertion is invalidated based on user controlled arguments, if the tensors have an invalid `dtype` and 0 elements or an invalid shape. This allows attackers to cause denial of services in TensorFlow processes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23571.html",
          "Description": "CVE-2022-23571"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23572",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. Under certain scenarios, TensorFlow can fail to specialize a type during shape inference. This case is covered by the `DCHECK` function however, `DCHECK` is a no-op in production builds and an assertion failure in debug builds. In the first case execution proceeds to the `ValueOrDie` line. This results in an assertion failure as `ret` contains an error `Status`, not a value. In the second case we also get a crash due to the assertion failure. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23572.html",
          "Description": "CVE-2022-23572"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23573",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `AssignOp` can result in copying uninitialized data to a new tensor. This later results in undefined behavior. The implementation has a check that the left hand side of the assignment is initialized (to minimize number of allocations), but does not check that the right hand side is also initialized. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23573.html",
          "Description": "CVE-2022-23573"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23574",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. There is a typo in TensorFlow's `SpecializeType` which results in heap OOB read/write. Due to a typo, `arg` is initialized to the `i`th mutable argument in a loop where the loop index is `j`. Hence it is possible to assign to `arg` from outside the vector of arguments. Since this is a mutable proto value, it allows both read and write to outside of bounds data. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23574.html",
          "Description": "CVE-2022-23574"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23575",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `OpLevelCostEstimator::CalculateTensorSize` is vulnerable to an integer overflow if an attacker can create an operation which would involve a tensor with large enough number of elements. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23575.html",
          "Description": "CVE-2022-23575"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23576",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `OpLevelCostEstimator::CalculateOutputSize` is vulnerable to an integer overflow if an attacker can create an operation which would involve tensors with large enough number of elements. We can have a large enough number of dimensions in `output_shape.dim()` or just a small number of dimensions being large enough to cause an overflow in the multiplication. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23576.html",
          "Description": "CVE-2022-23576"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23577",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `GetInitOp` is vulnerable to a crash caused by dereferencing a null pointer. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23577.html",
          "Description": "CVE-2022-23577"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23578",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. If a graph node is invalid, TensorFlow can leak memory in the implementation of `ImmutableExecutorState::Initialize`. Here, we set `item-\u003ekernel` to `nullptr` but it is a simple `OpKernel*` pointer so the memory that was previously allocated to it would leak. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23578.html",
          "Description": "CVE-2022-23578"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23579",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a `SavedModel` such that `SafeToRemoveIdentity` would trigger `CHECK` failures. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23579.html",
          "Description": "CVE-2022-23579"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23580",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. During shape inference, TensorFlow can allocate a large vector based on a value from a tensor controlled by the user. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23580.html",
          "Description": "CVE-2022-23580"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23581",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a `SavedModel` such that `IsSimplifiableReshape` would trigger `CHECK` failures. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23581.html",
          "Description": "CVE-2022-23581"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23582",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a denial of service by altering a `SavedModel` such that `TensorByteSize` would trigger `CHECK` failures. `TensorShape` constructor throws a `CHECK`-fail if shape is partial or has a number of elements that would overflow the size of an `int`. The `PartialTensorShape` constructor instead does not cause a `CHECK`-abort if the shape is partial, which is exactly what this function needs to be able to return `-1`. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23582.html",
          "Description": "CVE-2022-23582"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23583",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a denial of service by altering a `SavedModel` such that any binary op would trigger `CHECK` failures. This occurs when the protobuf part corresponding to the tensor arguments is modified such that the `dtype` no longer matches the `dtype` expected by the op. In that case, calling the templated binary operator for the binary op would receive corrupted data, due to the type confusion involved. If `Tin` and `Tout` don't match the type of data in `out` and `input_*` tensors then `flat\u003c*\u003e` would interpret it wrongly. In most cases, this would be a silent failure, but we have noticed scenarios where this results in a `CHECK` crash, hence a denial of service. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23583.html",
          "Description": "CVE-2022-23583"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23584",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a use after free behavior when decoding PNG images. After `png::CommonFreeDecode(\u0026decode)` gets called, the values of `decode.width` and `decode.height` are in an unspecified state. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23584.html",
          "Description": "CVE-2022-23584"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23585",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. When decoding PNG images TensorFlow can produce a memory leak if the image is invalid. After calling `png::CommonInitDecode(..., \u0026decode)`, the `decode` value contains allocated buffers which can only be freed by calling `png::CommonFreeDecode(\u0026decode)`. However, several error case in the function implementation invoke the `OP_REQUIRES` macro which immediately terminates the execution of the function, without allowing for the memory free to occur. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23585.html",
          "Description": "CVE-2022-23585"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23586",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a denial of service by altering a `SavedModel` such that assertions in `function.cc` would be falsified and crash the Python interpreter. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23586.html",
          "Description": "CVE-2022-23586"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23587",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. Under certain scenarios, Grappler component of TensorFlow is vulnerable to an integer overflow during cost estimation for crop and resize. Since the cropping parameters are user controlled, a malicious person can trigger undefined behavior. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23587.html",
          "Description": "CVE-2022-23587"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23588",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a denial of service by altering a `SavedModel` such that Grappler optimizer would attempt to build a tensor using a reference `dtype`. This would result in a crash due to a `CHECK`-fail in the `Tensor` constructor as reference types are not allowed. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23588.html",
          "Description": "CVE-2022-23588"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23589",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. Under certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a `SavedModel` file (fixing the first one would trigger the same dereference in the second place). First, during constant folding, the `GraphDef` might not have the required nodes for the binary operation. If a node is missing, the correposning `mul_*child` would be null, and the dereference in the subsequent line would be incorrect. We have a similar issue during `IsIdentityConsumingSwitch`. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23589.html",
          "Description": "CVE-2022-23589"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23590",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. A `GraphDef` from a TensorFlow `SavedModel` can be maliciously altered to cause a TensorFlow process to crash due to encountering a `StatusOr` value that is an error and forcibly extracting the value from it. We have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23590.html",
          "Description": "CVE-2022-23590"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23591",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`. This would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23591.html",
          "Description": "CVE-2022-23591"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23594",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. The TFG dialect of TensorFlow (MLIR) makes several assumptions about the incoming `GraphDef` before converting it to the MLIR-based dialect. If an attacker changes the `SavedModel` format on disk to invalidate these assumptions and the `GraphDef` is then converted to MLIR-based IR then they can cause a crash in the Python interpreter. Under certain scenarios, heap OOB read/writes are possible. These issues have been discovered via fuzzing and it is possible that more weaknesses exist. We will patch them as they are discovered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23594.html",
          "Description": "CVE-2022-23594"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2022-23595",
      "Description": "Tensorflow is an Open Source Machine Learning Framework. When building an XLA compilation cache, if default settings are used, TensorFlow triggers a null pointer dereference. In the default scenario, all devices are allowed, so `flr-\u003econfig_proto` is `nullptr`. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23595.html",
          "Description": "CVE-2022-23595"
        },
        {
          "URL": "https://bugzilla.suse.com/1195545",
          "Description": "SUSE Bug 1195545"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:tensorflow-lite-2.9.1-1.1",
            "openSUSE Tumbleweed:tensorflow-lite-devel-2.9.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    }
  ]
}