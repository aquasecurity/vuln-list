{
  "Title": "containerd-1.4.8-2.2 on GA media",
  "Tracking": {
    "ID": "openSUSE-SU-2024:10693-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2024-06-15T00:00:00Z",
    "CurrentReleaseDate": "2024-06-15T00:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2024-06-15T00:00:00Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "containerd-1.4.8-2.2 on GA media",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "These are all security issues fixed in the containerd-1.4.8-2.2 package on the GA media of openSUSE Tumbleweed.",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "openSUSE-Tumbleweed-2024-10693",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "containerd-1.4.8-2.2",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "containerd-ctr-1.4.8-2.2",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2016-9962/",
      "Description": "SUSE CVE CVE-2016-9962 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2018-16873/",
      "Description": "SUSE CVE CVE-2018-16873 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2018-16874/",
      "Description": "SUSE CVE CVE-2018-16874 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2018-16875/",
      "Description": "SUSE CVE CVE-2018-16875 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2019-5736/",
      "Description": "SUSE CVE CVE-2019-5736 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15157/",
      "Description": "SUSE CVE CVE-2020-15157 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15257/",
      "Description": "SUSE CVE CVE-2020-15257 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-21334/",
      "Description": "SUSE CVE CVE-2021-21334 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-32760/",
      "Description": "SUSE CVE CVE-2021-32760 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2016-9962",
      "Description": "RunC allowed additional container processes via 'runc exec' to be ptraced by the pid 1 of the container.  This allows the main processes of the container, if running as root, to gain access to file-descriptors of these new processes during the initialization and can lead to container escapes or modification of runC state before the process is fully placed inside the container.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2016-9962.html",
          "Description": "CVE-2016-9962"
        },
        {
          "URL": "https://bugzilla.suse.com/1012568",
          "Description": "SUSE Bug 1012568"
        },
        {
          "URL": "https://bugzilla.suse.com/1173425",
          "Description": "SUSE Bug 1173425"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.4",
        "Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2018-16873",
      "Description": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2018-16873.html",
          "Description": "CVE-2018-16873"
        },
        {
          "URL": "https://bugzilla.suse.com/1118897",
          "Description": "SUSE Bug 1118897"
        },
        {
          "URL": "https://bugzilla.suse.com/1118898",
          "Description": "SUSE Bug 1118898"
        },
        {
          "URL": "https://bugzilla.suse.com/1118899",
          "Description": "SUSE Bug 1118899"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2018-16874",
      "Description": "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to directory traversal when executed with the import path of a malicious Go package which contains curly braces (both '{' and '}' characters). Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). The attacker can cause an arbitrary filesystem write, which can lead to code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2018-16874.html",
          "Description": "CVE-2018-16874"
        },
        {
          "URL": "https://bugzilla.suse.com/1118897",
          "Description": "SUSE Bug 1118897"
        },
        {
          "URL": "https://bugzilla.suse.com/1118898",
          "Description": "SUSE Bug 1118898"
        },
        {
          "URL": "https://bugzilla.suse.com/1118899",
          "Description": "SUSE Bug 1118899"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2018-16875",
      "Description": "The crypto/x509 package of Go before 1.10.6 and 1.11.x before 1.11.3 does not limit the amount of work performed for each chain verification, which might allow attackers to craft pathological inputs leading to a CPU denial of service. Go TLS servers accepting client certificates and TLS clients are affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2018-16875.html",
          "Description": "CVE-2018-16875"
        },
        {
          "URL": "https://bugzilla.suse.com/1118897",
          "Description": "SUSE Bug 1118897"
        },
        {
          "URL": "https://bugzilla.suse.com/1118898",
          "Description": "SUSE Bug 1118898"
        },
        {
          "URL": "https://bugzilla.suse.com/1118899",
          "Description": "SUSE Bug 1118899"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.8",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C"
      }
    },
    {
      "CVE": "CVE-2019-5736",
      "Description": "runc through 1.0-rc6, as used in Docker before 18.09.2 and other products, allows attackers to overwrite the host runc binary (and consequently obtain host root access) by leveraging the ability to execute a command as root within one of these types of containers: (1) a new container with an attacker-controlled image, or (2) an existing container, to which the attacker previously had write access, that can be attached with docker exec. This occurs because of file-descriptor mishandling, related to /proc/self/exe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2019-5736.html",
          "Description": "CVE-2019-5736"
        },
        {
          "URL": "https://bugzilla.suse.com/1121967",
          "Description": "SUSE Bug 1121967"
        },
        {
          "URL": "https://bugzilla.suse.com/1122185",
          "Description": "SUSE Bug 1122185"
        },
        {
          "URL": "https://bugzilla.suse.com/1173421",
          "Description": "SUSE Bug 1173421"
        },
        {
          "URL": "https://bugzilla.suse.com/1218894",
          "Description": "SUSE Bug 1218894"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "9.3",
        "Vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2020-15157",
      "Description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a \"foreign layer\"), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15157.html",
          "Description": "CVE-2020-15157"
        },
        {
          "URL": "https://bugzilla.suse.com/1177598",
          "Description": "SUSE Bug 1177598"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.6",
        "Vector": "AV:N/AC:H/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2020-15257",
      "Description": "containerd is an industry-standard container runtime and is available as a daemon for Linux and Windows. In containerd before versions 1.3.9 and 1.4.3, the containerd-shim API is improperly exposed to host network containers. Access controls for the shim's API socket verified that the connecting process had an effective UID of 0, but did not otherwise restrict access to the abstract Unix domain socket. This would allow malicious containers running in the same network namespace as the shim, with an effective UID of 0 but otherwise reduced privileges, to cause new processes to be run with elevated privileges. This vulnerability has been fixed in containerd 1.3.9 and 1.4.3. Users should update to these versions as soon as they are released. It should be noted that containers started with an old version of containerd-shim should be stopped and restarted, as running containers will continue to be vulnerable even after an upgrade. If you are not providing the ability for untrusted users to start containers in the same network namespace as the shim (typically the \"host\" network namespace, for example with docker run --net=host or hostNetwork: true in a Kubernetes pod) and run with an effective UID of 0, you are not vulnerable to this issue. If you are running containers with a vulnerable configuration, you can deny access to all abstract sockets with AppArmor by adding a line similar to deny unix addr=@**, to your policy. It is best practice to run containers with a reduced set of privileges, with a non-zero UID, and with isolated namespaces. The containerd maintainers strongly advise against sharing namespaces with the host. Reducing the set of isolation mechanisms used for a container necessarily increases that container's privilege, regardless of what container runtime is used for running that container.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15257.html",
          "Description": "CVE-2020-15257"
        },
        {
          "URL": "https://bugzilla.suse.com/1178969",
          "Description": "SUSE Bug 1178969"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2021-21334",
      "Description": "In containerd (an industry-standard container runtime) before versions 1.3.10 and 1.4.4, containers launched through containerd's CRI implementation (through Kubernetes, crictl, or any other pod/container client that uses the containerd CRI service) that share the same image may receive incorrect environment variables, including values that are defined for other containers. If the affected containers have different security contexts, this may allow sensitive information to be unintentionally shared. If you are not using containerd's CRI implementation (through one of the mechanisms described above), you are not vulnerable to this issue. If you are not launching multiple containers or Kubernetes pods from the same image which have different environment variables, you are not vulnerable to this issue. If you are not launching multiple containers or Kubernetes pods from the same image in rapid succession, you have reduced likelihood of being vulnerable to this issue This vulnerability has been fixed in containerd 1.3.10 and containerd 1.4.4. Users should update to these versions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-21334.html",
          "Description": "CVE-2021-21334"
        },
        {
          "URL": "https://bugzilla.suse.com/1183397",
          "Description": "SUSE Bug 1183397"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-32760",
      "Description": "containerd is a container runtime. A bug was found in containerd versions prior to 1.4.8 and 1.5.4 where pulling and extracting a specially-crafted container image can result in Unix file permission changes for existing files in the host's filesystem. Changes to file permissions can deny access to the expected owner of the file, widen access to others, or set extended bits like setuid, setgid, and sticky. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process. This bug has been fixed in containerd 1.5.4 and 1.4.8. As a workaround, ensure that users only pull images from trusted sources. Linux security modules (LSMs) like SELinux and AppArmor can limit the files potentially affected by this bug through policies and profiles that prevent containerd from interacting with specific files.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-32760.html",
          "Description": "CVE-2021-32760"
        },
        {
          "URL": "https://bugzilla.suse.com/1188282",
          "Description": "SUSE Bug 1188282"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:containerd-1.4.8-2.2",
            "openSUSE Tumbleweed:containerd-ctr-1.4.8-2.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    }
  ]
}