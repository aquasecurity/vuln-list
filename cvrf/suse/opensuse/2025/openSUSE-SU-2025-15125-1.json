{
  "Title": "ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7 on GA media",
  "Tracking": {
    "ID": "openSUSE-SU-2025:15125-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2025-05-17T00:00:00Z",
    "CurrentReleaseDate": "2025-05-17T00:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-05-17T00:00:00Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7 on GA media",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "These are all security issues fixed in the ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7 package on the GA media of openSUSE Tumbleweed.",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "openSUSE-Tumbleweed-2025-15125",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://lists.opensuse.org/archives/list/security-announce@lists.opensuse.org/thread/4QQONV4QKIWHRILZMO26H7FGDPO7KJAF/",
      "Description": "E-Mail link for openSUSE-SU-2025:15125-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2015-7578/",
      "Description": "SUSE CVE CVE-2015-7578 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2015-7579/",
      "Description": "SUSE CVE CVE-2015-7579 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2015-7580/",
      "Description": "SUSE CVE CVE-2015-7580 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2018-3741/",
      "Description": "SUSE CVE CVE-2018-3741 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23517/",
      "Description": "SUSE CVE CVE-2022-23517 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23518/",
      "Description": "SUSE CVE CVE-2022-23518 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23519/",
      "Description": "SUSE CVE CVE-2022-23519 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-23520/",
      "Description": "SUSE CVE CVE-2022-23520 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-32209/",
      "Description": "SUSE CVE CVE-2022-32209 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2015-7578",
      "Description": "Cross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem before 1.0.3 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via crafted tag attributes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2015-7578.html",
          "Description": "CVE-2015-7578"
        },
        {
          "URL": "https://bugzilla.suse.com/963326",
          "Description": "SUSE Bug 963326"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2015-7579",
      "Description": "Cross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem 1.0.2 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via an HTML entity that is mishandled by the Rails::Html::FullSanitizer class.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2015-7579.html",
          "Description": "CVE-2015-7579"
        },
        {
          "URL": "https://bugzilla.suse.com/963326",
          "Description": "SUSE Bug 963326"
        },
        {
          "URL": "https://bugzilla.suse.com/963327",
          "Description": "SUSE Bug 963327"
        },
        {
          "URL": "https://bugzilla.suse.com/963328",
          "Description": "SUSE Bug 963328"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2015-7580",
      "Description": "Cross-site scripting (XSS) vulnerability in lib/rails/html/scrubbers.rb in the rails-html-sanitizer gem before 1.0.3 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via a crafted CDATA node.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2015-7580.html",
          "Description": "CVE-2015-7580"
        },
        {
          "URL": "https://bugzilla.suse.com/963326",
          "Description": "SUSE Bug 963326"
        },
        {
          "URL": "https://bugzilla.suse.com/963327",
          "Description": "SUSE Bug 963327"
        },
        {
          "URL": "https://bugzilla.suse.com/963328",
          "Description": "SUSE Bug 963328"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2018-3741",
      "Description": "There is a possible XSS vulnerability in all rails-html-sanitizer gem versions below 1.0.4 for Ruby. The gem allows non-whitelisted attributes to be present in sanitized output when input with specially-crafted HTML fragments, and these attributes can lead to an XSS attack on target applications. This issue is similar to CVE-2018-8048 in Loofah. All users running an affected release should either upgrade or use one of the workarounds immediately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2018-3741.html",
          "Description": "CVE-2018-3741"
        },
        {
          "URL": "https://bugzilla.suse.com/1085967",
          "Description": "SUSE Bug 1085967"
        },
        {
          "URL": "https://bugzilla.suse.com/1086598",
          "Description": "SUSE Bug 1086598"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2022-23517",
      "Description": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Certain configurations of rails-html-sanitizer \u003c 1.4.4 use an inefficient regular expression that is susceptible to excessive backtracking when attempting to sanitize certain SVG attributes. This may lead to a denial of service through CPU resource consumption. This issue has been patched in version 1.4.4.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23517.html",
          "Description": "CVE-2022-23517"
        },
        {
          "URL": "https://bugzilla.suse.com/1206433",
          "Description": "SUSE Bug 1206433"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-23518",
      "Description": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Versions \u003e= 1.0.3, \u003c 1.4.4 are vulnerable to cross-site scripting via data URIs when used in combination with Loofah \u003e= 2.1.0. This issue is patched in version 1.4.4.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23518.html",
          "Description": "CVE-2022-23518"
        },
        {
          "URL": "https://bugzilla.suse.com/1206434",
          "Description": "SUSE Bug 1206434"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-23519",
      "Description": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways: allow both \"math\" and \"style\" elements,  or allow both \"svg\" and \"style\" elements. Code is only impacted if allowed tags are being overridden. . This issue is fixed in version 1.4.4. All users overriding the allowed tags to include \"math\" or \"svg\" and \"style\" should either upgrade or use the following workaround immediately: Remove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23519.html",
          "Description": "CVE-2022-23519"
        },
        {
          "URL": "https://bugzilla.suse.com/1206435",
          "Description": "SUSE Bug 1206435"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-23520",
      "Description": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, there is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer due to an incomplete fix of CVE-2022-32209. Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both \"select\" and \"style\" elements. Code is only impacted if allowed tags are being overridden. This issue is patched in version 1.4.4. All users overriding the allowed tags to include both \"select\" and \"style\" should either upgrade or use this workaround: Remove either \"select\" or \"style\" from the overridden allowed tags. NOTE: Code is _not_ impacted if allowed tags are overridden using either the :tags option to the Action View helper method sanitize or the :tags option to the instance method SafeListSanitizer#sanitize.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-23520.html",
          "Description": "CVE-2022-23520"
        },
        {
          "URL": "https://bugzilla.suse.com/1206436",
          "Description": "SUSE Bug 1206436"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-32209",
      "Description": "# Possible XSS Vulnerability in Rails::Html::SanitizerThere is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.This vulnerability has been assigned the CVE identifier CVE-2022-32209.Versions Affected: ALLNot affected: NONEFixed Versions: v1.4.3## ImpactA possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both `select` and `style` elements.Code is only impacted if allowed tags are being overridden. This may be done via application configuration:```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [\"select\", \"style\"]```see https://guides.rubyonrails.org/configuring.html#configuring-action-viewOr it may be done with a `:tags` option to the Action View helper `sanitize`:```\u003c%= sanitize @comment.body, tags: [\"select\", \"style\"] %\u003e```see https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitizeOr it may be done with Rails::Html::SafeListSanitizer directly:```ruby# class-level optionRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]```or```ruby# instance-level optionRails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"select\", \"style\"])```All users overriding the allowed tags by any of the above mechanisms to include both \"select\" and \"style\" should either upgrade or use one of the workarounds immediately.## ReleasesThe FIXED releases are available at the normal locations.## WorkaroundsRemove either `select` or `style` from the overridden allowed tags.## CreditsThis vulnerability was responsibly reported by [windshock](https://hackerone.com/windshock?type=user).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-32209.html",
          "Description": "CVE-2022-32209"
        },
        {
          "URL": "https://bugzilla.suse.com/1201183",
          "Description": "SUSE Bug 1201183"
        },
        {
          "URL": "https://bugzilla.suse.com/1206436",
          "Description": "SUSE Bug 1206436"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:ruby3.4-rubygem-rails-html-sanitizer-1.6.0-1.7"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N"
      }
    }
  ]
}