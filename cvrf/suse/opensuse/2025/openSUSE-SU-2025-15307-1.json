{
  "Title": "velociraptor-0.7.0.4.git163.87ee3570-1.1 on GA media",
  "Tracking": {
    "ID": "openSUSE-SU-2025:15307-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2025-07-03T00:00:00Z",
    "CurrentReleaseDate": "2025-07-03T00:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-07-03T00:00:00Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "velociraptor-0.7.0.4.git163.87ee3570-1.1 on GA media",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "These are all security issues fixed in the velociraptor-0.7.0.4.git163.87ee3570-1.1 package on the GA media of openSUSE Tumbleweed.",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "openSUSE-Tumbleweed-2025-15307",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "velociraptor-0.7.0.4.git163.87ee3570-1.1",
        "RelatesToProductReference": "openSUSE Tumbleweed",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-27144/",
      "Description": "SUSE CVE CVE-2025-27144 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-27152/",
      "Description": "SUSE CVE CVE-2025-27152 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-30204/",
      "Description": "SUSE CVE CVE-2025-30204 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2025-27144",
      "Description": "Go JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-27144.html",
          "Description": "CVE-2025-27144"
        },
        {
          "URL": "https://bugzilla.suse.com/1237608",
          "Description": "SUSE Bug 1237608"
        },
        {
          "URL": "https://bugzilla.suse.com/1237609",
          "Description": "SUSE Bug 1237609"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:velociraptor-0.7.0.4.git163.87ee3570-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27152",
      "Description": "axios is a promise based HTTP client for the browser and node.js. The issue occurs when passing absolute URLs rather than protocol-relative URLs to axios. Even if ‚Å†baseURL is set, axios sends the request to the specified absolute URL, potentially causing SSRF and credential leakage. This issue impacts both server-side and client-side usage of axios. This issue is fixed in 1.8.2.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-27152.html",
          "Description": "CVE-2025-27152"
        },
        {
          "URL": "https://bugzilla.suse.com/1239305",
          "Description": "SUSE Bug 1239305"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:velociraptor-0.7.0.4.git163.87ee3570-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-30204",
      "Description": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-30204.html",
          "Description": "CVE-2025-30204"
        },
        {
          "URL": "https://bugzilla.suse.com/1240441",
          "Description": "SUSE Bug 1240441"
        },
        {
          "URL": "https://bugzilla.suse.com/1240442",
          "Description": "SUSE Bug 1240442"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "openSUSE Tumbleweed:velociraptor-0.7.0.4.git163.87ee3570-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}