{
  "Title": "SUSE-IU-2024:1620-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2024:1620-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2024-10-28T01:00:00Z",
    "CurrentReleaseDate": "2024-10-28T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-07-07T17:00:38Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2024:1620-1 / google/sles-12-sp5-sap-byos-v20241028-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-12-sp5-sap-byos-v20241028-x86-64 contains the following changes:\nPackage gtk2 was updated:\n\n- Add CVE-2024-6655.patch: CVE-2024-6655 Stop looking for modules  in cwd (bsc#1228120).\n\nPackage iputils was updated:\n\n- Resolve jsc#PED-9524- Bump version to version s20161105 (bsc#1221439)\n- This version can use ICMP datagram sockets without CAP_NET_RAW capabilites.\n- Added iputils-disable-rarpd-rdisc.patch\n  - disables building of rarpd and rdisc as they're provided by separate package (rarpd) in SLE12-SP5\n  Full changelog:\n  * ping: eliminate deadcode \u0026amp; simplify\n  * ping: do not allow oversized packets to root\n  * correctly initialize first hop\n  * ping: fix ping -6 -I\n  * arping,doc: fix documentation of -I\n  * ping: fix error message when getting EACCES from connect()\n  * renamed INSTALL to INSTALL.md\n  * (re)structured INSTALL.md and transformed into markdown; added hint that installation into prefix has to be done with DESTDIR make variable and that there's no prefix support in configure, close #21\n  * ping: Silence GCC warnings when building with -fstrict-aliasing\n  * tftpd: Drop supplementary groups for root\n  * libgcrypt: fix static linking\n  * doc: Inserted a missing word\n  * tracepath6: avoid redundant family variable\n  * tracepath: borrow everything good from tracepath6\n  * tracepath: switch to dual-stack operation\n  * tracepath: remove now redundant tracepath6\n  * docs: fix parallel build of manpages\n  * ping: remove assignments of values that are never read\n  * docs: remove references to ping6 and traceroute6\n  * ping: work with older kernels that don't support ping sockets\n  * Revert \u0026quot;ping_common.c: fix message flood when EPERM is encountered in ping\u0026quot;\n  * reorder -I option parsing (boo#1057664)\n  * ping: also bind the ICMP socket to the specific device\n- tracepath6 is now symlink to tracepath.\n\n- Add fix for ICMP datagram socket ping6-Fix-device-binding.patch\n  (bsc#1196840, bsc#1199918, bsc#1199926, bsc#1199927).\n\n- Remove 2 old patches (iputils-sec-ping-unblock.diff, iputils-ping-interrupt.diff)\n  Although not documented, they both belong to bsc#674304. Fix from 2011 was\n  resolved upstream in commit 810dd7f (\u0026quot;ping,ping6: Unmask signals on\n  start-up.\u0026quot;) [1], released in s20121112.\n- Update iputils-remove-bogus-check-required-for-2.4.9-kernels.patch\n  (backport 4471ac6 to add changes in header files)\n- Use git format for iputils-ping-fix-pmtu-for-ipv6.patch (required by\n  %autosetup -p1)\n- Use %autosetup -p1\n\n- Backport license information from upstream (bnc#1082788):\n  iputils-add-license-info.diff\n\n- Backport iputils-ping-fix-pmtu-for-ipv6.patch from upstream\n  to fix PMTU discovery in ping6. (bsc#1072460)\n\n- Install rdisc as rdisc, do not use in.rdisc anymore (xinetd which\n  was using in.* names is obsolete anyways)\n\n- iputils: remove man pages of unused binaries: ninfod, pg3, rdisc\n  (rdisc is in a separate package)\n\n- Add systemd service for rarpd\n\n- mark ping also verify not caps, as these are changed by the\n  permissions package. (bsc#1065835)\n\n- Reintroduce rarpd as subpackage\n- Explicitly list content in filelist as we have two subpackages\n  now\n\n- Cleanup with spec-cleaner\n\n- Update to version s20161105 (Changes taken from the RELNOTES file)\n  * ping: eliminate deadcode \u0026amp; simplify\n  * ping: do not allow oversized packets to root\n  * correctly initialize first hop\n  * ping: fix ping -6 -I\n  * arping,doc: fix documentation of -I\n  * ping: fix error message when getting EACCES from connect()\n  * renamed INSTALL to INSTALL.md\n  * (re)structured INSTALL.md and transformed into markdown; added hint that installation into prefix has to be done with DESTDIR make variable and that there's no prefix support in configure, close #21\n  * ping: Silence GCC warnings when building with -fstrict-aliasing\n  * tftpd: Drop supplementary groups for root\n  * libgcrypt: fix static linking\n  * doc: Inserted a missing word\n  * tracepath6: avoid redundant family variable\n  * tracepath: borrow everything good from tracepath6\n  * tracepath: switch to dual-stack operation\n  * tracepath: remove now redundant tracepath6\n  * docs: fix parallel build of manpages\n  * ping: remove assignments of values that are never read\n  * docs: remove references to ping6 and traceroute6\n  * ping: work with older kernels that don't support ping sockets\n  * Revert \u0026quot;ping_common.c: fix message flood when EPERM is encountered in ping\u0026quot;\n  * reorder -I option parsing (boo#1057664)\n  * ping: also bind the ICMP socket to the specific device\n- tracepath6 is now symlink to tracepath.\n\n- Add ping6 symlink (boo#1017616)\n\n- do not install rarpd and rarpd.8 manpage (comes from rarpd rpm currently)\n\n- Update to version s20160308 (Changes taken from the RELNOTES file)\n  * use syntax compatible with busybox date in Makefile\n  * 'admin prohibited' should print !X not !S.\n  * Makefile: use #define as in previous code changes\n  * doc/Makefile: require bash, because we use pushd and popd\n  * doc: don't timestamp manpages by default\n  * ping: status() now returns received/transmitted instead of trans/recv\n  * ping: don't mess with internals of struct msghdr\n  * ping: ICMP error replies while errno \u0026lt; 0 is a hard error\n  * ping: always use POSIX locale when parsing -i\n  * ping: link against libm\n  * made ping functions protocol independent\n  * ping: perform dual-stack ping by default\n  * ping: remove obsolete preprocessor directives\n  * ping: avoid name clashes between IPv4 and IPv6 code\n  * ping: merge all ping header files into a single one\n  * ping: merge `ping6` command into `ping`\n  * ping: refactor ping options\n  * ping: refactor ping socket code\n  * ping: merge IPv4 and IPv6 `pr_addr()`\n  * ping: fix defines and libs in Makefile\n  * ping: handle single protocol systems\n  * iputils ping/ping6: Add a function to check if a packet is ours\n  * ping: Add \u0026lt;linux/types.h\u0026gt; to fix compilation error.\n  * ping6: Use GNUTLS API directly for MD5. (v2)\n  * ping6: Use libgcrypt instead of gnutls for MD5.\n  * Allow ping to use IPv6 addresses\n  * ping,ping6 doc: More description on CAP_NET_RAW usage.\n  * if IPv4 resolving fails fallback to ping6\n  * ping: in usage print the 'ping -6' options as well\n  * ping: allow option -4 which forces IPv4\n  * combine sock and errno into a single structure\n  * This patch allows running ping and ping6 without root privileges on\n  * use better names for socket variables\n  * tracepath,doc: fix corrupted tag\n  * doc: ping: add missing options and remove ping6\n  * ninfod: remove unused variables\n  * ninfod: Regenerate configure by autoconf-2.69.\n  * ninfod: libgcrypt support.\n  * Fix building with musl\n  * travis.yml: install nettle-dev\n  * Allow using nettle instead of libgcrypt for MD5\n  * avoid compiler warning caused by snapshot.h\n  * make `getaddrinfo()` and `getnameinfo()` usage consistent\n  * enable IDN by default\n  * remove IPV4_TARGETS and IPV6_TARGETS\n  * Use svg instead of png to get better image quality\n  * spec: Configure before building ninfod.\n  * spec: Fix date in %changelog.\n  * make,spec: Add rpm target.\n- Refreshed patches\n  * iputils-ping-interrupt.diff\n  * iputils-sec-ping-unblock.diff\n- Remove ifenslave.c. It has been removed in the linux kernel commit\n  b1098bbe1b24(\u0026quot;bonding: remove ifenslave.c from kernel source\u0026quot;).\n  bonding can be done via iproute (netlink)\n- dropped iputils-ifenslave.diff\n- Append our CFLAGS to the upstream ones instead of overriding them.\n- Cleanup old make command since the upstream Makefile does things right\n  it seems.\n- Use Provides: for old /{,s}bin utils to satisfy reverse dependencies.\n- Install utilities to /bin and /sbin until reverse dependencies are\n  properly fixed.\n- Do not install tftp and traceroute to avoid conflicts with the tftp and\n  traceroute packages. Stick to what iputils used to provide in the past.\n- Remove iputils-traceroute6-stdint.diff patch since we are not building\n  the traceroute* utilities.\n- Install tracepath to /usr/bin. (boo#795788)\n\n- Update to version s20150815\n  * use syntax compatible with busybox date in Makefile\n  * Makefile: use #define as in previous code changes\n  * ping: status() now returns received/transmitted instead of trans/recv\n  * ping: don't mess with internals of struct msghdr\n  * tracepath,doc: fix corrupted tag\n  * made ping functions protocol independent\n  * Allow ping to use IPv6 addresses\n  * if IPv4 resolving fails fallback to ping6\n  * ping: in usage print the 'ping -6' options as well\n  * ping: allow option -4 which forces IPv4\n  * combine sock and errno into a single structure\n  * This patch allows running ping and ping6 without root privileges on\n  * use better names for socket variables\n  * travis.yml: install nettle-dev\n  * Allow using nettle instead of libgcrypt for MD5\n  * avoid compiler warning caused by snapshot.h\n  * make `getaddrinfo()` and `getnameinfo()` usage consistent\n  * enable IDN by default\n  * ping: perform dual-stack ping by default\n  * remove IPV4_TARGETS and IPV6_TARGETS\n  * ping: remove obsolete preprocessor directives\n  * ping: avoid name clashes between IPv4 and IPv6 code\n  * ping: merge all ping header files into a single one\n  * ping: merge `ping6` command into `ping`\n  * ping: refactor ping options\n  * ping: refactor ping socket code\n  * ping: merge IPv4 and IPv6 `pr_addr()`\n  * Use svg instead of png to get better image quality\n  * iputils ping/ping6: Add a function to check if a packet is ours\n  * ping: Add \u0026lt;linux/types.h\u0026gt; to fix compilation error.\n  * ping6: Use GNUTLS API directly for MD5. (v2)\n  * ping6: Use libgcrypt instead of gnutls for MD5.\n  * ninfod: Regenerate configure by autoconf-2.69.\n  * ninfod: libgcrypt support.\n  * spec: Configure before building ninfod.\n  * spec: Fix date in %changelog.\n  * make,spec: Add rpm target.\n  * ping,ping6 doc: More description on CAP_NET_RAW usage.\n- Update patches\n  * iputils-s20101006-ping-interrupt.diff \u0026gt; iputils-ping-interrupt.diff\n  * iputils-s20101006-sec-ping-unblock.diff \u0026gt; iputils-sec-ping-unblock.diff\n  * iputils-remove-bogus-check-required-for-2.4.9-kernels.patch\n- Update home project page and download Url\n- Remove obsolete %clean section\n- Remove UsrMerge process; it has been done for more than two\n  openSUSE releases now\n\n- Fix a bogus kernel version check (boo#927831):\n  iputils-remove-bogus-check-required-for-2.4.9-kernels.patch\n\nPackage curl was updated:\n\n- Make special characters in URL work with aws-sigv4 [bsc#1230516]  * http_aws_sigv4: canonicalize the query [fc76a24c]\n  * test439: verify query canonization for aws-sigv4 [65661016]\n  * http_aws_sigv4: skip the op if the query pair is zero bytes [16bdc09e]\n  * aws_sigv4: the query canon code miscounted URL encoded input [a1532a33]\n  * http_aws_sigv4: canonicalise valueless query params [bbba69da]\n  * aws-sigv4: url encode the canonical path [768909d8]\n  * Add upstream patches:\n  - curl-aws_sigv4-canonicalize-the-query.patch\n  - curl-aws_sigv4-verify-query-canonization.patch\n  - curl-aws_sigv4-skip-the-op-if-the-query-pair-is-zero-bytes.patch\n  - curl-aws_sigv4-the-query-canon-code-miscounted-url-encoded-input.patch\n  - curl-aws_sigv4-canonicalise-valueless-query-params.patch\n  - curl-aws_sigv4-url-encode-the-canonical-path.patch\n\n- Security fix: [bsc#1230093, CVE-2024-8096]\n  * curl: OCSP stapling bypass with GnuTLS\n  * Add curl-CVE-2024-8096.patch\n\n- Security fix: [bsc#1228535, CVE-2024-7264]\n  * curl: ASN.1 date parser overread\n  * Add curl-CVE-2024-7264.patch\n\nPackage Mesa was updated:\n\n- u_mesa-CVE-2023-45913.patch  * NULL pointer dereference via dri2GetGlxDrawableFromXDrawableId()\n    (CVE-2023-45913, bsc#1222040)\n- u_mesa-CVE-2023-45919.patch\n  * buffer over-read in glXQueryServerString()\n    (CVE-2023-45919, bsc#1222041)\n- u_mesa-CVE-2023-45922.patch\n  * segmentation violation in __glXGetDrawableAttribute()\n    (CVE-2023-45922, bsc#1222042)\n\nPackage wicked was updated:\n\n- compat-suse: fix dummy interfaces configuration with  INTERFACETYPE=dummy (boo#1229555, gh#openSUSE/wicked#1031)\n  [+ 0001-compat-suse-repair-dummy-interfaces-boo-1229555.patch]\n\n- Update to version 0.6.76\n  - compat-suse: warn user and create missing parent config of\n    infiniband children (gh#openSUSE/wicked#1027)\n  - client: fix origin in loaded xml-config with obsolete port\n    references but missing port interface config, causing a\n    no-carrier of master (bsc#1226125)\n  - ipv6: fix setup on ipv6.disable=1 kernel cmdline (bsc#1225976)\n  - wireless: add frequency-list in station mode (jsc#PED-8715)\n  - client: fix crash while hierarchy traversing due to loop in\n    e.g. systemd-nspawn containers (bsc#1226664)\n  - man: add supported bonding options to ifcfg-bonding(5) man page\n    (gh#openSUSE/wicked#1021)\n  - arputil: Document minimal interval for getopts (gh#openSUSE/wicked#1019)\n  - man: (re)generate man pages from md sources (gh#openSUSE/wicked#1018)\n  - client: warn on interface wait time reached (gh#openSUSE/wicked#1017)\n  - compat-suse: fix dummy type detection from ifname to not cause\n    conflicts with e.g. correct vlan config on dummy0.42 interfaces\n    (gh#openSUSE/wicked#1016)\n  - compat-suse: fix infiniband and infiniband child type detection\n    from ifname (gh#openSUSE/wicked#1015)\n- Removed patches included in the source archive:\n  [- 0001-ifreload-pull-UP-again-on-master-lower-changes-bsc1224100.patch]\n  [- 0002-increase-arp-retry-attempts-on-sending-bsc1218668.patch]\n\nPackage python3 was updated:\n\n- Add CVE-2024-7592-quad-complex-cookies.patch (bsc#1229596,  CVE-2024-7592), which fixes quadratic complexity in parsing\n  \u0026quot;-quoted cookie values with backslashes by http.cookies.\n\n- Add CVE-2024-6232-ReDOS-backtrack-tarfile.patch prevent\n  ReDos via excessive backtracking while parsing header values\n  (bsc#1230227, CVE-2024-6232).\n\n- Add bpo27240-rewrite_email_hdr_fold.patch rewriting the email\n  header folding algorithm to make the codebase compatible with\n  Python 3.6.4+, so we can continue to maintain it.\n- And even before that we have to add\n  bpo24211-RFC6532-supp-email.patch.\n- Also bpo20098-email-mangle_from-policy.patch.\n- Add finally, CVE-2024-6923-email-hdr-inject.patch to prevent\n  email header injection due to unquoted newlines (bsc#1228780,\n  CVE-2024-6923).\n\n- Add CVE-2024-4032-private-IP-addrs.patch to fix bsc#1226448\n  (CVE-2024-4032) rearranging definition of private v global IP\n  addresses.\n\n- Stop using %%defattr, it seems to be breaking proper executable\n  attributes on /usr/bin/ scripts (bsc#1227378).\n\nPackage ipvsadm was updated:\n\n- fixed systemd service file to restore correct config file at  start (/etc/ipvsadm.rules) and do not break boot-time config\n  at stop (bsc#1013581).\n\nPackage python36 was updated:\n\n- Add CVE-2024-6232-ReDOS-backtrack-tarfile.patch prevent  ReDos via excessive backtracking while parsing header values\n  (bsc#1230227, CVE-2024-6232).\n\n- Add CVE-2024-5642-switch-off-NPN.patch switching off the NPN\n  support eliminating bsc#1227233 (CVE-2024-5642).\n\n- Add CVE-2024-6923-email-hdr-inject.patch to prevent email\n  header injection due to unquoted newlines (bsc#1228780,\n  CVE-2024-6923).\n- Add CVE-2024-7592-quad-complex-cookies.patch fixing quadratic\n  complexity in parsing cookies with backslashes (bsc#1229596,\n  CVE-2024-7592)\n- %{profileopt} variable is set according to the variable\n  %{do_profiling} (bsc#1227999)\n\n- Remove %suse_update_desktop_file macro as it is not useful any\n  more.\n\n- Stop using %%defattr, it seems to be breaking proper executable\n  attributes on /usr/bin/ scripts (bsc#1227378).\n\nPackage libpcap was updated:\n\n- Security fix: [bsc#1230034, CVE-2024-8006]  * libpcap: NULL pointer derefence in pcap_findalldevs_ex()\n  * Add libpcap-CVE-2024-8006.patch\n\n- Security fix: [bsc#1230020, CVE-2023-7256]\n  * libpcap: double free via addrinfo in sock_initaddress()\n  * Add libpcap-CVE-2023-7256.patch\n\nPackage resource-agents was updated:\n\n- resource-agents:azure-events-az retry handling (bsc#1226140)  Add upstream patch:\n    0001-azure-events-az-update-to-API-versions-add-retry-fun.patch\n\nPackage openssl-1_1 was updated:\n\n- Security fix: [bsc#1220262, CVE-2023-50782]  * Implicit rejection in PKCS#1 v1.5\n  * Add openssl-CVE-2023-50782.patch\n\n- Security fix: [bsc#1227138, CVE-2024-5535]\n  * SSL_select_next_proto buffer overread\n  * Add openssl-CVE-2024-5535.patch\n\nPackage ca-certificates-mozilla was updated:\n\n- Updated to 2.68 state of Mozilla SSL root CAs (bsc#1227525)  - Added: FIRMAPROFESIONAL CA ROOT-A WEB\n  - Distrust: GLOBALTRUST 2020\n\n- Updated to 2.66 state of Mozilla SSL root CAs (bsc#1220356)\n  Added:\n  - CommScope Public Trust ECC Root-01\n  - CommScope Public Trust ECC Root-02\n  - CommScope Public Trust RSA Root-01\n  - CommScope Public Trust RSA Root-02\n  - D-Trust SBR Root CA 1 2022\n  - D-Trust SBR Root CA 2 2022\n  - Telekom Security SMIME ECC Root 2021\n  - Telekom Security SMIME RSA Root 2023\n  - Telekom Security TLS ECC Root 2020\n  - Telekom Security TLS RSA Root 2023\n  - TrustAsia Global Root CA G3\n  - TrustAsia Global Root CA G4\n  Removed:\n  - Autoridad de Certificacion Firmaprofesional CIF A62634068\n  - Chambers of Commerce Root - 2008\n  - Global Chambersign Root - 2008\n  - Security Communication Root CA\n  - Symantec Class 1 Public Primary Certification Authority - G6\n  - Symantec Class 2 Public Primary Certification Authority - G6\n  - TrustCor ECA-1\n  - TrustCor RootCert CA-1\n  - TrustCor RootCert CA-2\n  - VeriSign Class 1 Public Primary Certification Authority - G3\n  - VeriSign Class 2 Public Primary Certification Authority - G3\n- remove-trustcor.patch: removed, now upstream\n- do a versioned obsoletes of \u0026quot;openssl-certs\u0026quot;.\n\nPackage cloud-regionsrv-client was updated:\n\n- Update to 10.3.4  + Modify the message when network access over a specific IP version does\n    not work. This is an informational message and should not look like\n    an error\n  + Inform the user that LTSS registration takes a little longer\n  + Add fix-for-sles12-no-trans_update.patch\n    + SLE 12 family has no products with transactional-update we do not\n    need to look for this condition\n- From 10.3.3 (bsc#1229472)\n  + Handle changes in process structure to properly identify the running\n    zypper parent process and only check for 1 PID\n- From 10.3.2\n  + Remove rgnsrv-clnt-fix-docker-setup.patch included upstream\n- From 10.3.1 (jsc#PCT-400)\n  + Add support for LTSS registration\n  + Add fix-for-sles12-disable-registry.patch\n    ~ No container support in SLE 12\n\n- Add rgnsrv-clnt-fix-docker-setup.patch (bsc#1229137)\n  + The entry for the update infrastructure registry mirror was written\n    incorrectly causing docker daemon startup to fail.\n\n- Update to version 10.3.0 (bsc#1227308, bsc#1222985)\n  + Add support for sidecar registry\n    Podman and rootless Docker support to set up the necessary\n    configuration for the container engines to run as defined\n  + Add running command as root through sudoers file\n\n- Update to version 10.2.0 (bsc#1223571, bsc#1224014, bsc#1224016)\n  + In addition to logging, write message to stderr when registration fails\n  + Detect transactional-update system with read only setup and use\n    the transactional-update command to register\n  + Handle operation in a different target root directory for credentials\n    checking\n\nPackage fence-agents was updated:\n\n- Azure native fencing does not start due to Python version (SLE 12 SP5)  (jsc#PED-9921)\n  Put fence_azure_arm into a separate package to be able to provide\n  the own requirements.\n  o Add upstream patch:\n    0001-fence_azure_arm-add-stack-cloud-support.patch\n\n- Azure - Fence agent stopped working after installing python-azure-core-1.23.1-2.12.8 -\n  Error: Azure Resource Manager Python SDK not found or not accessible - SFSC 01532079 - ref:_00D1igLOd._500TrCLmyq:ref\n  (bsc#1226671)\n  - Apply modified upstream patch\n    0001-fence_azure_arm-fix-get-virtual-machines-call.patch\n\nPackage pam was updated:\n\n- Prevent cursor escape from the login prompt [bsc#1194818]  * Added: pam-bsc1194818-cursor-escape.patch\n\nPackage python3-base was updated:\n\n- Add CVE-2024-7592-quad-complex-cookies.patch (bsc#1229596,  CVE-2024-7592), which fixes quadratic complexity in parsing\n  \u0026quot;-quoted cookie values with backslashes by http.cookies.\n\n- Add CVE-2024-6232-ReDOS-backtrack-tarfile.patch prevent\n  ReDos via excessive backtracking while parsing header values\n  (bsc#1230227, CVE-2024-6232).\n\n- Add bpo27240-rewrite_email_hdr_fold.patch rewriting the email\n  header folding algorithm to make the codebase compatible with\n  Python 3.6.4+, so we can continue to maintain it.\n- And even before that we have to add\n  bpo24211-RFC6532-supp-email.patch.\n- Also bpo20098-email-mangle_from-policy.patch.\n- Add finally, CVE-2024-6923-email-hdr-inject.patch to prevent\n  email header injection due to unquoted newlines (bsc#1228780,\n  CVE-2024-6923).\n\n- Add CVE-2024-4032-private-IP-addrs.patch to fix bsc#1226448\n  (CVE-2024-4032) rearranging definition of private v global IP\n  addresses.\n\n- Stop using %%defattr, it seems to be breaking proper executable\n  attributes on /usr/bin/ scripts (bsc#1227378).\n\nPackage grep was updated:\n\n- port-recent-fix-to-older-pcre-version.patch: Don't assume that  a pcre_exec that returns PCRE_ERROR_NOMATCH leaves its sub\n  argument alone. (bsc#1227099)\n\nPackage bind was updated:\n\n- Security Fixes:  * It is possible to craft excessively large numbers of resource\n    record types for a given owner name, which has the effect of\n    slowing down database processing. This has been addressed by\n    only allowing a maximum of 100 records to be stored per name\n    and type in a cache or zone database.\n    (CVE-2024-1737)\n    [bsc#1228256, bind-9.11-CVE-2024-1737.patch]\n  * Validating DNS messages signed using the SIG(0) protocol (RFC\n    2931) could cause excessive CPU load, leading to a\n    denial-of-service condition. Support for SIG(0) message\n    validation was removed from this version of named.\n    (CVE-2024-1975)\n    [bsc#1228257, bind-9.11-CVE-2024-1975.patch]\n\nPackage shadow was updated:\n\n- bsc#916845 (CVE-2013-4235): Fix TOCTOU race condition  Update shadow-CVE-2013-4235.patch to be more complete\n\nPackage Mesa-drivers was updated:\n\n- u_mesa-CVE-2023-45913.patch  * NULL pointer dereference via dri2GetGlxDrawableFromXDrawableId()\n    (CVE-2023-45913, bsc#1222040)\n- u_mesa-CVE-2023-45919.patch\n  * buffer over-read in glXQueryServerString()\n    (CVE-2023-45919, bsc#1222041)\n- u_mesa-CVE-2023-45922.patch\n  * segmentation violation in __glXGetDrawableAttribute()\n    (CVE-2023-45922, bsc#1222042)\n\nPackage openssl-1_0_0 was updated:\n\n- Pull libopenssl-1_0_0 when updating openssl-1_0_0 with the same  version. [bsc#1228291]\n\n- Security fix: [bsc#1227138, bsc#1227227, CVE-2024-5535]\n  * SSL_select_next_proto buffer overread\n  * Add openssl-CVE-2024-5535.patch\n\nPackage suseconnect-ng was updated:\n\n- Update version to 1.12:  - Set the filesystem root on zypper when given (bsc#1230229,bsc#1229014)\n\n- Update version to 1.11\n  - Added uname as collector\n  - Added SAP workload detection\n  - Added detection of container runtimes\n  - Multiple fixes on ARM64 detection\n  - Use `read_values` for the CPU collector on Z\n  - Fixed data collection for ppc64le\n  - Grab the home directory from /etc/passwd if needed (bsc#1226128)\n\n- Update version to 1.10.0\n  * Build zypper-migration and zypper-packages-search as standalone\n    binaries rather then one single binary\n  * Add --gpg-auto-import-keys flag before action in zypper command (bsc#1219004)\n  * Include /etc/products.d in directories whose content are backed\n    up and restored if a zypper-migration rollback happens. (bsc#1219004)\n  * Add the ability to upload the system uptime logs, produced by the\n    suse-uptime-tracker daemon, to SCC/RMT as part of keepalive report.\n    (jsc#PED-7982) (jsc#PED-8018)\n  * Add support for third party packages in SUSEConnect\n  * Refactor existing system information collection implementation\n\nPackage apparmor was updated:\n\n- Add apparmor-fix-ping6-denied.patch to allow ping to use  IPv6 RAW sockets ( bsc#1230541 ).\n\nPackage OpenIPMI was updated:\n\n- Fix bsc#1229910 CVE-2024-42934 by below 2 patches:  A lanserv-Check-some-bounds-on-incoming-messages.patch\n  A lanserv-Fix-an-issue-with-authorization-range-checking.patch\n\nPackage glib2 was updated:\n\n- Add glib2-gdbusmessage-cache-arg0.patch: cache the arg0 value in  a dbus message. Fixes a possible use after free (boo#1224044).\n\nPackage release-notes-sles was updated:\n\n- 12.5.20241014 (tracked in bsc#933411)- Added note about openSSH 8.4 (bsc#1222298)\n- Added note about unsupported hibernate/suspend on Xen (bsc#1214405)\n- Added note about chrony 4.1 (jsc#SLE-22248)\n- Added note about adcli --dont-expire-password (jsc#SLE-21223)\n- Added note about sudo -U -l restriction (jsc#SLE-22569)\n- Added note about nodejs16 addition (jsc#SLE-21234)\n- Added note about rsyslog 8.2106 (jsc#SLE-21522)\n- Added note about tcl 8.6.12 (jsc#SLE-21015)\n- Added note about sudo 1.8.27 update (jsc#SLE-17083)\n- Added note about unsupported modules (jsc#PED-8089)\n\nPackage ksh was updated:\n\n- do not use posix_spawn as it lacks proper job handling [bsc#1224057]  new patch: ksh93-no-posix_spawn.dif\n- fix segfault in variable substitution [bsc#1129288]\n  new patch: ksh93-putval.dif\n- fix untrusted environment execution [bsc#1160796] [CVE-2019-14868]\n  new patch: ksh93-untrustedenv.dif\n\nPackage util-linux was updated:\n\n- agetty: Prevent login cursor escape (bsc#1194818,  util-linux-agetty-prevent-cursor-escape.patch).\n\n- Don't delete binaries not common for all architectures. Create an\n  util-linux-extra subpackage instead, so users of third party\n  tools can use them. (bsc#1222285)\n\nPackage google-cloud-sap-agent was updated:\n\n- Update to version 3.5 (bsc#1229668, bsc#1229669)  * Add instance properties to all components based on instance role.\n  * Refactor OTEs hanadiskbackup and supportbundle to enable different\n    execution params for internal and user invocations - 2/n.\n  * Backport the configureinstance increased timeout to 3.4 and 3.3\n  * Perform general X4 configurations first, then OS specific\n  * Log the copy error only to log file and not to console\n  * Add unit test to cover `gce.New` in systemdiscovery.\n  * Adding IFNULL to log backup queries\n  * Add HANA Compute Resources Report to performancediagnostics bundle.\n  * Add mutex for backint event annotation logging\n  * Only wait for shutdown in the initial start routine. Continue on during restarts.\n  * Update backint log message for event annotations\n  * Create HANA compute metrics report to add it to performancediagnostics.\n  * Correct SAP System proto merging.\n  * Change SAP_BACKINT_FILE_TRANSFER invocation\n  * Adding proto for instance metadata OTE for wlm service\n  * Report host maintenance events to Cloud Monitoring as part of ProcessMetrics\n    data collection. Collection is done by querying the local metadata server.\n    https://cloud.google.com/compute/docs/instances/host-maintenance-overview\n  * Remove flaky unit test for canceled context in performancediagnostics.\n  * Update startdaemon so LogRunningDaily and waitForShutdown\n    behave as expected during configuration restarts.\n  * Improve detection of Netweaver role to include SID check for multi-instance nodes.\n  * App servers are no longer responsible for reporting DB scale type\n  * Refactor computeresources to collect time-series disk\n    IOPS usage metrics for performancediagnostics.\n  * Fix typo in service_linux.go\n  * Add SAP Workload Actions for start, stop, snooze.\n  * Refactor OTEs hanadiskbackup and supportbundle to enable different\n    execution params for internal and user invocations.\n  * Add usage metrics for guest actions\n  * Refactor computeresources to collect time-series\n    Memory usage metrics for performancediagnostics.\n  * Refactor DB node discovery to use sapcontrol.\n  * Restart daemon services when a guest action requires a restart.\n  * Add WLM metrics for HANA delta and snapshot backups.\n  * Add retry options for parallel restore.\n  * Internal Change.\n  * Add support for \u0026quot;UTCNow\u0026quot; as a value for the custom_time field in the Backint\n    configuration. This will set the customTime metadata entry to the current time\n    in UTC.\n  * Configureinstance don't fail process if backup file failed\n  * Add validation for HANA database metrics configuration.\n  * Add queries for disk read/write time\n  * Refactor computeresources to collect time-series CPU\n    usage metrics for performancediagnostics.\n  * Introducing sleep to let symlinks for the new disk to be created.\n  * Add new metrics to default queries for HANAMonitoring\n  * Fix HANA HA availability and replication metrics for error scenarios.\n  * Add combinations of roles to InstanceRole enum.\n  * Add condition to throw error when compression is used along with:\n  * Adds a \u0026quot;service\u0026quot; OTE to enable and disable the systemd service\n  * Guest actions support for backint OTE\n  * Add explicit formatting to Backint logs with rounding.\n  * Balanceirq updates.\n  * Add usage metric for Backint recovery parameter enabled\n  * Add metric events for SAP service metrics.\n  * Making the next to last section of usage metrics generic\n  * Guest action handler for gcbdr-backup operations\n  * Properly merge Workload properties in SAP System details.\n  * Fix a log message format in configuration.go file.\n  * Add logpurge support in gcbdr-backup OTE\n  * Merge instance properties when merging discovered SAP apps\n  * Add additional test cases to guest actions integration test\n  * Adding package, os processes and systemd services information to support bundle\n  * Ensure instance numbers are a 2-digit zero-padded number\n  * Add logbackup handler in gcbdr-backup OTE\n  * Increase timeout for configureinstance saptune commands to 300 seconds.\n  * Fix context cancellation in process metrics\n  * Update systemd setting to allow access to /etc configurations via guest actions\n  * Execute freeze script in gcbdr-backup OTE via sidAdm\n  * Add support for unfreeze operation in gcbdr-backup\n  * Bump SAP Agent version to 3.5\n  * Fix metrics and database discovery for NW Java systems\n  * Expand regex for SAP Services identification to handle other possibilities.\n  * Add Metric Event Logging for remaining metrics\n  * Remove doc comment about usagemetrics Error statuses being reported once per day.\n  * Add checks in onetime to prevent log-path from being a directory.\n  * Update config logic and disable WLM for systemdiscovery OTE.\n  * Changes to permissions for Agent's log dir and log-path overrides for OTE\n  * Check for execute permission for /usr/sap directory before discovering SAP applications.\n  * Add `context.cancelFunc()` to exit in case of any error while reading.\n  * Fetch HANA processes in performance diagnostics computeData through computeresources package.\n  * Add support for freeze operation in gcbdr-backup\n  * Fix logging in netweaver collector\n  * Ordering the subcommands in ascending Name order for help,\n    added an additional newline after the version print\n  * metricevents - Make AddEvent thread safe and add event logging for metrics\n  * Integrate SystemDiscovery OTE into PerformanceDiagnostics OTE.\n  * Initialize GCBDR-Backup OTE to execute prepare script\n  * Add Usagemetrics for hdbuserstore key usage\n  * Minor log change in backint\n  * Add log to Backint for querying for file transfers.\n  * Expand HANA replication configuration reading functionality.\n  * Shorten Backint dashboard scorecard titles.\n  * Add /etc/google-cloud-sap-agent to ReadWritePaths\n  * Updates to uap backoff parameters\n  * Add metricevents to track state changes of specific metrics.\n  * Add guest action support for configure instance\n  * Fix error handling in fillWorkerBuffer() and add encryption support for parallel restore.\n  * Add a new configuration parameter `parallel_recovery_streams` to enable parallel restore.\n  * Add guest actions support for gcbdr-discovery\n  * Initialize Discovery object in SystemDiscovery OTE handler.\n\nPackage pacemaker was updated:\n\n- tools: CIB clients retry signon upon an EAGAIN error (gh#ClusterLabs/pacemaker#3567, bsc#1224183)  * bsc#1224183-0002-Fix-tools-CIB-clients-retry-signon-upon-an-EAGAIN-er.patch\n- libcib: new function cib__signon_attempts() (gh#ClusterLabs/pacemaker#3567, bsc#1224183)\n  * bsc#1224183-0001-Refactor-libcib-new-function-cib__signon_attempts.patch\n\n- libstonithd: prevent to free 'op_reply' repeatedly in 'stonith_send_command' (gh#ClusterLabs/pacemaker#3517)\n  * pacemaker#3517-0001-prevent-to-free-op_reply-repeatedly-in-stonith_send_.patch\n\n- tools: make crm_mon exit upon loss of the attached pseudo-terminal (bsc#1220229, gh#ClusterLabs/pacemaker#3430)\n  * bsc#1220229-0001-Fix-tools-make-crm_mon-exit-upon-loss-of-the-attache.patch\n\n- libcib: Don't incorrectly expand \u0026quot;++\u0026quot; and \u0026quot;+=\u0026quot; in XML attr values (gh#ClusterLabs/pacemaker#3413)\n  * pacemaker#3413-0003-Fix-libcib-Don-t-incorrectly-expand-and-in-XML-attr-.patch\n- libpacemaker: pcmk__inject_failcount should set an integer value (gh#ClusterLabs/pacemaker#3413)\n  * pacemaker#3413-0001-Low-libpacemaker-pcmk__inject_failcount-should-set-a.patch\n- scheduler: log unknown nodes in location constraints (gh#ClusterLabs/pacemaker#3409, CLBZ#5415)\n  * pacemaker#3409-0007-Log-scheduler-log-unknown-nodes-in-location-constrai.patch\n- scheduler: correct lifetime deprecation warning (gh#ClusterLabs/pacemaker#3409)\n  * pacemaker#3409-0006-Log-scheduler-correct-lifetime-deprecation-warning.patch\n- scheduler: deprecate support for default instance attributes (gh#ClusterLabs/pacemaker#3409)\n  * pacemaker#3409-0004-Low-scheduler-deprecate-support-for-default-instance.patch\n- scheduler: use default timeout (20s) if user configures 0 (gh#ClusterLabs/pacemaker#3409)\n  * pacemaker#3409-0003-Fix-scheduler-use-default-timeout-20s-if-user-config.patch\n- tools: crm_resource should ignore resource meta-attribute node expressions (gh#ClusterLabs/pacemaker#3409)\n  * pacemaker#3409-0001-Fix-tools-crm_resource-should-ignore-resource-meta-a.patch\n\n- fencer: always format time_t values as long long (gh#ClusterLabs/pacemaker#3407)\n  * pacemaker#3407-0001-Log-fencer-always-format-time_t-values-as-long-long.patch\n\n- libpacemaker: Correctly free graphs and synapses (gh#ClusterLabs/pacemaker#3394)\n  * pacemaker#3394-0002-Low-libpacemaker-Correctly-free-graphs-and-synapses.patch\n- libcrmcommon: Initialize some variables (gh#ClusterLabs/pacemaker#3394)\n  * pacemaker#3394-0001-Low-libcrmcommon-Initialize-some-variables.patch\n- HealthSMART:fix the description of temp_lower_limit (gh#ClusterLabs/pacemaker#3392)\n  * pacemaker#3392-0001-Doc-HealthSMART-fix-the-description-of-temp_lower_li.patch\n\n- cibsecret: Use 'ps axww' to avoid truncating issue (gh#ClusterLabs/pacemaker#3384)\n  * pacemaker#3384-0001-Fix-cibsecret-Use-ps-axww-to-avoid-truncating-issue.patch\n\n- libcrmcommon: Don't try to parse XML from bad .bz2 file (gh#ClusterLabs/pacemaker#3361)\n  * pacemaker#3361-0001-Low-libcrmcommon-Don-t-try-to-parse-XML-from-bad-.bz.patch\n\n- libcrmcommon: use uint32_t for 32-bit magic numbers (gh#ClusterLabs/pacemaker#3381)\n  * pacemaker#3381-0001-Fix-libcrmcommon-use-uint32_t-for-32-bit-magic-numbe.patch\n\n- tools: Fix argument validation for crm_attribute update. (gh#ClusterLabs/pacemaker#3379)\n  * pacemaker#3379-0001-Low-tools-Fix-argument-validation-for-crm_attribute-.patch\n\n- attrd: write Pacemaker Remote node attributes even if not in cache (gh#ClusterLabs/pacemaker#3304)\n  * pacemaker#3304-0001-Fix-attrd-write-Pacemaker-Remote-node-attributes-eve.patch\n- agents: Use attrd_updater dampen delay in SysInfo (gh#ClusterLabs/pacemaker#3286)\n  * pacemaker#3286-0002-Fix-agents-Use-attrd_updater-dampen-delay-in-SysInfo.patch\n- libcrmcommon: Check correct env vars in pcmk__node_attr_target() (gh#ClusterLabs/pacemaker#3286)\n  * pacemaker#3286-0001-Low-libcrmcommon-Check-correct-env-vars-in-pcmk__nod.patch\n\n- scheduler: restore nvpair behavior without id-ref (gh#ClusterLabs/pacemaker#3292)\n  * pacemaker#3292-0004-Low-scheduler-restore-nvpair-behavior-without-id-ref.patch\n- libcrmcommon: fix NULL dereference in expand_idref() (gh#ClusterLabs/pacemaker#3292)\n  * pacemaker#3292-0002-Low-libcrmcommon-fix-NULL-dereference-in-expand_idre.patch\n- scheduler: improve logs for invalid id-ref's (gh#ClusterLabs/pacemaker#3292)\n  * pacemaker#3292-0001-Log-scheduler-improve-logs-for-invalid-id-ref-s.patch\n- pacemaker-attrd,libcrmcluster: avoid use-after-free when remote node in cluster node cache (gh#ClusterLabs/pacemaker#3293)\n  * pacemaker#3293-0002-Fix-pacemaker-attrd-libcrmcluster-avoid-use-after-fr.patch\n- libcrmcluster: avoid use-after-free in trace log (gh#ClusterLabs/pacemaker#3293)\n  * pacemaker#3293-0001-Low-libcrmcluster-avoid-use-after-free-in-trace-log.patch\n- HealthSmart: Check the parameter values of check_temperature to avoid error output (gh#ClusterLabs/pacemaker#3289)\n  * pacemaker#3289-0001-Fix-HealthSmart-Check-the-parameter-values-of-check_.patch\n\n- agents: handle dampening parameter consistently and correctly\n  * 0001-Fix-agents-handle-dampening-parameter-consistently-a.patch\n\n- crm_resource: make --wait wait for pending actions in CIB\n  * 0001-Refactor-crm_resource-make-wait-wait-for-pending-act.patch\n\n- agents: HealthCPU - fix the validation of input\n  * 0001-fix-the-validation-of-input.patch\n\nPackage tiff was updated:\n\n- security update:  * CVE-2024-7006 [bsc#1228924]\n    Fix pointer deref in tif_dirinfo.c\n    + tiff-CVE-2024-7006.patch\n\nPackage util-linux-systemd was updated:\n\n- agetty: Prevent login cursor escape (bsc#1194818,  util-linux-agetty-prevent-cursor-escape.patch).\n\n- Don't delete binaries not common for all architectures. Create an\n  util-linux-extra subpackage instead, so users of third party\n  tools can use them. (bsc#1222285)\n\n- fix Xen virtualization type misidentification bsc#1215918\n  lscpu-fix-parameter-order-for-ul_prefix_fopen.patch\n\nPackage grub2 was updated:\n\n- Fix btrfs subvolume for platform modules not mounting at runtime when the  default subvolume is the topmost root tree (bsc#1228124)\n  * grub2-btrfs-06-subvol-mount.patch\n- Rediff\n  * 0001-Unify-the-check-to-enable-btrfs-relative-path.patch\n\n- Fix error in grub-install when linux root device is on lvm thin volume\n  (bsc#1192622) (bsc#1191974)\n- Fix error in grub-install when root is on tmpfs (bsc#1226100)\n  * 0001-grub-install-bailout-root-device-probing.patch\n\nPackage suse-build-key was updated:\n\n- extended 2048 bit SUSE SLE 12, 15 GA-SP5 key until 2028. (bsc#1229339)  - gpg-pubkey-39db7c82-5f68629b.asc\n  + gpg-pubkey-39db7c82-66c5d91a.asc\n\nPackage python-requests was updated:\n\n- Update CVE-2024-35195.patch to allow the usage of \u0026quot;verify\u0026quot; parameter  as a directory, bsc#1225912\n\nPackage python-setuptools was updated:\n\n- Add patch CVE-2024-6345-code-execution-via-download-funcs.patch:  * Sanitize any VCS URL we download. (CVE-2024-6345, bsc#1228105)\n\nPackage libqb was updated:\n\n- ipc: Retry receiving credentials if the the message is short (gh#ClusterLabs/libqb#476, rh#2111711, bsc#1224183)  * bsc#1224183-0001-ipc-Retry-receiving-credentials-if-the-the-message-i.patch\n\nPackage expat was updated:\n\n- Security fix (bsc#1229932, CVE-2024-45492): detect integer  overflow in function nextScaffoldPart\n  * Added expat-CVE-2024-45492.patch\n- Security fix (bsc#1229931, CVE-2024-45491): detect integer\n  overflow in dtdCopy\n  * Added expat-CVE-2024-45491.patch\n- Security fix (bsc#1229930, CVE-2024-45490): reject negative\n  len for XML_ParseBuffer\n  * Added expat-CVE-2024-45490.patch\n\n- Security fix (bsc#1221563, bsc#1219559, CVE-2023-52425):\n  * expat-CVE-2023-52425-1.patch: [PATCH] Grow buffer based on\n    current size\n  * expat-CVE-2023-52425-2.patch:\n  * expat-CVE-2023-52425-backport-parser-changes.patch:\n    CVE-2023-52425 Additional parser fixes\n  * expat-CVE-2023-52425-fix-tests.patch: CVE-2023-52425 Tests and\n    Test suite fixes\n\nPackage python-urllib3 was updated:\n\nPackage xfsprogs was updated:\n\n- libfrog: fix missing error checking in workqueue code (bsc#1227232)  - add xfsprogs-libfrog-fix-missing-error-checking-in-workqueue-code.patch\n\n- xfs_repair: ignore empty xattr leaf blocks (bsc#1227911)\n  - add xfsprogs-xfs_repair-ignore-empty-xattr-leaf-blocks.patch\n\n- mkfs: terminate getsubopt arrays properly (bsc#1228270)\n  - add xfsprogs-mkfs-terminate-getsubopt-arrays-properly.patch\n\n- xfs_copy: bail out early when superblock cannot be verified\n  (bsc#1227150)\n  - fix return value of error code, which is expected to be negative\n\nPackage python-pyOpenSSL was updated:\n\n- Fix for bsc#1231700:  * 0001-Don-t-use-things-after-they-re-freed.duh-709.patch: Add\n    missing patch that introduced X509._from_raw_x509_ptr needed by\n    CVE-2018-1000807 fix.\n  gh#pyca/pyopenssl@4aa52c33d3ee\n\nPackage regionServiceClientConfigGCE was updated:\n\n- Version 4.2.0 (jsc#PCT-361)  + Add IPv6 certs to supprt access of the update infrastructure via\n    IPv6 on GCE instances.\n\nPackage mozilla-nss was updated:\n\n- Updated nss-fips-approved-crypto-non-ec.patch to enforce  approved curves with the CKK_EC_MONTGOMERY key type (bsc#1224113).\n\n- Require `sed` for mozilla-nss-sysinit, as setup-nsssysinit.sh\n  depends on it and will create a broken, empty config, if sed is\n  missing (bsc#1227918)\n\n- update to NSS 3.101.2\n  * bmo#1905691 - ChaChaXor to return after the function\n\nPackage kernel-default was updated:\n\n- Revert \u0026quot;Merge branch 'users/dwagner/SLE12-SP5/for-next' into SLE12-SP5\u0026quot;  This reverts commit aa4c39a920ecb484add5aa1733bbaa0fb81c7d46, reversing\n  changes made to 4527634da2625f9c0c83176368afe9fe8acb3ffc.\n  - --\n  Following breaks kABI:\n  commit 72d636029eff5515a118fd98f44689c4421a836e\n  Author: Daniel Wagner \u0026lt;dwagner@suse.de\u0026gt;\n  Date:   Mon Sep 30 15:48:52 2024 +0200\n  kabi: ignore all nvme kabi breakages\n  Streamline sle12sp5 with the other code stream where we ignore\n  all symbol changes inside the nvme subsystem.\n  Delete:\n  - patches.kabi/kabi-Fix-nvme-fabrics_q.patch\n  - patches.kabi/kabi-Fix-nvmet-error-log-definitions.patch\n  - patches.kabi/kabi-nvme-fix-fast_io_fail_tmo.patch\n  - --\n  As designed the path match does not match symbols exported from vmlinux\n  (built-in), those have to be listed explicitly.\n  Listing the offending symbols should make this change work. It's\n  possible that more of the nvme support is modular on later kernels or\n  the kABI brekage is not as widespread compared to 4.12.\n  - ---\n- commit 5f0ddca\n\n- net: dpaa: Pad packets to ETH_ZLEN (CVE-2024-46854 bsc#1231084).\n- ice: Add netif_device_attach/detach into PF reset flow\n  (CVE-2024-46770 bsc#1230763).\n- net: core: Specify skb_pad()/skb_put_padto() SKB freeing\n  (CVE-2024-46854 bsc#1231084).\n- commit 8314902\n\n- usbnet: fix cyclical race on disconnect with work queue\n  (git-fixes).\n- Refresh\n  patches.kabi/move-new-members-of-struct-usbnet-to-end.patch.\n- Refresh\n  patches.suse/0002-Add-a-void-suse_kabi_padding-placeholder-to-some-USB.patch.\n- commit d5af998\n\n- blacklist.conf: powerpc/imc-pmu fixes not applicable to 4.12\n- commit aaf94f3\n\n- powerpc/imc-pmu: Revert nest_init_lock to being a mutex\n  (bsc#1065729).\n- commit 9d9f624\n\n- powerpc/xmon: Fix disassembly CPU feature checks (bsc#1065729).\n- powerpc/pseries: fix possible memory leak in ibmebus_bus_init()\n  (bsc#1065729).\n- powerpc/imc-pmu: Fix use of mutex in IRQs disabled section\n  (bsc#1054914 fate#322448 git-fixes).\n- powerpc/iommu: Annotate nested lock for lockdep (bsc#1065729).\n- commit 1b7c467\n\n- Fix bsc#1054914 reference.\n- commit 4b9db88\n\n- nvme: avoid double free special payload (bsc#1228635\n  CVE-2024-41073).\n- commit 837f90a\n\n- ceph: remove the incorrect Fw reference check when dirtying\n  pages (bsc#1231184).\n- commit 4527634\n\n- nvmet: always initialize cqe.result (bsc#1228615\n  CVE-2024-41079).\n- commit 3bc4bb2\n\n- kabi/severities: Ignore ppc instruction emulation (bsc#1230826 ltc#205848)\n  These are lowlevel functions not used outside of exception handling and\n  kernel debugging facilities.\n- commit abc513a\n\n- platform/x86: panasonic-laptop: Fix SINF array out of bounds\n  accesses (CVE-2024-46859 bsc#1231089).\n- commit 59d5c89\n\n- spi: nxp-fspi: fix the KASAN report out-of-bounds bug\n  (CVE-2024-46853 bsc#1231083).\n- commit bb10262\n\n- media: vivid: fix compose size exceed boundary (CVE-2022-48945\n  bsc#1230398).\n- commit 9b78931\n\n- kthread: Fix task state in kthread worker if being frozen\n  (bsc#1231146).\n- commit acf39f7\n\n- kabi: ignore all nvme kabi breakages\n  Streamline sle12sp5 with the other code stream where we ignore\n  all symbol changes inside the nvme subsystem.\n  Delete:\n  - patches.kabi/kabi-Fix-nvme-fabrics_q.patch\n  - patches.kabi/kabi-Fix-nvmet-error-log-definitions.patch\n  - patches.kabi/kabi-nvme-fix-fast_io_fail_tmo.patch\n- commit 72d6360\n\n- nvme-fabrics: use reserved tag for reg read/write command\n  (bsc#1228620 CVE-2024-41082).\n- nvme: change __nvme_submit_sync_cmd() calling conventions\n  (bsc#1228620 CVE-2024-41082).\n- nvme: remove unused timeout parameter (bsc#1228620\n  CVE-2024-41082).\n- nvme: split nvme_alloc_request() (bsc#1228620 CVE-2024-41082).\n  Refresh:\n  - patches.suse/lightnvm-remove-lightnvm-implemenation.patch\n- nvme: centralize setting the timeout in nvme_alloc_request\n  (bsc#1228620 CVE-2024-41082).\n  Refresh:\n  - patches.suse/lightnvm-remove-lightnvm-implemenation.patch\n- commit 9d0eaf2\n\n- tracing: Avoid possible softlockup in tracing_iter_reset()\n  (git-fixes).\n- commit 6f4c555\n\n- arm64: acpi: Harden get_cpu_for_acpi_id() against missing CPU entry (bsc#1231120 CVE-2024-46822)\n- commit cd9816b\n\n- arm64: acpi: Move get_cpu_for_acpi_id() to a header (bsc#1231120 CVE-2024-46822)\n- commit 0c95f6d\n\n- tracing: Fix overflow in get_free_elt() (git-fixes\n  CVE-2024-43890 bsc#1229764).\n- commit 2519a16\n\n- drm/amd/pm: fix the Out-of-bounds read warning (bsc#1230709 CVE-2024-46731)\n- commit 1b11b68\n\n- af_unix: Fix data races around sk-\u0026gt;sk_shutdown (bsc#1226846).\n- af_unix: annotate lockless accesses to sk-\u0026gt;sk_err (bsc#1226846).\n- commit 7b2aa7b\n\n- blacklist.conf: CVE-2024-46773 bsc#1230791: not applicable\n  Functionality not present.\n- commit 408499b\n\n- blacklist.conf: CVE-2024-46772 bsc#1230772: not applicable, code does not exist\n- commit 82ea9e2\n\n- blacklist.conf: CVE-2024-46778 bsc#1230776: not applicable, code does not exist\n- commit f2eab46\n\n- blacklist.conf: CVE-2024-46720 bsc#1230724: not applicable\n  Fix to functionality that's not present in this code (hive, recovery).\n- commit a674b96\n\n- blacklist.conf: CVE-2024-46727 bsc#1230707: not applicable, code does not exist\n- commit c18f303\n\n- drm/amdgpu: fix mc_data out-of-bounds read warning (CVE-2024-46722 bsc#1230712)\n- commit 7ff2284\n\n- blacklist.conf: CVE-2024-46714 bsc#1230699: not applicable, code does not exist\n- commit 2a9e21b\n\n- Update\n  patches.suse/fuse-Initialize-beyond-EOF-page-contents-before-setti.patch\n  (bsc#1229457 CVE-2024-44947 bsc#1229456).\n- Update\n  patches.suse/msft-hv-3046-uio_hv_generic-Fix-kernel-NULL-pointer-dereference-i.patch\n  (git-fixes CVE-2024-46739 bsc#1230732).\n- Update\n  patches.suse/msft-hv-3048-net-mana-Fix-error-handling-in-mana_create_txq-rxq-s.patch\n  (git-fixes CVE-2024-46784 bsc#1230771).\n- Update\n  patches.suse/nvmet-tcp-fix-kernel-crash-if-commands-allocation-fa.patch\n  (git-fixes CVE-2024-46737 bsc#1230730).\n- Update\n  patches.suse/powerpc-rtas-Prevent-Spectre-v1-gadget-construction-.patch\n  (bsc#1227487 CVE-2024-46774 bsc#1230767).\n- commit ad5a546\n\n- userfaultfd: fix checks for huge PMDs (CVE-2024-46787\n  bsc#1230815).\n- commit a5d0a66\n\n- PCI: xilinx-nwl: Clean up clock on probe failure/removal\n  (git-fixes).\n- commit ace75db\n\n- blacklist.conf: add three PCI git-fixes\n- commit 0d7494c\n\n- kabi: add __nf_queue_get_refs() for kabi compliance\n  (bsc#1229633,CVE-2022-48911).\n- commit ffffe4c\n\n- netfilter: nf_queue: fix possible use-after-free (bsc#1229633,\n  CVE-2022-48911).\n- commit c9290c8\n\n- RDMA/cxgb4: Added NULL check for lookup_atid (git-fixes)\n- commit a4946ef\n\n- RDMA/iwcm: Fix WARNING:at_kernel/workqueue.c:#check_flush_dependency (git-fixes)\n- commit 4ef1336\n\n- RDMA/core: Remove unused declaration rdma_resolve_ip_route() (git-fixes)\n- commit 7580f3e\n\n- blacklist.conf: CVE-2024-44972 bsc#1230212: not applicable\n  Code does not exist (subpage + zoned mode).\n- commit 0ae4830\n\n- btrfs: handle errors from btrfs_dec_ref() properly (CVE-2024-46753 bsc#1230796)\n- commit ab888f1\n\n- Delete\n  patches.suse/cifs-fix-double-free-race-when-mount-fails-in-cifs_get_root-.patch.\n  This patch should have been only in kernel v5.11+, which is when\n  the double free issue was introduced.\n- commit 92bb491\n\n- pci/hotplug/pnv_php: Fix hotplug driver crash on Powernv (CVE-2024-46761 bsc#1230761)\n- commit 0c20c64\n\n- hwmon: (adc128d818) Fix underflows seen when writing limit attributes (CVE-2024-46759 bsc#1230814)\n- commit 8ed41b4\n\n- blacklist.conf: CVE-2024-46747 bsc#1230752: not applicable, code does not exist\n- commit b312e3b\n\n- Input: uinput - reject requests with unreasonable number of slots (CVE-2024-46745 bsc#1230748)\n- commit 9508651\n\n- blacklist.conf: CVE-2024-46746 bsc#1230751: not applicable, code does not exist\n- commit b83f97d\n\n- VMCI: Fix use-after-free when removing resource in vmci_resource_remove() (CVE-2024-46738 bsc#1230731)\n- commit 98e87d9\n\n- tcp_bpf: fix return value of tcp_bpf_sendmsg() (CVE-2024-46783 bsc#1230810)\n- commit f6705ba\n\n- Update references in patches.suse/nvmet-tcp-fix-kernel-crash-if-commands-allocation-fa.patch (CVE-2024-46737 bsc#1230730)\n- commit 91952f9\n\n- nvmet: Identify-Active Namespace ID List command should reject\n  invalid nsid (git-fixes).\n- nvmet-tcp: fix kernel crash if commands allocation fails\n  (git-fixes).\n- commit 07a5a05\n\n- drm/msm/dpu: cleanup FB if dpu_format_populate_layout fails (CVE-2024-44982 bsc#1230204).\n- commit 4f660ab\n\n- drm/amdgpu: fix ucode out-of-bounds read warning (bsc#1230702 CVE-2024-46723)\n- commit ff45869\n\n- Update\n  patches.suse/nfc-nci-Fix-uninit-value-in-nci_rx_work.patch\n  (git-fixes CVE-2024-38381 bsc#1226878).\n- Update\n  patches.suse/vfio-pci-fix-potential-memory-leak-in-vfio_intx_enab.patch\n  (git-fixes CVE-2024-38632 bsc#1226860).\n  Add CVE references.\n- commit bd6ac3f\n\n- PCI: Add missing bridge lock to pci_bus_lock() (CVE-2024-46750\n  bsc#1230783).\n- commit 6d64b3d\n\n- blacklist.conf: CVE-2021-47620 bsc#1226669: not applicable, code does not exist\n  The patch is moving an out-of-bound read, which was performed at the end of a\n  loop, to the beginning, to avoid filling journal with false positives.\n  Here we don't have the code, so there is nothing to move.\n- commit 979e3b3\n\n- blacklist.conf: CVE-2024-46717 bsc#1230719: not applicable\n- commit ad3c776\n\n- blacklist.conf: CVE-2024-40973 bsc#1227890: not applicable, code does not exist\n- commit b579e7a\n\n- Squashfs: sanity check symbolic link size (bsc#1230747 CVE-2024-46744)\n- commit 067cd70\n\n- ocfs2: fix possible null-ptr-deref in ocfs2_set_buffer_uptodate\n  (git-fixes).\n- commit 36cf250\n\n- ocfs2: remove unreasonable unlock in ocfs2_read_blocks\n  (git-fixes).\n- commit 13d7dfe\n\n- ocfs2: fix null-ptr-deref when journal load failed (git-fixes).\n- commit 4386caf\n\n- powerpc/ppc-opcode: Add divde and divdeu opcodes (bsc#1230826\n  ltc#205848).\n- powerpc/lib/sstep: Add XER bits introduced in POWER ISA v3.0\n  (bsc#1230826 ltc#205848).\n- commit 4de0867\n\n- of/irq: Prevent device address out-of-bounds read in interrupt\n  map walk (CVE-2024-46743 bsc#1230756).\n- commit 8403759\n\n- driver: iio: add missing checks on iio_info's callback access\n  (CVE-2024-46715 bsc#1230700).\n- commit f7336e3\n\n- pinctrl: single: fix potential NULL dereference in pcs_get_function() (CVE-2024-46685 bsc#1230515)\n- commit e892b22\n\n- blacklist.conf: CVE-2023-52766 bsc#1230620: no i3c code\n- commit cc0fba5\n\n- usb: dwc3: core: Prevent USB core invalid event buffer address access (CVE-2024-46675 bsc#1230533)\n- commit 9657973\n\n- thunderbolt: Mark XDomain as unplugged when router is removed (CVE-2024-46702 bsc#1230589)\n- commit 74749bb\n\n- smb/client: avoid dereferencing rdata=NULL in smb2_new_read_req() (CVE-2024-46686 bsc#1230517)\n- commit 9cca3e0\n\n- scsi: aacraid: Fix double-free on probe failure (CVE-2024-46673 bsc#1230506)\n- commit b132ff0\n\n- apparmor: fix possible NULL pointer dereference (CVE-2024-46721 bsc#1230710)\n- commit 2b27b0b\n\n- gtp: fix a potential NULL pointer dereference (CVE-2024-46677 bsc#1230549)\n- commit b3221e1\n\n- nfc: pn533: Add poll mod list filling check (CVE-2024-46676 bsc#1230535)\n- commit 0ff9f28\n\n- ethtool: check device is present when getting link settings (CVE-2024-46679 bsc#1230556).\n- commit 34a40a8\n\n- powerpc/sstep: Fix darn emulation (bsc#1230826 ltc#205848).\n- powerpc/sstep: Fix incorrect return from analyze_instr()\n  (bsc#1230826 ltc#205848).\n- commit be8f831\n\n- powerpc/lib/sstep: Fix 'sthcx' instruction (bsc#1230826\n  ltc#205848).\n- powerpc/lib/sstep: fix 'ptesync' build error (bsc#1230826\n  ltc#205848).\n- powerpc/sstep: Check instruction validity against ISA version\n  before emulation (bsc#1230826 ltc#205848).\n- powerpc/fpu: Drop cvt_fd() and cvt_df() (bsc#1230826\n  ltc#205848).\n- Refresh patches.suse/powerpc-Don-t-clobber-f0-vs0-during-fp-altivec-regis.patch\n- powerpc/sstep: Add support for divde[.] and\n  divdeu[.] instructions (bsc#1230826 ltc#205848).\n- powerpc/lib: fix redundant inclusion of quad.o (bsc#1230826\n  ltc#205848).\n- powerpc sstep: Add support for modsd, modud instructions\n  (bsc#1230826 ltc#205848).\n- powerpc sstep: Add support for modsw, moduw instructions\n  (bsc#1230826 ltc#205848).\n- powerpc sstep: Add support for extswsli instruction (bsc#1230826\n  ltc#205848).\n- powerpc sstep: Add support for cnttzw, cnttzd instructions\n  (bsc#1230826 ltc#205848).\n- powerpc: sstep: Add support for darn instruction (bsc#1230826\n  ltc#205848).\n- powerpc: sstep: Add support for maddhd, maddhdu, maddld\n  instructions (bsc#1230826 ltc#205848).\n- Refresh patches.suse/powerpc-bpf-use-unsigned-division-instruction-for-64.patch\n- powerpc/sstep: Fix kernel crash if VSX is not present\n  (bsc#1230826 ltc#205848).\n- powerpc/sstep: Introduce GETTYPE macro (bsc#1230826 ltc#205848).\n- powerpc/lib: Fix \u0026quot;integer constant is too large\u0026quot; build failure\n  (bsc#1230826 ltc#205848).\n- powerpc/32: Move the inline keyword at the beginning of function\n  declaration (bsc#1230826 ltc#205848).\n- powerpc/kprobes: Blacklist emulate_update_regs() from kprobes\n  (bsc#1230826 ltc#205848).\n- powerpc/lib/sstep: Fix fixed-point shift instructions that\n  set CA32 (bsc#1230826 ltc#205848).\n- powerpc/lib/sstep: Fix fixed-point arithmetic instructions\n  that set CA32 (bsc#1230826 ltc#205848).\n- powerpc/kprobes: Update optprobes to use emulate_update_regs()\n  (bsc#1230826 ltc#205848).\n- powerpc: Fix handling of alignment interrupt on dcbz instruction\n  (bsc#1230826 ltc#205848).\n- powerpc: Fix kernel crash in emulation of vector loads and\n  stores (bsc#1230826 ltc#205848).\n- commit 41c7998\n\n- md/raid5: avoid BUG_ON() while continue reshape after\n  reassembling (bsc#1229790, CVE-2024-43914).\n- commit 2925547\n\n- blacklist.conf: Remove ppc sstep instruction emulation (bsc#1230826).\n- commit eeace57\n\n- powerpc/lib/sstep: Fix count leading zeros instructions\n  (bsc#1230826 ltc#205848).\n- powerpc/sstep: mullw should calculate a 64 bit signed result\n  (bsc#1230826 ltc#205848).\n- powerpc/sstep: Fix issues with mcrf (bsc#1230826 ltc#205848).\n- powerpc/sstep: Fix issues with set_cr0() (bsc#1230826\n  ltc#205848).\n- powerpc/sstep: Avoid used uninitialized error (bsc#1230826\n  ltc#205848).\n- powerpc: Wrap register number correctly for string load/store\n  instructions (bsc#1230826 ltc#205848).\n- powerpc: Emulate load/store floating point as integer word\n  instructions (bsc#1230826 ltc#205848).\n- powerpc: Use instruction emulation infrastructure to handle\n  alignment faults (bsc#1230826 ltc#205848).\n- Refresh patches.suse/powerpc-Fix-check-for-copy-paste-instructions-in-ali.patch\n- Update config files.\n- powerpc: Separate out load/store emulation into its own function\n  (bsc#1230826 ltc#205848).\n- powerpc: Handle opposite-endian processes in emulation code\n  (bsc#1230826 ltc#205848).\n- powerpc: Set regs-\u0026gt;dar if memory access fails in emulate_step()\n  (bsc#1230826 ltc#205848).\n- powerpc: Emulate the dcbz instruction (bsc#1230826 ltc#205848).\n- powerpc: Emulate load/store floating double pair instructions\n  (bsc#1230826 ltc#205848).\n- powerpc: Emulate vector element load/store instructions\n  (bsc#1230826 ltc#205848).\n- powerpc: Emulate FP/vector/VSX loads/stores correctly when\n  regs not live (bsc#1230826 ltc#205848).\n- powerpc: Make load/store emulation use larger memory accesses\n  (bsc#1230826 ltc#205848).\n- powerpc: Add emulation for the addpcis instruction (bsc#1230826\n  ltc#205848).\n- powerpc: Don't update CR0 in emulation of popcnt, prty, bpermd\n  instructions (bsc#1230826 ltc#205848).\n- powerpc: Fix emulation of the isel instruction (bsc#1230826\n  ltc#205848).\n- powerpc/64: Fix update forms of loads and stores to write\n  64-bit EA (bsc#1230826 ltc#205848).\n- powerpc: Handle most loads and stores in instruction emulation\n  code (bsc#1230826 ltc#205848).\n- powerpc: Don't check MSR FP/VMX/VSX enable bits in\n  analyse_instr() (bsc#1230826 ltc#205848).\n- powerpc: Change analyse_instr so it doesn't modify *regs\n  (bsc#1230826 ltc#205848).\n- powerpc/lib/sstep: Add isel instruction emulation (bsc#1230826\n  ltc#205848).\n- powerpc/lib/sstep: Add prty instruction emulation (bsc#1230826\n  ltc#205848).\n- powerpc/lib/sstep: Add bpermd instruction emulation (bsc#1230826\n  ltc#205848).\n- powerpc/lib/sstep: Add popcnt instruction emulation (bsc#1230826\n  ltc#205848).\n- powerpc/lib/sstep: Add cmpb instruction emulation (bsc#1230826\n  ltc#205848).\n- commit 10b1c67\n\n- KABI: kcm: Serialise kcm_sendmsg() for the same socket\n  (CVE-2024-44946 bsc#1230015).\n- commit 7a83511\n\n- kcm: Serialise kcm_sendmsg() for the same socket\n  (CVE-2024-44946 bsc#1230015).\n- commit a7c5ad6\n\n- KVM: arm64: Make ICC_*SGI*_EL1 undef in the absence of a vGICv3\n  (CVE-2024-46707 bsc#1230582).\n- commit a6e55a2\n\n- perf: Fix list corruption in perf_cgroup_switch() (bsc#1227953\n  CVE-2022-48799).\n- commit 7c98d1e\n\n- nvme-tcp: fix possible use-after-free in transport\n  error_recovery work (bsc#1228000 (CVE-2022-48789)).\n- nvme: fix a possible use-after-free in controller reset  during\n  load (bsc#1227941 (CVE-2022-48790)).\n- commit 699f243\n\n- blacklist.conf: CVE-2021-47408 has no security implications, it is an issue for\n  timing only and no functionality is impacted.\n- commit 1da9771\n\n- blacklist.conf: add two CVE commits that don't apply\n  From CVE-2024-41000/bsc#1227867 and CVE-2021-47622/bsc#1227917\n- commit 4846912\n\n- x86/mtrr: Check if fixed MTRRs exist before saving them (bsc#1230174 CVE-2024-44948).\n- commit c14b9b5\n\n- nvme-rdma: fix possible use-after-free in transport\n  error_recovery work (bsc#1227952 (CVE-2022-48788)).\n- commit 0f2b472\n\n- Input: MT - limit max slots (CVE-2024-45008 bsc#1230248).\n- commit 18c0fe4\n\n- Refresh\n  patches.suse/media-cec-core-avoid-confusing-transmit-timed-out-me.patch.\n  Moved into sorted section to avoid false positives of the checker\n- commit 6e68152\n\n- media: vivid: avoid integer overflow (git-fixes).\n- commit 2e17cad\n\n- media: vivid: dev-\u0026gt;bitmap_cap wasn't freed in all cases\n  (git-fixes).\n- commit 249a367\n\n- media: vivid: s_fbuf: add more sanity checks (git-fixes).\n- commit de48b55\n\n- media: vivid: fix assignment of dev-\u0026gt;fbuf_out_flags (git-fixes).\n- commit 0c654cd\n\n- blacklist.conf: added entry for driver not included in SLE12\n- commit 1dc2266\n\n- ipv6: prevent UAF in ip6_send_skb() (CVE-2024-44987 bsc#1230185)\n- commit a6345f7\n\n- gtp: pull network headers in gtp_dev_xmit() (CVE-2024-44999 bsc#1230233)\n- commit 6133ce9\n\n- powerpc: Remove support for PowerPC 601 (Remove unused and\n  malformed assembly causing build error).\n- commit a186115\n\n- Drivers: hv: vmbus: Fix rescind handling in uio_hv_generic\n  (git-fixes).\n- uio_hv_generic: Fix kernel NULL pointer dereference in\n  hv_uio_rescind (git-fixes).\n- net: mana: Fix error handling in mana_create_txq/rxq's NAPI\n  cleanup (git-fixes).\n- net: mana: Fix race of mana_hwc_post_rx_wqe and new hwc response\n  (git-fixes).\n- commit 2c432a7\n\n- profiling: fix shift too large makes kernel panic (git-fixes).\n- commit 92e9109\n\n- KVM: x86/mmu: make apf token non-zero to fix bug (CVE-2022-48943\n  bsc#1229645).\n- commit 20aabb8\n\n- blacklist.conf: CVE-2021-4442 bsc#1229912: not applicable, code does not exist\n  To check if queues are empty, when tp-\u0026gt;repair_queue == TCP_SEND_QUEUE, the\n  function tcp_rtx_queue_empty(const struct sock *sk) is used. This function\n  checks the field tcp_rtx_queue of struct sock, but this field is not present\n  (it was added in v4.15-rc1)\n- commit 64800ee\n\n- media: dvb-usb-v2: af9035: fix missing unlock (CVE-2023-52915\n  bsc#1230270).\n- commit 48622c6\n\n- media: dvb-usb-v2: af9035: Fix null-ptr-deref in\n  af9035_i2c_master_xfer (CVE-2023-52915 bsc#1230270).\n- commit a6997db\n\n- usbnet: modern method to get random MAC (git-fixes).\n- commit 26fa49e\n\n- net: usb: sr9700: fix uninitialized variable use in sr_mdio_read\n  (git-fixes).\n- commit f6a8914\n\n- ACPI: EC: Avoid printing confusing messages in acpi_ec_setup()\n  (git-fixes).\n- ACPI: EC: tweak naming in preparation for GpioInt support\n  (git-fixes).\n- ACPI / EC: Clean up EC GPE mask flag (git-fixes).\n- ACPI: EC: Fix an EC event IRQ storming issue (git-fixes).\n- commit 9e80cf5\n\n- Bluetooth: hci_core: Fix leaking sent_cmd skb (CVE-2022-48844 bsc#1228068)\n- commit 33c7b67\n\n- wifi: nl80211: disallow setting special AP channel widths (CVE-2024-43912 bsc#1229830)\n- commit 3f6faef\n\n- scsi: pm8001: Fix use-after-free for aborted TMF sas_task (CVE-2022-48791 bsc#1228002)\n- commit 0f736ca\n\n- scsi: pm80xx: Fix TMF task completion race condition (CVE-2022-48791 bsc#1228002)\n- commit 47ce134\n\n- ext4: sanity check for NULL pointer after ext4_force_shutdown\n  (bsc#1229753 CVE-2024-43898).\n- commit d2ce48d\n\n- udf: Avoid using corrupted block bitmap buffer (bsc#1229362\n  CVE-2024-42306).\n- commit e9fe84a\n\n- ext4: check dot and dotdot of dx_root before making dir indexed\n  (bsc#1229363 CVE-2024-42305).\n- commit 1e9d591\n\n- protect the fetch of -\u0026gt;fd[fd] in do_dup2() from mispredictions\n  (bsc#1229334 CVE-2024-42265).\n- commit 126ef02\n\n- ACPI: video: Add new hw_changes_brightness quirk, set it on\n  PB Easynote MZ35 (git-fixes).\n- ACPI: blacklist: fix clang warning for unused DMI table\n  (git-fixes).\n- Revert \u0026quot;ACPI / EC: Remove old CLEAR_ON_RESUME quirk\u0026quot;\n  (git-fixes).\n- ACPI: SPCR: Consider baud rate 0 as preconfigured state\n  (git-fixes).\n- ACPI: SPCR: work around clock issue on xgene UART (git-fixes).\n- commit 18ef221\n\n- ACPI: SPCR: Workaround for APM X-Gene 8250 UART 32-alignment\n  errata (git-fixes).\n- Refresh\n  patches.suse/0001-tty-pl011-fix-initialization-order-of-QDF2400-E44.patch.\n- commit 0985189\n\n- serial: sc16is7xx: fix invalid FIFO access with special register\n  set (CVE-2024-44950 bsc#1230180).\n- commit b162aad\n\n- kabi fix for proc/mounts: add cursor (bsc#1207341).\n- commit 1fada3d\n\n- proc/mounts: add cursor (bsc#1207341).\n- autofs4: use wait_event_killable (bsc#1207341).\n- commit 1adc77e\n\n- blacklist.conf: Add c055fc00c07b (\u0026quot;net/rds: fix WARNING in\n  rds_conn_connect_if_down\u0026quot;) (CVE-2024-27024 bsc#1223777)\n- commit e06af01\n\n- ALSA: line6: Fix racy access to midibuf (CVE-2024-44954\n  bsc#1230176).\n- commit 899798d\n\n- atm: idt77252: prevent use after free in dequeue_rx()\n  (CVE-2024-44998 bsc#1230171).\n- driver core: Fix uevent_show() vs driver detach race\n  (CVE-2024-44952 bsc#1230178).\n- commit c758c1a\n\n- cpufreq: schedutil: Destroy mutex before kobject_put() frees the memory (CVE-2021-47387 bsc#1225316)\n- commit ce3e04b\n\n- s390/sclp: Prevent release of buffer in I/O (bsc#1230200\n  CVE-2024-44969 git-fixes).\n- commit 495f327\n\n- fuse: use unsigned type for getxattr/listxattr size truncation\n  (bsc#1230151).\n- commit 3543834\n\n- Bluetooth: L2CAP: Fix not validating setsockopt user input\n  (bsc#1224579 CVE-2024-35965).\n- commit 6d78576\n\n- blacklist.conf: update blacklist\n- commit 4f86ed8\n\n- Bluetooth: L2CAP: Fix deadlock (git-fixes).\n- commit 6afc15c\n\n- blacklist.conf: Add db8dd9697238 cgroup-v1: cgroup_pidlist_next should update position index\n- commit eb0c44d\n\n- Bluetooth: btintel: Fixe build regression (bsc#1224640\n  CVE-2024-35933).\n- commit 67f9898\n\n- Bluetooth: btintel: Fix null ptr deref in btintel_read_version\n  (bsc#1224640 CVE-2024-35933).\n- commit 8955b3c\n\n- blacklist.conf: remove three stale entries\n- commit 89bb6b6\n\n- usb: vhci-hcd: Do not drop references before new references\n  are gained (CVE-2024-43883 bsc#1229707).\n- commit 1ab205e\n\n- bluetooth/l2cap: sync sock recv cb and release (bsc#1228576\n  CVE-2024-41062).\n- commit 7294061\n\n- drm/i915/gem: Fix Virtual Memory mapping boundaries calculation (bsc#1229156 CVE-2024-42259)\n- commit ad9c138\n\n- net: usb: qmi_wwan: fix memory leak for not ip packets\n  (CVE-2024-43861 bsc#1229500).\n- commit 706ebe0\n\n- drm/vmwgfx: Fix a deadlock in dma buf fence polling (bsc#1229497 CVE-2024-43863)\n- commit 3f53b56\n\n- xfs: fix getfsmap reporting past the last rt extent (git-fixes).\n- commit a9800d1\n\n- xfs: fix uninitialized variable access (git-fixes).\n- commit 3f7682d\n\n- xfs: Fix the owner setting issue for rmap query in xfs fsmap\n  (git-fixes).\n- commit f1b3405\n\n- Update\n  patches.suse/0001-usb-xhci-Check-endpoint-is-valid-before-dereferencin.patch\n  (git-fixes CVE-2023-52901 bsc#1229531).\n- Update\n  patches.suse/CDC-NCM-avoid-overflow-in-sanity-checking.patch\n  (git-fixes CVE-2022-48938 bsc#1229664).\n- Update\n  patches.suse/RDMA-cma-Do-not-change-route.addr.src_addr-outside-s.patch\n  (bsc#1210629 CVE-2023-2176 CVE-2022-48925 bsc#1229630).\n- Update patches.suse/RDMA-ib_srp-Fix-a-deadlock.patch (git-fixes\n  CVE-2022-48930 bsc#1229624).\n- Update\n  patches.suse/cgroup-cpuset-Prevent-UAF-in-proc_cpuset_show.patch\n  (bsc#1228801 CVE-2024-43853 bsc#1229292).\n- Update\n  patches.suse/cifs-fix-double-free-race-when-mount-fails-in-cifs_get_root-.patch\n  (bsc#1190317 CVE-2022-48919 bsc#1229657).\n- Update\n  patches.suse/configfs-fix-a-race-in-configfs_-un-register_subsystem.patch\n  (git-fixes CVE-2022-48931 bsc#1229623).\n- Update patches.suse/drm-virtio-Fix-GEM-handle-creation-UAF.patch\n  (git-fixes CVE-2022-48899 bsc#1229536).\n- Update\n  patches.suse/ibmvnic-free-reset-work-item-when-flushing.patch\n  (bsc#1196516 ltc#196391 CVE-2022-48905 bsc#1229604).\n- Update patches.suse/ixgbe-fix-pci-device-refcount-leak.patch\n  (git-fixes CVE-2022-48896 bsc#1229540).\n- Update\n  patches.suse/memcg-protect-concurrent-access-to-mem_cgroup_idr.patch\n  (git-fixes CVE-2024-43892 bsc#1229761).\n- Update\n  patches.suse/scsi-qla2xxx-Complete-command-early-within-lock.patch\n  (bsc#1228850 CVE-2024-42287 bsc#1229392).\n- Update\n  patches.suse/scsi-qla2xxx-During-vport-delete-send-async-logout-e.patch\n  (bsc#1228850 CVE-2024-42289 bsc#1229399).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-for-possible-memory-corruption.patch\n  (bsc#1228850 CVE-2024-42288 bsc#1229398).\n- Update\n  patches.suse/scsi-qla2xxx-validate-nvme_local_port-correctly.patch\n  (bsc#1228850 CVE-2024-42286 bsc#1229395).\n- commit d202e91\n\n- blacklist.conf: 0cac183b98d8 drm/amdkfd: range check cp bad op exception interrupts\n- commit 42d3b40\n\n- ata: libata-core: Fix double free on error\n  (CVE-2024-41087,bsc#1228466).\n- commit bdef5f8\n\n- blacklist.conf: c02c1960c93e drm/amdgpu/pm: Fix the null pointer dereference for smu7\n- commit 9652c5d\n\n- blacklist.conf: 4c11d30c9557 drm/amdgpu: Fix the null pointer dereference to ras_manager\n- commit d86617b\n\n- drm/amdgpu/pm: Fix the null pointer dereference in apply_state_adjust_rules (CVE-2024-43907 bsc#1229787).\n- commit 95a59bd\n\n- drm/amd/pm: Fix the null pointer dereference for vega10_hwmgr (CVE-2024-43905 bsc#1229784).\n- commit 93f42ad\n\n- serial: core: check uartclk for zero to avoid divide by zero\n  (bsc#1229759 CVE-2024-43893).\n- commit 150a54e\n\n- media: xc2028: avoid use-after-free in load_firmware_cb()\n  (CVE-2024-43900 bsc#1229756).\n- commit 764489c\n\n- blacklist.conf: add one IRQ HANDLING\n- commit e56caa6\n\n- Revert \u0026quot;irqdomain: Fixed unbalanced fwnode get and put (git-fixes).\u0026quot;\n  (bsc#1229851)\n  This reverts commit 37becc871554a4057226a862be812b4c0ff8c711 as it\n  breaks irqs on 12sp5. The patch is actually wrong in 12sp5. of_node is\n  refcounted here, not fwnode. So revert the patch without replacement.\n- commit c53dc2f\n\n- blacklist.conf: 38e6f715b02b drm/amd/display: Add NULL check for 'afb' before dereferencing in amdgpu_dm_plane_handle_cursor_update\n- commit ad81cdb\n\n- drm/amd/display: Add null checker before passing variables (CVE-2024-43902 bsc#1229767).\n- commit 1c0c16f\n\n- blacklist.conf: CVE-2024-43904 bsc#1229768: not applicable\n  Driver code does not exist, added in 5.7.\n- commit faa2712\n\n- Bluetooth: MGMT: Add error handling to pair_device() (CVE-2024-43884 bsc#1229739)\n- commit ecb471c\n\n- blacklist.conf: ecbf60782662 drm/amd/display: Fix null pointer deref in dcn20_resource.c\n- commit 582eb56\n\n- btrfs: get rid of warning on transaction commit when using\n  flushoncommit (bsc#1229658 CVE-2022-48920).\n- commit 2ac5fdc\n\n- vfio/pci: fix potential memory leak in vfio_intx_enable()\n  (git-fixes).\n- commit f6c36eb\n\n- kABI: vfio: struct virqfd kABI workaround (CVE-2024-26812\n  bsc#1222808).\n- commit 202caf3\n\n- exec: Fix ToCToU between perm check and set-uid/gid usage\n  (CVE-2024-43882 bsc#1229503).\n- commit 236a83a\n\n- vfio: Introduce interface to flush virqfd inject workqueue\n  (bsc#1222808 CVE-2024-26812).\n- commit 71f96a8\n\n- vfio/pci: Create persistent INTx handler (bsc#1222808\n  CVE-2024-26812).\n- commit 26ca5db\n\n- ip6_tunnel: Fix broken GRO (bsc#1226323).\n- net/mlx5: Always drain health in shutdown callback\n  (CVE-2024-43866 bsc#1229495).\n- commit d1b0995\n\n- net: ipv6: ensure we call ipv6_mc_down() at most once (CVE-2022-48910 bsc#1229632)\n- commit 80d1e79\n\n- blacklist.conf: Add a50e1fcbc9b85 (\u0026quot;btrfs: do not WARN_ON() if we have PageError set\u0026quot;)\n- commit 479a93f\n\n- gsmi: fix null-deref in gsmi_get_variable (CVE-2023-52893 bsc#1229535)\n- commit 0d2fd7b\n\n- Fix reference in patches.suse/netfilter-tproxy-bail-out-if-IP-has-been-disabled-on.patch (CVE-2024-36270 bsc#1226798)\n- commit 705c30b\n\n- s390/pkey: Wipe copies of protected- and secure-keys\n  (CVE-2024-42155 bsc#1228733).\n- commit 1712d5c\n\n- nfc: pn533: initialize struct pn533_out_arg properly\n  (CVE-2022-48875 bsc#1229516).\n- commit 3dc4ecc\n\n- nfc: pn533: Wait for out_urb's completion in\n  pn533_usb_send_frame() (CVE-2023-52907 bsc#1229526).\n- commit 462fb2b\n\n- wifi: mac80211: sdata can be NULL during AMPDU start\n  (CVE-2022-48875 bsc#1229516).\n- commit 5fb2170\n\n- devres: Fix memory leakage caused by driver API devm_free_percpu() (CVE-2024-43871 bsc#1229490)\n- commit 4465aef\n\n- s390/pkey: Use kfree_sensitive() to fix Coccinelle warnings\n  (CVE-2024-42158 bsc#1228720).\n- commit 13ea3b5\n\n- af_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n  (bsc#1226846 CVE-2024-38596).\n- Update\n  patches.suse/af_unix-Fix-data-races-around-sk-sk_shutdown.patch\n  (git-fixes bsc#1226846).\n- commit a35b43b\n\n- RDMA/hns: Fix soft lockup under heavy CEQE load (bsc#1229489 CVE-2024-43872)\n- commit 8bd84db\n\n- ipv6: sr: fix memleak in seg6_hmac_init_algo (CVE-2024-39489 bsc#1227623)\n- commit 9c4fab9\n\n- usb: xhci: prevent potential failure in handle_tx_event()\n  for Transfer events without TRB (CVE-2024-42226 bsc#1228709).\n- commit e6525c1\n\n- usb: gadget: configfs: Prevent OOB read/write in\n  usb_string_copy() (CVE-2024-42236 bsc#1228964).\n- commit bf495b3\n\n- USB: serial: mos7840: fix crash on resume (CVE-2024-42244\n  bsc#1228967).\n- commit c904d0e\n\n- blacklist.conf: CVE-2021-47289 bsc#1224984: not applicable, code does not exist\n  Patch adds a NULL pointer check to acpi_dev_put(), but this does not\n  exist in this codebase. It was added as an unrelated fix fe066621c7966f\n  (\u0026quot;gpio: merrifield: Fix build err without CONFIG_ACPI\u0026quot;) and then a lot\n  of refactoring in ACPI subsystem started to use it.\n  There isn't an equivalent code that should do the NULL pointer check,\n  probably added later in the refactoring as well as the bug.\n- commit 6f50897\n\n- wifi: cfg80211: handle 2x996 RU allocation in\n  cfg80211_calculate_bitrate_he() (CVE-2024-43879 bsc#1229482).\n- commit 8fe6121\n\n- kABI: tpm-interface: Hide new include from genksyms\n  (bsc#1082555).\n- commit d46dd8a\n\n- cpufreq: schedutil: Use kobject release() method to free sugov_tunables (CVE-2021-47387 bsc#1225316)\n  CVE backport so remove it from blacklist.conf, added in 56273cd113da0c\n  (\u0026quot;blacklist.conf: Fix to experimental feature, fix only in the event of\n  a customer bug\u0026quot;).\n- commit 074afac\n\n- netfilter: nf_tables: fix memleak in map from abort path\n  (CVE-2024-27011 bsc#1223803).\n- commit 5b46784\n\n- Bluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()\n  (bsc#1225578 CVE-2024-36013).\n- commit 12a50ad\n\n- filelock: Fix fcntl/close race recovery compat path (bsc#1228427\n  CVE-2024-41020).\n- commit 0ef50b1\n\n- filelock: Remove locks reliably when fcntl/close race is\n  detected (bsc#1228247 CVE-2024-41012).\n- commit c84976c\n\n- netfilter: nft_limit: reject configurations that cause integer\n  overflow (CVE-2024-26668 bsc#1222335).\n- commit 0c4fd3e\n\n- netfilter: nft_limit: fix packet ratelimiting (CVE-2024-26668\n  bsc#1222335).\n- Refresh\n  patches.suse/netfilter-nft_limit-avoid-possible-divide-error-in-n.patch.\n- commit 045f275\n\n- kvm: s390: Reject memory region operations for ucontrol VMs\n  (CVE-2024-43819 bsc#1229290 git-fixes).\n- commit e43e818\n\n- s390/pkey: Wipe sensitive data on failure (CVE-2024-42157\n  bsc#1228727 git-fixes).\n- commit 323dd0d\n\n- irqdomain: Fixed unbalanced fwnode get and put (git-fixes).\n- genirq/generic_chip: Make irq_remove_generic_chip() irqdomain\n  aware (git-fixes).\n- genirq/ipi: Fix NULL pointer deref in\n  irq_data_get_affinity_mask() (git-fixes).\n- irqdomain: Fix domain registration race (git-fixes).\n- irqdomain: Fix mapping-creation race (git-fixes).\n- irqdomain: Refactor __irq_domain_alloc_irqs() (git-fixes).\n- irqdomain: Look for existing mapping only once (git-fixes).\n- irqdomain: Drop bogus fwspec-mapping error handling (git-fixes).\n- irqdomain: Fix association race (git-fixes).\n- genirq/irqdesc: Don't try to remove non-existing sysfs files\n  (git-fixes).\n- genirq/msi: Ensure deactivation on teardown (git-fixes).\n- genirq/msi: Activate Multi-MSI early when\n  MSI_FLAG_ACTIVATE_EARLY is set (git-fixes).\n- genirq/irqdomain: Check pointer in\n  irq_domain_alloc_irqs_hierarchy() (git-fixes).\n- genirq/proc: Reject invalid affinity masks (again) (git-fixes).\n- genirq: Delay deactivation in free_irq() (git-fixes).\n- kABI: genirq: Delay deactivation in free_irq() (kabi git-fixes).\n- genirq: Make sure the initial affinity is not empty (git-fixes).\n- commit 37becc8\n\n- KVM: mmio: Fix use-after-free Read in\n  kvm_vm_ioctl_unregister_coalesced_mmio (CVE-2021-47341\n  bsc#1224923).\n- commit 12d646d\n\n- bna: adjust 'name' buf size of bna_tcb and bna_ccb structures\n  (CVE-2024-43839 bsc#1229301).\n- commit 5a42d4e\n\n- efi: runtime: avoid EFIv2 runtime services on Apple x86 machines\n  (bsc#1226629 CVE-2022-48769).\n- commit 88b4118\n\n- dma: fix call order in dmam_free_coherent (bsc#1229346\n  CVE-2024-43856).\n- commit b96a5fb\n\n- netfilter: nfnetlink_queue: acquire rcu_read_lock() in instance_destroy_rcu() (CVE-2024-36286 bsc#1226801)\n- commit 3ee11b6\n\n- netfilter: tproxy: bail out if IP has been disabled on the device (CVE-2024-36270 1226798)\n- commit d5e958c\n\n- netfilter: nf_conntrack_h323: Add protection for bmp length out of range (CVE-2024-26851 bsc#1223074)\n  Previous four patches fix other bound check bugs or prepare code for\n  this to apply cleanly.\n- commit ca9c856\n\n- netfilter: nf_conntrack_h323: restore boundary check correctness (bsc#1223074)\n- commit a87a86d\n\n- netfilter: nf_ct_h323: Extend nf_h323_error_boundary to work on bits as well (bsc#1223074)\n- commit 034ab36\n\n- netfilter: nf_ct_h323: Convert CHECK_BOUND macro to function (bsc#1223074)\n- commit f812de4\n\n- netfilter: nf_ct_h323: Out Of Bound Read in Netfilter Conntrack (bsc#1223074)\n- commit b7e85f6\n\n- ACPICA: Revert \u0026quot;ACPICA: avoid Info: mapping multiple BARs. Your\n  kernel is fine.\u0026quot; (bsc#1227820 CVE-2024-40984).\n- commit cc6eb03\n\n- blacklist.conf: Add e7870cf13d20 (\u0026quot;rxrpc: Fix delayed ACKs to not set the\n  reference serial number\u0026quot;)\n  (CVE-2024-26677 bsc#1222387)\n- commit b725045\n\n- blacklist.conf: add two IRQ HANDLING\n- commit dad4350\n\n- scsi: target: core: Silence the message about unknown VPD pages\n  (bsc#1221252 bsc#1229462).\n- commit 73ee6e7\n\n- mISDN: Fix a use after free in hfcmulti_tx() (CVE-2024-42280 bsc#1229388)\n- commit e5565c3\n\n- tipc: Return non-zero value from tipc_udp_addr2str() on error (CVE-2024-42284 bsc#1229382)\n- commit 4d8536f\n\n- sysctl: always initialize i_uid/i_gid (CVE-2024-42312 bsc#1229357)\n- commit b5674a1\n\n- drm/gma500: fix null pointer dereference in cdv_intel_lvds_get_modes (CVE-2024-42310 bsc#1229358)\n- commit ac17234\n\n- drm/gma500: fix null pointer dereference in psb_intel_lvds_get_modes (CVE-2024-42309 bsc#1229359)\n- commit 452c306\n\n- block: initialize integrity buffer to zero before writing it to media (CVE-2024-43854 bsc#1229345)\n- commit 2414013\n\n- ipvs: properly dereference pe in ip_vs_add_service (CVE-2024-42322 bsc#1229347)\n- commit 3e24abe\n\n- dev/parport: fix the array out-of-bounds risk (CVE-2024-42301\n  bsc#1229407).\n- commit b4a682d\n\n- RDMA/iwcm: Fix a use-after-free related to destroying CM IDs (bsc#1229381 CVE-2024-42285)\n- commit b6331d8\n\n- arm64: ACPI: NUMA: initialize all values of acpi_early_node_map to (git-fixes)\n- commit c501ca8\n\n- media: mediatek: vcodec: Handle invalid decoder vsi\n  (CVE-2024-43831 bsc#1229309).\n- commit 38f48e2\n\n- fuse: Initialize beyond-EOF page contents before setting\n  uptodate (bsc#1229457).\n- commit 7188cb3\n\n- bpf: Fix a segment issue when downgrading gso_size (bsc#1229386\n  CVE-2024-42281).\n- commit 4edf813\n\n- Refresh\n  patches.suse/bpf-fix-bpf_skb_adjust_net-bpf_skb_proto_xlat-to-dea.patch.\n- add hunks that were missing because this patch predates\n  patches.suse/bpf-add-bpf_skb_adjust_room-helper.patch\n- commit b6ecdd7\n\n- net/iucv: fix use after free in iucv_sock_close()\n  (CVE-2024-42271 bsc#1229400 bsc#1228975).\n- commit f2f712f\n\n- Refresh sorted patches.\n- Refresh patches.suse/cpu-SMT-Enable-SMT-only-if-a-core-is-online.patch.\n- Refresh patches.suse/powerpc-topology-Check-if-a-core-is-online.patch.\n- commit 1b405bb\n\n- Update patches.suse/cpu-SMT-Enable-SMT-only-if-a-core-is-online.patch\n  (bsc#1214285 bsc#1205462 ltc#200161 ltc#200588 git-fixes\n  bsc#1229327 ltc#206365).\n- Update patches.suse/powerpc-topology-Check-if-a-core-is-online.patch\n  (bsc#1214285 bsc#1205462 ltc#200161 ltc#200588 git-fixes\n  bsc#1229327 ltc#206365).\n- commit a8be45e\n\n- gss_krb5: Fix the error handling path for\n  crypto_sync_skcipher_setkey (git-fixes).\n- commit 6e52103\n\n- ALSA: timer: Relax start tick time check for slave timer\n  elements (git-fixes CVE-2024-38618 bsc#1226754).\n- commit de27c4e\n\n- USB: core: Fix duplicate endpoint bug by clearing reserved bits in the descriptor (CVE-2024-41035 bsc#1228485)\n- commit 456ee09\n\n- s390/uv: Panic for set and remove shared access UVC errors\n  (git-fixes bsc#1229229).\n- commit 172448f\n\n- gve: Account for stopped queues when reading NIC stats\n  (CVE-2024-42162 bsc#1228706).\n- commit 7acbc65\n\n- blacklist.conf: add one from IRQ HANDLING git-fixes\n- commit 14e4231\n\n- net: mana: Fix race on per-CQ variable napi work_done\n  (bsc#1229154).\n- Refresh\n  patches.suse/net-mana-Configure-hwc-timeout-from-hardware.patch.\n- commit d7d72be\n\n- net: mana: Fix doorbell out of order violation and avoid\n  unnecessary doorbell rings (bsc#1229154).\n- commit 72d0bd1\n\n- KVM: s390: Do not report unusabled IDs via KVM_CAP_MAX_VCPU_ID\n  (git-fixes bsc#1229222).\n- commit 590a719\n\n- mmc: mmc_spi: fix error handling in mmc_spi_probe() (bsc#1225483\n  CVE-2023-52708).\n- commit c7ef14e\n\n- sata_fsl: fix UAF in sata_fsl_port_stop when rmmod sata_fsl\n  (bsc#1225508 CVE-2021-47549).\n- commit ed3ad9e\n\n- irqchip/gic-v3-its: Fix potential VPE leak on error (bsc#1225190\n  CVE-2021-47373).\n- commit c95f6d5\n\n- i2c: acpi: fix resource leak in reconfiguration device addition\n  (bsc#1225223 CVE-2021-47425).\n- commit 61ff581\n\n- nfc: nci: Fix handling of zero-length payload packets in\n  nci_rx_work() (git-fixes).\n- nfc: nci: Fix uninit-value in nci_rx_work (git-fixes).\n- nfc: nci: Fix kcov check in nci_rx_work() (git-fixes).\n- commit b2f9141\n\n- net, sunrpc: Remap EPERM in case of connection failure in\n  xs_tcp_setup_socket (CVE-2024-42246 bsc#1228989).\n- Refresh\n  patches.suse/SUNRPC-improve-swap-handling-scheduling-and-PF_MEMAL.patch.\n- commit 135ee65\n\n- powerpc/topology: Check if a core is online (bsc#1214285\n  bsc#1205462 ltc#200161 ltc#200588 git-fixes).\n- cpu/SMT: Enable SMT only if a core is online (bsc#1214285\n  bsc#1205462 ltc#200161 ltc#200588 git-fixes).\n- commit bf2704c\n\n- ata: libata-core: Fix null pointer dereference on error (CVE-2024-41098 bsc#1228467).\n- commit 706447c\n\n- vsock: correct removal of socket from the list (bsc#1227996).\n- commit fa0bbe3\n\n- x86/xen: Drop USERGS_SYSRET64 paravirt call (CVE-2021-4440\n  bsc#1227069).\n- Refresh\n  patches.suse/x86-entry_64-Add-VERW-just-before-userspace-transition.patch.\n- Refresh\n  patches.suse/x86-xen-add-xenpv_restore_regs_and_return_to_usermode.patch.\n- commit 8c4b30e\n\n- tcp_metrics: validate source addr length\n  (CVE-2024-42154 bsc#1228507).\n- commit 21723ca\n\n- memcg: protect concurrent access to mem_cgroup_idr (git-fixes).\n- commit 7946225\n\n- x86/pv: Switch SWAPGS to ALTERNATIVE (CVE-2021-4440\n  bsc#1227069).\n- Refresh patches.suse/x86-Add-magic-AMD-return-thunk.patch.\n- Refresh\n  patches.suse/x86-entry-add-kernel-ibrs-implementation.patch.\n- commit 0ebe004\n\n- vsock: remove vsock from connected table when connect is\n  interrupted by a signal (CVE-2022-48786 bsc#1227996).\n- commit 1f3fc69\n\n- libceph: fix race between delayed_work() and ceph_monc_stop()\n  (bsc#1228959 CVE-2024-42232).\n- commit 498ef72\n\n- nfc: nci: Fix uninit-value in nci_dev_up and nci_ntf_packet\n  (git-fixes CVE-2024-35915 bsc#1224479).\n- commit e2eb32a\n\n- blacklist.conf: bsc#1226885 (CVE-2024-38662) patches that are too\n  intrusive\n- commit 1c89392\n\n- Update\n  patches.suse/0001-ocfs2-fix-DIO-failure-due-to-insufficient-transactio.patch\n  (bsc#1216834 CVE-2024-42077 bsc#1228516).\n- Update\n  patches.suse/ocfs2-strict-bound-check-before-memcmp-in-ocfs2_xatt.patch\n  (bsc#1228410 CVE-2024-41016).\n- Update\n  patches.suse/usb-atm-cxacru-fix-endpoint-checking-in-cxacru_bind.patch\n  (git-fixes CVE-2024-41097 bsc#1228513).\n- Update\n  patches.suse/x86-bhi-Avoid-warning-in-DB-handler-due-to-BHI-mitigation.patch\n  (git-fixes CVE-2024-42240 bsc#1228966).\n  Add CVE references.\n- commit 97c33e4\n\n- net: ntb_netdev: Move ntb_netdev_rx_handler() to call netif_rx()\n  from __netif_rx() (CVE-2024-42110 bsc#1228501).\n- bnx2x: Fix multiple UBSAN array-index-out-of-bounds\n  (CVE-2024-42148 bsc#1228487).\n- commit 8188617\n\n- inet_diag: Initialize pad field in struct inet_diag_req_v2\n  (CVE-2024-42106 bsc#1228493).\n- commit 71e61fd\n\n- tipc: fix kernel panic when enabling bearer (CVE-2022-48865\n  bsc#1228065).\n- commit a0e7a51\n\n- s390/sclp: Fix sclp_init() cleanup on failure (CVE-2024-41068\n  bsc#1228579).\n- commit 1a2e580\n\n- btrfs: fix processing of delayed tree block refs during backref\n  walking (bsc#1228982).\n- btrfs: Remove unused op_key var from add_delayed_refs\n  (bsc#1228982).\n- commit 1382fa0\n\n- tpm: tpm1_bios_measurements_next should increase position index\n  (bsc#1082555).\n- tpm: access command header through struct in tpm_try_transmit()\n  (bsc#1082555).\n- commit f79c4b3\n\n- blacklist.conf: Remove TPM fix.\n- commit 52faa19\n\n- blacklist.conf: Remove already included commit.\n- commit 3769b33\n\n- tpm: Prevent hwrng from activating during resume (bsc#1082555).\n- tpm: Allow system suspend to continue when TPM suspend fails\n  (bsc#1082555).\n- tpm: Add a flag to indicate TPM power is managed by firmware\n  (bsc#1082555).\n- commit 7eb0e28\n\n- blacklist.conf: add CVE-2022-48822, code not built\n- commit 8003a3d\n\n- tpm/tpm_crb: Fix error message in __crb_relinquish_locality()\n  (bsc#1082555).\n- commit a397ffb\n\n- tpm: Revert \u0026quot;tpm_tis_core: Set TPM_CHIP_FLAG_IRQ before probing\n  for interrupts\u0026quot; (bsc#1082555).\n- commit b8cd04a\n\n- xdp: Remove WARN() from __xdp_reg_mem_model() (bsc#1228482\n  CVE-2024-42082).\n- commit 3f265d8\n\n- blacklist.conf: 2cf49e00d40d drm/amd/amdkfd: Fix kernel panic when reset failed and been triggered again\n- commit f313cfb\n\n- pinctrl: fix deadlock in create_pinctrl() when handling\n  - EPROBE_DEFER (CVE-2024-42090 bsc#1228449).\n- commit f210b8f\n\n- drm/nouveau: fix null pointer dereference in nouveau_connector_get_modes (CVE-2024-42101 bsc#1228495).\n- commit f00bb1f\n\n- drm/amdgpu: Using uninitialized value *size when calling amdgpu_vce_cs_reloc (CVE-2024-42228 bsc#1228667).\n- commit d4e3f63\n\n- btrfs: send: fix send failure of a subcase of orphan inodes\n  (bsc#1228030).\n- btrfs: send: fix failures when processing inodes with no links\n  (bsc#1228030).\n- commit 9fd4ec5\n\n- btrfs: send: use boolean types for current inode status\n  (bsc#1228030).\n- commit 2ab676b\n\n- btrfs: send: refactor arguments of get_inode_info()\n  (bsc#1228030).\n- commit 3731717\n\n- kABI: Hide the new last_cc member in a hole in struct tpm_chip\n  (bsc#1082555).\n- commit fac3e7a\n\n- btrfs: send: always use the rbtree based inode ref management\n  infrastructure (bsc#1228030).\n- commit 252130e\n\n- btrfs: fix 64bit compat send ioctl arguments not initializing\n  version member (bsc#1228030).\n- btrfs: fix send ioctl on 32bit with 64bit kernel (bsc#1228030).\n- btrfs: send: add new command FILEATTR for file attributes\n  (bsc#1228030).\n- btrfs: send: add stream v2 definitions (bsc#1228030).\n- btrfs: send: avoid copying file data (bsc#1228030).\n- btrfs: send: explicitly number commands and attributes\n  (bsc#1228030).\n- btrfs: send: get rid of i_size logic in send_write()\n  (bsc#1228030).\n- btrfs: send: prepare for v2 protocol (bsc#1228030).\n- btrfs: send: remove unused send_ctx::{total,cmd}_send_size\n  (bsc#1228030).\n- Refresh\n  patches.suse/Btrfs-fix-race-between-send-and-deduplication-that-l.patch.\n- Refresh\n  patches.suse/btrfs-send-ensure-send_fd-is-writable.patch.\n- Refresh\n  patches.suse/btrfs-send-fix-sending-link-commands-for-existing-fi.patch.\n- commit 956ca27\n\n- x86/bhi: Avoid warning in #DB handler due to BHI mitigation (git-fixes).\n- commit f899605\n\n- Refresh patches.suse/IB-hfi1-Fix-bugs-with-non-PAGE_SIZE-end-multi-iovec-.patch\n  Alt-commit added\n  Blacklist the follow-up fix of the Alt-commit\n- commit c3542b0\n\n- ima: Fix use-after-free on a dentry's dname.name (bsc#1227716\n  CVE-2024-39494).\n- commit 2e3d558\n\n- x86/bugs: Replace CONFIG_SPECTRE_BHI_{ON,OFF} with CONFIG_MITIGATION_SPECTRE_BHI (git-fixes).\n- Update config files.\n- commit 4549b89\n\n- x86/bugs: Remove CONFIG_BHI_MITIGATION_AUTO and spectre_bhi=auto (git-fixes).\n  This commit was missing for SLE12-SP5 which made the performance profile\n  of SLE12-SP5 and SLE15-SP[56] differ. Our decision was to follow\n  upstream w.r.t how BHI is going to be mitigated and the decision was to\n  do away with 'auto' mode.\n- Update config files.\n- commit 02bfc90\n\n- Sort BHI mitigation patches\n- Refresh patches.suse/x86-bhi-Add-BHI-mitigation-knob.patch.\n- Refresh\n  patches.suse/x86-bhi-Add-support-for-clearing-branch-history-at-syscall.patch.\n- Refresh patches.suse/x86-bhi-Define-SPEC_CTRL_BHI_DIS_S.patch.\n- Refresh\n  patches.suse/x86-bhi-Enumerate-Branch-History-Injection-BHI-bug.patch.\n- Refresh patches.suse/x86-bhi-Mitigate-KVM-by-default.patch.\n- Refresh\n  patches.suse/x86-cpufeature-Add-missing-leaf-enumeration.patch.\n- commit f2f0729\n\n- PCI: hv: Return zero, not garbage, when reading\n  PCI_INTERRUPT_PIN (git-fixes).\n- commit 08ef890\n\n- kABI: do not rename tpm_do_selftest, tpm_pcr_read_dev, and tpm1_getcap\n  (bsc#1082555).\n- Delete patches.kabi/kABI-Do-not-rename-tpm_getcap.patch\n- commit 5a6f1d9\n\n- kABI: Do not rename tpm_getcap (bsc#1082555).\n- commit 01263dd\n\n- kABI: re-export tpm2_calc_ordinal_duration (bsc#1082555).\n- commit 1303a23\n\n- kABI: Instead of changing the pcr argument type add a local\n  variable of the desired type, and assign it from the actual\n  argument (bsc#1082555).\n- Refresh patches.kabi/kABI-do-not-rename-tpm_do_selftest-tpm_pcr_read_dev-.patch\n- commit e919992\n\n- kABI: no need to store the tpm long long duration in tpm_chip\n  struct, it is an arbitrary hardcoded value (bsc#1082555).\n- commit 75cc28e\n\n- kABI: do not change return type of tpm_tis_update_timeouts\n  (bsc#1082555).\n- commit 57d9ed9\n\n- Move kABI patch to kABI section.\n- commit 3f941d1\n\n- KVM: PPC: Book3S HV: remove extraneous asterisk from\n  rm_host_ipi_action() comment (bsc#1065729).\n- KVM: PPC: Book3S HV: Don't take kvm-\u0026gt;lock around\n  kvm_for_each_vcpu (bsc#1065729).\n- KVM: PPC: Book3S: Use new mutex to synchronize access to rtas\n  token list (bsc#1065729).\n- Refresh patches.suse/KVM-PPC-Book3S-Fix-H_RTAS-rets-buffer-overflow.patch\n- KVM: PPC: Book3S: Only report KVM_CAP_SPAPR_TCE_VFIO on powernv\n  machines (bsc#1065729).\n- KVM: PPC: Move and undef TRACE_INCLUDE_PATH/FILE (bsc#1065729).\n- KVM: PPC: Inform the userspace about TCE update failures\n  (bsc#1065729).\n- KVM: PPC: Book3S PR: Exiting split hack mode needs to fixup\n  both PC and LR (bsc#1065729).\n- commit ad6fee4\n\n- x86: stop playing stack games in profile_pc() (bsc#1228633\n  CVE-2024-42096).\n- commit 0bc3d2d\n\n- btrfs: send: remove stale code when checking for shared extents\n  (bsc#1228030).\n- btrfs: silence maybe-uninitialized warning in clone_range\n  (bsc#1228030).\n- commit 095e644\n\n- Btrfs: incremental send, fix emission of invalid clone\n  operations (bsc#1228030).\n- commit 88a98fe\n\n- Btrfs: send, improve clone range (bsc#1228030).\n- commit 8a72517\n\n- btrfs: remove unused members dir_path from recorded_ref\n  (bsc#1228030).\n- Refresh\n  patches.suse/btrfs-incremental-send-fix-invalid-path-for-unlink-commands.patch.\n- Refresh\n  patches.suse/btrfs-send-fix-sending-link-commands-for-existing-fi.patch.\n- commit 980e08a\n\n- liquidio: Adjust a NULL pointer handling path in\n  lio_vf_rep_copy_packet (CVE-2024-39506 bsc#1227729).\n- i40e: Fix queues reservation for XDP (CVE-2021-47619\n  bsc#1226645).\n- commit 37ce537\n\n- btrfs: send: remove unused found_type parameter to\n  lookup_dir_item_inode() (bsc#1228030).\n- commit bc238fe\n\n- scsi: qla2xxx: Convert comma to semicolon (bsc#1228850).\n- scsi: qla2xxx: Update version to 10.02.09.300-k (bsc#1228850).\n- scsi: qla2xxx: Use QP lock to search for bsg (bsc#1228850).\n- scsi: qla2xxx: Reduce fabric scan duplicate code (bsc#1228850).\n- scsi: qla2xxx: Fix optrom version displayed in FDMI\n  (bsc#1228850).\n- scsi: qla2xxx: During vport delete send async logout explicitly\n  (bsc#1228850).\n- scsi: qla2xxx: Complete command early within lock (bsc#1228850).\n- scsi: qla2xxx: Fix flash read failure (bsc#1228850).\n- scsi: qla2xxx: Return ENOBUFS if sg_cnt is more than one for\n  ELS cmds (bsc#1228850).\n- scsi: qla2xxx: Fix for possible memory corruption (bsc#1228850).\n- scsi: qla2xxx: validate nvme_local_port correctly (bsc#1228850).\n- scsi: qla2xxx: Unable to act on RSCN for port online\n  (bsc#1228850).\n- scsi: qla2xxx: Remove unused struct 'scsi_dif_tuple'\n  (bsc#1228850).\n- scsi: qla2xxx: Fix debugfs output for fw_resource_count\n  (bsc#1228850).\n- scsi: qla2xxx: Drop driver owner assignment (bsc#1228850).\n- scsi: qla2xxx: Avoid possible run-time warning with long\n  model_num (bsc#1228850).\n- string.h: Introduce memtostr() and memtostr_pad() (bsc#1228850).\n- commit 2402124\n\n- nvme: fixup comment for nvme RDMA Provider Type (git-fixes).\n- commit 67b36fc\n\n- IB/core: Implement a limit on UMAD receive List (bsc#1228743 CVE-2024-42145)\n- commit 9aa0d29\n\n- Update\n  patches.suse/Bluetooth-SCO-Fix-not-validating-setsockopt-user-inp.patch\n  (bsc#1224576 CVE-2024-35966 CVE-2024-35967 bsc#1224587).\n- Update\n  patches.suse/RDMA-mlx5-Add-check-for-srq-max_sge-attribute.patch\n  (git-fixes CVE-2024-40990 bsc#1227824).\n- Update\n  patches.suse/USB-class-cdc-wdm-Fix-CPU-lockup-caused-by-excessive.patch\n  (git-fixes CVE-2024-40904 bsc#1227772).\n- Update\n  patches.suse/ocfs2-fix-races-between-hole-punching-and-AIO-DIO.patch\n  (bsc#1227849 CVE-2024-40943).\n- Update\n  patches.suse/tracing-trigger-Fix-to-return-error-if-failed-to-alloc-snapshot.patch\n  (git-fixes CVE-2024-26920 bsc#1228237).\n- commit 71c68bc\n\n- Update\n  patches.suse/SUNRPC-Fix-UAF-in-svc_tcp_listen_data_ready.patch\n  (git-fixes CVE-2023-52885 bsc#1227750).\n- commit 4594a5d\n\n- Update\n  patches.suse/Input-aiptek-properly-check-endpoint-type.patch\n  (git-fixes CVE-2022-48836 bsc#1227989).\n- Update\n  patches.suse/net-ieee802154-at86rf230-Stop-leaking-skb-s.patch\n  (git-fixes CVE-2022-48794 bsc#1228025).\n- Update\n  patches.suse/net-packet-fix-slab-out-of-bounds-access-in-packet_r.patch\n  (CVE-2022-20368 bsc#1202346 CVE-2022-48839 bsc#1227985).\n- Update\n  patches.suse/net-usb-ax88179_178a-Fix-out-of-bounds-accesses-in-R.patch\n  (bsc#1196018 CVE-2022-28748 CVE-2022-2964 CVE-2022-48805\n  bsc#1227969).\n- commit 55fdbd1\n\n- scsi: qedf: Make qedf_execute_tmf() non-preemptible (CVE-2024-42124 bsc#1228705)\n- commit 7bd7589\n\n- media: dvb-frontends: tda10048: Fix integer overflow (CVE-2024-42223 bsc#1228726)\n- commit 4d685fd\n\n- drm/amd/display: Skip finding free audio for unknown engine_id (CVE-2024-42119 bsc#1228584)\n- commit f0a5549\n\n- drm/amd/display: Check pipe offset before setting vblank (CVE-2024-42120 bsc#1228588)\n- commit d85398e\n\n- drm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_ld_modes (CVE-2024-41095 bsc#1228662)\n- commit bb0cd8f\n\n- btrfs: send: fix sending link commands for existing file paths\n  (bsc#1228030).\n- commit 5a1f564\n\n- net: dsa: mv88e6xxx: Correct check for empty list (CVE-2024-42224 bsc#1228723)\n- commit f7ea584\n\n- wifi: cfg80211: wext: add extra SIOCSIWSCAN data check (CVE-2024-41072 bsc#1228626)\n- commit c131ba5\n\n- bpf, sockmap: Fix partial copy_page_to_iter so progress can still be made (CVE-2024-41048 bsc#1228565)\n- commit 79dff63\n\n- skmsg: Skip zero length skb in sk_msg_recvmsg (CVE-2024-41048 bsc#1228565)\n  Based on c9c89dcd872e (\u0026quot;bpf, sockmap: Fix partial copy_page_to_iter so\n  progress can still be made\u0026quot;), previous commit.\n  Upstream commit 2bc793e3272a13 (\u0026quot;skmsg: Extract __tcp_bpf_recvmsg() and\n  tcp_bpf_wait_data()\u0026quot;) moved the code from net/ipv4/tcp_bpf.c to\n  net/core/skmsg.c.\n- commit 80be5ae\n\n- net/sched: act_api: fix possible infinite loop in tcf_idr_check_alloc()\n  (CVE-2024-40995 bsc#1227830).\n- commit ee1ce8a\n\n- btrfs: send: introduce recorded_ref_alloc and recorded_ref_free\n  (bsc#1228030).\n- commit 2f5e245\n\n- cgroup/cpuset: Prevent UAF in proc_cpuset_show() (bsc#1228801).\n- commit e47e175\n\n- ppp: reject claimed-as-LCP but actually malformed packets\n  (CVE-2024-41044 bsc#1228530).\n- ibmvnic: Add tx check to prevent skb leak (CVE-2024-41066\n  bsc#1228640).\n- commit 0bdb098\n\n- net/dpaa2: Avoid explicit cpumask var allocation on stack\n  (CVE-2024-42093 bsc#1228680).\n- dpaa2-eth: Refactor xps code (CVE-2024-42093 bsc#1228680).\n- commit caf72f9\n\n- drm/nouveau/dispnv04: fix null pointer dereference in (bsc#1228658 CVE-2024-41089)\n- commit aec5d0e\n\n- drm/radeon: check bo_va-\u0026gt;bo is non-NULL before using it (bsc#1228567 CVE-2024-41060)\n- commit 7a28cea\n\n- NFSD: Fix NFSv3 SETATTR/CREATE's handling of large file sizes\n  (CVE-2022-48829 bsc#1228055).\n- NFSD: Fix ia_size underflow (CVE-2022-48828 bsc#1228054).\n- NFSD: Fix the behavior of READ near OFFSET_MAX (CVE-2022-48827\n  bsc#1228037).\n- commit 1c127f3\n\n- btrfs: qgroup: fix quota root leak after quota disable failure\n  (bsc#1228655 CVE-2024-41078).\n- commit 263e74a\n\n- wifi: mac80211: Avoid address calculations via out of bounds\n  array indexing (CVE-2024-41071 bsc#1228625).\n- commit be2129f\n\n- powerpc/eeh: avoid possible crash when edev-\u0026gt;pdev changes\n  (CVE-2024-41064 bsc#1228599).\n- commit 145d8ea\n\n- btrfs: make sure that WRITTEN is set on all metadata blocks (CVE-2024-35949 bsc#1224700)\n  Changes: adjust returned error codes to -EUCLEAN and drop definition of\n  the enum error.\n- commit 6dc890d\n\n- ila: block BH in ila_output() (CVE-2024-41081 bsc#1228617)\n- commit 9ec349b\n\n- scsi: qedi: Fix crash while reading debugfs attribute\n  (bsc#1227929 CVE-2024-40978).\n- scsi: pm8001: Fix use-after-free for aborted SSP/STP sas_task\n  (bsc#1228013 CVE-2022-48792).\n- scsi: qedf: Fix refcount issue when LOGO is received during TMF\n  (bsc#1228045 CVE-2022-48823).\n- commit 2a5c419\n\n- blacklist.conf: CVE-2024-41076 bsc#1228649: not applicable\n  Different code using a local variable, switch to dynamic allocation done\n  in 1b00ad657997c8 (\u0026quot;NFS: Remove the nfs4_label from the nfs_setattrres\u0026quot;)\n  in 5.16.\n- commit ff35317\n\n- ext4: fix uninitialized ratelimit_state-\u0026gt;lock access in\n  __ext4_fill_super() (bsc#1227866 CVE-2024-40998).\n- commit 5fe487a\n\n- hfsplus: fix uninit-value in copy_name (bsc#1228561\n  CVE-2024-41059).\n- commit 8d75c30\n\n- usb: musb: da8xx: fix a resource leak in probe() (git-fixes).\n- commit bc4c361\n\n- usb: atm: cxacru: fix endpoint checking in cxacru_bind()\n  (git-fixes).\n- commit c9a5140\n\n- USB: class: cdc-wdm: Fix CPU lockup caused by excessive log\n  messages (git-fixes).\n- commit 7c21caa\n\n- blacklist.conf: misattributed\n- commit 3e3428a\n\n- drm/amdgpu: fix UBSAN warning in kv_dpm.c (bsc#1228235 CVE-2024-40987)\n- commit 60606a5\n\n- drm/vc4: Fix deadlock on DSI device attach error (bsc#1227975 CVE-2022-48826)\n- commit bcda77c\n\n- drm/vc4: dsi: Only register our component once a DSI device is (bsc#1227975)\n- commit 0a73252\n\n- genirq: Add IRQF_NO_AUTOEN for request_irq/nmi() (bsc#1222625\n  CVE-2024-27437).\n- commit 351bbe3\n\n- ocfs2: add bounds checking to ocfs2_check_dir_entry()\n  (bsc#1228409 CVE-2024-41015).\n- ocfs2: strict bound check before memcmp in\n  ocfs2_xattr_find_entry() (bsc#1228410).\n- ocfs2: add bounds checking to ocfs2_xattr_find_entry()\n  (bsc#1228410 CVE-2024-41016).\n- ocfs2: remove redundant assignment to variable free_space\n  (bsc#1228409).\n- commit 2a658bc\n\n- vfio/pci: Disable auto-enable of exclusive INTx IRQ (bsc#1222625\n  CVE-2024-27437).\n- commit 9829ce8\n\n- Fix reference in patches.suse/ixgbe-Fix-NULL-pointer-dereference-in-ixgbe_xdp_setu.patch (CVE-2021-47399 bsc#1225328)\n- commit 7933225\n\n- ocfs2: fix DIO failure due to insufficient transaction credits\n  (bsc#1216834).\n- commit e4fdc60\n\n- Bluetooth: hci_core: cancel all works upon hci_unregister_dev() (CVE-2024-41063 bsc#1228580)\n- commit 95070bc\n\n- netfilter: nf_tables: fully validate NFT_DATA_VALUE on store to data registers (CVE-2024-42070 bsc#1228470)\n- commit d9e81e6\n\n- KVM: PPC: Book3S: Fix some RCU-list locks (git-fixes).\n- commit e20a5cb\n\n- KVM: PPC: Book3S HV: Prevent UAF in\n  kvm_spapr_tce_attach_iommu_group() (bsc#1228581 CVE-2024-41070).\n- commit 1cd5894\n\n- tpm: use tpm_msleep() value as max delay (bsc#1082555).\n- Refresh patches.suse/tpm-use-struct-tpm_chip-for-tpm_chip_find_get.patch\n- commit fd76767\n\n- tpm_tis: Resend command to recover from data transfer errors\n  (bsc#1082555).\n- tpm_tis: Explicitly check for error code (bsc#1082555).\n- tpm: tpm_vtpm_proxy: fix a race condition in /dev/vtpmx creation\n  (bsc#1082555).\n- tpm, tpm_tis: correct tpm_tis_flags enumeration values\n  (bsc#1082555).\n- tpm_tis: Use tpm_chip_{start,stop} decoration inside\n  tpm_tis_resume (bsc#1082555).\n- tpm, tpm_tis: Claim locality when interrupts are reenabled on\n  resume (bsc#1082555).\n- tpm, tpm: Implement usage counter for locality (bsc#1082555).\n- tpm, tpm_tis: Only handle supported interrupts (bsc#1082555).\n- tpm, tpm_tis: Claim locality before writing interrupt registers\n  (bsc#1082555).\n- tpm, tpm_tis: Do not skip reset of original interrupt vector\n  (bsc#1082555).\n- tpm, tpm_tis: Disable interrupts if tpm_tis_probe_irq() failed\n  (bsc#1082555).\n- tpm, tpm_tis: Claim locality before writing TPM_INT_ENABLE\n  register (bsc#1082555).\n- tpm, tpm_tis: Avoid cache incoherency in test for interrupts\n  (bsc#1082555).\n- tpm: tpm_tis: Add the missed acpi_put_table() to fix memory leak\n  (bsc#1082555).\n- tpm: tpm_crb: Add the missed acpi_put_table() to fix memory leak\n  (bsc#1082555).\n- char: tpm: Protect tpm_pm_suspend with locks (bsc#1082555).\n- tpm: Fix buffer access in tpm2_get_tpm_pt() (bsc#1082555).\n- tpm: Fix error handling in async work (bsc#1082555).\n- tpm: fix NPE on probe for missing device (bsc#1082555).\n- tpm_tis: Fix an error handling path in 'tpm_tis_core_init()'\n  (bsc#1082555).\n- tpm: fix Atmel TPM crash caused by too frequent queries\n  (bsc#1082555).\n- tpm: Replace WARN_ONCE() with dev_err_once() in tpm_tis_status()\n  (bsc#1082555).\n- tpm, tpm_tis: Reserve locality in tpm_tis_resume()\n  (bsc#1082555).\n- tpm, tpm_tis: Extend locality handling to TPM2 in\n  tpm_tis_gen_interrupt() (bsc#1082555).\n- tpm: vtpm_proxy: Avoid reading host log when using a virtual\n  device (bsc#1082555).\n- tpm, tpm_tis: Decorate tpm_tis_gen_interrupt() with\n  request_locality() (bsc#1082555).\n- tpm, tpm_tis: Decorate tpm_get_timeouts() with\n  request_locality() (bsc#1082555).\n- tpm: Remove tpm_dev_wq_lock (bsc#1082555).\n- tpm_tis: Add a check for invalid status (bsc#1082555).\n- kABI: tpm2-space: Do not add buf_size to struct tpm_space\n  (bsc#1082555).\n- tpm: Unify the mismatching TPM space buffer sizes (bsc#1082555).\n- Refresh patches.suse/tpm-fix-reference-counting-for-struct-tpm_chip.patch\n- tpm: Fix TIS locality timeout problems (bsc#1082555).\n- tpm: Handle negative priv-\u0026gt;response_len in tpm_common_read()\n  (bsc#1082555).\n- tpm: Revert \u0026quot;tpm_tis_core: Turn on the TPM before probing IRQ's\u0026quot;\n  (bsc#1082555).\n- tpm: Revert \u0026quot;tpm_tis: reserve chip for duration of\n  tpm_tis_core_init\u0026quot; (bsc#1082555).\n- Refresh patches.suse/tpm_tis-extra-chip-ops-check-on-error-path-in-tpm_ti.patch\n- tpm: fix invalid locking in NONBLOCKING mode (bsc#1082555).\n- tpm_tis: reserve chip for duration of tpm_tis_core_init\n  (bsc#1082555).\n- Refresh patches.suse/tpm_tis-extra-chip-ops-check-on-error-path-in-tpm_ti.patch\n- tpm: Wrap the buffer from the caller to tpm_buf in tpm_send()\n  (bsc#1082555).\n- tpm_tis_core: Turn on the TPM before probing IRQ's\n  (bsc#1082555).\n- Refresh patches.suse/tpm_tis_core-Set-TPM_CHIP_FLAG_IRQ-before-probing-fo.patch\n- tpm: Fix null pointer dereference on chip register error path\n  (bsc#1082555).\n- tpm: Actually fail on TPM errors during \u0026quot;get random\u0026quot;\n  (bsc#1082555).\n- tpm: fix an invalid condition in tpm_common_poll (bsc#1082555).\n- tpm: turn on TPM on suspend for TPM 1.x (bsc#1082555).\n- tpm: remove @flags from tpm_transmit() (bsc#1082555).\n- Refresh patches.suse/tpm-Fix-TPM-1.2-Shutdown-sequence-to-prevent-future-.patch\n- Refresh patches.suse/tpm-add-request_locality-before-write-TPM_INT_ENABLE.patch\n- Refresh patches.suse/tpm-fix-potential-NULL-pointer-access-in-tpm_del_cha.patch\n- Refresh patches.kabi/kABI-Instead-of-changing-the-pcr-argument-type-add-a.patch\n- tpm: take TPM chip power gating out of tpm_transmit()\n  (bsc#1082555).\n- Refresh patches.suse/tpm-Fix-TPM-1.2-Shutdown-sequence-to-prevent-future-.patch\n- Refresh patches.suse/tpm-add-request_locality-before-write-TPM_INT_ENABLE.patch\n- Refresh patches.suse/tpm-fix-potential-NULL-pointer-access-in-tpm_del_cha.patch\n- tpm: introduce tpm_chip_start() and tpm_chip_stop()\n  (bsc#1082555).\n- tpm: remove TPM_TRANSMIT_UNLOCKED flag (bsc#1082555).\n- tpm: use tpm_try_get_ops() in tpm-sysfs.c (bsc#1082555).\n- tpm: remove @space from tpm_transmit() (bsc#1082555).\n- tpm: move TPM space code out of tpm_transmit() (bsc#1082555).\n- tpm: move tpm_validate_commmand() to tpm2-space.c (bsc#1082555).\n- Refresh patches.suse/tpm-fix-reference-counting-for-struct-tpm_chip.patch\n- tpm: clean up tpm_try_transmit() error handling flow\n  (bsc#1082555).\n- tpm: encapsulate tpm_dev_transmit() (bsc#1082555).\n- tpm: declare struct tpm_header (bsc#1082555).\n- Refresh patches.suse/tpm-fix-reference-counting-for-struct-tpm_chip.patch\n- tpm: print tpm2_commit_space() error inside tpm2_commit_space()\n  (bsc#1082555).\n- Refresh patches.suse/tpm-fix-reference-counting-for-struct-tpm_chip.patch\n- tpm: return 0 from pcrs_show() when tpm1_pcr_read() fails\n  (bsc#1082555).\n- tpm: fix invalid return value in pubek_show() (bsc#1082555).\n- tpm: use tpm_buf in tpm_transmit_cmd() as the IO parameter\n  (bsc#1082555).\n- tpm: don't return bool from update_timeouts (bsc#1082555).\n- tpm: add support for partial reads (bsc#1082555).\n- tpm: use u32 instead of int for PCR index (bsc#1082555).\n- Refresh patches.kabi/kABI-do-not-rename-tpm_do_selftest-tpm_pcr_read_dev-.patch\n- tpm1: reimplement tpm1_continue_selftest() using tpm_buf\n  (bsc#1082555).\n- tpm1: reimplement SAVESTATE using tpm_buf (bsc#1082555).\n- tpm1: rename tpm1_pcr_read_dev to tpm1_pcr_read() (bsc#1082555).\n- Refresh patches.kabi/kABI-do-not-rename-tpm_do_selftest-tpm_pcr_read_dev-.patch\n- tpm1: implement tpm1_pcr_read_dev() using tpm_buf structure\n  (bsc#1082555).\n- tpm: tpm1: rewrite tpm1_get_random() using tpm_buf structure\n  (bsc#1082555).\n- tpm: add tpm_auto_startup() into tpm-interface.c (bsc#1082555).\n- tpm: factor out tpm_startup function (bsc#1082555).\n- tpm: factor out tpm 1.x pm suspend flow into tpm1-cmd.c\n  (bsc#1082555).\n- Refresh patches.kabi/kABI-do-not-rename-tpm_do_selftest-tpm_pcr_read_dev-.patch\n- tpm: move tpm 1.x selftest code from tpm-interface.c tpm1-cmd.c\n  (bsc#1082555).\n- Refresh patches.kabi/kABI-Do-not-rename-tpm_getcap.patch\n- tpm: factor out tpm1_get_random into tpm1-cmd.c (bsc#1082555).\n- Refresh patches.kabi/kABI-Do-not-rename-tpm_getcap.patch\n- tpm: move tpm_getcap to tpm1-cmd.c (bsc#1082555).\n- tpm: move tpm1_pcr_extend to tpm1-cmd.c (bsc#1082555).\n- tpm: factor out tpm_get_timeouts() (bsc#1082555).\n- Refresh patches.kabi/kABI-no-need-to-store-the-tpm-long-long-duration-in-.patch\n- tpm: add tpm_calc_ordinal_duration() wrapper (bsc#1082555).\n- tpm: factor out tpm 1.x duration calculation to tpm1-cmd.c\n  (bsc#1082555).\n- tpm: add support for nonblocking operation (bsc#1082555).\n- Refresh patches.suse/tpm-fix-reference-counting-for-struct-tpm_chip.patch\n- tpm: add ptr to the tpm_space struct to file_priv (bsc#1082555).\n- tpm: replace TPM_TRANSMIT_RAW with TPM_TRANSMIT_NESTED\n  (bsc#1082555).\n- tpm: rename tpm_chip_find_get() to tpm_find_get_ops()\n  (bsc#1082555).\n- tpm: migrate tpm2_get_random() to use struct tpm_buf\n  (bsc#1082555).\n- Refresh patches.suse/tpm-fix-response-size-validation-in-tpm_get_random.patch\n- tpm: migrate tpm2_get_tpm_pt() to use struct tpm_buf\n  (bsc#1082555).\n- tpm: migrate tpm2_probe() to use struct tpm_buf (bsc#1082555).\n- tpm: migrate tpm2_shutdown() to use struct tpm_buf\n  (bsc#1082555).\n- tpm2: add longer timeouts for creation commands (bsc#1082555).\n- tpm: fix buffer type in tpm_transmit_cmd (bsc#1082555).\n- tpm: migrate pubek_show to struct tpm_buf (bsc#1082555).\n- tpm: vtpm_proxy: Prevent userspace from sending driver command\n  (bsc#1082555).\n- tpm, tpmrm: Mark tpmrm_write as static (bsc#1082555).\n- tpm: remove struct tpm_pcrextend_in (bsc#1082555).\n- Refresh patches.suse/tpm-consolidate-the-TPM-startup-code.patch\n- tpm: fix byte order related arithmetic inconsistency in\n  tpm_getcap() (bsc#1082555).\n- Refresh patches.suse/tpm-consolidate-the-TPM-startup-code.patch\n- tpm: move TPM 1.2 code of tpm_pcr_extend() to tpm1_pcr_extend()\n  (bsc#1082555).\n- Refresh patches.suse/tpm-use-struct-tpm_chip-for-tpm_chip_find_get.patch\n- commit 989dcf1\n\n- HID: usbhid: free raw_report buffers in usbhid_stop (bsc#1225238\n  CVE-2021-47405).\n- commit 67ff2bd\n\n- drm/radeon: fix UBSAN warning in kv_dpm.c (bsc#1227957 CVE-2024-40988)\n- commit 4f641c6\n\n- drm/exynos/vidi: fix memory leak in .get_modes() (bsc#1227828 CVE-2024-40932)\n- commit d694b72\n\n- ipack: ipoctal: fix module reference leak (bsc#1225241\n  CVE-2021-47403).\n- commit 3f2bac7\n\n- mac80211: fix use-after-free in CCMP/GCMP RX (bsc#1225214\n  CVE-2021-47388).\n- commit 180ca41\n\n- xfs: refactor xfs_verifier_error and xfs_buf_ioerror\n  (git-fixes).\n- Refresh\n  patches.suse/xfs-don-t-ever-return-a-stale-pointer-from-__xfs_dir.patch.\n- commit ac4dc1f\n\n- xfs: remove XFS_WANT_CORRUPTED_RETURN from dir3 data verifiers\n  (git-fixes).\n- commit 5d31a73\n\n- xfs: check that dir block entries don't off the end of the\n  buffer (git-fixes).\n- commit 46f96de\n\n- xfs: add bounds checking to xlog_recover_process_data\n  (bsc#1228408 CVE-2024-41014).\n- commit b3db770\n\n- tun: add missing verification for short frame (CVE-2024-41091\n  bsc#1228327).\n- tap: add missing verification for short frame (CVE-2024-41090\n  bsc#1228328).\n- net: ena: Add validation for completion descriptors consistency\n  (CVE-2024-40999 bsc#1227913).\n- net: mvpp2: clear BM pool before initialization (CVE-2024-35837\n  bsc#1224500).\n- commit 69b68ee\n\n- Update\n  patches.suse/xhci-Fix-incorrect-tracking-of-free-space-on-transfe.patch.\n  Fix a backporting mistake which was causing the following warning:\n  drivers/usb/host/xhci-ring.c: In function 'xhci_queue_intr_tx':\n  drivers/usb/host/xhci-ring.c:3255:6: warning: unused variable 'trbs_freed' [-Wunused-variable]\n- commit 787d888\n\n- xhci: Poll for U0 after disabling USB2 LPM (git-fixes).\n- commit c66374c\n\n- blacklist.conf: changes semantics\n- commit eaf3cb6\n\n- sit: do not call ipip6_dev_free() from sit_init_net()\n  (CVE-2021-47588 bsc#1226568).\n- commit 9afcbd9\n\n- ipv6: sr: fix incorrect unregister order (git-fixes).\n- commit 9f9395f\n\n- Refresh\n  patches.suse/powerpc-rtas-Prevent-Spectre-v1-gadget-construction-.patch.\n- commit af33133\n\n- vt_ioctl: fix array_index_nospec in vt_setactivate\n  (CVE-2022-48804 bsc#1227968).\n- commit ee44df4\n\n- serial: imx: Introduce timeout when waiting on transmitter empty\n  (CVE-2024-40967 bsc#1227891).\n- commit 9b7db88\n\n- kABI: tty: add the option to have a tty reject a new ldisc\n  (kabi CVE-2024-40966 bsc#1227886).\n- tty: add the option to have a tty reject a new ldisc\n  (CVE-2024-40966 bsc#1227886).\n- commit 16b4088\n\n- net-sysfs: add check for netdevice being present to speed_show (CVE-2022-48850 bsc#1228071)\n- commit 9fdf37b\n\n- Update\n  patches.suse/scsi-scsi_debug-Fix-out-of-bound-read-in-resp_report_tgtpgs.patch\n  (bsc#1222824 CVE-2021-47219).\n  Fix incorrect Bug number and incorrect CVE number.\n- commit b4dbf5c\n\n- blacklist.conf: kABI\n- commit 6f08f5c\n\n- Update\n  patches.suse/scsi-lpfc-Release-hbalock-before-calling-lpfc_worker_wake_up.patch\n  (bsc#1225820 CVE-2024-36924).\n  Fix incorrect CVE number.\n- commit cb94423\n\n- Update\n  patches.suse/nvme-rdma-remove-redundant-reference-between-ib_devi.patch\n  (bsc#1149446).\n  Fix bug reference (missing digit).\n- commit 4f5320f\n\n- Update patches.suse/ovl-fix-failure-to-fsync-lower-dir.patch\n  (bsc#1088701).\n  Fix bug reference (missing digit).\n- commit 718aec5\n\n- usb: core: Don't hold the device lock while sleeping in\n  do_proc_control() (CVE-2021-47582 bsc#1226559).\n- commit ff00ceb\n\n- USB: usbfs: fix mmap dma mismatch (CVE-2021-47582 bsc#1226559).\n- commit 6c5305a\n\n- usb: add a hcd_uses_dma helper (git-fixes).\n- commit f8aa53d\n\n- ssb: Fix potential NULL pointer dereference in\n  ssb_device_uevent() (CVE-2024-40982 bsc#1227865).\n- commit 9fbb468\n\n- isdn: mISDN: Fix sleeping function called from invalid context\n  (bsc#1225346 CVE-2021-47468).\n- commit 34167c4\n\n- mac80211: limit injected vht mcs/nss in\n  ieee80211_parse_tx_radiotap (bsc#1225326 CVE-2021-47395).\n- commit 2fdeaab\n\n- tools lib: Fix builds when glibc contains strlcpy() (git-fixes).\n- blacklist.conf: unblaclist it\n  This commit allows for local builds with newer glibc.\n- commit 480e775\n\n- PCI: Fix resource double counting on remove \u0026amp; rescan\n  (git-fixes).\n- commit 68ca613\n\n- ipmr,ip6mr: acquire RTNL before calling ip[6]mr_free_table()\n  on failure path (CVE-2022-48810 bsc#1227936).\n- commit 7af1a4f\n\n- blacklist.conf: add one pci entry\n- commit 0f5e70f\n\n- wifi: ath9k: Fix potential array-index-out-of-bounds read in\n  ath9k_htc_txstatus() (CVE-2023-52594 bsc#1221045).\n- commit d04a718\n\n- sctp: fix kernel-infoleak for SCTP sockets (CVE-2022-48855\n  bsc#1228003).\n- commit 5317e78\n\n- scsi: scsi_debug: Fix out-of-bound read in resp_report_tgtpgs()\n  (bsc#1226550 CVE-2021-47580).\n- commit 72ff240\n\n- ipv6: sr: fix possible use-after-free and null-ptr-deref\n  (bsc#1222372 CVE-2024-26735).\n- commit 5258c5a\n\n- signal: Introduce clear_siginfo (git-fixes).\n- commit 276fe89\n\n- Update\n  patches.suse/scsi-scsi_debug-Fix-type-in-min_t-to-avoid-stack-OOB.patch\n  (bsc#1226550 CVE-2021-47580).\n  Fix incorrect bug#\n- commit a8e747b\n\n- scsi: bfa: Ensure the copied buf is NUL terminated (bsc#1226786\n  CVE-2024-38560).\n- commit 2623515\n\n- ibmvnic: don't release napi in __ibmvnic_open() (bsc#1227928\n  CVE-2022-48811).\n- commit b1dc7a1\n\n- Update References\n  patches.suse/Bluetooth-SMP-Fail-if-remote-and-local-public-keys-a.patch\n  (bsc#1186463, CVE-2021-0129, CVE-2020-26558, bsc#1179610,\n  CVE-2020-26558).\n- commit ef3041a\n\n- gve: Clear napi-\u0026gt;skb before dev_kfree_skb_any() (CVE-2024-40937\n  bsc#1227836).\n- net: hns3: fix kernel crash problem in concurrent scenario\n  (CVE-2024-39507 bsc#1227730).\n- ibmvnic: don't release napi in __ibmvnic_open() (CVE-2022-48811\n  bsc#1227928).\n- commit 753a87a\n\n- Refresh\n  patches.suse/ipv6-sr-fix-missing-sk_buff-release-in-seg6_input_co.patch.\n  Fix broken patch, which only applys with rapidquilt but not with normal\n  patch.\n- commit 9ba3403\n\n- vmxnet3: disable rx data ring on dma allocation failure\n  (CVE-2024-40923 bsc#1227786).\n- commit 4f3a9e9\n\n- wifi: iwlwifi: mvm: don't read past the mfuart notifcation\n  (git-fixes CVE-2024-40941 bsc#1227771).\n- commit e4b5384\n\n- ethernet: Fix error handling in xemaclite_of_probe (CVE-2022-48860 bsc#1228008)\n- commit f50353a\n\n- Bluetooth: RFCOMM: Fix not validating setsockopt user input\n  (bsc#1224576 CVE-2024-35966).\n- commit 68cb9dc\n\n- mISDN: Fix memory leak in dsp_pipeline_build() (CVE-2022-48863\n  bsc#1228063).\n- commit 98e043d\n\n- KVM: Fix a data race on last_boosted_vcpu in kvm_vcpu_on_spin()\n  (CVE-2024-40953, bsc#1227806).\n- commit b18a093\n\n- vmci: prevent speculation leaks by sanitizing event in event_deliver() (CVE-2024-39499 bsc#1227725)\n- commit d42ba53\n\n- HID: core: remove unnecessary WARN_ON() in implement() (CVE-2024-39509 bsc#1227733)\n- commit fe2364e\n\n- bonding: Fix out-of-bounds read in bond_option_arp_ip_targets_set() (CVE-2024-39487 bsc#1227573)\n- commit b775587\n\n- blacklist.conf: CVE-2024-35934 bsc#1224641: not applicable\n  Patch fixing code that does not exist in SLE12-SP5 and there's no\n  equivalent either. Added by e888a2e8337c96 (\u0026quot;net/smc: introduce list of\n  pnetids for Ethernet devices\u0026quot;).\n- commit 4b9f331\n\n- Update\n  patches.suse/scsi-scsi_debug-Fix-out-of-bound-read-in-resp_readcap16.patch.\n  Fix a build warning about using min() vs min_t().\n- commit a4b6164\n\n- xfrm6: check ip6_dst_idev() return value in xfrm6_get_saddr()\n  (CVE-2024-40959 bsc#1227884).\n- commit 38ba090\n\n- ocfs2: fix races between hole punching and AIO+DIO (CVE-2024-40943 bsc#1227849).\n- commit a8b4b50\n\n- net/sched: act_skbmod: prevent kernel-infoleak (CVE-2024-35893 bsc#1224512)\n- commit 3a867bb\n\n- ixgbe: Fix NULL pointer dereference in ixgbe_xdp_setup (CVE-2021-47399 1225328)\n- commit f559799\n\n- mlxsw: thermal: Fix out-of-bounds memory accesses (CVE-2021-47441 bsc#1225224)\n  Simplified backport. Upstream patch removes code that does not exist in\n  SLE12-SP5, the only relevant fix is the bounds checking.\n- commit 0b8797d\n\n- cfg80211: call cfg80211_stop_ap when switch from P2P_GO type (CVE-2021-47194 bsc#1222829)\n- commit 6cc8bdc\n\n- netfilter: nf_tables: Fix potential data-race in __nft_expr_type_get() (CVE-2024-27020 bsc#1223815)\n- commit cfe8cf0\n\n- net: mana: Fix the extra HZ in mana_hwc_send_request (git-fixes).\n- net: mana: select PAGE_POOL (git-fixes).\n- hv_netvsc: rndis_filter needs to select NLS (git-fixes).\n- Drivers: hv: vmbus: Fix memory leak in vmbus_add_channel_kobj (git-fixes, bsc#1227924, CVE-2022-48775).\n- Tools: hv: kvp: eliminate 'may be used uninitialized' warning (git-fixes).\n- tools: hv: fix KVP and VSS daemons exit code (git-fixes).\n- commit 51c2361\n\n- netfilter: nf_tables: Fix potential data-race in __nft_obj_type_get() (CVE-2024-27019 bsc#1223813)\n- commit 2fcd5af\n\n- wifi: iwlwifi: mvm: check n_ssids before accessing the ssids\n  (CVE-2024-40929 bsc#1227774).\n- wifi: mac80211: Fix deadlock in\n  ieee80211_sta_ps_deliver_wakeup() (CVE-2024-40912 bsc#1227790).\n- wifi: mac80211: mesh: Fix leak of mesh_preq_queue objects\n  (CVE-2024-40942 bsc#1227770).\n- NFC: port100: fix use-after-free in port100_send_complete\n  (CVE-2022-48857 bsc#1228005).\n- commit 1f497da\n\n- ipv6: fib6_rules: avoid possible NULL dereference in\n  fib6_rule_action() (CVE-2024-36902 bsc#1225719).\n- commit 4cdf9a2\n\n- USB: core: Make do_proc_control() and do_proc_bulk() killable\n  (CVE-2021-47582 bsc#1226559).\n- commit 6d322e2\n\n- net: netlink: af_netlink: Prevent empty skb by adding a check\n  on len (CVE-2021-47606 bsc#1226555).\n- commit 314dfef\n\n- usb: get rid of pointless access_ok() calls (CVE-2021-47582\n  bsc#1226559).\n- commit 6b48efc\n\n- usb: usbfs: correct kernel-\u0026gt;user page attribute mismatch\n  (CVE-2021-47582 bsc#1226559).\n- commit d089a07\n\n- USB: usbfs: Always unlink URBs in reverse order (CVE-2021-47582\n  bsc#1226559).\n- commit 2364ecb\n\n- usb: core: devio.c: Fix assignment of 0/1 to bool variables\n  (CVE-2021-47582 bsc#1226559).\n- commit 202a764\n\n- usb: usbfs: only account once for mmap()'ed usb memory usage\n  (CVE-2021-47582 bsc#1226559).\n- commit a282a95\n\n- USB: core: Fix compiler warnings in devio.c (CVE-2021-47582\n  bsc#1226559).\n- commit d3c8045\n\n- usb: core: Replace hardcoded check with inline function from\n  usb.h (CVE-2021-47582 bsc#1226559).\n- commit a0c8b54\n\n- usb: usbfs: use irqsave() in USB's complete callback\n  (CVE-2021-47582 bsc#1226559).\n- commit 89f4a73\n\n- signal: Replace memset(info,...) with clear_siginfo for clarity\n  (CVE-2021-47582 bsc#1226559).\n- commit 10e5b53\n\n- usbdevfs: get rid of field-by-field copyin (CVE-2021-47582\n  bsc#1226559).\n- commit 9053160\n\n- scsi: mpt3sas: Avoid test/set_bit() operating in non-allocated\n  memory (bsc#1227762 CVE-2024-40901).\n- scsi: lpfc: Release hbalock before calling lpfc_worker_wake_up()\n  (bsc#1225820 CVE-2024-26924).\n- scsi: scsi_debug: Fix type in min_t to avoid stack OOB\n  (bsc#1226560 CVE-2021-47580).\n- commit 4de5c4e\n\n- i40e: Fix VF MAC filter removal (CVE-2024-26830 bsc#1223012).\n- commit 55935e5\n\n- i40e: Do not allow untrusted VF to remove administratively\n  set MAC (CVE-2024-26830 bsc#1223012).\n- nfp: Fix memory leak in nfp_cpp_area_cache_add() (CVE-2021-47516\n  bsc#1225427).\n- i40e: Fix NULL pointer dereference in i40e_dbg_dump_desc\n  (CVE-2021-47501 bsc#1225361).\n- commit e2ee4f5\n\n- net: ieee802154: fix null deref in parse dev addr (CVE-2021-47257 bsc#1224896).\n- commit 41e01f4\n\n- net/smc: Transitional solution for clcsock race issue (CVE-2022-48751 bsc#1226653). - Refresh patches.suse/net-smc-fix-fallback-failed-while-sendmsg-with-fasto.patch.\n- commit 7ad7d3a\n\n- drivers: core: synchronize really_probe() and dev_uevent()\n  (CVE-2024-39501 bsc#1227754).\n- commit 1b7df5b\n\n- ice: Do not use WQ_MEM_RECLAIM flag for workqueue (CVE-2023-52743 bsc#1225003)\n- commit 0b6d94a\n\n- net: qlogic: qlcnic: Fix a NULL pointer dereference in qlcnic_83xx_add_rings() (CVE-2021-47542 bsc#1225455)\n- commit ce2e7bb\n\n- ipv6: prevent NULL dereference in ip6_output() (CVE-2024-36901 bsc#1225711)\n- commit ab46189\n\n- i40e: Do not use WQ_MEM_RECLAIM flag for workqueue (CVE-2024-36004 bsc#1224545)\n- commit de141a1\n\n- nbd: null check for nla_nest_start (CVE-2024-27025 bsc#1223778)\n- commit b887966\n\n- btrfs: use latest_dev in btrfs_show_devname (CVE-2021-47599 bsc#1226571)\n  Simplified backport, keep mutex protection and only remove WARN_ON.\n- commit 2ee6fb6\n\n- net: prevent mss overflow in skb_segment() (CVE-2023-52435\n  bsc#1220138).\n- commit 63a8256\n\n- tipc: Check the bearer type before calling\n  tipc_udp_nl_bearer_add() (CVE-2024-26663 bsc#1222326).\n- commit 91299f0\n\n- inet_diag: fix kernel-infoleak for UDP sockets\n  (CVE-2021-47597 bsc#1226553).\n- commit 5ef7515\n\n- ipv6: sr: fix missing sk_buff release in seg6_input_core\n  (bsc#1227626 CVE-2024-39490).\n- net: openvswitch: fix overwriting ct original tuple for  ICMPv6\n  (bsc#1226783 CVE-2024-38558).\n- net/smc: fix illegal rmb_desc access in SMC-D connection dump\n  (bsc#1220942 CVE-2024-26615).\n- commit ee46311\n\n- kabi/severities: Ignore tpm_transmit_cmd and tpm_tis_core_init\n  (bsc#1082555).\n- commit c8a552a\n\n- Bluetooth: SCO: Fix not validating setsockopt user input\n  (bsc#1224576 CVE-2024-35966).\n- commit d80abbf\n\n- Update\n  patches.suse/SUNRPC-Fix-loop-termination-condition-in-gss_free_in.patch\n  (git-fixes CVE-2024-36288 bsc#1226834).\n- Update\n  patches.suse/arm64-asm-bug-Add-.align-2-to-the-end-of-__BUG_ENTRY.patch\n  (git-fixes CVE-2024-39488 bsc#1227618).\n- Update\n  patches.suse/ax25-fix-use-after-free-bugs-caused-by-ax25_ds_del_t.patch\n  (CVE-2024-35887 bzg#1224663 bsc#1224663).\n- Update\n  patches.suse/net-mlx5e-nullify-cq-dbg-pointer-in-mlx5_debug_cq_re.patch\n  (bsc#1225229 CVE-2021-47438 CVE-2021-47197 bsc#1222776).\n- Update\n  patches.suse/nfs-Handle-error-of-rpc_proc_register-in-nfs_net_ini.patch\n  (git-fixes CVE-2024-36939 bsc#1225838).\n- Update\n  patches.suse/scsi-lpfc-Move-NPIV-s-transport-unregistration-to-after-resource-clean-up.patch\n  (bsc#1225898 CVE-2024-36592 CVE-2024-36952).\n- Update\n  patches.suse/scsi-scsi_debug-Fix-out-of-bound-read-in-resp_readcap16.patch\n  (bsc#122286 CVE-2021-47191 bsc#1222866).\n- Update\n  patches.suse/soc-fsl-qbman-Always-disable-interrupts-when-taking-.patch\n  (bsc#1224683 CVE-2024-35819 CVE-2024-35806 bsc#1224699).\n- commit 81c691f\n\n- pstore/ram: Fix crash when setting number of cpus to an odd number (bsc#1221618, CVE-2023-52619).\n- commit 03ca866\n\n- Fix build warning\n  Refresh\n  patches.suse/PM-hibernate-x86-Use-crc32-instead-of-md5-for-hibernation-.patch.\n- commit 33d6e41\n\n- xhci: Fix incorrect tracking of free space on transfer rings\n  (CVE-2024-26659 bsc#1222317).\n- commit 985549c\n\n- xhci: process isoc TD properly when there was a transaction\n  error mid TD (CVE-2024-26659 bsc#1222317).\n- commit 1966e44\n\n- xhci: store TD status in the td struct instead of passing it\n  along (CVE-2024-26659 bsc#1222317).\n- commit dba92cd\n\n- xhci: Add a separate debug message for split transaction errors\n  (CVE-2024-26659 bsc#1222317).\n- commit 93897b0\n\n- usb: xhci: Remove ep_trb from finish_td() (CVE-2024-26659\n  bsc#1222317).\n- commit 75b9c07\n\n- usb: xhci: Remove ep_trb from xhci_cleanup_halted_endpoint()\n  (CVE-2024-26659 bsc#1222317).\n- Refresh\n  patches.suse/xhci-remove-extra-loop-in-interrupt-context.patch.\n- commit 93f2e51\n\n- usb: xhci: remove unused variable ep_ring (CVE-2024-26659\n  bsc#1222317).\n- commit 25ab80d\n\n- xhci: remove extra loop in interrupt context (CVE-2024-26659\n  bsc#1222317).\n- commit 58c6482\n\n- Bluetooth: Fix memory leak in hci_req_sync_complete()\n  (bsc#1224571 CVE-2024-35978).\n- commit 0071ef8\n\n- xhci: get isochronous ring directly from endpoint structure\n  (CVE-2024-26659 bsc#1222317).\n- commit 1c8c540\n\n- crypto: s390/aes - Fix buffer overread in CTR mode\n  (CVE-2023-52669 bsc#1224637).\n- commit bc65b53\n\n- hwrng: core - Fix page fault dead lock on mmap-ed hwrng\n  (CVE-2023-52615 bsc#1221614).\n- commit c3d2ac9\n\n- blacklist.conf: 55e78c933d74 mm: zswap: increase reject_compress_poor but not reject_compress_fail if compression returns ENOSPC\n  bsc#1221616, CVE-2023-52612 required backport of\n  commit 744e1885922a (\u0026quot;crypto: scomp - fix req-\u0026gt;dst buffer overflow\u0026quot;),\n  for which there is the subsequent commit 55e78c933d74 (\u0026quot;mm: zswap:\n  increase reject_compress_poor but not reject_compress_fail if\n  compression returns ENOSPC\u0026quot;) referencing it from the Fixes tag.\n  That latter commit fixes a debugfs counter stat (reject_compress_fail),\n  which got introduced only with commit cb61dad80fdc (\u0026quot;zswap: export\n  compression failure stats\u0026quot;). Thus, it's not needed, blacklist it.\n- commit 6bbc535\n\n- ACPI: CPPC: Fix access width used for PCC registers (bsc#1224557\n  CVE-2024-35995).\n- commit 33ff733\n\n- ACPI: CPPC: Fix bit_offset shift in MASK_VAL() macro\n  (bsc#1224557 CVE-2024-35995).\n- commit ae6202b\n\n- SUNRPC: Fix a suspicious RCU usage warning (CVE-2023-52623\n  bsc#1222060).\n- commit ffa9576\n\n- ACPI: CPPC: Use access_width over bit_width for system memory\n  accesses (bsc#1224557 CVE-2024-35995).\n- commit ef057c5\n\n- ACPI: CPPC: Drop redundant local variable from cpc_read()\n  (bsc#1224557 CVE-2024-35995).\n- commit 73812cd\n\n- Update\n  patches.suse/scsi-bnx2fc-Remove-spin_lock_bh-while-releasing-resources-after-upload.patch\n  (bsc#1225767 CVE-2024-36919).\n  fix incorrect bug number\n- commit d503d18\n\n- crypto: scomp - fix req-\u0026gt;dst buffer overflow (CVE-2023-52612\n  bsc#1221616).\n- commit 3b5d943\n\n- xhci: handle isoc Babble and Buffer Overrun events properly\n  (CVE-2024-26659 bsc#1222317).\n- commit 98fde6e\n\n- net_sched: fix a missing refcnt in tcindex_init() (bsc#1224975).\n- commit 45da465\n\n- net_sched: add a temporary refcnt for struct tcindex_data\n  (bsc#1224975).\n- Refresh\n  patches.suse/net-sched-tcindex-update-imperfect-hash-filters-resp.patch.\n- commit b3f881b\n\n- net_sched: fix a memory leak in cls_tcindex (bsc#1224975).\n- Refresh\n  patches.suse/net_sched-fix-an-OOB-access-in-cls_tcindex.patch.\n- Refresh\n  patches.suse/net_sched-keep-alloc_hash-updated-after-hash-allocat.patch.\n- commit 98c1fbb\n\n- net: sched: fix memory leak in tcindex_partial_destroy_work (CVE-2021-47295 bsc#1224975)\n- commit 280e278\n\n- net_sched: hold rtnl lock in tcindex_partial_destroy_work() (bsc#1224975)\n- commit 6f5da00\n\n- blacklist.conf: convert entry to Alt-commit:\n  Refresh   patches.suse/net_sched-fix-a-race-condition-in-tcindex_destroy.patch.\n- commit 4a1ea17\n\n- Fix spurious WARNING caused by a qxl driver patch (bsc#1227213,bsc#1227191)\n  Refresh patches.suse/drm-qxl-fix-UAF-on-handle-creation.patch\n- commit 55a7bf6\n\nPackage systemd was updated:\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "Mesa-18.3.2-14.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "Mesa-dri-18.3.2-14.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "Mesa-libEGL1-18.3.2-14.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "Mesa-libGL1-18.3.2-14.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "Mesa-libglapi0-18.3.2-14.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "OpenIPMI-2.0.21-10.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bind-utils-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ca-certificates-mozilla-2.68-12.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-10.3.4-52.111.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-plugin-gce-1.0.0-52.111.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cluster-md-kmp-default-4.12.14-122.231.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.0.1-11.95.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dlm-kmp-default-4.12.14-122.231.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "expat-2.1.0-21.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "fence-agents-4.9.0+git.1624456340.8d746be9-3.41.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gfs2-kmp-default-4.12.14-122.231.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.48.2-12.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-cloud-sap-agent-3.5-6.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grep-2.16-4.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-2.02-175.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-i386-pc-2.02-175.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-x86_64-efi-2.02-175.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gtk2-tools-2.24.31-9.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "iputils-s20161105-11.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ipvsadm-1.26-21.4.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-4.12.14-122.231.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ksh-93vu-19.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ldirectord-4.3.018.a7fb5035-3.107.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libapparmor1-2.8.2-56.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libbind9-161-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libblkid1-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.0.1-11.95.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libdns1110-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libexpat1-2.1.0-21.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfdisk1-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfreebl3-3.101.2-58.124.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgbm1-18.3.2-14.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.48.2-12.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.48.2-12.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.48.2-12.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.48.2-12.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgthread-2_0-0-2.48.2-12.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgtk-2_0-0-2.24.31-9.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libirs161-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisc1107-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisccc161-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisccfg163-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "liblwres161-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libmount1-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_0_0-1.0.2p-3.95.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1d-2.113.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpacemaker3-1.1.24+20210811.f5abda0ee-3.39.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpcap1-1.8.1-10.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_4m1_0-3.4.10-25.139.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-67.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libqb0-1.0.3+20171226.6d62b64-4.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsmartcols1-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsoftokn3-3.101.2-58.124.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsuseconnect-1.12.0-3.25.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsystemd0-228-157.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtiff5-4.0.9-44.86.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libudev1-228-157.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libuuid1-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-3.101.2-58.124.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-certs-3.101.2-58.124.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ocfs2-kmp-default-4.12.14-122.231.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-1_0_0-1.0.2p-3.95.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pacemaker-1.1.24+20210811.f5abda0ee-3.39.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pacemaker-cli-1.1.24+20210811.f5abda0ee-3.39.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-1.1.8-24.59.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-bind-9.11.22-3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-pyOpenSSL-17.1.0-4.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-requests-2.24.0-8.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-setuptools-40.6.2-4.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-urllib3-1.25.10-3.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.4.10-25.139.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.4.10-25.139.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-curses-3.4.10-25.139.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyOpenSSL-17.1.0-4.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-setuptools-40.6.2-4.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-urllib3-1.25.10-3.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python36-base-3.6.15-67.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "regionServiceClientConfigGCE-4.2.0-5.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "release-notes-sles-12.5.20241014-3.40.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "resource-agents-4.3.018.a7fb5035-3.107.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shadow-4.2.1-36.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-build-key-12.0-7.19.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ng-1.12.0-3.25.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ruby-bindings-1.12.0-3.25.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-228-157.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-sysvinit-228-157.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "udev-228-157.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-systemd-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "uuidd-2.33.2-4.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-0.6.76-3.50.7",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-service-0.6.76-3.50.7",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xfsprogs-4.15.0-3.28.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-12-sp5-sap-byos-v20241028-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2013-4235",
      "Description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:shadow-4.2.1-36.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.3",
        "Vector": "AV:L/AC:M/Au:N/C:N/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2018-1000807",
      "Description": "Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python-pyOpenSSL-17.1.0-4.29.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-pyOpenSSL-17.1.0-4.29.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2019-14868",
      "Description": "In ksh version 20120801, a flaw was found in the way it evaluates certain environment variables. An attacker could use this flaw to override or bypass environment restrictions to execute shell commands. Services and applications that allow remote unauthenticated attackers to provide one of those environment variables could allow them to exploit this issue remotely.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.2",
        "Vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2020-26558",
      "Description": "Bluetooth LE and BR/EDR secure pairing in Bluetooth Core Specification 2.1 through 5.2 may permit a nearby man-in-the-middle attacker to identify the Passkey used during pairing (in the Passkey authentication procedure) by reflection of the public key and the authentication evidence of the initiating device, potentially permitting this attacker to complete authenticated pairing with the responding device using the correct Passkey for the pairing session. The attack methodology determines the Passkey value one bit at a time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:A/AC:M/Au:N/C:P/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2021-0129",
      "Description": "Improper access control in BlueZ may allow an authenticated user to potentially enable information disclosure via adjacent access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.7",
        "Vector": "AV:A/AC:L/Au:S/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2021-4440",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/xen: Drop USERGS_SYSRET64 paravirt call\n\ncommit afd30525a659ac0ae0904f0cb4a2ca75522c3123 upstream.\n\nUSERGS_SYSRET64 is used to return from a syscall via SYSRET, but\na Xen PV guest will nevertheless use the IRET hypercall, as there\nis no sysret PV hypercall defined.\n\nSo instead of testing all the prerequisites for doing a sysret and\nthen mangling the stack for Xen PV again for doing an iret just use\nthe iret exit from the beginning.\n\nThis can easily be done via an ALTERNATIVE like it is done for the\nsysenter compat case already.\n\nIt should be noted that this drops the optimization in Xen for not\nrestoring a few registers when returning to user mode, but it seems\nas if the saved instructions in the kernel more than compensate for\nthis drop (a kernel build in a Xen PV guest was slightly faster with\nthis patch applied).\n\nWhile at it remove the stale sysret32 remnants.\n\n  [ pawan: Brad Spengler and Salvatore Bonaccorso \u003ccarnil@debian.org\u003e\n\t   reported a problem with the 5.10 backport commit edc702b4a820\n\t   (\"x86/entry_64: Add VERW just before userspace transition\").\n\n\t   When CONFIG_PARAVIRT_XXL=y, CLEAR_CPU_BUFFERS is not executed in\n\t   syscall_return_via_sysret path as USERGS_SYSRET64 is runtime\n\t   patched to:\n\n\t.cpu_usergs_sysret64    = { 0x0f, 0x01, 0xf8,\n\t\t\t\t    0x48, 0x0f, 0x07 }, // swapgs; sysretq\n\n\t   which is missing CLEAR_CPU_BUFFERS. It turns out dropping\n\t   USERGS_SYSRET64 simplifies the code, allowing CLEAR_CPU_BUFFERS\n\t   to be explicitly added to syscall_return_via_sysret path. Below\n\t   is with CONFIG_PARAVIRT_XXL=y and this patch applied:\n\n\t   syscall_return_via_sysret:\n\t   ...\n\t   \u003c+342\u003e:   swapgs\n\t   \u003c+345\u003e:   xchg   %ax,%ax\n\t   \u003c+347\u003e:   verw   -0x1a2(%rip)  \u003c------\n\t   \u003c+354\u003e:   sysretq\n  ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-4442",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: add sanity tests to TCP_QUEUE_SEQ\n\nQingyu Li reported a syzkaller bug where the repro\nchanges RCV SEQ _after_ restoring data in the receive queue.\n\nmprotect(0x4aa000, 12288, PROT_READ)    = 0\nmmap(0x1ffff000, 4096, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x1ffff000\nmmap(0x20000000, 16777216, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x20000000\nmmap(0x21000000, 4096, PROT_NONE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x21000000\nsocket(AF_INET6, SOCK_STREAM, IPPROTO_IP) = 3\nsetsockopt(3, SOL_TCP, TCP_REPAIR, [1], 4) = 0\nconnect(3, {sa_family=AF_INET6, sin6_port=htons(0), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, \"::1\", \u0026sin6_addr), sin6_scope_id=0}, 28) = 0\nsetsockopt(3, SOL_TCP, TCP_REPAIR_QUEUE, [1], 4) = 0\nsendmsg(3, {msg_name=NULL, msg_namelen=0, msg_iov=[{iov_base=\"0x0000000000000003\\0\\0\", iov_len=20}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 20\nsetsockopt(3, SOL_TCP, TCP_REPAIR, [0], 4) = 0\nsetsockopt(3, SOL_TCP, TCP_QUEUE_SEQ, [128], 4) = 0\nrecvfrom(3, NULL, 20, 0, NULL, NULL)    = -1 ECONNRESET (Connection reset by peer)\n\nsyslog shows:\n[  111.205099] TCP recvmsg seq # bug 2: copied 80, seq 0, rcvnxt 80, fl 0\n[  111.207894] WARNING: CPU: 1 PID: 356 at net/ipv4/tcp.c:2343 tcp_recvmsg_locked+0x90e/0x29a0\n\nThis should not be allowed. TCP_QUEUE_SEQ should only be used\nwhen queues are empty.\n\nThis patch fixes this case, and the tx path as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47191",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix out-of-bound read in resp_readcap16()\n\nThe following warning was observed running syzkaller:\n\n[ 3813.830724] sg_write: data in/out 65466/242 bytes for SCSI command 0x9e-- guessing data in;\n[ 3813.830724]    program syz-executor not setting count and/or reply_len properly\n[ 3813.836956] ==================================================================\n[ 3813.839465] BUG: KASAN: stack-out-of-bounds in sg_copy_buffer+0x157/0x1e0\n[ 3813.841773] Read of size 4096 at addr ffff8883cf80f540 by task syz-executor/1549\n[ 3813.846612] Call Trace:\n[ 3813.846995]  dump_stack+0x108/0x15f\n[ 3813.847524]  print_address_description+0xa5/0x372\n[ 3813.848243]  kasan_report.cold+0x236/0x2a8\n[ 3813.849439]  check_memory_region+0x240/0x270\n[ 3813.850094]  memcpy+0x30/0x80\n[ 3813.850553]  sg_copy_buffer+0x157/0x1e0\n[ 3813.853032]  sg_copy_from_buffer+0x13/0x20\n[ 3813.853660]  fill_from_dev_buffer+0x135/0x370\n[ 3813.854329]  resp_readcap16+0x1ac/0x280\n[ 3813.856917]  schedule_resp+0x41f/0x1630\n[ 3813.858203]  scsi_debug_queuecommand+0xb32/0x17e0\n[ 3813.862699]  scsi_dispatch_cmd+0x330/0x950\n[ 3813.863329]  scsi_request_fn+0xd8e/0x1710\n[ 3813.863946]  __blk_run_queue+0x10b/0x230\n[ 3813.864544]  blk_execute_rq_nowait+0x1d8/0x400\n[ 3813.865220]  sg_common_write.isra.0+0xe61/0x2420\n[ 3813.871637]  sg_write+0x6c8/0xef0\n[ 3813.878853]  __vfs_write+0xe4/0x800\n[ 3813.883487]  vfs_write+0x17b/0x530\n[ 3813.884008]  ksys_write+0x103/0x270\n[ 3813.886268]  __x64_sys_write+0x77/0xc0\n[ 3813.886841]  do_syscall_64+0x106/0x360\n[ 3813.887415]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nThis issue can be reproduced with the following syzkaller log:\n\nr0 = openat(0xffffffffffffff9c, \u0026(0x7f0000000040)='./file0\\x00', 0x26e1, 0x0)\nr1 = syz_open_procfs(0xffffffffffffffff, \u0026(0x7f0000000000)='fd/3\\x00')\nopen_by_handle_at(r1, \u0026(0x7f00000003c0)=ANY=[@ANYRESHEX], 0x602000)\nr2 = syz_open_dev$sg(\u0026(0x7f0000000000), 0x0, 0x40782)\nwrite$binfmt_aout(r2, \u0026(0x7f0000000340)=ANY=[@ANYBLOB=\"00000000deff000000000000000000000000000000000000000000000000000047f007af9e107a41ec395f1bded7be24277a1501ff6196a83366f4e6362bc0ff2b247f68a972989b094b2da4fb3607fcf611a22dd04310d28c75039d\"], 0x126)\n\nIn resp_readcap16() we get \"int alloc_len\" value -1104926854, and then pass\nthe huge arr_len to fill_from_dev_buffer(), but arr is only 32 bytes. This\nleads to OOB in sg_copy_buffer().\n\nTo solve this issue, define alloc_len as u32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47194",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncfg80211: call cfg80211_stop_ap when switch from P2P_GO type\n\nIf the userspace tools switch from NL80211_IFTYPE_P2P_GO to\nNL80211_IFTYPE_ADHOC via send_msg(NL80211_CMD_SET_INTERFACE), it\ndoes not call the cleanup cfg80211_stop_ap(), this leads to the\ninitialization of in-use data. For example, this path re-init the\nsdata-\u003eassigned_chanctx_list while it is still an element of\nassigned_vifs list, and makes that linked list corrupt.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47219",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix out-of-bound read in resp_report_tgtpgs()\n\nThe following issue was observed running syzkaller:\n\nBUG: KASAN: slab-out-of-bounds in memcpy include/linux/string.h:377 [inline]\nBUG: KASAN: slab-out-of-bounds in sg_copy_buffer+0x150/0x1c0 lib/scatterlist.c:831\nRead of size 2132 at addr ffff8880aea95dc8 by task syz-executor.0/9815\n\nCPU: 0 PID: 9815 Comm: syz-executor.0 Not tainted 4.19.202-00874-gfc0fe04215a9 #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xe4/0x14a lib/dump_stack.c:118\n print_address_description+0x73/0x280 mm/kasan/report.c:253\n kasan_report_error mm/kasan/report.c:352 [inline]\n kasan_report+0x272/0x370 mm/kasan/report.c:410\n memcpy+0x1f/0x50 mm/kasan/kasan.c:302\n memcpy include/linux/string.h:377 [inline]\n sg_copy_buffer+0x150/0x1c0 lib/scatterlist.c:831\n fill_from_dev_buffer+0x14f/0x340 drivers/scsi/scsi_debug.c:1021\n resp_report_tgtpgs+0x5aa/0x770 drivers/scsi/scsi_debug.c:1772\n schedule_resp+0x464/0x12f0 drivers/scsi/scsi_debug.c:4429\n scsi_debug_queuecommand+0x467/0x1390 drivers/scsi/scsi_debug.c:5835\n scsi_dispatch_cmd+0x3fc/0x9b0 drivers/scsi/scsi_lib.c:1896\n scsi_request_fn+0x1042/0x1810 drivers/scsi/scsi_lib.c:2034\n __blk_run_queue_uncond block/blk-core.c:464 [inline]\n __blk_run_queue+0x1a4/0x380 block/blk-core.c:484\n blk_execute_rq_nowait+0x1c2/0x2d0 block/blk-exec.c:78\n sg_common_write.isra.19+0xd74/0x1dc0 drivers/scsi/sg.c:847\n sg_write.part.23+0x6e0/0xd00 drivers/scsi/sg.c:716\n sg_write+0x64/0xa0 drivers/scsi/sg.c:622\n __vfs_write+0xed/0x690 fs/read_write.c:485\nkill_bdev:block_device:00000000e138492c\n vfs_write+0x184/0x4c0 fs/read_write.c:549\n ksys_write+0x107/0x240 fs/read_write.c:599\n do_syscall_64+0xc2/0x560 arch/x86/entry/common.c:293\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nWe get 'alen' from command its type is int. If userspace passes a large\nlength we will get a negative 'alen'.\n\nSwitch n, alen, and rlen to u32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47257",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: fix null deref in parse dev addr\n\nFix a logic error that could result in a null deref if the user sets\nthe mode incorrectly for the given addr type.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47289",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: fix NULL pointer dereference\n\nCommit 71f642833284 (\"ACPI: utils: Fix reference counting in\nfor_each_acpi_dev_match()\") started doing \"acpi_dev_put()\" on a pointer\nthat was possibly NULL.  That fails miserably, because that helper\ninline function is not set up to handle that case.\n\nJust make acpi_dev_put() silently accept a NULL pointer, rather than\ncalling down to put_device() with an invalid offset off that NULL\npointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47295",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix memory leak in tcindex_partial_destroy_work\n\nSyzbot reported memory leak in tcindex_set_parms(). The problem was in\nnon-freed perfect hash in tcindex_partial_destroy_work().\n\nIn tcindex_set_parms() new tcindex_data is allocated and some fields from\nold one are copied to new one, but not the perfect hash. Since\ntcindex_partial_destroy_work() is the destroy function for old\ntcindex_data, we need to free perfect hash to avoid memory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47341",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: mmio: Fix use-after-free Read in kvm_vm_ioctl_unregister_coalesced_mmio\n\nBUG: KASAN: use-after-free in kvm_vm_ioctl_unregister_coalesced_mmio+0x7c/0x1ec arch/arm64/kvm/../../../virt/kvm/coalesced_mmio.c:183\nRead of size 8 at addr ffff0000c03a2500 by task syz-executor083/4269\n\nCPU: 5 PID: 4269 Comm: syz-executor083 Not tainted 5.10.0 #7\nHardware name: linux,dummy-virt (DT)\nCall trace:\n dump_backtrace+0x0/0x2d0 arch/arm64/kernel/stacktrace.c:132\n show_stack+0x28/0x34 arch/arm64/kernel/stacktrace.c:196\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x110/0x164 lib/dump_stack.c:118\n print_address_description+0x78/0x5c8 mm/kasan/report.c:385\n __kasan_report mm/kasan/report.c:545 [inline]\n kasan_report+0x148/0x1e4 mm/kasan/report.c:562\n check_memory_region_inline mm/kasan/generic.c:183 [inline]\n __asan_load8+0xb4/0xbc mm/kasan/generic.c:252\n kvm_vm_ioctl_unregister_coalesced_mmio+0x7c/0x1ec arch/arm64/kvm/../../../virt/kvm/coalesced_mmio.c:183\n kvm_vm_ioctl+0xe30/0x14c4 arch/arm64/kvm/../../../virt/kvm/kvm_main.c:3755\n vfs_ioctl fs/ioctl.c:48 [inline]\n __do_sys_ioctl fs/ioctl.c:753 [inline]\n __se_sys_ioctl fs/ioctl.c:739 [inline]\n __arm64_sys_ioctl+0xf88/0x131c fs/ioctl.c:739\n __invoke_syscall arch/arm64/kernel/syscall.c:36 [inline]\n invoke_syscall arch/arm64/kernel/syscall.c:48 [inline]\n el0_svc_common arch/arm64/kernel/syscall.c:158 [inline]\n do_el0_svc+0x120/0x290 arch/arm64/kernel/syscall.c:220\n el0_svc+0x1c/0x28 arch/arm64/kernel/entry-common.c:367\n el0_sync_handler+0x98/0x170 arch/arm64/kernel/entry-common.c:383\n el0_sync+0x140/0x180 arch/arm64/kernel/entry.S:670\n\nAllocated by task 4269:\n stack_trace_save+0x80/0xb8 kernel/stacktrace.c:121\n kasan_save_stack mm/kasan/common.c:48 [inline]\n kasan_set_track mm/kasan/common.c:56 [inline]\n __kasan_kmalloc+0xdc/0x120 mm/kasan/common.c:461\n kasan_kmalloc+0xc/0x14 mm/kasan/common.c:475\n kmem_cache_alloc_trace include/linux/slab.h:450 [inline]\n kmalloc include/linux/slab.h:552 [inline]\n kzalloc include/linux/slab.h:664 [inline]\n kvm_vm_ioctl_register_coalesced_mmio+0x78/0x1cc arch/arm64/kvm/../../../virt/kvm/coalesced_mmio.c:146\n kvm_vm_ioctl+0x7e8/0x14c4 arch/arm64/kvm/../../../virt/kvm/kvm_main.c:3746\n vfs_ioctl fs/ioctl.c:48 [inline]\n __do_sys_ioctl fs/ioctl.c:753 [inline]\n __se_sys_ioctl fs/ioctl.c:739 [inline]\n __arm64_sys_ioctl+0xf88/0x131c fs/ioctl.c:739\n __invoke_syscall arch/arm64/kernel/syscall.c:36 [inline]\n invoke_syscall arch/arm64/kernel/syscall.c:48 [inline]\n el0_svc_common arch/arm64/kernel/syscall.c:158 [inline]\n do_el0_svc+0x120/0x290 arch/arm64/kernel/syscall.c:220\n el0_svc+0x1c/0x28 arch/arm64/kernel/entry-common.c:367\n el0_sync_handler+0x98/0x170 arch/arm64/kernel/entry-common.c:383\n el0_sync+0x140/0x180 arch/arm64/kernel/entry.S:670\n\nFreed by task 4269:\n stack_trace_save+0x80/0xb8 kernel/stacktrace.c:121\n kasan_save_stack mm/kasan/common.c:48 [inline]\n kasan_set_track+0x38/0x6c mm/kasan/common.c:56\n kasan_set_free_info+0x20/0x40 mm/kasan/generic.c:355\n __kasan_slab_free+0x124/0x150 mm/kasan/common.c:422\n kasan_slab_free+0x10/0x1c mm/kasan/common.c:431\n slab_free_hook mm/slub.c:1544 [inline]\n slab_free_freelist_hook mm/slub.c:1577 [inline]\n slab_free mm/slub.c:3142 [inline]\n kfree+0x104/0x38c mm/slub.c:4124\n coalesced_mmio_destructor+0x94/0xa4 arch/arm64/kvm/../../../virt/kvm/coalesced_mmio.c:102\n kvm_iodevice_destructor include/kvm/iodev.h:61 [inline]\n kvm_io_bus_unregister_dev+0x248/0x280 arch/arm64/kvm/../../../virt/kvm/kvm_main.c:4374\n kvm_vm_ioctl_unregister_coalesced_mmio+0x158/0x1ec arch/arm64/kvm/../../../virt/kvm/coalesced_mmio.c:186\n kvm_vm_ioctl+0xe30/0x14c4 arch/arm64/kvm/../../../virt/kvm/kvm_main.c:3755\n vfs_ioctl fs/ioctl.c:48 [inline]\n __do_sys_ioctl fs/ioctl.c:753 [inline]\n __se_sys_ioctl fs/ioctl.c:739 [inline]\n __arm64_sys_ioctl+0xf88/0x131c fs/ioctl.c:739\n __invoke_syscall arch/arm64/kernel/syscall.c:36 [inline]\n invoke_syscall arch/arm64/kernel/sys\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47373",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip/gic-v3-its: Fix potential VPE leak on error\n\nIn its_vpe_irq_domain_alloc, when its_vpe_init() returns an error,\nthere is an off-by-one in the number of VPEs to be freed.\n\nFix it by simply passing the number of VPEs allocated, which is the\nindex of the loop iterating over the VPEs.\n\n[maz: fixed commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47387",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: schedutil: Use kobject release() method to free sugov_tunables\n\nThe struct sugov_tunables is protected by the kobject, so we can't free\nit directly. Otherwise we would get a call trace like this:\n  ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x30\n  WARNING: CPU: 3 PID: 720 at lib/debugobjects.c:505 debug_print_object+0xb8/0x100\n  Modules linked in:\n  CPU: 3 PID: 720 Comm: a.sh Tainted: G        W         5.14.0-rc1-next-20210715-yocto-standard+ #507\n  Hardware name: Marvell OcteonTX CN96XX board (DT)\n  pstate: 40400009 (nZcv daif +PAN -UAO -TCO BTYPE=--)\n  pc : debug_print_object+0xb8/0x100\n  lr : debug_print_object+0xb8/0x100\n  sp : ffff80001ecaf910\n  x29: ffff80001ecaf910 x28: ffff00011b10b8d0 x27: ffff800011043d80\n  x26: ffff00011a8f0000 x25: ffff800013cb3ff0 x24: 0000000000000000\n  x23: ffff80001142aa68 x22: ffff800011043d80 x21: ffff00010de46f20\n  x20: ffff800013c0c520 x19: ffff800011d8f5b0 x18: 0000000000000010\n  x17: 6e6968207473696c x16: 5f72656d6974203a x15: 6570797420746365\n  x14: 6a626f2029302065 x13: 303378302f307830 x12: 2b6e665f72656d69\n  x11: ffff8000124b1560 x10: ffff800012331520 x9 : ffff8000100ca6b0\n  x8 : 000000000017ffe8 x7 : c0000000fffeffff x6 : 0000000000000001\n  x5 : ffff800011d8c000 x4 : ffff800011d8c740 x3 : 0000000000000000\n  x2 : ffff0001108301c0 x1 : ab3c90eedf9c0f00 x0 : 0000000000000000\n  Call trace:\n   debug_print_object+0xb8/0x100\n   __debug_check_no_obj_freed+0x1c0/0x230\n   debug_check_no_obj_freed+0x20/0x88\n   slab_free_freelist_hook+0x154/0x1c8\n   kfree+0x114/0x5d0\n   sugov_exit+0xbc/0xc0\n   cpufreq_exit_governor+0x44/0x90\n   cpufreq_set_policy+0x268/0x4a8\n   store_scaling_governor+0xe0/0x128\n   store+0xc0/0xf0\n   sysfs_kf_write+0x54/0x80\n   kernfs_fop_write_iter+0x128/0x1c0\n   new_sync_write+0xf0/0x190\n   vfs_write+0x2d4/0x478\n   ksys_write+0x74/0x100\n   __arm64_sys_write+0x24/0x30\n   invoke_syscall.constprop.0+0x54/0xe0\n   do_el0_svc+0x64/0x158\n   el0_svc+0x2c/0xb0\n   el0t_64_sync_handler+0xb0/0xb8\n   el0t_64_sync+0x198/0x19c\n  irq event stamp: 5518\n  hardirqs last  enabled at (5517): [\u003cffff8000100cbd7c\u003e] console_unlock+0x554/0x6c8\n  hardirqs last disabled at (5518): [\u003cffff800010fc0638\u003e] el1_dbg+0x28/0xa0\n  softirqs last  enabled at (5504): [\u003cffff8000100106e0\u003e] __do_softirq+0x4d0/0x6c0\n  softirqs last disabled at (5483): [\u003cffff800010049548\u003e] irq_exit+0x1b0/0x1b8\n\nSo split the original sugov_tunables_free() into two functions,\nsugov_clear_global_tunables() is just used to clear the global_tunables\nand the new sugov_tunables_free() is used as kobj_type::release to\nrelease the sugov_tunables safely.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47388",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: fix use-after-free in CCMP/GCMP RX\n\nWhen PN checking is done in mac80211, for fragmentation we need\nto copy the PN to the RX struct so we can later use it to do a\ncomparison, since commit bf30ca922a0c (\"mac80211: check defrag\nPN against current frame\").\n\nUnfortunately, in that commit I used the 'hdr' variable without\nit being necessarily valid, so use-after-free could occur if it\nwas necessary to reallocate (parts of) the frame.\n\nFix this by reloading the variable after the code that results\nin the reallocations, if any.\n\nThis fixes https://bugzilla.kernel.org/show_bug.cgi?id=214401.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47395",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: limit injected vht mcs/nss in ieee80211_parse_tx_radiotap\n\nLimit max values for vht mcs and nss in ieee80211_parse_tx_radiotap\nroutine in order to fix the following warning reported by syzbot:\n\nWARNING: CPU: 0 PID: 10717 at include/net/mac80211.h:989 ieee80211_rate_set_vht include/net/mac80211.h:989 [inline]\nWARNING: CPU: 0 PID: 10717 at include/net/mac80211.h:989 ieee80211_parse_tx_radiotap+0x101e/0x12d0 net/mac80211/tx.c:2244\nModules linked in:\nCPU: 0 PID: 10717 Comm: syz-executor.5 Not tainted 5.14.0-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:ieee80211_rate_set_vht include/net/mac80211.h:989 [inline]\nRIP: 0010:ieee80211_parse_tx_radiotap+0x101e/0x12d0 net/mac80211/tx.c:2244\nRSP: 0018:ffffc9000186f3e8 EFLAGS: 00010216\nRAX: 0000000000000618 RBX: ffff88804ef76500 RCX: ffffc900143a5000\nRDX: 0000000000040000 RSI: ffffffff888f478e RDI: 0000000000000003\nRBP: 00000000ffffffff R08: 0000000000000000 R09: 0000000000000100\nR10: ffffffff888f46f9 R11: 0000000000000000 R12: 00000000fffffff8\nR13: ffff88804ef7653c R14: 0000000000000001 R15: 0000000000000004\nFS:  00007fbf5718f700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b2de23000 CR3: 000000006a671000 CR4: 00000000001506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600\nCall Trace:\n ieee80211_monitor_select_queue+0xa6/0x250 net/mac80211/iface.c:740\n netdev_core_pick_tx+0x169/0x2e0 net/core/dev.c:4089\n __dev_queue_xmit+0x6f9/0x3710 net/core/dev.c:4165\n __bpf_tx_skb net/core/filter.c:2114 [inline]\n __bpf_redirect_no_mac net/core/filter.c:2139 [inline]\n __bpf_redirect+0x5ba/0xd20 net/core/filter.c:2162\n ____bpf_clone_redirect net/core/filter.c:2429 [inline]\n bpf_clone_redirect+0x2ae/0x420 net/core/filter.c:2401\n bpf_prog_eeb6f53a69e5c6a2+0x59/0x234\n bpf_dispatcher_nop_func include/linux/bpf.h:717 [inline]\n __bpf_prog_run include/linux/filter.h:624 [inline]\n bpf_prog_run include/linux/filter.h:631 [inline]\n bpf_test_run+0x381/0xa30 net/bpf/test_run.c:119\n bpf_prog_test_run_skb+0xb84/0x1ee0 net/bpf/test_run.c:663\n bpf_prog_test_run kernel/bpf/syscall.c:3307 [inline]\n __sys_bpf+0x2137/0x5df0 kernel/bpf/syscall.c:4605\n __do_sys_bpf kernel/bpf/syscall.c:4691 [inline]\n __se_sys_bpf kernel/bpf/syscall.c:4689 [inline]\n __x64_sys_bpf+0x75/0xb0 kernel/bpf/syscall.c:4689\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x4665f9",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47399",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nixgbe: Fix NULL pointer dereference in ixgbe_xdp_setup\n\nThe ixgbe driver currently generates a NULL pointer dereference with\nsome machine (online cpus \u003c 63). This is due to the fact that the\nmaximum value of num_xdp_queues is nr_cpu_ids. Code is in\n\"ixgbe_set_rss_queues\"\".\n\nHere's how the problem repeats itself:\nSome machine (online cpus \u003c 63), And user set num_queues to 63 through\nethtool. Code is in the \"ixgbe_set_channels\",\n\tadapter-\u003ering_feature[RING_F_FDIR].limit = count;\n\nIt becomes 63.\n\nWhen user use xdp, \"ixgbe_set_rss_queues\" will set queues num.\n\tadapter-\u003enum_rx_queues = rss_i;\n\tadapter-\u003enum_tx_queues = rss_i;\n\tadapter-\u003enum_xdp_queues = ixgbe_xdp_queues(adapter);\n\nAnd rss_i's value is from\n\tf = \u0026adapter-\u003ering_feature[RING_F_FDIR];\n\trss_i = f-\u003eindices = f-\u003elimit;\n\nSo \"num_rx_queues\" \u003e \"num_xdp_queues\", when run to \"ixgbe_xdp_setup\",\n\tfor (i = 0; i \u003c adapter-\u003enum_rx_queues; i++)\n\t\tif (adapter-\u003exdp_ring[i]-\u003exsk_umem)\n\nIt leads to panic.\n\nCall trace:\n[exception RIP: ixgbe_xdp+368]\nRIP: ffffffffc02a76a0  RSP: ffff9fe16202f8d0  RFLAGS: 00010297\nRAX: 0000000000000000  RBX: 0000000000000020  RCX: 0000000000000000\nRDX: 0000000000000000  RSI: 000000000000001c  RDI: ffffffffa94ead90\nRBP: ffff92f8f24c0c18   R8: 0000000000000000   R9: 0000000000000000\nR10: ffff9fe16202f830  R11: 0000000000000000  R12: ffff92f8f24c0000\nR13: ffff9fe16202fc01  R14: 000000000000000a  R15: ffffffffc02a7530\nORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n 7 [ffff9fe16202f8f0] dev_xdp_install at ffffffffa89fbbcc\n 8 [ffff9fe16202f920] dev_change_xdp_fd at ffffffffa8a08808\n 9 [ffff9fe16202f960] do_setlink at ffffffffa8a20235\n10 [ffff9fe16202fa88] rtnl_setlink at ffffffffa8a20384\n11 [ffff9fe16202fc78] rtnetlink_rcv_msg at ffffffffa8a1a8dd\n12 [ffff9fe16202fcf0] netlink_rcv_skb at ffffffffa8a717eb\n13 [ffff9fe16202fd40] netlink_unicast at ffffffffa8a70f88\n14 [ffff9fe16202fd80] netlink_sendmsg at ffffffffa8a71319\n15 [ffff9fe16202fdf0] sock_sendmsg at ffffffffa89df290\n16 [ffff9fe16202fe08] __sys_sendto at ffffffffa89e19c8\n17 [ffff9fe16202ff30] __x64_sys_sendto at ffffffffa89e1a64\n18 [ffff9fe16202ff38] do_syscall_64 at ffffffffa84042b9\n19 [ffff9fe16202ff50] entry_SYSCALL_64_after_hwframe at ffffffffa8c0008c\n\nSo I fix ixgbe_max_channels so that it will not allow a setting of queues\nto be higher than the num_online_cpus(). And when run to ixgbe_xdp_setup,\ntake the smaller value of num_rx_queues and num_xdp_queues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47403",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipack: ipoctal: fix module reference leak\n\nA reference to the carrier module was taken on every open but was only\nreleased once when the final reference to the tty struct was dropped.\n\nFix this by taking the module reference and initialising the tty driver\ndata when installing the tty.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47405",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: usbhid: free raw_report buffers in usbhid_stop\n\nFree the unsent raw_report buffers when the device is removed.\n\nFixes a memory leak reported by syzbot at:\nhttps://syzkaller.appspot.com/bug?id=7b4fa7cb1a7c2d3342a2a8a6c53371c8c418ab47",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47408",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: serialize hash resizes and cleanups\n\nSyzbot was able to trigger the following warning [1]\n\nNo repro found by syzbot yet but I was able to trigger similar issue\nby having 2 scripts running in parallel, changing conntrack hash sizes,\nand:\n\nfor j in `seq 1 1000` ; do unshare -n /bin/true \u003e/dev/null ; done\n\nIt would take more than 5 minutes for net_namespace structures\nto be cleaned up.\n\nThis is because nf_ct_iterate_cleanup() has to restart everytime\na resize happened.\n\nBy adding a mutex, we can serialize hash resizes and cleanups\nand also make get_next_corpse() faster by skipping over empty\nbuckets.\n\nEven without resizes in the picture, this patch considerably\nspeeds up network namespace dismantles.\n\n[1]\nINFO: task syz-executor.0:8312 can't die for more than 144 seconds.\ntask:syz-executor.0  state:R  running task     stack:25672 pid: 8312 ppid:  6573 flags:0x00004006\nCall Trace:\n context_switch kernel/sched/core.c:4955 [inline]\n __schedule+0x940/0x26f0 kernel/sched/core.c:6236\n preempt_schedule_common+0x45/0xc0 kernel/sched/core.c:6408\n preempt_schedule_thunk+0x16/0x18 arch/x86/entry/thunk_64.S:35\n __local_bh_enable_ip+0x109/0x120 kernel/softirq.c:390\n local_bh_enable include/linux/bottom_half.h:32 [inline]\n get_next_corpse net/netfilter/nf_conntrack_core.c:2252 [inline]\n nf_ct_iterate_cleanup+0x15a/0x450 net/netfilter/nf_conntrack_core.c:2275\n nf_conntrack_cleanup_net_list+0x14c/0x4f0 net/netfilter/nf_conntrack_core.c:2469\n ops_exit_list+0x10d/0x160 net/core/net_namespace.c:171\n setup_net+0x639/0xa30 net/core/net_namespace.c:349\n copy_net_ns+0x319/0x760 net/core/net_namespace.c:470\n create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110\n unshare_nsproxy_namespaces+0xc1/0x1f0 kernel/nsproxy.c:226\n ksys_unshare+0x445/0x920 kernel/fork.c:3128\n __do_sys_unshare kernel/fork.c:3202 [inline]\n __se_sys_unshare kernel/fork.c:3200 [inline]\n __x64_sys_unshare+0x2d/0x40 kernel/fork.c:3200\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f63da68e739\nRSP: 002b:00007f63d7c05188 EFLAGS: 00000246 ORIG_RAX: 0000000000000110\nRAX: ffffffffffffffda RBX: 00007f63da792f80 RCX: 00007f63da68e739\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000040000000\nRBP: 00007f63da6e8cc4 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f63da792f80\nR13: 00007fff50b75d3f R14: 00007f63d7c05300 R15: 0000000000022000\n\nShowing all locks held in the system:\n1 lock held by khungtaskd/27:\n #0: ffffffff8b980020 (rcu_read_lock){....}-{1:2}, at: debug_show_all_locks+0x53/0x260 kernel/locking/lockdep.c:6446\n2 locks held by kworker/u4:2/153:\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: arch_atomic64_set arch/x86/include/asm/atomic64_64.h:34 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: arch_atomic_long_set include/linux/atomic/atomic-long.h:41 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: atomic_long_set include/linux/atomic/atomic-instrumented.h:1198 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: set_work_data kernel/workqueue.c:634 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: set_work_pool_and_clear_pending kernel/workqueue.c:661 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: process_one_work+0x896/0x1690 kernel/workqueue.c:2268\n #1: ffffc9000140fdb0 ((kfence_timer).work){+.+.}-{0:0}, at: process_one_work+0x8ca/0x1690 kernel/workqueue.c:2272\n1 lock held by systemd-udevd/2970:\n1 lock held by in:imklog/6258:\n #0: ffff88807f970ff0 (\u0026f-\u003ef_pos_lock){+.+.}-{3:3}, at: __fdget_pos+0xe9/0x100 fs/file.c:990\n3 locks held by kworker/1:6/8158:\n1 lock held by syz-executor.0/8312:\n2 locks held by kworker/u4:13/9320:\n1 lock held by\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47425",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: acpi: fix resource leak in reconfiguration device addition\n\nacpi_i2c_find_adapter_by_handle() calls bus_find_device() which takes a\nreference on the adapter which is never released which will result in a\nreference count leak and render the adapter unremovable.  Make sure to\nput the adapter after creating the client in the same manner that we do\nfor OF.\n\n[wsa: fixed title]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47438",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix memory leak in mlx5_core_destroy_cq() error path\n\nPrior to this patch in case mlx5_core_destroy_cq() failed it returns\nwithout completing all destroy operations and that leads to memory leak.\nInstead, complete the destroy flow before return error.\n\nAlso move mlx5_debug_cq_remove() to the beginning of mlx5_core_destroy_cq()\nto be symmetrical with mlx5_core_create_cq().\n\nkmemleak complains on:\n\nunreferenced object 0xc000000038625100 (size 64):\n  comm \"ethtool\", pid 28301, jiffies 4298062946 (age 785.380s)\n  hex dump (first 32 bytes):\n    60 01 48 94 00 00 00 c0 b8 05 34 c3 00 00 00 c0  `.H.......4.....\n    02 00 00 00 00 00 00 00 00 db 7d c1 00 00 00 c0  ..........}.....\n  backtrace:\n    [\u003c000000009e8643cb\u003e] add_res_tree+0xd0/0x270 [mlx5_core]\n    [\u003c00000000e7cb8e6c\u003e] mlx5_debug_cq_add+0x5c/0xc0 [mlx5_core]\n    [\u003c000000002a12918f\u003e] mlx5_core_create_cq+0x1d0/0x2d0 [mlx5_core]\n    [\u003c00000000cef0a696\u003e] mlx5e_create_cq+0x210/0x3f0 [mlx5_core]\n    [\u003c000000009c642c26\u003e] mlx5e_open_cq+0xb4/0x130 [mlx5_core]\n    [\u003c0000000058dfa578\u003e] mlx5e_ptp_open+0x7f4/0xe10 [mlx5_core]\n    [\u003c0000000081839561\u003e] mlx5e_open_channels+0x9cc/0x13e0 [mlx5_core]\n    [\u003c0000000009cf05d4\u003e] mlx5e_switch_priv_channels+0xa4/0x230\n[mlx5_core]\n    [\u003c0000000042bbedd8\u003e] mlx5e_safe_switch_params+0x14c/0x300\n[mlx5_core]\n    [\u003c0000000004bc9db8\u003e] set_pflag_tx_port_ts+0x9c/0x160 [mlx5_core]\n    [\u003c00000000a0553443\u003e] mlx5e_set_priv_flags+0xd0/0x1b0 [mlx5_core]\n    [\u003c00000000a8f3d84b\u003e] ethnl_set_privflags+0x234/0x2d0\n    [\u003c00000000fd27f27c\u003e] genl_family_rcv_msg_doit+0x108/0x1d0\n    [\u003c00000000f495e2bb\u003e] genl_family_rcv_msg+0xe4/0x1f0\n    [\u003c00000000646c5c2c\u003e] genl_rcv_msg+0x78/0x120\n    [\u003c00000000d53e384e\u003e] netlink_rcv_skb+0x74/0x1a0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47441",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: thermal: Fix out-of-bounds memory accesses\n\nCurrently, mlxsw allows cooling states to be set above the maximum\ncooling state supported by the driver:\n\n # cat /sys/class/thermal/thermal_zone2/cdev0/type\n mlxsw_fan\n # cat /sys/class/thermal/thermal_zone2/cdev0/max_state\n 10\n # echo 18 \u003e /sys/class/thermal/thermal_zone2/cdev0/cur_state\n # echo $?\n 0\n\nThis results in out-of-bounds memory accesses when thermal state\ntransition statistics are enabled (CONFIG_THERMAL_STATISTICS=y), as the\ntransition table is accessed with a too large index (state) [1].\n\nAccording to the thermal maintainer, it is the responsibility of the\ndriver to reject such operations [2].\n\nTherefore, return an error when the state to be set exceeds the maximum\ncooling state supported by the driver.\n\nTo avoid dead code, as suggested by the thermal maintainer [3],\npartially revert commit a421ce088ac8 (\"mlxsw: core: Extend cooling\ndevice with cooling levels\") that tried to interpret these invalid\ncooling states (above the maximum) in a special way. The cooling levels\narray is not removed in order to prevent the fans going below 20% PWM,\nwhich would cause them to get stuck at 0% PWM.\n\n[1]\nBUG: KASAN: slab-out-of-bounds in thermal_cooling_device_stats_update+0x271/0x290\nRead of size 4 at addr ffff8881052f7bf8 by task kworker/0:0/5\n\nCPU: 0 PID: 5 Comm: kworker/0:0 Not tainted 5.15.0-rc3-custom-45935-gce1adf704b14 #122\nHardware name: Mellanox Technologies Ltd. \"MSN2410-CB2FO\"/\"SA000874\", BIOS 4.6.5 03/08/2016\nWorkqueue: events_freezable_power_ thermal_zone_device_check\nCall Trace:\n dump_stack_lvl+0x8b/0xb3\n print_address_description.constprop.0+0x1f/0x140\n kasan_report.cold+0x7f/0x11b\n thermal_cooling_device_stats_update+0x271/0x290\n __thermal_cdev_update+0x15e/0x4e0\n thermal_cdev_update+0x9f/0xe0\n step_wise_throttle+0x770/0xee0\n thermal_zone_device_update+0x3f6/0xdf0\n process_one_work+0xa42/0x1770\n worker_thread+0x62f/0x13e0\n kthread+0x3ee/0x4e0\n ret_from_fork+0x1f/0x30\n\nAllocated by task 1:\n kasan_save_stack+0x1b/0x40\n __kasan_kmalloc+0x7c/0x90\n thermal_cooling_device_setup_sysfs+0x153/0x2c0\n __thermal_cooling_device_register.part.0+0x25b/0x9c0\n thermal_cooling_device_register+0xb3/0x100\n mlxsw_thermal_init+0x5c5/0x7e0\n __mlxsw_core_bus_device_register+0xcb3/0x19c0\n mlxsw_core_bus_device_register+0x56/0xb0\n mlxsw_pci_probe+0x54f/0x710\n local_pci_probe+0xc6/0x170\n pci_device_probe+0x2b2/0x4d0\n really_probe+0x293/0xd10\n __driver_probe_device+0x2af/0x440\n driver_probe_device+0x51/0x1e0\n __driver_attach+0x21b/0x530\n bus_for_each_dev+0x14c/0x1d0\n bus_add_driver+0x3ac/0x650\n driver_register+0x241/0x3d0\n mlxsw_sp_module_init+0xa2/0x174\n do_one_initcall+0xee/0x5f0\n kernel_init_freeable+0x45a/0x4de\n kernel_init+0x1f/0x210\n ret_from_fork+0x1f/0x30\n\nThe buggy address belongs to the object at ffff8881052f7800\n which belongs to the cache kmalloc-1k of size 1024\nThe buggy address is located 1016 bytes inside of\n 1024-byte region [ffff8881052f7800, ffff8881052f7c00)\nThe buggy address belongs to the page:\npage:0000000052355272 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1052f0\nhead:0000000052355272 order:3 compound_mapcount:0 compound_pincount:0\nflags: 0x200000000010200(slab|head|node=0|zone=2)\nraw: 0200000000010200 ffffea0005034800 0000000300000003 ffff888100041dc0\nraw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881052f7a80: 00 00 00 00 00 00 04 fc fc fc fc fc fc fc fc fc\n ffff8881052f7b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n\u003effff8881052f7b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                                                                ^\n ffff8881052f7c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff8881052f7c80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n\n[2] https://lore.kernel.org/linux-pm/9aca37cb-1629-5c67-\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47468",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nisdn: mISDN: Fix sleeping function called from invalid context\n\nThe driver can call card-\u003eisac.release() function from an atomic\ncontext.\n\nFix this by calling this function after releasing the lock.\n\nThe following log reveals it:\n\n[   44.168226 ] BUG: sleeping function called from invalid context at kernel/workqueue.c:3018\n[   44.168941 ] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 5475, name: modprobe\n[   44.169574 ] INFO: lockdep is turned off.\n[   44.169899 ] irq event stamp: 0\n[   44.170160 ] hardirqs last  enabled at (0): [\u003c0000000000000000\u003e] 0x0\n[   44.170627 ] hardirqs last disabled at (0): [\u003cffffffff814209ed\u003e] copy_process+0x132d/0x3e00\n[   44.171240 ] softirqs last  enabled at (0): [\u003cffffffff81420a1a\u003e] copy_process+0x135a/0x3e00\n[   44.171852 ] softirqs last disabled at (0): [\u003c0000000000000000\u003e] 0x0\n[   44.172318 ] Preemption disabled at:\n[   44.172320 ] [\u003cffffffffa009b0a9\u003e] nj_release+0x69/0x500 [netjet]\n[   44.174441 ] Call Trace:\n[   44.174630 ]  dump_stack_lvl+0xa8/0xd1\n[   44.174912 ]  dump_stack+0x15/0x17\n[   44.175166 ]  ___might_sleep+0x3a2/0x510\n[   44.175459 ]  ? nj_release+0x69/0x500 [netjet]\n[   44.175791 ]  __might_sleep+0x82/0xe0\n[   44.176063 ]  ? start_flush_work+0x20/0x7b0\n[   44.176375 ]  start_flush_work+0x33/0x7b0\n[   44.176672 ]  ? trace_irq_enable_rcuidle+0x85/0x170\n[   44.177034 ]  ? kasan_quarantine_put+0xaa/0x1f0\n[   44.177372 ]  ? kasan_quarantine_put+0xaa/0x1f0\n[   44.177711 ]  __flush_work+0x11a/0x1a0\n[   44.177991 ]  ? flush_work+0x20/0x20\n[   44.178257 ]  ? lock_release+0x13c/0x8f0\n[   44.178550 ]  ? __kasan_check_write+0x14/0x20\n[   44.178872 ]  ? do_raw_spin_lock+0x148/0x360\n[   44.179187 ]  ? read_lock_is_recursive+0x20/0x20\n[   44.179530 ]  ? __kasan_check_read+0x11/0x20\n[   44.179846 ]  ? do_raw_spin_unlock+0x55/0x900\n[   44.180168 ]  ? ____kasan_slab_free+0x116/0x140\n[   44.180505 ]  ? _raw_spin_unlock_irqrestore+0x41/0x60\n[   44.180878 ]  ? skb_queue_purge+0x1a3/0x1c0\n[   44.181189 ]  ? kfree+0x13e/0x290\n[   44.181438 ]  flush_work+0x17/0x20\n[   44.181695 ]  mISDN_freedchannel+0xe8/0x100\n[   44.182006 ]  isac_release+0x210/0x260 [mISDNipac]\n[   44.182366 ]  nj_release+0xf6/0x500 [netjet]\n[   44.182685 ]  nj_remove+0x48/0x70 [netjet]\n[   44.182989 ]  pci_device_remove+0xa9/0x250",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47501",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix NULL pointer dereference in i40e_dbg_dump_desc\n\nWhen trying to dump VFs VSI RX/TX descriptors\nusing debugfs there was a crash\ndue to NULL pointer dereference in i40e_dbg_dump_desc.\nAdded a check to i40e_dbg_dump_desc that checks if\nVSI type is correct for dumping RX/TX descriptors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47516",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfp: Fix memory leak in nfp_cpp_area_cache_add()\n\nIn line 800 (#1), nfp_cpp_area_alloc() allocates and initializes a\nCPP area structure. But in line 807 (#2), when the cache is allocated\nfailed, this CPP area structure is not freed, which will result in\nmemory leak.\n\nWe can fix it by freeing the CPP area when the cache is allocated\nfailed (#2).\n\n792 int nfp_cpp_area_cache_add(struct nfp_cpp *cpp, size_t size)\n793 {\n794 \tstruct nfp_cpp_area_cache *cache;\n795 \tstruct nfp_cpp_area *area;\n\n800\tarea = nfp_cpp_area_alloc(cpp, NFP_CPP_ID(7, NFP_CPP_ACTION_RW, 0),\n801 \t\t\t\t  0, size);\n\t// #1: allocates and initializes\n\n802 \tif (!area)\n803 \t\treturn -ENOMEM;\n\n805 \tcache = kzalloc(sizeof(*cache), GFP_KERNEL);\n806 \tif (!cache)\n807 \t\treturn -ENOMEM; // #2: missing free\n\n817\treturn 0;\n818 }",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47542",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qlogic: qlcnic: Fix a NULL pointer dereference in qlcnic_83xx_add_rings()\n\nIn qlcnic_83xx_add_rings(), the indirect function of\nahw-\u003ehw_ops-\u003ealloc_mbx_args will be called to allocate memory for\ncmd.req.arg, and there is a dereference of it in qlcnic_83xx_add_rings(),\nwhich could lead to a NULL pointer dereference on failure of the\nindirect function like qlcnic_83xx_alloc_mbx_args().\n\nFix this bug by adding a check of alloc_mbx_args(), this patch\nimitates the logic of mbx_cmd()'s failure handling.\n\nThis bug was found by a static analyzer. The analysis employs\ndifferential checking to identify inconsistent security operations\n(e.g., checks or kfrees) between two code paths and confirms that the\ninconsistent operations are not recovered in the current function or\nthe callers, so they constitute bugs.\n\nNote that, as a bug found by static analysis, it can be a false\npositive or hard to trigger. Multiple researchers have cross-reviewed\nthe bug.\n\nBuilds with CONFIG_QLCNIC=m show no new warnings, and our\nstatic analyzer no longer warns about this code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47549",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsata_fsl: fix UAF in sata_fsl_port_stop when rmmod sata_fsl\n\nWhen the `rmmod sata_fsl.ko` command is executed in the PPC64 GNU/Linux,\na bug is reported:\n ==================================================================\n BUG: Unable to handle kernel data access on read at 0x80000800805b502c\n Oops: Kernel access of bad area, sig: 11 [#1]\n NIP [c0000000000388a4] .ioread32+0x4/0x20\n LR [80000000000c6034] .sata_fsl_port_stop+0x44/0xe0 [sata_fsl]\n Call Trace:\n  .free_irq+0x1c/0x4e0 (unreliable)\n  .ata_host_stop+0x74/0xd0 [libata]\n  .release_nodes+0x330/0x3f0\n  .device_release_driver_internal+0x178/0x2c0\n  .driver_detach+0x64/0xd0\n  .bus_remove_driver+0x70/0xf0\n  .driver_unregister+0x38/0x80\n  .platform_driver_unregister+0x14/0x30\n  .fsl_sata_driver_exit+0x18/0xa20 [sata_fsl]\n  .__se_sys_delete_module+0x1ec/0x2d0\n  .system_call_exception+0xfc/0x1f0\n  system_call_common+0xf8/0x200\n ==================================================================\n\nThe triggering of the BUG is shown in the following stack:\n\ndriver_detach\n  device_release_driver_internal\n    __device_release_driver\n      drv-\u003eremove(dev) --\u003e platform_drv_remove/platform_remove\n        drv-\u003eremove(dev) --\u003e sata_fsl_remove\n          iounmap(host_priv-\u003ehcr_base);\t\t\t\u003c---- unmap\n          kfree(host_priv);                             \u003c---- free\n      devres_release_all\n        release_nodes\n          dr-\u003enode.release(dev, dr-\u003edata) --\u003e ata_host_stop\n            ap-\u003eops-\u003eport_stop(ap) --\u003e sata_fsl_port_stop\n                ioread32(hcr_base + HCONTROL)           \u003c---- UAF\n            host-\u003eops-\u003ehost_stop(host)\n\nThe iounmap(host_priv-\u003ehcr_base) and kfree(host_priv) functions should\nnot be executed in drv-\u003eremove. These functions should be executed in\nhost_stop after port_stop. Therefore, we move these functions to the\nnew function sata_fsl_host_stop and bind the new function to host_stop.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47580",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix type in min_t to avoid stack OOB\n\nChange min_t() to use type \"u32\" instead of type \"int\" to avoid stack out\nof bounds. With min_t() type \"int\" the values get sign extended and the\nlarger value gets used causing stack out of bounds.\n\nBUG: KASAN: stack-out-of-bounds in memcpy include/linux/fortify-string.h:191 [inline]\nBUG: KASAN: stack-out-of-bounds in sg_copy_buffer+0x1de/0x240 lib/scatterlist.c:976\nRead of size 127 at addr ffff888072607128 by task syz-executor.7/18707\n\nCPU: 1 PID: 18707 Comm: syz-executor.7 Not tainted 5.15.0-syzk #1\nHardware name: Red Hat KVM, BIOS 1.13.0-2\nCall Trace:\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x89/0xb5 lib/dump_stack.c:106\n print_address_description.constprop.9+0x28/0x160 mm/kasan/report.c:256\n __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold.14+0x7d/0x117 mm/kasan/report.c:459\n check_region_inline mm/kasan/generic.c:183 [inline]\n kasan_check_range+0x1a3/0x210 mm/kasan/generic.c:189\n memcpy+0x23/0x60 mm/kasan/shadow.c:65\n memcpy include/linux/fortify-string.h:191 [inline]\n sg_copy_buffer+0x1de/0x240 lib/scatterlist.c:976\n sg_copy_from_buffer+0x33/0x40 lib/scatterlist.c:1000\n fill_from_dev_buffer.part.34+0x82/0x130 drivers/scsi/scsi_debug.c:1162\n fill_from_dev_buffer drivers/scsi/scsi_debug.c:1888 [inline]\n resp_readcap16+0x365/0x3b0 drivers/scsi/scsi_debug.c:1887\n schedule_resp+0x4d8/0x1a70 drivers/scsi/scsi_debug.c:5478\n scsi_debug_queuecommand+0x8c9/0x1ec0 drivers/scsi/scsi_debug.c:7533\n scsi_dispatch_cmd drivers/scsi/scsi_lib.c:1520 [inline]\n scsi_queue_rq+0x16b0/0x2d40 drivers/scsi/scsi_lib.c:1699\n blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c:1639\n __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c:325\n blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c:358\n __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c:1761\n __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c:1838\n blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c:1891\n blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c:474\n blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c:62\n sg_common_write.isra.18+0xeb3/0x2000 drivers/scsi/sg.c:836\n sg_new_write.isra.19+0x570/0x8c0 drivers/scsi/sg.c:774\n sg_ioctl_common+0x14d6/0x2710 drivers/scsi/sg.c:939\n sg_ioctl+0xa2/0x180 drivers/scsi/sg.c:1165\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:874 [inline]\n __se_sys_ioctl fs/ioctl.c:860 [inline]\n __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c:860\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3a/0x80 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47582",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Make do_proc_control() and do_proc_bulk() killable\n\nThe USBDEVFS_CONTROL and USBDEVFS_BULK ioctls invoke\nusb_start_wait_urb(), which contains an uninterruptible wait with a\nuser-specified timeout value.  If timeout value is very large and the\ndevice being accessed does not respond in a reasonable amount of time,\nthe kernel will complain about \"Task X blocked for more than N\nseconds\", as found in testing by syzbot:\n\nINFO: task syz-executor.0:8700 blocked for more than 143 seconds.\n      Not tainted 5.14.0-rc7-syzkaller #0\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:syz-executor.0  state:D stack:23192 pid: 8700 ppid:  8455 flags:0x00004004\nCall Trace:\n context_switch kernel/sched/core.c:4681 [inline]\n __schedule+0xc07/0x11f0 kernel/sched/core.c:5938\n schedule+0x14b/0x210 kernel/sched/core.c:6017\n schedule_timeout+0x98/0x2f0 kernel/time/timer.c:1857\n do_wait_for_common+0x2da/0x480 kernel/sched/completion.c:85\n __wait_for_common kernel/sched/completion.c:106 [inline]\n wait_for_common kernel/sched/completion.c:117 [inline]\n wait_for_completion_timeout+0x46/0x60 kernel/sched/completion.c:157\n usb_start_wait_urb+0x167/0x550 drivers/usb/core/message.c:63\n do_proc_bulk+0x978/0x1080 drivers/usb/core/devio.c:1236\n proc_bulk drivers/usb/core/devio.c:1273 [inline]\n usbdev_do_ioctl drivers/usb/core/devio.c:2547 [inline]\n usbdev_ioctl+0x3441/0x6b10 drivers/usb/core/devio.c:2713\n...\n\nTo fix this problem, this patch replaces usbfs's calls to\nusb_control_msg() and usb_bulk_msg() with special-purpose code that\ndoes essentially the same thing (as recommended in the comment for\nusb_start_wait_urb()), except that it always uses a killable wait and\nit uses GFP_KERNEL rather than GFP_NOIO.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47588",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsit: do not call ipip6_dev_free() from sit_init_net()\n\nipip6_dev_free is sit dev-\u003epriv_destructor, already called\nby register_netdevice() if something goes wrong.\n\nAlternative would be to make ipip6_dev_free() robust against\nmultiple invocations, but other drivers do not implement this\nstrategy.\n\nsyzbot reported:\n\ndst_release underflow\nWARNING: CPU: 0 PID: 5059 at net/core/dst.c:173 dst_release+0xd8/0xe0 net/core/dst.c:173\nModules linked in:\nCPU: 1 PID: 5059 Comm: syz-executor.4 Not tainted 5.16.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:dst_release+0xd8/0xe0 net/core/dst.c:173\nCode: 4c 89 f2 89 d9 31 c0 5b 41 5e 5d e9 da d5 44 f9 e8 1d 90 5f f9 c6 05 87 48 c6 05 01 48 c7 c7 80 44 99 8b 31 c0 e8 e8 67 29 f9 \u003c0f\u003e 0b eb 85 0f 1f 40 00 53 48 89 fb e8 f7 8f 5f f9 48 83 c3 a8 48\nRSP: 0018:ffffc9000aa5faa0 EFLAGS: 00010246\nRAX: d6894a925dd15a00 RBX: 00000000ffffffff RCX: 0000000000040000\nRDX: ffffc90005e19000 RSI: 000000000003ffff RDI: 0000000000040000\nRBP: 0000000000000000 R08: ffffffff816a1f42 R09: ffffed1017344f2c\nR10: ffffed1017344f2c R11: 0000000000000000 R12: 0000607f462b1358\nR13: 1ffffffff1bfd305 R14: ffffe8ffffcb1358 R15: dffffc0000000000\nFS:  00007f66c71a2700(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f88aaed5058 CR3: 0000000023e0f000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n dst_cache_destroy+0x107/0x1e0 net/core/dst_cache.c:160\n ipip6_dev_free net/ipv6/sit.c:1414 [inline]\n sit_init_net+0x229/0x550 net/ipv6/sit.c:1936\n ops_init+0x313/0x430 net/core/net_namespace.c:140\n setup_net+0x35b/0x9d0 net/core/net_namespace.c:326\n copy_net_ns+0x359/0x5c0 net/core/net_namespace.c:470\n create_new_namespaces+0x4ce/0xa00 kernel/nsproxy.c:110\n unshare_nsproxy_namespaces+0x11e/0x180 kernel/nsproxy.c:226\n ksys_unshare+0x57d/0xb50 kernel/fork.c:3075\n __do_sys_unshare kernel/fork.c:3146 [inline]\n __se_sys_unshare kernel/fork.c:3144 [inline]\n __x64_sys_unshare+0x34/0x40 kernel/fork.c:3144\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f66c882ce99\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f66c71a2168 EFLAGS: 00000246 ORIG_RAX: 0000000000000110\nRAX: ffffffffffffffda RBX: 00007f66c893ff60 RCX: 00007f66c882ce99\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000048040200\nRBP: 00007f66c8886ff1 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007fff6634832f R14: 00007f66c71a2300 R15: 0000000000022000\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47597",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet_diag: fix kernel-infoleak for UDP sockets\n\nKMSAN reported a kernel-infoleak [1], that can exploited\nby unpriv users.\n\nAfter analysis it turned out UDP was not initializing\nr-\u003eidiag_expires. Other users of inet_sk_diag_fill()\nmight make the same mistake in the future, so fix this\nin inet_sk_diag_fill().\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:121 [inline]\nBUG: KMSAN: kernel-infoleak in copyout lib/iov_iter.c:156 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_iter+0x69d/0x25c0 lib/iov_iter.c:670\n instrument_copy_to_user include/linux/instrumented.h:121 [inline]\n copyout lib/iov_iter.c:156 [inline]\n _copy_to_iter+0x69d/0x25c0 lib/iov_iter.c:670\n copy_to_iter include/linux/uio.h:155 [inline]\n simple_copy_to_iter+0xf3/0x140 net/core/datagram.c:519\n __skb_datagram_iter+0x2cb/0x1280 net/core/datagram.c:425\n skb_copy_datagram_iter+0xdc/0x270 net/core/datagram.c:533\n skb_copy_datagram_msg include/linux/skbuff.h:3657 [inline]\n netlink_recvmsg+0x660/0x1c60 net/netlink/af_netlink.c:1974\n sock_recvmsg_nosec net/socket.c:944 [inline]\n sock_recvmsg net/socket.c:962 [inline]\n sock_read_iter+0x5a9/0x630 net/socket.c:1035\n call_read_iter include/linux/fs.h:2156 [inline]\n new_sync_read fs/read_write.c:400 [inline]\n vfs_read+0x1631/0x1980 fs/read_write.c:481\n ksys_read+0x28c/0x520 fs/read_write.c:619\n __do_sys_read fs/read_write.c:629 [inline]\n __se_sys_read fs/read_write.c:627 [inline]\n __x64_sys_read+0xdb/0x120 fs/read_write.c:627\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nUninit was created at:\n slab_post_alloc_hook mm/slab.h:524 [inline]\n slab_alloc_node mm/slub.c:3251 [inline]\n __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974\n kmalloc_reserve net/core/skbuff.c:354 [inline]\n __alloc_skb+0x545/0xf90 net/core/skbuff.c:426\n alloc_skb include/linux/skbuff.h:1126 [inline]\n netlink_dump+0x3d5/0x16a0 net/netlink/af_netlink.c:2245\n __netlink_dump_start+0xd1c/0xee0 net/netlink/af_netlink.c:2370\n netlink_dump_start include/linux/netlink.h:254 [inline]\n inet_diag_handler_cmd+0x2e7/0x400 net/ipv4/inet_diag.c:1343\n sock_diag_rcv_msg+0x24a/0x620\n netlink_rcv_skb+0x447/0x800 net/netlink/af_netlink.c:2491\n sock_diag_rcv+0x63/0x80 net/core/sock_diag.c:276\n netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]\n netlink_unicast+0x1095/0x1360 net/netlink/af_netlink.c:1345\n netlink_sendmsg+0x16f3/0x1870 net/netlink/af_netlink.c:1916\n sock_sendmsg_nosec net/socket.c:704 [inline]\n sock_sendmsg net/socket.c:724 [inline]\n sock_write_iter+0x594/0x690 net/socket.c:1057\n do_iter_readv_writev+0xa7f/0xc70\n do_iter_write+0x52c/0x1500 fs/read_write.c:851\n vfs_writev fs/read_write.c:924 [inline]\n do_writev+0x63f/0xe30 fs/read_write.c:967\n __do_sys_writev fs/read_write.c:1040 [inline]\n __se_sys_writev fs/read_write.c:1037 [inline]\n __x64_sys_writev+0xe5/0x120 fs/read_write.c:1037\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nBytes 68-71 of 312 are uninitialized\nMemory access of size 312 starts at ffff88812ab54000\nData copied to user address 0000000020001440\n\nCPU: 1 PID: 6365 Comm: syz-executor801 Not tainted 5.16.0-rc3-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47599",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: use latest_dev in btrfs_show_devname\n\nThe test case btrfs/238 reports the warning below:\n\n WARNING: CPU: 3 PID: 481 at fs/btrfs/super.c:2509 btrfs_show_devname+0x104/0x1e8 [btrfs]\n CPU: 2 PID: 1 Comm: systemd Tainted: G        W  O 5.14.0-rc1-custom #72\n Hardware name: QEMU QEMU Virtual Machine, BIOS 0.0.0 02/06/2015\n Call trace:\n   btrfs_show_devname+0x108/0x1b4 [btrfs]\n   show_mountinfo+0x234/0x2c4\n   m_show+0x28/0x34\n   seq_read_iter+0x12c/0x3c4\n   vfs_read+0x29c/0x2c8\n   ksys_read+0x80/0xec\n   __arm64_sys_read+0x28/0x34\n   invoke_syscall+0x50/0xf8\n   do_el0_svc+0x88/0x138\n   el0_svc+0x2c/0x8c\n   el0t_64_sync_handler+0x84/0xe4\n   el0t_64_sync+0x198/0x19c\n\nReason:\nWhile btrfs_prepare_sprout() moves the fs_devices::devices into\nfs_devices::seed_list, the btrfs_show_devname() searches for the devices\nand found none, leading to the warning as in above.\n\nFix:\nlatest_dev is updated according to the changes to the device list.\nThat means we could use the latest_dev-\u003ename to show the device name in\n/proc/self/mounts, the pointer will be always valid as it's assigned\nbefore the device is deleted from the list in remove or replace.\nThe RCU protection is sufficient as the device structure is freed after\nsynchronization.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47606",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: netlink: af_netlink: Prevent empty skb by adding a check on len.\n\nAdding a check on len parameter to avoid empty skb. This prevents a\ndivision error in netem_enqueue function which is caused when skb-\u003elen=0\nand skb-\u003edata_len=0 in the randomized corruption step as shown below.\n\nskb-\u003edata[prandom_u32() % skb_headlen(skb)] ^= 1\u003c\u003c(prandom_u32() % 8);\n\nCrash Report:\n[  343.170349] netdevsim netdevsim0 netdevsim3: set [1, 0] type 2 family\n0 port 6081 - 0\n[  343.216110] netem: version 1.3\n[  343.235841] divide error: 0000 [#1] PREEMPT SMP KASAN NOPTI\n[  343.236680] CPU: 3 PID: 4288 Comm: reproducer Not tainted 5.16.0-rc1+\n[  343.237569] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS 1.11.0-2.el7 04/01/2014\n[  343.238707] RIP: 0010:netem_enqueue+0x1590/0x33c0 [sch_netem]\n[  343.239499] Code: 89 85 58 ff ff ff e8 5f 5d e9 d3 48 8b b5 48 ff ff\nff 8b 8d 50 ff ff ff 8b 85 58 ff ff ff 48 8b bd 70 ff ff ff 31 d2 2b 4f\n74 \u003cf7\u003e f1 48 b8 00 00 00 00 00 fc ff df 49 01 d5 4c 89 e9 48 c1 e9 03\n[  343.241883] RSP: 0018:ffff88800bcd7368 EFLAGS: 00010246\n[  343.242589] RAX: 00000000ba7c0a9c RBX: 0000000000000001 RCX:\n0000000000000000\n[  343.243542] RDX: 0000000000000000 RSI: ffff88800f8edb10 RDI:\nffff88800f8eda40\n[  343.244474] RBP: ffff88800bcd7458 R08: 0000000000000000 R09:\nffffffff94fb8445\n[  343.245403] R10: ffffffff94fb8336 R11: ffffffff94fb8445 R12:\n0000000000000000\n[  343.246355] R13: ffff88800a5a7000 R14: ffff88800a5b5800 R15:\n0000000000000020\n[  343.247291] FS:  00007fdde2bd7700(0000) GS:ffff888109780000(0000)\nknlGS:0000000000000000\n[  343.248350] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  343.249120] CR2: 00000000200000c0 CR3: 000000000ef4c000 CR4:\n00000000000006e0\n[  343.250076] Call Trace:\n[  343.250423]  \u003cTASK\u003e\n[  343.250713]  ? memcpy+0x4d/0x60\n[  343.251162]  ? netem_init+0xa0/0xa0 [sch_netem]\n[  343.251795]  ? __sanitizer_cov_trace_pc+0x21/0x60\n[  343.252443]  netem_enqueue+0xe28/0x33c0 [sch_netem]\n[  343.253102]  ? stack_trace_save+0x87/0xb0\n[  343.253655]  ? filter_irq_stacks+0xb0/0xb0\n[  343.254220]  ? netem_init+0xa0/0xa0 [sch_netem]\n[  343.254837]  ? __kasan_check_write+0x14/0x20\n[  343.255418]  ? _raw_spin_lock+0x88/0xd6\n[  343.255953]  dev_qdisc_enqueue+0x50/0x180\n[  343.256508]  __dev_queue_xmit+0x1a7e/0x3090\n[  343.257083]  ? netdev_core_pick_tx+0x300/0x300\n[  343.257690]  ? check_kcov_mode+0x10/0x40\n[  343.258219]  ? _raw_spin_unlock_irqrestore+0x29/0x40\n[  343.258899]  ? __kasan_init_slab_obj+0x24/0x30\n[  343.259529]  ? setup_object.isra.71+0x23/0x90\n[  343.260121]  ? new_slab+0x26e/0x4b0\n[  343.260609]  ? kasan_poison+0x3a/0x50\n[  343.261118]  ? kasan_unpoison+0x28/0x50\n[  343.261637]  ? __kasan_slab_alloc+0x71/0x90\n[  343.262214]  ? memcpy+0x4d/0x60\n[  343.262674]  ? write_comp_data+0x2f/0x90\n[  343.263209]  ? __kasan_check_write+0x14/0x20\n[  343.263802]  ? __skb_clone+0x5d6/0x840\n[  343.264329]  ? __sanitizer_cov_trace_pc+0x21/0x60\n[  343.264958]  dev_queue_xmit+0x1c/0x20\n[  343.265470]  netlink_deliver_tap+0x652/0x9c0\n[  343.266067]  netlink_unicast+0x5a0/0x7f0\n[  343.266608]  ? netlink_attachskb+0x860/0x860\n[  343.267183]  ? __sanitizer_cov_trace_pc+0x21/0x60\n[  343.267820]  ? write_comp_data+0x2f/0x90\n[  343.268367]  netlink_sendmsg+0x922/0xe80\n[  343.268899]  ? netlink_unicast+0x7f0/0x7f0\n[  343.269472]  ? __sanitizer_cov_trace_pc+0x21/0x60\n[  343.270099]  ? write_comp_data+0x2f/0x90\n[  343.270644]  ? netlink_unicast+0x7f0/0x7f0\n[  343.271210]  sock_sendmsg+0x155/0x190\n[  343.271721]  ____sys_sendmsg+0x75f/0x8f0\n[  343.272262]  ? kernel_sendmsg+0x60/0x60\n[  343.272788]  ? write_comp_data+0x2f/0x90\n[  343.273332]  ? write_comp_data+0x2f/0x90\n[  343.273869]  ___sys_sendmsg+0x10f/0x190\n[  343.274405]  ? sendmsg_copy_msghdr+0x80/0x80\n[  343.274984]  ? slab_post_alloc_hook+0x70/0x230\n[  343.275597]  ? futex_wait_setup+0x240/0x240\n[  343.276175]  ? security_file_alloc+0x3e/0x170\n[  343.276779]  ? write_comp_d\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47619",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix queues reservation for XDP\n\nWhen XDP was configured on a system with large number of CPUs\nand X722 NIC there was a call trace with NULL pointer dereference.\n\ni40e 0000:87:00.0: failed to get tracking for 256 queues for VSI 0 err -12\ni40e 0000:87:00.0: setup of MAIN VSI failed\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nRIP: 0010:i40e_xdp+0xea/0x1b0 [i40e]\nCall Trace:\n? i40e_reconfig_rss_queues+0x130/0x130 [i40e]\ndev_xdp_install+0x61/0xe0\ndev_xdp_attach+0x18a/0x4c0\ndev_change_xdp_fd+0x1e6/0x220\ndo_setlink+0x616/0x1030\n? ahci_port_stop+0x80/0x80\n? ata_qc_issue+0x107/0x1e0\n? lock_timer_base+0x61/0x80\n? __mod_timer+0x202/0x380\nrtnl_setlink+0xe5/0x170\n? bpf_lsm_binder_transaction+0x10/0x10\n? security_capable+0x36/0x50\nrtnetlink_rcv_msg+0x121/0x350\n? rtnl_calcit.isra.0+0x100/0x100\nnetlink_rcv_skb+0x50/0xf0\nnetlink_unicast+0x1d3/0x2a0\nnetlink_sendmsg+0x22a/0x440\nsock_sendmsg+0x5e/0x60\n__sys_sendto+0xf0/0x160\n? __sys_getsockname+0x7e/0xc0\n? _copy_from_user+0x3c/0x80\n? __sys_setsockopt+0xc8/0x1a0\n__x64_sys_sendto+0x20/0x30\ndo_syscall_64+0x33/0x40\nentry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f83fa7a39e0\n\nThis was caused by PF queue pile fragmentation due to\nflow director VSI queue being placed right after main VSI.\nBecause of this main VSI was not able to resize its\nqueue allocation for XDP resulting in no queues allocated\nfor main VSI when XDP was turned on.\n\nFix this by always allocating last queue in PF queue pile\nfor a flow director VSI.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47620",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: refactor malicious adv data check\n\nCheck for out-of-bound read was being performed at the end of while\nnum_reports loop, and would fill journal with false positives. Added\ncheck to beginning of loop processing so that it doesn't get checked\nafter ptr has been advanced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-20368",
      "Description": "Product: AndroidVersions: Android kernelAndroid ID: A-224546354References: Upstream kernel",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-28748",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48751",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: Transitional solution for clcsock race issue\n\nWe encountered a crash in smc_setsockopt() and it is caused by\naccessing smc-\u003eclcsock after clcsock was released.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000020\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP PTI\n CPU: 1 PID: 50309 Comm: nginx Kdump: loaded Tainted: G E     5.16.0-rc4+ #53\n RIP: 0010:smc_setsockopt+0x59/0x280 [smc]\n Call Trace:\n  \u003cTASK\u003e\n  __sys_setsockopt+0xfc/0x190\n  __x64_sys_setsockopt+0x20/0x30\n  do_syscall_64+0x34/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n RIP: 0033:0x7f16ba83918e\n  \u003c/TASK\u003e\n\nThis patch tries to fix it by holding clcsock_release_lock and\nchecking whether clcsock has already been released before access.\n\nIn case that a crash of the same reason happens in smc_getsockopt()\nor smc_switch_to_fallback(), this patch also checkes smc-\u003eclcsock\nin them too. And the caller of smc_switch_to_fallback() will identify\nwhether fallback succeeds according to the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48769",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi: runtime: avoid EFIv2 runtime services on Apple x86 machines\n\nAditya reports [0] that his recent MacbookPro crashes in the firmware\nwhen using the variable services at runtime. The culprit appears to be a\ncall to QueryVariableInfo(), which we did not use to call on Apple x86\nmachines in the past as they only upgraded from EFI v1.10 to EFI v2.40\nfirmware fairly recently, and QueryVariableInfo() (along with\nUpdateCapsule() et al) was added in EFI v2.00.\n\nThe only runtime service introduced in EFI v2.00 that we actually use in\nLinux is QueryVariableInfo(), as the capsule based ones are optional,\ngenerally not used at runtime (all the LVFS/fwupd firmware update\ninfrastructure uses helper EFI programs that invoke capsule update at\nboot time, not runtime), and not implemented by Apple machines in the\nfirst place. QueryVariableInfo() is used to 'safely' set variables,\ni.e., only when there is enough space. This prevents machines with buggy\nfirmwares from corrupting their NVRAMs when they run out of space.\n\nGiven that Apple machines have been using EFI v1.10 services only for\nthe longest time (the EFI v2.0 spec was released in 2006, and Linux\nsupport for the newly introduced runtime services was added in 2011, but\nthe MacbookPro12,1 released in 2015 still claims to be EFI v1.10 only),\nlet's avoid the EFI v2.0 ones on all Apple x86 machines.\n\n[0] https://lore.kernel.org/all/6D757C75-65B1-468B-842D-10410081A8E4@live.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48775",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Fix memory leak in vmbus_add_channel_kobj\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add():\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix memory leak by calling kobject_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: remove vsock from connected table when connect is interrupted by a signal\n\nvsock_connect() expects that the socket could already be in the\nTCP_ESTABLISHED state when the connecting task wakes up with a signal\npending. If this happens the socket will be in the connected table, and\nit is not removed when the socket state is reset. In this situation it's\ncommon for the process to retry connect(), and if the connection is\nsuccessful the socket will be added to the connected table a second\ntime, corrupting the list.\n\nPrevent this by calling vsock_remove_connected() if a signal is received\nwhile waiting for a connection. This is harmless if the socket is not in\nthe connected table, and if it is in the table then removing it will\nprevent list corruption from a double add.\n\nNote for backporting: this patch requires d5afa82c977e (\"vsock: correct\nremoval of socket from the list\"), which is in all current stable trees\nexcept 4.9.y.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48788",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-rdma: fix possible use-after-free in transport error_recovery work\n\nWhile nvme_rdma_submit_async_event_work is checking the ctrl and queue\nstate before preparing the AER command and scheduling io_work, in order\nto fully prevent a race where this check is not reliable the error\nrecovery work must flush async_event_work before continuing to destroy\nthe admin queue after setting the ctrl state to RESETTING such that\nthere is no race .submit_async_event and the error recovery handler\nitself changing the ctrl state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: fix possible use-after-free in transport error_recovery work\n\nWhile nvme_tcp_submit_async_event_work is checking the ctrl and queue\nstate before preparing the AER command and scheduling io_work, in order\nto fully prevent a race where this check is not reliable the error\nrecovery work must flush async_event_work before continuing to destroy\nthe admin queue after setting the ctrl state to RESETTING such that\nthere is no race .submit_async_event and the error recovery handler\nitself changing the ctrl state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48790",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: fix a possible use-after-free in controller reset during load\n\nUnlike .queue_rq, in .submit_async_event drivers may not check the ctrl\nreadiness for AER submission. This may lead to a use-after-free\ncondition that was observed with nvme-tcp.\n\nThe race condition may happen in the following scenario:\n1. driver executes its reset_ctrl_work\n2. -\u003e nvme_stop_ctrl - flushes ctrl async_event_work\n3. ctrl sends AEN which is received by the host, which in turn\n   schedules AEN handling\n4. teardown admin queue (which releases the queue socket)\n5. AEN processed, submits another AER, calling the driver to submit\n6. driver attempts to send the cmd\n==\u003e use-after-free\n\nIn order to fix that, add ctrl state check to validate the ctrl\nis actually able to accept the AER submission.\n\nThis addresses the above race in controller resets because the driver\nduring teardown should:\n1. change ctrl state to RESETTING\n2. flush async_event_work (as well as other async work elements)\n\nSo after 1,2, any other AER command will find the\nctrl state to be RESETTING and bail out without submitting the AER.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix use-after-free for aborted TMF sas_task\n\nCurrently a use-after-free may occur if a TMF sas_task is aborted before we\nhandle the IO completion in mpi_ssp_completion(). The abort occurs due to\ntimeout.\n\nWhen the timeout occurs, the SAS_TASK_STATE_ABORTED flag is set and the\nsas_task is freed in pm8001_exec_internal_tmf_task().\n\nHowever, if the I/O completion occurs later, the I/O completion still\nthinks that the sas_task is available. Fix this by clearing the ccb-\u003etask\nif the TMF times out - the I/O completion handler does nothing if this\npointer is cleared.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix use-after-free for aborted SSP/STP sas_task\n\nCurrently a use-after-free may occur if a sas_task is aborted by the upper\nlayer before we handle the I/O completion in mpi_ssp_completion() or\nmpi_sata_completion().\n\nIn this case, the following are the two steps in handling those I/O\ncompletions:\n\n - Call complete() to inform the upper layer handler of completion of\n   the I/O.\n\n - Release driver resources associated with the sas_task in\n   pm8001_ccb_task_free() call.\n\nWhen complete() is called, the upper layer may free the sas_task. As such,\nwe should not touch the associated sas_task afterwards, but we do so in the\npm8001_ccb_task_free() call.\n\nFix by swapping the complete() and pm8001_ccb_task_free() calls ordering.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: at86rf230: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\n\nFree the skb structure upon error before returning when appropriate.\n\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\n\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48799",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix list corruption in perf_cgroup_switch()\n\nThere's list corruption on cgrp_cpuctx_list. This happens on the\nfollowing path:\n\n  perf_cgroup_switch: list_for_each_entry(cgrp_cpuctx_list)\n      cpu_ctx_sched_in\n         ctx_sched_in\n            ctx_pinned_sched_in\n              merge_sched_in\n                  perf_cgroup_event_disable: remove the event from the list\n\nUse list_for_each_entry_safe() to allow removing an entry during\niteration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48804",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt_ioctl: fix array_index_nospec in vt_setactivate\n\narray_index_nospec ensures that an out-of-bounds value is set to zero\non the transient path. Decreasing the value by one afterwards causes\na transient integer underflow. vsa.console should be decreased first\nand then sanitized with array_index_nospec.\n\nKasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh\nRazavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU\nAmsterdam.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48810",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipmr,ip6mr: acquire RTNL before calling ip[6]mr_free_table() on failure path\n\nip[6]mr_free_table() can only be called under RTNL lock.\n\nRTNL: assertion failed at net/core/dev.c (10367)\nWARNING: CPU: 1 PID: 5890 at net/core/dev.c:10367 unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367\nModules linked in:\nCPU: 1 PID: 5890 Comm: syz-executor.2 Not tainted 5.16.0-syzkaller-11627-g422ee58dc0ef #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367\nCode: 0f 85 9b ee ff ff e8 69 07 4b fa ba 7f 28 00 00 48 c7 c6 00 90 ae 8a 48 c7 c7 40 90 ae 8a c6 05 6d b1 51 06 01 e8 8c 90 d8 01 \u003c0f\u003e 0b e9 70 ee ff ff e8 3e 07 4b fa 4c 89 e7 e8 86 2a 59 fa e9 ee\nRSP: 0018:ffffc900046ff6e0 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: ffff888050f51d00 RSI: ffffffff815fa008 RDI: fffff520008dfece\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffffff815f3d6e R11: 0000000000000000 R12: 00000000fffffff4\nR13: dffffc0000000000 R14: ffffc900046ff750 R15: ffff88807b7dc000\nFS:  00007f4ab736e700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fee0b4f8990 CR3: 000000001e7d2000 CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n mroute_clean_tables+0x244/0xb40 net/ipv6/ip6mr.c:1509\n ip6mr_free_table net/ipv6/ip6mr.c:389 [inline]\n ip6mr_rules_init net/ipv6/ip6mr.c:246 [inline]\n ip6mr_net_init net/ipv6/ip6mr.c:1306 [inline]\n ip6mr_net_init+0x3f0/0x4e0 net/ipv6/ip6mr.c:1298\n ops_init+0xaf/0x470 net/core/net_namespace.c:140\n setup_net+0x54f/0xbb0 net/core/net_namespace.c:331\n copy_net_ns+0x318/0x760 net/core/net_namespace.c:475\n create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110\n copy_namespaces+0x391/0x450 kernel/nsproxy.c:178\n copy_process+0x2e0c/0x7300 kernel/fork.c:2167\n kernel_clone+0xe7/0xab0 kernel/fork.c:2555\n __do_sys_clone+0xc8/0x110 kernel/fork.c:2672\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f4ab89f9059\nCode: Unable to access opcode bytes at RIP 0x7f4ab89f902f.\nRSP: 002b:00007f4ab736e118 EFLAGS: 00000206 ORIG_RAX: 0000000000000038\nRAX: ffffffffffffffda RBX: 00007f4ab8b0bf60 RCX: 00007f4ab89f9059\nRDX: 0000000020000280 RSI: 0000000020000270 RDI: 0000000040200000\nRBP: 00007f4ab8a5308d R08: 0000000020000300 R09: 0000000020000300\nR10: 00000000200002c0 R11: 0000000000000206 R12: 0000000000000000\nR13: 00007ffc3977cc1f R14: 00007f4ab736e300 R15: 0000000000022000\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48811",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: don't release napi in __ibmvnic_open()\n\nIf __ibmvnic_open() encounters an error such as when setting link state,\nit calls release_resources() which frees the napi structures needlessly.\nInstead, have __ibmvnic_open() only clean up the work it did so far (i.e.\ndisable napi and irqs) and leave the rest to the callers.\n\nIf caller of __ibmvnic_open() is ibmvnic_open(), it should release the\nresources immediately. If the caller is do_reset() or do_hard_reset(),\nthey will release the resources on the next reset.\n\nThis fixes following crash that occurred when running the drmgr command\nseveral times to add/remove a vnic interface:\n\n\t[102056] ibmvnic 30000003 env3: Disabling rx_scrq[6] irq\n\t[102056] ibmvnic 30000003 env3: Disabling rx_scrq[7] irq\n\t[102056] ibmvnic 30000003 env3: Replenished 8 pools\n\tKernel attempted to read user page (10) - exploit attempt? (uid: 0)\n\tBUG: Kernel NULL pointer dereference on read at 0x00000010\n\tFaulting instruction address: 0xc000000000a3c840\n\tOops: Kernel access of bad area, sig: 11 [#1]\n\tLE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\n\t...\n\tCPU: 9 PID: 102056 Comm: kworker/9:2 Kdump: loaded Not tainted 5.16.0-rc5-autotest-g6441998e2e37 #1\n\tWorkqueue: events_long __ibmvnic_reset [ibmvnic]\n\tNIP:  c000000000a3c840 LR: c0080000029b5378 CTR: c000000000a3c820\n\tREGS: c0000000548e37e0 TRAP: 0300   Not tainted  (5.16.0-rc5-autotest-g6441998e2e37)\n\tMSR:  8000000000009033 \u003cSF,EE,ME,IR,DR,RI,LE\u003e  CR: 28248484  XER: 00000004\n\tCFAR: c0080000029bdd24 DAR: 0000000000000010 DSISR: 40000000 IRQMASK: 0\n\tGPR00: c0080000029b55d0 c0000000548e3a80 c0000000028f0200 0000000000000000\n\t...\n\tNIP [c000000000a3c840] napi_enable+0x20/0xc0\n\tLR [c0080000029b5378] __ibmvnic_open+0xf0/0x430 [ibmvnic]\n\tCall Trace:\n\t[c0000000548e3a80] [0000000000000006] 0x6 (unreliable)\n\t[c0000000548e3ab0] [c0080000029b55d0] __ibmvnic_open+0x348/0x430 [ibmvnic]\n\t[c0000000548e3b40] [c0080000029bcc28] __ibmvnic_reset+0x500/0xdf0 [ibmvnic]\n\t[c0000000548e3c60] [c000000000176228] process_one_work+0x288/0x570\n\t[c0000000548e3d00] [c000000000176588] worker_thread+0x78/0x660\n\t[c0000000548e3da0] [c0000000001822f0] kthread+0x1c0/0x1d0\n\t[c0000000548e3e10] [c00000000000cf64] ret_from_kernel_thread+0x5c/0x64\n\tInstruction dump:\n\t7d2948f8 792307e0 4e800020 60000000 3c4c01eb 384239e0 f821ffd1 39430010\n\t38a0fff6 e92d1100 f9210028 39200000 \u003ce9030010\u003e f9010020 60420000 e9210020\n\t---[ end trace 5f8033b08fd27706 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: f_fs: Fix use-after-free for epfile\n\nConsider a case where ffs_func_eps_disable is called from\nffs_func_disable as part of composition switch and at the\nsame time ffs_epfile_release get called from userspace.\nffs_epfile_release will free up the read buffer and call\nffs_data_closed which in turn destroys ffs-\u003eepfiles and\nmark it as NULL. While this was happening the driver has\nalready initialized the local epfile in ffs_func_eps_disable\nwhich is now freed and waiting to acquire the spinlock. Once\nspinlock is acquired the driver proceeds with the stale value\nof epfile and tries to free the already freed read buffer\ncausing use-after-free.\n\nFollowing is the illustration of the race:\n\n      CPU1                                  CPU2\n\n   ffs_func_eps_disable\n   epfiles (local copy)\n\t\t\t\t\tffs_epfile_release\n\t\t\t\t\tffs_data_closed\n\t\t\t\t\tif (last file closed)\n\t\t\t\t\tffs_data_reset\n\t\t\t\t\tffs_data_clear\n\t\t\t\t\tffs_epfiles_destroy\nspin_lock\ndereference epfiles\n\nFix this races by taking epfiles local copy \u0026 assigning it under\nspinlock and if epfiles(local) is null then update it in ffs-\u003eepfiles\nthen finally destroy it.\nExtending the scope further from the race, protecting the ep related\nstructures, and concurrent accesses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48823",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Fix refcount issue when LOGO is received during TMF\n\nHung task call trace was seen during LOGO processing.\n\n[  974.309060] [0000:00:00.0]:[qedf_eh_device_reset:868]: 1:0:2:0: LUN RESET Issued...\n[  974.309065] [0000:00:00.0]:[qedf_initiate_tmf:2422]: tm_flags 0x10 sc_cmd 00000000c16b930f op = 0x2a target_id = 0x2 lun=0\n[  974.309178] [0000:00:00.0]:[qedf_initiate_tmf:2431]: portid=016900 tm_flags =LUN RESET\n[  974.309222] [0000:00:00.0]:[qedf_initiate_tmf:2438]: orig io_req = 00000000ec78df8f xid = 0x180 ref_cnt = 1.\n[  974.309625] host1: rport 016900: Received LOGO request while in state Ready\n[  974.309627] host1: rport 016900: Delete port\n[  974.309642] host1: rport 016900: work event 3\n[  974.309644] host1: rport 016900: lld callback ev 3\n[  974.313243] [0000:61:00.2]:[qedf_execute_tmf:2383]:1: fcport is uploading, not executing flush.\n[  974.313295] [0000:61:00.2]:[qedf_execute_tmf:2400]:1: task mgmt command success...\n[  984.031088] INFO: task jbd2/dm-15-8:7645 blocked for more than 120 seconds.\n[  984.031136]       Not tainted 4.18.0-305.el8.x86_64 #1\n\n[  984.031166] \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[  984.031209] jbd2/dm-15-8    D    0  7645      2 0x80004080\n[  984.031212] Call Trace:\n[  984.031222]  __schedule+0x2c4/0x700\n[  984.031230]  ? unfreeze_partials.isra.83+0x16e/0x1a0\n[  984.031233]  ? bit_wait_timeout+0x90/0x90\n[  984.031235]  schedule+0x38/0xa0\n[  984.031238]  io_schedule+0x12/0x40\n[  984.031240]  bit_wait_io+0xd/0x50\n[  984.031243]  __wait_on_bit+0x6c/0x80\n[  984.031248]  ? free_buffer_head+0x21/0x50\n[  984.031251]  out_of_line_wait_on_bit+0x91/0xb0\n[  984.031257]  ? init_wait_var_entry+0x50/0x50\n[  984.031268]  jbd2_journal_commit_transaction+0x112e/0x19f0 [jbd2]\n[  984.031280]  kjournald2+0xbd/0x270 [jbd2]\n[  984.031284]  ? finish_wait+0x80/0x80\n[  984.031291]  ? commit_timeout+0x10/0x10 [jbd2]\n[  984.031294]  kthread+0x116/0x130\n[  984.031300]  ? kthread_flush_work_fn+0x10/0x10\n[  984.031305]  ret_from_fork+0x1f/0x40\n\nThere was a ref count issue when LOGO is received during TMF. This leads to\none of the I/Os hanging with the driver. Fix the ref count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48826",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vc4: Fix deadlock on DSI device attach error\n\nDSI device attach to DSI host will be done with host device's lock\nheld.\n\nUn-registering host in \"device attach\" error path (ex: probe retry)\nwill result in deadlock with below call trace and non operational\nDSI display.\n\nStartup Call trace:\n[   35.043036]  rt_mutex_slowlock.constprop.21+0x184/0x1b8\n[   35.043048]  mutex_lock_nested+0x7c/0xc8\n[   35.043060]  device_del+0x4c/0x3e8\n[   35.043075]  device_unregister+0x20/0x40\n[   35.043082]  mipi_dsi_remove_device_fn+0x18/0x28\n[   35.043093]  device_for_each_child+0x68/0xb0\n[   35.043105]  mipi_dsi_host_unregister+0x40/0x90\n[   35.043115]  vc4_dsi_host_attach+0xf0/0x120 [vc4]\n[   35.043199]  mipi_dsi_attach+0x30/0x48\n[   35.043209]  tc358762_probe+0x128/0x164 [tc358762]\n[   35.043225]  mipi_dsi_drv_probe+0x28/0x38\n[   35.043234]  really_probe+0xc0/0x318\n[   35.043244]  __driver_probe_device+0x80/0xe8\n[   35.043254]  driver_probe_device+0xb8/0x118\n[   35.043263]  __device_attach_driver+0x98/0xe8\n[   35.043273]  bus_for_each_drv+0x84/0xd8\n[   35.043281]  __device_attach+0xf0/0x150\n[   35.043290]  device_initial_probe+0x1c/0x28\n[   35.043300]  bus_probe_device+0xa4/0xb0\n[   35.043308]  deferred_probe_work_func+0xa0/0xe0\n[   35.043318]  process_one_work+0x254/0x700\n[   35.043330]  worker_thread+0x4c/0x448\n[   35.043339]  kthread+0x19c/0x1a8\n[   35.043348]  ret_from_fork+0x10/0x20\n\nShutdown Call trace:\n[  365.565417] Call trace:\n[  365.565423]  __switch_to+0x148/0x200\n[  365.565452]  __schedule+0x340/0x9c8\n[  365.565467]  schedule+0x48/0x110\n[  365.565479]  schedule_timeout+0x3b0/0x448\n[  365.565496]  wait_for_completion+0xac/0x138\n[  365.565509]  __flush_work+0x218/0x4e0\n[  365.565523]  flush_work+0x1c/0x28\n[  365.565536]  wait_for_device_probe+0x68/0x158\n[  365.565550]  device_shutdown+0x24/0x348\n[  365.565561]  kernel_restart_prepare+0x40/0x50\n[  365.565578]  kernel_restart+0x20/0x70\n[  365.565591]  __do_sys_reboot+0x10c/0x220\n[  365.565605]  __arm64_sys_reboot+0x2c/0x38\n[  365.565619]  invoke_syscall+0x4c/0x110\n[  365.565634]  el0_svc_common.constprop.3+0xfc/0x120\n[  365.565648]  do_el0_svc+0x2c/0x90\n[  365.565661]  el0_svc+0x4c/0xf0\n[  365.565671]  el0t_64_sync_handler+0x90/0xb8\n[  365.565682]  el0t_64_sync+0x180/0x184",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48827",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix the behavior of READ near OFFSET_MAX\n\nDan Aloni reports:\n\u003e Due to commit 8cfb9015280d (\"NFS: Always provide aligned buffers to\n\u003e the RPC read layers\") on the client, a read of 0xfff is aligned up\n\u003e to server rsize of 0x1000.\n\u003e\n\u003e As a result, in a test where the server has a file of size\n\u003e 0x7fffffffffffffff, and the client tries to read from the offset\n\u003e 0x7ffffffffffff000, the read causes loff_t overflow in the server\n\u003e and it returns an NFS code of EINVAL to the client. The client as\n\u003e a result indefinitely retries the request.\n\nThe Linux NFS client does not handle NFS?ERR_INVAL, even though all\nNFS specifications permit servers to return that status code for a\nREAD.\n\nInstead of NFS?ERR_INVAL, have out-of-range READ requests succeed\nand return a short result. Set the EOF flag in the result to prevent\nthe client from retrying the READ request. This behavior appears to\nbe consistent with Solaris NFS servers.\n\nNote that NFSv3 and NFSv4 use u64 offset values on the wire. These\nmust be converted to loff_t internally before use -- an implicit\ntype cast is not adequate for this purpose. Otherwise VFS checks\nagainst sb-\u003es_maxbytes do not work properly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48828",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix ia_size underflow\n\niattr::ia_size is a loff_t, which is a signed 64-bit type. NFSv3 and\nNFSv4 both define file size as an unsigned 64-bit type. Thus there\nis a range of valid file size values an NFS client can send that is\nalready larger than Linux can handle.\n\nCurrently decode_fattr4() dumps a full u64 value into ia_size. If\nthat value happens to be larger than S64_MAX, then ia_size\nunderflows. I'm about to fix up the NFSv3 behavior as well, so let's\ncatch the underflow in the common code path: nfsd_setattr().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48829",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix NFSv3 SETATTR/CREATE's handling of large file sizes\n\niattr::ia_size is a loff_t, so these NFSv3 procedures must be\ncareful to deal with incoming client size values that are larger\nthan s64_max without corrupting the value.\n\nSilently capping the value results in storing a different value\nthan the client passed in which is unexpected behavior, so remove\nthe min_t() check in decode_sattr3().\n\nNote that RFC 1813 permits only the WRITE procedure to return\nNFS3ERR_FBIG. We believe that NFSv3 reference implementations\nalso return NFS3ERR_FBIG when ia_size is too large.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48836",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: aiptek - properly check endpoint type\n\nSyzbot reported warning in usb_submit_urb() which is caused by wrong\nendpoint type. There was a check for the number of endpoints, but not\nfor the type of endpoint.\n\nFix it by replacing old desc.bNumEndpoints check with\nusb_find_common_endpoints() helper for finding endpoints\n\nFail log:\n\nusb 5-1: BOGUS urb xfer, pipe 1 != type 3\nWARNING: CPU: 2 PID: 48 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\nModules linked in:\nCPU: 2 PID: 48 Comm: kworker/2:2 Not tainted 5.17.0-rc6-syzkaller-00226-g07ebd38a0da2 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014\nWorkqueue: usb_hub_wq hub_event\n...\nCall Trace:\n \u003cTASK\u003e\n aiptek_open+0xd5/0x130 drivers/input/tablet/aiptek.c:830\n input_open_device+0x1bb/0x320 drivers/input/input.c:629\n kbd_connect+0xfe/0x160 drivers/tty/vt/keyboard.c:1593",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48844",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_core: Fix leaking sent_cmd skb\n\nsent_cmd memory is not freed before freeing hci_dev causing it to leak\nit contents.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48850",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet-sysfs: add check for netdevice being present to speed_show\n\nWhen bringing down the netdevice or system shutdown, a panic can be\ntriggered while accessing the sysfs path because the device is already\nremoved.\n\n    [  755.549084] mlx5_core 0000:12:00.1: Shutdown was called\n    [  756.404455] mlx5_core 0000:12:00.0: Shutdown was called\n    ...\n    [  757.937260] BUG: unable to handle kernel NULL pointer dereference at           (null)\n    [  758.031397] IP: [\u003cffffffff8ee11acb\u003e] dma_pool_alloc+0x1ab/0x280\n\n    crash\u003e bt\n    ...\n    PID: 12649  TASK: ffff8924108f2100  CPU: 1   COMMAND: \"amsd\"\n    ...\n     #9 [ffff89240e1a38b0] page_fault at ffffffff8f38c778\n        [exception RIP: dma_pool_alloc+0x1ab]\n        RIP: ffffffff8ee11acb  RSP: ffff89240e1a3968  RFLAGS: 00010046\n        RAX: 0000000000000246  RBX: ffff89243d874100  RCX: 0000000000001000\n        RDX: 0000000000000000  RSI: 0000000000000246  RDI: ffff89243d874090\n        RBP: ffff89240e1a39c0   R8: 000000000001f080   R9: ffff8905ffc03c00\n        R10: ffffffffc04680d4  R11: ffffffff8edde9fd  R12: 00000000000080d0\n        R13: ffff89243d874090  R14: ffff89243d874080  R15: 0000000000000000\n        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n    #10 [ffff89240e1a39c8] mlx5_alloc_cmd_msg at ffffffffc04680f3 [mlx5_core]\n    #11 [ffff89240e1a3a18] cmd_exec at ffffffffc046ad62 [mlx5_core]\n    #12 [ffff89240e1a3ab8] mlx5_cmd_exec at ffffffffc046b4fb [mlx5_core]\n    #13 [ffff89240e1a3ae8] mlx5_core_access_reg at ffffffffc0475434 [mlx5_core]\n    #14 [ffff89240e1a3b40] mlx5e_get_fec_caps at ffffffffc04a7348 [mlx5_core]\n    #15 [ffff89240e1a3bb0] get_fec_supported_advertised at ffffffffc04992bf [mlx5_core]\n    #16 [ffff89240e1a3c08] mlx5e_get_link_ksettings at ffffffffc049ab36 [mlx5_core]\n    #17 [ffff89240e1a3ce8] __ethtool_get_link_ksettings at ffffffff8f25db46\n    #18 [ffff89240e1a3d48] speed_show at ffffffff8f277208\n    #19 [ffff89240e1a3dd8] dev_attr_show at ffffffff8f0b70e3\n    #20 [ffff89240e1a3df8] sysfs_kf_seq_show at ffffffff8eedbedf\n    #21 [ffff89240e1a3e18] kernfs_seq_show at ffffffff8eeda596\n    #22 [ffff89240e1a3e28] seq_read at ffffffff8ee76d10\n    #23 [ffff89240e1a3e98] kernfs_fop_read at ffffffff8eedaef5\n    #24 [ffff89240e1a3ed8] vfs_read at ffffffff8ee4e3ff\n    #25 [ffff89240e1a3f08] sys_read at ffffffff8ee4f27f\n    #26 [ffff89240e1a3f50] system_call_fastpath at ffffffff8f395f92\n\n    crash\u003e net_device.state ffff89443b0c0000\n      state = 0x5  (__LINK_STATE_START| __LINK_STATE_NOCARRIER)\n\nTo prevent this scenario, we also make sure that the netdevice is present.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48855",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: fix kernel-infoleak for SCTP sockets\n\nsyzbot reported a kernel infoleak [1] of 4 bytes.\n\nAfter analysis, it turned out r-\u003eidiag_expires is not initialized\nif inet_sctp_diag_fill() calls inet_diag_msg_common_fill()\n\nMake sure to clear idiag_timer/idiag_retrans/idiag_expires\nand let inet_diag_msg_sctpasoc_fill() fill them again if needed.\n\n[1]\n\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:121 [inline]\nBUG: KMSAN: kernel-infoleak in copyout lib/iov_iter.c:154 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_iter+0x6ef/0x25a0 lib/iov_iter.c:668\n instrument_copy_to_user include/linux/instrumented.h:121 [inline]\n copyout lib/iov_iter.c:154 [inline]\n _copy_to_iter+0x6ef/0x25a0 lib/iov_iter.c:668\n copy_to_iter include/linux/uio.h:162 [inline]\n simple_copy_to_iter+0xf3/0x140 net/core/datagram.c:519\n __skb_datagram_iter+0x2d5/0x11b0 net/core/datagram.c:425\n skb_copy_datagram_iter+0xdc/0x270 net/core/datagram.c:533\n skb_copy_datagram_msg include/linux/skbuff.h:3696 [inline]\n netlink_recvmsg+0x669/0x1c80 net/netlink/af_netlink.c:1977\n sock_recvmsg_nosec net/socket.c:948 [inline]\n sock_recvmsg net/socket.c:966 [inline]\n __sys_recvfrom+0x795/0xa10 net/socket.c:2097\n __do_sys_recvfrom net/socket.c:2115 [inline]\n __se_sys_recvfrom net/socket.c:2111 [inline]\n __x64_sys_recvfrom+0x19d/0x210 net/socket.c:2111\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nUninit was created at:\n slab_post_alloc_hook mm/slab.h:737 [inline]\n slab_alloc_node mm/slub.c:3247 [inline]\n __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4975\n kmalloc_reserve net/core/skbuff.c:354 [inline]\n __alloc_skb+0x545/0xf90 net/core/skbuff.c:426\n alloc_skb include/linux/skbuff.h:1158 [inline]\n netlink_dump+0x3e5/0x16c0 net/netlink/af_netlink.c:2248\n __netlink_dump_start+0xcf8/0xe90 net/netlink/af_netlink.c:2373\n netlink_dump_start include/linux/netlink.h:254 [inline]\n inet_diag_handler_cmd+0x2e7/0x400 net/ipv4/inet_diag.c:1341\n sock_diag_rcv_msg+0x24a/0x620\n netlink_rcv_skb+0x40c/0x7e0 net/netlink/af_netlink.c:2494\n sock_diag_rcv+0x63/0x80 net/core/sock_diag.c:277\n netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]\n netlink_unicast+0x1093/0x1360 net/netlink/af_netlink.c:1343\n netlink_sendmsg+0x14d9/0x1720 net/netlink/af_netlink.c:1919\n sock_sendmsg_nosec net/socket.c:705 [inline]\n sock_sendmsg net/socket.c:725 [inline]\n sock_write_iter+0x594/0x690 net/socket.c:1061\n do_iter_readv_writev+0xa7f/0xc70\n do_iter_write+0x52c/0x1500 fs/read_write.c:851\n vfs_writev fs/read_write.c:924 [inline]\n do_writev+0x645/0xe00 fs/read_write.c:967\n __do_sys_writev fs/read_write.c:1040 [inline]\n __se_sys_writev fs/read_write.c:1037 [inline]\n __x64_sys_writev+0xe5/0x120 fs/read_write.c:1037\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nBytes 68-71 of 2508 are uninitialized\nMemory access of size 2508 starts at ffff888114f9b000\nData copied to user address 00007f7fe09ff2e0\n\nCPU: 1 PID: 3478 Comm: syz-executor306 Not tainted 5.17.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: port100: fix use-after-free in port100_send_complete\n\nSyzbot reported UAF in port100_send_complete(). The root case is in\nmissing usb_kill_urb() calls on error handling path of -\u003eprobe function.\n\nport100_send_complete() accesses devm allocated memory which will be\nfreed on probe failure. We should kill this urbs before returning an\nerror from probe function to prevent reported use-after-free\n\nFail log:\n\nBUG: KASAN: use-after-free in port100_send_complete+0x16e/0x1a0 drivers/nfc/port100.c:935\nRead of size 1 at addr ffff88801bb59540 by task ksoftirqd/2/26\n...\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n print_address_description.constprop.0.cold+0x8d/0x303 mm/kasan/report.c:255\n __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold+0x83/0xdf mm/kasan/report.c:459\n port100_send_complete+0x16e/0x1a0 drivers/nfc/port100.c:935\n __usb_hcd_giveback_urb+0x2b0/0x5c0 drivers/usb/core/hcd.c:1670\n\n...\n\nAllocated by task 1255:\n kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\n kasan_set_track mm/kasan/common.c:45 [inline]\n set_alloc_info mm/kasan/common.c:436 [inline]\n ____kasan_kmalloc mm/kasan/common.c:515 [inline]\n ____kasan_kmalloc mm/kasan/common.c:474 [inline]\n __kasan_kmalloc+0xa6/0xd0 mm/kasan/common.c:524\n alloc_dr drivers/base/devres.c:116 [inline]\n devm_kmalloc+0x96/0x1d0 drivers/base/devres.c:823\n devm_kzalloc include/linux/device.h:209 [inline]\n port100_probe+0x8a/0x1320 drivers/nfc/port100.c:1502\n\nFreed by task 1255:\n kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\n kasan_set_track+0x21/0x30 mm/kasan/common.c:45\n kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370\n ____kasan_slab_free mm/kasan/common.c:366 [inline]\n ____kasan_slab_free+0xff/0x140 mm/kasan/common.c:328\n kasan_slab_free include/linux/kasan.h:236 [inline]\n __cache_free mm/slab.c:3437 [inline]\n kfree+0xf8/0x2b0 mm/slab.c:3794\n release_nodes+0x112/0x1a0 drivers/base/devres.c:501\n devres_release_all+0x114/0x190 drivers/base/devres.c:530\n really_probe+0x626/0xcc0 drivers/base/dd.c:670",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethernet: Fix error handling in xemaclite_of_probe\n\nThis node pointer is returned by of_parse_phandle() with refcount\nincremented in this function. Calling of_node_put() to avoid the\nrefcount leak. As the remove function do.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: Fix memory leak in dsp_pipeline_build()\n\ndsp_pipeline_build() allocates dup pointer by kstrdup(cfg),\nbut then it updates dup variable by strsep(\u0026dup, \"|\").\nAs a result when it calls kfree(dup), the dup variable contains NULL.\n\nFound by Linux Driver Verification project (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix kernel panic when enabling bearer\n\nWhen enabling a bearer on a node, a kernel panic is observed:\n\n[    4.498085] RIP: 0010:tipc_mon_prep+0x4e/0x130 [tipc]\n...\n[    4.520030] Call Trace:\n[    4.520689]  \u003cIRQ\u003e\n[    4.521236]  tipc_link_build_proto_msg+0x375/0x750 [tipc]\n[    4.522654]  tipc_link_build_state_msg+0x48/0xc0 [tipc]\n[    4.524034]  __tipc_node_link_up+0xd7/0x290 [tipc]\n[    4.525292]  tipc_rcv+0x5da/0x730 [tipc]\n[    4.526346]  ? __netif_receive_skb_core+0xb7/0xfc0\n[    4.527601]  tipc_l2_rcv_msg+0x5e/0x90 [tipc]\n[    4.528737]  __netif_receive_skb_list_core+0x20b/0x260\n[    4.530068]  netif_receive_skb_list_internal+0x1bf/0x2e0\n[    4.531450]  ? dev_gro_receive+0x4c2/0x680\n[    4.532512]  napi_complete_done+0x6f/0x180\n[    4.533570]  virtnet_poll+0x29c/0x42e [virtio_net]\n...\n\nThe node in question is receiving activate messages in another\nthread after changing bearer status to allow message sending/\nreceiving in current thread:\n\n         thread 1           |              thread 2\n         --------           |              --------\n                            |\ntipc_enable_bearer()        |\n  test_and_set_bit_lock()   |\n    tipc_bearer_xmit_skb()  |\n                            | tipc_l2_rcv_msg()\n                            |   tipc_rcv()\n                            |     __tipc_node_link_up()\n                            |       tipc_link_build_state_msg()\n                            |         tipc_link_build_proto_msg()\n                            |           tipc_mon_prep()\n                            |           {\n                            |             ...\n                            |             // null-pointer dereference\n                            |             u16 gen = mon-\u003edom_gen;\n                            |             ...\n                            |           }\n  // Not being executed yet |\n  tipc_mon_create()         |\n  {                         |\n    ...                     |\n    // allocate             |\n    mon = kzalloc();        |\n    ...                     |\n  }                         |\n\nMonitoring pointer in thread 2 is dereferenced before monitoring data\nis allocated in thread 1. This causes kernel panic.\n\nThis commit fixes it by allocating the monitoring data before enabling\nthe bearer to receive messages.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48875",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: sdata can be NULL during AMPDU start\n\nieee80211_tx_ba_session_handle_start() may get NULL for sdata when a\ndeauthentication is ongoing.\n\nHere a trace triggering the race with the hostapd test\nmulti_ap_fronthaul_on_ap:\n\n(gdb) list *drv_ampdu_action+0x46\n0x8b16 is in drv_ampdu_action (net/mac80211/driver-ops.c:396).\n391             int ret = -EOPNOTSUPP;\n392\n393             might_sleep();\n394\n395             sdata = get_bss_sdata(sdata);\n396             if (!check_sdata_in_driver(sdata))\n397                     return -EIO;\n398\n399             trace_drv_ampdu_action(local, sdata, params);\n400\n\nwlan0: moving STA 02:00:00:00:03:00 to state 3\nwlan0: associated\nwlan0: deauthenticating from 02:00:00:00:03:00 by local choice (Reason: 3=DEAUTH_LEAVING)\nwlan3.sta1: Open BA session requested for 02:00:00:00:00:00 tid 0\nwlan3.sta1: dropped frame to 02:00:00:00:00:00 (unauthorized port)\nwlan0: moving STA 02:00:00:00:03:00 to state 2\nwlan0: moving STA 02:00:00:00:03:00 to state 1\nwlan0: Removed STA 02:00:00:00:03:00\nwlan0: Destroyed STA 02:00:00:00:03:00\nBUG: unable to handle page fault for address: fffffffffffffb48\nPGD 11814067 P4D 11814067 PUD 11816067 PMD 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 2 PID: 133397 Comm: kworker/u16:1 Tainted: G        W          6.1.0-rc8-wt+ #59\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04/01/2014\nWorkqueue: phy3 ieee80211_ba_session_work [mac80211]\nRIP: 0010:drv_ampdu_action+0x46/0x280 [mac80211]\nCode: 53 48 89 f3 be 89 01 00 00 e8 d6 43 bf ef e8 21 46 81 f0 83 bb a0 1b 00 00 04 75 0e 48 8b 9b 28 0d 00 00 48 81 eb 10 0e 00 00 \u003c8b\u003e 93 58 09 00 00 f6 c2 20 0f 84 3b 01 00 00 8b 05 dd 1c 0f 00 85\nRSP: 0018:ffffc900025ebd20 EFLAGS: 00010287\nRAX: 0000000000000000 RBX: fffffffffffff1f0 RCX: ffff888102228240\nRDX: 0000000080000000 RSI: ffffffff918c5de0 RDI: ffff888102228b40\nRBP: ffffc900025ebd40 R08: 0000000000000001 R09: 0000000000000001\nR10: 0000000000000001 R11: 0000000000000000 R12: ffff888118c18ec0\nR13: 0000000000000000 R14: ffffc900025ebd60 R15: ffff888018b7efb8\nFS:  0000000000000000(0000) GS:ffff88817a600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: fffffffffffffb48 CR3: 0000000105228006 CR4: 0000000000170ee0\nCall Trace:\n \u003cTASK\u003e\n ieee80211_tx_ba_session_handle_start+0xd0/0x190 [mac80211]\n ieee80211_ba_session_work+0xff/0x2e0 [mac80211]\n process_one_work+0x29f/0x620\n worker_thread+0x4d/0x3d0\n ? process_one_work+0x620/0x620\n kthread+0xfb/0x120\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x22/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48896",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nixgbe: fix pci device refcount leak\n\nAs the comment of pci_get_domain_bus_and_slot() says, it\nreturns a PCI device with refcount incremented, when finish\nusing it, the caller must decrement the reference count by\ncalling pci_dev_put().\n\nIn ixgbe_get_first_secondary_devfn() and ixgbe_x550em_a_has_mii(),\npci_dev_put() is called to avoid leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48899",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/virtio: Fix GEM handle creation UAF\n\nUserspace can guess the handle value and try to race GEM object creation\nwith handle close, resulting in a use-after-free if we dereference the\nobject after dropping the handle's reference.  For that reason, dropping\nthe handle's reference must be done *after* we are done dereferencing\nthe object.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: free reset-work-item when flushing\n\nFix a tiny memory leak when flushing the reset work queue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48910",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv6: ensure we call ipv6_mc_down() at most once\n\nThere are two reasons for addrconf_notify() to be called with NETDEV_DOWN:\neither the network device is actually going down, or IPv6 was disabled\non the interface.\n\nIf either of them stays down while the other is toggled, we repeatedly\ncall the code for NETDEV_DOWN, including ipv6_mc_down(), while never\ncalling the corresponding ipv6_mc_up() in between. This will cause a\nnew entry in idev-\u003emc_tomb to be allocated for each multicast group\nthe interface is subscribed to, which in turn leaks one struct ifmcaddr6\nper nontrivial multicast group the interface is subscribed to.\n\nThe following reproducer will leak at least $n objects:\n\nip addr add ff2e::4242/32 dev eth0 autojoin\nsysctl -w net.ipv6.conf.eth0.disable_ipv6=1\nfor i in $(seq 1 $n); do\n\tip link set up eth0; ip link set down eth0\ndone\n\nJoining groups with IPV6_ADD_MEMBERSHIP (unprivileged) or setting the\nsysctl net.ipv6.conf.eth0.forwarding to 1 (=\u003e subscribing to ff02::2)\ncan also be used to create a nontrivial idev-\u003emc_list, which will the\nleak objects with the right up-down-sequence.\n\nBased on both sources for NETDEV_DOWN events the interface IPv6 state\nshould be considered:\n\n - not ready if the network interface is not ready OR IPv6 is disabled\n   for it\n - ready if the network interface is ready AND IPv6 is enabled for it\n\nThe functions ipv6_mc_up() and ipv6_down() should only be run when this\nstate changes.\n\nImplement this by remembering when the IPv6 state is ready, and only\nrun ipv6_mc_down() if it actually changed from ready to not ready.\n\nThe other direction (not ready -\u003e ready) already works correctly, as:\n\n - the interface notification triggered codepath for NETDEV_UP /\n   NETDEV_CHANGE returns early if ipv6 is disabled, and\n - the disable_ipv6=0 triggered codepath skips fully initializing the\n   interface as long as addrconf_link_ready(dev) returns false\n - calling ipv6_mc_up() repeatedly does not leak anything",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_queue: fix possible use-after-free\n\nEric Dumazet says:\n  The sock_hold() side seems suspect, because there is no guarantee\n  that sk_refcnt is not already 0.\n\nOn failure, we cannot queue the packet and need to indicate an\nerror.  The packet will be dropped by the caller.\n\nv2: split skb prefetch hunk into separate change",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix double free race when mount fails in cifs_get_root()\n\nWhen cifs_get_root() fails during cifs_smb3_do_mount() we call\ndeactivate_locked_super() which eventually will call delayed_free() which\nwill free the context.\nIn this situation we should not proceed to enter the out: section in\ncifs_smb3_do_mount() and free the same resources a second time.\n\n[Thu Feb 10 12:59:06 2022] BUG: KASAN: use-after-free in rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022] Read of size 8 at addr ffff888364f4d110 by task swapper/1/0\n\n[Thu Feb 10 12:59:06 2022] CPU: 1 PID: 0 Comm: swapper/1 Tainted: G           OE     5.17.0-rc3+ #4\n[Thu Feb 10 12:59:06 2022] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.0 12/17/2019\n[Thu Feb 10 12:59:06 2022] Call Trace:\n[Thu Feb 10 12:59:06 2022]  \u003cIRQ\u003e\n[Thu Feb 10 12:59:06 2022]  dump_stack_lvl+0x5d/0x78\n[Thu Feb 10 12:59:06 2022]  print_address_description.constprop.0+0x24/0x150\n[Thu Feb 10 12:59:06 2022]  ? rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022]  kasan_report.cold+0x7d/0x117\n[Thu Feb 10 12:59:06 2022]  ? rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022]  __asan_load8+0x86/0xa0\n[Thu Feb 10 12:59:06 2022]  rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022]  rcu_core+0x547/0xca0\n[Thu Feb 10 12:59:06 2022]  ? call_rcu+0x3c0/0x3c0\n[Thu Feb 10 12:59:06 2022]  ? __this_cpu_preempt_check+0x13/0x20\n[Thu Feb 10 12:59:06 2022]  ? lock_is_held_type+0xea/0x140\n[Thu Feb 10 12:59:06 2022]  rcu_core_si+0xe/0x10\n[Thu Feb 10 12:59:06 2022]  __do_softirq+0x1d4/0x67b\n[Thu Feb 10 12:59:06 2022]  __irq_exit_rcu+0x100/0x150\n[Thu Feb 10 12:59:06 2022]  irq_exit_rcu+0xe/0x30\n[Thu Feb 10 12:59:06 2022]  sysvec_hyperv_stimer0+0x9d/0xc0\n...\n[Thu Feb 10 12:59:07 2022] Freed by task 58179:\n[Thu Feb 10 12:59:07 2022]  kasan_save_stack+0x26/0x50\n[Thu Feb 10 12:59:07 2022]  kasan_set_track+0x25/0x30\n[Thu Feb 10 12:59:07 2022]  kasan_set_free_info+0x24/0x40\n[Thu Feb 10 12:59:07 2022]  ____kasan_slab_free+0x137/0x170\n[Thu Feb 10 12:59:07 2022]  __kasan_slab_free+0x12/0x20\n[Thu Feb 10 12:59:07 2022]  slab_free_freelist_hook+0xb3/0x1d0\n[Thu Feb 10 12:59:07 2022]  kfree+0xcd/0x520\n[Thu Feb 10 12:59:07 2022]  cifs_smb3_do_mount+0x149/0xbe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  smb3_get_tree+0x1a0/0x2e0 [cifs]\n[Thu Feb 10 12:59:07 2022]  vfs_get_tree+0x52/0x140\n[Thu Feb 10 12:59:07 2022]  path_mount+0x635/0x10c0\n[Thu Feb 10 12:59:07 2022]  __x64_sys_mount+0x1bf/0x210\n[Thu Feb 10 12:59:07 2022]  do_syscall_64+0x5c/0xc0\n[Thu Feb 10 12:59:07 2022]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\n[Thu Feb 10 12:59:07 2022] Last potentially related work creation:\n[Thu Feb 10 12:59:07 2022]  kasan_save_stack+0x26/0x50\n[Thu Feb 10 12:59:07 2022]  __kasan_record_aux_stack+0xb6/0xc0\n[Thu Feb 10 12:59:07 2022]  kasan_record_aux_stack_noalloc+0xb/0x10\n[Thu Feb 10 12:59:07 2022]  call_rcu+0x76/0x3c0\n[Thu Feb 10 12:59:07 2022]  cifs_umount+0xce/0xe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  cifs_kill_sb+0xc8/0xe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  deactivate_locked_super+0x5d/0xd0\n[Thu Feb 10 12:59:07 2022]  cifs_smb3_do_mount+0xab9/0xbe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  smb3_get_tree+0x1a0/0x2e0 [cifs]\n[Thu Feb 10 12:59:07 2022]  vfs_get_tree+0x52/0x140\n[Thu Feb 10 12:59:07 2022]  path_mount+0x635/0x10c0\n[Thu Feb 10 12:59:07 2022]  __x64_sys_mount+0x1bf/0x210\n[Thu Feb 10 12:59:07 2022]  do_syscall_64+0x5c/0xc0\n[Thu Feb 10 12:59:07 2022]  entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: get rid of warning on transaction commit when using flushoncommit\n\nWhen using the flushoncommit mount option, during almost every transaction\ncommit we trigger a warning from __writeback_inodes_sb_nr():\n\n  $ cat fs/fs-writeback.c:\n  (...)\n  static void __writeback_inodes_sb_nr(struct super_block *sb, ...\n  {\n        (...)\n        WARN_ON(!rwsem_is_locked(\u0026sb-\u003es_umount));\n        (...)\n  }\n  (...)\n\nThe trace produced in dmesg looks like the following:\n\n  [947.473890] WARNING: CPU: 5 PID: 930 at fs/fs-writeback.c:2610 __writeback_inodes_sb_nr+0x7e/0xb3\n  [947.481623] Modules linked in: nfsd nls_cp437 cifs asn1_decoder cifs_arc4 fscache cifs_md4 ipmi_ssif\n  [947.489571] CPU: 5 PID: 930 Comm: btrfs-transacti Not tainted 95.16.3-srb-asrock-00001-g36437ad63879 #186\n  [947.497969] RIP: 0010:__writeback_inodes_sb_nr+0x7e/0xb3\n  [947.502097] Code: 24 10 4c 89 44 24 18 c6 (...)\n  [947.519760] RSP: 0018:ffffc90000777e10 EFLAGS: 00010246\n  [947.523818] RAX: 0000000000000000 RBX: 0000000000963300 RCX: 0000000000000000\n  [947.529765] RDX: 0000000000000000 RSI: 000000000000fa51 RDI: ffffc90000777e50\n  [947.535740] RBP: ffff888101628a90 R08: ffff888100955800 R09: ffff888100956000\n  [947.541701] R10: 0000000000000002 R11: 0000000000000001 R12: ffff888100963488\n  [947.547645] R13: ffff888100963000 R14: ffff888112fb7200 R15: ffff888100963460\n  [947.553621] FS:  0000000000000000(0000) GS:ffff88841fd40000(0000) knlGS:0000000000000000\n  [947.560537] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [947.565122] CR2: 0000000008be50c4 CR3: 000000000220c000 CR4: 00000000001006e0\n  [947.571072] Call Trace:\n  [947.572354]  \u003cTASK\u003e\n  [947.573266]  btrfs_commit_transaction+0x1f1/0x998\n  [947.576785]  ? start_transaction+0x3ab/0x44e\n  [947.579867]  ? schedule_timeout+0x8a/0xdd\n  [947.582716]  transaction_kthread+0xe9/0x156\n  [947.585721]  ? btrfs_cleanup_transaction.isra.0+0x407/0x407\n  [947.590104]  kthread+0x131/0x139\n  [947.592168]  ? set_kthread_struct+0x32/0x32\n  [947.595174]  ret_from_fork+0x22/0x30\n  [947.597561]  \u003c/TASK\u003e\n  [947.598553] ---[ end trace 644721052755541c ]---\n\nThis is because we started using writeback_inodes_sb() to flush delalloc\nwhen committing a transaction (when using -o flushoncommit), in order to\navoid deadlocks with filesystem freeze operations. This change was made\nby commit ce8ea7cc6eb313 (\"btrfs: don't call btrfs_start_delalloc_roots\nin flushoncommit\"). After that change we started producing that warning,\nand every now and then a user reports this since the warning happens too\noften, it spams dmesg/syslog, and a user is unsure if this reflects any\nproblem that might compromise the filesystem's reliability.\n\nWe can not just lock the sb-\u003es_umount semaphore before calling\nwriteback_inodes_sb(), because that would at least deadlock with\nfilesystem freezing, since at fs/super.c:freeze_super() sync_filesystem()\nis called while we are holding that semaphore in write mode, and that can\ntrigger a transaction commit, resulting in a deadlock. It would also\ntrigger the same type of deadlock in the unmount path. Possibly, it could\nalso introduce some other locking dependencies that lockdep would report.\n\nTo fix this call try_to_writeback_inodes_sb() instead of\nwriteback_inodes_sb(), because that will try to read lock sb-\u003es_umount\nand then will only call writeback_inodes_sb() if it was able to lock it.\nThis is fine because the cases where it can't read lock sb-\u003es_umount\nare during a filesystem unmount or during a filesystem freeze - in those\ncases sb-\u003es_umount is write locked and sync_filesystem() is called, which\ncalls writeback_inodes_sb(). In other words, in all cases where we can't\ntake a read lock on sb-\u003es_umount, writeback is already being triggered\nelsewhere.\n\nAn alternative would be to call btrfs_start_delalloc_roots() with a\nnumber of pages different from LONG_MAX, for example matching the number\nof delalloc bytes we currently have, in \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/ib_srp: Fix a deadlock\n\nRemove the flush_workqueue(system_long_wq) call since flushing\nsystem_long_wq is deadlock-prone and since that call is redundant with a\npreceding cancel_work_sync()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --\u003e B --\u003e C --\u003e D\nA \u003c-- B \u003c-- C \u003c-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next-\u003eprev = prev   |\n                                |               next-\u003eprev = prev\n            prev-\u003enext = next   |\n                                |                 // prev == B\n                                |                 prev-\u003enext = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nCDC-NCM: avoid overflow in sanity checking\n\nA broken device may give an extreme offset like 0xFFF0\nand a reasonable length for a fragment. In the sanity\ncheck as formulated now, this will create an integer\noverflow, defeating the sanity check. Both offset\nand offset + len need to be checked in such a manner\nthat no overflow can occur.\nAnd those quantities should be unsigned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: make apf token non-zero to fix bug\n\nIn current async pagefault logic, when a page is ready, KVM relies on\nkvm_arch_can_dequeue_async_page_present() to determine whether to deliver\na READY event to the Guest. This function test token value of struct\nkvm_vcpu_pv_apf_data, which must be reset to zero by Guest kernel when a\nREADY event is finished by Guest. If value is zero meaning that a READY\nevent is done, so the KVM can deliver another.\nBut the kvm_arch_setup_async_pf() may produce a valid token with zero\nvalue, which is confused with previous mention and may lead the loss of\nthis READY event.\n\nThis bug may cause task blocked forever in Guest:\n INFO: task stress:7532 blocked for more than 1254 seconds.\n       Not tainted 5.10.0 #16\n \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n task:stress          state:D stack:    0 pid: 7532 ppid:  1409\n flags:0x00000080\n Call Trace:\n  __schedule+0x1e7/0x650\n  schedule+0x46/0xb0\n  kvm_async_pf_task_wait_schedule+0xad/0xe0\n  ? exit_to_user_mode_prepare+0x60/0x70\n  __kvm_handle_async_pf+0x4f/0xb0\n  ? asm_exc_page_fault+0x8/0x30\n  exc_page_fault+0x6f/0x110\n  ? asm_exc_page_fault+0x8/0x30\n  asm_exc_page_fault+0x1e/0x30\n RIP: 0033:0x402d00\n RSP: 002b:00007ffd31912500 EFLAGS: 00010206\n RAX: 0000000000071000 RBX: ffffffffffffffff RCX: 00000000021a32b0\n RDX: 000000000007d011 RSI: 000000000007d000 RDI: 00000000021262b0\n RBP: 00000000021262b0 R08: 0000000000000003 R09: 0000000000000086\n R10: 00000000000000eb R11: 00007fefbdf2baa0 R12: 0000000000000000\n R13: 0000000000000002 R14: 000000000007d000 R15: 0000000000001000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vivid: fix compose size exceed boundary\n\nsyzkaller found a bug:\n\n BUG: unable to handle page fault for address: ffffc9000a3b1000\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 100000067 P4D 100000067 PUD 10015f067 PMD 1121ca067 PTE 0\n Oops: 0002 [#1] PREEMPT SMP\n CPU: 0 PID: 23489 Comm: vivid-000-vid-c Not tainted 6.1.0-rc1+ #512\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n RIP: 0010:memcpy_erms+0x6/0x10\n[...]\n Call Trace:\n  \u003cTASK\u003e\n  ? tpg_fill_plane_buffer+0x856/0x15b0\n  vivid_fillbuff+0x8ac/0x1110\n  vivid_thread_vid_cap_tick+0x361/0xc90\n  vivid_thread_vid_cap+0x21a/0x3a0\n  kthread+0x143/0x180\n  ret_from_fork+0x1f/0x30\n  \u003c/TASK\u003e\n\nThis is because we forget to check boundary after adjust compose-\u003eheight\nint V4L2_SEL_TGT_CROP case. Add v4l2_rect_map_inside() to fix this problem\nfor this case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-2176",
      "Description": "A vulnerability was found in compare_netdev_and_ip in drivers/infiniband/core/cma.c in RDMA in the Linux Kernel. The improper cleanup results in out-of-boundary read, where a local user can utilize this problem to crash the system or escalation of privilege.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-45913",
      "Description": "Mesa v23.0.4 was discovered to contain a NULL pointer dereference via the function dri2GetGlxDrawableFromXDrawableId(). This vulnerability is triggered when the X11 server sends an DRI2_BufferSwapComplete event unexpectedly when the application is using DRI3. NOTE: this is disputed because there is no scenario in which the vulnerability was demonstrated.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-dri-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libEGL1-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libGL1-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libglapi0-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libgbm1-18.3.2-14.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-45919",
      "Description": "Mesa 23.0.4 was discovered to contain a buffer over-read in glXQueryServerString(). NOTE: this is disputed because there are no common situations in which users require uninterrupted operation with an attacker-controller server.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-dri-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libEGL1-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libGL1-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libglapi0-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libgbm1-18.3.2-14.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-45922",
      "Description": "glx_pbuffer.c in Mesa 23.0.4 was discovered to contain a segmentation violation when calling __glXGetDrawableAttribute(). NOTE: this is disputed because there are no common situations in which users require uninterrupted operation with an attacker-controller server.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-dri-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libEGL1-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libGL1-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:Mesa-libglapi0-18.3.2-14.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libgbm1-18.3.2-14.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-50782",
      "Description": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libopenssl1_1-1.1.1d-2.113.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52425",
      "Description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:expat-2.1.0-21.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libexpat1-2.1.0-21.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52435",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: prevent mss overflow in skb_segment()\n\nOnce again syzbot is able to crash the kernel in skb_segment() [1]\n\nGSO_BY_FRAGS is a forbidden value, but unfortunately the following\ncomputation in skb_segment() can reach it quite easily :\n\n\tmss = mss * partial_segs;\n\n65535 = 3 * 5 * 17 * 257, so many initial values of mss can lead to\na bad final result.\n\nMake sure to limit segmentation so that the new mss value is smaller\nthan GSO_BY_FRAGS.\n\n[1]\n\ngeneral protection fault, probably for non-canonical address 0xdffffc000000000e: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000070-0x0000000000000077]\nCPU: 1 PID: 5079 Comm: syz-executor993 Not tainted 6.7.0-rc4-syzkaller-00141-g1ae4cd3cbdd0 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/10/2023\nRIP: 0010:skb_segment+0x181d/0x3f30 net/core/skbuff.c:4551\nCode: 83 e3 02 e9 fb ed ff ff e8 90 68 1c f9 48 8b 84 24 f8 00 00 00 48 8d 78 70 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c0f\u003e b6 04 02 84 c0 74 08 3c 03 0f 8e 8a 21 00 00 48 8b 84 24 f8 00\nRSP: 0018:ffffc900043473d0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000010046 RCX: ffffffff886b1597\nRDX: 000000000000000e RSI: ffffffff886b2520 RDI: 0000000000000070\nRBP: ffffc90004347578 R08: 0000000000000005 R09: 000000000000ffff\nR10: 000000000000ffff R11: 0000000000000002 R12: ffff888063202ac0\nR13: 0000000000010000 R14: 000000000000ffff R15: 0000000000000046\nFS: 0000555556e7e380(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020010000 CR3: 0000000027ee2000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\nudp6_ufo_fragment+0xa0e/0xd00 net/ipv6/udp_offload.c:109\nipv6_gso_segment+0x534/0x17e0 net/ipv6/ip6_offload.c:120\nskb_mac_gso_segment+0x290/0x610 net/core/gso.c:53\n__skb_gso_segment+0x339/0x710 net/core/gso.c:124\nskb_gso_segment include/net/gso.h:83 [inline]\nvalidate_xmit_skb+0x36c/0xeb0 net/core/dev.c:3626\n__dev_queue_xmit+0x6f3/0x3d60 net/core/dev.c:4338\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\npacket_xmit+0x257/0x380 net/packet/af_packet.c:276\npacket_snd net/packet/af_packet.c:3087 [inline]\npacket_sendmsg+0x24c6/0x5220 net/packet/af_packet.c:3119\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg+0xd5/0x180 net/socket.c:745\n__sys_sendto+0x255/0x340 net/socket.c:2190\n__do_sys_sendto net/socket.c:2202 [inline]\n__se_sys_sendto net/socket.c:2198 [inline]\n__x64_sys_sendto+0xe0/0x1b0 net/socket.c:2198\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0x40/0x110 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\nRIP: 0033:0x7f8692032aa9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 d1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff8d685418 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f8692032aa9\nRDX: 0000000000010048 RSI: 00000000200000c0 RDI: 0000000000000003\nRBP: 00000000000f4240 R08: 0000000020000540 R09: 0000000000000014\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fff8d685480\nR13: 0000000000000001 R14: 00007fff8d685480 R15: 0000000000000003\n\u003c/TASK\u003e\nModules linked in:\n---[ end trace 0000000000000000 ]---\nRIP: 0010:skb_segment+0x181d/0x3f30 net/core/skbuff.c:4551\nCode: 83 e3 02 e9 fb ed ff ff e8 90 68 1c f9 48 8b 84 24 f8 00 00 00 48 8d 78 70 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c0f\u003e b6 04 02 84 c0 74 08 3c 03 0f 8e 8a 21 00 00 48 8b 84 24 f8 00\nRSP: 0018:ffffc900043473d0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000010046 RCX: ffffffff886b1597\nRDX: 000000000000000e RSI: ffffffff886b2520 RDI: 0000000000000070\nRBP: ffffc90004347578 R0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52594",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath9k: Fix potential array-index-out-of-bounds read in ath9k_htc_txstatus()\n\nFix an array-index-out-of-bounds read in ath9k_htc_txstatus(). The bug\noccurs when txs-\u003ecnt, data from a URB provided by a USB device, is\nbigger than the size of the array txs-\u003etxstatus, which is\nHTC_MAX_TX_STATUS. WARN_ON() already checks it, but there is no bug\nhandling code after the check. Make the function return if that is the\ncase.\n\nFound by a modified version of syzkaller.\n\nUBSAN: array-index-out-of-bounds in htc_drv_txrx.c\nindex 13 is out of range for type '__wmi_event_txstatus [12]'\nCall Trace:\n ath9k_htc_txstatus\n ath9k_wmi_event_tasklet\n tasklet_action_common\n __do_softirq\n irq_exit_rxu\n sysvec_apic_timer_interrupt",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52612",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: scomp - fix req-\u003edst buffer overflow\n\nThe req-\u003edst buffer size should be checked before copying from the\nscomp_scratch-\u003edst to avoid req-\u003edst buffer overflow problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52615",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwrng: core - Fix page fault dead lock on mmap-ed hwrng\n\nThere is a dead-lock in the hwrng device read path.  This triggers\nwhen the user reads from /dev/hwrng into memory also mmap-ed from\n/dev/hwrng.  The resulting page fault triggers a recursive read\nwhich then dead-locks.\n\nFix this by using a stack buffer when calling copy_to_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52619",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npstore/ram: Fix crash when setting number of cpus to an odd number\n\nWhen the number of cpu cores is adjusted to 7 or other odd numbers,\nthe zone size will become an odd number.\nThe address of the zone will become:\n    addr of zone0 = BASE\n    addr of zone1 = BASE + zone_size\n    addr of zone2 = BASE + zone_size*2\n    ...\nThe address of zone1/3/5/7 will be mapped to non-alignment va.\nEventually crashes will occur when accessing these va.\n\nSo, use ALIGN_DOWN() to make sure the zone size is even\nto avoid this bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52623",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix a suspicious RCU usage warning\n\nI received the following warning while running cthon against an ontap\nserver running pNFS:\n\n[   57.202521] =============================\n[   57.202522] WARNING: suspicious RCU usage\n[   57.202523] 6.7.0-rc3-g2cc14f52aeb7 #41492 Not tainted\n[   57.202525] -----------------------------\n[   57.202525] net/sunrpc/xprtmultipath.c:349 RCU-list traversed in non-reader section!!\n[   57.202527]\n               other info that might help us debug this:\n\n[   57.202528]\n               rcu_scheduler_active = 2, debug_locks = 1\n[   57.202529] no locks held by test5/3567.\n[   57.202530]\n               stack backtrace:\n[   57.202532] CPU: 0 PID: 3567 Comm: test5 Not tainted 6.7.0-rc3-g2cc14f52aeb7 #41492 5b09971b4965c0aceba19f3eea324a4a806e227e\n[   57.202534] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 2/2/2022\n[   57.202536] Call Trace:\n[   57.202537]  \u003cTASK\u003e\n[   57.202540]  dump_stack_lvl+0x77/0xb0\n[   57.202551]  lockdep_rcu_suspicious+0x154/0x1a0\n[   57.202556]  rpc_xprt_switch_has_addr+0x17c/0x190 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202596]  rpc_clnt_setup_test_and_add_xprt+0x50/0x180 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202621]  ? rpc_clnt_add_xprt+0x254/0x300 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202646]  rpc_clnt_add_xprt+0x27a/0x300 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202671]  ? __pfx_rpc_clnt_setup_test_and_add_xprt+0x10/0x10 [sunrpc ebe02571b9a8ceebf7d98e71675af20c19bdb1f6]\n[   57.202696]  nfs4_pnfs_ds_connect+0x345/0x760 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202728]  ? __pfx_nfs4_test_session_trunk+0x10/0x10 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202754]  nfs4_fl_prepare_ds+0x75/0xc0 [nfs_layout_nfsv41_files e3a4187f18ae8a27b630f9feae6831b584a9360a]\n[   57.202760]  filelayout_write_pagelist+0x4a/0x200 [nfs_layout_nfsv41_files e3a4187f18ae8a27b630f9feae6831b584a9360a]\n[   57.202765]  pnfs_generic_pg_writepages+0xbe/0x230 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202788]  __nfs_pageio_add_request+0x3fd/0x520 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202813]  nfs_pageio_add_request+0x18b/0x390 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202831]  nfs_do_writepage+0x116/0x1e0 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202849]  nfs_writepages_callback+0x13/0x30 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202866]  write_cache_pages+0x265/0x450\n[   57.202870]  ? __pfx_nfs_writepages_callback+0x10/0x10 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202891]  nfs_writepages+0x141/0x230 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202913]  do_writepages+0xd2/0x230\n[   57.202917]  ? filemap_fdatawrite_wbc+0x5c/0x80\n[   57.202921]  filemap_fdatawrite_wbc+0x67/0x80\n[   57.202924]  filemap_write_and_wait_range+0xd9/0x170\n[   57.202930]  nfs_wb_all+0x49/0x180 [nfs 6c976fa593a7c2976f5a0aeb4965514a828e6902]\n[   57.202947]  nfs4_file_flush+0x72/0xb0 [nfsv4 c716d88496ded0ea6d289bbea684fa996f9b57a9]\n[   57.202969]  __se_sys_close+0x46/0xd0\n[   57.202972]  do_syscall_64+0x68/0x100\n[   57.202975]  ? do_syscall_64+0x77/0x100\n[   57.202976]  ? do_syscall_64+0x77/0x100\n[   57.202979]  entry_SYSCALL_64_after_hwframe+0x6e/0x76\n[   57.202982] RIP: 0033:0x7fe2b12e4a94\n[   57.202985] Code: 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 80 3d d5 18 0e 00 00 74 13 b8 03 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 44 c3 0f 1f 00 48 83 ec 18 89 7c 24 0c e8 c3\n[   57.202987] RSP: 002b:00007ffe857ddb38 EFLAGS: 00000202 ORIG_RAX: 0000000000000003\n[   57.202989] RAX: ffffffffffffffda RBX: 00007ffe857dfd68 RCX: 00007fe2b12e4a94\n[   57.202991] RDX: 0000000000002000 RSI: 00007ffe857ddc40 RDI: 0000000000000003\n[   57.202992] RBP: 00007ffe857dfc50 R08: 7fffffffffffffff R09: 0000000065650f49\n[   57.202993] R10: 00007f\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52669",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: s390/aes - Fix buffer overread in CTR mode\n\nWhen processing the last block, the s390 ctr code will always read\na whole block, even if there isn't a whole block of data left.  Fix\nthis by using the actual length left and copy it into a buffer first\nfor processing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52708",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: mmc_spi: fix error handling in mmc_spi_probe()\n\nIf mmc_add_host() fails, it doesn't need to call mmc_remove_host(),\nor it will cause null-ptr-deref, because of deleting a not added\ndevice in mmc_remove_host().\n\nTo fix this, goto label 'fail_glue_init', if mmc_add_host() fails,\nand change the label 'fail_add_host' to 'fail_gpiod_request'.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nWhen both ice and the irdma driver are loaded, a warning in\ncheck_flush_dependency is being triggered. This is due to ice driver\nworkqueue being allocated with the WQ_MEM_RECLAIM flag and the irdma one\nis not.\n\nAccording to kernel documentation, this flag should be set if the\nworkqueue will be involved in the kernel's memory reclamation flow.\nSince it is not, there is no need for the ice driver's WQ to have this\nflag set so remove it.\n\nExample trace:\n\n[  +0.000004] workqueue: WQ_MEM_RECLAIM ice:ice_service_task [ice] is flushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000139] WARNING: CPU: 0 PID: 728 at kernel/workqueue.c:2632 check_flush_dependency+0x178/0x1a0\n[  +0.000011] Modules linked in: bonding tls xt_CHECKSUM xt_MASQUERADE xt_conntrack ipt_REJECT nf_reject_ipv4 nft_compat nft_cha\nin_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 nf_tables nfnetlink bridge stp llc rfkill vfat fat intel_rapl_msr intel\n_rapl_common isst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel kvm irqbypass crct1\n0dif_pclmul crc32_pclmul ghash_clmulni_intel rapl intel_cstate rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_\ncore_mod ib_iser libiscsi scsi_transport_iscsi rdma_cm ib_cm iw_cm iTCO_wdt iTCO_vendor_support ipmi_ssif irdma mei_me ib_uverbs\nib_core intel_uncore joydev pcspkr i2c_i801 acpi_ipmi mei lpc_ich i2c_smbus intel_pch_thermal ioatdma ipmi_si acpi_power_meter\nacpi_pad xfs libcrc32c sd_mod t10_pi crc64_rocksoft crc64 sg ahci ixgbe libahci ice i40e igb crc32c_intel mdio i2c_algo_bit liba\nta dca wmi dm_mirror dm_region_hash dm_log dm_mod ipmi_devintf ipmi_msghandler fuse\n[  +0.000161]  [last unloaded: bonding]\n[  +0.000006] CPU: 0 PID: 728 Comm: kworker/0:2 Tainted: G S                 6.2.0-rc2_next-queue-13jan-00458-gc20aabd57164 #1\n[  +0.000006] Hardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0010.010620200716 01/06/2020\n[  +0.000003] Workqueue: ice ice_service_task [ice]\n[  +0.000127] RIP: 0010:check_flush_dependency+0x178/0x1a0\n[  +0.000005] Code: 89 8e 02 01 e8 49 3d 40 00 49 8b 55 18 48 8d 8d d0 00 00 00 48 8d b3 d0 00 00 00 4d 89 e0 48 c7 c7 e0 3b 08\n9f e8 bb d3 07 01 \u003c0f\u003e 0b e9 be fe ff ff 80 3d 24 89 8e 02 00 0f 85 6b ff ff ff e9 06\n[  +0.000004] RSP: 0018:ffff88810a39f990 EFLAGS: 00010282\n[  +0.000005] RAX: 0000000000000000 RBX: ffff888141bc2400 RCX: 0000000000000000\n[  +0.000004] RDX: 0000000000000001 RSI: dffffc0000000000 RDI: ffffffffa1213a80\n[  +0.000003] RBP: ffff888194bf3400 R08: ffffed117b306112 R09: ffffed117b306112\n[  +0.000003] R10: ffff888bd983088b R11: ffffed117b306111 R12: 0000000000000000\n[  +0.000003] R13: ffff888111f84d00 R14: ffff88810a3943ac R15: ffff888194bf3400\n[  +0.000004] FS:  0000000000000000(0000) GS:ffff888bd9800000(0000) knlGS:0000000000000000\n[  +0.000003] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000003] CR2: 000056035b208b60 CR3: 000000017795e005 CR4: 00000000007706f0\n[  +0.000003] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  +0.000003] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  +0.000002] PKRU: 55555554\n[  +0.000003] Call Trace:\n[  +0.000002]  \u003cTASK\u003e\n[  +0.000003]  __flush_workqueue+0x203/0x840\n[  +0.000006]  ? mutex_unlock+0x84/0xd0\n[  +0.000008]  ? __pfx_mutex_unlock+0x10/0x10\n[  +0.000004]  ? __pfx___flush_workqueue+0x10/0x10\n[  +0.000006]  ? mutex_lock+0xa3/0xf0\n[  +0.000005]  ib_cache_cleanup_one+0x39/0x190 [ib_core]\n[  +0.000174]  __ib_unregister_device+0x84/0xf0 [ib_core]\n[  +0.000094]  ib_unregister_device+0x25/0x30 [ib_core]\n[  +0.000093]  irdma_ib_unregister_device+0x97/0xc0 [irdma]\n[  +0.000064]  ? __pfx_irdma_ib_unregister_device+0x10/0x10 [irdma]\n[  +0.000059]  ? up_write+0x5c/0x90\n[  +0.000005]  irdma_remove+0x36/0x90 [irdma]\n[  +0.000062]  auxiliary_bus_remove+0x32/0x50\n[  +0.000007]  device_r\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52766",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: mipi-i3c-hci: Fix out of bounds access in hci_dma_irq_handler\n\nDo not loop over ring headers in hci_dma_irq_handler() that are not\nallocated and enabled in hci_dma_init(). Otherwise out of bounds access\nwill occur from rings-\u003eheaders[i] access when i \u003e= number of allocated\nring headers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52885",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix UAF in svc_tcp_listen_data_ready()\n\nAfter the listener svc_sock is freed, and before invoking svc_tcp_accept()\nfor the established child sock, there is a window that the newsock\nretaining a freed listener svc_sock in sk_user_data which cloning from\nparent. In the race window, if data is received on the newsock, we will\nobserve use-after-free report in svc_tcp_listen_data_ready().\n\nReproduce by two tasks:\n\n1. while :; do rpc.nfsd 0 ; rpc.nfsd; done\n2. while :; do echo \"\" | ncat -4 127.0.0.1 2049 ; done\n\nKASAN report:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in svc_tcp_listen_data_ready+0x1cf/0x1f0 [sunrpc]\n  Read of size 8 at addr ffff888139d96228 by task nc/102553\n  CPU: 7 PID: 102553 Comm: nc Not tainted 6.3.0+ #18\n  Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020\n  Call Trace:\n   \u003cIRQ\u003e\n   dump_stack_lvl+0x33/0x50\n   print_address_description.constprop.0+0x27/0x310\n   print_report+0x3e/0x70\n   kasan_report+0xae/0xe0\n   svc_tcp_listen_data_ready+0x1cf/0x1f0 [sunrpc]\n   tcp_data_queue+0x9f4/0x20e0\n   tcp_rcv_established+0x666/0x1f60\n   tcp_v4_do_rcv+0x51c/0x850\n   tcp_v4_rcv+0x23fc/0x2e80\n   ip_protocol_deliver_rcu+0x62/0x300\n   ip_local_deliver_finish+0x267/0x350\n   ip_local_deliver+0x18b/0x2d0\n   ip_rcv+0x2fb/0x370\n   __netif_receive_skb_one_core+0x166/0x1b0\n   process_backlog+0x24c/0x5e0\n   __napi_poll+0xa2/0x500\n   net_rx_action+0x854/0xc90\n   __do_softirq+0x1bb/0x5de\n   do_softirq+0xcb/0x100\n   \u003c/IRQ\u003e\n   \u003cTASK\u003e\n   ...\n   \u003c/TASK\u003e\n\n  Allocated by task 102371:\n   kasan_save_stack+0x1e/0x40\n   kasan_set_track+0x21/0x30\n   __kasan_kmalloc+0x7b/0x90\n   svc_setup_socket+0x52/0x4f0 [sunrpc]\n   svc_addsock+0x20d/0x400 [sunrpc]\n   __write_ports_addfd+0x209/0x390 [nfsd]\n   write_ports+0x239/0x2c0 [nfsd]\n   nfsctl_transaction_write+0xac/0x110 [nfsd]\n   vfs_write+0x1c3/0xae0\n   ksys_write+0xed/0x1c0\n   do_syscall_64+0x38/0x90\n   entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\n  Freed by task 102551:\n   kasan_save_stack+0x1e/0x40\n   kasan_set_track+0x21/0x30\n   kasan_save_free_info+0x2a/0x50\n   __kasan_slab_free+0x106/0x190\n   __kmem_cache_free+0x133/0x270\n   svc_xprt_free+0x1e2/0x350 [sunrpc]\n   svc_xprt_destroy_all+0x25a/0x440 [sunrpc]\n   nfsd_put+0x125/0x240 [nfsd]\n   nfsd_svc+0x2cb/0x3c0 [nfsd]\n   write_threads+0x1ac/0x2a0 [nfsd]\n   nfsctl_transaction_write+0xac/0x110 [nfsd]\n   vfs_write+0x1c3/0xae0\n   ksys_write+0xed/0x1c0\n   do_syscall_64+0x38/0x90\n   entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\nFix the UAF by simply doing nothing in svc_tcp_listen_data_ready()\nif state != TCP_LISTEN, that will avoid dereferencing svsk for all\nchild socket.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngsmi: fix null-deref in gsmi_get_variable\n\nWe can get EFI variables without fetching the attribute, so we must\nallow for that in gsmi.\n\ncommit 859748255b43 (\"efi: pstore: Omit efivars caching EFI varstore\naccess layer\") added a new get_variable call with attr=NULL, which\ntriggers panic in gsmi.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check endpoint is valid before dereferencing it\n\nWhen the host controller is not responding, all URBs queued to all\nendpoints need to be killed. This can cause a kernel panic if we\ndereference an invalid endpoint.\n\nFix this by using xhci_get_virt_ep() helper to find the endpoint and\nchecking if the endpoint is valid before dereferencing it.\n\n[233311.853271] xhci-hcd xhci-hcd.1.auto: xHCI host controller not responding, assume dead\n[233311.853393] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000e8\n\n[233311.853964] pc : xhci_hc_died+0x10c/0x270\n[233311.853971] lr : xhci_hc_died+0x1ac/0x270\n\n[233311.854077] Call trace:\n[233311.854085]  xhci_hc_died+0x10c/0x270\n[233311.854093]  xhci_stop_endpoint_command_watchdog+0x100/0x1a4\n[233311.854105]  call_timer_fn+0x50/0x2d4\n[233311.854112]  expire_timers+0xac/0x2e4\n[233311.854118]  run_timer_softirq+0x300/0xabc\n[233311.854127]  __do_softirq+0x148/0x528\n[233311.854135]  irq_exit+0x194/0x1a8\n[233311.854143]  __handle_domain_irq+0x164/0x1d0\n[233311.854149]  gic_handle_irq.22273+0x10c/0x188\n[233311.854156]  el1_irq+0xfc/0x1a8\n[233311.854175]  lpm_cpuidle_enter+0x25c/0x418 [msm_pm]\n[233311.854185]  cpuidle_enter_state+0x1f0/0x764\n[233311.854194]  do_idle+0x594/0x6ac\n[233311.854201]  cpu_startup_entry+0x7c/0x80\n[233311.854209]  secondary_start_kernel+0x170/0x198",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Wait for out_urb's completion in pn533_usb_send_frame()\n\nFix a use-after-free that occurs in hcd when in_urb sent from\npn533_usb_send_frame() is completed earlier than out_urb. Its callback\nfrees the skb data in pn533_send_async_complete() that is used as a\ntransfer buffer of out_urb. Wait before sending in_urb until the\ncallback of out_urb is called. To modify the callback of out_urb alone,\nseparate the complete function of out_urb and ack_urb.\n\nFound by a modified version of syzkaller.\n\nBUG: KASAN: use-after-free in dummy_timer\nCall Trace:\n memcpy (mm/kasan/shadow.c:65)\n dummy_perform_transfer (drivers/usb/gadget/udc/dummy_hcd.c:1352)\n transfer (drivers/usb/gadget/udc/dummy_hcd.c:1453)\n dummy_timer (drivers/usb/gadget/udc/dummy_hcd.c:1972)\n arch_static_branch (arch/x86/include/asm/jump_label.h:27)\n static_key_false (include/linux/jump_label.h:207)\n timer_expire_exit (include/trace/events/timer.h:127)\n call_timer_fn (kernel/time/timer.c:1475)\n expire_timers (kernel/time/timer.c:1519)\n __run_timers (kernel/time/timer.c:1790)\n run_timer_softirq (kernel/time/timer.c:1803)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvb-usb-v2: af9035: Fix null-ptr-deref in af9035_i2c_master_xfer\n\nIn af9035_i2c_master_xfer, msg is controlled by user. When msg[i].buf\nis null and msg[i].len is zero, former checks on msg[i].buf would be\npassed. Malicious data finally reach af9035_i2c_master_xfer. If accessing\nmsg[i].buf[0] without sanity check, null ptr deref would happen.\nWe add check on msg[i].len to prevent crash.\n\nSimilar commit:\ncommit 0ed554fd769a\n(\"media: dvb-usb: az6027: fix null-ptr-deref in az6027_i2c_xfer()\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7256",
      "Description": "In affected libpcap versions during the setup of a remote packet capture the internal function sock_initaddress() calls getaddrinfo() and possibly freeaddrinfo(), but does not clearly indicate to the caller function whether freeaddrinfo() still remains to be called after the function returns.  This makes it possible in some scenarios that both the function and its caller call freeaddrinfo() for the same allocated memory block.  A similar problem was reported in Apple libpcap, to which Apple assigned CVE-2023-40400.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libpcap1-1.8.1-10.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-1737",
      "Description": "Resolver caches and authoritative zone databases that hold significant numbers of RRs for the same hostname (of any RTYPE) can suffer from degraded performance as content is being added or updated, and also when handling client queries for this name.\nThis issue affects BIND 9 versions 9.11.0 through 9.11.37, 9.16.0 through 9.16.50, 9.18.0 through 9.18.27, 9.19.0 through 9.19.24, 9.11.4-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.50-S1, and 9.18.11-S1 through 9.18.27-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:bind-utils-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libbind9-161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libdns1110-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libirs161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libisc1107-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libisccc161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libisccfg163-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:liblwres161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python-bind-9.11.22-3.57.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-1975",
      "Description": "If a server hosts a zone containing a \"KEY\" Resource Record, or a resolver DNSSEC-validates a \"KEY\" Resource Record from a DNSSEC-signed domain in cache, a client can exhaust resolver CPU resources by sending a stream of SIG(0) signed requests.\nThis issue affects BIND 9 versions 9.0.0 through 9.11.37, 9.16.0 through 9.16.50, 9.18.0 through 9.18.27, 9.19.0 through 9.19.24, 9.9.3-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.49-S1, and 9.18.11-S1 through 9.18.27-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:bind-utils-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libbind9-161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libdns1110-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libirs161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libisc1107-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libisccc161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libisccfg163-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:liblwres161-9.11.22-3.57.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python-bind-9.11.22-3.57.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26615",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: fix illegal rmb_desc access in SMC-D connection dump\n\nA crash was found when dumping SMC-D connections. It can be reproduced\nby following steps:\n\n- run nginx/wrk test:\n  smc_run nginx\n  smc_run wrk -t 16 -c 1000 -d \u003cduration\u003e -H 'Connection: Close' \u003cURL\u003e\n\n- continuously dump SMC-D connections in parallel:\n  watch -n 1 'smcss -D'\n\n BUG: kernel NULL pointer dereference, address: 0000000000000030\n CPU: 2 PID: 7204 Comm: smcss Kdump: loaded Tainted: G\tE      6.7.0+ #55\n RIP: 0010:__smc_diag_dump.constprop.0+0x5e5/0x620 [smc_diag]\n Call Trace:\n  \u003cTASK\u003e\n  ? __die+0x24/0x70\n  ? page_fault_oops+0x66/0x150\n  ? exc_page_fault+0x69/0x140\n  ? asm_exc_page_fault+0x26/0x30\n  ? __smc_diag_dump.constprop.0+0x5e5/0x620 [smc_diag]\n  ? __kmalloc_node_track_caller+0x35d/0x430\n  ? __alloc_skb+0x77/0x170\n  smc_diag_dump_proto+0xd0/0xf0 [smc_diag]\n  smc_diag_dump+0x26/0x60 [smc_diag]\n  netlink_dump+0x19f/0x320\n  __netlink_dump_start+0x1dc/0x300\n  smc_diag_handler_dump+0x6a/0x80 [smc_diag]\n  ? __pfx_smc_diag_dump+0x10/0x10 [smc_diag]\n  sock_diag_rcv_msg+0x121/0x140\n  ? __pfx_sock_diag_rcv_msg+0x10/0x10\n  netlink_rcv_skb+0x5a/0x110\n  sock_diag_rcv+0x28/0x40\n  netlink_unicast+0x22a/0x330\n  netlink_sendmsg+0x1f8/0x420\n  __sock_sendmsg+0xb0/0xc0\n  ____sys_sendmsg+0x24e/0x300\n  ? copy_msghdr_from_user+0x62/0x80\n  ___sys_sendmsg+0x7c/0xd0\n  ? __do_fault+0x34/0x160\n  ? do_read_fault+0x5f/0x100\n  ? do_fault+0xb0/0x110\n  ? __handle_mm_fault+0x2b0/0x6c0\n  __sys_sendmsg+0x4d/0x80\n  do_syscall_64+0x69/0x180\n  entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nIt is possible that the connection is in process of being established\nwhen we dump it. Assumed that the connection has been registered in a\nlink group by smc_conn_create() but the rmb_desc has not yet been\ninitialized by smc_buf_create(), thus causing the illegal access to\nconn-\u003ermb_desc. So fix it by checking before dump.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26659",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxhci: handle isoc Babble and Buffer Overrun events properly\n\nxHCI 4.9 explicitly forbids assuming that the xHC has released its\nownership of a multi-TRB TD when it reports an error on one of the\nearly TRBs. Yet the driver makes such assumption and releases the TD,\nallowing the remaining TRBs to be freed or overwritten by new TDs.\n\nThe xHC should also report completion of the final TRB due to its IOC\nflag being set by us, regardless of prior errors. This event cannot\nbe recognized if the TD has already been freed earlier, resulting in\n\"Transfer event TRB DMA ptr not part of current TD\" error message.\n\nFix this by reusing the logic for processing isoc Transaction Errors.\nThis also handles hosts which fail to report the final completion.\n\nFix transfer length reporting on Babble errors. They may be caused by\ndevice malfunction, no guarantee that the buffer has been filled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26663",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Check the bearer type before calling tipc_udp_nl_bearer_add()\n\nsyzbot reported the following general protection fault [1]:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000010: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000080-0x0000000000000087]\n...\nRIP: 0010:tipc_udp_is_known_peer+0x9c/0x250 net/tipc/udp_media.c:291\n...\nCall Trace:\n \u003cTASK\u003e\n tipc_udp_nl_bearer_add+0x212/0x2f0 net/tipc/udp_media.c:646\n tipc_nl_bearer_add+0x21e/0x360 net/tipc/bearer.c:1089\n genl_family_rcv_msg_doit+0x1fc/0x2e0 net/netlink/genetlink.c:972\n genl_family_rcv_msg net/netlink/genetlink.c:1052 [inline]\n genl_rcv_msg+0x561/0x800 net/netlink/genetlink.c:1067\n netlink_rcv_skb+0x16b/0x440 net/netlink/af_netlink.c:2544\n genl_rcv+0x28/0x40 net/netlink/genetlink.c:1076\n netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n netlink_unicast+0x53b/0x810 net/netlink/af_netlink.c:1367\n netlink_sendmsg+0x8b7/0xd70 net/netlink/af_netlink.c:1909\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0xd5/0x180 net/socket.c:745\n ____sys_sendmsg+0x6ac/0x940 net/socket.c:2584\n ___sys_sendmsg+0x135/0x1d0 net/socket.c:2638\n __sys_sendmsg+0x117/0x1e0 net/socket.c:2667\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x40/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nThe cause of this issue is that when tipc_nl_bearer_add() is called with\nthe TIPC_NLA_BEARER_UDP_OPTS attribute, tipc_udp_nl_bearer_add() is called\neven if the bearer is not UDP.\n\ntipc_udp_is_known_peer() called by tipc_udp_nl_bearer_add() assumes that\nthe media_ptr field of the tipc_bearer has an udp_bearer type object, so\nthe function goes crazy for non-UDP bearers.\n\nThis patch fixes the issue by checking the bearer type before calling\ntipc_udp_nl_bearer_add() in tipc_nl_bearer_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26668",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_limit: reject configurations that cause integer overflow\n\nReject bogus configs where internal token counter wraps around.\nThis only occurs with very very large requests, such as 17gbyte/s.\n\nIts better to reject this rather than having incorrect ratelimit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26677",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix delayed ACKs to not set the reference serial number\n\nFix the construction of delayed ACKs to not set the reference serial number\nas they can't be used as an RTT reference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26735",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix possible use-after-free and null-ptr-deref\n\nThe pernet operations structure for the subsystem must be registered\nbefore registering the generic netlink family.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26812",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: Create persistent INTx handler\n\nA vulnerability exists where the eventfd for INTx signaling can be\ndeconfigured, which unregisters the IRQ handler but still allows\neventfds to be signaled with a NULL context through the SET_IRQS ioctl\nor through unmask irqfd if the device interrupt is pending.\n\nIdeally this could be solved with some additional locking; the igate\nmutex serializes the ioctl and config space accesses, and the interrupt\nhandler is unregistered relative to the trigger, but the irqfd path\nruns asynchronous to those.  The igate mutex cannot be acquired from the\natomic context of the eventfd wake function.  Disabling the irqfd\nrelative to the eventfd registration is potentially incompatible with\nexisting userspace.\n\nAs a result, the solution implemented here moves configuration of the\nINTx interrupt handler to track the lifetime of the INTx context object\nand irq_type configuration, rather than registration of a particular\ntrigger eventfd.  Synchronization is added between the ioctl path and\neventfd_signal() wrapper such that the eventfd trigger can be\ndynamically updated relative to in-flight interrupts or irqfd callbacks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26830",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Do not allow untrusted VF to remove administratively set MAC\n\nCurrently when PF administratively sets VF's MAC address and the VF\nis put down (VF tries to delete all MACs) then the MAC is removed\nfrom MAC filters and primary VF MAC is zeroed.\n\nDo not allow untrusted VF to remove primary MAC when it was set\nadministratively by PF.\n\nReproducer:\n1) Create VF\n2) Set VF interface up\n3) Administratively set the VF's MAC\n4) Put VF interface down\n\n[root@host ~]# echo 1 \u003e /sys/class/net/enp2s0f0/device/sriov_numvfs\n[root@host ~]# ip link set enp2s0f0v0 up\n[root@host ~]# ip link set enp2s0f0 vf 0 mac fe:6c:b5:da:c7:7d\n[root@host ~]# ip link show enp2s0f0\n23: enp2s0f0: \u003cBROADCAST,MULTICAST,UP,LOWER_UP\u003e mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 3c:ec:ef:b7:dd:04 brd ff:ff:ff:ff:ff:ff\n    vf 0     link/ether fe:6c:b5:da:c7:7d brd ff:ff:ff:ff:ff:ff, spoof checking on, link-state auto, trust off\n[root@host ~]# ip link set enp2s0f0v0 down\n[root@host ~]# ip link show enp2s0f0\n23: enp2s0f0: \u003cBROADCAST,MULTICAST,UP,LOWER_UP\u003e mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000\n    link/ether 3c:ec:ef:b7:dd:04 brd ff:ff:ff:ff:ff:ff\n    vf 0     link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff, spoof checking on, link-state auto, trust off",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26851",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_conntrack_h323: Add protection for bmp length out of range\n\nUBSAN load reports an exception of BRK#5515 SHIFT_ISSUE:Bitwise shifts\nthat are out of bounds for their data type.\n\nvmlinux   get_bitmap(b=75) + 712\n\u003cnet/netfilter/nf_conntrack_h323_asn1.c:0\u003e\nvmlinux   decode_seq(bs=0xFFFFFFD008037000, f=0xFFFFFFD008037018, level=134443100) + 1956\n\u003cnet/netfilter/nf_conntrack_h323_asn1.c:592\u003e\nvmlinux   decode_choice(base=0xFFFFFFD0080370F0, level=23843636) + 1216\n\u003cnet/netfilter/nf_conntrack_h323_asn1.c:814\u003e\nvmlinux   decode_seq(f=0xFFFFFFD0080371A8, level=134443500) + 812\n\u003cnet/netfilter/nf_conntrack_h323_asn1.c:576\u003e\nvmlinux   decode_choice(base=0xFFFFFFD008037280, level=0) + 1216\n\u003cnet/netfilter/nf_conntrack_h323_asn1.c:814\u003e\nvmlinux   DecodeRasMessage() + 304\n\u003cnet/netfilter/nf_conntrack_h323_asn1.c:833\u003e\nvmlinux   ras_help() + 684\n\u003cnet/netfilter/nf_conntrack_h323_main.c:1728\u003e\nvmlinux   nf_confirm() + 188\n\u003cnet/netfilter/nf_conntrack_proto.c:137\u003e\n\nDue to abnormal data in skb-\u003edata, the extension bitmap length\nexceeds 32 when decoding ras message then uses the length to make\na shift operation. It will change into negative after several loop.\nUBSAN load could detect a negative shift as an undefined behaviour\nand reports exception.\nSo we add the protection to avoid the length exceeding 32. Or else\nit will return out of range error and stop decoding.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/trigger: Fix to return error if failed to alloc snapshot\n\nFix register_snapshot_trigger() to return error code if it failed to\nallocate a snapshot instead of 0 (success). Unless that, it will register\nsnapshot trigger without an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: do not free live element\n\nPablo reports a crash with large batches of elements with a\nback-to-back add/remove pattern.  Quoting Pablo:\n\n  add_elem(\"00000000\") timeout 100 ms\n  ...\n  add_elem(\"0000000X\") timeout 100 ms\n  del_elem(\"0000000X\") \u003c---------------- delete one that was just added\n  ...\n  add_elem(\"00005000\") timeout 100 ms\n\n  1) nft_pipapo_remove() removes element 0000000X\n  Then, KASAN shows a splat.\n\nLooking at the remove function there is a chance that we will drop a\nrule that maps to a non-deactivated element.\n\nRemoval happens in two steps, first we do a lookup for key k and return the\nto-be-removed element and mark it as inactive in the next generation.\nThen, in a second step, the element gets removed from the set/map.\n\nThe _remove function does not work correctly if we have more than one\nelement that share the same key.\n\nThis can happen if we insert an element into a set when the set already\nholds an element with same key, but the element mapping to the existing\nkey has timed out or is not active in the next generation.\n\nIn such case its possible that removal will unmap the wrong element.\nIf this happens, we will leak the non-deactivated element, it becomes\nunreachable.\n\nThe element that got deactivated (and will be freed later) will\nremain reachable in the set data structure, this can result in\na crash when such an element is retrieved during lookup (stale\npointer).\n\nAdd a check that the fully matching key does in fact map to the element\nthat we have marked as inactive in the deactivation step.\nIf not, we need to continue searching.\n\nAdd a bug/warn trap at the end of the function as well, the remove\nfunction must not ever be called with an invisible/unreachable/non-existent\nelement.\n\nv2: avoid uneeded temporary variable (Stefano)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memleak in map from abort path\n\nThe delete set command does not rely on the transaction object for\nelement removal, therefore, a combination of delete element + delete set\nfrom the abort path could result in restoring twice the refcount of the\nmapping.\n\nCheck for inactive element in the next generation for the delete element\ncommand in the abort path, skip restoring state if next generation bit\nhas been already cleared. This is similar to the activate logic using\nthe set walk iterator.\n\n[ 6170.286929] ------------[ cut here ]------------\n[ 6170.286939] WARNING: CPU: 6 PID: 790302 at net/netfilter/nf_tables_api.c:2086 nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.287071] Modules linked in: [...]\n[ 6170.287633] CPU: 6 PID: 790302 Comm: kworker/6:2 Not tainted 6.9.0-rc3+ #365\n[ 6170.287768] RIP: 0010:nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.287886] Code: df 48 8d 7d 58 e8 69 2e 3b df 48 8b 7d 58 e8 80 1b 37 df 48 8d 7d 68 e8 57 2e 3b df 48 8b 7d 68 e8 6e 1b 37 df 48 89 ef eb c4 \u003c0f\u003e 0b 48 83 c4 08 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 0f\n[ 6170.287895] RSP: 0018:ffff888134b8fd08 EFLAGS: 00010202\n[ 6170.287904] RAX: 0000000000000001 RBX: ffff888125bffb28 RCX: dffffc0000000000\n[ 6170.287912] RDX: 0000000000000003 RSI: ffffffffa20298ab RDI: ffff88811ebe4750\n[ 6170.287919] RBP: ffff88811ebe4700 R08: ffff88838e812650 R09: fffffbfff0623a55\n[ 6170.287926] R10: ffffffff8311d2af R11: 0000000000000001 R12: ffff888125bffb10\n[ 6170.287933] R13: ffff888125bffb10 R14: dead000000000122 R15: dead000000000100\n[ 6170.287940] FS:  0000000000000000(0000) GS:ffff888390b00000(0000) knlGS:0000000000000000\n[ 6170.287948] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 6170.287955] CR2: 00007fd31fc00710 CR3: 0000000133f60004 CR4: 00000000001706f0\n[ 6170.287962] Call Trace:\n[ 6170.287967]  \u003cTASK\u003e\n[ 6170.287973]  ? __warn+0x9f/0x1a0\n[ 6170.287986]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.288092]  ? report_bug+0x1b1/0x1e0\n[ 6170.287986]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.288092]  ? report_bug+0x1b1/0x1e0\n[ 6170.288104]  ? handle_bug+0x3c/0x70\n[ 6170.288112]  ? exc_invalid_op+0x17/0x40\n[ 6170.288120]  ? asm_exc_invalid_op+0x1a/0x20\n[ 6170.288132]  ? nf_tables_chain_destroy+0x2b/0x220 [nf_tables]\n[ 6170.288243]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]\n[ 6170.288366]  ? nf_tables_chain_destroy+0x2b/0x220 [nf_tables]\n[ 6170.288483]  nf_tables_trans_destroy_work+0x588/0x590 [nf_tables]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27019",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_obj_type_get()\n\nnft_unregister_obj() can concurrent with __nft_obj_type_get(),\nand there is not any protection when iterate over nf_tables_objects\nlist in __nft_obj_type_get(). Therefore, there is potential data-race\nof nf_tables_objects list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_objects\nlist in __nft_obj_type_get(), and use rcu_read_lock() in the caller\nnft_obj_type_get() to protect the entire type query process.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_expr_type_get()\n\nnft_unregister_expr() can concurrent with __nft_expr_type_get(),\nand there is not any protection when iterate over nf_tables_expressions\nlist in __nft_expr_type_get(). Therefore, there is potential data-race\nof nf_tables_expressions list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_expressions\nlist in __nft_expr_type_get(), and use rcu_read_lock() in the caller\nnft_expr_type_get() to protect the entire type query process.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/rds: fix WARNING in rds_conn_connect_if_down\n\nIf connection isn't established yet, get_mr() will fail, trigger connection after\nget_mr().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27025",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: null check for nla_nest_start\n\nnla_nest_start() may fail and return NULL. Insert a check and set errno\nbased on other call sites within the same source code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27437",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: Disable auto-enable of exclusive INTx IRQ\n\nCurrently for devices requiring masking at the irqchip for INTx, ie.\ndevices without DisINTx support, the IRQ is enabled in request_irq()\nand subsequently disabled as necessary to align with the masked status\nflag.  This presents a window where the interrupt could fire between\nthese events, resulting in the IRQ incrementing the disable depth twice.\nThis would be unrecoverable for a user since the masked flag prevents\nnested enables through vfio.\n\nInstead, invert the logic using IRQF_NO_AUTOEN such that exclusive INTx\nis never auto-enabled, then unmask as required.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35195",
      "Description": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python-requests-2.24.0-8.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: fsl: qbman: Use raw spinlock for cgr_lock\n\nsmp_call_function always runs its callback in hard IRQ context, even on\nPREEMPT_RT, where spinlocks can sleep. So we need to use a raw spinlock\nfor cgr_lock to ensure we aren't waiting on a sleeping task.\n\nAlthough this bug has existed for a while, it was not apparent until\ncommit ef2a8d5478b9 (\"net: dpaa: Adjust queue depth on rate change\")\nwhich invokes smp_call_function_single via qman_update_cgr_safe every\ntime a link goes up or down.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35837",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvpp2: clear BM pool before initialization\n\nRegister value persist after booting the kernel using\nkexec which results in kernel panic. Thus clear the\nBM pool registers before initialisation to fix the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35887",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: fix use-after-free bugs caused by ax25_ds_del_timer\n\nWhen the ax25 device is detaching, the ax25_dev_device_down()\ncalls ax25_ds_del_timer() to cleanup the slave_timer. When\nthe timer handler is running, the ax25_ds_del_timer() that\ncalls del_timer() in it will return directly. As a result,\nthe use-after-free bugs could happen, one of the scenarios\nis shown below:\n\n      (Thread 1)          |      (Thread 2)\n                          | ax25_ds_timeout()\nax25_dev_device_down()    |\n  ax25_ds_del_timer()     |\n    del_timer()           |\n  ax25_dev_put() //FREE   |\n                          |  ax25_dev-\u003e //USE\n\nIn order to mitigate bugs, when the device is detaching, use\ntimer_shutdown_sync() to stop the timer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_skbmod: prevent kernel-infoleak\n\nsyzbot found that tcf_skbmod_dump() was copying four bytes\nfrom kernel stack to user space [1].\n\nThe issue here is that 'struct tc_skbmod' has a four bytes hole.\n\nWe need to clear the structure before filling fields.\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n BUG: KMSAN: kernel-infoleak in copy_to_user_iter lib/iov_iter.c:24 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_ubuf include/linux/iov_iter.h:29 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance include/linux/iov_iter.h:271 [inline]\n BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n  instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n  copy_to_user_iter lib/iov_iter.c:24 [inline]\n  iterate_ubuf include/linux/iov_iter.h:29 [inline]\n  iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n  iterate_and_advance include/linux/iov_iter.h:271 [inline]\n  _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n  copy_to_iter include/linux/uio.h:196 [inline]\n  simple_copy_to_iter net/core/datagram.c:532 [inline]\n  __skb_datagram_iter+0x185/0x1000 net/core/datagram.c:420\n  skb_copy_datagram_iter+0x5c/0x200 net/core/datagram.c:546\n  skb_copy_datagram_msg include/linux/skbuff.h:4050 [inline]\n  netlink_recvmsg+0x432/0x1610 net/netlink/af_netlink.c:1962\n  sock_recvmsg_nosec net/socket.c:1046 [inline]\n  sock_recvmsg+0x2c4/0x340 net/socket.c:1068\n  __sys_recvfrom+0x35a/0x5f0 net/socket.c:2242\n  __do_sys_recvfrom net/socket.c:2260 [inline]\n  __se_sys_recvfrom net/socket.c:2256 [inline]\n  __x64_sys_recvfrom+0x126/0x1d0 net/socket.c:2256\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was stored to memory at:\n  pskb_expand_head+0x30f/0x19d0 net/core/skbuff.c:2253\n  netlink_trim+0x2c2/0x330 net/netlink/af_netlink.c:1317\n  netlink_unicast+0x9f/0x1260 net/netlink/af_netlink.c:1351\n  nlmsg_unicast include/net/netlink.h:1144 [inline]\n  nlmsg_notify+0x21d/0x2f0 net/netlink/af_netlink.c:2610\n  rtnetlink_send+0x73/0x90 net/core/rtnetlink.c:741\n  rtnetlink_maybe_send include/linux/rtnetlink.h:17 [inline]\n  tcf_add_notify net/sched/act_api.c:2048 [inline]\n  tcf_action_add net/sched/act_api.c:2071 [inline]\n  tc_ctl_action+0x146e/0x19d0 net/sched/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737/0x1900 net/core/rtnetlink.c:6595\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netlink.c:2559\n  rtnetlink_rcv+0x34/0x40 net/core/rtnetlink.c:6613\n  netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n  netlink_unicast+0xf4c/0x1260 net/netlink/af_netlink.c:1361\n  netlink_sendmsg+0x10df/0x11f0 net/netlink/af_netlink.c:1905\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  ____sys_sendmsg+0x877/0xb60 net/socket.c:2584\n  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n  __sys_sendmsg net/socket.c:2667 [inline]\n  __do_sys_sendmsg net/socket.c:2676 [inline]\n  __se_sys_sendmsg net/socket.c:2674 [inline]\n  __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2674\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was stored to memory at:\n  __nla_put lib/nlattr.c:1041 [inline]\n  nla_put+0x1c6/0x230 lib/nlattr.c:1099\n  tcf_skbmod_dump+0x23f/0xc20 net/sched/act_skbmod.c:256\n  tcf_action_dump_old net/sched/act_api.c:1191 [inline]\n  tcf_action_dump_1+0x85e/0x970 net/sched/act_api.c:1227\n  tcf_action_dump+0x1fd/0x460 net/sched/act_api.c:1251\n  tca_get_fill+0x519/0x7a0 net/sched/act_api.c:1628\n  tcf_add_notify_msg net/sched/act_api.c:2023 [inline]\n  tcf_add_notify net/sched/act_api.c:2042 [inline]\n  tcf_action_add net/sched/act_api.c:2071 [inline]\n  tc_ctl_action+0x1365/0x19d0 net/sched/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737/0x1900 net/core/rtnetlink.c:6595\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netli\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_dev_up and nci_ntf_packet\n\nsyzbot reported the following uninit-value access issue [1][2]:\n\nnci_rx_work() parses and processes received packet. When the payload\nlength is zero, each message type handler reads uninitialized payload\nand KMSAN detects this issue. The receipt of a packet with a zero-size\npayload is considered unexpected, and therefore, such packets should be\nsilently discarded.\n\nThis patch resolved this issue by checking payload size before calling\neach message type handler codes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btintel: Fix null ptr deref in btintel_read_version\n\nIf hci_cmd_sync_complete() is triggered and skb is NULL, then\nhdev-\u003ereq_skb is NULL, which will cause this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: reduce rtnl pressure in smc_pnet_create_pnetids_list()\n\nMany syzbot reports show extreme rtnl pressure, and many of them hint\nthat smc acquires rtnl in netns creation for no good reason [1]\n\nThis patch returns early from smc_pnet_net_init()\nif there is no netdevice yet.\n\nI am not even sure why smc_pnet_create_pnetids_list() even exists,\nbecause smc_pnet_netdev_event() is also calling\nsmc_pnet_add_base_pnetid() when handling NETDEV_UP event.\n\n[1] extract of typical syzbot reports\n\n2 locks held by syz-executor.3/12252:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.4/12253:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.1/12257:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.2/12261:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.0/12265:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.3/12268:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.4/12271:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.1/12274:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.2/12280:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35949",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: make sure that WRITTEN is set on all metadata blocks\n\nWe previously would call btrfs_check_leaf() if we had the check\nintegrity code enabled, which meant that we could only run the extended\nleaf checks if we had WRITTEN set on the header flags.\n\nThis leaves a gap in our checking, because we could end up with\ncorruption on disk where WRITTEN isn't set on the leaf, and then the\nextended leaf checks don't get run which we rely on to validate all of\nthe item pointers to make sure we don't access memory outside of the\nextent buffer.\n\nHowever, since 732fab95abe2 (\"btrfs: check-integrity: remove\nCONFIG_BTRFS_FS_CHECK_INTEGRITY option\") we no longer call\nbtrfs_check_leaf() from btrfs_mark_buffer_dirty(), which means we only\never call it on blocks that are being written out, and thus have WRITTEN\nset, or that are being read in, which should have WRITTEN set.\n\nAdd checks to make sure we have WRITTEN set appropriately, and then make\nsure __btrfs_check_leaf() always does the item checking.  This will\nprotect us from file systems that have been corrupted and no longer have\nWRITTEN set on some of the blocks.\n\nThis was hit on a crafted image tweaking the WRITTEN bit and reported by\nKASAN as out-of-bound access in the eb accessors. The example is a dir\nitem at the end of an eb.\n\n  [2.042] BTRFS warning (device loop1): bad eb member start: ptr 0x3fff start 30572544 member offset 16410 size 2\n  [2.040] general protection fault, probably for non-canonical address 0xe0009d1000000003: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  [2.537] KASAN: maybe wild-memory-access in range [0x0005088000000018-0x000508800000001f]\n  [2.729] CPU: 0 PID: 2587 Comm: mount Not tainted 6.8.2 #1\n  [2.729] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n  [2.621] RIP: 0010:btrfs_get_16+0x34b/0x6d0\n  [2.621] RSP: 0018:ffff88810871fab8 EFLAGS: 00000206\n  [2.621] RAX: 0000a11000000003 RBX: ffff888104ff8720 RCX: ffff88811b2288c0\n  [2.621] RDX: dffffc0000000000 RSI: ffffffff81dd8aca RDI: ffff88810871f748\n  [2.621] RBP: 000000000000401a R08: 0000000000000001 R09: ffffed10210e3ee9\n  [2.621] R10: ffff88810871f74f R11: 205d323430333737 R12: 000000000000001a\n  [2.621] R13: 000508800000001a R14: 1ffff110210e3f5d R15: ffffffff850011e8\n  [2.621] FS:  00007f56ea275840(0000) GS:ffff88811b200000(0000) knlGS:0000000000000000\n  [2.621] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [2.621] CR2: 00007febd13b75c0 CR3: 000000010bb50000 CR4: 00000000000006f0\n  [2.621] Call Trace:\n  [2.621]  \u003cTASK\u003e\n  [2.621]  ? show_regs+0x74/0x80\n  [2.621]  ? die_addr+0x46/0xc0\n  [2.621]  ? exc_general_protection+0x161/0x2a0\n  [2.621]  ? asm_exc_general_protection+0x26/0x30\n  [2.621]  ? btrfs_get_16+0x33a/0x6d0\n  [2.621]  ? btrfs_get_16+0x34b/0x6d0\n  [2.621]  ? btrfs_get_16+0x33a/0x6d0\n  [2.621]  ? __pfx_btrfs_get_16+0x10/0x10\n  [2.621]  ? __pfx_mutex_unlock+0x10/0x10\n  [2.621]  btrfs_match_dir_item_name+0x101/0x1a0\n  [2.621]  btrfs_lookup_dir_item+0x1f3/0x280\n  [2.621]  ? __pfx_btrfs_lookup_dir_item+0x10/0x10\n  [2.621]  btrfs_get_tree+0xd25/0x1910\n\n[ copy more details from report ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35965",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix not validating setsockopt user input\n\nCheck user input length before copying data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: Fix not validating setsockopt user input\n\nsyzbot reported rfcomm_sock_setsockopt_old() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude/linux/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude/linux/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old\nnet/bluetooth/rfcomm/sock.c:632 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893/0xa70\nnet/bluetooth/rfcomm/sock.c:673\nRead of size 4 at addr ffff8880209a8bc3 by task syz-executor632/5064",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix memory leak in hci_req_sync_complete()\n\nIn 'hci_req_sync_complete()', always free the previous sync\nrequest state before assigning reference to a new one.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Use access_width over bit_width for system memory accesses\n\nTo align with ACPI 6.3+, since bit_width can be any 8-bit value, it\ncannot be depended on to be always on a clean 8b boundary. This was\nuncovered on the Cobalt 100 platform.\n\nSError Interrupt on CPU26, code 0xbe000011 -- SError\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted 5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n pstate: 62400009 (nZCv daif +PAN -UAO +TCO -DIT -SSBS BTYPE=--)\n pc : cppc_get_perf_caps+0xec/0x410\n lr : cppc_get_perf_caps+0xe8/0x410\n sp : ffff8000155ab730\n x29: ffff8000155ab730 x28: ffff0080139d0038 x27: ffff0080139d0078\n x26: 0000000000000000 x25: ffff0080139d0058 x24: 00000000ffffffff\n x23: ffff0080139d0298 x22: ffff0080139d0278 x21: 0000000000000000\n x20: ffff00802b251910 x19: ffff0080139d0000 x18: ffffffffffffffff\n x17: 0000000000000000 x16: ffffdc7e111bad04 x15: ffff00802b251008\n x14: ffffffffffffffff x13: ffff013f1fd63300 x12: 0000000000000006\n x11: ffffdc7e128f4420 x10: 0000000000000000 x9 : ffffdc7e111badec\n x8 : ffff00802b251980 x7 : 0000000000000000 x6 : ffff0080139d0028\n x5 : 0000000000000000 x4 : ffff0080139d0018 x3 : 00000000ffffffff\n x2 : 0000000000000008 x1 : ffff8000155ab7a0 x0 : 0000000000000000\n Kernel panic - not syncing: Asynchronous SError Interrupt\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted\n5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n Call trace:\n  dump_backtrace+0x0/0x1e0\n  show_stack+0x24/0x30\n  dump_stack_lvl+0x8c/0xb8\n  dump_stack+0x18/0x34\n  panic+0x16c/0x384\n  add_taint+0x0/0xc0\n  arm64_serror_panic+0x7c/0x90\n  arm64_is_fatal_ras_serror+0x34/0xa4\n  do_serror+0x50/0x6c\n  el1h_64_error_handler+0x40/0x74\n  el1h_64_error+0x7c/0x80\n  cppc_get_perf_caps+0xec/0x410\n  cppc_cpufreq_cpu_init+0x74/0x400 [cppc_cpufreq]\n  cpufreq_online+0x2dc/0xa30\n  cpufreq_add_dev+0xc0/0xd4\n  subsys_interface_register+0x134/0x14c\n  cpufreq_register_driver+0x1b0/0x354\n  cppc_cpufreq_init+0x1a8/0x1000 [cppc_cpufreq]\n  do_one_initcall+0x50/0x250\n  do_init_module+0x60/0x27c\n  load_module+0x2300/0x2570\n  __do_sys_finit_module+0xa8/0x114\n  __arm64_sys_finit_module+0x2c/0x3c\n  invoke_syscall+0x78/0x100\n  el0_svc_common.constprop.0+0x180/0x1a0\n  do_el0_svc+0x84/0xa0\n  el0_svc+0x2c/0xc0\n  el0t_64_sync_handler+0xa4/0x12c\n  el0t_64_sync+0x1a4/0x1a8\n\nInstead, use access_width to determine the size and use the offset and\nwidth to shift and mask the bits to read/write out. Make sure to add a\ncheck for system memory since pcc redefines the access_width to\nsubspace id.\n\nIf access_width is not set, then fall back to using bit_width.\n\n[ rjw: Subject and changelog edits, comment adjustments ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36004",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nIssue reported by customer during SRIOV testing, call trace:\nWhen both i40e and the i40iw driver are loaded, a warning\nin check_flush_dependency is being triggered. This seems\nto be because of the i40e driver workqueue is allocated with\nthe WQ_MEM_RECLAIM flag, and the i40iw one is not.\n\nSimilar error was encountered on ice too and it was fixed by\nremoving the flag. Do the same for i40e too.\n\n[Feb 9 09:08] ------------[ cut here ]------------\n[  +0.000004] workqueue: WQ_MEM_RECLAIM i40e:i40e_service_task [i40e] is\nflushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000060] WARNING: CPU: 0 PID: 937 at kernel/workqueue.c:2966\ncheck_flush_dependency+0x10b/0x120\n[  +0.000007] Modules linked in: snd_seq_dummy snd_hrtimer snd_seq\nsnd_timer snd_seq_device snd soundcore nls_utf8 cifs cifs_arc4\nnls_ucs2_utils rdma_cm iw_cm ib_cm cifs_md4 dns_resolver netfs qrtr\nrfkill sunrpc vfat fat intel_rapl_msr intel_rapl_common irdma\nintel_uncore_frequency intel_uncore_frequency_common ice ipmi_ssif\nisst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal\nintel_powerclamp gnss coretemp ib_uverbs rapl intel_cstate ib_core\niTCO_wdt iTCO_vendor_support acpi_ipmi mei_me ipmi_si intel_uncore\nioatdma i2c_i801 joydev pcspkr mei ipmi_devintf lpc_ich\nintel_pch_thermal i2c_smbus ipmi_msghandler acpi_power_meter acpi_pad\nxfs libcrc32c ast sd_mod drm_shmem_helper t10_pi drm_kms_helper sg ixgbe\ndrm i40e ahci crct10dif_pclmul libahci crc32_pclmul igb crc32c_intel\nlibata ghash_clmulni_intel i2c_algo_bit mdio dca wmi dm_mirror\ndm_region_hash dm_log dm_mod fuse\n[  +0.000050] CPU: 0 PID: 937 Comm: kworker/0:3 Kdump: loaded Not\ntainted 6.8.0-rc2-Feb-net_dev-Qiueue-00279-gbd43c5687e05 #1\n[  +0.000003] Hardware name: Intel Corporation S2600BPB/S2600BPB, BIOS\nSE5C620.86B.02.01.0013.121520200651 12/15/2020\n[  +0.000001] Workqueue: i40e i40e_service_task [i40e]\n[  +0.000024] RIP: 0010:check_flush_dependency+0x10b/0x120\n[  +0.000003] Code: ff 49 8b 54 24 18 48 8d 8b b0 00 00 00 49 89 e8 48\n81 c6 b0 00 00 00 48 c7 c7 b0 97 fa 9f c6 05 8a cc 1f 02 01 e8 35 b3 fd\nff \u003c0f\u003e 0b e9 10 ff ff ff 80 3d 78 cc 1f 02 00 75 94 e9 46 ff ff ff 90\n[  +0.000002] RSP: 0018:ffffbd294976bcf8 EFLAGS: 00010282\n[  +0.000002] RAX: 0000000000000000 RBX: ffff94d4c483c000 RCX:\n0000000000000027\n[  +0.000001] RDX: ffff94d47f620bc8 RSI: 0000000000000001 RDI:\nffff94d47f620bc0\n[  +0.000001] RBP: 0000000000000000 R08: 0000000000000000 R09:\n00000000ffff7fff\n[  +0.000001] R10: ffffbd294976bb98 R11: ffffffffa0be65e8 R12:\nffff94c5451ea180\n[  +0.000001] R13: ffff94c5ab5e8000 R14: ffff94c5c20b6e05 R15:\nffff94c5f1330ab0\n[  +0.000001] FS:  0000000000000000(0000) GS:ffff94d47f600000(0000)\nknlGS:0000000000000000\n[  +0.000002] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000001] CR2: 00007f9e6f1fca70 CR3: 0000000038e20004 CR4:\n00000000007706f0\n[  +0.000000] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[  +0.000001] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[  +0.000001] PKRU: 55555554\n[  +0.000001] Call Trace:\n[  +0.000001]  \u003cTASK\u003e\n[  +0.000002]  ? __warn+0x80/0x130\n[  +0.000003]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  ? report_bug+0x195/0x1a0\n[  +0.000005]  ? handle_bug+0x3c/0x70\n[  +0.000003]  ? exc_invalid_op+0x14/0x70\n[  +0.000002]  ? asm_exc_invalid_op+0x16/0x20\n[  +0.000006]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  __flush_workqueue+0x126/0x3f0\n[  +0.000015]  ib_cache_cleanup_one+0x1c/0xe0 [ib_core]\n[  +0.000056]  __ib_unregister_device+0x6a/0xb0 [ib_core]\n[  +0.000023]  ib_unregister_device_and_put+0x34/0x50 [ib_core]\n[  +0.000020]  i40iw_close+0x4b/0x90 [irdma]\n[  +0.000022]  i40e_notify_client_of_netdev_close+0x54/0xc0 [i40e]\n[  +0.000035]  i40e_service_task+0x126/0x190 [i40e]\n[  +0.000024]  process_one_work+0x174/0x340\n[  +0.000003]  worker_th\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()\n\nExtend a critical section to prevent chan from early freeing.\nAlso make the l2cap_connect() return type void. Nothing is using the\nreturned value but it is ugly to return a potentially freed pointer.\nMaking it void will help with backports because earlier kernels did use\nthe return value. Now the compile will break for kernels where this\npatch is not a complete fix.\n\nCall stack summary:\n\n[use]\nl2cap_bredr_sig_cmd\n  l2cap_connect\n    mutex_lock(\u0026conn-\u003echan_lock);\n  | chan = pchan-\u003eops-\u003enew_connection(pchan); \u003c- alloc chan\n  | __l2cap_chan_add(conn, chan);\n  |   l2cap_chan_hold(chan);\n  |   list_add(\u0026chan-\u003elist, \u0026conn-\u003echan_l);   ... (1)\n    mutex_unlock(\u0026conn-\u003echan_lock);\n    chan-\u003econf_state              ... (4) \u003c- use after free\n\n[free]\nl2cap_conn_del\n  mutex_lock(\u0026conn-\u003echan_lock);\n| foreach chan in conn-\u003echan_l:            ... (2)\n|   l2cap_chan_put(chan);\n|     l2cap_chan_destroy\n|       kfree(chan)               ... (3) \u003c- chan freed\n  mutex_unlock(\u0026conn-\u003echan_lock);\n\n==================================================================\nBUG: KASAN: slab-use-after-free in instrument_atomic_read\ninclude/linux/instrumented.h:68 [inline]\nBUG: KASAN: slab-use-after-free in _test_bit\ninclude/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]\nBUG: KASAN: slab-use-after-free in l2cap_connect+0xa67/0x11a0\nnet/bluetooth/l2cap_core.c:4260\nRead of size 8 at addr ffff88810bf040a0 by task kworker/u3:1/311",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36270",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: tproxy: bail out if IP has been disabled on the device\n\nsyzbot reports:\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000003: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]\n[..]\nRIP: 0010:nf_tproxy_laddr4+0xb7/0x340 net/ipv4/netfilter/nf_tproxy_ipv4.c:62\nCall Trace:\n nft_tproxy_eval_v4 net/netfilter/nft_tproxy.c:56 [inline]\n nft_tproxy_eval+0xa9a/0x1a00 net/netfilter/nft_tproxy.c:168\n\n__in_dev_get_rcu() can return NULL, so check for this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36286",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nfnetlink_queue: acquire rcu_read_lock() in instance_destroy_rcu()\n\nsyzbot reported that nf_reinject() could be called without rcu_read_lock() :\n\nWARNING: suspicious RCU usage\n6.9.0-rc7-syzkaller-02060-g5c1672705a1a #0 Not tainted\n\nnet/netfilter/nfnetlink_queue.c:263 suspicious rcu_dereference_check() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n2 locks held by syz-executor.4/13427:\n  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_lock_acquire include/linux/rcupdate.h:329 [inline]\n  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_do_batch kernel/rcu/tree.c:2190 [inline]\n  #0: ffffffff8e334f60 (rcu_callback){....}-{0:0}, at: rcu_core+0xa86/0x1830 kernel/rcu/tree.c:2471\n  #1: ffff88801ca92958 (\u0026inst-\u003elock){+.-.}-{2:2}, at: spin_lock_bh include/linux/spinlock.h:356 [inline]\n  #1: ffff88801ca92958 (\u0026inst-\u003elock){+.-.}-{2:2}, at: nfqnl_flush net/netfilter/nfnetlink_queue.c:405 [inline]\n  #1: ffff88801ca92958 (\u0026inst-\u003elock){+.-.}-{2:2}, at: instance_destroy_rcu+0x30/0x220 net/netfilter/nfnetlink_queue.c:172\n\nstack backtrace:\nCPU: 0 PID: 13427 Comm: syz-executor.4 Not tainted 6.9.0-rc7-syzkaller-02060-g5c1672705a1a #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\nCall Trace:\n \u003cIRQ\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  lockdep_rcu_suspicious+0x221/0x340 kernel/locking/lockdep.c:6712\n  nf_reinject net/netfilter/nfnetlink_queue.c:323 [inline]\n  nfqnl_reinject+0x6ec/0x1120 net/netfilter/nfnetlink_queue.c:397\n  nfqnl_flush net/netfilter/nfnetlink_queue.c:410 [inline]\n  instance_destroy_rcu+0x1ae/0x220 net/netfilter/nfnetlink_queue.c:172\n  rcu_do_batch kernel/rcu/tree.c:2196 [inline]\n  rcu_core+0xafd/0x1830 kernel/rcu/tree.c:2471\n  handle_softirqs+0x2d6/0x990 kernel/softirq.c:554\n  __do_softirq kernel/softirq.c:588 [inline]\n  invoke_softirq kernel/softirq.c:428 [inline]\n  __irq_exit_rcu+0xf4/0x1c0 kernel/softirq.c:637\n  irq_exit_rcu+0x9/0x30 kernel/softirq.c:649\n  instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]\n  sysvec_apic_timer_interrupt+0xa6/0xc0 arch/x86/kernel/apic/apic.c:1043\n \u003c/IRQ\u003e\n \u003cTASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36288",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix loop termination condition in gss_free_in_token_pages()\n\nThe in_token-\u003epages[] array is not NULL terminated. This results in\nthe following KASAN splat:\n\n  KASAN: maybe wild-memory-access in range [0x04a2013400000008-0x04a201340000000f]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36592",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: prevent NULL dereference in ip6_output()\n\nAccording to syzbot, there is a chance that ip6_dst_idev()\nreturns NULL in ip6_output(). Most places in IPv6 stack\ndeal with a NULL idev just fine, but not here.\n\nsyzbot reported:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc00000000bc: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x00000000000005e0-0x00000000000005e7]\nCPU: 0 PID: 9775 Comm: syz-executor.4 Not tainted 6.9.0-rc5-syzkaller-00157-g6a30653b604a #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n RIP: 0010:ip6_output+0x231/0x3f0 net/ipv6/ip6_output.c:237\nCode: 3c 1e 00 49 89 df 74 08 4c 89 ef e8 19 58 db f7 48 8b 44 24 20 49 89 45 00 49 89 c5 48 8d 9d e0 05 00 00 48 89 d8 48 c1 e8 03 \u003c42\u003e 0f b6 04 38 84 c0 4c 8b 74 24 28 0f 85 61 01 00 00 8b 1b 31 ff\nRSP: 0018:ffffc9000927f0d8 EFLAGS: 00010202\nRAX: 00000000000000bc RBX: 00000000000005e0 RCX: 0000000000040000\nRDX: ffffc900131f9000 RSI: 0000000000004f47 RDI: 0000000000004f48\nRBP: 0000000000000000 R08: ffffffff8a1f0b9a R09: 1ffffffff1f51fad\nR10: dffffc0000000000 R11: fffffbfff1f51fae R12: ffff8880293ec8c0\nR13: ffff88805d7fc000 R14: 1ffff1100527d91a R15: dffffc0000000000\nFS:  00007f135c6856c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000080 CR3: 0000000064096000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip6_xmit+0xefe/0x17f0 net/ipv6/ip6_output.c:358\n  sctp_v6_xmit+0x9f2/0x13f0 net/sctp/ipv6.c:248\n  sctp_packet_transmit+0x26ad/0x2ca0 net/sctp/output.c:653\n  sctp_packet_singleton+0x22c/0x320 net/sctp/outqueue.c:783\n  sctp_outq_flush_ctrl net/sctp/outqueue.c:914 [inline]\n  sctp_outq_flush+0x6d5/0x3e20 net/sctp/outqueue.c:1212\n  sctp_side_effects net/sctp/sm_sideeffect.c:1198 [inline]\n  sctp_do_sm+0x59cc/0x60c0 net/sctp/sm_sideeffect.c:1169\n  sctp_primitive_ASSOCIATE+0x95/0xc0 net/sctp/primitive.c:73\n  __sctp_connect+0x9cd/0xe30 net/sctp/socket.c:1234\n  sctp_connect net/sctp/socket.c:4819 [inline]\n  sctp_inet_connect+0x149/0x1f0 net/sctp/socket.c:4834\n  __sys_connect_file net/socket.c:2048 [inline]\n  __sys_connect+0x2df/0x310 net/socket.c:2065\n  __do_sys_connect net/socket.c:2075 [inline]\n  __se_sys_connect net/socket.c:2072 [inline]\n  __x64_sys_connect+0x7a/0x90 net/socket.c:2072\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36902",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fib6_rules: avoid possible NULL dereference in fib6_rule_action()\n\nsyzbot is able to trigger the following crash [1],\ncaused by unsafe ip6_dst_idev() use.\n\nIndeed ip6_dst_idev() can return NULL, and must always be checked.\n\n[1]\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 0 PID: 31648 Comm: syz-executor.0 Not tainted 6.9.0-rc4-next-20240417-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n RIP: 0010:__fib6_rule_action net/ipv6/fib6_rules.c:237 [inline]\n RIP: 0010:fib6_rule_action+0x241/0x7b0 net/ipv6/fib6_rules.c:267\nCode: 02 00 00 49 8d 9f d8 00 00 00 48 89 d8 48 c1 e8 03 42 80 3c 20 00 74 08 48 89 df e8 f9 32 bf f7 48 8b 1b 48 89 d8 48 c1 e8 03 \u003c42\u003e 80 3c 20 00 74 08 48 89 df e8 e0 32 bf f7 4c 8b 03 48 89 ef 4c\nRSP: 0018:ffffc9000fc1f2f0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 1a772f98c8186700\nRDX: 0000000000000003 RSI: ffffffff8bcac4e0 RDI: ffffffff8c1f9760\nRBP: ffff8880673fb980 R08: ffffffff8fac15ef R09: 1ffffffff1f582bd\nR10: dffffc0000000000 R11: fffffbfff1f582be R12: dffffc0000000000\nR13: 0000000000000080 R14: ffff888076509000 R15: ffff88807a029a00\nFS:  00007f55e82ca6c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b31d23000 CR3: 0000000022b66000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  fib_rules_lookup+0x62c/0xdb0 net/core/fib_rules.c:317\n  fib6_rule_lookup+0x1fd/0x790 net/ipv6/fib6_rules.c:108\n  ip6_route_output_flags_noref net/ipv6/route.c:2637 [inline]\n  ip6_route_output_flags+0x38e/0x610 net/ipv6/route.c:2649\n  ip6_route_output include/net/ip6_route.h:93 [inline]\n  ip6_dst_lookup_tail+0x189/0x11a0 net/ipv6/ip6_output.c:1120\n  ip6_dst_lookup_flow+0xb9/0x180 net/ipv6/ip6_output.c:1250\n  sctp_v6_get_dst+0x792/0x1e20 net/sctp/ipv6.c:326\n  sctp_transport_route+0x12c/0x2e0 net/sctp/transport.c:455\n  sctp_assoc_add_peer+0x614/0x15c0 net/sctp/associola.c:662\n  sctp_connect_new_asoc+0x31d/0x6c0 net/sctp/socket.c:1099\n  __sctp_connect+0x66d/0xe30 net/sctp/socket.c:1197\n  sctp_connect net/sctp/socket.c:4819 [inline]\n  sctp_inet_connect+0x149/0x1f0 net/sctp/socket.c:4834\n  __sys_connect_file net/socket.c:2048 [inline]\n  __sys_connect+0x2df/0x310 net/socket.c:2065\n  __do_sys_connect net/socket.c:2075 [inline]\n  __se_sys_connect net/socket.c:2072 [inline]\n  __x64_sys_connect+0x7a/0x90 net/socket.c:2072\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Remove spin_lock_bh while releasing resources after upload\n\nThe session resources are used by FW and driver when session is offloaded,\nonce session is uploaded these resources are not used. The lock is not\nrequired as these fields won't be used any longer. The offload and upload\ncalls are sequential, hence lock is not required.\n\nThis will suppress following BUG_ON():\n\n[  449.843143] ------------[ cut here ]------------\n[  449.848302] kernel BUG at mm/vmalloc.c:2727!\n[  449.853072] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[  449.858712] CPU: 5 PID: 1996 Comm: kworker/u24:2 Not tainted 5.14.0-118.el9.x86_64 #1\nRebooting.\n[  449.867454] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.3.4 11/08/2016\n[  449.876966] Workqueue: fc_rport_eq fc_rport_work [libfc]\n[  449.882910] RIP: 0010:vunmap+0x2e/0x30\n[  449.887098] Code: 00 65 8b 05 14 a2 f0 4a a9 00 ff ff 00 75 1b 55 48 89 fd e8 34 36 79 00 48 85 ed 74 0b 48 89 ef 31 f6 5d e9 14 fc ff ff 5d c3 \u003c0f\u003e 0b 0f 1f 44 00 00 41 57 41 56 49 89 ce 41 55 49 89 fd 41 54 41\n[  449.908054] RSP: 0018:ffffb83d878b3d68 EFLAGS: 00010206\n[  449.913887] RAX: 0000000080000201 RBX: ffff8f4355133550 RCX: 000000000d400005\n[  449.921843] RDX: 0000000000000001 RSI: 0000000000001000 RDI: ffffb83da53f5000\n[  449.929808] RBP: ffff8f4ac6675800 R08: ffffb83d878b3d30 R09: 00000000000efbdf\n[  449.937774] R10: 0000000000000003 R11: ffff8f434573e000 R12: 0000000000001000\n[  449.945736] R13: 0000000000001000 R14: ffffb83da53f5000 R15: ffff8f43d4ea3ae0\n[  449.953701] FS:  0000000000000000(0000) GS:ffff8f529fc80000(0000) knlGS:0000000000000000\n[  449.962732] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  449.969138] CR2: 00007f8cf993e150 CR3: 0000000efbe10003 CR4: 00000000003706e0\n[  449.977102] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  449.985065] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  449.993028] Call Trace:\n[  449.995756]  __iommu_dma_free+0x96/0x100\n[  450.000139]  bnx2fc_free_session_resc+0x67/0x240 [bnx2fc]\n[  450.006171]  bnx2fc_upload_session+0xce/0x100 [bnx2fc]\n[  450.011910]  bnx2fc_rport_event_handler+0x9f/0x240 [bnx2fc]\n[  450.018136]  fc_rport_work+0x103/0x5b0 [libfc]\n[  450.023103]  process_one_work+0x1e8/0x3c0\n[  450.027581]  worker_thread+0x50/0x3b0\n[  450.031669]  ? rescuer_thread+0x370/0x370\n[  450.036143]  kthread+0x149/0x170\n[  450.039744]  ? set_kthread_struct+0x40/0x40\n[  450.044411]  ret_from_fork+0x22/0x30\n[  450.048404] Modules linked in: vfat msdos fat xfs nfs_layout_nfsv41_files rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver dm_service_time qedf qed crc8 bnx2fc libfcoe libfc scsi_transport_fc intel_rapl_msr intel_rapl_common x86_pkg_temp_thermal intel_powerclamp dcdbas rapl intel_cstate intel_uncore mei_me pcspkr mei ipmi_ssif lpc_ich ipmi_si fuse zram ext4 mbcache jbd2 loop nfsv3 nfs_acl nfs lockd grace fscache netfs irdma ice sd_mod t10_pi sg ib_uverbs ib_core 8021q garp mrp stp llc mgag200 i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt mxm_wmi fb_sys_fops cec crct10dif_pclmul ahci crc32_pclmul bnx2x drm ghash_clmulni_intel libahci rfkill i40e libata megaraid_sas mdio wmi sunrpc lrw dm_crypt dm_round_robin dm_multipath dm_snapshot dm_bufio dm_mirror dm_region_hash dm_log dm_zero dm_mod linear raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid6_pq libcrc32c crc32c_intel raid1 raid0 iscsi_ibft squashfs be2iscsi bnx2i cnic uio cxgb4i cxgb4 tls\n[  450.048497]  libcxgbi libcxgb qla4xxx iscsi_boot_sysfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi edd ipmi_devintf ipmi_msghandler\n[  450.159753] ---[ end trace 712de2c57c64abc8 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Release hbalock before calling lpfc_worker_wake_up()\n\nlpfc_worker_wake_up() calls the lpfc_work_done() routine, which takes the\nhbalock.  Thus, lpfc_worker_wake_up() should not be called while holding the\nhbalock to avoid potential deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36939",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: Handle error of rpc_proc_register() in nfs_net_init().\n\nsyzkaller reported a warning [0] triggered while destroying immature\nnetns.\n\nrpc_proc_register() was called in init_nfs_fs(), but its error\nhas been ignored since at least the initial commit 1da177e4c3f4\n(\"Linux-2.6.12-rc2\").\n\nRecently, commit d47151b79e32 (\"nfs: expose /proc/net/sunrpc/nfs\nin net namespaces\") converted the procfs to per-netns and made\nthe problem more visible.\n\nEven when rpc_proc_register() fails, nfs_net_init() could succeed,\nand thus nfs_net_exit() will be called while destroying the netns.\n\nThen, remove_proc_entry() will be called for non-existing proc\ndirectory and trigger the warning below.\n\nLet's handle the error of rpc_proc_register() properly in nfs_net_init().\n\n[0]:\nname 'nfs'\nWARNING: CPU: 1 PID: 1710 at fs/proc/generic.c:711 remove_proc_entry+0x1bb/0x2d0 fs/proc/generic.c:711\nModules linked in:\nCPU: 1 PID: 1710 Comm: syz-executor.2 Not tainted 6.8.0-12822-gcd51db110a7e #12\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nRIP: 0010:remove_proc_entry+0x1bb/0x2d0 fs/proc/generic.c:711\nCode: 41 5d 41 5e c3 e8 85 09 b5 ff 48 c7 c7 88 58 64 86 e8 09 0e 71 02 e8 74 09 b5 ff 4c 89 e6 48 c7 c7 de 1b 80 84 e8 c5 ad 97 ff \u003c0f\u003e 0b eb b1 e8 5c 09 b5 ff 48 c7 c7 88 58 64 86 e8 e0 0d 71 02 eb\nRSP: 0018:ffffc9000c6d7ce0 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff8880422b8b00 RCX: ffffffff8110503c\nRDX: ffff888030652f00 RSI: ffffffff81105045 RDI: 0000000000000001\nRBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000001 R11: ffffffff81bb62cb R12: ffffffff84807ffc\nR13: ffff88804ad6fcc0 R14: ffffffff84807ffc R15: ffffffff85741ff8\nFS:  00007f30cfba8640(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ff51afe8000 CR3: 000000005a60a005 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n rpc_proc_unregister+0x64/0x70 net/sunrpc/stats.c:310\n nfs_net_exit+0x1c/0x30 fs/nfs/inode.c:2438\n ops_exit_list+0x62/0xb0 net/core/net_namespace.c:170\n setup_net+0x46c/0x660 net/core/net_namespace.c:372\n copy_net_ns+0x244/0x590 net/core/net_namespace.c:505\n create_new_namespaces+0x2ed/0x770 kernel/nsproxy.c:110\n unshare_nsproxy_namespaces+0xae/0x160 kernel/nsproxy.c:228\n ksys_unshare+0x342/0x760 kernel/fork.c:3322\n __do_sys_unshare kernel/fork.c:3393 [inline]\n __se_sys_unshare kernel/fork.c:3391 [inline]\n __x64_sys_unshare+0x1f/0x30 kernel/fork.c:3391\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x4f/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x46/0x4e\nRIP: 0033:0x7f30d0febe5d\nCode: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 9f 1b 00 f7 d8 64 89 01 48\nRSP: 002b:00007f30cfba7cc8 EFLAGS: 00000246 ORIG_RAX: 0000000000000110\nRAX: ffffffffffffffda RBX: 00000000004bbf80 RCX: 00007f30d0febe5d\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 000000006c020600\nRBP: 00000000004bbf80 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000002\nR13: 000000000000000b R14: 00007f30d104c530 R15: 0000000000000000\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37891",
      "Description": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python-urllib3-1.25.10-3.40.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-urllib3-1.25.10-3.40.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38381",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_rx_work\n\nsyzbot reported the following uninit-value access issue [1]\n\nnci_rx_work() parses received packet from ndev-\u003erx_q. It should be\nvalidated header size, payload size and total packet size before\nprocessing the packet. If an invalid packet is detected, it should be\nsilently discarded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38558",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix overwriting ct original tuple for ICMPv6\n\nOVS_PACKET_CMD_EXECUTE has 3 main attributes:\n - OVS_PACKET_ATTR_KEY - Packet metadata in a netlink format.\n - OVS_PACKET_ATTR_PACKET - Binary packet content.\n - OVS_PACKET_ATTR_ACTIONS - Actions to execute on the packet.\n\nOVS_PACKET_ATTR_KEY is parsed first to populate sw_flow_key structure\nwith the metadata like conntrack state, input port, recirculation id,\netc.  Then the packet itself gets parsed to populate the rest of the\nkeys from the packet headers.\n\nWhenever the packet parsing code starts parsing the ICMPv6 header, it\nfirst zeroes out fields in the key corresponding to Neighbor Discovery\ninformation even if it is not an ND packet.\n\nIt is an 'ipv6.nd' field.  However, the 'ipv6' is a union that shares\nthe space between 'nd' and 'ct_orig' that holds the original tuple\nconntrack metadata parsed from the OVS_PACKET_ATTR_KEY.\n\nND packets should not normally have conntrack state, so it's fine to\nshare the space, but normal ICMPv6 Echo packets or maybe other types of\nICMPv6 can have the state attached and it should not be overwritten.\n\nThe issue results in all but the last 4 bytes of the destination\naddress being wiped from the original conntrack tuple leading to\nincorrect packet matching and potentially executing wrong actions\nin case this packet recirculates within the datapath or goes back\nto userspace.\n\nND fields should not be accessed in non-ND packets, so not clearing\nthem should be fine.  Executing memset() only for actual ND packets to\navoid the issue.\n\nInitializing the whole thing before parsing is needed because ND packet\nmay not contain all the options.\n\nThe issue only affects the OVS_PACKET_CMD_EXECUTE path and doesn't\naffect packets entering OVS datapath from network interfaces, because\nin this case CT metadata is populated from skb after the packet is\nalready parsed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38560",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bfa: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul instead\nof memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38596",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix data races in unix_release_sock/unix_stream_sendmsg\n\nA data-race condition has been identified in af_unix. In one data path,\nthe write function unix_release_sock() atomically writes to\nsk-\u003esk_shutdown using WRITE_ONCE. However, on the reader side,\nunix_stream_sendmsg() does not read it atomically. Consequently, this\nissue is causing the following KCSAN splat to occur:\n\n\tBUG: KCSAN: data-race in unix_release_sock / unix_stream_sendmsg\n\n\twrite (marked) to 0xffff88867256ddbb of 1 bytes by task 7270 on cpu 28:\n\tunix_release_sock (net/unix/af_unix.c:640)\n\tunix_release (net/unix/af_unix.c:1050)\n\tsock_close (net/socket.c:659 net/socket.c:1421)\n\t__fput (fs/file_table.c:422)\n\t__fput_sync (fs/file_table.c:508)\n\t__se_sys_close (fs/open.c:1559 fs/open.c:1541)\n\t__x64_sys_close (fs/open.c:1541)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tread to 0xffff88867256ddbb of 1 bytes by task 989 on cpu 14:\n\tunix_stream_sendmsg (net/unix/af_unix.c:2273)\n\t__sock_sendmsg (net/socket.c:730 net/socket.c:745)\n\t____sys_sendmsg (net/socket.c:2584)\n\t__sys_sendmmsg (net/socket.c:2638 net/socket.c:2724)\n\t__x64_sys_sendmmsg (net/socket.c:2753 net/socket.c:2750 net/socket.c:2750)\n\tx64_sys_call (arch/x86/entry/syscall_64.c:33)\n\tdo_syscall_64 (arch/x86/entry/common.c:?)\n\tentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n\tvalue changed: 0x01 -\u003e 0x03\n\nThe line numbers are related to commit dd5a440a31fa (\"Linux 6.9-rc7\").\n\nCommit e1d09c2c2f57 (\"af_unix: Fix data races around sk-\u003esk_shutdown.\")\naddressed a comparable issue in the past regarding sk-\u003esk_shutdown.\nHowever, it overlooked resolving this particular data path.\nThis patch only offending unix_stream_sendmsg() function, since the\nother reads seem to be protected by unix_state_lock() as discussed in",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38618",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: timer: Set lower bound of start tick time\n\nCurrently ALSA timer doesn't have the lower limit of the start tick\ntime, and it allows a very small size, e.g. 1 tick with 1ns resolution\nfor hrtimer.  Such a situation may lead to an unexpected RCU stall,\nwhere  the callback repeatedly queuing the expire update, as reported\nby fuzzer.\n\nThis patch introduces a sanity check of the timer start tick time, so\nthat the system returns an error when a too small start size is set.\nAs of this patch, the lower limit is hard-coded to 100us, which is\nsmall enough but can still work somehow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38632",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: fix potential memory leak in vfio_intx_enable()\n\nIf vfio_irq_ctx_alloc() failed will lead to 'name' memory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38662",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Allow delete from sockmap/sockhash only if update is allowed\n\nWe have seen an influx of syzkaller reports where a BPF program attached to\na tracepoint triggers a locking rule violation by performing a map_delete\non a sockmap/sockhash.\n\nWe don't intend to support this artificial use scenario. Extend the\nexisting verifier allowed-program-type check for updating sockmap/sockhash\nto also cover deleting from a map.\n\nFrom now on only BPF programs which were previously allowed to update\nsockmap/sockhash can delete from these map types.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39487",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: Fix out-of-bounds read in bond_option_arp_ip_targets_set()\n\nIn function bond_option_arp_ip_targets_set(), if newval-\u003estring is an\nempty string, newval-\u003estring+1 will point to the byte after the\nstring, causing an out-of-bound read.\n\nBUG: KASAN: slab-out-of-bounds in strlen+0x7d/0xa0 lib/string.c:418\nRead of size 1 at addr ffff8881119c4781 by task syz-executor665/8107\nCPU: 1 PID: 8107 Comm: syz-executor665 Not tainted 6.7.0-rc7 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd9/0x150 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:364 [inline]\n print_report+0xc1/0x5e0 mm/kasan/report.c:475\n kasan_report+0xbe/0xf0 mm/kasan/report.c:588\n strlen+0x7d/0xa0 lib/string.c:418\n __fortify_strlen include/linux/fortify-string.h:210 [inline]\n in4_pton+0xa3/0x3f0 net/core/utils.c:130\n bond_option_arp_ip_targets_set+0xc2/0x910\ndrivers/net/bonding/bond_options.c:1201\n __bond_opt_set+0x2a4/0x1030 drivers/net/bonding/bond_options.c:767\n __bond_opt_set_notify+0x48/0x150 drivers/net/bonding/bond_options.c:792\n bond_opt_tryset_rtnl+0xda/0x160 drivers/net/bonding/bond_options.c:817\n bonding_sysfs_store_option+0xa1/0x120 drivers/net/bonding/bond_sysfs.c:156\n dev_attr_store+0x54/0x80 drivers/base/core.c:2366\n sysfs_kf_write+0x114/0x170 fs/sysfs/file.c:136\n kernfs_fop_write_iter+0x337/0x500 fs/kernfs/file.c:334\n call_write_iter include/linux/fs.h:2020 [inline]\n new_sync_write fs/read_write.c:491 [inline]\n vfs_write+0x96a/0xd80 fs/read_write.c:584\n ksys_write+0x122/0x250 fs/read_write.c:637\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x40/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n---[ end trace ]---\n\nFix it by adding a check of string length before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39488",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: asm-bug: Add .align 2 to the end of __BUG_ENTRY\n\nWhen CONFIG_DEBUG_BUGVERBOSE=n, we fail to add necessary padding bytes\nto bug_table entries, and as a result the last entry in a bug table will\nbe ignored, potentially leading to an unexpected panic(). All prior\nentries in the table will be handled correctly.\n\nThe arm64 ABI requires that struct fields of up to 8 bytes are\nnaturally-aligned, with padding added within a struct such that struct\nare suitably aligned within arrays.\n\nWhen CONFIG_DEBUG_BUGVERPOSE=y, the layout of a bug_entry is:\n\n\tstruct bug_entry {\n\t\tsigned int      bug_addr_disp;\t// 4 bytes\n\t\tsigned int      file_disp;\t// 4 bytes\n\t\tunsigned short  line;\t\t// 2 bytes\n\t\tunsigned short  flags;\t\t// 2 bytes\n\t}\n\n... with 12 bytes total, requiring 4-byte alignment.\n\nWhen CONFIG_DEBUG_BUGVERBOSE=n, the layout of a bug_entry is:\n\n\tstruct bug_entry {\n\t\tsigned int      bug_addr_disp;\t// 4 bytes\n\t\tunsigned short  flags;\t\t// 2 bytes\n\t\t\u003c implicit padding \u003e\t\t// 2 bytes\n\t}\n\n... with 8 bytes total, with 6 bytes of data and 2 bytes of trailing\npadding, requiring 4-byte alginment.\n\nWhen we create a bug_entry in assembly, we align the start of the entry\nto 4 bytes, which implicitly handles padding for any prior entries.\nHowever, we do not align the end of the entry, and so when\nCONFIG_DEBUG_BUGVERBOSE=n, the final entry lacks the trailing padding\nbytes.\n\nFor the main kernel image this is not a problem as find_bug() doesn't\ndepend on the trailing padding bytes when searching for entries:\n\n\tfor (bug = __start___bug_table; bug \u003c __stop___bug_table; ++bug)\n\t\tif (bugaddr == bug_addr(bug))\n\t\t\treturn bug;\n\nHowever for modules, module_bug_finalize() depends on the trailing\nbytes when calculating the number of entries:\n\n\tmod-\u003enum_bugs = sechdrs[i].sh_size / sizeof(struct bug_entry);\n\n... and as the last bug_entry lacks the necessary padding bytes, this entry\nwill not be counted, e.g. in the case of a single entry:\n\n\tsechdrs[i].sh_size == 6\n\tsizeof(struct bug_entry) == 8;\n\n\tsechdrs[i].sh_size / sizeof(struct bug_entry) == 0;\n\nConsequently module_find_bug() will miss the last bug_entry when it does:\n\n\tfor (i = 0; i \u003c mod-\u003enum_bugs; ++i, ++bug)\n\t\tif (bugaddr == bug_addr(bug))\n\t\t\tgoto out;\n\n... which can lead to a kenrel panic due to an unhandled bug.\n\nThis can be demonstrated with the following module:\n\n\tstatic int __init buginit(void)\n\t{\n\t\tWARN(1, \"hello\\n\");\n\t\treturn 0;\n\t}\n\n\tstatic void __exit bugexit(void)\n\t{\n\t}\n\n\tmodule_init(buginit);\n\tmodule_exit(bugexit);\n\tMODULE_LICENSE(\"GPL\");\n\n... which will trigger a kernel panic when loaded:\n\n\t------------[ cut here ]------------\n\thello\n\tUnexpected kernel BRK exception at EL1\n\tInternal error: BRK handler: 00000000f2000800 [#1] PREEMPT SMP\n\tModules linked in: hello(O+)\n\tCPU: 0 PID: 50 Comm: insmod Tainted: G           O       6.9.1 #8\n\tHardware name: linux,dummy-virt (DT)\n\tpstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n\tpc : buginit+0x18/0x1000 [hello]\n\tlr : buginit+0x18/0x1000 [hello]\n\tsp : ffff800080533ae0\n\tx29: ffff800080533ae0 x28: 0000000000000000 x27: 0000000000000000\n\tx26: ffffaba8c4e70510 x25: ffff800080533c30 x24: ffffaba8c4a28a58\n\tx23: 0000000000000000 x22: 0000000000000000 x21: ffff3947c0eab3c0\n\tx20: ffffaba8c4e3f000 x19: ffffaba846464000 x18: 0000000000000006\n\tx17: 0000000000000000 x16: ffffaba8c2492834 x15: 0720072007200720\n\tx14: 0720072007200720 x13: ffffaba8c49b27c8 x12: 0000000000000312\n\tx11: 0000000000000106 x10: ffffaba8c4a0a7c8 x9 : ffffaba8c49b27c8\n\tx8 : 00000000ffffefff x7 : ffffaba8c4a0a7c8 x6 : 80000000fffff000\n\tx5 : 0000000000000107 x4 : 0000000000000000 x3 : 0000000000000000\n\tx2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff3947c0eab3c0\n\tCall trace:\n\t buginit+0x18/0x1000 [hello]\n\t do_one_initcall+0x80/0x1c8\n\t do_init_module+0x60/0x218\n\t load_module+0x1ba4/0x1d70\n\t __do_sys_init_module+0x198/0x1d0\n\t __arm64_sys_init_module+0x1c/0x28\n\t invoke_syscall+0x48/0x114\n\t el0_svc\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39489",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix memleak in seg6_hmac_init_algo\n\nseg6_hmac_init_algo returns without cleaning up the previous allocations\nif one fails, so it's going to leak all that memory and the crypto tfms.\n\nUpdate seg6_hmac_exit to only free the memory when allocated, so we can\nreuse the code directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39490",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix missing sk_buff release in seg6_input_core\n\nThe seg6_input() function is responsible for adding the SRH into a\npacket, delegating the operation to the seg6_input_core(). This function\nuses the skb_cow_head() to ensure that there is sufficient headroom in\nthe sk_buff for accommodating the link-layer header.\nIn the event that the skb_cow_header() function fails, the\nseg6_input_core() catches the error but it does not release the sk_buff,\nwhich will result in a memory leak.\n\nThis issue was introduced in commit af3b5158b89d (\"ipv6: sr: fix BUG due\nto headroom too small after SRH push\") and persists even after commit\n7a3f5b0de364 (\"netfilter: add netfilter hooks to SRv6 data plane\"),\nwhere the entire seg6_input() code was refactored to deal with netfilter\nhooks.\n\nThe proposed patch addresses the identified memory leak by requiring the\nseg6_input_core() function to release the sk_buff in the event that\nskb_cow_head() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39494",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nima: Fix use-after-free on a dentry's dname.name\n\n-\u003ed_name.name can change on rename and the earlier value can be freed;\nthere are conditions sufficient to stabilize it (-\u003ed_lock on dentry,\n-\u003ed_lock on its parent, -\u003ei_rwsem exclusive on the parent's inode,\nrename_lock), but none of those are met at any of the sites. Take a stable\nsnapshot of the name instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39499",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmci: prevent speculation leaks by sanitizing event in event_deliver()\n\nCoverity spotted that event_msg is controlled by user-space,\nevent_msg-\u003eevent_data.event is passed to event_deliver() and used\nas an index without sanitization.\n\nThis change ensures that the event index is sanitized to mitigate any\npossibility of speculative information leaks.\n\nThis bug was discovered and resolved using Coverity Static Analysis\nSecurity Testing (SAST) by Synopsys, Inc.\n\nOnly compile tested, no access to HW.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39501",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39506",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nliquidio: Adjust a NULL pointer handling path in lio_vf_rep_copy_packet\n\nIn lio_vf_rep_copy_packet() pg_info-\u003epage is compared to a NULL value,\nbut then it is unconditionally passed to skb_add_rx_frag() which looks\nstrange and could lead to null pointer dereference.\n\nlio_vf_rep_copy_packet() call trace looks like:\n\tocteon_droq_process_packets\n\t octeon_droq_fast_process_packets\n\t  octeon_droq_dispatch_pkt\n\t   octeon_create_recv_info\n\t    ...search in the dispatch_list...\n\t     -\u003edisp_fn(rdisp-\u003erinfo, ...)\n\t      lio_vf_rep_pkt_recv(struct octeon_recv_info *recv_info, ...)\nIn this path there is no code which sets pg_info-\u003epage to NULL.\nSo this check looks unneeded and doesn't solve potential problem.\nBut I guess the author had reason to add a check and I have no such card\nand can't do real test.\nIn addition, the code in the function liquidio_push_packet() in\nliquidio/lio_core.c does exactly the same.\n\nBased on this, I consider the most acceptable compromise solution to\nadjust this issue by moving skb_add_rx_frag() into conditional scope.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39507",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix kernel crash problem in concurrent scenario\n\nWhen link status change, the nic driver need to notify the roce\ndriver to handle this event, but at this time, the roce driver\nmay uninit, then cause kernel crash.\n\nTo fix the problem, when link status change, need to check\nwhether the roce registered, and when uninit, need to wait link\nupdate finish.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39509",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: remove unnecessary WARN_ON() in implement()\n\nSyzkaller hit a warning [1] in a call to implement() when trying\nto write a value into a field of smaller size in an output report.\n\nSince implement() already has a warn message printed out with the\nhelp of hid_warn() and value in question gets trimmed with:\n\t...\n\tvalue \u0026= m;\n\t...\nWARN_ON may be considered superfluous. Remove it to suppress future\nsyzkaller triggers.\n\n[1]\nWARNING: CPU: 0 PID: 5084 at drivers/hid/hid-core.c:1451 implement drivers/hid/hid-core.c:1451 [inline]\nWARNING: CPU: 0 PID: 5084 at drivers/hid/hid-core.c:1451 hid_output_report+0x548/0x760 drivers/hid/hid-core.c:1863\nModules linked in:\nCPU: 0 PID: 5084 Comm: syz-executor424 Not tainted 6.9.0-rc7-syzkaller-00183-gcf87f46fd34d #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\nRIP: 0010:implement drivers/hid/hid-core.c:1451 [inline]\nRIP: 0010:hid_output_report+0x548/0x760 drivers/hid/hid-core.c:1863\n...\nCall Trace:\n \u003cTASK\u003e\n __usbhid_submit_report drivers/hid/usbhid/hid-core.c:591 [inline]\n usbhid_submit_report+0x43d/0x9e0 drivers/hid/usbhid/hid-core.c:636\n hiddev_ioctl+0x138b/0x1f00 drivers/hid/usbhid/hiddev.c:726\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:904 [inline]\n __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:890\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-4032",
      "Description": "The \"ipaddress\" module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \"globally reachable\" or \"private\". This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn't be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libpython3_4m1_0-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-base-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-curses-3.4.10-25.139.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Avoid test/set_bit() operating in non-allocated memory\n\nThere is a potential out-of-bounds access when using test_bit() on a single\nword. The test_bit() and set_bit() functions operate on long values, and\nwhen testing or setting a single word, they can exceed the word\nboundary. KASAN detects this issue and produces a dump:\n\n\t BUG: KASAN: slab-out-of-bounds in _scsih_add_device.constprop.0 (./arch/x86/include/asm/bitops.h:60 ./include/asm-generic/bitops/instrumented-atomic.h:29 drivers/scsi/mpt3sas/mpt3sas_scsih.c:7331) mpt3sas\n\n\t Write of size 8 at addr ffff8881d26e3c60 by task kworker/u1536:2/2965\n\nFor full log, please look at [1].\n\nMake the allocation at least the size of sizeof(unsigned long) so that\nset_bit() and test_bit() have sufficient room for read/write operations\nwithout overwriting unallocated memory.\n\n[1] Link: https://lore.kernel.org/all/ZkNcALr3W3KGYYJG@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: class: cdc-wdm: Fix CPU lockup caused by excessive log messages\n\nThe syzbot fuzzer found that the interrupt-URB completion callback in\nthe cdc-wdm driver was taking too long, and the driver's immediate\nresubmission of interrupt URBs with -EPROTO status combined with the\ndummy-hcd emulation to cause a CPU lockup:\n\ncdc_wdm 1-1:1.0: nonzero urb status received: -71\ncdc_wdm 1-1:1.0: wdm_int_callback - 0 bytes\nwatchdog: BUG: soft lockup - CPU#0 stuck for 26s! [syz-executor782:6625]\nCPU#0 Utilization every 4s during lockup:\n\t#1:  98% system,\t  0% softirq,\t  3% hardirq,\t  0% idle\n\t#2:  98% system,\t  0% softirq,\t  3% hardirq,\t  0% idle\n\t#3:  98% system,\t  0% softirq,\t  3% hardirq,\t  0% idle\n\t#4:  98% system,\t  0% softirq,\t  3% hardirq,\t  0% idle\n\t#5:  98% system,\t  1% softirq,\t  3% hardirq,\t  0% idle\nModules linked in:\nirq event stamp: 73096\nhardirqs last  enabled at (73095): [\u003cffff80008037bc00\u003e] console_emit_next_record kernel/printk/printk.c:2935 [inline]\nhardirqs last  enabled at (73095): [\u003cffff80008037bc00\u003e] console_flush_all+0x650/0xb74 kernel/printk/printk.c:2994\nhardirqs last disabled at (73096): [\u003cffff80008af10b00\u003e] __el1_irq arch/arm64/kernel/entry-common.c:533 [inline]\nhardirqs last disabled at (73096): [\u003cffff80008af10b00\u003e] el1_interrupt+0x24/0x68 arch/arm64/kernel/entry-common.c:551\nsoftirqs last  enabled at (73048): [\u003cffff8000801ea530\u003e] softirq_handle_end kernel/softirq.c:400 [inline]\nsoftirqs last  enabled at (73048): [\u003cffff8000801ea530\u003e] handle_softirqs+0xa60/0xc34 kernel/softirq.c:582\nsoftirqs last disabled at (73043): [\u003cffff800080020de8\u003e] __do_softirq+0x14/0x20 kernel/softirq.c:588\nCPU: 0 PID: 6625 Comm: syz-executor782 Tainted: G        W          6.10.0-rc2-syzkaller-g8867bbd4a056 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\n\nTesting showed that the problem did not occur if the two error\nmessages -- the first two lines above -- were removed; apparently adding\nmaterial to the kernel log takes a surprisingly large amount of time.\n\nIn any case, the best approach for preventing these lockups and to\navoid spamming the log with thousands of error messages per second is\nto ratelimit the two dev_err() calls.  Therefore we replace them with\ndev_err_ratelimited().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40912",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Fix deadlock in ieee80211_sta_ps_deliver_wakeup()\n\nThe ieee80211_sta_ps_deliver_wakeup() function takes sta-\u003eps_lock to\nsynchronizes with ieee80211_tx_h_unicast_ps_buf() which is called from\nsoftirq context. However using only spin_lock() to get sta-\u003eps_lock in\nieee80211_sta_ps_deliver_wakeup() does not prevent softirq to execute\non this same CPU, to run ieee80211_tx_h_unicast_ps_buf() and try to\ntake this same lock ending in deadlock. Below is an example of rcu stall\nthat arises in such situation.\n\n rcu: INFO: rcu_sched self-detected stall on CPU\n rcu:    2-....: (42413413 ticks this GP) idle=b154/1/0x4000000000000000 softirq=1763/1765 fqs=21206996\n rcu:    (t=42586894 jiffies g=2057 q=362405 ncpus=4)\n CPU: 2 PID: 719 Comm: wpa_supplicant Tainted: G        W          6.4.0-02158-g1b062f552873 #742\n Hardware name: RPT (r1) (DT)\n pstate: 00000005 (nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : queued_spin_lock_slowpath+0x58/0x2d0\n lr : invoke_tx_handlers_early+0x5b4/0x5c0\n sp : ffff00001ef64660\n x29: ffff00001ef64660 x28: ffff000009bc1070 x27: ffff000009bc0ad8\n x26: ffff000009bc0900 x25: ffff00001ef647a8 x24: 0000000000000000\n x23: ffff000009bc0900 x22: ffff000009bc0900 x21: ffff00000ac0e000\n x20: ffff00000a279e00 x19: ffff00001ef646e8 x18: 0000000000000000\n x17: ffff800016468000 x16: ffff00001ef608c0 x15: 0010533c93f64f80\n x14: 0010395c9faa3946 x13: 0000000000000000 x12: 00000000fa83b2da\n x11: 000000012edeceea x10: ffff0000010fbe00 x9 : 0000000000895440\n x8 : 000000000010533c x7 : ffff00000ad8b740 x6 : ffff00000c350880\n x5 : 0000000000000007 x4 : 0000000000000001 x3 : 0000000000000000\n x2 : 0000000000000000 x1 : 0000000000000001 x0 : ffff00000ac0e0e8\n Call trace:\n  queued_spin_lock_slowpath+0x58/0x2d0\n  ieee80211_tx+0x80/0x12c\n  ieee80211_tx_pending+0x110/0x278\n  tasklet_action_common.constprop.0+0x10c/0x144\n  tasklet_action+0x20/0x28\n  _stext+0x11c/0x284\n  ____do_softirq+0xc/0x14\n  call_on_irq_stack+0x24/0x34\n  do_softirq_own_stack+0x18/0x20\n  do_softirq+0x74/0x7c\n  __local_bh_enable_ip+0xa0/0xa4\n  _ieee80211_wake_txqs+0x3b0/0x4b8\n  __ieee80211_wake_queue+0x12c/0x168\n  ieee80211_add_pending_skbs+0xec/0x138\n  ieee80211_sta_ps_deliver_wakeup+0x2a4/0x480\n  ieee80211_mps_sta_status_update.part.0+0xd8/0x11c\n  ieee80211_mps_sta_status_update+0x18/0x24\n  sta_apply_parameters+0x3bc/0x4c0\n  ieee80211_change_station+0x1b8/0x2dc\n  nl80211_set_station+0x444/0x49c\n  genl_family_rcv_msg_doit.isra.0+0xa4/0xfc\n  genl_rcv_msg+0x1b0/0x244\n  netlink_rcv_skb+0x38/0x10c\n  genl_rcv+0x34/0x48\n  netlink_unicast+0x254/0x2bc\n  netlink_sendmsg+0x190/0x3b4\n  ____sys_sendmsg+0x1e8/0x218\n  ___sys_sendmsg+0x68/0x8c\n  __sys_sendmsg+0x44/0x84\n  __arm64_sys_sendmsg+0x20/0x28\n  do_el0_svc+0x6c/0xe8\n  el0_svc+0x14/0x48\n  el0t_64_sync_handler+0xb0/0xb4\n  el0t_64_sync+0x14c/0x150\n\nUsing spin_lock_bh()/spin_unlock_bh() instead prevents softirq to raise\non the same CPU that is holding the lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: disable rx data ring on dma allocation failure\n\nWhen vmxnet3_rq_create() fails to allocate memory for rq-\u003edata_ring.base,\nthe subsequent call to vmxnet3_rq_destroy_all_rxdataring does not reset\nrq-\u003edata_ring.desc_size for the data ring that failed, which presumably\ncauses the hypervisor to reference it on packet reception.\n\nTo fix this bug, rq-\u003edata_ring.desc_size needs to be set to 0 to tell\nthe hypervisor to disable this feature.\n\n[   95.436876] kernel BUG at net/core/skbuff.c:207!\n[   95.439074] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[   95.440411] CPU: 7 PID: 0 Comm: swapper/7 Not tainted 6.9.3-dirty #1\n[   95.441558] Hardware name: VMware, Inc. VMware Virtual\nPlatform/440BX Desktop Reference Platform, BIOS 6.00 12/12/2018\n[   95.443481] RIP: 0010:skb_panic+0x4d/0x4f\n[   95.444404] Code: 4f 70 50 8b 87 c0 00 00 00 50 8b 87 bc 00 00 00 50\nff b7 d0 00 00 00 4c 8b 8f c8 00 00 00 48 c7 c7 68 e8 be 9f e8 63 58 f9\nff \u003c0f\u003e 0b 48 8b 14 24 48 c7 c1 d0 73 65 9f e8 a1 ff ff ff 48 8b 14 24\n[   95.447684] RSP: 0018:ffffa13340274dd0 EFLAGS: 00010246\n[   95.448762] RAX: 0000000000000089 RBX: ffff8fbbc72b02d0 RCX: 000000000000083f\n[   95.450148] RDX: 0000000000000000 RSI: 00000000000000f6 RDI: 000000000000083f\n[   95.451520] RBP: 000000000000002d R08: 0000000000000000 R09: ffffa13340274c60\n[   95.452886] R10: ffffffffa04ed468 R11: 0000000000000002 R12: 0000000000000000\n[   95.454293] R13: ffff8fbbdab3c2d0 R14: ffff8fbbdbd829e0 R15: ffff8fbbdbd809e0\n[   95.455682] FS:  0000000000000000(0000) GS:ffff8fbeefd80000(0000) knlGS:0000000000000000\n[   95.457178] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   95.458340] CR2: 00007fd0d1f650c8 CR3: 0000000115f28000 CR4: 00000000000406f0\n[   95.459791] Call Trace:\n[   95.460515]  \u003cIRQ\u003e\n[   95.461180]  ? __die_body.cold+0x19/0x27\n[   95.462150]  ? die+0x2e/0x50\n[   95.462976]  ? do_trap+0xca/0x110\n[   95.463973]  ? do_error_trap+0x6a/0x90\n[   95.464966]  ? skb_panic+0x4d/0x4f\n[   95.465901]  ? exc_invalid_op+0x50/0x70\n[   95.466849]  ? skb_panic+0x4d/0x4f\n[   95.467718]  ? asm_exc_invalid_op+0x1a/0x20\n[   95.468758]  ? skb_panic+0x4d/0x4f\n[   95.469655]  skb_put.cold+0x10/0x10\n[   95.470573]  vmxnet3_rq_rx_complete+0x862/0x11e0 [vmxnet3]\n[   95.471853]  vmxnet3_poll_rx_only+0x36/0xb0 [vmxnet3]\n[   95.473185]  __napi_poll+0x2b/0x160\n[   95.474145]  net_rx_action+0x2c6/0x3b0\n[   95.475115]  handle_softirqs+0xe7/0x2a0\n[   95.476122]  __irq_exit_rcu+0x97/0xb0\n[   95.477109]  common_interrupt+0x85/0xa0\n[   95.478102]  \u003c/IRQ\u003e\n[   95.478846]  \u003cTASK\u003e\n[   95.479603]  asm_common_interrupt+0x26/0x40\n[   95.480657] RIP: 0010:pv_native_safe_halt+0xf/0x20\n[   95.481801] Code: 22 d7 e9 54 87 01 00 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa eb 07 0f 00 2d 93 ba 3b 00 fb f4 \u003ce9\u003e 2c 87 01 00 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90 90\n[   95.485563] RSP: 0018:ffffa133400ffe58 EFLAGS: 00000246\n[   95.486882] RAX: 0000000000004000 RBX: ffff8fbbc1d14064 RCX: 0000000000000000\n[   95.488477] RDX: ffff8fbeefd80000 RSI: ffff8fbbc1d14000 RDI: 0000000000000001\n[   95.490067] RBP: ffff8fbbc1d14064 R08: ffffffffa0652260 R09: 00000000000010d3\n[   95.491683] R10: 0000000000000018 R11: ffff8fbeefdb4764 R12: ffffffffa0652260\n[   95.493389] R13: ffffffffa06522e0 R14: 0000000000000001 R15: 0000000000000000\n[   95.495035]  acpi_safe_halt+0x14/0x20\n[   95.496127]  acpi_idle_do_entry+0x2f/0x50\n[   95.497221]  acpi_idle_enter+0x7f/0xd0\n[   95.498272]  cpuidle_enter_state+0x81/0x420\n[   95.499375]  cpuidle_enter+0x2d/0x40\n[   95.500400]  do_idle+0x1e5/0x240\n[   95.501385]  cpu_startup_entry+0x29/0x30\n[   95.502422]  start_secondary+0x11c/0x140\n[   95.503454]  common_startup_64+0x13e/0x141\n[   95.504466]  \u003c/TASK\u003e\n[   95.505197] Modules linked in: nft_fib_inet nft_fib_ipv4\nnft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6\nnft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ip\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40929",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: check n_ssids before accessing the ssids\n\nIn some versions of cfg80211, the ssids poinet might be a valid one even\nthough n_ssids is 0. Accessing the pointer in this case will cuase an\nout-of-bound access. Fix this by checking n_ssids first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/exynos/vidi: fix memory leak in .get_modes()\n\nThe duplicated EDID is never freed. Fix it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Clear napi-\u003eskb before dev_kfree_skb_any()\n\ngve_rx_free_skb incorrectly leaves napi-\u003eskb referencing an skb after it\nis freed with dev_kfree_skb_any(). This can result in a subsequent call\nto napi_get_frags returning a dangling pointer.\n\nFix this by clearing napi-\u003eskb before the skb is freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40941",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: don't read past the mfuart notifcation\n\nIn case the firmware sends a notification that claims it has more data\nthan it has, we will read past that was allocated for the notification.\nRemove the print of the buffer, we won't see it by default. If needed,\nwe can see the content with tracing.\n\nThis was reported by KFENCE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40942",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: mesh: Fix leak of mesh_preq_queue objects\n\nThe hwmp code use objects of type mesh_preq_queue, added to a list in\nieee80211_if_mesh, to keep track of mpath we need to resolve. If the mpath\ngets deleted, ex mesh interface is removed, the entries in that list will\nnever get cleaned. Fix this by flushing all corresponding items of the\npreq_queue in mesh_path_flush_pending().\n\nThis should take care of KASAN reports like this:\n\nunreferenced object 0xffff00000668d800 (size 128):\n  comm \"kworker/u8:4\", pid 67, jiffies 4295419552 (age 1836.444s)\n  hex dump (first 32 bytes):\n    00 1f 05 09 00 00 ff ff 00 d5 68 06 00 00 ff ff  ..........h.....\n    8e 97 ea eb 3e b8 01 00 00 00 00 00 00 00 00 00  ....\u003e...........\n  backtrace:\n    [\u003c000000007302a0b6\u003e] __kmem_cache_alloc_node+0x1e0/0x35c\n    [\u003c00000000049bd418\u003e] kmalloc_trace+0x34/0x80\n    [\u003c0000000000d792bb\u003e] mesh_queue_preq+0x44/0x2a8\n    [\u003c00000000c99c3696\u003e] mesh_nexthop_resolve+0x198/0x19c\n    [\u003c00000000926bf598\u003e] ieee80211_xmit+0x1d0/0x1f4\n    [\u003c00000000fc8c2284\u003e] __ieee80211_subif_start_xmit+0x30c/0x764\n    [\u003c000000005926ee38\u003e] ieee80211_subif_start_xmit+0x9c/0x7a4\n    [\u003c000000004c86e916\u003e] dev_hard_start_xmit+0x174/0x440\n    [\u003c0000000023495647\u003e] __dev_queue_xmit+0xe24/0x111c\n    [\u003c00000000cfe9ca78\u003e] batadv_send_skb_packet+0x180/0x1e4\n    [\u003c000000007bacc5d5\u003e] batadv_v_elp_periodic_work+0x2f4/0x508\n    [\u003c00000000adc3cd94\u003e] process_one_work+0x4b8/0xa1c\n    [\u003c00000000b36425d1\u003e] worker_thread+0x9c/0x634\n    [\u003c0000000005852dd5\u003e] kthread+0x1bc/0x1c4\n    [\u003c000000005fccd770\u003e] ret_from_fork+0x10/0x20\nunreferenced object 0xffff000009051f00 (size 128):\n  comm \"kworker/u8:4\", pid 67, jiffies 4295419553 (age 1836.440s)\n  hex dump (first 32 bytes):\n    90 d6 92 0d 00 00 ff ff 00 d8 68 06 00 00 ff ff  ..........h.....\n    36 27 92 e4 02 e0 01 00 00 58 79 06 00 00 ff ff  6'.......Xy.....\n  backtrace:\n    [\u003c000000007302a0b6\u003e] __kmem_cache_alloc_node+0x1e0/0x35c\n    [\u003c00000000049bd418\u003e] kmalloc_trace+0x34/0x80\n    [\u003c0000000000d792bb\u003e] mesh_queue_preq+0x44/0x2a8\n    [\u003c00000000c99c3696\u003e] mesh_nexthop_resolve+0x198/0x19c\n    [\u003c00000000926bf598\u003e] ieee80211_xmit+0x1d0/0x1f4\n    [\u003c00000000fc8c2284\u003e] __ieee80211_subif_start_xmit+0x30c/0x764\n    [\u003c000000005926ee38\u003e] ieee80211_subif_start_xmit+0x9c/0x7a4\n    [\u003c000000004c86e916\u003e] dev_hard_start_xmit+0x174/0x440\n    [\u003c0000000023495647\u003e] __dev_queue_xmit+0xe24/0x111c\n    [\u003c00000000cfe9ca78\u003e] batadv_send_skb_packet+0x180/0x1e4\n    [\u003c000000007bacc5d5\u003e] batadv_v_elp_periodic_work+0x2f4/0x508\n    [\u003c00000000adc3cd94\u003e] process_one_work+0x4b8/0xa1c\n    [\u003c00000000b36425d1\u003e] worker_thread+0x9c/0x634\n    [\u003c0000000005852dd5\u003e] kthread+0x1bc/0x1c4\n    [\u003c000000005fccd770\u003e] ret_from_fork+0x10/0x20",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix races between hole punching and AIO+DIO\n\nAfter commit \"ocfs2: return real error code in ocfs2_dio_wr_get_block\",\nfstests/generic/300 become from always failed to sometimes failed:\n\n========================================================================\n[  473.293420 ] run fstests generic/300\n\n[  475.296983 ] JBD2: Ignoring recovery information on journal\n[  475.302473 ] ocfs2: Mounting device (253,1) on (node local, slot 0) with ordered data mode.\n[  494.290998 ] OCFS2: ERROR (device dm-1): ocfs2_change_extent_flag: Owner 5668 has an extent at cpos 78723 which can no longer be found\n[  494.291609 ] On-disk corruption discovered. Please run fsck.ocfs2 once the filesystem is unmounted.\n[  494.292018 ] OCFS2: File system is now read-only.\n[  494.292224 ] (kworker/19:11,2628,19):ocfs2_mark_extent_written:5272 ERROR: status = -30\n[  494.292602 ] (kworker/19:11,2628,19):ocfs2_dio_end_io_write:2374 ERROR: status = -3\nfio: io_u error on file /mnt/scratch/racer: Read-only file system: write offset=460849152, buflen=131072\n=========================================================================\n\nIn __blockdev_direct_IO, ocfs2_dio_wr_get_block is called to add unwritten\nextents to a list.  extents are also inserted into extent tree in\nocfs2_write_begin_nolock.  Then another thread call fallocate to puch a\nhole at one of the unwritten extent.  The extent at cpos was removed by\nocfs2_remove_extent().  At end io worker thread, ocfs2_search_extent_list\nfound there is no such extent at the cpos.\n\n    T1                        T2                T3\n                              inode lock\n                                ...\n                                insert extents\n                                ...\n                              inode unlock\nocfs2_fallocate\n __ocfs2_change_file_space\n  inode lock\n  lock ip_alloc_sem\n  ocfs2_remove_inode_range inode\n   ocfs2_remove_btree_range\n    ocfs2_remove_extent\n    ^---remove the extent at cpos 78723\n  ...\n  unlock ip_alloc_sem\n  inode unlock\n                                       ocfs2_dio_end_io\n                                        ocfs2_dio_end_io_write\n                                         lock ip_alloc_sem\n                                         ocfs2_mark_extent_written\n                                          ocfs2_change_extent_flag\n                                           ocfs2_search_extent_list\n                                           ^---failed to find extent\n                                          ...\n                                          unlock ip_alloc_sem\n\nIn most filesystems, fallocate is not compatible with racing with AIO+DIO,\nso fix it by adding to wait for all dio before fallocate/punch_hole like\next4.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40953",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Fix a data race on last_boosted_vcpu in kvm_vcpu_on_spin()\n\nUse {READ,WRITE}_ONCE() to access kvm-\u003elast_boosted_vcpu to ensure the\nloads and stores are atomic.  In the extremely unlikely scenario the\ncompiler tears the stores, it's theoretically possible for KVM to attempt\nto get a vCPU using an out-of-bounds index, e.g. if the write is split\ninto multiple 8-bit stores, and is paired with a 32-bit load on a VM with\n257 vCPUs:\n\n  CPU0                              CPU1\n  last_boosted_vcpu = 0xff;\n\n                                    (last_boosted_vcpu = 0x100)\n                                    last_boosted_vcpu[15:8] = 0x01;\n  i = (last_boosted_vcpu = 0x1ff)\n                                    last_boosted_vcpu[7:0] = 0x00;\n\n  vcpu = kvm-\u003evcpu_array[0x1ff];\n\nAs detected by KCSAN:\n\n  BUG: KCSAN: data-race in kvm_vcpu_on_spin [kvm] / kvm_vcpu_on_spin [kvm]\n\n  write to 0xffffc90025a92344 of 4 bytes by task 4340 on cpu 16:\n  kvm_vcpu_on_spin (arch/x86/kvm/../../../virt/kvm/kvm_main.c:4112) kvm\n  handle_pause (arch/x86/kvm/vmx/vmx.c:5929) kvm_intel\n  vmx_handle_exit (arch/x86/kvm/vmx/vmx.c:?\n\t\t arch/x86/kvm/vmx/vmx.c:6606) kvm_intel\n  vcpu_run (arch/x86/kvm/x86.c:11107 arch/x86/kvm/x86.c:11211) kvm\n  kvm_arch_vcpu_ioctl_run (arch/x86/kvm/x86.c:?) kvm\n  kvm_vcpu_ioctl (arch/x86/kvm/../../../virt/kvm/kvm_main.c:?) kvm\n  __se_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:904 fs/ioctl.c:890)\n  __x64_sys_ioctl (fs/ioctl.c:890)\n  x64_sys_call (arch/x86/entry/syscall_64.c:33)\n  do_syscall_64 (arch/x86/entry/common.c:?)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n  read to 0xffffc90025a92344 of 4 bytes by task 4342 on cpu 4:\n  kvm_vcpu_on_spin (arch/x86/kvm/../../../virt/kvm/kvm_main.c:4069) kvm\n  handle_pause (arch/x86/kvm/vmx/vmx.c:5929) kvm_intel\n  vmx_handle_exit (arch/x86/kvm/vmx/vmx.c:?\n\t\t\tarch/x86/kvm/vmx/vmx.c:6606) kvm_intel\n  vcpu_run (arch/x86/kvm/x86.c:11107 arch/x86/kvm/x86.c:11211) kvm\n  kvm_arch_vcpu_ioctl_run (arch/x86/kvm/x86.c:?) kvm\n  kvm_vcpu_ioctl (arch/x86/kvm/../../../virt/kvm/kvm_main.c:?) kvm\n  __se_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:904 fs/ioctl.c:890)\n  __x64_sys_ioctl (fs/ioctl.c:890)\n  x64_sys_call (arch/x86/entry/syscall_64.c:33)\n  do_syscall_64 (arch/x86/entry/common.c:?)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n  value changed: 0x00000012 -\u003e 0x00000000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm6: check ip6_dst_idev() return value in xfrm6_get_saddr()\n\nip6_dst_idev() can return NULL, xfrm6_get_saddr() must act accordingly.\n\nsyzbot reported:\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 1 PID: 12 Comm: kworker/u8:1 Not tainted 6.10.0-rc2-syzkaller-00383-gb8481381d4e2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\nWorkqueue: wg-kex-wg1 wg_packet_handshake_send_worker\n RIP: 0010:xfrm6_get_saddr+0x93/0x130 net/ipv6/xfrm6_policy.c:64\nCode: df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 97 00 00 00 4c 8b ab d8 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 ea 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 86 00 00 00 4d 8b 6d 00 e8 ca 13 47 01 48 b8 00\nRSP: 0018:ffffc90000117378 EFLAGS: 00010246\nRAX: dffffc0000000000 RBX: ffff88807b079dc0 RCX: ffffffff89a0d6d7\nRDX: 0000000000000000 RSI: ffffffff89a0d6e9 RDI: ffff88807b079e98\nRBP: ffff88807ad73248 R08: 0000000000000007 R09: fffffffffffff000\nR10: ffff88807b079dc0 R11: 0000000000000007 R12: ffffc90000117480\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f4586d00440 CR3: 0000000079042000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  xfrm_get_saddr net/xfrm/xfrm_policy.c:2452 [inline]\n  xfrm_tmpl_resolve_one net/xfrm/xfrm_policy.c:2481 [inline]\n  xfrm_tmpl_resolve+0xa26/0xf10 net/xfrm/xfrm_policy.c:2541\n  xfrm_resolve_and_create_bundle+0x140/0x2570 net/xfrm/xfrm_policy.c:2835\n  xfrm_bundle_lookup net/xfrm/xfrm_policy.c:3070 [inline]\n  xfrm_lookup_with_ifid+0x4d1/0x1e60 net/xfrm/xfrm_policy.c:3201\n  xfrm_lookup net/xfrm/xfrm_policy.c:3298 [inline]\n  xfrm_lookup_route+0x3b/0x200 net/xfrm/xfrm_policy.c:3309\n  ip6_dst_lookup_flow+0x15c/0x1d0 net/ipv6/ip6_output.c:1256\n  send6+0x611/0xd20 drivers/net/wireguard/socket.c:139\n  wg_socket_send_skb_to_peer+0xf9/0x220 drivers/net/wireguard/socket.c:178\n  wg_socket_send_buffer_to_peer+0x12b/0x190 drivers/net/wireguard/socket.c:200\n  wg_packet_send_handshake_initiation+0x227/0x360 drivers/net/wireguard/send.c:40\n  wg_packet_handshake_send_worker+0x1c/0x30 drivers/net/wireguard/send.c:51\n  process_one_work+0x9fb/0x1b60 kernel/workqueue.c:3231\n  process_scheduled_works kernel/workqueue.c:3312 [inline]\n  worker_thread+0x6c8/0xf70 kernel/workqueue.c:3393\n  kthread+0x2c1/0x3a0 kernel/kthread.c:389\n  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147\n  ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: add the option to have a tty reject a new ldisc\n\n... and use it to limit the virtual terminals to just N_TTY.  They are\nkind of special, and in particular, the \"con_write()\" routine violates\nthe \"writes cannot sleep\" rule that some ldiscs rely on.\n\nThis avoids the\n\n   BUG: sleeping function called from invalid context at kernel/printk/printk.c:2659\n\nwhen N_GSM has been attached to a virtual console, and gsmld_write()\ncalls con_write() while holding a spinlock, and con_write() then tries\nto get the console lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40967",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: imx: Introduce timeout when waiting on transmitter empty\n\nBy waiting at most 1 second for USR2_TXDC to be set, we avoid a potential\ndeadlock.\n\nIn case of the timeout, there is not much we can do, so we simply ignore\nthe transmitter state and optimistically try to continue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mtk-vcodec: potential null pointer deference in SCP\n\nThe return value of devm_kzalloc() needs to be checked to avoid\nNULL pointer deference. This is similar to CVE-2022-3113.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedi: Fix crash while reading debugfs attribute\n\nThe qedi_dbg_do_not_recover_cmd_read() function invokes sprintf() directly\non a __user pointer, which results into the crash.\n\nTo fix this issue, use a small local stack buffer for sprintf() and then\ncall simple_read_from_buffer(), which in turns make the copy_to_user()\ncall.\n\nBUG: unable to handle page fault for address: 00007f4801111000\nPGD 8000000864df6067 P4D 8000000864df6067 PUD 864df7067 PMD 846028067 PTE 0\nOops: 0002 [#1] PREEMPT SMP PTI\nHardware name: HPE ProLiant DL380 Gen10/ProLiant DL380 Gen10, BIOS U30 06/15/2023\nRIP: 0010:memcpy_orig+0xcd/0x130\nRSP: 0018:ffffb7a18c3ffc40 EFLAGS: 00010202\nRAX: 00007f4801111000 RBX: 00007f4801111000 RCX: 000000000000000f\nRDX: 000000000000000f RSI: ffffffffc0bfd7a0 RDI: 00007f4801111000\nRBP: ffffffffc0bfd7a0 R08: 725f746f6e5f6f64 R09: 3d7265766f636572\nR10: ffffb7a18c3ffd08 R11: 0000000000000000 R12: 00007f4881110fff\nR13: 000000007fffffff R14: ffffb7a18c3ffca0 R15: ffffffffc0bfd7af\nFS:  00007f480118a740(0000) GS:ffff98e38af00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f4801111000 CR3: 0000000864b8e001 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __die_body+0x1a/0x60\n ? page_fault_oops+0x183/0x510\n ? exc_page_fault+0x69/0x150\n ? asm_exc_page_fault+0x22/0x30\n ? memcpy_orig+0xcd/0x130\n vsnprintf+0x102/0x4c0\n sprintf+0x51/0x80\n qedi_dbg_do_not_recover_cmd_read+0x2f/0x50 [qedi 6bcfdeeecdea037da47069eca2ba717c84a77324]\n full_proxy_read+0x50/0x80\n vfs_read+0xa5/0x2e0\n ? folio_add_new_anon_rmap+0x44/0xa0\n ? set_pte_at+0x15/0x30\n ? do_pte_missing+0x426/0x7f0\n ksys_read+0xa5/0xe0\n do_syscall_64+0x58/0x80\n ? __count_memcg_events+0x46/0x90\n ? count_memcg_event_mm+0x3d/0x60\n ? handle_mm_fault+0x196/0x2f0\n ? do_user_addr_fault+0x267/0x890\n ? exc_page_fault+0x69/0x150\n entry_SYSCALL_64_after_hwframe+0x72/0xdc\nRIP: 0033:0x7f4800f20b4d",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40982",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPICA: Revert \"ACPICA: avoid Info: mapping multiple BARs. Your kernel is fine.\"\n\nUndo the modifications made in commit d410ee5109a1 (\"ACPICA: avoid\n\"Info: mapping multiple BARs. Your kernel is fine.\"\"). The initial\npurpose of this commit was to stop memory mappings for operation\nregions from overlapping page boundaries, as it can trigger warnings\nif different page attributes are present.\n\nHowever, it was found that when this situation arises, mapping\ncontinues until the boundary's end, but there is still an attempt to\nread/write the entire length of the map, leading to a NULL pointer\ndeference. For example, if a four-byte mapping request is made but\nonly one byte is mapped because it hits the current page boundary's\nend, a four-byte read/write attempt is still made, resulting in a NULL\npointer deference.\n\nInstead, map the entire length, as the ACPI specification does not\nmandate that it must be within the same page boundary. It is\npermissible for it to be mapped across different regions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40987",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix UBSAN warning in kv_dpm.c\n\nAdds bounds check for sumo_vid_mapping_entry.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40988",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: fix UBSAN warning in kv_dpm.c\n\nAdds bounds check for sumo_vid_mapping_entry.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Add check for srq max_sge attribute\n\nmax_sge attribute is passed by the user, and is inserted and used\nunchecked, so verify that the value doesn't exceed maximum allowed value\nbefore using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_api: fix possible infinite loop in tcf_idr_check_alloc()\n\nsyzbot found hanging tasks waiting on rtnl_lock [1]\n\nA reproducer is available in the syzbot bug.\n\nWhen a request to add multiple actions with the same index is sent, the\nsecond request will block forever on the first request. This holds\nrtnl_lock, and causes tasks to hang.\n\nReturn -EAGAIN to prevent infinite looping, while keeping documented\nbehavior.\n\n[1]\n\nINFO: task kworker/1:0:5088 blocked for more than 143 seconds.\nNot tainted 6.9.0-rc4-syzkaller-00173-g3cdb45594619 #0\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:kworker/1:0 state:D stack:23744 pid:5088 tgid:5088 ppid:2 flags:0x00004000\nWorkqueue: events_power_efficient reg_check_chans_work\nCall Trace:\n\u003cTASK\u003e\ncontext_switch kernel/sched/core.c:5409 [inline]\n__schedule+0xf15/0x5d00 kernel/sched/core.c:6746\n__schedule_loop kernel/sched/core.c:6823 [inline]\nschedule+0xe7/0x350 kernel/sched/core.c:6838\nschedule_preempt_disabled+0x13/0x30 kernel/sched/core.c:6895\n__mutex_lock_common kernel/locking/mutex.c:684 [inline]\n__mutex_lock+0x5b8/0x9c0 kernel/locking/mutex.c:752\nwiphy_lock include/net/cfg80211.h:5953 [inline]\nreg_leave_invalid_chans net/wireless/reg.c:2466 [inline]\nreg_check_chans_work+0x10a/0x10e0 net/wireless/reg.c:2481",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix uninitialized ratelimit_state-\u003elock access in __ext4_fill_super()\n\nIn the following concurrency we will access the uninitialized rs-\u003elock:\n\next4_fill_super\n  ext4_register_sysfs\n   // sysfs registered msg_ratelimit_interval_ms\n                             // Other processes modify rs-\u003einterval to\n                             // non-zero via msg_ratelimit_interval_ms\n  ext4_orphan_cleanup\n    ext4_msg(sb, KERN_INFO, \"Errors on filesystem, \"\n      __ext4_msg\n        ___ratelimit(\u0026(EXT4_SB(sb)-\u003es_msg_ratelimit_state)\n          if (!rs-\u003einterval)  // do nothing if interval is 0\n            return 1;\n          raw_spin_trylock_irqsave(\u0026rs-\u003elock, flags)\n            raw_spin_trylock(lock)\n              _raw_spin_trylock\n                __raw_spin_trylock\n                  spin_acquire(\u0026lock-\u003edep_map, 0, 1, _RET_IP_)\n                    lock_acquire\n                      __lock_acquire\n                        register_lock_class\n                          assign_lock_key\n                            dump_stack();\n  ratelimit_state_init(\u0026sbi-\u003es_msg_ratelimit_state, 5 * HZ, 10);\n    raw_spin_lock_init(\u0026rs-\u003elock);\n    // init rs-\u003elock here\n\nand get the following dump_stack:\n\n=========================================================\nINFO: trying to register non-static key.\nThe code is fine but needs lockdep annotation, or maybe\nyou didn't initialize this object before use?\nturning off the locking correctness validator.\nCPU: 12 PID: 753 Comm: mount Tainted: G E 6.7.0-rc6-next-20231222 #504\n[...]\nCall Trace:\n dump_stack_lvl+0xc5/0x170\n dump_stack+0x18/0x30\n register_lock_class+0x740/0x7c0\n __lock_acquire+0x69/0x13a0\n lock_acquire+0x120/0x450\n _raw_spin_trylock+0x98/0xd0\n ___ratelimit+0xf6/0x220\n __ext4_msg+0x7f/0x160 [ext4]\n ext4_orphan_cleanup+0x665/0x740 [ext4]\n __ext4_fill_super+0x21ea/0x2b10 [ext4]\n ext4_fill_super+0x14d/0x360 [ext4]\n[...]\n=========================================================\n\nNormally interval is 0 until s_msg_ratelimit_state is initialized, so\n___ratelimit() does nothing. But registering sysfs precedes initializing\nrs-\u003elock, so it is possible to change rs-\u003einterval to a non-zero value\nvia the msg_ratelimit_interval_ms interface of sysfs while rs-\u003elock is\nuninitialized, and then a call to ext4_msg triggers the problem by\naccessing an uninitialized rs-\u003elock. Therefore register sysfs after all\ninitializations are complete to avoid such problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Add validation for completion descriptors consistency\n\nValidate that `first` flag is set only for the first\ndescriptor in multi-buffer packets.\nIn case of an invalid descriptor, a reset will occur.\nA new reset reason for RX data corruption has been added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41000",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock/ioctl: prefer different overflow check\n\nRunning syzkaller with the newly reintroduced signed integer overflow\nsanitizer shows this report:\n\n[   62.982337] ------------[ cut here ]------------\n[   62.985692] cgroup: Invalid name\n[   62.986211] UBSAN: signed-integer-overflow in ../block/ioctl.c:36:46\n[   62.989370] 9pnet_fd: p9_fd_create_tcp (7343): problem connecting socket to 127.0.0.1\n[   62.992992] 9223372036854775807 + 4095 cannot be represented in type 'long long'\n[   62.997827] 9pnet_fd: p9_fd_create_tcp (7345): problem connecting socket to 127.0.0.1\n[   62.999369] random: crng reseeded on system resumption\n[   63.000634] GUP no longer grows the stack in syz-executor.2 (7353): 20002000-20003000 (20001000)\n[   63.000668] CPU: 0 PID: 7353 Comm: syz-executor.2 Not tainted 6.8.0-rc2-00035-gb3ef86b5a957 #1\n[   63.000677] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[   63.000682] Call Trace:\n[   63.000686]  \u003cTASK\u003e\n[   63.000731]  dump_stack_lvl+0x93/0xd0\n[   63.000919]  __get_user_pages+0x903/0xd30\n[   63.001030]  __gup_longterm_locked+0x153e/0x1ba0\n[   63.001041]  ? _raw_read_unlock_irqrestore+0x17/0x50\n[   63.001072]  ? try_get_folio+0x29c/0x2d0\n[   63.001083]  internal_get_user_pages_fast+0x1119/0x1530\n[   63.001109]  iov_iter_extract_pages+0x23b/0x580\n[   63.001206]  bio_iov_iter_get_pages+0x4de/0x1220\n[   63.001235]  iomap_dio_bio_iter+0x9b6/0x1410\n[   63.001297]  __iomap_dio_rw+0xab4/0x1810\n[   63.001316]  iomap_dio_rw+0x45/0xa0\n[   63.001328]  ext4_file_write_iter+0xdde/0x1390\n[   63.001372]  vfs_write+0x599/0xbd0\n[   63.001394]  ksys_write+0xc8/0x190\n[   63.001403]  do_syscall_64+0xd4/0x1b0\n[   63.001421]  ? arch_exit_to_user_mode_prepare+0x3a/0x60\n[   63.001479]  entry_SYSCALL_64_after_hwframe+0x6f/0x77\n[   63.001535] RIP: 0033:0x7f7fd3ebf539\n[   63.001551] Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 14 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\n[   63.001562] RSP: 002b:00007f7fd32570c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[   63.001584] RAX: ffffffffffffffda RBX: 00007f7fd3ff3f80 RCX: 00007f7fd3ebf539\n[   63.001590] RDX: 4db6d1e4f7e43360 RSI: 0000000020000000 RDI: 0000000000000004\n[   63.001595] RBP: 00007f7fd3f1e496 R08: 0000000000000000 R09: 0000000000000000\n[   63.001599] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\n[   63.001604] R13: 0000000000000006 R14: 00007f7fd3ff3f80 R15: 00007ffd415ad2b8\n...\n[   63.018142] ---[ end trace ]---\n\nHistorically, the signed integer overflow sanitizer did not work in the\nkernel due to its interaction with `-fwrapv` but this has since been\nchanged [1] in the newest version of Clang; It was re-enabled in the\nkernel with Commit 557f8c582a9ba8ab (\"ubsan: Reintroduce signed overflow\nsanitizer\").\n\nLet's rework this overflow checking logic to not actually perform an\noverflow during the check itself, thus avoiding the UBSAN splat.\n\n[1]: https://github.com/llvm/llvm-project/pull/82432",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41012",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfilelock: Remove locks reliably when fcntl/close race is detected\n\nWhen fcntl_setlk() races with close(), it removes the created lock with\ndo_lock_file_wait().\nHowever, LSMs can allow the first do_lock_file_wait() that created the lock\nwhile denying the second do_lock_file_wait() that tries to remove the lock.\nSeparately, posix_lock_file() could also fail to\nremove a lock due to GFP_KERNEL allocation failure (when splitting a range\nin the middle).\n\nAfter the bug has been triggered, use-after-free reads will occur in\nlock_get_status() when userspace reads /proc/locks. This can likely be used\nto read arbitrary kernel memory, but can't corrupt kernel memory.\n\nFix it by calling locks_remove_posix() instead, which is designed to\nreliably get rid of POSIX locks associated with the given file and\nfiles_struct and is also used by filp_flush().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: add bounds checking to xlog_recover_process_data\n\nThere is a lack of verification of the space occupied by fixed members\nof xlog_op_header in the xlog_recover_process_data.\n\nWe can create a crafted image to trigger an out of bounds read by\nfollowing these steps:\n    1) Mount an image of xfs, and do some file operations to leave records\n    2) Before umounting, copy the image for subsequent steps to simulate\n       abnormal exit. Because umount will ensure that tail_blk and\n       head_blk are the same, which will result in the inability to enter\n       xlog_recover_process_data\n    3) Write a tool to parse and modify the copied image in step 2\n    4) Make the end of the xlog_op_header entries only 1 byte away from\n       xlog_rec_header-\u003eh_size\n    5) xlog_rec_header-\u003eh_num_logops++\n    6) Modify xlog_rec_header-\u003eh_crc\n\nFix:\nAdd a check to make sure there is sufficient space to access fixed members\nof xlog_op_header.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: add bounds checking to ocfs2_check_dir_entry()\n\nThis adds sanity checks for ocfs2_dir_entry to make sure all members of\nocfs2_dir_entry don't stray beyond valid memory region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: strict bound check before memcmp in ocfs2_xattr_find_entry()\n\nxattr in ocfs2 maybe 'non-indexed', which saved with additional space\nrequested.  It's better to check if the memory is out of bound before\nmemcmp, although this possibility mainly comes from crafted poisonous\nimages.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfilelock: Fix fcntl/close race recovery compat path\n\nWhen I wrote commit 3cad1bc01041 (\"filelock: Remove locks reliably when\nfcntl/close race is detected\"), I missed that there are two copies of the\ncode I was patching: The normal version, and the version for 64-bit offsets\non 32-bit kernels.\nThanks to Greg KH for stumbling over this while doing the stable\nbackport...\n\nApply exactly the same fix to the compat path for 32-bit kernels.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41035",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix duplicate endpoint bug by clearing reserved bits in the descriptor\n\nSyzbot has identified a bug in usbcore (see the Closes: tag below)\ncaused by our assumption that the reserved bits in an endpoint\ndescriptor's bEndpointAddress field will always be 0.  As a result of\nthe bug, the endpoint_is_duplicate() routine in config.c (and possibly\nother routines as well) may believe that two descriptors are for\ndistinct endpoints, even though they have the same direction and\nendpoint number.  This can lead to confusion, including the bug\nidentified by syzbot (two descriptors with matching endpoint numbers\nand directions, where one was interrupt and the other was bulk).\n\nTo fix the bug, we will clear the reserved bits in bEndpointAddress\nwhen we parse the descriptor.  (Note that both the USB-2.0 and USB-3.1\nspecs say these bits are \"Reserved, reset to zero\".)  This requires us\nto make a copy of the descriptor earlier in usb_parse_endpoint() and\nuse the copy instead of the original when checking for duplicates.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41044",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nppp: reject claimed-as-LCP but actually malformed packets\n\nSince 'ppp_async_encode()' assumes valid LCP packets (with code\nfrom 1 to 7 inclusive), add 'ppp_check_packet()' to ensure that\nLCP packet has an actual body beyond PPP_LCP header bytes, and\nreject claimed-as-LCP but actually malformed data otherwise.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41048",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nskmsg: Skip zero length skb in sk_msg_recvmsg\n\nWhen running BPF selftests (./test_progs -t sockmap_basic) on a Loongarch\nplatform, the following kernel panic occurs:\n\n  [...]\n  Oops[#1]:\n  CPU: 22 PID: 2824 Comm: test_progs Tainted: G           OE  6.10.0-rc2+ #18\n  Hardware name: LOONGSON Dabieshan/Loongson-TC542F0, BIOS Loongson-UDK2018\n     ... ...\n     ra: 90000000048bf6c0 sk_msg_recvmsg+0x120/0x560\n    ERA: 9000000004162774 copy_page_to_iter+0x74/0x1c0\n   CRMD: 000000b0 (PLV0 -IE -DA +PG DACF=CC DACM=CC -WE)\n   PRMD: 0000000c (PPLV0 +PIE +PWE)\n   EUEN: 00000007 (+FPE +SXE +ASXE -BTE)\n   ECFG: 00071c1d (LIE=0,2-4,10-12 VS=7)\n  ESTAT: 00010000 [PIL] (IS= ECode=1 EsubCode=0)\n   BADV: 0000000000000040\n   PRID: 0014c011 (Loongson-64bit, Loongson-3C5000)\n  Modules linked in: bpf_testmod(OE) xt_CHECKSUM xt_MASQUERADE xt_conntrack\n  Process test_progs (pid: 2824, threadinfo=0000000000863a31, task=...)\n  Stack : ...\n  Call Trace:\n  [\u003c9000000004162774\u003e] copy_page_to_iter+0x74/0x1c0\n  [\u003c90000000048bf6c0\u003e] sk_msg_recvmsg+0x120/0x560\n  [\u003c90000000049f2b90\u003e] tcp_bpf_recvmsg_parser+0x170/0x4e0\n  [\u003c90000000049aae34\u003e] inet_recvmsg+0x54/0x100\n  [\u003c900000000481ad5c\u003e] sock_recvmsg+0x7c/0xe0\n  [\u003c900000000481e1a8\u003e] __sys_recvfrom+0x108/0x1c0\n  [\u003c900000000481e27c\u003e] sys_recvfrom+0x1c/0x40\n  [\u003c9000000004c076ec\u003e] do_syscall+0x8c/0xc0\n  [\u003c9000000003731da4\u003e] handle_syscall+0xc4/0x160\n  Code: ...\n  ---[ end trace 0000000000000000 ]---\n  Kernel panic - not syncing: Fatal exception\n  Kernel relocated by 0x3510000\n   .text @ 0x9000000003710000\n   .data @ 0x9000000004d70000\n   .bss  @ 0x9000000006469400\n  ---[ end Kernel panic - not syncing: Fatal exception ]---\n  [...]\n\nThis crash happens every time when running sockmap_skb_verdict_shutdown\nsubtest in sockmap_basic.\n\nThis crash is because a NULL pointer is passed to page_address() in the\nsk_msg_recvmsg(). Due to the different implementations depending on the\narchitecture, page_address(NULL) will trigger a panic on Loongarch\nplatform but not on x86 platform. So this bug was hidden on x86 platform\nfor a while, but now it is exposed on Loongarch platform. The root cause\nis that a zero length skb (skb-\u003elen == 0) was put on the queue.\n\nThis zero length skb is a TCP FIN packet, which was sent by shutdown(),\ninvoked in test_sockmap_skb_verdict_shutdown():\n\n\tshutdown(p1, SHUT_WR);\n\nIn this case, in sk_psock_skb_ingress_enqueue(), num_sge is zero, and no\npage is put to this sge (see sg_set_page in sg_set_page), but this empty\nsge is queued into ingress_msg list.\n\nAnd in sk_msg_recvmsg(), this empty sge is used, and a NULL page is got by\nsg_page(sge). Pass this NULL page to copy_page_to_iter(), which passes it\nto kmap_local_page() and to page_address(), then kernel panics.\n\nTo solve this, we should skip this zero length skb. So in sk_msg_recvmsg(),\nif copy is zero, that means it's a zero length skb, skip invoking\ncopy_page_to_iter(). We are using the EFAULT return triggered by\ncopy_page_to_iter to check for is_fin in tcp_bpf.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhfsplus: fix uninit-value in copy_name\n\n[syzbot reported]\nBUG: KMSAN: uninit-value in sized_strscpy+0xc4/0x160\n sized_strscpy+0xc4/0x160\n copy_name+0x2af/0x320 fs/hfsplus/xattr.c:411\n hfsplus_listxattr+0x11e9/0x1a50 fs/hfsplus/xattr.c:750\n vfs_listxattr fs/xattr.c:493 [inline]\n listxattr+0x1f3/0x6b0 fs/xattr.c:840\n path_listxattr fs/xattr.c:864 [inline]\n __do_sys_listxattr fs/xattr.c:876 [inline]\n __se_sys_listxattr fs/xattr.c:873 [inline]\n __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873\n x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:3877 [inline]\n slab_alloc_node mm/slub.c:3918 [inline]\n kmalloc_trace+0x57b/0xbe0 mm/slub.c:4065\n kmalloc include/linux/slab.h:628 [inline]\n hfsplus_listxattr+0x4cc/0x1a50 fs/hfsplus/xattr.c:699\n vfs_listxattr fs/xattr.c:493 [inline]\n listxattr+0x1f3/0x6b0 fs/xattr.c:840\n path_listxattr fs/xattr.c:864 [inline]\n __do_sys_listxattr fs/xattr.c:876 [inline]\n __se_sys_listxattr fs/xattr.c:873 [inline]\n __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873\n x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[Fix]\nWhen allocating memory to strbuf, initialize memory to 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: check bo_va-\u003ebo is non-NULL before using it\n\nThe call to radeon_vm_clear_freed might clear bo_va-\u003ebo, so\nwe have to check it before dereferencing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbluetooth/l2cap: sync sock recv cb and release\n\nThe problem occurs between the system call to close the sock and hci_rx_work,\nwhere the former releases the sock and the latter accesses it without lock protection.\n\n           CPU0                       CPU1\n           ----                       ----\n           sock_close                 hci_rx_work\n\t   l2cap_sock_release         hci_acldata_packet\n\t   l2cap_sock_kill            l2cap_recv_frame\n\t   sk_free                    l2cap_conless_channel\n\t                              l2cap_sock_recv_cb\n\nIf hci_rx_work processes the data that needs to be received before the sock is\nclosed, then everything is normal; Otherwise, the work thread may access the\nreleased sock when receiving data.\n\nAdd a chan mutex in the rx callback of the sock to achieve synchronization between\nthe sock release and recv cb.\n\nSock is dead, so set chan data to NULL, avoid others use invalid sock pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41063",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_core: cancel all works upon hci_unregister_dev()\n\nsyzbot is reporting that calling hci_release_dev() from hci_error_reset()\ndue to hci_dev_put() from hci_error_reset() can cause deadlock at\ndestroy_workqueue(), for hci_error_reset() is called from\nhdev-\u003ereq_workqueue which destroy_workqueue() needs to flush.\n\nWe need to make sure that hdev-\u003e{rx_work,cmd_work,tx_work} which are\nqueued into hdev-\u003eworkqueue and hdev-\u003e{power_on,error_reset} which are\nqueued into hdev-\u003ereq_workqueue are no longer running by the moment\n\n       destroy_workqueue(hdev-\u003eworkqueue);\n       destroy_workqueue(hdev-\u003ereq_workqueue);\n\nare called from hci_release_dev().\n\nCall cancel_work_sync() on these work items from hci_unregister_dev()\nas soon as hdev-\u003elist is removed from hci_dev_list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41064",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/eeh: avoid possible crash when edev-\u003epdev changes\n\nIf a PCI device is removed during eeh_pe_report_edev(), edev-\u003epdev\nwill change and can cause a crash, hold the PCI rescan/remove lock\nwhile taking a copy of edev-\u003epdev-\u003ebus.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41066",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: Add tx check to prevent skb leak\n\nBelow is a summary of how the driver stores a reference to an skb during\ntransmit:\n    tx_buff[free_map[consumer_index]]-\u003eskb = new_skb;\n    free_map[consumer_index] = IBMVNIC_INVALID_MAP;\n    consumer_index ++;\nWhere variable data looks like this:\n    free_map == [4, IBMVNIC_INVALID_MAP, IBMVNIC_INVALID_MAP, 0, 3]\n                                               \tconsumer_index^\n    tx_buff == [skb=null, skb=\u003cptr\u003e, skb=\u003cptr\u003e, skb=null, skb=null]\n\nThe driver has checks to ensure that free_map[consumer_index] pointed to\na valid index but there was no check to ensure that this index pointed\nto an unused/null skb address. So, if, by some chance, our free_map and\ntx_buff lists become out of sync then we were previously risking an\nskb memory leak. This could then cause tcp congestion control to stop\nsending packets, eventually leading to ETIMEDOUT.\n\nTherefore, add a conditional to ensure that the skb address is null. If\nnot then warn the user (because this is still a bug that should be\npatched) and free the old pointer to prevent memleak/tcp problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/sclp: Fix sclp_init() cleanup on failure\n\nIf sclp_init() fails it only partially cleans up: if there are multiple\nfailing calls to sclp_init() sclp_state_change_event will be added several\ntimes to sclp_reg_list, which results in the following warning:\n\n------------[ cut here ]------------\nlist_add double add: new=000003ffe1598c10, prev=000003ffe1598bf0, next=000003ffe1598c10.\nWARNING: CPU: 0 PID: 1 at lib/list_debug.c:35 __list_add_valid_or_report+0xde/0xf8\nCPU: 0 PID: 1 Comm: swapper/0 Not tainted 6.10.0-rc3\nKrnl PSW : 0404c00180000000 000003ffe0d6076a (__list_add_valid_or_report+0xe2/0xf8)\n           R:0 T:1 IO:0 EX:0 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 RI:0 EA:3\n...\nCall Trace:\n [\u003c000003ffe0d6076a\u003e] __list_add_valid_or_report+0xe2/0xf8\n([\u003c000003ffe0d60766\u003e] __list_add_valid_or_report+0xde/0xf8)\n [\u003c000003ffe0a8d37e\u003e] sclp_init+0x40e/0x450\n [\u003c000003ffe00009f2\u003e] do_one_initcall+0x42/0x1e0\n [\u003c000003ffe15b77a6\u003e] do_initcalls+0x126/0x150\n [\u003c000003ffe15b7a0a\u003e] kernel_init_freeable+0x1ba/0x1f8\n [\u003c000003ffe0d6650e\u003e] kernel_init+0x2e/0x180\n [\u003c000003ffe000301c\u003e] __ret_from_fork+0x3c/0x60\n [\u003c000003ffe0d759ca\u003e] ret_from_fork+0xa/0x30\n\nFix this by removing sclp_state_change_event from sclp_reg_list when\nsclp_init() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41070",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: PPC: Book3S HV: Prevent UAF in kvm_spapr_tce_attach_iommu_group()\n\nAl reported a possible use-after-free (UAF) in kvm_spapr_tce_attach_iommu_group().\n\nIt looks up `stt` from tablefd, but then continues to use it after doing\nfdput() on the returned fd. After the fdput() the tablefd is free to be\nclosed by another thread. The close calls kvm_spapr_tce_release() and\nthen release_spapr_tce_table() (via call_rcu()) which frees `stt`.\n\nAlthough there are calls to rcu_read_lock() in\nkvm_spapr_tce_attach_iommu_group() they are not sufficient to prevent\nthe UAF, because `stt` is used outside the locked regions.\n\nWith an artifcial delay after the fdput() and a userspace program which\ntriggers the race, KASAN detects the UAF:\n\n  BUG: KASAN: slab-use-after-free in kvm_spapr_tce_attach_iommu_group+0x298/0x720 [kvm]\n  Read of size 4 at addr c000200027552c30 by task kvm-vfio/2505\n  CPU: 54 PID: 2505 Comm: kvm-vfio Not tainted 6.10.0-rc3-next-20240612-dirty #1\n  Hardware name: 8335-GTH POWER9 0x4e1202 opal:skiboot-v6.5.3-35-g1851b2a06 PowerNV\n  Call Trace:\n    dump_stack_lvl+0xb4/0x108 (unreliable)\n    print_report+0x2b4/0x6ec\n    kasan_report+0x118/0x2b0\n    __asan_load4+0xb8/0xd0\n    kvm_spapr_tce_attach_iommu_group+0x298/0x720 [kvm]\n    kvm_vfio_set_attr+0x524/0xac0 [kvm]\n    kvm_device_ioctl+0x144/0x240 [kvm]\n    sys_ioctl+0x62c/0x1810\n    system_call_exception+0x190/0x440\n    system_call_vectored_common+0x15c/0x2ec\n  ...\n  Freed by task 0:\n   ...\n   kfree+0xec/0x3e0\n   release_spapr_tce_table+0xd4/0x11c [kvm]\n   rcu_core+0x568/0x16a0\n   handle_softirqs+0x23c/0x920\n   do_softirq_own_stack+0x6c/0x90\n   do_softirq_own_stack+0x58/0x90\n   __irq_exit_rcu+0x218/0x2d0\n   irq_exit+0x30/0x80\n   arch_local_irq_restore+0x128/0x230\n   arch_local_irq_enable+0x1c/0x30\n   cpuidle_enter_state+0x134/0x5cc\n   cpuidle_enter+0x6c/0xb0\n   call_cpuidle+0x7c/0x100\n   do_idle+0x394/0x410\n   cpu_startup_entry+0x60/0x70\n   start_secondary+0x3fc/0x410\n   start_secondary_prolog+0x10/0x14\n\nFix it by delaying the fdput() until `stt` is no longer in use, which\nis effectively the entire function. To keep the patch minimal add a call\nto fdput() at each of the existing return paths. Future work can convert\nthe function to goto or __cleanup style cleanup.\n\nWith the fix in place the test case no longer triggers the UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41071",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: wext: add extra SIOCSIWSCAN data check\n\nIn 'cfg80211_wext_siwscan()', add extra check whether number of\nchannels passed via 'ioctl(sock, SIOCSIWSCAN, ...)' doesn't exceed\nIW_MAX_FREQUENCIES and reject invalid request with -EINVAL otherwise.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: avoid double free special payload\n\nIf a discard request needs to be retried, and that retry may fail before\na new special payload is added, a double free will result. Clear the\nRQF_SPECIAL_LOAD when the request is cleaned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41076",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Fix memory leak in nfs4_set_security_label\n\nWe leak nfs_fattr and nfs4_label every time we set a security xattr.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix quota root leak after quota disable failure\n\nIf during the quota disable we fail when cleaning the quota tree or when\ndeleting the root from the root tree, we jump to the 'out' label without\never dropping the reference on the quota root, resulting in a leak of the\nroot since fs_info-\u003equota_root is no longer pointing to the root (we have\nset it to NULL just before those steps).\n\nFix this by always doing a btrfs_put_root() call under the 'out' label.\nThis is a problem that exists since qgroups were first added in 2012 by\ncommit bed92eae26cc (\"Btrfs: qgroup implementation and prototypes\"), but\nback then we missed a kfree on the quota root and free_extent_buffer()\ncalls on its root and commit root nodes, since back then roots were not\nyet reference counted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41079",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: always initialize cqe.result\n\nThe spec doesn't mandate that the first two double words (aka results)\nfor the command queue entry need to be set to 0 when they are not\nused (not specified). Though, the target implemention returns 0 for TCP\nand FC but not for RDMA.\n\nLet's make RDMA behave the same and thus explicitly initializing the\nresult field. This prevents leaking any data from the stack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41081",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nila: block BH in ila_output()\n\nAs explained in commit 1378817486d6 (\"tipc: block BH\nbefore using dst_cache\"), net/core/dst_cache.c\nhelpers need to be called with BH disabled.\n\nila_output() is called from lwtunnel_output()\npossibly from process context, and under rcu_read_lock().\n\nWe might be interrupted by a softirq, re-enter ila_output()\nand corrupt dst_cache data structures.\n\nFix the race by using local_bh_disable().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41082",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fabrics: use reserved tag for reg read/write command\n\nIn some scenarios, if too many commands are issued by nvme command in\nthe same time by user tasks, this may exhaust all tags of admin_q. If\na reset (nvme reset or IO timeout) occurs before these commands finish,\nreconnect routine may fail to update nvme regs due to insufficient tags,\nwhich will cause kernel hang forever. In order to workaround this issue,\nmaybe we can let reg_read32()/reg_read64()/reg_write32() use reserved\ntags. This maybe safe for nvmf:\n\n1. For the disable ctrl path,  we will not issue connect command\n2. For the enable ctrl / fw activate path, since connect and reg_xx()\n   are called serially.\n\nSo the reserved tags may still be enough while reg_xx() use reserved tags.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41087",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix double free on error\n\nIf e.g. the ata_port_alloc() call in ata_host_alloc() fails, we will jump\nto the err_out label, which will call devres_release_group().\ndevres_release_group() will trigger a call to ata_host_release().\nata_host_release() calls kfree(host), so executing the kfree(host) in\nata_host_alloc() will lead to a double free:\n\nkernel BUG at mm/slub.c:553!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 11 PID: 599 Comm: (udev-worker) Not tainted 6.10.0-rc5 #47\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:kfree+0x2cf/0x2f0\nCode: 5d 41 5e 41 5f 5d e9 80 d6 ff ff 4d 89 f1 41 b8 01 00 00 00 48 89 d9 48 89 da\nRSP: 0018:ffffc90000f377f0 EFLAGS: 00010246\nRAX: ffff888112b1f2c0 RBX: ffff888112b1f2c0 RCX: ffff888112b1f320\nRDX: 000000000000400b RSI: ffffffffc02c9de5 RDI: ffff888112b1f2c0\nRBP: ffffc90000f37830 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffc90000f37610 R11: 617461203a736b6e R12: ffffea00044ac780\nR13: ffff888100046400 R14: ffffffffc02c9de5 R15: 0000000000000006\nFS:  00007f2f1cabe980(0000) GS:ffff88813b380000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f2f1c3acf75 CR3: 0000000111724000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __die_body.cold+0x19/0x27\n ? die+0x2e/0x50\n ? do_trap+0xca/0x110\n ? do_error_trap+0x6a/0x90\n ? kfree+0x2cf/0x2f0\n ? exc_invalid_op+0x50/0x70\n ? kfree+0x2cf/0x2f0\n ? asm_exc_invalid_op+0x1a/0x20\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? kfree+0x2cf/0x2f0\n ata_host_alloc+0xf5/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nEnsure that we will not call kfree(host) twice, by performing the kfree()\nonly if the devres_open_group() call failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41089",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_hd_modes\n\nIn nv17_tv_get_hd_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). The same applies to drm_cvt_mode().\nAdd a check to avoid null pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntap: add missing verification for short frame\n\nThe cited commit missed to check against the validity of the frame length\nin the tap_get_user_xdp() path, which could cause a corrupted skb to be\nsent downstack. Even before the skb is transmitted, the\ntap_get_user_xdp()--\u003eskb_set_network_header() may assume the size is more\nthan ETH_HLEN. Once transmitted, this could either cause out-of-bound\naccess beyond the actual length, or confuse the underlayer with incorrect\nor inconsistent header length in the skb metadata.\n\nIn the alternative path, tap_get_user() already prohibits short frame which\nhas the length less than Ethernet header size from being transmitted.\n\nThis is to drop any frame shorter than the Ethernet header size just like\nhow tap_get_user() does.\n\nCVE: CVE-2024-41090",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41091",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntun: add missing verification for short frame\n\nThe cited commit missed to check against the validity of the frame length\nin the tun_xdp_one() path, which could cause a corrupted skb to be sent\ndownstack. Even before the skb is transmitted, the\ntun_xdp_one--\u003eeth_type_trans() may access the Ethernet header although it\ncan be less than ETH_HLEN. Once transmitted, this could either cause\nout-of-bound access beyond the actual length, or confuse the underlayer\nwith incorrect or inconsistent header length in the skb metadata.\n\nIn the alternative path, tun_get_user() already prohibits short frame which\nhas the length less than Ethernet header size from being transmitted for\nIFF_TAP.\n\nThis is to drop any frame shorter than the Ethernet header size just like\nhow tun_get_user() does.\n\nCVE: CVE-2024-41091",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41095",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/dispnv04: fix null pointer dereference in nv17_tv_get_ld_modes\n\nIn nv17_tv_get_ld_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: atm: cxacru: fix endpoint checking in cxacru_bind()\n\nSyzbot is still reporting quite an old issue [1] that occurs due to\nincomplete checking of present usb endpoints. As such, wrong\nendpoints types may be used at urb sumbitting stage which in turn\ntriggers a warning in usb_submit_urb().\n\nFix the issue by verifying that required endpoint types are present\nfor both in and out endpoints, taking into account cmd endpoint type.\n\nUnfortunately, this patch has not been tested on real hardware.\n\n[1] Syzbot report:\nusb 1-1: BOGUS urb xfer, pipe 1 != type 3\nWARNING: CPU: 0 PID: 8667 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\nModules linked in:\nCPU: 0 PID: 8667 Comm: kworker/0:4 Not tainted 5.14.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\n...\nCall Trace:\n cxacru_cm+0x3c0/0x8e0 drivers/usb/atm/cxacru.c:649\n cxacru_card_status+0x22/0xd0 drivers/usb/atm/cxacru.c:760\n cxacru_bind+0x7ac/0x11a0 drivers/usb/atm/cxacru.c:1209\n usbatm_usb_probe+0x321/0x1ae0 drivers/usb/atm/usbatm.c:1055\n cxacru_usb_probe+0xdf/0x1e0 drivers/usb/atm/cxacru.c:1363\n usb_probe_interface+0x315/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:517 [inline]\n really_probe+0x23c/0xcd0 drivers/base/dd.c:595\n __driver_probe_device+0x338/0x4d0 drivers/base/dd.c:747\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:777\n __device_attach_driver+0x20b/0x2f0 drivers/base/dd.c:894\n bus_for_each_drv+0x15f/0x1e0 drivers/base/bus.c:427\n __device_attach+0x228/0x4a0 drivers/base/dd.c:965\n bus_probe_device+0x1e4/0x290 drivers/base/bus.c:487\n device_add+0xc2f/0x2180 drivers/base/core.c:3354\n usb_set_configuration+0x113a/0x1910 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xba/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd9/0x2c0 drivers/usb/core/driver.c:293",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41098",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix null pointer dereference on error\n\nIf the ata_port_alloc() call in ata_host_alloc() fails,\nata_host_release() will get called.\n\nHowever, the code in ata_host_release() tries to free ata_port struct\nmembers unconditionally, which can lead to the following:\n\nBUG: unable to handle page fault for address: 0000000000003990\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 10 PID: 594 Comm: (udev-worker) Not tainted 6.10.0-rc5 #44\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:ata_host_release.cold+0x2f/0x6e [libata]\nCode: e4 4d 63 f4 44 89 e2 48 c7 c6 90 ad 32 c0 48 c7 c7 d0 70 33 c0 49 83 c6 0e 41\nRSP: 0018:ffffc90000ebb968 EFLAGS: 00010246\nRAX: 0000000000000041 RBX: ffff88810fb52e78 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff88813b3218c0 RDI: ffff88813b3218c0\nRBP: ffff88810fb52e40 R08: 0000000000000000 R09: 6c65725f74736f68\nR10: ffffc90000ebb738 R11: 73692033203a746e R12: 0000000000000004\nR13: 0000000000000000 R14: 0000000000000011 R15: 0000000000000006\nFS:  00007f6cc55b9980(0000) GS:ffff88813b300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000003990 CR3: 00000001122a2000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __die_body.cold+0x19/0x27\n ? page_fault_oops+0x15a/0x2f0\n ? exc_page_fault+0x7e/0x180\n ? asm_exc_page_fault+0x26/0x30\n ? ata_host_release.cold+0x2f/0x6e [libata]\n ? ata_host_release.cold+0x2f/0x6e [libata]\n release_nodes+0x35/0xb0\n devres_release_group+0x113/0x140\n ata_host_alloc+0xed/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nDo not access ata_port struct members unconditionally.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42070",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fully validate NFT_DATA_VALUE on store to data registers\n\nregister store validation for NFT_DATA_VALUE is conditional, however,\nthe datatype is always either NFT_DATA_VALUE or NFT_DATA_VERDICT. This\nonly requires a new helper function to infer the register type from the\nset datatype so this conditional check can be removed. Otherwise,\npointer to chain object can be leaked through the registers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix DIO failure due to insufficient transaction credits\n\nThe code in ocfs2_dio_end_io_write() estimates number of necessary\ntransaction credits using ocfs2_calc_extend_credits().  This however does\nnot take into account that the IO could be arbitrarily large and can\ncontain arbitrary number of extents.\n\nExtent tree manipulations do often extend the current transaction but not\nin all of the cases.  For example if we have only single block extents in\nthe tree, ocfs2_mark_extent_written() will end up calling\nocfs2_replace_extent_rec() all the time and we will never extend the\ncurrent transaction and eventually exhaust all the transaction credits if\nthe IO contains many single block extents.  Once that happens a\nWARN_ON(jbd2_handle_buffer_credits(handle) \u003c= 0) is triggered in\njbd2_journal_dirty_metadata() and subsequently OCFS2 aborts in response to\nthis error.  This was actually triggered by one of our customers on a\nheavily fragmented OCFS2 filesystem.\n\nTo fix the issue make sure the transaction always has enough credits for\none extent insert before each call of ocfs2_mark_extent_written().\n\nHeming Zhao said:\n\n------\nPANIC: \"Kernel panic - not syncing: OCFS2: (device dm-1): panic forced after error\"\n\nPID: xxx  TASK: xxxx  CPU: 5  COMMAND: \"SubmitThread-CA\"\n  #0 machine_kexec at ffffffff8c069932\n  #1 __crash_kexec at ffffffff8c1338fa\n  #2 panic at ffffffff8c1d69b9\n  #3 ocfs2_handle_error at ffffffffc0c86c0c [ocfs2]\n  #4 __ocfs2_abort at ffffffffc0c88387 [ocfs2]\n  #5 ocfs2_journal_dirty at ffffffffc0c51e98 [ocfs2]\n  #6 ocfs2_split_extent at ffffffffc0c27ea3 [ocfs2]\n  #7 ocfs2_change_extent_flag at ffffffffc0c28053 [ocfs2]\n  #8 ocfs2_mark_extent_written at ffffffffc0c28347 [ocfs2]\n  #9 ocfs2_dio_end_io_write at ffffffffc0c2bef9 [ocfs2]\n#10 ocfs2_dio_end_io at ffffffffc0c2c0f5 [ocfs2]\n#11 dio_complete at ffffffff8c2b9fa7\n#12 do_blockdev_direct_IO at ffffffff8c2bc09f\n#13 ocfs2_direct_IO at ffffffffc0c2b653 [ocfs2]\n#14 generic_file_direct_write at ffffffff8c1dcf14\n#15 __generic_file_write_iter at ffffffff8c1dd07b\n#16 ocfs2_file_write_iter at ffffffffc0c49f1f [ocfs2]\n#17 aio_write at ffffffff8c2cc72e\n#18 kmem_cache_alloc at ffffffff8c248dde\n#19 do_io_submit at ffffffff8c2ccada\n#20 do_syscall_64 at ffffffff8c004984\n#21 entry_SYSCALL_64_after_hwframe at ffffffff8c8000ba",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42082",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxdp: Remove WARN() from __xdp_reg_mem_model()\n\nsyzkaller reports a warning in __xdp_reg_mem_model().\n\nThe warning occurs only if __mem_id_init_hash_table() returns an error. It\nreturns the error in two cases:\n\n  1. memory allocation fails;\n  2. rhashtable_init() fails when some fields of rhashtable_params\n     struct are not initialized properly.\n\nThe second case cannot happen since there is a static const rhashtable_params\nstruct with valid fields. So, warning is only triggered when there is a\nproblem with memory allocation.\n\nThus, there is no sense in using WARN() to handle this error and it can be\nsafely removed.\n\nWARNING: CPU: 0 PID: 5065 at net/core/xdp.c:299 __xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299\n\nCPU: 0 PID: 5065 Comm: syz-executor883 Not tainted 6.8.0-syzkaller-05271-gf99c5f563c17 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nRIP: 0010:__xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299\n\nCall Trace:\n xdp_reg_mem_model+0x22/0x40 net/core/xdp.c:344\n xdp_test_run_setup net/bpf/test_run.c:188 [inline]\n bpf_test_run_xdp_live+0x365/0x1e90 net/bpf/test_run.c:377\n bpf_prog_test_run_xdp+0x813/0x11b0 net/bpf/test_run.c:1267\n bpf_prog_test_run+0x33a/0x3b0 kernel/bpf/syscall.c:4240\n __sys_bpf+0x48d/0x810 kernel/bpf/syscall.c:5649\n __do_sys_bpf kernel/bpf/syscall.c:5738 [inline]\n __se_sys_bpf kernel/bpf/syscall.c:5736 [inline]\n __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5736\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nFound by Linux Verification Center (linuxtesting.org) with syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: fix deadlock in create_pinctrl() when handling -EPROBE_DEFER\n\nIn create_pinctrl(), pinctrl_maps_mutex is acquired before calling\nadd_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl()\ncalls pinctrl_free(). However, pinctrl_free() attempts to acquire\npinctrl_maps_mutex, which is already held by create_pinctrl(), leading to\na potential deadlock.\n\nThis patch resolves the issue by releasing pinctrl_maps_mutex before\ncalling pinctrl_free(), preventing the deadlock.\n\nThis bug was discovered and resolved using Coverity Static Analysis\nSecurity Testing (SAST) by Synopsys, Inc.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/dpaa2: Avoid explicit cpumask var allocation on stack\n\nFor CONFIG_CPUMASK_OFFSTACK=y kernel, explicit allocation of cpumask\nvariable on stack is not recommended since it can cause potential stack\noverflow.\n\nInstead, kernel code should always use *cpumask_var API(s) to allocate\ncpumask var in config-neutral way, leaving allocation strategy to\nCONFIG_CPUMASK_OFFSTACK.\n\nUse *cpumask_var API(s) to address it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42096",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86: stop playing stack games in profile_pc()\n\nThe 'profile_pc()' function is used for timer-based profiling, which\nisn't really all that relevant any more to begin with, but it also ends\nup making assumptions based on the stack layout that aren't necessarily\nvalid.\n\nBasically, the code tries to account the time spent in spinlocks to the\ncaller rather than the spinlock, and while I support that as a concept,\nit's not worth the code complexity or the KASAN warnings when no serious\nprofiling is done using timers anyway these days.\n\nAnd the code really does depend on stack layout that is only true in the\nsimplest of cases.  We've lost the comment at some point (I think when\nthe 32-bit and 64-bit code was unified), but it used to say:\n\n\tAssume the lock function has either no stack frame or a copy\n\tof eflags from PUSHF.\n\nwhich explains why it just blindly loads a word or two straight off the\nstack pointer and then takes a minimal look at the values to just check\nif they might be eflags or the return pc:\n\n\tEflags always has bits 22 and up cleared unlike kernel addresses\n\nbut that basic stack layout assumption assumes that there isn't any lock\ndebugging etc going on that would complicate the code and cause a stack\nframe.\n\nIt causes KASAN unhappiness reported for years by syzkaller [1] and\nothers [2].\n\nWith no real practical reason for this any more, just remove the code.\n\nJust for historical interest, here's some background commits relating to\nthis code from 2006:\n\n  0cb91a229364 (\"i386: Account spinlocks to the caller during profiling for !FP kernels\")\n  31679f38d886 (\"Simplify profile_pc on x86-64\")\n\nand a code unification from 2009:\n\n  ef4512882dbe (\"x86: time_32/64.c unify profile_pc\")\n\nbut the basics of this thing actually goes back to before the git tree.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: fix null pointer dereference in nouveau_connector_get_modes\n\nIn nouveau_connector_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a possible NULL pointer\ndereference on failure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42106",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet_diag: Initialize pad field in struct inet_diag_req_v2\n\nKMSAN reported uninit-value access in raw_lookup() [1]. Diag for raw\nsockets uses the pad field in struct inet_diag_req_v2 for the\nunderlying protocol. This field corresponds to the sdiag_raw_protocol\nfield in struct inet_diag_req_raw.\n\ninet_diag_get_exact_compat() converts inet_diag_req to\ninet_diag_req_v2, but leaves the pad field uninitialized. So the issue\noccurs when raw_lookup() accesses the sdiag_raw_protocol field.\n\nFix this by initializing the pad field in\ninet_diag_get_exact_compat(). Also, do the same fix in\ninet_diag_dump_compat() to avoid the similar issue in the future.\n\n[1]\nBUG: KMSAN: uninit-value in raw_lookup net/ipv4/raw_diag.c:49 [inline]\nBUG: KMSAN: uninit-value in raw_sock_get+0x657/0x800 net/ipv4/raw_diag.c:71\n raw_lookup net/ipv4/raw_diag.c:49 [inline]\n raw_sock_get+0x657/0x800 net/ipv4/raw_diag.c:71\n raw_diag_dump_one+0xa1/0x660 net/ipv4/raw_diag.c:99\n inet_diag_cmd_exact+0x7d9/0x980\n inet_diag_get_exact_compat net/ipv4/inet_diag.c:1404 [inline]\n inet_diag_rcv_msg_compat+0x469/0x530 net/ipv4/inet_diag.c:1426\n sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c:282\n netlink_rcv_skb+0x537/0x670 net/netlink/af_netlink.c:2564\n sock_diag_rcv+0x35/0x40 net/core/sock_diag.c:297\n netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n netlink_unicast+0xe74/0x1240 net/netlink/af_netlink.c:1361\n netlink_sendmsg+0x10c6/0x1260 net/netlink/af_netlink.c:1905\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x332/0x3d0 net/socket.c:745\n ____sys_sendmsg+0x7f0/0xb70 net/socket.c:2585\n ___sys_sendmsg+0x271/0x3b0 net/socket.c:2639\n __sys_sendmsg net/socket.c:2668 [inline]\n __do_sys_sendmsg net/socket.c:2677 [inline]\n __se_sys_sendmsg net/socket.c:2675 [inline]\n __x64_sys_sendmsg+0x27e/0x4a0 net/socket.c:2675\n x64_sys_call+0x135e/0x3ce0 arch/x86/include/generated/asm/syscalls_64.h:47\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xd9/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was stored to memory at:\n raw_sock_get+0x650/0x800 net/ipv4/raw_diag.c:71\n raw_diag_dump_one+0xa1/0x660 net/ipv4/raw_diag.c:99\n inet_diag_cmd_exact+0x7d9/0x980\n inet_diag_get_exact_compat net/ipv4/inet_diag.c:1404 [inline]\n inet_diag_rcv_msg_compat+0x469/0x530 net/ipv4/inet_diag.c:1426\n sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c:282\n netlink_rcv_skb+0x537/0x670 net/netlink/af_netlink.c:2564\n sock_diag_rcv+0x35/0x40 net/core/sock_diag.c:297\n netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n netlink_unicast+0xe74/0x1240 net/netlink/af_netlink.c:1361\n netlink_sendmsg+0x10c6/0x1260 net/netlink/af_netlink.c:1905\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x332/0x3d0 net/socket.c:745\n ____sys_sendmsg+0x7f0/0xb70 net/socket.c:2585\n ___sys_sendmsg+0x271/0x3b0 net/socket.c:2639\n __sys_sendmsg net/socket.c:2668 [inline]\n __do_sys_sendmsg net/socket.c:2677 [inline]\n __se_sys_sendmsg net/socket.c:2675 [inline]\n __x64_sys_sendmsg+0x27e/0x4a0 net/socket.c:2675\n x64_sys_call+0x135e/0x3ce0 arch/x86/include/generated/asm/syscalls_64.h:47\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xd9/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nLocal variable req.i created at:\n inet_diag_get_exact_compat net/ipv4/inet_diag.c:1396 [inline]\n inet_diag_rcv_msg_compat+0x2a6/0x530 net/ipv4/inet_diag.c:1426\n sock_diag_rcv_msg+0x23d/0x740 net/core/sock_diag.c:282\n\nCPU: 1 PID: 8888 Comm: syz-executor.6 Not tainted 6.10.0-rc4-00217-g35bb670d65fc #32\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42110",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ntb_netdev: Move ntb_netdev_rx_handler() to call netif_rx() from __netif_rx()\n\nThe following is emitted when using idxd (DSA) dmanegine as the data\nmover for ntb_transport that ntb_netdev uses.\n\n[74412.546922] BUG: using smp_processor_id() in preemptible [00000000] code: irq/52-idxd-por/14526\n[74412.556784] caller is netif_rx_internal+0x42/0x130\n[74412.562282] CPU: 6 PID: 14526 Comm: irq/52-idxd-por Not tainted 6.9.5 #5\n[74412.569870] Hardware name: Intel Corporation ArcherCity/ArcherCity, BIOS EGSDCRB1.E9I.1752.P05.2402080856 02/08/2024\n[74412.581699] Call Trace:\n[74412.584514]  \u003cTASK\u003e\n[74412.586933]  dump_stack_lvl+0x55/0x70\n[74412.591129]  check_preemption_disabled+0xc8/0xf0\n[74412.596374]  netif_rx_internal+0x42/0x130\n[74412.600957]  __netif_rx+0x20/0xd0\n[74412.604743]  ntb_netdev_rx_handler+0x66/0x150 [ntb_netdev]\n[74412.610985]  ntb_complete_rxc+0xed/0x140 [ntb_transport]\n[74412.617010]  ntb_rx_copy_callback+0x53/0x80 [ntb_transport]\n[74412.623332]  idxd_dma_complete_txd+0xe3/0x160 [idxd]\n[74412.628963]  idxd_wq_thread+0x1a6/0x2b0 [idxd]\n[74412.634046]  irq_thread_fn+0x21/0x60\n[74412.638134]  ? irq_thread+0xa8/0x290\n[74412.642218]  irq_thread+0x1a0/0x290\n[74412.646212]  ? __pfx_irq_thread_fn+0x10/0x10\n[74412.651071]  ? __pfx_irq_thread_dtor+0x10/0x10\n[74412.656117]  ? __pfx_irq_thread+0x10/0x10\n[74412.660686]  kthread+0x100/0x130\n[74412.664384]  ? __pfx_kthread+0x10/0x10\n[74412.668639]  ret_from_fork+0x31/0x50\n[74412.672716]  ? __pfx_kthread+0x10/0x10\n[74412.676978]  ret_from_fork_asm+0x1a/0x30\n[74412.681457]  \u003c/TASK\u003e\n\nThe cause is due to the idxd driver interrupt completion handler uses\nthreaded interrupt and the threaded handler is not hard or soft interrupt\ncontext. However __netif_rx() can only be called from interrupt context.\nChange the call to netif_rx() in order to allow completion via normal\ncontext for dmaengine drivers that utilize threaded irq handling.\n\nWhile the following commit changed from netif_rx() to __netif_rx(),\nbaebdf48c360 (\"net: dev: Makes sure netif_rx() can be invoked in any context.\"),\nthe change should've been a noop instead. However, the code precedes this\nfix should've been using netif_rx_ni() or netif_rx_any_context().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42119",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Skip finding free audio for unknown engine_id\n\n[WHY]\nENGINE_ID_UNKNOWN = -1 and can not be used as an array index. Plus, it\nalso means it is uninitialized and does not need free audio.\n\n[HOW]\nSkip and return NULL.\n\nThis fixes 2 OVERRUN issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42120",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check pipe offset before setting vblank\n\npipe_ctx has a size of MAX_PIPES so checking its index before accessing\nthe array.\n\nThis fixes an OVERRUN issue reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42124",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Make qedf_execute_tmf() non-preemptible\n\nStop calling smp_processor_id() from preemptible code in\nqedf_execute_tmf90.  This results in BUG_ON() when running an RT kernel.\n\n[ 659.343280] BUG: using smp_processor_id() in preemptible [00000000] code: sg_reset/3646\n[ 659.343282] caller is qedf_execute_tmf+0x8b/0x360 [qedf]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/core: Implement a limit on UMAD receive List\n\nThe existing behavior of ib_umad, which maintains received MAD\npackets in an unbounded list, poses a risk of uncontrolled growth.\nAs user-space applications extract packets from this list, the rate\nof extraction may not match the rate of incoming packets, leading\nto potential list overflow.\n\nTo address this, we introduce a limit to the size of the list. After\nconsidering typical scenarios, such as OpenSM processing, which can\nhandle approximately 100k packets per second, and the 1-second retry\ntimeout for most packets, we set the list size limit to 200k. Packets\nreceived beyond this limit are dropped, assuming they are likely timed\nout by the time they are handled by user-space.\n\nNotably, packets queued on the receive list due to reasons like\ntimed-out sends are preserved even when the list is full.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42148",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnx2x: Fix multiple UBSAN array-index-out-of-bounds\n\nFix UBSAN warnings that occur when using a system with 32 physical\ncpu cores or more, or when the user defines a number of Ethernet\nqueues greater than or equal to FP_SB_MAX_E1x using the num_queues\nmodule parameter.\n\nCurrently there is a read/write out of bounds that occurs on the array\n\"struct stats_query_entry query\" present inside the \"bnx2x_fw_stats_req\"\nstruct in \"drivers/net/ethernet/broadcom/bnx2x/bnx2x.h\".\nLooking at the definition of the \"struct stats_query_entry query\" array:\n\nstruct stats_query_entry query[FP_SB_MAX_E1x+\n         BNX2X_FIRST_QUEUE_QUERY_IDX];\n\nFP_SB_MAX_E1x is defined as the maximum number of fast path interrupts and\nhas a value of 16, while BNX2X_FIRST_QUEUE_QUERY_IDX has a value of 3\nmeaning the array has a total size of 19.\nSince accesses to \"struct stats_query_entry query\" are offset-ted by\nBNX2X_FIRST_QUEUE_QUERY_IDX, that means that the total number of Ethernet\nqueues should not exceed FP_SB_MAX_E1x (16). However one of these queues\nis reserved for FCOE and thus the number of Ethernet queues should be set\nto [FP_SB_MAX_E1x -1] (15) if FCOE is enabled or [FP_SB_MAX_E1x] (16) if\nit is not.\n\nThis is also described in a comment in the source code in\ndrivers/net/ethernet/broadcom/bnx2x/bnx2x.h just above the Macro definition\nof FP_SB_MAX_E1x. Below is the part of this explanation that it important\nfor this patch\n\n/*\n  * The total number of L2 queues, MSIX vectors and HW contexts (CIDs) is\n  * control by the number of fast-path status blocks supported by the\n  * device (HW/FW). Each fast-path status block (FP-SB) aka non-default\n  * status block represents an independent interrupts context that can\n  * serve a regular L2 networking queue. However special L2 queues such\n  * as the FCoE queue do not require a FP-SB and other components like\n  * the CNIC may consume FP-SB reducing the number of possible L2 queues\n  *\n  * If the maximum number of FP-SB available is X then:\n  * a. If CNIC is supported it consumes 1 FP-SB thus the max number of\n  *    regular L2 queues is Y=X-1\n  * b. In MF mode the actual number of L2 queues is Y= (X-1/MF_factor)\n  * c. If the FCoE L2 queue is supported the actual number of L2 queues\n  *    is Y+1\n  * d. The number of irqs (MSIX vectors) is either Y+1 (one extra for\n  *    slow-path interrupts) or Y+2 if CNIC is supported (one additional\n  *    FP interrupt context for the CNIC).\n  * e. The number of HW context (CID count) is always X or X+1 if FCoE\n  *    L2 queue is supported. The cid for the FCoE L2 queue is always X.\n  */\n\nHowever this driver also supports NICs that use the E2 controller which can\nhandle more queues due to having more FP-SB represented by FP_SB_MAX_E2.\nLooking at the commits when the E2 support was added, it was originally\nusing the E1x parameters: commit f2e0899f0f27 (\"bnx2x: Add 57712 support\").\nBack then FP_SB_MAX_E2 was set to 16 the same as E1x. However the driver\nwas later updated to take full advantage of the E2 instead of having it be\nlimited to the capabilities of the E1x. But as far as we can tell, the\narray \"stats_query_entry query\" was still limited to using the FP-SB\navailable to the E1x cards as part of an oversignt when the driver was\nupdated to take full advantage of the E2, and now with the driver being\naware of the greater queue size supported by E2 NICs, it causes the UBSAN\nwarnings seen in the stack traces below.\n\nThis patch increases the size of the \"stats_query_entry query\" array by\nreplacing FP_SB_MAX_E1x with FP_SB_MAX_E2 to be large enough to handle\nboth types of NICs.\n\nStack traces:\n\nUBSAN: array-index-out-of-bounds in\n       drivers/net/ethernet/broadcom/bnx2x/bnx2x_stats.c:1529:11\nindex 20 is out of range for type 'stats_query_entry [19]'\nCPU: 12 PID: 858 Comm: systemd-network Not tainted 6.9.0-060900rc7-generic\n\t     #202405052133\nHardware name: HP ProLiant DL360 Gen9/ProLiant DL360 \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42154",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp_metrics: validate source addr length\n\nI don't see anything checking that TCP_METRICS_ATTR_SADDR_IPV4\nis at least 4 bytes long, and the policy doesn't have an entry\nfor this attribute at all (neither does it for IPv6 but v6 is\nmanually validated).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42155",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pkey: Wipe copies of protected- and secure-keys\n\nAlthough the clear-key of neither protected- nor secure-keys is\naccessible, this key material should only be visible to the calling\nprocess. So wipe all copies of protected- or secure-keys from stack,\neven in case of an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42157",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pkey: Wipe sensitive data on failure\n\nWipe sensitive data from stack also if the copy_to_user() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42158",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pkey: Use kfree_sensitive() to fix Coccinelle warnings\n\nReplace memzero_explicit() and kfree() with kfree_sensitive() to fix\nwarnings reported by Coccinelle:\n\nWARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1506)\nWARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1643)\nWARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1770)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Account for stopped queues when reading NIC stats\n\nWe now account for the fact that the NIC might send us stats for a\nsubset of queues. Without this change, gve_get_ethtool_stats might make\nan invalid access on the priv-\u003estats_report-\u003estats array.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42223",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvb-frontends: tda10048: Fix integer overflow\n\nstate-\u003extal_hz can be up to 16M, so it can overflow a 32 bit integer\nwhen multiplied by pll_mfactor.\n\nCreate a new 64 bit variable to hold the calculations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42224",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6xxx: Correct check for empty list\n\nSince commit a3c53be55c95 (\"net: dsa: mv88e6xxx: Support multiple MDIO\nbusses\") mv88e6xxx_default_mdio_bus() has checked that the\nreturn value of list_first_entry() is non-NULL.\n\nThis appears to be intended to guard against the list chip-\u003emdios being\nempty.  However, it is not the correct check as the implementation of\nlist_first_entry is not designed to return NULL for empty lists.\n\nInstead, use list_first_entry_or_null() which does return NULL if the\nlist is empty.\n\nFlagged by Smatch.\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42226",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42228",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Using uninitialized value *size when calling amdgpu_vce_cs_reloc\n\nInitialize the size before calling amdgpu_vce_cs_reloc, such as case 0x03000001.\nV2: To really improve the handling we would actually\n   need to have a separate value of 0xffffffff.(Christian)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42232",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibceph: fix race between delayed_work() and ceph_monc_stop()\n\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon \u003c 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc-\u003eauth and monc-\u003emonmap being\nparticularly susceptible to quickly being reused.\n\nTo fix this:\n\n- clear monc-\u003ecur_mon and monc-\u003ehunting as part of closing the session\n  in ceph_monc_stop()\n- bail from delayed_work() if monc-\u003ecur_mon is cleared, similar to how\n  it's done in mon_fault() and finish_hunting() (based on monc-\u003ehunting)\n- call cancel_delayed_work_sync() after the session is closed",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42236",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: configfs: Prevent OOB read/write in usb_string_copy()\n\nUserspace provided string 's' could trivially have the length zero. Left\nunchecked this will firstly result in an OOB read in the form\n`if (str[0 - 1] == '\\n') followed closely by an OOB write in the form\n`str[0 - 1] = '\\0'`.\n\nThere is already a validating check to catch strings that are too long.\nLet's supply an additional check for invalid strings that are too short.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42240",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/bhi: Avoid warning in #DB handler due to BHI mitigation\n\nWhen BHI mitigation is enabled, if SYSENTER is invoked with the TF flag set\nthen entry_SYSENTER_compat() uses CLEAR_BRANCH_HISTORY and calls the\nclear_bhb_loop() before the TF flag is cleared. This causes the #DB handler\n(exc_debug_kernel()) to issue a warning because single-step is used outside the\nentry_SYSENTER_compat() function.\n\nTo address this issue, entry_SYSENTER_compat() should use CLEAR_BRANCH_HISTORY\nafter making sure the TF flag is cleared.\n\nThe problem can be reproduced with the following sequence:\n\n  $ cat sysenter_step.c\n  int main()\n  { asm(\"pushf; pop %ax; bts $8,%ax; push %ax; popf; sysenter\"); }\n\n  $ gcc -o sysenter_step sysenter_step.c\n\n  $ ./sysenter_step\n  Segmentation fault (core dumped)\n\nThe program is expected to crash, and the #DB handler will issue a warning.\n\nKernel log:\n\n  WARNING: CPU: 27 PID: 7000 at arch/x86/kernel/traps.c:1009 exc_debug_kernel+0xd2/0x160\n  ...\n  RIP: 0010:exc_debug_kernel+0xd2/0x160\n  ...\n  Call Trace:\n  \u003c#DB\u003e\n   ? show_regs+0x68/0x80\n   ? __warn+0x8c/0x140\n   ? exc_debug_kernel+0xd2/0x160\n   ? report_bug+0x175/0x1a0\n   ? handle_bug+0x44/0x90\n   ? exc_invalid_op+0x1c/0x70\n   ? asm_exc_invalid_op+0x1f/0x30\n   ? exc_debug_kernel+0xd2/0x160\n   exc_debug+0x43/0x50\n   asm_exc_debug+0x1e/0x40\n  RIP: 0010:clear_bhb_loop+0x0/0xb0\n  ...\n  \u003c/#DB\u003e\n  \u003cTASK\u003e\n   ? entry_SYSENTER_compat_after_hwframe+0x6e/0x8d\n  \u003c/TASK\u003e\n\n  [ bp: Massage commit message. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42244",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: serial: mos7840: fix crash on resume\n\nSince commit c49cfa917025 (\"USB: serial: use generic method if no\nalternative is provided in usb serial layer\"), USB serial core calls the\ngeneric resume implementation when the driver has not provided one.\n\nThis can trigger a crash on resume with mos7840 since support for\nmultiple read URBs was added back in 2011. Specifically, both port read\nURBs are now submitted on resume for open ports, but the context pointer\nof the second URB is left set to the core rather than mos7840 port\nstructure.\n\nFix this by implementing dedicated suspend and resume functions for\nmos7840.\n\nTested with Delock 87414 USB 2.0 to 4x serial adapter.\n\n[ johan: analyse crash and rewrite commit message; set busy flag on\n         resume; drop bulk-in check; drop unnecessary usb_kill_urb() ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42246",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet, sunrpc: Remap EPERM in case of connection failure in xs_tcp_setup_socket\n\nWhen using a BPF program on kernel_connect(), the call can return -EPERM. This\ncauses xs_tcp_setup_socket() to loop forever, filling up the syslog and causing\nthe kernel to potentially freeze up.\n\nNeil suggested:\n\n  This will propagate -EPERM up into other layers which might not be ready\n  to handle it. It might be safer to map EPERM to an error we would be more\n  likely to expect from the network system - such as ECONNREFUSED or ENETDOWN.\n\nECONNREFUSED as error seems reasonable. For programs setting a different error\ncan be out of reach (see handling in 4fbac77d2d09) in particular on kernels\nwhich do not have f10d05966196 (\"bpf: Make BPF_PROG_RUN_ARRAY return -err\ninstead of allow boolean\"), thus given that it is better to simply remap for\nconsistent behavior. UDP does handle EPERM in xs_udp_send_request().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42259",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gem: Fix Virtual Memory mapping boundaries calculation\n\nCalculating the size of the mapped area as the lesser value\nbetween the requested size and the actual size does not consider\nthe partial mapping offset. This can cause page fault access.\n\nFix the calculation of the starting and ending addresses, the\ntotal size is now deduced from the difference between the end and\nstart addresses.\n\nAdditionally, the calculations have been rewritten in a clearer\nand more understandable form.\n\n[Joonas: Add Requires: tag]\nRequires: 60a2066c5005 (\"drm/i915/gem: Adjust vma offset for framebuffer mmap offset\")\n(cherry picked from commit 97b6784753da06d9d40232328efc5c5367e53417)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42265",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nprotect the fetch of -\u003efd[fd] in do_dup2() from mispredictions\n\nboth callers have verified that fd is not greater than -\u003emax_fds;\nhowever, misprediction might end up with\n        tofree = fdt-\u003efd[fd];\nbeing speculatively executed.  That's wrong for the same reasons\nwhy it's wrong in close_fd()/file_close_fd_locked(); the same\nsolution applies - array_index_nospec(fd, fdt-\u003emax_fds) could differ\nfrom fd only in case of speculative execution on mispredicted path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42271",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/iucv: fix use after free in iucv_sock_close()\n\niucv_sever_path() is called from process context and from bh context.\niucv-\u003epath is used as indicator whether somebody else is taking care of\nsevering the path (or it is already removed / never existed).\nThis needs to be done with atomic compare and swap, otherwise there is a\nsmall window where iucv_sock_close() will try to work with a path that has\nalready been severed and freed by iucv_callback_connrej() called by\niucv_tasklet_fn().\n\nExample:\n[452744.123844] Call Trace:\n[452744.123845] ([\u003c0000001e87f03880\u003e] 0x1e87f03880)\n[452744.123966]  [\u003c00000000d593001e\u003e] iucv_path_sever+0x96/0x138\n[452744.124330]  [\u003c000003ff801ddbca\u003e] iucv_sever_path+0xc2/0xd0 [af_iucv]\n[452744.124336]  [\u003c000003ff801e01b6\u003e] iucv_sock_close+0xa6/0x310 [af_iucv]\n[452744.124341]  [\u003c000003ff801e08cc\u003e] iucv_sock_release+0x3c/0xd0 [af_iucv]\n[452744.124345]  [\u003c00000000d574794e\u003e] __sock_release+0x5e/0xe8\n[452744.124815]  [\u003c00000000d5747a0c\u003e] sock_close+0x34/0x48\n[452744.124820]  [\u003c00000000d5421642\u003e] __fput+0xba/0x268\n[452744.124826]  [\u003c00000000d51b382c\u003e] task_work_run+0xbc/0xf0\n[452744.124832]  [\u003c00000000d5145710\u003e] do_notify_resume+0x88/0x90\n[452744.124841]  [\u003c00000000d5978096\u003e] system_call+0xe2/0x2c8\n[452744.125319] Last Breaking-Event-Address:\n[452744.125321]  [\u003c00000000d5930018\u003e] iucv_path_sever+0x90/0x138\n[452744.125324]\n[452744.125325] Kernel panic - not syncing: Fatal exception in interrupt\n\nNote that bh_lock_sock() is not serializing the tasklet context against\nprocess context, because the check for sock_owned_by_user() and\ncorresponding handling is missing.\n\nIdeas for a future clean-up patch:\nA) Correct usage of bh_lock_sock() in tasklet context, as described in\nRe-enqueue, if needed. This may require adding return values to the\ntasklet functions and thus changes to all users of iucv.\n\nB) Change iucv tasklet into worker and use only lock_sock() in af_iucv.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42280",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: Fix a use after free in hfcmulti_tx()\n\nDon't dereference *sp after calling dev_kfree_skb(*sp).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42281",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix a segment issue when downgrading gso_size\n\nLinearize the skb when downgrading gso_size because it may trigger a\nBUG_ON() later when the skb is segmented as described in [1,2].",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42284",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Return non-zero value from tipc_udp_addr2str() on error\n\ntipc_udp_addr2str() should return non-zero value if the UDP media\naddress is invalid. Otherwise, a buffer overflow access can occur in\ntipc_media_addr_printf(). Fix this by returning 1 on an invalid UDP\nmedia address.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42285",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/iwcm: Fix a use-after-free related to destroying CM IDs\n\niw_conn_req_handler() associates a new struct rdma_id_private (conn_id) with\nan existing struct iw_cm_id (cm_id) as follows:\n\n        conn_id-\u003ecm_id.iw = cm_id;\n        cm_id-\u003econtext = conn_id;\n        cm_id-\u003ecm_handler = cma_iw_handler;\n\nrdma_destroy_id() frees both the cm_id and the struct rdma_id_private. Make\nsure that cm_work_handler() does not trigger a use-after-free by only\nfreeing of the struct rdma_id_private after all pending work has finished.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42286",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: validate nvme_local_port correctly\n\nThe driver load failed with error message,\n\nqla2xxx [0000:04:00.0]-ffff:0: register_localport failed: ret=ffffffef\n\nand with a kernel crash,\n\n\tBUG: unable to handle kernel NULL pointer dereference at 0000000000000070\n\tWorkqueue: events_unbound qla_register_fcport_fn [qla2xxx]\n\tRIP: 0010:nvme_fc_register_remoteport+0x16/0x430 [nvme_fc]\n\tRSP: 0018:ffffaaa040eb3d98 EFLAGS: 00010282\n\tRAX: 0000000000000000 RBX: ffff9dfb46b78c00 RCX: 0000000000000000\n\tRDX: ffff9dfb46b78da8 RSI: ffffaaa040eb3e08 RDI: 0000000000000000\n\tRBP: ffff9dfb612a0a58 R08: ffffffffaf1d6270 R09: 3a34303a30303030\n\tR10: 34303a303030305b R11: 2078787832616c71 R12: ffff9dfb46b78dd4\n\tR13: ffff9dfb46b78c24 R14: ffff9dfb41525300 R15: ffff9dfb46b78da8\n\tFS:  0000000000000000(0000) GS:ffff9dfc67c00000(0000) knlGS:0000000000000000\n\tCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n\tCR2: 0000000000000070 CR3: 000000018da10004 CR4: 00000000000206f0\n\tCall Trace:\n\tqla_nvme_register_remote+0xeb/0x1f0 [qla2xxx]\n\t? qla2x00_dfs_create_rport+0x231/0x270 [qla2xxx]\n\tqla2x00_update_fcport+0x2a1/0x3c0 [qla2xxx]\n\tqla_register_fcport_fn+0x54/0xc0 [qla2xxx]\n\nExit the qla_nvme_register_remote() function when qla_nvme_register_hba()\nfails and correctly validate nvme_local_port.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42287",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Complete command early within lock\n\nA crash was observed while performing NPIV and FW reset,\n\n BUG: kernel NULL pointer dereference, address: 000000000000001c\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 1 PREEMPT_RT SMP NOPTI\n RIP: 0010:dma_direct_unmap_sg+0x51/0x1e0\n RSP: 0018:ffffc90026f47b88 EFLAGS: 00010246\n RAX: 0000000000000000 RBX: 0000000000000021 RCX: 0000000000000002\n RDX: 0000000000000021 RSI: 0000000000000000 RDI: ffff8881041130d0\n RBP: ffff8881041130d0 R08: 0000000000000000 R09: 0000000000000034\n R10: ffffc90026f47c48 R11: 0000000000000031 R12: 0000000000000000\n R13: 0000000000000000 R14: ffff8881565e4a20 R15: 0000000000000000\n FS: 00007f4c69ed3d00(0000) GS:ffff889faac80000(0000) knlGS:0000000000000000\n CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000000000000001c CR3: 0000000288a50002 CR4: 00000000007706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n \u003cTASK\u003e\n ? __die_body+0x1a/0x60\n ? page_fault_oops+0x16f/0x4a0\n ? do_user_addr_fault+0x174/0x7f0\n ? exc_page_fault+0x69/0x1a0\n ? asm_exc_page_fault+0x22/0x30\n ? dma_direct_unmap_sg+0x51/0x1e0\n ? preempt_count_sub+0x96/0xe0\n qla2xxx_qpair_sp_free_dma+0x29f/0x3b0 [qla2xxx]\n qla2xxx_qpair_sp_compl+0x60/0x80 [qla2xxx]\n __qla2x00_abort_all_cmds+0xa2/0x450 [qla2xxx]\n\nThe command completion was done early while aborting the commands in driver\nunload path but outside lock to avoid the WARN_ON condition of performing\ndma_free_attr within the lock. However this caused race condition while\ncommand completion via multiple paths causing system crash.\n\nHence complete the command early in unload path but within the lock to\navoid race condition.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42288",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix for possible memory corruption\n\nInit Control Block is dereferenced incorrectly.  Correctly dereference ICB",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42289",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: During vport delete send async logout explicitly\n\nDuring vport delete, it is observed that during unload we hit a crash\nbecause of stale entries in outstanding command array.  For all these stale\nI/O entries, eh_abort was issued and aborted (fast_fail_io = 2009h) but\nI/Os could not complete while vport delete is in process of deleting.\n\n  BUG: kernel NULL pointer dereference, address: 000000000000001c\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] PREEMPT SMP NOPTI\n  Workqueue: qla2xxx_wq qla_do_work [qla2xxx]\n  RIP: 0010:dma_direct_unmap_sg+0x51/0x1e0\n  RSP: 0018:ffffa1e1e150fc68 EFLAGS: 00010046\n  RAX: 0000000000000000 RBX: 0000000000000021 RCX: 0000000000000001\n  RDX: 0000000000000021 RSI: 0000000000000000 RDI: ffff8ce208a7a0d0\n  RBP: ffff8ce208a7a0d0 R08: 0000000000000000 R09: ffff8ce378aac9c8\n  R10: ffff8ce378aac8a0 R11: ffffa1e1e150f9d8 R12: 0000000000000000\n  R13: 0000000000000000 R14: ffff8ce378aac9c8 R15: 0000000000000000\n  FS:  0000000000000000(0000) GS:ffff8d217f000000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 000000000000001c CR3: 0000002089acc000 CR4: 0000000000350ee0\n  Call Trace:\n  \u003cTASK\u003e\n  qla2xxx_qpair_sp_free_dma+0x417/0x4e0\n  ? qla2xxx_qpair_sp_compl+0x10d/0x1a0\n  ? qla2x00_status_entry+0x768/0x2830\n  ? newidle_balance+0x2f0/0x430\n  ? dequeue_entity+0x100/0x3c0\n  ? qla24xx_process_response_queue+0x6a1/0x19e0\n  ? __schedule+0x2d5/0x1140\n  ? qla_do_work+0x47/0x60\n  ? process_one_work+0x267/0x440\n  ? process_one_work+0x440/0x440\n  ? worker_thread+0x2d/0x3d0\n  ? process_one_work+0x440/0x440\n  ? kthread+0x156/0x180\n  ? set_kthread_struct+0x50/0x50\n  ? ret_from_fork+0x22/0x30\n  \u003c/TASK\u003e\n\nSend out async logout explicitly for all the ports during vport delete.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42301",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndev/parport: fix the array out-of-bounds risk\n\nFixed array out-of-bounds issues caused by sprintf\nby replacing it with snprintf for safer data copying,\nensuring the destination buffer is not overflowed.\n\nBelow is the stack trace I encountered during the actual issue:\n\n[ 66.575408s] [pid:5118,cpu4,QThread,4]Kernel panic - not syncing: stack-protector:\nKernel stack is corrupted in: do_hardware_base_addr+0xcc/0xd0 [parport]\n[ 66.575408s] [pid:5118,cpu4,QThread,5]CPU: 4 PID: 5118 Comm:\nQThread Tainted: G S W O 5.10.97-arm64-desktop #7100.57021.2\n[ 66.575439s] [pid:5118,cpu4,QThread,6]TGID: 5087 Comm: EFileApp\n[ 66.575439s] [pid:5118,cpu4,QThread,7]Hardware name: HUAWEI HUAWEI QingYun\nPGUX-W515x-B081/SP1PANGUXM, BIOS 1.00.07 04/29/2024\n[ 66.575439s] [pid:5118,cpu4,QThread,8]Call trace:\n[ 66.575469s] [pid:5118,cpu4,QThread,9] dump_backtrace+0x0/0x1c0\n[ 66.575469s] [pid:5118,cpu4,QThread,0] show_stack+0x14/0x20\n[ 66.575469s] [pid:5118,cpu4,QThread,1] dump_stack+0xd4/0x10c\n[ 66.575500s] [pid:5118,cpu4,QThread,2] panic+0x1d8/0x3bc\n[ 66.575500s] [pid:5118,cpu4,QThread,3] __stack_chk_fail+0x2c/0x38\n[ 66.575500s] [pid:5118,cpu4,QThread,4] do_hardware_base_addr+0xcc/0xd0 [parport]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42305",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: check dot and dotdot of dx_root before making dir indexed\n\nSyzbot reports a issue as follows:\n============================================\nBUG: unable to handle page fault for address: ffffed11022e24fe\nPGD 23ffee067 P4D 23ffee067 PUD 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 0 PID: 5079 Comm: syz-executor306 Not tainted 6.10.0-rc5-g55027e689933 #0\nCall Trace:\n \u003cTASK\u003e\n make_indexed_dir+0xdaf/0x13c0 fs/ext4/namei.c:2341\n ext4_add_entry+0x222a/0x25d0 fs/ext4/namei.c:2451\n ext4_rename fs/ext4/namei.c:3936 [inline]\n ext4_rename2+0x26e5/0x4370 fs/ext4/namei.c:4214\n[...]\n============================================\n\nThe immediate cause of this problem is that there is only one valid dentry\nfor the block to be split during do_split, so split==0 results in out of\nbounds accesses to the map triggering the issue.\n\n    do_split\n      unsigned split\n      dx_make_map\n       count = 1\n      split = count/2 = 0;\n      continued = hash2 == map[split - 1].hash;\n       ---\u003e map[4294967295]\n\nThe maximum length of a filename is 255 and the minimum block size is 1024,\nso it is always guaranteed that the number of entries is greater than or\nequal to 2 when do_split() is called.\n\nBut syzbot's crafted image has no dot and dotdot in dir, and the dentry\ndistribution in dirblock is as follows:\n\n  bus     dentry1          hole           dentry2           free\n|xx--|xx-------------|...............|xx-------------|...............|\n0   12 (8+248)=256  268     256     524 (8+256)=264 788     236     1024\n\nSo when renaming dentry1 increases its name_len length by 1, neither hole\nnor free is sufficient to hold the new dentry, and make_indexed_dir() is\ncalled.\n\nIn make_indexed_dir() it is assumed that the first two entries of the\ndirblock must be dot and dotdot, so bus and dentry1 are left in dx_root\nbecause they are treated as dot and dotdot, and only dentry2 is moved\nto the new leaf block. That's why count is equal to 1.\n\nTherefore add the ext4_check_dx_root() helper function to add more sanity\nchecks to dot and dotdot before starting the conversion to avoid the above\nissue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42306",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Avoid using corrupted block bitmap buffer\n\nWhen the filesystem block bitmap is corrupted, we detect the corruption\nwhile loading the bitmap and fail the allocation with error. However the\nnext allocation from the same bitmap will notice the bitmap buffer is\nalready loaded and tries to allocate from the bitmap with mixed results\n(depending on the exact nature of the bitmap corruption). Fix the\nproblem by using BH_verified bit to indicate whether the bitmap is valid\nor not.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42309",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/gma500: fix null pointer dereference in psb_intel_lvds_get_modes\n\nIn psb_intel_lvds_get_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a possible NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42310",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/gma500: fix null pointer dereference in cdv_intel_lvds_get_modes\n\nIn cdv_intel_lvds_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference on\nfailure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42312",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: always initialize i_uid/i_gid\n\nAlways initialize i_uid/i_gid inside the sysfs core so set_ownership()\ncan safely skip setting them.\n\nCommit 5ec27ec735ba (\"fs/proc/proc_sysctl.c: fix the default values of\ni_uid/i_gid on /proc/sys inodes.\") added defaults for i_uid/i_gid when\nset_ownership() was not implemented. It also missed adjusting\nnet_ctl_set_ownership() to use the same default values in case the\ncomputation of a better value failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42322",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvs: properly dereference pe in ip_vs_add_service\n\nUse pe directly to resolve sparse warning:\n\n  net/netfilter/ipvs/ip_vs_ctl.c:1471:27: warning: dereference of noderef expression",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42934",
      "Description": "OpenIPMI before 2.0.36 has an out-of-bounds array access (for authentication type) in the ipmi_sim simulator, resulting in denial of service or (with very low probability) authentication bypass or code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:OpenIPMI-2.0.21-10.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkvm: s390: Reject memory region operations for ucontrol VMs\n\nThis change rejects the KVM_SET_USER_MEMORY_REGION and\nKVM_SET_USER_MEMORY_REGION2 ioctls when called on a ucontrol VM.\nThis is necessary since ucontrol VMs have kvm-\u003earch.gmap set to 0 and\nwould thus result in a null pointer dereference further in.\nMemory management needs to be performed in userspace and using the\nioctls KVM_S390_UCAS_MAP and KVM_S390_UCAS_UNMAP.\n\nAlso improve s390 specific documentation for KVM_SET_USER_MEMORY_REGION\nand KVM_SET_USER_MEMORY_REGION2.\n\n[frankja@linux.ibm.com: commit message spelling fix, subject prefix fix]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43831",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Handle invalid decoder vsi\n\nHandle an invalid decoder vsi in vpu_dec_init to ensure the decoder vsi\nis valid for future use.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43839",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbna: adjust 'name' buf size of bna_tcb and bna_ccb structures\n\nTo have enough space to write all possible sprintf() args. Currently\n'name' size is 16, but the first '%s' specifier may already need at\nleast 16 characters, since 'bnad-\u003enetdev-\u003ename' is used there.\n\nFor '%d' specifiers, assume that they require:\n * 1 char for 'tx_id + tx_info-\u003etcb[i]-\u003eid' sum, BNAD_MAX_TXQ_PER_TX is 8\n * 2 chars for 'rx_id + rx_info-\u003erx_ctrl[i].ccb-\u003eid', BNAD_MAX_RXP_PER_RX\n   is 16\n\nAnd replace sprintf with snprintf.\n\nDetected using the static analysis tool - Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncgroup/cpuset: Prevent UAF in proc_cpuset_show()\n\nAn UAF can happen when /proc/cpuset is read as reported in [1].\n\nThis can be reproduced by the following methods:\n1.add an mdelay(1000) before acquiring the cgroup_lock In the\n cgroup_path_ns function.\n2.$cat /proc/\u003cpid\u003e/cpuset   repeatly.\n3.$mount -t cgroup -o cpuset cpuset /sys/fs/cgroup/cpuset/\n$umount /sys/fs/cgroup/cpuset/   repeatly.\n\nThe race that cause this bug can be shown as below:\n\n(umount)\t\t|\t(cat /proc/\u003cpid\u003e/cpuset)\ncss_release\t\t|\tproc_cpuset_show\ncss_release_work_fn\t|\tcss = task_get_css(tsk, cpuset_cgrp_id);\ncss_free_rwork_fn\t|\tcgroup_path_ns(css-\u003ecgroup, ...);\ncgroup_destroy_root\t|\tmutex_lock(\u0026cgroup_mutex);\nrebind_subsystems\t|\ncgroup_free_root \t|\n\t\t\t|\t// cgrp was freed, UAF\n\t\t\t|\tcgroup_path_ns_locked(cgrp,..);\n\nWhen the cpuset is initialized, the root node top_cpuset.css.cgrp\nwill point to \u0026cgrp_dfl_root.cgrp. In cgroup v1, the mount operation will\nallocate cgroup_root, and top_cpuset.css.cgrp will point to the allocated\n\u0026cgroup_root.cgrp. When the umount operation is executed,\ntop_cpuset.css.cgrp will be rebound to \u0026cgrp_dfl_root.cgrp.\n\nThe problem is that when rebinding to cgrp_dfl_root, there are cases\nwhere the cgroup_root allocated by setting up the root for cgroup v1\nis cached. This could lead to a Use-After-Free (UAF) if it is\nsubsequently freed. The descendant cgroups of cgroup v1 can only be\nfreed after the css is released. However, the css of the root will never\nbe released, yet the cgroup_root should be freed when it is unmounted.\nThis means that obtaining a reference to the css of the root does\nnot guarantee that css.cgrp-\u003eroot will not be freed.\n\nFix this problem by using rcu_read_lock in proc_cpuset_show().\nAs cgroup_root is kfree_rcu after commit d23b5c577715\n(\"cgroup: Make operations on the cgroup root_list RCU safe\"),\ncss-\u003ecgroup won't be freed during the critical section.\nTo call cgroup_path_ns_locked, css_set_lock is needed, so it is safe to\nreplace task_get_css with task_css.\n\n[1] https://syzkaller.appspot.com/bug?extid=9b1ff7be974a403aa4cd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: initialize integrity buffer to zero before writing it to media\n\nMetadata added by bio_integrity_prep is using plain kmalloc, which leads\nto random kernel memory being written media.  For PI metadata this is\nlimited to the app tag that isn't used by kernel generated metadata,\nbut for non-PI metadata the entire buffer leaks kernel memory.\n\nFix this by adding the __GFP_ZERO flag to allocations for writes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43856",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma: fix call order in dmam_free_coherent\n\ndmam_free_coherent() frees a DMA allocation, which makes the\nfreed vaddr available for reuse, then calls devres_destroy()\nto remove and free the data structure used to track the DMA\nallocation. Between the two calls, it is possible for a\nconcurrent task to make an allocation with the same vaddr\nand add it to the devres list.\n\nIf this happens, there will be two entries in the devres list\nwith the same vaddr and devres_destroy() can free the wrong\nentry, triggering the WARN_ON() in dmam_match.\n\nFix by destroying the devres entry before freeing the DMA\nallocation.\n\n  kokonut //net/encryption\n    http://sponge2/b9145fe6-0f72-4325-ac2f-a84d81075b03",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: qmi_wwan: fix memory leak for not ip packets\n\nFree the unused skb when not ip packets arrive.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix a deadlock in dma buf fence polling\n\nIntroduce a version of the fence ops that on release doesn't remove\nthe fence from the pending list, and thus doesn't require a lock to\nfix poll-\u003efence wait-\u003efence unref deadlocks.\n\nvmwgfx overwrites the wait callback to iterate over the list of all\nfences and update their status, to do that it holds a lock to prevent\nthe list modifcations from other threads. The fence destroy callback\nboth deletes the fence and removes it from the list of pending\nfences, for which it holds a lock.\n\ndma buf polling cb unrefs a fence after it's been signaled: so the poll\ncalls the wait, which signals the fences, which are being destroyed.\nThe destruction tries to acquire the lock on the pending fences list\nwhich it can never get because it's held by the wait from which it\nwas called.\n\nOld bug, but not a lot of userspace apps were using dma-buf polling\ninterfaces. Fix those, in particular this fixes KDE stalls/deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43866",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Always drain health in shutdown callback\n\nThere is no point in recovery during device shutdown. if health\nwork started need to wait for it to avoid races and NULL pointer\naccess.\n\nHence, drain health WQ on shutdown callback.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43871",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndevres: Fix memory leakage caused by driver API devm_free_percpu()\n\nIt will cause memory leakage when use driver API devm_free_percpu()\nto free memory allocated by devm_alloc_percpu(), fixed by using\ndevres_release() instead of devres_destroy() within devm_free_percpu().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43872",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Fix soft lockup under heavy CEQE load\n\nCEQEs are handled in interrupt handler currently. This may cause the\nCPU core staying in interrupt context too long and lead to soft lockup\nunder heavy load.\n\nHandle CEQEs in BH workqueue and set an upper limit for the number of\nCEQE handled by a single call of work handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43879",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: handle 2x996 RU allocation in cfg80211_calculate_bitrate_he()\n\nCurrently NL80211_RATE_INFO_HE_RU_ALLOC_2x996 is not handled in\ncfg80211_calculate_bitrate_he(), leading to below warning:\n\nkernel: invalid HE MCS: bw:6, ru:6\nkernel: WARNING: CPU: 0 PID: 2312 at net/wireless/util.c:1501 cfg80211_calculate_bitrate_he+0x22b/0x270 [cfg80211]\n\nFix it by handling 2x996 RU allocation in the same way as 160 MHz bandwidth.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43882",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nexec: Fix ToCToU between perm check and set-uid/gid usage\n\nWhen opening a file for exec via do_filp_open(), permission checking is\ndone against the file's metadata at that moment, and on success, a file\npointer is passed back. Much later in the execve() code path, the file\nmetadata (specifically mode, uid, and gid) is used to determine if/how\nto set the uid and gid. However, those values may have changed since the\npermissions check, meaning the execution may gain unintended privileges.\n\nFor example, if a file could change permissions from executable and not\nset-id:\n\n---------x 1 root root 16048 Aug  7 13:16 target\n\nto set-id and non-executable:\n\n---S------ 1 root root 16048 Aug  7 13:16 target\n\nit is possible to gain root privileges when execution should have been\ndisallowed.\n\nWhile this race condition is rare in real-world scenarios, it has been\nobserved (and proven exploitable) when package managers are updating\nthe setuid bits of installed programs. Such files start with being\nworld-executable but then are adjusted to be group-exec with a set-uid\nbit. For example, \"chmod o-x,u+s target\" makes \"target\" executable only\nby uid \"root\" and gid \"cdrom\", while also becoming setuid-root:\n\n-rwxr-xr-x 1 root cdrom 16048 Aug  7 13:16 target\n\nbecomes:\n\n-rwsr-xr-- 1 root cdrom 16048 Aug  7 13:16 target\n\nBut racing the chmod means users without group \"cdrom\" membership can\nget the permission to execute \"target\" just before the chmod, and when\nthe chmod finishes, the exec reaches brpm_fill_uid(), and performs the\nsetuid to root, violating the expressed authorization of \"only cdrom\ngroup members can setuid to root\".\n\nRe-check that we still have execute permissions in case the metadata\nhas changed. It would be better to keep a copy from the perm-check time,\nbut until we can do that refactoring, the least-bad option is to do a\nfull inode_permission() call (under inode lock). It is understood that\nthis is safe against dead-locks, but hardly optimal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43883",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: vhci-hcd: Do not drop references before new references are gained\n\nAt a few places the driver carries stale pointers\nto references that can still be used. Make sure that does not happen.\nThis strictly speaking closes ZDI-CAN-22273, though there may be\nsimilar races in the driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Add error handling to pair_device()\n\nhci_conn_params_add() never checks for a NULL value and could lead to a NULL\npointer dereference causing a crash.\n\nFixed by adding error handling in the function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix overflow in get_free_elt()\n\n\"tracing_map-\u003enext_elt\" in get_free_elt() is at risk of overflowing.\n\nOnce it overflows, new elements can still be inserted into the tracing_map\neven though the maximum number of elements (`max_elts`) has been reached.\nContinuing to insert elements after the overflow could result in the\ntracing_map containing \"tracing_map-\u003emax_size\" elements, leaving no empty\nentries.\nIf any attempt is made to insert an element into a full tracing_map using\n`__tracing_map_insert()`, it will cause an infinite loop with preemption\ndisabled, leading to a CPU hang problem.\n\nFix this by preventing any further increments to \"tracing_map-\u003enext_elt\"\nonce it reaches \"tracing_map-\u003emax_elt\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43892",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg: protect concurrent access to mem_cgroup_idr\n\nCommit 73f576c04b94 (\"mm: memcontrol: fix cgroup creation failure after\nmany small jobs\") decoupled the memcg IDs from the CSS ID space to fix the\ncgroup creation failures.  It introduced IDR to maintain the memcg ID\nspace.  The IDR depends on external synchronization mechanisms for\nmodifications.  For the mem_cgroup_idr, the idr_alloc() and idr_replace()\nhappen within css callback and thus are protected through cgroup_mutex\nfrom concurrent modifications.  However idr_remove() for mem_cgroup_idr\nwas not protected against concurrency and can be run concurrently for\ndifferent memcgs when they hit their refcnt to zero.  Fix that.\n\nWe have been seeing list_lru based kernel crashes at a low frequency in\nour fleet for a long time.  These crashes were in different part of\nlist_lru code including list_lru_add(), list_lru_del() and reparenting\ncode.  Upon further inspection, it looked like for a given object (dentry\nand inode), the super_block's list_lru didn't have list_lru_one for the\nmemcg of that object.  The initial suspicions were either the object is\nnot allocated through kmem_cache_alloc_lru() or somehow\nmemcg_list_lru_alloc() failed to allocate list_lru_one() for a memcg but\nreturned success.  No evidence were found for these cases.\n\nLooking more deeply, we started seeing situations where valid memcg's id\nis not present in mem_cgroup_idr and in some cases multiple valid memcgs\nhave same id and mem_cgroup_idr is pointing to one of them.  So, the most\nreasonable explanation is that these situations can happen due to race\nbetween multiple idr_remove() calls or race between\nidr_alloc()/idr_replace() and idr_remove().  These races are causing\nmultiple memcgs to acquire the same ID and then offlining of one of them\nwould cleanup list_lrus on the system for all of them.  Later access from\nother memcgs to the list_lru cause crashes due to missing list_lru_one.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: core: check uartclk for zero to avoid divide by zero\n\nCalling ioctl TIOCSSERIAL with an invalid baud_base can\nresult in uartclk being zero, which will result in a\ndivide by zero error in uart_get_divisor(). The check for\nuartclk being zero in uart_set_info() needs to be done\nbefore other settings are made as subsequent calls to\nioctl TIOCSSERIAL for the same port would be impacted if\nthe uartclk check was done where uartclk gets set.\n\nOops: divide error: 0000  PREEMPT SMP KASAN PTI\nRIP: 0010:uart_get_divisor (drivers/tty/serial/serial_core.c:580)\nCall Trace:\n \u003cTASK\u003e\nserial8250_get_divisor (drivers/tty/serial/8250/8250_port.c:2576\n    drivers/tty/serial/8250/8250_port.c:2589)\nserial8250_do_set_termios (drivers/tty/serial/8250/8250_port.c:502\n    drivers/tty/serial/8250/8250_port.c:2741)\nserial8250_set_termios (drivers/tty/serial/8250/8250_port.c:2862)\nuart_change_line_settings (./include/linux/spinlock.h:376\n    ./include/linux/serial_core.h:608 drivers/tty/serial/serial_core.c:222)\nuart_port_startup (drivers/tty/serial/serial_core.c:342)\nuart_startup (drivers/tty/serial/serial_core.c:368)\nuart_set_info (drivers/tty/serial/serial_core.c:1034)\nuart_set_info_user (drivers/tty/serial/serial_core.c:1059)\ntty_set_serial (drivers/tty/tty_io.c:2637)\ntty_ioctl (drivers/tty/tty_io.c:2647 drivers/tty/tty_io.c:2791)\n__x64_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:907\n    fs/ioctl.c:893 fs/ioctl.c:893)\ndo_syscall_64 (arch/x86/entry/common.c:52\n    (discriminator 1) arch/x86/entry/common.c:83 (discriminator 1))\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nRule: add",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43898",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: xc2028: avoid use-after-free in load_firmware_cb()\n\nsyzkaller reported use-after-free in load_firmware_cb() [1].\nThe reason is because the module allocated a struct tuner in tuner_probe(),\nand then the module initialization failed, the struct tuner was released.\nA worker which created during module initialization accesses this struct\ntuner later, it caused use-after-free.\n\nThe process is as follows:\n\ntask-6504           worker_thread\ntuner_probe                             \u003c= alloc dvb_frontend [2]\n...\nrequest_firmware_nowait                 \u003c= create a worker\n...\ntuner_remove                            \u003c= free dvb_frontend\n...\n                    request_firmware_work_func  \u003c= the firmware is ready\n                    load_firmware_cb    \u003c= but now the dvb_frontend has been freed\n\nTo fix the issue, check the dvd_frontend in load_firmware_cb(), if it is\nnull, report a warning and just return.\n\n[1]:\n    ==================================================================\n     BUG: KASAN: use-after-free in load_firmware_cb+0x1310/0x17a0\n     Read of size 8 at addr ffff8000d7ca2308 by task kworker/2:3/6504\n\n     Call trace:\n      load_firmware_cb+0x1310/0x17a0\n      request_firmware_work_func+0x128/0x220\n      process_one_work+0x770/0x1824\n      worker_thread+0x488/0xea0\n      kthread+0x300/0x430\n      ret_from_fork+0x10/0x20\n\n     Allocated by task 6504:\n      kzalloc\n      tuner_probe+0xb0/0x1430\n      i2c_device_probe+0x92c/0xaf0\n      really_probe+0x678/0xcd0\n      driver_probe_device+0x280/0x370\n      __device_attach_driver+0x220/0x330\n      bus_for_each_drv+0x134/0x1c0\n      __device_attach+0x1f4/0x410\n      device_initial_probe+0x20/0x30\n      bus_probe_device+0x184/0x200\n      device_add+0x924/0x12c0\n      device_register+0x24/0x30\n      i2c_new_device+0x4e0/0xc44\n      v4l2_i2c_new_subdev_board+0xbc/0x290\n      v4l2_i2c_new_subdev+0xc8/0x104\n      em28xx_v4l2_init+0x1dd0/0x3770\n\n     Freed by task 6504:\n      kfree+0x238/0x4e4\n      tuner_remove+0x144/0x1c0\n      i2c_device_remove+0xc8/0x290\n      __device_release_driver+0x314/0x5fc\n      device_release_driver+0x30/0x44\n      bus_remove_device+0x244/0x490\n      device_del+0x350/0x900\n      device_unregister+0x28/0xd0\n      i2c_unregister_device+0x174/0x1d0\n      v4l2_device_unregister+0x224/0x380\n      em28xx_v4l2_init+0x1d90/0x3770\n\n     The buggy address belongs to the object at ffff8000d7ca2000\n      which belongs to the cache kmalloc-2k of size 2048\n     The buggy address is located 776 bytes inside of\n      2048-byte region [ffff8000d7ca2000, ffff8000d7ca2800)\n     The buggy address belongs to the page:\n     page:ffff7fe00035f280 count:1 mapcount:0 mapping:ffff8000c001f000 index:0x0\n     flags: 0x7ff800000000100(slab)\n     raw: 07ff800000000100 ffff7fe00049d880 0000000300000003 ffff8000c001f000\n     raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000\n     page dumped because: kasan: bad access detected\n\n     Memory state around the buggy address:\n      ffff8000d7ca2200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n      ffff8000d7ca2280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n     \u003effff8000d7ca2300: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                           ^\n      ffff8000d7ca2380: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n      ffff8000d7ca2400: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n     ==================================================================\n\n[2]\n    Actually, it is allocated for struct tuner, and dvb_frontend is inside.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43902",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add null checker before passing variables\n\nChecks null pointer before passing variables to functions.\n\nThis fixes 3 NULL_RETURNS issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add null checks for 'stream' and 'plane' before dereferencing\n\nThis commit adds null checks for the 'stream' and 'plane' variables in\nthe dcn30_apply_idle_power_optimizations function. These variables were\npreviously assumed to be null at line 922, but they were used later in\nthe code without checking if they were null. This could potentially lead\nto a null pointer dereference, which would cause a crash.\n\nThe null checks ensure that 'stream' and 'plane' are not null before\nthey are used, preventing potential crashes.\n\nFixes the below static smatch checker:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:938 dcn30_apply_idle_power_optimizations() error: we previously assumed 'stream' could be null (see line 922)\ndrivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:940 dcn30_apply_idle_power_optimizations() error: we previously assumed 'plane' could be null (see line 922)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Fix the null pointer dereference for vega10_hwmgr\n\nCheck return value and conduct null pointer handling to avoid null pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/pm: Fix the null pointer dereference in apply_state_adjust_rules\n\nCheck the pointer value to fix potential null pointer\ndereference",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43912",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: disallow setting special AP channel widths\n\nSetting the AP channel width is meant for use with the normal\n20/40/... MHz channel width progression, and switching around\nin S1G or narrow channels isn't supported. Disallow that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43914",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid5: avoid BUG_ON() while continue reshape after reassembling\n\nCurrently, mdadm support --revert-reshape to abort the reshape while\nreassembling, as the test 07revert-grow. However, following BUG_ON()\ncan be triggerred by the test:\n\nkernel BUG at drivers/md/raid5.c:6278!\ninvalid opcode: 0000 [#1] PREEMPT SMP PTI\nirq event stamp: 158985\nCPU: 6 PID: 891 Comm: md0_reshape Not tainted 6.9.0-03335-g7592a0b0049a #94\nRIP: 0010:reshape_request+0x3f1/0xe60\nCall Trace:\n \u003cTASK\u003e\n raid5_sync_request+0x43d/0x550\n md_do_sync+0xb7a/0x2110\n md_thread+0x294/0x2b0\n kthread+0x147/0x1c0\n ret_from_fork+0x59/0x70\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nRoot cause is that --revert-reshape update the raid_disks from 5 to 4,\nwhile reshape position is still set, and after reassembling the array,\nreshape position will be read from super block, then during reshape the\nchecking of 'writepos' that is caculated by old reshape position will\nfail.\n\nFix this panic the easy way first, by converting the BUG_ON() to\nWARN_ON(), and stop the reshape if checkings fail.\n\nNoted that mdadm must fix --revert-shape as well, and probably md/raid\nshould enhance metadata validation as well, however this means\nreassemble will fail and there must be user tools to fix the wrong\nmetadata.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkcm: Serialise kcm_sendmsg() for the same socket.\n\nsyzkaller reported UAF in kcm_release(). [0]\n\nThe scenario is\n\n  1. Thread A builds a skb with MSG_MORE and sets kcm-\u003eseq_skb.\n\n  2. Thread A resumes building skb from kcm-\u003eseq_skb but is blocked\n     by sk_stream_wait_memory()\n\n  3. Thread B calls sendmsg() concurrently, finishes building kcm-\u003eseq_skb\n     and puts the skb to the write queue\n\n  4. Thread A faces an error and finally frees skb that is already in the\n     write queue\n\n  5. kcm_release() does double-free the skb in the write queue\n\nWhen a thread is building a MSG_MORE skb, another thread must not touch it.\n\nLet's add a per-sk mutex and serialise kcm_sendmsg().\n\n[0]:\nBUG: KASAN: slab-use-after-free in __skb_unlink include/linux/skbuff.h:2366 [inline]\nBUG: KASAN: slab-use-after-free in __skb_dequeue include/linux/skbuff.h:2385 [inline]\nBUG: KASAN: slab-use-after-free in __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]\nBUG: KASAN: slab-use-after-free in __skb_queue_purge include/linux/skbuff.h:3181 [inline]\nBUG: KASAN: slab-use-after-free in kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691\nRead of size 8 at addr ffff0000ced0fc80 by task syz-executor329/6167\n\nCPU: 1 PID: 6167 Comm: syz-executor329 Tainted: G    B              6.8.0-rc5-syzkaller-g9abbc24128bc #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nCall trace:\n dump_backtrace+0x1b8/0x1e4 arch/arm64/kernel/stacktrace.c:291\n show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:298\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd0/0x124 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:377 [inline]\n print_report+0x178/0x518 mm/kasan/report.c:488\n kasan_report+0xd8/0x138 mm/kasan/report.c:601\n __asan_report_load8_noabort+0x20/0x2c mm/kasan/report_generic.c:381\n __skb_unlink include/linux/skbuff.h:2366 [inline]\n __skb_dequeue include/linux/skbuff.h:2385 [inline]\n __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]\n __skb_queue_purge include/linux/skbuff.h:3181 [inline]\n kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691\n __sock_release net/socket.c:659 [inline]\n sock_close+0xa4/0x1e8 net/socket.c:1421\n __fput+0x30c/0x738 fs/file_table.c:376\n ____fput+0x20/0x30 fs/file_table.c:404\n task_work_run+0x230/0x2e0 kernel/task_work.c:180\n exit_task_work include/linux/task_work.h:38 [inline]\n do_exit+0x618/0x1f64 kernel/exit.c:871\n do_group_exit+0x194/0x22c kernel/exit.c:1020\n get_signal+0x1500/0x15ec kernel/signal.c:2893\n do_signal+0x23c/0x3b44 arch/arm64/kernel/signal.c:1249\n do_notify_resume+0x74/0x1f4 arch/arm64/kernel/entry-common.c:148\n exit_to_user_mode_prepare arch/arm64/kernel/entry-common.c:169 [inline]\n exit_to_user_mode arch/arm64/kernel/entry-common.c:178 [inline]\n el0_svc+0xac/0x168 arch/arm64/kernel/entry-common.c:713\n el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:730\n el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:598\n\nAllocated by task 6166:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x40/0x78 mm/kasan/common.c:68\n kasan_save_alloc_info+0x70/0x84 mm/kasan/generic.c:626\n unpoison_slab_object mm/kasan/common.c:314 [inline]\n __kasan_slab_alloc+0x74/0x8c mm/kasan/common.c:340\n kasan_slab_alloc include/linux/kasan.h:201 [inline]\n slab_post_alloc_hook mm/slub.c:3813 [inline]\n slab_alloc_node mm/slub.c:3860 [inline]\n kmem_cache_alloc_node+0x204/0x4c0 mm/slub.c:3903\n __alloc_skb+0x19c/0x3d8 net/core/skbuff.c:641\n alloc_skb include/linux/skbuff.h:1296 [inline]\n kcm_sendmsg+0x1d3c/0x2124 net/kcm/kcmsock.c:783\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n sock_sendmsg+0x220/0x2c0 net/socket.c:768\n splice_to_socket+0x7cc/0xd58 fs/splice.c:889\n do_splice_from fs/splice.c:941 [inline]\n direct_splice_actor+0xec/0x1d8 fs/splice.c:1164\n splice_direct_to_actor+0x438/0xa0c fs/splice.c:1108\n do_splice_direct_actor \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfuse: Initialize beyond-EOF page contents before setting uptodate\n\nfuse_notify_store(), unlike fuse_do_readpage(), does not enable page\nzeroing (because it can be used to change partial page contents).\n\nSo fuse_notify_store() must be more careful to fully initialize page\ncontents (including parts of the page that are beyond end-of-file)\nbefore marking the page uptodate.\n\nThe current code can leave beyond-EOF page contents uninitialized, which\nmakes these uninitialized page contents visible to userspace via mmap().\n\nThis is an information leak, but only affects systems which do not\nenable init-on-alloc (via CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y or the\ncorresponding kernel command line parameter).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mtrr: Check if fixed MTRRs exist before saving them\n\nMTRRs have an obsolete fixed variant for fine grained caching control\nof the 640K-1MB region that uses separate MSRs. This fixed variant has\na separate capability bit in the MTRR capability MSR.\n\nSo far all x86 CPUs which support MTRR have this separate bit set, so it\nwent unnoticed that mtrr_save_state() does not check the capability bit\nbefore accessing the fixed MTRR MSRs.\n\nThough on a CPU that does not support the fixed MTRR capability this\nresults in a #GP.  The #GP itself is harmless because the RDMSR fault is\nhandled gracefully, but results in a WARN_ON().\n\nAdd the missing capability check to prevent this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: fix invalid FIFO access with special register set\n\nWhen enabling access to the special register set, Receiver time-out and\nRHR interrupts can happen. In this case, the IRQ handler will try to read\nfrom the FIFO thru the RHR register at address 0x00, but address 0x00 is\nmapped to DLL register, resulting in erroneous FIFO reading.\n\nCall graph example:\n    sc16is7xx_startup(): entry\n    sc16is7xx_ms_proc(): entry\n    sc16is7xx_set_termios(): entry\n    sc16is7xx_set_baud(): DLH/DLL = $009C --\u003e access special register set\n    sc16is7xx_port_irq() entry            --\u003e IIR is 0x0C\n    sc16is7xx_handle_rx() entry\n    sc16is7xx_fifo_read(): --\u003e unable to access FIFO (RHR) because it is\n                               mapped to DLL (LCR=LCR_CONF_MODE_A)\n    sc16is7xx_set_baud(): exit --\u003e Restore access to general register set\n\nFix the problem by claiming the efr_lock mutex when accessing the Special\nregister set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44952",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44954",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: line6: Fix racy access to midibuf\n\nThere can be concurrent accesses to line6 midibuf from both the URB\ncompletion callback and the rawmidi API access.  This could be a cause\nof KMSAN warning triggered by syzkaller below (so put as reported-by\nhere).\n\nThis patch protects the midibuf call of the former code path with a\nspinlock for avoiding the possible races.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/sclp: Prevent release of buffer in I/O\n\nWhen a task waiting for completion of a Store Data operation is\ninterrupted, an attempt is made to halt this operation. If this attempt\nfails due to a hardware or firmware problem, there is a chance that the\nSCLP facility might store data into buffers referenced by the original\noperation at a later time.\n\nHandle this situation by not releasing the referenced data buffers if\nthe halt attempt fails. For current use cases, this might result in a\nleak of few pages of memory in case of a rare hardware/firmware\nmalfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44972",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not clear page dirty inside extent_write_locked_range()\n\n[BUG]\nFor subpage + zoned case, the following workload can lead to rsv data\nleak at unmount time:\n\n  # mkfs.btrfs -f -s 4k $dev\n  # mount $dev $mnt\n  # fsstress -w -n 8 -d $mnt -s 1709539240\n  0/0: fiemap - no filename\n  0/1: copyrange read - no filename\n  0/2: write - no filename\n  0/3: rename - no source filename\n  0/4: creat f0 x:0 0 0\n  0/4: creat add id=0,parent=-1\n  0/5: writev f0[259 1 0 0 0 0] [778052,113,965] 0\n  0/6: ioctl(FIEMAP) f0[259 1 0 0 224 887097] [1294220,2291618343991484791,0x10000] -1\n  0/7: dwrite - xfsctl(XFS_IOC_DIOINFO) f0[259 1 0 0 224 887097] return 25, fallback to stat()\n  0/7: dwrite f0[259 1 0 0 224 887097] [696320,102400] 0\n  # umount $mnt\n\nThe dmesg includes the following rsv leak detection warning (all call\ntrace skipped):\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8653 btrfs_destroy_inode+0x1e0/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8654 btrfs_destroy_inode+0x1a8/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  ------------[ cut here ]------------\n  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8660 btrfs_destroy_inode+0x1a0/0x200 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): last unmount of filesystem 1b4abba9-de34-4f07-9e7f-157cf12a18d6\n  ------------[ cut here ]------------\n  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): space_info DATA has 268218368 free, is not full\n  BTRFS info (device sda): space_info total=268435456, used=204800, pinned=0, reserved=0, may_use=12288, readonly=0 zone_unusable=0\n  BTRFS info (device sda): global_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0\n  ------------[ cut here ]------------\n  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]\n  ---[ end trace 0000000000000000 ]---\n  BTRFS info (device sda): space_info METADATA has 267796480 free, is not full\n  BTRFS info (device sda): space_info total=268435456, used=131072, pinned=0, reserved=0, may_use=262144, readonly=0 zone_unusable=245760\n  BTRFS info (device sda): global_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0\n  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0\n\nAbove $dev is a tcmu-runner emulated zoned HDD, which has a max zone\nappend size of 64K, and the system has 64K page size.\n\n[CAUSE]\nI have added several trace_printk() to show the events (header skipped):\n\n  \u003e btrfs_dirty_pages: r/i=5/259 dirty start=774144 len=114688\n  \u003e btrfs_dirty_pages: r/i=5/259 dirty part of page=720896 off_in_page=53248 len_in_page=12288\n  \u003e btrfs_dirty_pages: r/i=5/259 dirty part of page=786432 off_in_page=0 len_in_page=65536\n  \u003e btrfs_dirty_pages: r/i=5/259 dirty part of page=851968 off_in_page=0 len_in_page=36864\n\nThe above lines show our buffered write has dirtied 3 pages of inode\n259 of root 5:\n\n  704K             768K              832K              896K\n  I           |////I/////////////////I///////////|     I\n              756K                               868K\n\n  |///| is the dirtied range using subpage bitmaps. and 'I' is the page\n  boundary.\n\n  Meanwhile all three pages (704K, 768K, 832K) have their PageDirty\n  flag set.\n\n  \u003e btrfs_direct_write: r/i=5/259 start dio filepos=696320 len=102400\n\nThen direct IO writ\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/dpu: cleanup FB if dpu_format_populate_layout fails\n\nIf the dpu_format_populate_layout() fails, then FB is prepared, but not\ncleaned up. This ends up leaking the pin_count on the GEM object and\ncauses a splat during DRM file closure:\n\nmsm_obj-\u003epin_count\nWARNING: CPU: 2 PID: 569 at drivers/gpu/drm/msm/msm_gem.c:121 update_lru_locked+0xc4/0xcc\n[...]\nCall trace:\n update_lru_locked+0xc4/0xcc\n put_pages+0xac/0x100\n msm_gem_free_object+0x138/0x180\n drm_gem_object_free+0x1c/0x30\n drm_gem_object_handle_put_unlocked+0x108/0x10c\n drm_gem_object_release_handle+0x58/0x70\n idr_for_each+0x68/0xec\n drm_gem_release+0x28/0x40\n drm_file_free+0x174/0x234\n drm_release+0xb0/0x160\n __fput+0xc0/0x2c8\n __fput_sync+0x50/0x5c\n __arm64_sys_close+0x38/0x7c\n invoke_syscall+0x48/0x118\n el0_svc_common.constprop.0+0x40/0xe0\n do_el0_svc+0x1c/0x28\n el0_svc+0x4c/0x120\n el0t_64_sync_handler+0x100/0x12c\n el0t_64_sync+0x190/0x194\nirq event stamp: 129818\nhardirqs last  enabled at (129817): [\u003cffffa5f6d953fcc0\u003e] console_unlock+0x118/0x124\nhardirqs last disabled at (129818): [\u003cffffa5f6da7dcf04\u003e] el1_dbg+0x24/0x8c\nsoftirqs last  enabled at (129808): [\u003cffffa5f6d94afc18\u003e] handle_softirqs+0x4c8/0x4e8\nsoftirqs last disabled at (129785): [\u003cffffa5f6d94105e4\u003e] __do_softirq+0x14/0x20\n\nPatchwork: https://patchwork.freedesktop.org/patch/600714/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44987",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: prevent UAF in ip6_send_skb()\n\nsyzbot reported an UAF in ip6_send_skb() [1]\n\nAfter ip6_local_out() has returned, we no longer can safely\ndereference rt, unless we hold rcu_read_lock().\n\nA similar issue has been fixed in commit\na688caa34beb (\"ipv6: take rcu lock in rawv6_send_hdrinc()\")\n\nAnother potential issue in ip6_finish_output2() is handled in a\nseparate patch.\n\n[1]\n BUG: KASAN: slab-use-after-free in ip6_send_skb+0x18d/0x230 net/ipv6/ip6_output.c:1964\nRead of size 8 at addr ffff88806dde4858 by task syz.1.380/6530\n\nCPU: 1 UID: 0 PID: 6530 Comm: syz.1.380 Not tainted 6.11.0-rc3-syzkaller-00306-gdf6cbc62cc9b #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:93 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  ip6_send_skb+0x18d/0x230 net/ipv6/ip6_output.c:1964\n  rawv6_push_pending_frames+0x75c/0x9e0 net/ipv6/raw.c:588\n  rawv6_sendmsg+0x19c7/0x23c0 net/ipv6/raw.c:926\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x1a6/0x270 net/socket.c:745\n  sock_write_iter+0x2dd/0x400 net/socket.c:1160\n do_iter_readv_writev+0x60a/0x890\n  vfs_writev+0x37c/0xbb0 fs/read_write.c:971\n  do_writev+0x1b1/0x350 fs/read_write.c:1018\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f936bf79e79\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f936cd7f038 EFLAGS: 00000246 ORIG_RAX: 0000000000000014\nRAX: ffffffffffffffda RBX: 00007f936c115f80 RCX: 00007f936bf79e79\nRDX: 0000000000000001 RSI: 0000000020000040 RDI: 0000000000000004\nRBP: 00007f936bfe7916 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007f936c115f80 R15: 00007fff2860a7a8\n \u003c/TASK\u003e\n\nAllocated by task 6530:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  unpoison_slab_object mm/kasan/common.c:312 [inline]\n  __kasan_slab_alloc+0x66/0x80 mm/kasan/common.c:338\n  kasan_slab_alloc include/linux/kasan.h:201 [inline]\n  slab_post_alloc_hook mm/slub.c:3988 [inline]\n  slab_alloc_node mm/slub.c:4037 [inline]\n  kmem_cache_alloc_noprof+0x135/0x2a0 mm/slub.c:4044\n  dst_alloc+0x12b/0x190 net/core/dst.c:89\n  ip6_blackhole_route+0x59/0x340 net/ipv6/route.c:2670\n  make_blackhole net/xfrm/xfrm_policy.c:3120 [inline]\n  xfrm_lookup_route+0xd1/0x1c0 net/xfrm/xfrm_policy.c:3313\n  ip6_dst_lookup_flow+0x13e/0x180 net/ipv6/ip6_output.c:1257\n  rawv6_sendmsg+0x1283/0x23c0 net/ipv6/raw.c:898\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x1a6/0x270 net/socket.c:745\n  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2597\n  ___sys_sendmsg net/socket.c:2651 [inline]\n  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2680\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 45:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579\n  poison_slab_object+0xe0/0x150 mm/kasan/common.c:240\n  __kasan_slab_free+0x37/0x60 mm/kasan/common.c:256\n  kasan_slab_free include/linux/kasan.h:184 [inline]\n  slab_free_hook mm/slub.c:2252 [inline]\n  slab_free mm/slub.c:4473 [inline]\n  kmem_cache_free+0x145/0x350 mm/slub.c:4548\n  dst_destroy+0x2ac/0x460 net/core/dst.c:124\n  rcu_do_batch kernel/rcu/tree.c:2569 [inline]\n  rcu_core+0xafd/0x1830 kernel/rcu/tree.\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: idt77252: prevent use after free in dequeue_rx()\n\nWe can't dereference \"skb\" after calling vcc-\u003epush() because the skb\nis released.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngtp: pull network headers in gtp_dev_xmit()\n\nsyzbot/KMSAN reported use of uninit-value in get_dev_xmit() [1]\n\nWe must make sure the IPv4 or Ipv6 header is pulled in skb-\u003ehead\nbefore accessing fields in them.\n\nUse pskb_inet_may_pull() to fix this issue.\n\n[1]\nBUG: KMSAN: uninit-value in ipv6_pdp_find drivers/net/gtp.c:220 [inline]\n BUG: KMSAN: uninit-value in gtp_build_skb_ip6 drivers/net/gtp.c:1229 [inline]\n BUG: KMSAN: uninit-value in gtp_dev_xmit+0x1424/0x2540 drivers/net/gtp.c:1281\n  ipv6_pdp_find drivers/net/gtp.c:220 [inline]\n  gtp_build_skb_ip6 drivers/net/gtp.c:1229 [inline]\n  gtp_dev_xmit+0x1424/0x2540 drivers/net/gtp.c:1281\n  __netdev_start_xmit include/linux/netdevice.h:4913 [inline]\n  netdev_start_xmit include/linux/netdevice.h:4922 [inline]\n  xmit_one net/core/dev.c:3580 [inline]\n  dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3596\n  __dev_queue_xmit+0x358c/0x5610 net/core/dev.c:4423\n  dev_queue_xmit include/linux/netdevice.h:3105 [inline]\n  packet_xmit+0x9c/0x6c0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3145 [inline]\n  packet_sendmsg+0x90e3/0xa3a0 net/packet/af_packet.c:3177\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830 net/socket.c:2204\n  __do_sys_sendto net/socket.c:2216 [inline]\n  __se_sys_sendto net/socket.c:2212 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2212\n  x64_sys_call+0x3799/0x3c10 arch/x86/include/generated/asm/syscalls_64.h:45\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:3994 [inline]\n  slab_alloc_node mm/slub.c:4037 [inline]\n  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4080\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:583\n  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:674\n  alloc_skb include/linux/skbuff.h:1320 [inline]\n  alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6526\n  sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2815\n  packet_alloc_skb net/packet/af_packet.c:2994 [inline]\n  packet_snd net/packet/af_packet.c:3088 [inline]\n  packet_sendmsg+0x749c/0xa3a0 net/packet/af_packet.c:3177\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830 net/socket.c:2204\n  __do_sys_sendto net/socket.c:2216 [inline]\n  __se_sys_sendto net/socket.c:2212 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2212\n  x64_sys_call+0x3799/0x3c10 arch/x86/include/generated/asm/syscalls_64.h:45\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nCPU: 0 UID: 0 PID: 7115 Comm: syz.1.515 Not tainted 6.11.0-rc1-syzkaller-00043-g94ede2a3e913 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/27/2024",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45008",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: MT - limit max slots\n\nsyzbot is reporting too large allocation at input_mt_init_slots(), for\nnum_slots is supplied from userspace using ioctl(UI_DEV_CREATE).\n\nSince nobody knows possible max slots, this patch chose 1024.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45490",
      "Description": "An issue was discovered in libexpat before 2.6.3. xmlparse.c does not reject a negative length for XML_ParseBuffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:expat-2.1.0-21.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libexpat1-2.1.0-21.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45491",
      "Description": "An issue was discovered in libexpat before 2.6.3. dtdCopy in xmlparse.c can have an integer overflow for nDefaultAtts on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:expat-2.1.0-21.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libexpat1-2.1.0-21.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45492",
      "Description": "An issue was discovered in libexpat before 2.6.3. nextScaffoldPart in xmlparse.c can have an integer overflow for m_groupSize on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:expat-2.1.0-21.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libexpat1-2.1.0-21.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46673",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: aacraid: Fix double-free on probe failure\n\naac_probe_one() calls hardware-specific init functions through the\naac_driver_ident::init pointer, all of which eventually call down to\naac_init_adapter().\n\nIf aac_init_adapter() fails after allocating memory for aac_dev::queues,\nit frees the memory but does not clear that member.\n\nAfter the hardware-specific init function returns an error,\naac_probe_one() goes down an error path that frees the memory pointed to\nby aac_dev::queues, resulting.in a double-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46675",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: Prevent USB core invalid event buffer address access\n\nThis commit addresses an issue where the USB core could access an\ninvalid event buffer address during runtime suspend, potentially causing\nSMMU faults and other memory issues in Exynos platforms. The problem\narises from the following sequence.\n        1. In dwc3_gadget_suspend, there is a chance of a timeout when\n        moving the USB core to the halt state after clearing the\n        run/stop bit by software.\n        2. In dwc3_core_exit, the event buffer is cleared regardless of\n        the USB core's status, which may lead to an SMMU faults and\n        other memory issues. if the USB core tries to access the event\n        buffer address.\n\nTo prevent this hardware quirk on Exynos platforms, this commit ensures\nthat the event buffer address is not cleared by software  when the USB\ncore is active during runtime suspend by checking its status before\nclearing the buffer address.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46676",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Add poll mod list filling check\n\nIn case of im_protocols value is 1 and tm_protocols value is 0 this\ncombination successfully passes the check\n'if (!im_protocols \u0026\u0026 !tm_protocols)' in the nfc_start_poll().\nBut then after pn533_poll_create_mod_list() call in pn533_start_poll()\npoll mod list will remain empty and dev-\u003epoll_mod_count will remain 0\nwhich lead to division by zero.\n\nNormally no im protocol has value 1 in the mask, so this combination is\nnot expected by driver. But these protocol values actually come from\nuserspace via Netlink interface (NFC_CMD_START_POLL operation). So a\nbroken or malicious program may pass a message containing a \"bad\"\ncombination of protocol parameter values so that dev-\u003epoll_mod_count\nis not incremented inside pn533_poll_create_mod_list(), thus leading\nto division by zero.\nCall trace looks like:\nnfc_genl_start_poll()\n  nfc_start_poll()\n    -\u003estart_poll()\n    pn533_start_poll()\n\nAdd poll mod list filling check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46677",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngtp: fix a potential NULL pointer dereference\n\nWhen sockfd_lookup() fails, gtp_encap_enable_socket() returns a\nNULL pointer, but its callers only check for error pointers thus miss\nthe NULL pointer case.\n\nFix it by returning an error pointer with the error code carried from\nsockfd_lookup().\n\n(I found this bug during code inspection.)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46679",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: check device is present when getting link settings\n\nA sysfs reader can race with a device reset or removal, attempting to\nread device state when the device is not actually present. eg:\n\n     [exception RIP: qed_get_current_link+17]\n  #8 [ffffb9e4f2907c48] qede_get_link_ksettings at ffffffffc07a994a [qede]\n  #9 [ffffb9e4f2907cd8] __rh_call_get_link_ksettings at ffffffff992b01a3\n #10 [ffffb9e4f2907d38] __ethtool_get_link_ksettings at ffffffff992b04e4\n #11 [ffffb9e4f2907d90] duplex_show at ffffffff99260300\n #12 [ffffb9e4f2907e38] dev_attr_show at ffffffff9905a01c\n #13 [ffffb9e4f2907e50] sysfs_kf_seq_show at ffffffff98e0145b\n #14 [ffffb9e4f2907e68] seq_read at ffffffff98d902e3\n #15 [ffffb9e4f2907ec8] vfs_read at ffffffff98d657d1\n #16 [ffffb9e4f2907f00] ksys_read at ffffffff98d65c3f\n #17 [ffffb9e4f2907f38] do_syscall_64 at ffffffff98a052fb\n\n crash\u003e struct net_device.state ffff9a9d21336000\n    state = 5,\n\nstate 5 is __LINK_STATE_START (0b1) and __LINK_STATE_NOCARRIER (0b100).\nThe device is not present, note lack of __LINK_STATE_PRESENT (0b10).\n\nThis is the same sort of panic as observed in commit 4224cfd7fb65\n(\"net-sysfs: add check for netdevice being present to speed_show\").\n\nThere are many other callers of __ethtool_get_link_ksettings() which\ndon't have a device presence check.\n\nMove this check into ethtool to protect all callers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46685",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: single: fix potential NULL dereference in pcs_get_function()\n\npinmux_generic_get_function() can return NULL and the pointer 'function'\nwas dereferenced without checking against NULL. Add checking of pointer\n'function' in pcs_get_function().\n\nFound by code review.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46686",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb/client: avoid dereferencing rdata=NULL in smb2_new_read_req()\n\nThis happens when called from SMB2_read() while using rdma\nand reaching the rdma_readwrite_threshold.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46702",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Mark XDomain as unplugged when router is removed\n\nI noticed that when we do discrete host router NVM upgrade and it gets\nhot-removed from the PCIe side as a result of NVM firmware authentication,\nif there is another host connected with enabled paths we hang in tearing\nthem down. This is due to fact that the Thunderbolt networking driver\nalso tries to cleanup the paths and ends up blocking in\ntb_disconnect_xdomain_paths() waiting for the domain lock.\n\nHowever, at this point we already cleaned the paths in tb_stop() so\nthere is really no need for tb_disconnect_xdomain_paths() to do that\nanymore. Furthermore it already checks if the XDomain is unplugged and\nbails out early so take advantage of that and mark the XDomain as\nunplugged when we remove the parent router.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46707",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Make ICC_*SGI*_EL1 undef in the absence of a vGICv3\n\nOn a system with a GICv3, if a guest hasn't been configured with\nGICv3 and that the host is not capable of GICv2 emulation,\na write to any of the ICC_*SGI*_EL1 registers is trapped to EL2.\n\nWe therefore try to emulate the SGI access, only to hit a NULL\npointer as no private interrupt is allocated (no GIC, remember?).\n\nThe obvious fix is to give the guest what it deserves, in the\nshape of a UNDEF exception.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46714",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Skip wbscl_set_scaler_filter if filter is null\n\nCallers can pass null in filter (i.e. from returned from the function\nwbscl_get_filter_coeffs_16p) and a null check is added to ensure that is\nnot the case.\n\nThis fixes 4 NULL_RETURNS issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46715",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndriver: iio: add missing checks on iio_info's callback access\n\nSome callbacks from iio_info structure are accessed without any check, so\nif a driver doesn't implement them trying to access the corresponding\nsysfs entries produce a kernel oops such as:\n\n[ 2203.527791] Unable to handle kernel NULL pointer dereference at virtual address 00000000 when execute\n[...]\n[ 2203.783416] Call trace:\n[ 2203.783429]  iio_read_channel_info_avail from dev_attr_show+0x18/0x48\n[ 2203.789807]  dev_attr_show from sysfs_kf_seq_show+0x90/0x120\n[ 2203.794181]  sysfs_kf_seq_show from seq_read_iter+0xd0/0x4e4\n[ 2203.798555]  seq_read_iter from vfs_read+0x238/0x2a0\n[ 2203.802236]  vfs_read from ksys_read+0xa4/0xd4\n[ 2203.805385]  ksys_read from ret_fast_syscall+0x0/0x54\n[ 2203.809135] Exception stack(0xe0badfa8 to 0xe0badff0)\n[ 2203.812880] dfa0:                   00000003 b6f10f80 00000003 b6eab000 00020000 00000000\n[ 2203.819746] dfc0: 00000003 b6f10f80 7ff00000 00000003 00000003 00000000 00020000 00000000\n[ 2203.826619] dfe0: b6e1bc88 bed80958 b6e1bc94 b6e1bcb0\n[ 2203.830363] Code: bad PC value\n[ 2203.832695] ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46717",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: SHAMPO, Fix incorrect page release\n\nUnder the following conditions:\n1) No skb created yet\n2) header_size == 0 (no SHAMPO header)\n3) header_index + 1 % MLX5E_SHAMPO_WQ_HEADER_PER_PAGE == 0 (this is the\n   last page fragment of a SHAMPO header page)\n\na new skb is formed with a page that is NOT a SHAMPO header page (it\nis a regular data page). Further down in the same function\n(mlx5e_handle_rx_cqe_mpwrq_shampo()), a SHAMPO header page from\nheader_index is released. This is wrong and it leads to SHAMPO header\npages being released more than once.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46720",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix dereference after null check\n\ncheck the pointer hive before use.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46721",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: fix possible NULL pointer dereference\n\nprofile-\u003eparent-\u003edents[AAFS_PROF_DIR] could be NULL only if its parent is made\nfrom __create_missing_ancestors(..) and 'ent-\u003eold' is NULL in\naa_replace_profiles(..).\nIn that case, it must return an error code and the code, -ENOENT represents\nits state that the path of its parent is not existed yet.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000030\nPGD 0 P4D 0\nPREEMPT SMP PTI\nCPU: 4 PID: 3362 Comm: apparmor_parser Not tainted 6.8.0-24-generic #24\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014\nRIP: 0010:aafs_create.constprop.0+0x7f/0x130\nCode: 4c 63 e0 48 83 c4 18 4c 89 e0 5b 41 5c 41 5d 41 5e 41 5f 5d 31 d2 31 c9 31 f6 31 ff 45 31 c0 45 31 c9 45 31 d2 c3 cc cc cc cc \u003c4d\u003e 8b 55 30 4d 8d ba a0 00 00 00 4c 89 55 c0 4c 89 ff e8 7a 6a ae\nRSP: 0018:ffffc9000b2c7c98 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 00000000000041ed RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: ffffc9000b2c7cd8 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: ffffffff82baac10\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007be9f22cf740(0000) GS:ffff88817bc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000030 CR3: 0000000134b08000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\u003e\n ? show_regs+0x6d/0x80\n ? __die+0x24/0x80\n ? page_fault_oops+0x99/0x1b0\n ? kernelmode_fixup_or_oops+0xb2/0x140\n ? __bad_area_nosemaphore+0x1a5/0x2c0\n ? find_vma+0x34/0x60\n ? bad_area_nosemaphore+0x16/0x30\n ? do_user_addr_fault+0x2a2/0x6b0\n ? exc_page_fault+0x83/0x1b0\n ? asm_exc_page_fault+0x27/0x30\n ? aafs_create.constprop.0+0x7f/0x130\n ? aafs_create.constprop.0+0x51/0x130\n __aafs_profile_mkdir+0x3d6/0x480\n aa_replace_profiles+0x83f/0x1270\n policy_update+0xe3/0x180\n profile_load+0xbc/0x150\n ? rw_verify_area+0x47/0x140\n vfs_write+0x100/0x480\n ? __x64_sys_openat+0x55/0xa0\n ? syscall_exit_to_user_mode+0x86/0x260\n ksys_write+0x73/0x100\n __x64_sys_write+0x19/0x30\n x64_sys_call+0x7e/0x25c0\n do_syscall_64+0x7f/0x180\n entry_SYSCALL_64_after_hwframe+0x78/0x80\nRIP: 0033:0x7be9f211c574\nCode: c7 00 16 00 00 00 b8 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 80 3d d5 ea 0e 00 00 74 13 b8 01 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 54 c3 0f 1f 00 55 48 89 e5 48 83 ec 20 48 89\nRSP: 002b:00007ffd26f2b8c8 EFLAGS: 00000202 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 00005d504415e200 RCX: 00007be9f211c574\nRDX: 0000000000001fc1 RSI: 00005d504418bc80 RDI: 0000000000000004\nRBP: 0000000000001fc1 R08: 0000000000001fc1 R09: 0000000080000000\nR10: 0000000000000000 R11: 0000000000000202 R12: 00005d504418bc80\nR13: 0000000000000004 R14: 00007ffd26f2b9b0 R15: 00007ffd26f2ba30\n \u003c/TASK\u003e\nModules linked in: snd_seq_dummy snd_hrtimer qrtr snd_hda_codec_generic snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_seq_midi snd_seq_midi_event snd_rawmidi snd_seq snd_seq_device i2c_i801 snd_timer i2c_smbus qxl snd soundcore drm_ttm_helper lpc_ich ttm joydev input_leds serio_raw mac_hid binfmt_misc msr parport_pc ppdev lp parport efi_pstore nfnetlink dmi_sysfs qemu_fw_cfg ip_tables x_tables autofs4 hid_generic usbhid hid ahci libahci psmouse virtio_rng xhci_pci xhci_pci_renesas\nCR2: 0000000000000030\n---[ end trace 0000000000000000 ]---\nRIP: 0010:aafs_create.constprop.0+0x7f/0x130\nCode: 4c 63 e0 48 83 c4 18 4c 89 e0 5b 41 5c 41 5d 41 5e 41 5f 5d 31 d2 31 c9 31 f6 31 ff 45 31 c0 45 31 c9 45 31 d2 c3 cc cc cc cc \u003c4d\u003e 8b 55 30 4d 8d ba a0 00 00 00 4c 89 55 c0 4c 89 ff e8 7a 6a ae\nRSP: 0018:ffffc9000b2c7c98 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 00000000000041ed RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: ffffc9000b2c7cd8 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46722",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix mc_data out-of-bounds read warning\n\nClear warning that read mc_data[i-1] may out-of-bounds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46723",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix ucode out-of-bounds read warning\n\nClear warning that read ucode[] may out-of-bounds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46727",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add otg_master NULL check within resource_log_pipe_topology_update\n\n[Why]\nCoverity reports NULL_RETURN warning.\n\n[How]\nAdd otg_master NULL check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46731",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: fix the Out-of-bounds read warning\n\nusing index i - 1U may beyond element index\nfor mc_data[] when i = 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46737",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet-tcp: fix kernel crash if commands allocation fails\n\nIf the commands allocation fails in nvmet_tcp_alloc_cmds()\nthe kernel crashes in nvmet_tcp_release_queue_work() because of\na NULL pointer dereference.\n\n  nvmet: failed to install queue 0 cntlid 1 ret 6\n  Unable to handle kernel NULL pointer dereference at\n         virtual address 0000000000000008\n\nFix the bug by setting queue-\u003enr_cmds to zero in case\nnvmet_tcp_alloc_cmd() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46738",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nVMCI: Fix use-after-free when removing resource in vmci_resource_remove()\n\nWhen removing a resource from vmci_resource_table in\nvmci_resource_remove(), the search is performed using the resource\nhandle by comparing context and resource fields.\n\nIt is possible though to create two resources with different types\nbut same handle (same context and resource fields).\n\nWhen trying to remove one of the resources, vmci_resource_remove()\nmay not remove the intended one, but the object will still be freed\nas in the case of the datagram type in vmci_datagram_destroy_handle().\nvmci_resource_table will still hold a pointer to this freed resource\nleading to a use-after-free vulnerability.\n\nBUG: KASAN: use-after-free in vmci_handle_is_equal include/linux/vmw_vmci_defs.h:142 [inline]\nBUG: KASAN: use-after-free in vmci_resource_remove+0x3a1/0x410 drivers/misc/vmw_vmci/vmci_resource.c:147\nRead of size 4 at addr ffff88801c16d800 by task syz-executor197/1592\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x82/0xa9 lib/dump_stack.c:106\n print_address_description.constprop.0+0x21/0x366 mm/kasan/report.c:239\n __kasan_report.cold+0x7f/0x132 mm/kasan/report.c:425\n kasan_report+0x38/0x51 mm/kasan/report.c:442\n vmci_handle_is_equal include/linux/vmw_vmci_defs.h:142 [inline]\n vmci_resource_remove+0x3a1/0x410 drivers/misc/vmw_vmci/vmci_resource.c:147\n vmci_qp_broker_detach+0x89a/0x11b9 drivers/misc/vmw_vmci/vmci_queue_pair.c:2182\n ctx_free_ctx+0x473/0xbe1 drivers/misc/vmw_vmci/vmci_context.c:444\n kref_put include/linux/kref.h:65 [inline]\n vmci_ctx_put drivers/misc/vmw_vmci/vmci_context.c:497 [inline]\n vmci_ctx_destroy+0x170/0x1d6 drivers/misc/vmw_vmci/vmci_context.c:195\n vmci_host_close+0x125/0x1ac drivers/misc/vmw_vmci/vmci_host.c:143\n __fput+0x261/0xa34 fs/file_table.c:282\n task_work_run+0xf0/0x194 kernel/task_work.c:164\n tracehook_notify_resume include/linux/tracehook.h:189 [inline]\n exit_to_user_mode_loop+0x184/0x189 kernel/entry/common.c:187\n exit_to_user_mode_prepare+0x11b/0x123 kernel/entry/common.c:220\n __syscall_exit_to_user_mode_work kernel/entry/common.c:302 [inline]\n syscall_exit_to_user_mode+0x18/0x42 kernel/entry/common.c:313\n do_syscall_64+0x41/0x85 arch/x86/entry/common.c:86\n entry_SYSCALL_64_after_hwframe+0x6e/0x0\n\nThis change ensures the type is also checked when removing\nthe resource from vmci_resource_table in vmci_resource_remove().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46739",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio_hv_generic: Fix kernel NULL pointer dereference in hv_uio_rescind\n\nFor primary VM Bus channels, primary_channel pointer is always NULL. This\npointer is valid only for the secondary channels. Also, rescind callback\nis meant for primary channels only.\n\nFix NULL pointer dereference by retrieving the device_obj from the parent\nfor the primary channel.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof/irq: Prevent device address out-of-bounds read in interrupt map walk\n\nWhen of_irq_parse_raw() is invoked with a device address smaller than\nthe interrupt parent node (from #address-cells property), KASAN detects\nthe following out-of-bounds read when populating the initial match table\n(dyndbg=\"func of_irq_parse_* +p\"):\n\n  OF: of_irq_parse_one: dev=/soc@0/picasso/watchdog, index=0\n  OF:  parent=/soc@0/pci@878000000000/gpio0@17,0, intsize=2\n  OF:  intspec=4\n  OF: of_irq_parse_raw: ipar=/soc@0/pci@878000000000/gpio0@17,0, size=2\n  OF:  -\u003e addrsize=3\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in of_irq_parse_raw+0x2b8/0x8d0\n  Read of size 4 at addr ffffff81beca5608 by task bash/764\n\n  CPU: 1 PID: 764 Comm: bash Tainted: G           O       6.1.67-484c613561-nokia_sm_arm64 #1\n  Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.01-12.24.03-dirty 01/01/2023\n  Call trace:\n   dump_backtrace+0xdc/0x130\n   show_stack+0x1c/0x30\n   dump_stack_lvl+0x6c/0x84\n   print_report+0x150/0x448\n   kasan_report+0x98/0x140\n   __asan_load4+0x78/0xa0\n   of_irq_parse_raw+0x2b8/0x8d0\n   of_irq_parse_one+0x24c/0x270\n   parse_interrupts+0xc0/0x120\n   of_fwnode_add_links+0x100/0x2d0\n   fw_devlink_parse_fwtree+0x64/0xc0\n   device_add+0xb38/0xc30\n   of_device_add+0x64/0x90\n   of_platform_device_create_pdata+0xd0/0x170\n   of_platform_bus_create+0x244/0x600\n   of_platform_notify+0x1b0/0x254\n   blocking_notifier_call_chain+0x9c/0xd0\n   __of_changeset_entry_notify+0x1b8/0x230\n   __of_changeset_apply_notify+0x54/0xe4\n   of_overlay_fdt_apply+0xc04/0xd94\n   ...\n\n  The buggy address belongs to the object at ffffff81beca5600\n   which belongs to the cache kmalloc-128 of size 128\n  The buggy address is located 8 bytes inside of\n   128-byte region [ffffff81beca5600, ffffff81beca5680)\n\n  The buggy address belongs to the physical page:\n  page:00000000230d3d03 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1beca4\n  head:00000000230d3d03 order:1 compound_mapcount:0 compound_pincount:0\n  flags: 0x8000000000010200(slab|head|zone=2)\n  raw: 8000000000010200 0000000000000000 dead000000000122 ffffff810000c300\n  raw: 0000000000000000 0000000000200020 00000001ffffffff 0000000000000000\n  page dumped because: kasan: bad access detected\n\n  Memory state around the buggy address:\n   ffffff81beca5500: 04 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n   ffffff81beca5580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n  \u003effffff81beca5600: 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                        ^\n   ffffff81beca5680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n   ffffff81beca5700: 00 00 00 00 00 00 fc fc fc fc fc fc fc fc fc fc\n  ==================================================================\n  OF:  -\u003e got it !\n\nPrevent the out-of-bounds read by copying the device address into a\nbuffer of sufficient size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46744",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSquashfs: sanity check symbolic link size\n\nSyzkiller reports a \"KMSAN: uninit-value in pick_link\" bug.\n\nThis is caused by an uninitialised page, which is ultimately caused\nby a corrupted symbolic link size read from disk.\n\nThe reason why the corrupted symlink size causes an uninitialised\npage is due to the following sequence of events:\n\n1. squashfs_read_inode() is called to read the symbolic\n   link from disk.  This assigns the corrupted value\n   3875536935 to inode-\u003ei_size.\n\n2. Later squashfs_symlink_read_folio() is called, which assigns\n   this corrupted value to the length variable, which being a\n   signed int, overflows producing a negative number.\n\n3. The following loop that fills in the page contents checks that\n   the copied bytes is less than length, which being negative means\n   the loop is skipped, producing an uninitialised page.\n\nThis patch adds a sanity check which checks that the symbolic\nlink size is not larger than expected.\n\n--\n\nV2: fix spelling mistake.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46745",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: uinput - reject requests with unreasonable number of slots\n\n\nWhen exercising uinput interface syzkaller may try setting up device\nwith a really large number of slots, which causes memory allocation\nfailure in input_mt_init_slots(). While this allocation failure is\nhandled properly and request is rejected, it results in syzkaller\nreports. Additionally, such request may put undue burden on the\nsystem which will try to free a lot of memory for a bogus request.\n\nFix it by limiting allowed number of slots to 100. This can easily\nbe extended if we see devices that can track more than 100 contacts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46746",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: amd_sfh: free driver_data after destroying hid device\n\nHID driver callbacks aren't called anymore once hid_destroy_device() has\nbeen called. Hence, hid driver_data should be freed only after the\nhid_destroy_device() function returned as driver_data is used in several\ncallbacks.\n\nI observed a crash with kernel 6.10.0 on my T14s Gen 3, after enabling\nKASAN to debug memory allocation, I got this output:\n\n  [   13.050438] ==================================================================\n  [   13.054060] BUG: KASAN: slab-use-after-free in amd_sfh_get_report+0x3ec/0x530 [amd_sfh]\n  [   13.054809] psmouse serio1: trackpoint: Synaptics TrackPoint firmware: 0x02, buttons: 3/3\n  [   13.056432] Read of size 8 at addr ffff88813152f408 by task (udev-worker)/479\n\n  [   13.060970] CPU: 5 PID: 479 Comm: (udev-worker) Not tainted 6.10.0-arch1-2 #1 893bb55d7f0073f25c46adbb49eb3785fefd74b0\n  [   13.063978] Hardware name: LENOVO 21CQCTO1WW/21CQCTO1WW, BIOS R22ET70W (1.40 ) 03/21/2024\n  [   13.067860] Call Trace:\n  [   13.069383] input: TPPS/2 Synaptics TrackPoint as /devices/platform/i8042/serio1/input/input8\n  [   13.071486]  \u003cTASK\u003e\n  [   13.071492]  dump_stack_lvl+0x5d/0x80\n  [   13.074870] snd_hda_intel 0000:33:00.6: enabling device (0000 -\u003e 0002)\n  [   13.078296]  ? amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]\n  [   13.082199]  print_report+0x174/0x505\n  [   13.085776]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10\n  [   13.089367]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.093255]  ? amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]\n  [   13.097464]  kasan_report+0xc8/0x150\n  [   13.101461]  ? amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]\n  [   13.105802]  amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]\n  [   13.110303]  amdtp_hid_request+0xb8/0x110 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]\n  [   13.114879]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.119450]  sensor_hub_get_feature+0x1d3/0x540 [hid_sensor_hub 3f13be3016ff415bea03008d45d99da837ee3082]\n  [   13.124097]  hid_sensor_parse_common_attributes+0x4d0/0xad0 [hid_sensor_iio_common c3a5cbe93969c28b122609768bbe23efe52eb8f5]\n  [   13.127404]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.131925]  ? __pfx_hid_sensor_parse_common_attributes+0x10/0x10 [hid_sensor_iio_common c3a5cbe93969c28b122609768bbe23efe52eb8f5]\n  [   13.136455]  ? _raw_spin_lock_irqsave+0x96/0xf0\n  [   13.140197]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10\n  [   13.143602]  ? devm_iio_device_alloc+0x34/0x50 [industrialio 3d261d5e5765625d2b052be40e526d62b1d2123b]\n  [   13.147234]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.150446]  ? __devm_add_action+0x167/0x1d0\n  [   13.155061]  hid_gyro_3d_probe+0x120/0x7f0 [hid_sensor_gyro_3d 63da36a143b775846ab2dbb86c343b401b5e3172]\n  [   13.158581]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.161814]  platform_probe+0xa2/0x150\n  [   13.165029]  really_probe+0x1e3/0x8a0\n  [   13.168243]  __driver_probe_device+0x18c/0x370\n  [   13.171500]  driver_probe_device+0x4a/0x120\n  [   13.175000]  __driver_attach+0x190/0x4a0\n  [   13.178521]  ? __pfx___driver_attach+0x10/0x10\n  [   13.181771]  bus_for_each_dev+0x106/0x180\n  [   13.185033]  ? __pfx__raw_spin_lock+0x10/0x10\n  [   13.188229]  ? __pfx_bus_for_each_dev+0x10/0x10\n  [   13.191446]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.194382]  bus_add_driver+0x29e/0x4d0\n  [   13.197328]  driver_register+0x1a5/0x360\n  [   13.200283]  ? __pfx_hid_gyro_3d_platform_driver_init+0x10/0x10 [hid_sensor_gyro_3d 63da36a143b775846ab2dbb86c343b401b5e3172]\n  [   13.203362]  do_one_initcall+0xa7/0x380\n  [   13.206432]  ? __pfx_do_one_initcall+0x10/0x10\n  [   13.210175]  ? srso_alias_return_thunk+0x5/0xfbef5\n  [   13.213211]  ? kasan_unpoison+0x44/0x70\n  [   13.216688]  do_init_module+0x238/0x750\n  [   13.2196\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46747",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: cougar: fix slab-out-of-bounds Read in cougar_report_fixup\n\nreport_fixup for the Cougar 500k Gaming Keyboard was not verifying\nthat the report descriptor size was correct before accessing it",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46750",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: Add missing bridge lock to pci_bus_lock()\n\nOne of the true positives that the cfg_access_lock lockdep effort\nidentified is this sequence:\n\n  WARNING: CPU: 14 PID: 1 at drivers/pci/pci.c:4886 pci_bridge_secondary_bus_reset+0x5d/0x70\n  RIP: 0010:pci_bridge_secondary_bus_reset+0x5d/0x70\n  Call Trace:\n   \u003cTASK\u003e\n   ? __warn+0x8c/0x190\n   ? pci_bridge_secondary_bus_reset+0x5d/0x70\n   ? report_bug+0x1f8/0x200\n   ? handle_bug+0x3c/0x70\n   ? exc_invalid_op+0x18/0x70\n   ? asm_exc_invalid_op+0x1a/0x20\n   ? pci_bridge_secondary_bus_reset+0x5d/0x70\n   pci_reset_bus+0x1d8/0x270\n   vmd_probe+0x778/0xa10\n   pci_device_probe+0x95/0x120\n\nWhere pci_reset_bus() users are triggering unlocked secondary bus resets.\nIronically pci_bus_reset(), several calls down from pci_reset_bus(), uses\npci_bus_lock() before issuing the reset which locks everything *but* the\nbridge itself.\n\nFor the same motivation as adding:\n\n  bridge = pci_upstream_bridge(dev);\n  if (bridge)\n    pci_dev_lock(bridge);\n\nto pci_reset_function() for the \"bus\" and \"cxl_bus\" reset cases, add\npci_dev_lock() for @bus-\u003eself to pci_bus_lock().\n\n[bhelgaas: squash in recursive locking deadlock fix from Keith Busch:\nhttps://lore.kernel.org/r/20240711193650.701834-1-kbusch@meta.com]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46753",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: handle errors from btrfs_dec_ref() properly\n\nIn walk_up_proc() we BUG_ON(ret) from btrfs_dec_ref().  This is\nincorrect, we have proper error handling here, return the error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46759",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (adc128d818) Fix underflows seen when writing limit attributes\n\nDIV_ROUND_CLOSEST() after kstrtol() results in an underflow if a large\nnegative number such as -9223372036854775808 is provided by the user.\nFix it by reordering clamp_val() and DIV_ROUND_CLOSEST() operations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46761",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npci/hotplug/pnv_php: Fix hotplug driver crash on Powernv\n\nThe hotplug driver for powerpc (pci/hotplug/pnv_php.c) causes a kernel\ncrash when we try to hot-unplug/disable the PCIe switch/bridge from\nthe PHB.\n\nThe crash occurs because although the MSI data structure has been\nreleased during disable/hot-unplug path and it has been assigned\nwith NULL, still during unregistration the code was again trying to\nexplicitly disable the MSI which causes the NULL pointer dereference and\nkernel crash.\n\nThe patch fixes the check during unregistration path to prevent invoking\npci_disable_msi/msix() since its data structure is already freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46770",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Add netif_device_attach/detach into PF reset flow\n\nEthtool callbacks can be executed while reset is in progress and try to\naccess deleted resources, e.g. getting coalesce settings can result in a\nNULL pointer dereference seen below.\n\nReproduction steps:\nOnce the driver is fully initialized, trigger reset:\n\t# echo 1 \u003e /sys/class/net/\u003cinterface\u003e/device/reset\nwhen reset is in progress try to get coalesce settings using ethtool:\n\t# ethtool -c \u003cinterface\u003e\n\nBUG: kernel NULL pointer dereference, address: 0000000000000020\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] PREEMPT SMP PTI\nCPU: 11 PID: 19713 Comm: ethtool Tainted: G S                 6.10.0-rc7+ #7\nRIP: 0010:ice_get_q_coalesce+0x2e/0xa0 [ice]\nRSP: 0018:ffffbab1e9bcf6a8 EFLAGS: 00010206\nRAX: 000000000000000c RBX: ffff94512305b028 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff9451c3f2e588 RDI: ffff9451c3f2e588\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: ffff9451c3f2e580 R11: 000000000000001f R12: ffff945121fa9000\nR13: ffffbab1e9bcf760 R14: 0000000000000013 R15: ffffffff9e65dd40\nFS:  00007faee5fbe740(0000) GS:ffff94546fd80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000020 CR3: 0000000106c2e005 CR4: 00000000001706f0\nCall Trace:\n\u003cTASK\u003e\nice_get_coalesce+0x17/0x30 [ice]\ncoalesce_prepare_data+0x61/0x80\nethnl_default_doit+0xde/0x340\ngenl_family_rcv_msg_doit+0xf2/0x150\ngenl_rcv_msg+0x1b3/0x2c0\nnetlink_rcv_skb+0x5b/0x110\ngenl_rcv+0x28/0x40\nnetlink_unicast+0x19c/0x290\nnetlink_sendmsg+0x222/0x490\n__sys_sendto+0x1df/0x1f0\n__x64_sys_sendto+0x24/0x30\ndo_syscall_64+0x82/0x160\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\nRIP: 0033:0x7faee60d8e27\n\nCalling netif_device_detach() before reset makes the net core not call\nthe driver when ethtool command is issued, the attempt to execute an\nethtool command during reset will result in the following message:\n\n    netlink error: No such device\n\ninstead of NULL pointer dereference. Once reset is done and\nice_rebuild() is executing, the netif_device_attach() is called to allow\nfor ethtool operations to occur again in a safe manner.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check denominator crb_pipes before used\n\n[WHAT \u0026 HOW]\nA denominator cannot be 0, and is checked before used.\n\nThis fixes 2 DIVIDE_BY_ZERO issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check denominator pbn_div before used\n\n[WHAT \u0026 HOW]\nA denominator cannot be 0, and is checked before used.\n\nThis fixes 1 DIVIDE_BY_ZERO issue reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46774",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/rtas: Prevent Spectre v1 gadget construction in sys_rtas()\n\nSmatch warns:\n\n  arch/powerpc/kernel/rtas.c:1932 __do_sys_rtas() warn: potential\n  spectre issue 'args.args' [r] (local cap)\n\nThe 'nargs' and 'nret' locals come directly from a user-supplied\nbuffer and are used as indexes into a small stack-based array and as\ninputs to copy_to_user() after they are subject to bounds checks.\n\nUse array_index_nospec() after the bounds checks to clamp these values\nfor speculative execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46778",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check UnboundedRequestEnabled's value\n\nCalculateSwathAndDETConfiguration_params_st's UnboundedRequestEnabled\nis a pointer (i.e. dml_bool_t *UnboundedRequestEnabled), and thus\nif (p-\u003eUnboundedRequestEnabled) checks its address, not bool value.\n\nThis fixes 1 REVERSE_INULL issue reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46783",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp_bpf: fix return value of tcp_bpf_sendmsg()\n\nWhen we cork messages in psock-\u003ecork, the last message triggers the\nflushing will result in sending a sk_msg larger than the current\nmessage size. In this case, in tcp_bpf_send_verdict(), 'copied' becomes\nnegative at least in the following case:\n\n468         case __SK_DROP:\n469         default:\n470                 sk_msg_free_partial(sk, msg, tosend);\n471                 sk_msg_apply_bytes(psock, tosend);\n472                 *copied -= (tosend + delta); // \u003c==== HERE\n473                 return -EACCES;\n\nTherefore, it could lead to the following BUG with a proper value of\n'copied' (thanks to syzbot). We should not use negative 'copied' as a\nreturn value here.\n\n  ------------[ cut here ]------------\n  kernel BUG at net/socket.c:733!\n  Internal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\n  Modules linked in:\n  CPU: 0 UID: 0 PID: 3265 Comm: syz-executor510 Not tainted 6.11.0-rc3-syzkaller-00060-gd07b43284ab3 #0\n  Hardware name: linux,dummy-virt (DT)\n  pstate: 61400009 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)\n  pc : sock_sendmsg_nosec net/socket.c:733 [inline]\n  pc : sock_sendmsg_nosec net/socket.c:728 [inline]\n  pc : __sock_sendmsg+0x5c/0x60 net/socket.c:745\n  lr : sock_sendmsg_nosec net/socket.c:730 [inline]\n  lr : __sock_sendmsg+0x54/0x60 net/socket.c:745\n  sp : ffff800088ea3b30\n  x29: ffff800088ea3b30 x28: fbf00000062bc900 x27: 0000000000000000\n  x26: ffff800088ea3bc0 x25: ffff800088ea3bc0 x24: 0000000000000000\n  x23: f9f00000048dc000 x22: 0000000000000000 x21: ffff800088ea3d90\n  x20: f9f00000048dc000 x19: ffff800088ea3d90 x18: 0000000000000001\n  x17: 0000000000000000 x16: 0000000000000000 x15: 000000002002ffaf\n  x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n  x11: 0000000000000000 x10: ffff8000815849c0 x9 : ffff8000815b49c0\n  x8 : 0000000000000000 x7 : 000000000000003f x6 : 0000000000000000\n  x5 : 00000000000007e0 x4 : fff07ffffd239000 x3 : fbf00000062bc900\n  x2 : 0000000000000000 x1 : 0000000000000000 x0 : 00000000fffffdef\n  Call trace:\n   sock_sendmsg_nosec net/socket.c:733 [inline]\n   __sock_sendmsg+0x5c/0x60 net/socket.c:745\n   ____sys_sendmsg+0x274/0x2ac net/socket.c:2597\n   ___sys_sendmsg+0xac/0x100 net/socket.c:2651\n   __sys_sendmsg+0x84/0xe0 net/socket.c:2680\n   __do_sys_sendmsg net/socket.c:2689 [inline]\n   __se_sys_sendmsg net/socket.c:2687 [inline]\n   __arm64_sys_sendmsg+0x24/0x30 net/socket.c:2687\n   __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]\n   invoke_syscall+0x48/0x110 arch/arm64/kernel/syscall.c:49\n   el0_svc_common.constprop.0+0x40/0xe0 arch/arm64/kernel/syscall.c:132\n   do_el0_svc+0x1c/0x28 arch/arm64/kernel/syscall.c:151\n   el0_svc+0x34/0xec arch/arm64/kernel/entry-common.c:712\n   el0t_64_sync_handler+0x100/0x12c arch/arm64/kernel/entry-common.c:730\n   el0t_64_sync+0x19c/0x1a0 arch/arm64/kernel/entry.S:598\n  Code: f9404463 d63f0060 3108441f 54fffe81 (d4210000)\n  ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46784",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix error handling in mana_create_txq/rxq's NAPI cleanup\n\nCurrently napi_disable() gets called during rxq and txq cleanup,\neven before napi is enabled and hrtimer is initialized. It causes\nkernel panic.\n\n? page_fault_oops+0x136/0x2b0\n  ? page_counter_cancel+0x2e/0x80\n  ? do_user_addr_fault+0x2f2/0x640\n  ? refill_obj_stock+0xc4/0x110\n  ? exc_page_fault+0x71/0x160\n  ? asm_exc_page_fault+0x27/0x30\n  ? __mmdrop+0x10/0x180\n  ? __mmdrop+0xec/0x180\n  ? hrtimer_active+0xd/0x50\n  hrtimer_try_to_cancel+0x2c/0xf0\n  hrtimer_cancel+0x15/0x30\n  napi_disable+0x65/0x90\n  mana_destroy_rxq+0x4c/0x2f0\n  mana_create_rxq.isra.0+0x56c/0x6d0\n  ? mana_uncfg_vport+0x50/0x50\n  mana_alloc_queues+0x21b/0x320\n  ? skb_dequeue+0x5f/0x80",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46787",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: fix checks for huge PMDs\n\nPatch series \"userfaultfd: fix races around pmd_trans_huge() check\", v2.\n\nThe pmd_trans_huge() code in mfill_atomic() is wrong in three different\nways depending on kernel version:\n\n1. The pmd_trans_huge() check is racy and can lead to a BUG_ON() (if you hit\n   the right two race windows) - I've tested this in a kernel build with\n   some extra mdelay() calls. See the commit message for a description\n   of the race scenario.\n   On older kernels (before 6.5), I think the same bug can even\n   theoretically lead to accessing transhuge page contents as a page table\n   if you hit the right 5 narrow race windows (I haven't tested this case).\n2. As pointed out by Qi Zheng, pmd_trans_huge() is not sufficient for\n   detecting PMDs that don't point to page tables.\n   On older kernels (before 6.5), you'd just have to win a single fairly\n   wide race to hit this.\n   I've tested this on 6.1 stable by racing migration (with a mdelay()\n   patched into try_to_migrate()) against UFFDIO_ZEROPAGE - on my x86\n   VM, that causes a kernel oops in ptlock_ptr().\n3. On newer kernels (\u003e=6.5), for shmem mappings, khugepaged is allowed\n   to yank page tables out from under us (though I haven't tested that),\n   so I think the BUG_ON() checks in mfill_atomic() are just wrong.\n\nI decided to write two separate fixes for these (one fix for bugs 1+2, one\nfix for bug 3), so that the first fix can be backported to kernels\naffected by bugs 1+2.\n\n\nThis patch (of 2):\n\nThis fixes two issues.\n\nI discovered that the following race can occur:\n\n  mfill_atomic                other thread\n  ============                ============\n                              \u003czap PMD\u003e\n  pmdp_get_lockless() [reads none pmd]\n  \u003cbail if trans_huge\u003e\n  \u003cif none:\u003e\n                              \u003cpagefault creates transhuge zeropage\u003e\n    __pte_alloc [no-op]\n                              \u003czap PMD\u003e\n  \u003cbail if pmd_trans_huge(*dst_pmd)\u003e\n  BUG_ON(pmd_none(*dst_pmd))\n\nI have experimentally verified this in a kernel with extra mdelay() calls;\nthe BUG_ON(pmd_none(*dst_pmd)) triggers.\n\nOn kernels newer than commit 0d940a9b270b (\"mm/pgtable: allow\npte_offset_map[_lock]() to fail\"), this can't lead to anything worse than\na BUG_ON(), since the page table access helpers are actually designed to\ndeal with page tables concurrently disappearing; but on older kernels\n(\u003c=6.4), I think we could probably theoretically race past the two\nBUG_ON() checks and end up treating a hugepage as a page table.\n\nThe second issue is that, as Qi Zheng pointed out, there are other types\nof huge PMDs that pmd_trans_huge() can't catch: devmap PMDs and swap PMDs\n(in particular, migration PMDs).\n\nOn \u003c=6.4, this is worse than the first issue: If mfill_atomic() runs on a\nPMD that contains a migration entry (which just requires winning a single,\nfairly wide race), it will pass the PMD to pte_offset_map_lock(), which\nassumes that the PMD points to a page table.\n\nBreakage follows: First, the kernel tries to take the PTE lock (which will\ncrash or maybe worse if there is no \"struct page\" for the address bits in\nthe migration entry PMD - I think at least on X86 there usually is no\ncorresponding \"struct page\" thanks to the PTE inversion mitigation, amd64\nlooks different).\n\nIf that didn't crash, the kernel would next try to write a PTE into what\nit wrongly thinks is a page table.\n\nAs part of fixing these issues, get rid of the check for pmd_trans_huge()\nbefore __pte_alloc() - that's redundant, we're going to have to check for\nthat after the __pte_alloc() anyway.\n\nBackport note: pmdp_get_lockless() is pmd_read_atomic() in older kernels.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: acpi: Harden get_cpu_for_acpi_id() against missing CPU entry\n\nIn a review discussion of the changes to support vCPU hotplug where\na check was added on the GICC being enabled if was online, it was\nnoted that there is need to map back to the cpu and use that to index\ninto a cpumask. As such, a valid ID is needed.\n\nIf an MPIDR check fails in acpi_map_gic_cpu_interface() it is possible\nfor the entry in cpu_madt_gicc[cpu] == NULL.  This function would\nthen cause a NULL pointer dereference.   Whilst a path to trigger\nthis has not been established, harden this caller against the\npossibility.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: nxp-fspi: fix the KASAN report out-of-bounds bug\n\nChange the memcpy length to fix the out-of-bounds issue when writing the\ndata that is not 4 byte aligned to TX FIFO.\n\nTo reproduce the issue, write 3 bytes data to NOR chip.\n\ndd if=3b of=/dev/mtd0\n[   36.926103] ==================================================================\n[   36.933409] BUG: KASAN: slab-out-of-bounds in nxp_fspi_exec_op+0x26ec/0x2838\n[   36.940514] Read of size 4 at addr ffff00081037c2a0 by task dd/455\n[   36.946721]\n[   36.948235] CPU: 3 UID: 0 PID: 455 Comm: dd Not tainted 6.11.0-rc5-gc7b0e37c8434 #1070\n[   36.956185] Hardware name: Freescale i.MX8QM MEK (DT)\n[   36.961260] Call trace:\n[   36.963723]  dump_backtrace+0x90/0xe8\n[   36.967414]  show_stack+0x18/0x24\n[   36.970749]  dump_stack_lvl+0x78/0x90\n[   36.974451]  print_report+0x114/0x5cc\n[   36.978151]  kasan_report+0xa4/0xf0\n[   36.981670]  __asan_report_load_n_noabort+0x1c/0x28\n[   36.986587]  nxp_fspi_exec_op+0x26ec/0x2838\n[   36.990800]  spi_mem_exec_op+0x8ec/0xd30\n[   36.994762]  spi_mem_no_dirmap_read+0x190/0x1e0\n[   36.999323]  spi_mem_dirmap_write+0x238/0x32c\n[   37.003710]  spi_nor_write_data+0x220/0x374\n[   37.007932]  spi_nor_write+0x110/0x2e8\n[   37.011711]  mtd_write_oob_std+0x154/0x1f0\n[   37.015838]  mtd_write_oob+0x104/0x1d0\n[   37.019617]  mtd_write+0xb8/0x12c\n[   37.022953]  mtdchar_write+0x224/0x47c\n[   37.026732]  vfs_write+0x1e4/0x8c8\n[   37.030163]  ksys_write+0xec/0x1d0\n[   37.033586]  __arm64_sys_write+0x6c/0x9c\n[   37.037539]  invoke_syscall+0x6c/0x258\n[   37.041327]  el0_svc_common.constprop.0+0x160/0x22c\n[   37.046244]  do_el0_svc+0x44/0x5c\n[   37.049589]  el0_svc+0x38/0x78\n[   37.052681]  el0t_64_sync_handler+0x13c/0x158\n[   37.057077]  el0t_64_sync+0x190/0x194\n[   37.060775]\n[   37.062274] Allocated by task 455:\n[   37.065701]  kasan_save_stack+0x2c/0x54\n[   37.069570]  kasan_save_track+0x20/0x3c\n[   37.073438]  kasan_save_alloc_info+0x40/0x54\n[   37.077736]  __kasan_kmalloc+0xa0/0xb8\n[   37.081515]  __kmalloc_noprof+0x158/0x2f8\n[   37.085563]  mtd_kmalloc_up_to+0x120/0x154\n[   37.089690]  mtdchar_write+0x130/0x47c\n[   37.093469]  vfs_write+0x1e4/0x8c8\n[   37.096901]  ksys_write+0xec/0x1d0\n[   37.100332]  __arm64_sys_write+0x6c/0x9c\n[   37.104287]  invoke_syscall+0x6c/0x258\n[   37.108064]  el0_svc_common.constprop.0+0x160/0x22c\n[   37.112972]  do_el0_svc+0x44/0x5c\n[   37.116319]  el0_svc+0x38/0x78\n[   37.119401]  el0t_64_sync_handler+0x13c/0x158\n[   37.123788]  el0t_64_sync+0x190/0x194\n[   37.127474]\n[   37.128977] The buggy address belongs to the object at ffff00081037c2a0\n[   37.128977]  which belongs to the cache kmalloc-8 of size 8\n[   37.141177] The buggy address is located 0 bytes inside of\n[   37.141177]  allocated 3-byte region [ffff00081037c2a0, ffff00081037c2a3)\n[   37.153465]\n[   37.154971] The buggy address belongs to the physical page:\n[   37.160559] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x89037c\n[   37.168596] flags: 0xbfffe0000000000(node=0|zone=2|lastcpupid=0x1ffff)\n[   37.175149] page_type: 0xfdffffff(slab)\n[   37.179021] raw: 0bfffe0000000000 ffff000800002500 dead000000000122 0000000000000000\n[   37.186788] raw: 0000000000000000 0000000080800080 00000001fdffffff 0000000000000000\n[   37.194553] page dumped because: kasan: bad access detected\n[   37.200144]\n[   37.201647] Memory state around the buggy address:\n[   37.206460]  ffff00081037c180: fa fc fc fc fa fc fc fc fa fc fc fc fa fc fc fc\n[   37.213701]  ffff00081037c200: fa fc fc fc 05 fc fc fc 03 fc fc fc 02 fc fc fc\n[   37.220946] \u003effff00081037c280: 06 fc fc fc 03 fc fc fc fc fc fc fc fc fc fc fc\n[   37.228186]                                ^\n[   37.232473]  ffff00081037c300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   37.239718]  ffff00081037c380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   37.246962] ==============================================================\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dpaa: Pad packets to ETH_ZLEN\n\nWhen sending packets under 60 bytes, up to three bytes of the buffer\nfollowing the data may be leaked. Avoid this by extending all packets to\nETH_ZLEN, ensuring nothing is leaked in the padding. This bug can be\nreproduced by running\n\n\t$ ping -s 11 destination",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46859",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: panasonic-laptop: Fix SINF array out of bounds accesses\n\nThe panasonic laptop code in various places uses the SINF array with index\nvalues of 0 - SINF_CUR_BRIGHT(0x0d) without checking that the SINF array\nis big enough.\n\nNot all panasonic laptops have this many SINF array entries, for example\nthe Toughbook CF-18 model only has 10 SINF array entries. So it only\nsupports the AC+DC brightness entries and mute.\n\nCheck that the SINF array has a minimum size which covers all AC+DC\nbrightness entries and refuse to load if the SINF array is smaller.\n\nFor higher SINF indexes hide the sysfs attributes when the SINF array\ndoes not contain an entry for that attribute, avoiding show()/store()\naccessing the array out of bounds and add bounds checking to the probe()\nand resume() code accessing these.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:cluster-md-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:dlm-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gfs2-kmp-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:kernel-default-4.12.14-122.231.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:ocfs2-kmp-default-4.12.14-122.231.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-5535",
      "Description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libopenssl1_0_0-1.0.2p-3.95.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libopenssl1_1-1.1.1d-2.113.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:openssl-1_0_0-1.0.2p-3.95.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-5642",
      "Description": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6232",
      "Description": "There is a MEDIUM severity vulnerability affecting CPython.\n\n\n\n\n\nRegular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libpython3_4m1_0-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-base-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-curses-3.4.10-25.139.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6345",
      "Description": "A vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python-setuptools-40.6.2-4.24.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-setuptools-40.6.2-4.24.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6655",
      "Description": "A flaw was found in the GTK library. Under certain conditions, it is possible for a library to be injected into a GTK application from the current working directory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:gtk2-tools-2.24.31-9.9.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libgtk-2_0-0-2.24.31-9.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6923",
      "Description": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe \nemail module didn't properly quote newlines for email headers when \nserializing an email message allowing for header injection when an email\n is serialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libpython3_4m1_0-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-base-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-curses-3.4.10-25.139.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7006",
      "Description": "A null pointer dereference flaw was found in Libtiff via `tif_dirinfo.c`. This issue may allow an attacker to trigger memory allocation failures through certain means, such as restricting the heap space size or injecting faults, causing a segmentation fault. This can cause an application crash, eventually leading to a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libtiff5-4.0.9-44.86.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7264",
      "Description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:curl-8.0.1-11.95.2",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libcurl4-8.0.1-11.95.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7592",
      "Description": "There is a LOW severity vulnerability affecting CPython, specifically the\n'http.cookies' standard library module.\n\n\nWhen parsing cookies that contained backslashes for quoted characters in\nthe cookie value, the parser would use an algorithm with quadratic\ncomplexity, resulting in excess CPU resources being used while parsing the\nvalue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libpython3_4m1_0-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-base-3.4.10-25.139.1",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:python3-curses-3.4.10-25.139.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8006",
      "Description": "Remote packet capture support is disabled by default in libpcap.  When a user builds libpcap with remote packet capture support enabled, one of the functions that become available is pcap_findalldevs_ex().  One of the function arguments can be a filesystem path, which normally means a directory with input data files.  When the specified path cannot be used as a directory, the function receives NULL from opendir(), but does not check the return value and passes the NULL value to readdir(), which causes a NULL pointer derefence.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libpcap1-1.8.1-10.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8096",
      "Description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:curl-8.0.1-11.95.2",
            "Public Cloud Image google/sles-12-sp5-sap-byos-v20241028-x86-64:libcurl4-8.0.1-11.95.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}