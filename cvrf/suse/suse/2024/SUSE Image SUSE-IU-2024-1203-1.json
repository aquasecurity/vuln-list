{
  "Title": "SUSE-IU-2024:1203-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2024:1203-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2024-09-12T01:00:00Z",
    "CurrentReleaseDate": "2024-09-12T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-06-03T13:33:24Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2024:1203-1 / google/sle-micro-6-0-byos-v20240912-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sle-micro-6-0-byos-v20240912-x86-64 contains the following changes:\nPackage 000release-packages:SL-Micro-release was updated:\n\nPackage ca-certificates-mozilla was updated:\n\n- Updated to 2.68 state of Mozilla SSL root CAs (bsc#1227525)  - Added: FIRMAPROFESIONAL CA ROOT-A WEB\n  - Distrust: GLOBALTRUST 2020\n\n- Updated to 2.66 state of Mozilla SSL root CAs (bsc#1220356)\n  Added:\n  - CommScope Public Trust ECC Root-01\n  - CommScope Public Trust ECC Root-02\n  - CommScope Public Trust RSA Root-01\n  - CommScope Public Trust RSA Root-02\n  - D-Trust SBR Root CA 1 2022\n  - D-Trust SBR Root CA 2 2022\n  - Telekom Security SMIME ECC Root 2021\n  - Telekom Security SMIME RSA Root 2023\n  - Telekom Security TLS ECC Root 2020\n  - Telekom Security TLS RSA Root 2023\n  - TrustAsia Global Root CA G3\n  - TrustAsia Global Root CA G4\n  Removed:\n  - Autoridad de Certificacion Firmaprofesional CIF A62634068\n  - Chambers of Commerce Root - 2008\n  - Global Chambersign Root - 2008\n  - Security Communication Root CA\n  - Symantec Class 1 Public Primary Certification Authority - G6\n  - Symantec Class 2 Public Primary Certification Authority - G6\n  - TrustCor ECA-1\n  - TrustCor RootCert CA-1\n  - TrustCor RootCert CA-2\n  - VeriSign Class 1 Public Primary Certification Authority - G3\n  - VeriSign Class 2 Public Primary Certification Authority - G3\n- remove-trustcor.patch: removed, now upstream\n- do a versioned obsoletes of \u0026quot;openssl-certs\u0026quot;.\n\n- use rpm 4.20 compatible patch syntax\n\n- Use %patch -P N instead of deprecated %patchN.\n\nPackage cockpit was updated:\n\n- add CVE-2024-6126.patch to resolve CVE-2024-6126\n- add 0001-users-Support-for-watching-lastlog2-and-wutmp-on-ove.patch to fix bsc#1220551\n\nPackage curl was updated:\n\n- Security fix: [bsc#1228535, CVE-2024-7264]  * curl: ASN.1 date parser overread\n  * Add curl-CVE-2024-7264.patch\n\n- Security fix: [bsc#1227888, CVE-2024-6197]\n  * Freeing stack buffer in utf8asn1str\n  * x509asn1: remove superfluous free()\n  * Add curl-CVE-2024-6197.patch\n\n- Security fix: [bsc#1221666, CVE-2024-2379]\n  * curl: QUIC certificate check bypass with wolfSSL\n  * Add curl-CVE-2024-2379.patch\n\n- Security fix: [bsc#1221668, CVE-2024-2466]\n  * curl: TLS certificate check bypass with mbedTLS\n  * Add curl-CVE-2024-2466.patch\n\n- Security fix: [bsc#1221665, CVE-2024-2004]\n  * Usage of disabled protocol\n  * Add curl-CVE-2024-2004.patch\n\n- Security fix: [bsc#1221667, CVE-2024-2398]\n  * curl: HTTP/2 push headers memory-leak\n  * Add curl-CVE-2024-2398.patch\n\n- Remove the nghttp2 version requirement as a version guard around\n  the nghttp2_option_set_no_rfc9113_leading_and_trailing_ws_validation\n  function was added in curl 8.0.1.\n  * Upstream commit: https://github.com/curl/curl/commit/744dcf22\n\n- Add patch to fix various TLS related issues including FTP over SSL\n  transmission timeouts:\n  * 0001-vtls-revert-receive-max-buffer-add-test-case.patch\n- Switch to %autosetup\n\nPackage transactional-update was updated:\n\n- Version 4.8.1  - tukit: fix --drop-if-no-change after apply [bsc#1229900]\n\n- Version 4.8.0\n  - Add sd-boot (systemd-boot) support for most commands\n  - Add support for specifying migration arguments\n    [gh#openSUSE/transactional-update#127] [jsc#PED-10375]\n  - Support kdump setup on platforms without kdump high/low\n    settings (e.g. S/390 or PPC64le [bsc#1229138]\n  - Preserve current working directory if possible when entering\n    transactional-update environment [bsc#1227452]; also adds the\n    current path to the Bash prompt\n  - Fix plugin system to support special characters in commands\n\n- It seems it's taking a longer time until the tests will be\n  adopted to the new reboot behavior. Disable soft-reboot for now\n  to unblock the regular transactional-update update.\n\n- Version 4.7.0\n  - Add plugin mechanism\n    It's now possible to hook into API functions with custom\n    plugins; see doc/tukit-plugins.md for details.\n    [gh#openSUSE/transactional-update#122]\n  - Fix missing libdir replacement for status command\n\n- Enable soft-reboot by default again as announced in\n  https://microos.opensuse.org/blog/2024-06-13-soft-reboot/\n\n- Version 4.6.8\n  - tukit: Properly handle overlay syncing failures: If the system\n    would not be rebooted and several snapshots accumulated in the\n    meantime, it was possible that the previous base snapshot -\n    required for /etc syncing - was deleted already. In that case\n    changes in /etc might have been reset.\n    [gh#openSUSE/transactional-update#116]\n    [gh#kube-hetzner/terraform-hcloud-kube-hetzner#1287]\n  - soft-reboot: Log requested reboot type\n  - soft-reboot: Don't force hard reboot on version change only\n\n- Version 4.6.7\n  - Add support for snapper 0.11.0; also significantly decreases\n    cleanup time [boo#1223504]\n\nPackage dracut was updated:\n\n- Update to version 059+suse.571.g32b61281:  * feat(systemd*): include systemd config files from /usr/lib/systemd (bsc#1228398)\n  * fix(convertfs): error in conditional expressions (bsc#1228847)\n\n- Update to version 059+suse.567.gadd3169d:\n  * feat(crypt): force the inclusion of crypttab entries with x-initrd.attach (bsc#1226529)\n  * fix(mdraid): try to assemble the missing raid device (bsc#1226412)\n  * fix(dracut-install): continue parsing if ldd prints \u0026quot;cannot be preloaded\u0026quot; (bsc#1208690)\n\nPackage glib2 was updated:\n\n- Add patches to fix CVE-2024-34397 (boo#1224044):  glib2-CVE-2024-34397.patch (glgo#GNOME/glib#3268)\n  glib2-fix-ibus-regression.patch (glgo#GNOME/glib#3353)\n\nPackage glibc was updated:\n\n- s390x-wcsncmp.patch: s390x: Fix segfault in wcsncmp (bsc#1228041, BZ  [#31934])\n\n- Fix typo in last change\n\n- Also include stat64 in the 32-bit libc_nonshared.a workaround\n  (bsc#1221482)\n\n- ulp-prologue-into-asm-functions.patch: Avoid creating ULP prologue\n  for _start routine (bsc#1221940)\n\n- nscd-netgroup-cache-timeout.patch: Use time_t for return type of\n  addgetnetgrentX (CVE-2024-33602, bsc#1223425)\n- Also add libc_nonshared.a workaround to 32-bit x86 compat package\n  (bsc#1221482)\n\n- glibc-CVE-2024-33599-nscd-Stack-based-buffer-overflow-in-n.patch:\n  nscd: Stack-based buffer overflow in netgroup cache\n  (CVE-2024-33599, bsc#1223423, BZ #31677)\n- glibc-CVE-2024-33600-nscd-Avoid-null-pointer-crashes-after.patch:\n  nscd: Avoid null pointer crashes after notfound response\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33600-nscd-Do-not-send-missing-not-found-re.patch:\n  nscd: Do not send missing not-found response in addgetnetgrentX\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33601-CVE-2024-33602-nscd-netgroup-Use-two.patch:\n  netgroup: Use two buffers in addgetnetgrentX (CVE-2024-33601,\n  CVE-2024-33602, bsc#1223425, BZ #31680)\n\n- iconv-iso-2022-cn-ext.patch: iconv: ISO-2022-CN-EXT: fix out-of-bound\n  writes when writing escape sequence (CVE-2024-2961, bsc#1222992)\n\n- Add workaround for invalid use of libc_nonshared.a with non-SUSE libc\n  (bsc#1221482)\n\n- malloc-arena-get2.patch: malloc: Use __get_nprocs on arena_get2 (BZ\n  [#30945])\n- sched-getcpu-rseq-area.patch: linux: Use rseq area unconditionally in\n  sched_getcpu (BZ #31479)\n\nPackage kernel-source:kernel-default was updated:\n\n- HID: wacom: Modify pen IDs (git-fixes).- commit 9c450d7\n\n- Move upstreamed ASoC patch into sorted section\n- commit adae4df\n\n- xfs: add bounds checking to xlog_recover_process_data\n  (bsc#1228408 CVE-2024-41014).\n- commit bb0300d\n\n- xfs: don't walk off the end of a directory data block\n  (bsc#1228405 CVE-2024-41013).\n- commit 8a0b7eb\n\n- jfs: don't walk off the end of ealist (bsc#1228403\n  CVE-2024-41017).\n- commit 4159bc5\n\n- ext4: fold quota accounting into\n  ext4_xattr_inode_lookup_create() (bsc#1227910 CVE-2024-40972).\n- commit 94f6f2b\n\n- ext4: fix mb_cache_entry's e_refcnt leak in\n  ext4_xattr_block_cache_find() (bsc#1226993 CVE-2024-39276).\n- commit d72f4d7\n\n- block: fix request.queuelist usage in flush (bsc#1227789\n  CVE-2024-40925).\n- commit 4903430\n\n- supported.conf: mark vdpa modules supported (jsc#PED-8954)\n- commit 483ffd4\n\n- ext4: do not create EA inode under buffer lock (bsc#1227910\n  CVE-2024-40972).\n- commit 37fb4de\n\n- ext4: fix uninitialized ratelimit_state-\u0026gt;lock access in\n  __ext4_fill_super() (bsc#1227866 CVE-2024-40998).\n- commit cefc508\n\n- Update patch reference of AMDGPU fix (CVE-2024-41011 bsc#1228115)\n- commit 96de263\n\n- ceph: fix incorrect kmalloc size of pagevec mempool\n  (bsc#1228417).\n- commit 84977b0\n\n- ima: Fix use-after-free on a dentry's dname.name (bsc#1227716 CVE-2024-39494).\n- commit f7cf8d6\n\n- btrfs: zoned: fix use-after-free due to race with dev replace\n  (bsc#1227719 CVE-2024-39496).\n- commit c878f86\n\n- tun: add missing verification for short frame (CVE-2024-41091\n  bsc#1228327).\n- tap: add missing verification for short frame (CVE-2024-41090\n  bsc#1228328).\n- net: ena: Add validation for completion descriptors consistency\n  (CVE-2024-40999 bsc#1227913).\n- commit 7fa5ae2\n\n- Refresh\n  patches.kabi/tty-add-the-option-to-have-a-tty-reject-a-new-ldisc.patch.\n  Fix build for CONFIG_VT=n (ppc64le/kvmsmall).\n- commit 9280ac5\n\n- spi: spidev: add correct compatible for Rohm BH2228FV\n  (git-fixes).\n- spi: microchip-core: ensure TX and RX FIFOs are empty at start\n  of a transfer (git-fixes).\n- spi: microchip-core: only disable SPI controller when register\n  value change requires it (git-fixes).\n- spi: microchip-core: defer asserting chip select until just\n  before write to TX FIFO (git-fixes).\n- spi: microchip-core: fix the issues in the isr (git-fixes).\n- clk: davinci: da8xx-cfgchip: Initialize clk_init_data before\n  use (git-fixes).\n- decompress_bunzip2: fix rare decompression failure (git-fixes).\n- commit 536a80d\n\n- ALSA: usb-audio: Add a quirk for Sonix HD USB Camera\n  (stable-fixes).\n- ALSA: usb-audio: Move HD Webcam quirk to the right place\n  (git-fixes).\n- ALSA: usb-audio: Fix microphone sound on HD webcam\n  (stable-fixes).\n- commit 07826dc\n\n- auxdisplay: ht16k33: Drop reference after LED registration\n  (git-fixes).\n- ASoC: SOF: ipc4-topology: Preserve the DMA Link ID for ChainDMA\n  on unprepare (git-fixes).\n- ASoC: TAS2781: Fix tasdev_load_calibrated_data() (git-fixes).\n- ASoC: Intel: use soc_intel_is_byt_cr() only when IOSF_MBI is\n  reachable (git-fixes).\n- ASoC: sof: amd: fix for firmware reload failure in Vangogh\n  platform (git-fixes).\n- ASoC: SOF: imx8m: Fix DSP control regmap retrieval (git-fixes).\n- ALSA: hda/realtek: cs35l41: Fixup remaining asus strix models\n  (git-fixes).\n- ALSA: ump: Force 1 Group for MIDI1 FBs (git-fixes).\n- ALSA: ump: Don't update FB name for static blocks (git-fixes).\n- drm/amd/amdgpu: Fix uninitialized variable warnings (git-fixes).\n- drm/i915/gt: Do not consider preemption during execlists_dequeue\n  for gen8 (git-fixes).\n- drm/i915/dp: Don't switch the LTTPR mode on an active link\n  (git-fixes).\n- commit d7e2deb\n\n- ALSA: hda/conexant: Mute speakers at suspend / shutdown\n  (bsc#1228269).\n- ALSA: hda/generic: Add a helper to mute speakers at\n  suspend/shutdown (bsc#1228269).\n- commit e046d5e\n\n- Refresh the previous ASoC patch, landed in subsystem tree (bsc#1228269)\n- commit 180425d\n\n- kABI: tty: add the option to have a tty reject a new ldisc\n  (kabi CVE-2024-40966 bsc#1227886).\n- tty: add the option to have a tty reject a new ldisc\n  (CVE-2024-40966 bsc#1227886).\n- commit 00113b6\n\n- fs/file: fix the check in find_next_fd() (git-fixes).\n- commit 3ec6b68\n\n- erofs: ensure m_llen is reset to 0 if metadata is invalid\n  (git-fixes).\n- commit 03e55bf\n\n- jfs: Fix array-index-out-of-bounds in diFree (git-fixes).\n- commit a89a289\n\n- hfsplus: fix uninit-value in copy_name (git-fixes).\n- commit 4f0ad7b\n\n- mISDN: Fix a use after free in hfcmulti_tx() (git-fixes).\n- devres: Fix memory leakage caused by driver API\n  devm_free_percpu() (git-fixes).\n- devres: Fix devm_krealloc() wasting memory (git-fixes).\n- kobject_uevent: Fix OOB access within zap_modalias_env()\n  (git-fixes).\n- watchdog: rzn1: Convert comma to semicolon (git-fixes).\n- watchdog: rzg2l_wdt: Check return status of pm_runtime_put()\n  (git-fixes).\n- watchdog: rzg2l_wdt: Use pm_runtime_resume_and_get()\n  (git-fixes).\n- dma: fix call order in dmam_free_coherent (git-fixes).\n- mISDN: fix MISDN_TIME_STAMP handling (git-fixes).\n- commit 69aa862\n\n- drm/amd/display: Fix array-index-out-of-bounds in\n  dml2/FCLKChangeSupport (stable-fixes).\n- drm/amd/display: Update efficiency bandwidth for dcn351\n  (stable-fixes).\n- drm/ttm: Always take the bo delayed cleanup path for imported\n  bos (git-fixes).\n- drm/amd/display: change dram_clock_latency to 34us for dcn35\n  (stable-fixes).\n- drm/amdgpu: fix locking scope when flushing tlb (stable-fixes).\n- wifi: mac80211: Avoid address calculations via out of bounds\n  array indexing (stable-fixes).\n- drm/amdkfd: Let VRAM allocations go to GTT domain on small APUs\n  (stable-fixes).\n- drm/amd/display: ASSERT when failing to find index by\n  plane/stream id (stable-fixes).\n- drm/amd/display: Fix overlapping copy within\n  dml_core_mode_programming (stable-fixes).\n- drm/amd/display: Skip pipe if the pipe idx not set properly\n  (stable-fixes).\n- drm/amd/display: Workaround register access in idle race with\n  cursor (stable-fixes).\n- commit 830869c\n\n- ALSA: pcm_dmaengine: Don't synchronize DMA channel when DMA\n  is paused (git-fixes).\n- commit aadeb44\n\n- spi: mux: set ctlr-\u0026gt;bits_per_word_mask (stable-fixes).\n- wifi: iwlwifi: mvm: don't wake up rx_sync_waitq upon RFKILL\n  (git-fixes).\n- wifi: iwlwifi: properly set WIPHY_FLAG_SUPPORTS_EXT_KEK_KCK\n  (stable-fixes).\n- wifi: mac80211: disable softirqs for queued frame handling\n  (git-fixes).\n- wifi: cfg80211: wext: add extra SIOCSIWSCAN data check\n  (stable-fixes).\n- wifi: cfg80211: wext: set ssids=NULL for passive scans\n  (git-fixes).\n- wifi: mac80211: fix UBSAN noise in ieee80211_prep_hw_scan()\n  (stable-fixes).\n- wifi: iwlwifi: mvm: Fix scan abort handling with HW rfkill\n  (stable-fixes).\n- wifi: iwlwifi: mvm: properly set 6 GHz channel direct probe\n  option (stable-fixes).\n- wifi: iwlwifi: mvm: handle BA session teardown in RF-kill\n  (stable-fixes).\n- wifi: iwlwifi: mvm: Handle BIGTK cipher in kek_kck cmd\n  (stable-fixes).\n- wifi: iwlwifi: mvm: remove stale STA link data during restart\n  (stable-fixes).\n- wifi: iwlwifi: mvm: d3: fix WoWLAN command version lookup\n  (stable-fixes).\n- wifi: cfg80211: fix 6 GHz scan request building (stable-fixes).\n- wifi: mac80211: handle tasklet frames before stopping\n  (stable-fixes).\n- wifi: mac80211: apply mcast rate only if interface is up\n  (stable-fixes).\n- wifi: mac80211: mesh: init nonpeer_pm to active by default in\n  mesh sdata (stable-fixes).\n- tools/power/cpupower: Fix Pstate frequency reporting on AMD\n  Family 1Ah CPUs (stable-fixes).\n- tools/power turbostat: Remember global max_die_id\n  (stable-fixes).\n- commit 37df9b4\n\n- phy: cadence-torrent: Check return value on register read\n  (git-fixes).\n- kbuild: avoid build error when single DTB is turned into\n  composite DTB (git-fixes).\n- remoteproc: stm32_rproc: Fix mailbox interrupts queuing\n  (git-fixes).\n- remoteproc: k3-r5: Fix IPC-only mode detection (git-fixes).\n- remoteproc: imx_rproc: Fix refcount mistake in\n  imx_rproc_addr_init (git-fixes).\n- remoteproc: imx_rproc: Skip over memory region when node value\n  is NULL (git-fixes).\n- mailbox: mtk-cmdq: Move devm_mbox_controller_register() after\n  devm_pm_runtime_enable() (git-fixes).\n- power: supply: ingenic: Fix some error handling paths in\n  ingenic_battery_get_property() (git-fixes).\n- power: supply: ab8500: Fix error handling when calling\n  iio_read_channel_processed() (git-fixes).\n- spi: imx: Don't expect DMA for i.MX{25,35,50,51,53} cspi devices\n  (stable-fixes).\n- net: mac802154: Fix racy device stats updates by DEV_STATS_INC()\n  and DEV_STATS_ADD() (stable-fixes).\n- platform/x86: lg-laptop: Use ACPI device handle when evaluating\n  WMAB/WMBB (stable-fixes).\n- platform/x86: lg-laptop: Change ACPI device id (stable-fixes).\n- platform/x86: lg-laptop: Remove LGEX0815 hotkey handling\n  (stable-fixes).\n- platform/x86: wireless-hotkey: Add support for LG Airplane\n  Button (stable-fixes).\n- net: usb: qmi_wwan: add Telit FN912 compositions (stable-fixes).\n- Input: ads7846 - use spi_device_id table (stable-fixes).\n- mei: demote client disconnect warning on suspend to debug\n  (stable-fixes).\n- kconfig: remove wrong expr_trans_bool() (stable-fixes).\n- kconfig: gconf: give a proper initial state to the Save button\n  (stable-fixes).\n- commit f6cec75\n\n- dmaengine: ti: k3-udma: Fix BCHAN count with UHC and HC channels\n  (git-fixes).\n- docs: crypto: async-tx-api: fix broken code example (git-fixes).\n- drm/radeon: check bo_va-\u0026gt;bo is non-NULL before using it\n  (stable-fixes).\n- drm/amd/display: Fix refresh rate range for some panel\n  (stable-fixes).\n- drm/amd/display: Account for cursor prefetch BW in DML1 mode\n  support (stable-fixes).\n- drm/amd/display: Add refresh rate range check (stable-fixes).\n- gpio: pca953x: fix pca953x_irq_bus_sync_unlock race\n  (stable-fixes).\n- can: kvaser_usb: fix return value for hif_usb_send_regout\n  (stable-fixes).\n- Input: xpad - add support for ASUS ROG RAIKIRI PRO\n  (stable-fixes).\n- Input: i8042 - add Ayaneo Kun to i8042 quirk table\n  (stable-fixes).\n- Input: elantech - fix touchpad state on resume for Lenovo N24\n  (stable-fixes).\n- drm/vmwgfx: Fix missing HYPERVISOR_GUEST dependency\n  (stable-fixes).\n- drm/amdgpu: Indicate CU havest info to CP (stable-fixes).\n- drm/exynos: dp: drop driver owner initialization (stable-fixes).\n- drm/mediatek: Call drm_atomic_helper_shutdown() at shutdown time\n  (stable-fixes).\n- drm: panel-orientation-quirks: Add quirk for Aya Neo KUN\n  (stable-fixes).\n- HID: Ignore battery for ELAN touchscreens 2F2C and 4116\n  (stable-fixes).\n- input: Add support for \u0026quot;Do Not Disturb\u0026quot; (stable-fixes).\n- input: Add event code for accessibility key (stable-fixes).\n- Input: silead - Always support 10 fingers (stable-fixes).\n- commit a5bc4da\n\n- Bluetooth: btnxpuart: Enable Power Save feature on startup\n  (stable-fixes).\n- Bluetooth: hci_core: cancel all works upon hci_unregister_dev()\n  (stable-fixes).\n- ASoC: amd: yc: Fix non-functional mic on ASUS M5602RA\n  (stable-fixes).\n- ASoC: rt722-sdca-sdw: add debounce time for type detection\n  (stable-fixes).\n- ASoC: SOF: sof-audio: Skip unprepare for in-use widgets on\n  error rollback (stable-fixes).\n- ASoC: ti: davinci-mcasp: Set min period size using FIFO config\n  (stable-fixes).\n- ALSA: dmaengine: Synchronize dma channel after drop()\n  (stable-fixes).\n- ASoC: ti: omap-hdmi: Fix too long driver name (stable-fixes).\n- ASoC: topology: Do not assign fields that are already set\n  (stable-fixes).\n- ASoC: topology: Fix references to freed memory (stable-fixes).\n- bytcr_rt5640 : inverse jack detect for Archos 101 cesium\n  (stable-fixes).\n- ASoC: rt722-sdca-sdw: add silence detection register as volatile\n  (stable-fixes).\n- ALSA: dmaengine_pcm: terminate dmaengine before synchronize\n  (stable-fixes).\n- ALSA: hda/relatek: Enable Mute LED on HP Laptop 15-gw0xxx\n  (stable-fixes).\n- ALSA: PCM: Allow resume only for suspended streams\n  (stable-fixes).\n- ACPI: EC: Avoid returning AE_OK on errors in address space\n  handler (stable-fixes).\n- ACPI: EC: Abort address space access upon error (stable-fixes).\n- commit aa63c91\n\n- config/arm64: Enable CoreSight PMU drivers (bsc#1228289 jsc#PED-7859)\n- commit f80ff65\n\n- platform/x86: x86-android-tablets: Unregister devices in\n  reverse order (CVE-2024-40975 bsc#1227926).\n- commit 16439fd\n\n- Avoid hw_desc array overrun in dw-axi-dmac (CVE-2024-40970\n  bsc#1227899).\n- commit 8f7016c\n\n- ASoC: amd: yc: Support mic on Lenovo Thinkpad E16 Gen 2\n  (bsc#1228269).\n- commit 78e0f74\n\n- ima: Avoid blocking in RCU read-side critical section (bsc#1227803, CVE-2024-40947).\n- commit 6fea688\n\n- bpf: Set run context for rawtp test_run callback (bsc#1227783\n  CVE-2024-40908).\n- commit c965ae8\n\n- nfs: Fix up kabi after adding write_congestion_wait\n  (bsc#1218442).\n- commit fa72236\n\n- ipv6: prevent possible NULL dereference in rt6_probe()\n  (CVE-2024-40960 bsc#1227813).\n- commit acda250\n\n- PCI: keystone: Relocate ks_pcie_set/clear_dbi_mode()\n  (git-fixes).\n- commit e717f73\n\n- x86/csum: clean up `csum_partial' further (git-fixes).\n- commit eb0657c\n\n- x86/resctrl: Remove redundant variable in mbm_config_write_domain() (git-fixes).\n- commit 7ae6079\n\n- blacklist.conf: This patch gets reverted\n- commit c490f33\n\n- x86/resctrl: Read supported bandwidth sources from CPUID (git-fixes).\n- commit 907534d\n\n- blacklist.conf: Remove dead-end revert\n  We never merged the buggy upstream fix.\n- commit 9b319fd\n\n- x86/shstk: Make return uprobe work with shadow stack (git-fixes).\n- commit a22c34a\n\n- x86/kconfig: Add as-instr64 macro to properly evaluate AS_WRUSS (git-fixes).\n- commit 0887d68\n\n- x86/insn: Add VEX versions of VPDPBUSD, VPDPBUSDS, VPDPWSSD and  VPDPWSSDS (git-fixes).\n- commit 4b4922f\n\n- x86/fpu: Fix AMD X86_BUG_FXSAVE_LEAK fixup (git-fixes).\n- commit 4c24788\n\n- x86/cpu: Provide default cache line size if not enumerated (git-fixes).\n- commit c2b6a76\n\n- x86/bhi: Avoid warning in #DB handler due to BHI mitigation :(git-fixes).\n- commit d32b5a4\n\n- x86/apic: Force native_apic_mem_read() to use the MOV instruction (git-fixes).\n- commit a7c18d6\n\n- x86/amd_nb: Check for invalid SMN reads (git-fixes).\n- commit 5e0a2ff\n\n- cachefiles: flush all requests after setting CACHEFILES_DEAD\n  (bsc#1227797 CVE-2024-40935).\n- commit 6acb040\n\n- PCI: tegra194: Set EP alignment restriction for inbound ATU\n  (git-fixes).\n- PCI: keystone: Fix NULL pointer dereference in case of DT\n  error in ks_pcie_setup_rc_app_regs() (git-fixes).\n- PCI: keystone: Don't enable BAR 0 for AM654x (git-fixes).\n- commit 3d6a567\n\n- ipv6: prevent possible NULL deref in fib6_nh_init()\n  (CVE-2024-40961 bsc#1227814).\n- commit 3de66de\n\n- PCI: Extend ACS configurability (bsc#1228090).\n- commit 571e431\n\n- netfilter: nft_inner: validate mandatory meta and payload (bsc#1227757 CVE-2024-39504).\n- commit becdc7a\n\n- nfs: Block on write congestion (bsc#1218442).\n- commit b7f1cad\n\n- nfs: Properly initialize server-\u0026gt;writeback (bsc#1218442).\n- commit c293976\n\n- nfs: Drop pointless check from nfs_commit_release_pages()\n  (bsc#1218442).\n- commit 20931fe\n\n- kabi/severities: cleanup and update for WiFi driver entries (bsc#1227149)\n- commit 777b4e0\n\n- wifi: libertas: Follow renaming of SPI \u0026quot;master\u0026quot; to \u0026quot;controller\u0026quot;\n  (bsc#1227149).\n- wifi: cw1200: restore endian swapping (bsc#1227149).\n- wifi: wlcore: sdio: Rate limit wl12xx_sdio_raw_{read,write}()\n  failures warns (bsc#1227149).\n- wifi: zd1211rw: silence sparse warnings (bsc#1227149).\n- wifi: rt2x00: silence sparse warnings (bsc#1227149).\n- wifi: brcmsmac: silence sparse warnings (bsc#1227149).\n- wifi: b43: silence sparse warnings (bsc#1227149).\n- wifi: brcmfmac: do not pass hidden SSID attribute as value\n  directly (bsc#1227149).\n- wifi: brcmfmac: fweh: Fix boot crash on Raspberry Pi 4\n  (bsc#1227149).\n- wifi: wilc1000: remove AKM suite be32 conversion for external\n  auth request (bsc#1227149).\n- wifi: wilc1000: add missing read critical sections around vif\n  list traversal (bsc#1227149).\n- wifi: wilc1000: fix declarations ordering (bsc#1227149).\n- wifi: wilc1000: use SRCU instead of RCU for vif list traversal\n  (bsc#1227149).\n- wifi: wilc1000: split deeply nested RCU list traversal in\n  dedicated helper (bsc#1227149).\n- wifi: wilc1000: validate chip id during bus probe (bsc#1227149).\n- wifi: brcmfmac: do not cast hidden SSID attribute value to\n  boolean (bsc#1227149).\n- wifi: mwifiex: Refactor 1-element array into flexible array\n  in struct mwifiex_ie_types_chan_list_param_set (bsc#1227149).\n- wifi: wilc1000: correct CRC7 calculation (bsc#1227149).\n- wifi: wilc1000: set preamble size to auto as default in\n  wilc_init_fw_config() (bsc#1227149).\n- wifi: mwifiex: use kstrtoX_from_user() in debugfs handlers\n  (bsc#1227149).\n- wifi: wilc1000: remove setting msg.spi (bsc#1227149).\n- wifi: cw1200: Convert to GPIO descriptors (bsc#1227149).\n- wifi: plfxlc: Drop unused include (bsc#1227149).\n- wifi: mwifiex: Drop unused headers (bsc#1227149).\n- wifi: ti: wlcore: sdio: Drop unused include (bsc#1227149).\n- wifi: cw1200: fix __le16 sparse warnings (bsc#1227149).\n- wifi: rsi: fix restricted __le32 degrades to integer sparse\n  warnings (bsc#1227149).\n- wifi: zd1211rw: remove __nocast from zd_addr_t (bsc#1227149).\n- wifi: brcmfmac: add linefeed at end of file (bsc#1227149).\n- wifi: brcmfmac: allow per-vendor event handling (bsc#1227149).\n- wifi: brcmfmac: move feature overrides before feature_disable\n  (bsc#1227149).\n- wifi: brcmfmac: export firmware interface functions\n  (bsc#1227149).\n- wifi: rt2x00: simplify rt2x00crypto_rx_insert_iv()\n  (bsc#1227149).\n- wifi: mwifiex: Use helpers to check multicast addresses\n  (bsc#1227149).\n- wifi: brcmsmac: phy: Remove unreachable code (bsc#1227149).\n- wifi: wilc1000: fix incorrect power down sequence (bsc#1227149).\n- wifi: wilc1000: fix driver_handler when committing initial\n  configuration (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for wilc1000 (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for wl18xx (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for p54spi (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for Broadcom WLAN\n  (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for wl1251 and wl12xx\n  (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for wlcore (bsc#1227149).\n- wifi: p54: fix GCC format truncation warning with\n  wiphy-\u0026gt;fw_version (bsc#1227149).\n- wifi: mwifiex: use cfg80211_ssid_eq() instead of\n  mwifiex_ssid_cmp() (bsc#1227149).\n- wifi: rt2x00: remove useless code in\n  rt2x00queue_create_tx_descriptor() (bsc#1227149).\n- commit 08ddd32\n\n- wifi: rt2x00: make watchdog param per device (bsc#1227149).\n- wifi: rt2x00: Simplify bool conversion (bsc#1227149).\n- wifi: mwifiex: mwifiex_process_sleep_confirm_resp(): remove\n  unused priv variable (bsc#1227149).\n- wifi: rt2x00: disable RTS threshold for rt2800 by default\n  (bsc#1227149).\n- wifi: rt2x00: introduce DMA busy check watchdog for rt2800\n  (bsc#1227149).\n- wifi: wilc1000: simplify wilc_scan() (bsc#1227149).\n- wifi: wilc1000: cleanup struct wilc_conn_info (bsc#1227149).\n- wifi: wilc1000: always release SDIO host in wilc_sdio_cmd53()\n  (bsc#1227149).\n- wifi: wilc1000: simplify remain on channel support\n  (bsc#1227149).\n- wifi: brcmsmac: replace deprecated strncpy with memcpy\n  (bsc#1227149).\n- wifi: brcm80211: replace deprecated strncpy with strscpy\n  (bsc#1227149).\n- wifi: rt2x00: rework MT7620 PA/LNA RF calibration (bsc#1227149).\n- wifi: rt2x00: rework MT7620 channel config function\n  (bsc#1227149).\n- commit 055fd52\n\n- wifi: rt2x00: improve MT7620 register initialization\n  (bsc#1227149).\n- wifi: wlcore: main: replace deprecated strncpy with strscpy\n  (bsc#1227149).\n- wifi: wlcore: boot: replace deprecated strncpy with strscpy\n  (bsc#1227149).\n- wifi: wl18xx: replace deprecated strncpy with strscpy\n  (bsc#1227149).\n- wifi: wl1251: replace deprecated strncpy with strscpy\n  (bsc#1227149).\n- wifi: rt2x00: fix rt2800 watchdog function (bsc#1227149).\n- wifi: brcmfmac: fix format-truncation warnings (bsc#1227149).\n- wifi: hostap: remove unused ioctl function (bsc#1227149).\n- wifi: atmel: remove unused ioctl function (bsc#1227149).\n- wifi: p54: Annotate struct p54_cal_database with __counted_by\n  (bsc#1227149).\n- wifi: brcmfmac: fweh: Add __counted_by for struct\n  brcmf_fweh_queue_item and use struct_size() (bsc#1227149).\n- wifi: hostap: Add __counted_by for struct prism2_download_data\n  and use struct_size() (bsc#1227149).\n- wifi: wfx: implement wfx_remain_on_channel() (bsc#1227149).\n- wifi: wfx: allow to send frames during ROC (bsc#1227149).\n- wifi: wfx: scan_lock is global to the device (bsc#1227149).\n- wifi: wfx: simplify exclusion between scan and Rx filters\n  (bsc#1227149).\n- wifi: wfx: introduce hif_scan_uniq() (bsc#1227149).\n- wifi: wfx: move wfx_skb_*() out of the header file\n  (bsc#1227149).\n- wifi: wfx: relocate wfx_rate_mask_to_hw() (bsc#1227149).\n- wifi: wfx: fix power_save setting when AP is stopped\n  (bsc#1227149).\n- commit 859f128\n\n- wifi: mwifiex: Replace one-element array with flexible-array\n  member in struct mwifiex_ie_types_rxba_sync (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mwifiex-Sanity-check-tlv_len-and-tlv_bitmap_len.patch.\n- commit 0e5befb\n\n- wifi: rt2x00: fix MT7620 low RSSI issue (bsc#1227149).\n- wifi: rt2x00: remove redundant check if u8 array element is\n  less than zero (bsc#1227149).\n- wifi: mwifiex: followup PCIE and related cleanups (bsc#1227149).\n- wifi: mwifiex: simplify PCIE write operations (bsc#1227149).\n- wifi: wilc1000: add back-off algorithm to balance tx queue\n  packets (bsc#1227149).\n- wifi: mwifiex: use MODULE_FIRMWARE to add firmware files\n  metadata (bsc#1227149).\n- wifi: mwifiex: cleanup struct mwifiex_sdio_mpa_rx (bsc#1227149).\n- wifi: brcmfmac: firmware: Annotate struct brcmf_fw_request\n  with __counted_by (bsc#1227149).\n- wifi: brcmfmac: Annotate struct brcmf_gscan_config with\n  __counted_by (bsc#1227149).\n- wifi: cw1200: Avoid processing an invalid TIM IE (bsc#1227149).\n- wifi: wlcore: sdio: Use module_sdio_driver macro to simplify\n  the code (bsc#1227149).\n- wifi: wilc1000: Remove unused declarations (bsc#1227149).\n- wifi: rt2x00: limit MT7620 TX power based on eeprom calibration\n  (bsc#1227149).\n- wifi: wfx: Use devm_kmemdup to replace devm_kmalloc + memcpy\n  (bsc#1227149).\n- wifi: rsi: rsi_91x_usb_ops: Remove unnecessary (void*)\n  conversions (bsc#1227149).\n- wifi: rsi: rsi_91x_usb: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: rsi: rsi_91x_sdio_ops: Remove unnecessary (void*)\n  conversions (bsc#1227149).\n- wifi: rsi: rsi_91x_sdio: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- commit a544c26\n\n- wifi: rsi: rsi_91x_main: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: rsi: rsi_91x_mac80211: Remove unnecessary conversions\n  (bsc#1227149).\n- wifi: rsi: rsi_91x_hal: Remove unnecessary conversions\n  (bsc#1227149).\n- wifi: rsi: rsi_91x_debugfs: Remove unnecessary (void*)\n  conversions (bsc#1227149).\n- wifi: rsi: rsi_91x_coex: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: rt2x00: correct MAC_SYS_CTRL register RX mask in\n  R-Calibration (bsc#1227149).\n- wifi: mwifiex: fix comment typos in SDIO module (bsc#1227149).\n- wifi: mwifiex: cleanup adapter data (bsc#1227149).\n- wifi: mwifiex: use is_zero_ether_addr() instead of\n  ether_addr_equal() (bsc#1227149).\n- wifi: mwifiex: drop BUG_ON from TX paths (bsc#1227149).\n- wifi: mwifiex: handle possible mwifiex_write_reg() errors\n  (bsc#1227149).\n- wifi: mwifiex: handle possible sscanf() errors (bsc#1227149).\n- wifi: mwifiex: cleanup private data structures (bsc#1227149).\n- wlcore: spi: Remove redundant of_match_ptr() (bsc#1227149).\n- wifi: brcmsmac: cleanup SCB-related data types (bsc#1227149).\n- wifi: brcmsmac: remove more unused data types (bsc#1227149).\n- wifi: libertas: prefer kstrtoX() for simple integer conversions\n  (bsc#1227149).\n- wifi: libertas: handle possible spu_write_u16() errors\n  (bsc#1227149).\n- wifi: libertas: cleanup SDIO reset (bsc#1227149).\n- wifi: libertas: simplify list operations in free_if_spi_card()\n  (bsc#1227149).\n- wifi: libertas: use convenient lists to manage SDIO packets\n  (bsc#1227149).\n- wifi: libertas: add missing calls to cancel_work_sync()\n  (bsc#1227149).\n- wifi: wilc1000: add SPI commands retry mechanism (bsc#1227149).\n- wifi: wilc1000: remove use of has_thrpt_enh3 flag (bsc#1227149).\n- wifi: brcmsmac: remove unused data type (bsc#1227149).\n- wifi: mwifiex: Set WIPHY_FLAG_NETNS_OK flag (bsc#1227149).\n- wifi: mwifiex: prefer strscpy() over strlcpy() (bsc#1227149).\n- wifi: zd1211rw: fix typo \u0026quot;tranmits\u0026quot; (bsc#1227149).\n- wifi: p54: Add missing MODULE_FIRMWARE macro (bsc#1227149).\n- wifi: hostap: fix stringop-truncations GCC warning\n  (bsc#1227149).\n- wifi: brcmsmac: fix gnu_printf warnings (bsc#1227149).\n- wifi: brcmfmac: fix gnu_printf warnings (bsc#1227149).\n- wifi: rt2x00: fix the typo in comments (bsc#1227149).\n- wifi: brcmfmac: Detect corner error case earlier with log\n  (bsc#1227149).\n- wifi: brcmutil: use helper function pktq_empty() instead of\n  open code (bsc#1227149).\n- wifi: add HAS_IOPORT dependencies (bsc#1227149).\n- wifi: wilc1000: Increase ASSOC response buffer (bsc#1227149).\n- wifi: mwifiex: Use list_count_nodes() (bsc#1227149).\n- wifi: mwifiex: Use default @max_active for workqueues\n  (bsc#1227149).\n- commit edbabc2\n\n- xfs: Add cond_resched to block unmap range and reflink remap\n  path (bsc#1228211).\n- commit 4c79a42\n\n- supported.conf: Add support for v4l2-dv-timings\n  (jsc#PED-8645)\n- commit 6262df7\n\n- supported.conf: Add support for v4l2-dv-timings\n  (jsc#PED-8644)\n- commit a3622c5\n\n- netrom: Fix a memory leak in nr_heartbeat_expiry()\n  (CVE-2024-41006 bsc#1227862).\n- commit 59ef181\n\n- arm64: dts: rockchip: Add missing power-domains for rk356x vop_mmu (git-fixes)\n- commit 6571948\n\n- arm64: dts: rockchip: Fix mic-in-differential usage on (git-fixes)\n- commit 67939cb\n\n- arm64: dts: rockchip: Fix mic-in-differential usage on rk3566-roc-pc (git-fixes)\n- commit 5ed815a\n\n- arm64: dts: rockchip: Drop invalid mic-in-differential on (git-fixes)\n- commit af4620a\n\n- arm64: dts: rockchip: Increase VOP clk rate on RK3328 (git-fixes)\n- commit 0171830\n\n- arm64: dts: rockchip: Update WIFi/BT related nodes on (git-fixes)\n- commit 2186774\n\n- arm64: dts: rockchip: Add mdio and ethernet-phy nodes to (git-fixes)\n- commit 7bd1596\n\n- arm64: dts: rockchip: Add pinctrl for UART0 to rk3308-rock-pi-s (git-fixes)\n- commit a5c559a\n\n- arm64: dts: rockchip: Add sdmmc related properties on (git-fixes)\n- commit 07ed999\n\n- arm64: dts: rockchip: Add sound-dai-cells for RK3368 (git-fixes)\n- commit 0d2dc44\n\n- arm64: dts: rockchip: fix PMIC interrupt pin on ROCK Pi E (git-fixes)\n- commit 17c17ec\n\n- arm64: dts: rockchip: Fix the value of `dlg,jack-det-rate` mismatch (git-fixes)\n- commit ef568ac\n\n- arm64: dts: rockchip: Rename LED related pinctrl nodes on (git-fixes)\n- commit 3ac3475\n\n- arm64: dts: rockchip: Fix SD NAND and eMMC init on rk3308-rock-pi-s (git-fixes)\n- commit f0f8ba5\n\n- arm64: dts: rockchip: Fix the DCDC_REG2 minimum voltage on Quartz64 (git-fixes)\n- commit a564fef\n\n- arm64: dts: imx8qm-mek: fix gpio number for reg_usdhc2_vmmc (git-fixes)\n- commit d7e72e1\n\n- arm64: dts: freescale: imx8mm-verdin: enable hysteresis on slow input (git-fixes)\n- commit ca6c1bb\n\n- arm64: dts: imx93-11x11-evk: Remove the 'no-sdio' property (git-fixes)\n- commit a10e3de\n\n- blacklist.conf: (\u0026quot;arm64: dts: freescale: imx8mm-verdin: Fix GPU speed\u0026quot;)\n- commit ea9f475\n\n- Move upstreamed patches into sorted section\n- commit 0bb0cc8\n\n- fuse: verify {g,u}id mount options correctly (bsc#1228193).\n- libceph: fix race between delayed_work() and ceph_monc_stop()\n  (bsc#1228192).\n- commit 10e7bb9\n\n- nilfs2: avoid undefined behavior in nilfs_cnt32_ge macro\n  (git-fixes).\n- checkpatch: really skip LONG_LINE_* when LONG_LINE is ignored\n  (git-fixes).\n- rtc: interface: Add RTC offset to alarm after fix-up\n  (git-fixes).\n- rtc: abx80x: Fix return value of nvmem callback on read\n  (git-fixes).\n- rtc: cmos: Fix return value of nvmem callbacks (git-fixes).\n- rtc: isl1208: Fix return value of nvmem callbacks (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix TPU suffixes (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix TCLK suffixes (git-fixes).\n- pinctrl: renesas: r8a779g0: FIX PWM suffixes (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix IRQ suffixes (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix (H)SCIF3 suffixes (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix (H)SCIF1 suffixes (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix FXR_TXEN[AB] suffixes\n  (git-fixes).\n- pinctrl: renesas: r8a779g0: Fix CANFD5 suffix (git-fixes).\n- pinctrl: freescale: mxs: Fix refcount of child (git-fixes).\n- pinctrl: ti: ti-iodelay: fix possible memory leak when\n  pinctrl_enable() fails (git-fixes).\n- pinctrl: single: fix possible memory leak when pinctrl_enable()\n  fails (git-fixes).\n- pinctrl: core: fix possible memory leak when pinctrl_enable()\n  fails (git-fixes).\n- pinctrl: rockchip: update rk3308 iomux routes (git-fixes).\n- selftests/sigaltstack: Fix ppc64 GCC build (git-fixes).\n- PCI: dw-rockchip: Fix initial PERST# GPIO value (git-fixes).\n- PCI: rockchip: Use GPIOD_OUT_LOW flag while requesting ep_gpio\n  (git-fixes).\n- PCI: rcar: Demote WARN() to dev_warn_ratelimited() in\n  rcar_pcie_wakeup() (git-fixes).\n- PCI: qcom-ep: Disable resources unconditionally during PERST#\n  assert (git-fixes).\n- PCI: dwc: Fix index 0 incorrectly being interpreted as a free\n  ATU slot (git-fixes).\n- PCI: endpoint: Fix error handling in epf_ntb_epc_cleanup()\n  (git-fixes).\n- PCI: endpoint: Clean up error handling in vpci_scan_bus()\n  (git-fixes).\n- PCI: endpoint: pci-epf-test: Make use of cached 'epc_features'\n  in pci_epf_test_core_init() (git-fixes).\n- PCI: Fix resource double counting on remove \u0026amp; rescan\n  (git-fixes).\n- PCI/DPC: Fix use-after-free on concurrent DPC and hot-removal\n  (git-fixes).\n- PCI: Introduce cleanup helpers for device reference counts\n  and locks (stable-fixes).\n- commit a7e6cbc\n\n- ALSA: hda/realtek: Fix the speaker output on Samsung Galaxy\n  Book Pro 360 (stable-fixes).\n- ALSA: hda/tas2781: Add new quirk for Lenovo Hera2 Laptop\n  (stable-fixes).\n- ASoC: SOF: ipc4-topology: Use correct queue_id for requesting\n  input pin format (stable-fixes).\n- ALSA: hda/realtek: Enable headset mic on Positivo SU C1400\n  (stable-fixes).\n- commit be4d8bf\n\n- eeprom: at24: Probe for DDR3 thermal sensor in the SPD case\n  (stable-fixes).\n- Refresh\n  patches.suse/eeprom-at24-fix-memory-corruption-race-condition.patch.\n- commit 82fbd42\n\n- Input: elan_i2c - do not leave interrupt disabled on suspend\n  failure (git-fixes).\n- Input: qt1050 - handle CHIP_ID reading error (git-fixes).\n- interconnect: qcom: qcm2290: Fix mas_snoc_bimc RPM master ID\n  (git-fixes).\n- iio: frequency: adrf6780: rm clk provider include (git-fixes).\n- iio: Fix the sorting functionality in\n  iio_gts_build_avail_time_table (git-fixes).\n- eeprom: digsy_mtc: Fix 93xx46 driver probe failure (git-fixes).\n- Revert \u0026quot;usb: musb: da8xx: Set phy in OTG mode by default\u0026quot;\n  (stable-fixes).\n- ALSA: seq: ump: Skip useless ports for static blocks\n  (git-fixes).\n- ASoC: fsl: fsl_qmc_audio: Check devm_kasprintf() returned value\n  (git-fixes).\n- ASoC: amd: Adjust error handling in case of absent codec device\n  (git-fixes).\n- ASoC: max98088: Check for clk_prepare_enable() error\n  (git-fixes).\n- ASoC: qcom: Adjust issues in case of DT error in\n  asoc_qcom_lpass_cpu_platform_probe() (git-fixes).\n- ASoC: cs35l56: Accept values greater than 0 as IRQ numbers\n  (git-fixes).\n- ASoc: tas2781: Enable RCA-based playback without DSP firmware\n  download (git-fixes).\n- crypto: qat - extend scope of lock in\n  adf_cfg_add_key_value_param() (git-fixes).\n- hwrng: core - Fix wrong quality calculation at hw rng\n  registration (git-fixes).\n- crypto: ccp - Fix null pointer dereference in\n  __sev_snp_shutdown_locked (git-fixes).\n- crypto: ecdsa - Fix the public key format description\n  (git-fixes).\n- hwrng: amd - Convert PCIBIOS_* return codes to errnos\n  (git-fixes).\n- commit 7fcc337\n\n- Add Alt-commit for amdgpu patch (git-fixes)\n- commit 7fbd801\n\n- gve: Clear napi-\u0026gt;skb before dev_kfree_skb_any() (CVE-2024-40937\n  bsc#1227836).\n- net: hns3: fix kernel crash problem in concurrent scenario\n  (CVE-2024-39507 bsc#1227730).\n- net/mlx5: Fix tainted pointer delete is case of flow rules\n  creation fail (CVE-2024-40940 bsc#1227800).\n- commit 8d4dcfb\n\n- net: ethtool: fix the error condition in\n  ethtool_get_phy_stats_ethtool() (CVE-2024-40928 bsc#1227788).\n- commit be667d4\n\n- btrfs: zoned: fix lock ordering in btrfs_zone_activate()\n  (bsc#1223731 CVE-2024-26944).\n- commit c6e27f8\n\n- vmxnet3: disable rx data ring on dma allocation failure\n  (CVE-2024-40923 bsc#1227786).\n- commit 3828e87\n\n- mptcp: ensure snd_una is properly initialized on connect\n  (CVE-2024-40931 bsc#1227780).\n- commit 60fd0e2\n\n- bnxt_en: Adjust logging of firmware messages in case of released\n  token in __hwrm_send() (CVE-2024-40919 bsc#1227779).\n- commit c060c32\n\n- btrfs: zoned: allocate dummy checksums for zoned NODATASUM\n  writes (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: fix use-after-free in do_zone_finish()\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: fix chunk map leak when loading block group zone\n  info (bsc#1223731 CVE-2024-26944).\n- btrfs: fix unbalanced unlock of mapping_tree_lock (bsc#1223731\n  CVE-2024-26944).\n- btrfs: remove stripe size local variable from\n  insert_dev_extents() (bsc#1223731 CVE-2024-26944).\n- btrfs: use a dedicated data structure for chunk maps\n  (bsc#1223731 CVE-2024-26944).\n- commit 201e016\n\n- btrfs: zoned: wait for data BG to be finished on direct IO\n  allocation (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: drop no longer valid write pointer check\n  (bsc#1223731 CVE-2024-26944).\n- commit a5e78f9\n\n- btrfs: do not require EXTENT_NOWAIT for btrfs_redirty_list_add()\n  (bsc#1223731 CVE-2024-26944).\n- commit f638537\n\n- drm/mediatek: Add DRM_MODE_ROTATE_0 to rotation property\n  (git-fixes).\n- commit f21db33\n\n- btrfs: drop gfp from parameter extent state helpers (bsc#1223731\n  CVE-2024-26944).\n- Refresh\n  patches.suse/btrfs-make-find_first_extent_bit-return-a-boolean.patch.\n- Refresh\n  patches.suse/btrfs-open-code-trivial-btrfs_add_excluded_extent.patch.\n- commit 2097a9c\n\n- drm/fbdev-dma: Fix framebuffer mode for big endian devices\n  (git-fixes).\n- drm/msm/mdp5: Remove MDP_CAP_SRC_SPLIT from msm8x53_config\n  (git-fixes).\n- drm/msm/dpu: drop validity checks for clear_pending_flush()\n  ctl op (git-fixes).\n- drm/msm/dsi: set VIDEO_COMPRESSION_MODE_CTRL_WC (git-fixes).\n- USB: serial: option: add Rolling RW350-GL variants\n  (stable-fixes).\n- USB: serial: option: add support for Foxconn T99W651\n  (stable-fixes).\n- USB: serial: option: add Netprisma LCUK54 series modules\n  (stable-fixes).\n- usb: gadget: configfs: Prevent OOB read/write in\n  usb_string_copy() (stable-fixes).\n- usb: dwc3: pci: add support for the Intel Panther Lake\n  (stable-fixes).\n- USB: Add USB_QUIRK_NO_SET_INTF quirk for START BP-850k\n  (stable-fixes).\n- xhci: always resume roothubs if xHC was reset during resume\n  (stable-fixes).\n- USB: serial: option: add Telit generic core-dump composition\n  (stable-fixes).\n- USB: serial: option: add Fibocom FM350-GL (stable-fixes).\n- USB: serial: option: add Telit FN912 rmnet compositions\n  (stable-fixes).\n- commit f9ac994\n\n- drm/msm/dpu: fix encoder irq wait skip (git-fixes).\n- drm/dp_mst: Fix all mstb marked as not probed after\n  suspend/resume (git-fixes).\n- drm/panfrost: Mark simple_ondemand governor as softdep\n  (git-fixes).\n- drm/lima: Mark simple_ondemand governor as softdep (git-fixes).\n- drm/mediatek: Remove less-than-zero comparison of an unsigned\n  value (git-fixes).\n- drm/mediatek: Fix bit depth overwritten for mtk_ovl_set\n  bit_depth() (git-fixes).\n- drm/mediatek: Support DRM plane alpha in Mixer (git-fixes).\n- drm/mediatek: Support DRM plane alpha in OVL (git-fixes).\n- drm/mediatek: Support RGBA8888 and RGBX8888 in OVL on MT8195\n  (git-fixes).\n- drm/mediatek: Set DRM mode configs accordingly (git-fixes).\n- drm/mediatek: Add OVL compatible name for MT8195 (git-fixes).\n- drm/mediatek: Turn off the layers with zero width or height\n  (git-fixes).\n- drm/mediatek: Fix destination alpha error in OVL (git-fixes).\n- drm/mediatek: Fix XRGB setting error in Mixer (git-fixes).\n- drm/mediatek: Fix XRGB setting error in OVL (git-fixes).\n- drm/mediatek: Use 8-bit alpha in ETHDR (git-fixes).\n- drm/mediatek: Add missing plane settings when async update\n  (git-fixes).\n- drm/etnaviv: fix DMA direction handling for cached RW buffers\n  (git-fixes).\n- Revert \u0026quot;drm/bridge: tc358767: Set default CLRSIPO count\u0026quot;\n  (stable-fixes).\n- drm/qxl: Add check for drm_cvt_mode (git-fixes).\n- drm: zynqmp_kms: Fix AUX bus not getting unregistered\n  (git-fixes).\n- drm: zynqmp_dpsub: Fix an error handling path in\n  zynqmp_dpsub_probe() (git-fixes).\n- drm/bridge: samsung-dsim: Set P divider based on min/max of\n  fin pll (git-fixes).\n- drm/bridge: it6505: fix hibernate to resume no display issue\n  (git-fixes).\n- drm/panel: ilitek-ili9882t: Check for errors on the NOP in\n  prepare() (git-fixes).\n- drm/panel: ilitek-ili9882t: If prepare fails, disable GPIO\n  before regulators (git-fixes).\n- drm/panel: boe-tv101wum-nl6: Check for errors on the NOP in\n  prepare() (git-fixes).\n- drm/panel: boe-tv101wum-nl6: If prepare fails, disable GPIO\n  before regulators (git-fixes).\n- drm/panel: himax-hx8394: Handle errors from\n  mipi_dsi_dcs_set_display_on() better (git-fixes).\n- drm/mgag200: Bind I2C lifetime to DRM device (git-fixes).\n- drm/mgag200: Set DDC timeout in milliseconds (git-fixes).\n- drm/mipi-dsi: Fix theoretical int overflow in\n  mipi_dsi_generic_write_seq() (git-fixes).\n- drm/mipi-dsi: Fix theoretical int overflow in\n  mipi_dsi_dcs_write_seq() (git-fixes).\n- commit 6fb58b4\n\n- drm/udl: Remove DRM_CONNECTOR_POLL_HPD (git-fixes).\n- drm/arm/komeda: Fix komeda probe failing if there are no links\n  in the secondary pipeline (git-fixes).\n- drm/rockchip: vop2: Fix the port mux of VP2 (git-fixes).\n- drm/amd/display: Move 'struct scaler_data' off stack\n  (git-fixes).\n- drm/amdgpu: Remove GC HW IP 9.3.0 from noretry=1 (git-fixes).\n- drm/amdgpu: Check if NBIO funcs are NULL in\n  amdgpu_device_baco_exit (git-fixes).\n- drm/amdgpu: Fix memory range calculation (git-fixes).\n- drm/amd/pm: Fix aldebaran pcie speed reporting (git-fixes).\n- drm/amd/pm: remove logically dead code for renoir (git-fixes).\n- drm/amdkfd: Fix CU Masking for GFX 9.4.3 (git-fixes).\n- drm/amdgpu: Fix signedness bug in sdma_v4_0_process_trap_irq()\n  (git-fixes).\n- commit ba21687\n\n- Add Alt-commit to AMDGPU patches from 6.11-rc1\n- commit f4ae72a\n\n- PCI/ASPM: Update save_state when configuration changes (bsc#1226915)\n- commit 5192284\n\n- block: Move checking GENHD_FL_NO_PART to bdev_add_partition()\n  (bsc#1226213).\n- commit 6855b2f\n\n- bonding: Fix out-of-bounds read in bond_option_arp_ip_targets_set() (CVE-2024-39487 bsc#1227573)\n- commit 1c7a482\n\n- tls: get psock ref after taking rxlock to avoid leak (CVE-2024-35908 bsc#1224490)\n- commit b0d23d0\n\n- netfilter: nf_tables: flush pending destroy work before exit_net release (CVE-2024-35899 bsc#1224499)\n- commit 8a86808\n\n- net/smc: reduce rtnl pressure in smc_pnet_create_pnetids_list() (CVE-2024-35934 bsc#1224641)\n- commit 812f420\n\n- net/sched: act_skbmod: prevent kernel-infoleak (CVE-2024-35893 bsc#1224512)\n- commit 5be3514\n\n- scsi: mpt3sas: Avoid test/set_bit() operating in non-allocated\n  memory (bsc#1227762 CVE-2024-40901).\n- commit 5eb5075\n\n- btrfs: pass NOWAIT for set/clear extent bits as another bit\n  (bsc#1223731 CVE-2024-26944).\n- commit 33253df\n\n- btrfs: drop NOFAIL from set_extent_bit allocation masks\n  (bsc#1223731 CVE-2024-26944).\n- commit 46559ec\n\n- btrfs: open code set_extent_bits (bsc#1223731 CVE-2024-26944).\n- Refresh\n  patches.suse/btrfs-make-find_first_extent_bit-return-a-boolean.patch.\n- Refresh\n  patches.suse/btrfs-open-code-trivial-btrfs_add_excluded_extent.patch.\n- commit 460a0d4\n\n- xfs: fix log recovery buffer allocation for the legacy h_size\n  fixup (bsc#1227432 CVE-2024-39472).\n- commit 04ef30f\n\n- KVM: Fix a data race on last_boosted_vcpu in kvm_vcpu_on_spin()\n  (CVE-2024-40953, bsc#1227806).\n- commit 60989df\n\n- Update config files (bsc#1227282).\n  Update the CONFIG_LSM option to include the selinux LSM in the default set\n  of LSMs. The selinux LSM will not get enabled because it is preceded by\n  apparmor, which is the first exclusive LSM. Updating CONFIG_LSM resolves\n  failures that result in the system not booting up when \u0026quot;security=selinux\n  selinux=1\u0026quot; is passed to the kernel and SELinux policies are installed.\n- commit 0a95a78\n\n- xfs: use roundup_pow_of_two instead of ffs during xlog_find_tail\n  (git-fixes).\n- commit 44812b1\n\n- wifi: mt76: connac: use muar idx 0xe for non-mt799x as well\n  (bsc#1227149).\n- wifi: mt76: mt7996: fix potential memory leakage when reading\n  chip temperature (bsc#1227149).\n- wifi: mt76: mt7996: fix uninitialized variable in\n  mt7996_irq_tasklet() (bsc#1227149).\n- wifi: mt76: mt7925: ensure 4-byte alignment for suspend \u0026amp;\n  wow command (bsc#1227149).\n- wifi: mt76: mt7996: fix size of txpower MCU command\n  (bsc#1227149).\n- wifi: mt76: connac: check for null before dereferencing\n  (bsc#1227149).\n- commit 4e5584e\n\n- wifi: mt76: Remove redundant assignment to variable tidno\n  (bsc#1227149).\n- wifi: mt76: fix the issue of missing txpwr settings from ch153\n  to ch177 (bsc#1227149).\n- wifi: mt76: mt7921: fix suspend issue on MediaTek COB platform\n  (bsc#1227149).\n- wifi: mt76: mt7921: fix a potential association failure upon\n  resuming (bsc#1227149).\n- wifi: mt76: mt7921: fix the unfinished command of regd_notifier\n  before suspend (bsc#1227149).\n- wifi: mt76: mt792x: update the country list of EU for ACPI SAR\n  (bsc#1227149).\n- wifi: mt76: mt7925e: fix use-after-free in free_irq()\n  (bsc#1227149).\n- wifi: mt76: mt792x: add the illegal value check for mtcl table\n  of acpi (bsc#1227149).\n- wifi: mt76: mt7925: fix the wrong data type for scan command\n  (bsc#1227149).\n- wifi: mt76: set page_pool napi pointer for mmio devices\n  (bsc#1227149).\n- wifi: mt76: mt792x: fix ethtool warning (bsc#1227149).\n- commit 3499113\n\n- wifi: mt76: connac: set correct muar_idx for mt799x chipsets\n  (bsc#1227149).\n- wifi: mt76: mt7996: remove TXS queue setting (bsc#1227149).\n- wifi: mt76: mt7996: mark GCMP IGTK unsupported (bsc#1227149).\n- wifi: mt76: mt7996: ensure 4-byte alignment for beacon commands\n  (bsc#1227149).\n- wifi: mt76: mt7996: check txs format before getting skb by pid\n  (bsc#1227149).\n- wifi: mt76: mt7925: support temperature sensor (bsc#1227149).\n- wifi: mt76: mt7925: update PCIe DMA settings (bsc#1227149).\n- wifi: mt76: mt7925: add support to set ifs time by mcu command\n  (bsc#1227149).\n- wifi: mt76: mt7925: add flow to avoid chip bt function fail\n  (bsc#1227149).\n- wifi: mt76: mt7925: fix the wrong header translation config\n  (bsc#1227149).\n- commit 7f22357\n\n- wifi: mt76: mt7925: fix WoW failed in encrypted mode\n  (bsc#1227149).\n- wifi: mt76: mt7925: fix fw download fail (bsc#1227149).\n- wifi: mt76: mt7925: fix wmm queue mapping (bsc#1227149).\n- wifi: mt76: mt7925: fix mcu query command fail (bsc#1227149).\n- wifi: mt76: mt7925: fix SAP no beacon issue in 5Ghz and 6Ghz\n  band (bsc#1227149).\n- wifi: mt76: mt7925: fix connect to 80211b mode fail in 2Ghz band\n  (bsc#1227149).\n- wifi: mt76: mt76x2u: add netgear wdna3100v3 to device table\n  (bsc#1227149).\n- wifi: mt76: mt792xu: enable dmashdl support (bsc#1227149).\n- wifi: mt76: usb: store usb endpoint in mt76_queue (bsc#1227149).\n- wifi: mt76: usb: create a dedicated queue for psd traffic\n  (bsc#1227149).\n- commit 01e1acb\n\n- wifi: mt76: mt7996: fix fw loading timeout (bsc#1227149).\n- wifi: mt76: mt7915: update mt798x_wmac_adie_patch_7976\n  (bsc#1227149).\n- wifi: mt76: mt7915: add locking for accessing mapped registers\n  (bsc#1227149).\n- wifi: mt76: mt7915: fix error recovery with WED enabled\n  (bsc#1227149).\n- wifi: mt76: check txs format before getting skb by pid\n  (bsc#1227149).\n- wifi: mt76: disable HW AMSDU when using fixed rate\n  (bsc#1227149).\n- wifi: mt76: mt7996: fix fortify warning (bsc#1227149).\n- commit 0013ef2\n\n- wifi: fill in MODULE_DESCRIPTION()s for mt76 drivers\n  (bsc#1227149).\n- wifi: mt76: mt7996: Use DECLARE_FLEX_ARRAY() and fix\n  - Warray-bounds warnings (bsc#1227149).\n- wifi: mt76: mt7921: fix wrong 6Ghz power type (bsc#1227149).\n- wifi: mt76: mt7921: fix CLC command timeout when suspend/resume\n  (bsc#1227149).\n- wifi: mt76: mt7921: reduce the size of MCU firmware download\n  Rx queue (bsc#1227149).\n- wifi: mt76: mt7996: set DMA mask to 36 bits for boards with\n  more than 4GB of RAM (bsc#1227149).\n- wifi: mt76: Convert to platform remove callback returning void\n  (bsc#1227149).\n- wifi: mt76: mt7925: remove iftype from mt7925_init_eht_caps\n  signature (bsc#1227149).\n- wifi: mt76: connac: add new definition of tx descriptor\n  (bsc#1227149).\n- wifi: mt76: mt7996: adjust interface num and wtbl size for\n  mt7992 (bsc#1227149).\n- commit cbff43f\n\n- wifi: mt76: mt7996: support mt7992 eeprom loading (bsc#1227149).\n- wifi: mt76: mt7996: rework register offsets for mt7992\n  (bsc#1227149).\n- wifi: mt76: mt7996: add DMA support for mt7992 (bsc#1227149).\n- wifi: mt76: connac: add firmware support for mt7992\n  (bsc#1227149).\n- wifi: mt76: mt7996: introduce mt7996_band_valid() (bsc#1227149).\n- wifi: mt76: mt7996: fix mt7996_mcu_all_sta_info_event struct\n  packing (bsc#1227149).\n- wifi: mt76: mt7915: also MT7981 is 3T3R but nss2 on 5 GHz band\n  (bsc#1227149).\n- wifi: mt76: mt7915: fix EEPROM offset of TSSI flag on MT7981\n  (bsc#1227149).\n- wifi: mt76: connac: add beacon protection support for mt7996\n  (bsc#1227149).\n- wifi: mt76: mt7996: rework ampdu params setting (bsc#1227149).\n- commit 3e59fd6\n\n- wifi: mt76: mt7996: add txpower setting support (bsc#1227149).\n- commit fd1825a\n\n- wifi: mt76: mt7996: fix alignment of sta info event\n  (bsc#1227149).\n- wifi: mt76: mt7996: switch to mcu command for TX GI report\n  (bsc#1227149).\n- wifi: mt76: use chainmask for power delta calculation\n  (bsc#1227149).\n- wifi: mt76: change txpower init to per-phy (bsc#1227149).\n- wifi: mt76: mt7996: align the format of fixed rate command\n  (bsc#1227149).\n- wifi: mt76: mt7996: handle IEEE80211_RC_SMPS_CHANGED\n  (bsc#1227149).\n- wifi: mt76: connac: set fixed_bw bit in TX descriptor for\n  fixed rate frames (bsc#1227149).\n- wifi: mt76: mt7996: adjust WFDMA settings to improve performance\n  (bsc#1227149).\n- wifi: mt76: connac: add beacon duplicate TX mode support for\n  mt7996 (bsc#1227149).\n- commit e90dd6a\n\n- wifi: mt76: move wed reset common code in mt76 module\n  (bsc#1227149).\n- commit b63457a\n\n- wifi: mt76: mt7996: add thermal sensor device support\n  (bsc#1227149).\n- wifi: mt76: connac: add thermal protection support for mt7996\n  (bsc#1227149).\n- wifi: mt76: mt7996: add TX statistics for EHT mode in debugfs\n  (bsc#1227149).\n- wifi: mt76: mt7996: add support for variants with auxiliary\n  RX path (bsc#1227149).\n- wifi: mt76: mt7996: use u16 for val field in mt7996_mcu_set_rro\n  signature (bsc#1227149).\n- wifi: mt76: dma: introduce __mt76_dma_queue_reset utility\n  routine (bsc#1227149).\n- commit dd57284\n\n- wifi: mt76: increase MT_QFLAG_WED_TYPE size (bsc#1227149).\n- wifi: mt76: introduce wed pointer in mt76_queue (bsc#1227149).\n- wifi: mt76: introduce mt76_queue_is_wed_tx_free utility routine\n  (bsc#1227149).\n- wifi: mt76: move mt76_net_setup_tc in common code (bsc#1227149).\n- wifi: mt76: move mt76_mmio_wed_offload_{enable,disable} in\n  common code (bsc#1227149).\n- wifi: mt76: mmio: move mt76_mmio_wed_{init,release}_rx_buf in\n  common code (bsc#1227149).\n- wifi: mt76: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: mt76: permit to load precal from NVMEM cell for mt7915\n  (bsc#1227149).\n- wifi: mt76: permit to use alternative cell name to eeprom\n  NVMEM load (bsc#1227149).\n- commit 15e9dc7\n\n- wifi: mt76: mt7921: support 5.9/6GHz channel config in acpi\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-country-count-limitation-for-CL.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-incorrect-type-conversion-for-C.patch.\n- commit 915b272\n\n- wifi: mt76: make mt76_get_of_eeprom static again (bsc#1227149).\n- wifi: mt76: limit support of precal loading for mt7915 to MTD\n  only (bsc#1227149).\n- wifi: mt76: fix typo in mt76_get_of_eeprom_from_nvmem function\n  (bsc#1227149).\n- wifi: mt76: mt7996: fix uninitialized variable in parsing txfree\n  (bsc#1227149).\n- wifi: mt76: add ability to explicitly forbid LED registration\n  with DT (bsc#1227149).\n- wifi: mt76: mt7925: fix typo in mt7925_init_he_caps\n  (bsc#1227149).\n- wifi: mt76: mt7921: fix 6GHz disabled by the missing default\n  CLC config (bsc#1227149).\n- net: fill in MODULE_DESCRIPTION()s in kuba@'s modules\n  (bsc#1227149).\n- wifi: mt76: mt7921: fix kernel panic by accessing invalid 6GHz\n  channel info (bsc#1227149).\n- commit b106ffb\n\n- wifi: mt76: Annotate struct mt76_rx_tid with __counted_by\n  (bsc#1227149).\n- commit aecab86\n\n- wifi: mt76: mt7921: update the channel usage when the regd\n  domain changed (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-country-count-limitation-for-CL.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-incorrect-type-conversion-for-C.patch.\n- commit b09df3f\n\n- wifi: mt76: mt7921: get regulatory information from the clc\n  event (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-country-count-limitation-for-CL.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-incorrect-type-conversion-for-C.patch.\n- commit 04b07d9\n\n- wifi: mt76: mt7921: add 6GHz power type support for clc\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-country-count-limitation-for-CL.patch.\n- commit b7bb561\n\n- wifi: mt76: mt7921: enable set txpower for UNII-4 (bsc#1227149).\n- wifi: mt76: mt7921: move connac nic capability handling to\n  mt7921 (bsc#1227149).\n- wifi: mt76: reduce spin_lock_bh held up in mt76_dma_rx_cleanup\n  (bsc#1227149).\n- wifi: mt76: mt7996: remove periodic MPDU TXS request\n  (bsc#1227149).\n- wifi: mt76: mt7996: enable PPDU-TxS to host (bsc#1227149).\n- wifi: mt76: mt7996: Add mcu commands for getting sta tx\n  statistic (bsc#1227149).\n- commit e37a1c7\n\n- Update config files for mt76 stuff (bsc#1227149)\n- commit debbb92\n\n- wifi: mt76: connac: add MBSSID support for mt7996 (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-update-beacon-size-limitation.patch.\n- commit 54772eb\n\n- wifi: mt76: mt7996: get tx_retries and tx_failed from txfree\n  (bsc#1227149).\n- wifi: mt76: mt792x: move some common usb code in mt792x module\n  (bsc#1227149).\n- wifi: mt76: mt792x: move mt7921_skb_add_usb_sdio_hdr in mt792x\n  module (bsc#1227149).\n- wifi: mt76: mt7915 add tc offloading support (bsc#1227149).\n- wifi: mt76: mt7925: add Mediatek Wi-Fi7 driver for mt7925 chips\n  (bsc#1227149).\n- wifi: mt76: mt7915: update mpdu density capability\n  (bsc#1227149).\n- wifi: mt76: check vif type before reporting cca and csa\n  (bsc#1227149).\n- wifi: mt76: check sta rx control frame to multibss capability\n  (bsc#1227149).\n- wifi: mt76: Use PTR_ERR_OR_ZERO() to simplify code\n  (bsc#1227149).\n- commit 2106e27\n\n- wifi: mt76: mt7996: support per-band LED control (bsc#1227149).\n- wifi: mt76: mt7996: support more options for\n  mt7996_set_bitrate_mask() (bsc#1227149).\n- wifi: mt76: mt7996: only set vif teardown cmds at remove\n  interface (bsc#1227149).\n- wifi: mt76: connac: add more unified event IDs (bsc#1227149).\n- wifi: mt76: connac: add more unified command IDs (bsc#1227149).\n- wifi: mt76: connac: add data field in struct tlv (bsc#1227149).\n- wifi: mt76: connac: add eht support for tx power (bsc#1227149).\n- wifi: mt76: connac: add eht support for phy mode config\n  (bsc#1227149).\n- wifi: mt76: connac: export functions for mt7925 (bsc#1227149).\n- wifi: mt76: mt792x: support mt7925 chip init (bsc#1227149).\n- commit 135e742\n\n- wifi: mt76: connac: introduce helper for mt7925 chipset\n  (bsc#1227149).\n- wifi: mt76: mt7915: fix monitor mode issues (bsc#1227149).\n- wifi: mt76: add DMA mapping error check in mt76_alloc_txwi()\n  (bsc#1227149).\n- wifi: mt76: fix race condition related to checking tx queue\n  fill status (bsc#1227149).\n- wifi: mt76: use atomic iface iteration for pre-TBTT work\n  (bsc#1227149).\n- wifi: mt76: mt7603: disable A-MSDU tx support on MT7628\n  (bsc#1227149).\n- wifi: mt76: mt7603: add missing register initialization for\n  MT7628 (bsc#1227149).\n- commit 6594bb5\n\n- net: ethernet: mtk_wed: introduce mtk_wed_buf structure\n  (bsc#1227149).\n- net: ethernet: mtk_wed: rename mtk_rxbm_desc in mtk_wed_bm_desc\n  (bsc#1227149).\n- wifi: mt76: Replace strlcpy() with strscpy() (bsc#1227149).\n- wifi: mt76: mt76x02: fix return value check in\n  mt76x02_mac_process_rx (bsc#1227149).\n- wifi: mt76: mt7921: move mt7921u_disconnect mt792x-lib\n  (bsc#1227149).\n- wifi: mt76: mt7921: move mt7921_dma_init in pci.c (bsc#1227149).\n- wifi: mt76: mt792x: move MT7921_PM_TIMEOUT and\n  MT7921_HW_SCAN_TIMEOUT in common code (bsc#1227149).\n- wifi: mt76: mt76_connac3: move lmac queue enumeration in\n  mt76_connac3_mac.h (bsc#1227149).\n- wifi: mt76: mt792x: move mt7921_load_firmware in mt792x-lib\n  module (bsc#1227149).\n- commit 1179b28\n\n- wifi: mt76: mt792x: introduce mt792x-usb module (bsc#1227149).\n- commit bb743ca\n\n- wifi: mt76: mt7921: move acpi_sar code in mt792x-lib module\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-country-count-limitation-for-CL.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7921-fix-incorrect-type-conversion-for-C.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt792x-fix-a-potential-loading-failure-of-.patch.\n- commit e00ae3f\n\n- wifi: mt76: mt7921: move runtime-pm pci code in mt792x-lib\n  (bsc#1227149).\n- commit 35d834e\n\n- wifi: mt76: mt7921: move shared runtime-pm code on mt792x-lib\n  (bsc#1227149).\n- commit 5efac2c\n\n- wifi: mt76: mt7921: move hif_ops macro in mt792x.h\n  (bsc#1227149).\n- commit 945f2ed\n\n- wifi: mt76: mt792x: move more dma shared code in mt792x_dma\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921e-fix-use-after-free-in-free_irq.patch.\n- commit 4136c03\n\n- wifi: mt76: mt792x: introduce mt792x_irq_map (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7921e-fix-use-after-free-in-free_irq.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7921s-fix-potential-hung-tasks-during-ch.patch.\n- commit 94984c8\n\n- wifi: mt76: mt7921: move init shared code in mt792x-lib module\n  (bsc#1227149).\n- wifi: mt76: mt7921: move debugfs shared code in mt792x-lib\n  module (bsc#1227149).\n- wifi: mt76: mt7921: move dma shared code in mt792x-lib module\n  (bsc#1227149).\n- commit 8138035\n\n- wifi: mt76: mt7921: move mac shared code in mt792x-lib module\n  (bsc#1227149).\n- commit 118e960\n\n- wifi: mt76: mt792x: introduce mt792x-lib module (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit bba35bb\n\n- wifi: mt76: mt7921: move mt792x_hw_dev in mt792x.h\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit e5956d4\n\n- wifi: mt76: mt7921: move mt792x_mutex_{acquire/release} in\n  mt792x.h (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit ea3046f\n\n- wifi: mt76: mt792x: move shared structure definition in mt792x.h\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit c60dc5e\n\n- wifi: mt76: mt7921: rename mt7921_dev in mt792x_dev\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7921e-fix-use-after-free-in-free_irq.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt792x-fix-a-potential-loading-failure-of-.patch.\n- commit 845aa52\n\n- wifi: mt76: mt7921: rename mt7921_vif in mt792x_vif\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit d4d2c1b\n\n- wifi: mt76: mt7921: rename mt7921_hif_ops in mt792x_hif_ops\n  (bsc#1227149).\n- wifi: mt76: mt7921: rename mt7921_phy in mt792x_phy\n  (bsc#1227149).\n- wifi: mt76: mt7921: rename mt7921_sta in mt792x_sta\n  (bsc#1227149).\n- commit 47cecdc\n\n- wifi: mt76: move rate info in mt76_vif (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- Refresh\n  patches.suse/wifi-mt76-mt7996-fix-rate-usage-of-inband-discovery-.patch.\n- commit 8909aa1\n\n- wifi: mt76: mt7921: convert acpisar and clc pointers to void\n  (bsc#1227149).\n- wifi: mt76: mt7921: move common register definition in\n  mt792x_regs.h (bsc#1227149).\n- wifi: mt76: mt7603: fix tx filter/flush function (bsc#1227149).\n- wifi: mt76: mt7603: fix beacon interval after disabling a\n  single vif (bsc#1227149).\n- wifi: mt76: add support for providing eeprom in nvmem cells\n  (bsc#1227149).\n- wifi: mt76: split get_of_eeprom in subfunction (bsc#1227149).\n- wifi: mt76: connac: add connac3 mac library (bsc#1227149).\n- mt76: connac: move more mt7921/mt7915 mac shared code in connac\n  lib (bsc#1227149).\n- wifi: mt76: move ampdu_state in mt76_wcid (bsc#1227149).\n- commit 343ad65\n\n- wifi: mt76: mt7921: rely on shared sta_poll_list and\n  sta_poll_lock (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit 72ca75a\n\n- wifi: mt76: mt7921: rely on shared poll_list field\n  (bsc#1227149).\n- wifi: mt76: mt7996: rely on shared poll_list field\n  (bsc#1227149).\n- wifi: mt76: mt7615: rely on shared poll_list field\n  (bsc#1227149).\n- wifi: mt76: mt7603: rely on shared poll_list field\n  (bsc#1227149).\n- wifi: mt76: mt7915: move poll_list in mt76_wcid (bsc#1227149).\n- wifi: mt76: mt7996: rely on shared sta_poll_list and\n  sta_poll_lock (bsc#1227149).\n- wifi: mt76: mt7615: rely on shared sta_poll_list and\n  sta_poll_lock (bsc#1227149).\n- wifi: mt76: mt7603: rely on shared sta_poll_list and\n  sta_poll_lock (bsc#1227149).\n- wifi: mt76: mt7915: move sta_poll_list and sta_poll_lock in\n  mt76_dev (bsc#1227149).\n- commit 2965d6e\n\n- wifi: mt76: mt7996: increase tx token size (bsc#1227149).\n- wifi: mt76: mt7996: add muru support (bsc#1227149).\n- wifi: mt76: connac: add support to set ifs time by mcu command\n  (bsc#1227149).\n- wifi: mt76: mt7996: enable VHT extended NSS BW feature\n  (bsc#1227149).\n- wifi: mt76: connac: add support for dsp firmware download\n  (bsc#1227149).\n- wifi: mt76: mt7996: move radio ctrl commands to proper functions\n  (bsc#1227149).\n- wifi: mt76: mt7921: get rid of MT7921_RESET_TIMEOUT marco\n  (bsc#1227149).\n- mt76: mt7996: rely on mt76_sta_stats in mt76_wcid (bsc#1227149).\n- wifi: mt76: mt7921: make mt7921_mac_sta_poll static\n  (bsc#1227149).\n- wifi: mt76: mt7996: disable WFDMA Tx/Rx during SER recovery\n  (bsc#1227149).\n- commit fc1c367\n\n- Update config files: adjust for Arm CONFIG_MT798X_WMAC (bsc#1227149)\n- commit 5938ea9\n\n- wifi: mt76: mt7921: rely on mib_stats shared definition\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-move-struct-ieee80211_chanctx_conf-up-to-s.patch.\n- commit a519a6e\n\n- wifi: mt76: mt7915: disable WFDMA Tx/Rx during SER recovery\n  (bsc#1227149).\n- wifi: mt76: mt7921: Support temp sensor (bsc#1227149).\n- wifi: mt76: mt7915: accumulate mu-mimo ofdma muru stats\n  (bsc#1227149).\n- wifi: mt76: add tx_nss histogram to ethtool stats (bsc#1227149).\n- wifi: mt76: mt7921e: report tx retries/failed counts in tx\n  free event (bsc#1227149).\n- wifi: mt76: mt7915: add support for MT7981 (bsc#1227149).\n- wifi: mt76: mt7996: rely on mib_stats shared definition\n  (bsc#1227149).\n- wifi: mt76: mt7915: move mib_stats structure in mt76.h\n  (bsc#1227149).\n- wifi: mt76: mt7921: remove macro duplication in regs.h\n  (bsc#1227149).\n- commit c307798\n\n- wifi: mt76: mt7915: report tx retries/failed counts for non-WED\n  path (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-mt7915-rework-tx-packets-counting-when-WED.patch.\n- commit 25e2b06\n\n- wifi: mt76: mt7996: enable BSS_CHANGED_MU_GROUPS support\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mt76-update-beacon-size-limitation.patch.\n- commit b121af9\n\n- wifi: mt76: mt7996: drop return in mt7996_sta_statistics\n  (bsc#1227149).\n- wifi: mt76: mt7915: drop return in mt7915_sta_statistics\n  (bsc#1227149).\n- wifi: mt76: report non-binding skb tx rate when WED is active\n  (bsc#1227149).\n- wifi: mt76: enable UNII-4 channel 177 support (bsc#1227149).\n- wifi: mt76: mt7615: enable BSS_CHANGED_MU_GROUPS support\n  (bsc#1227149).\n- wifi: mt7601u: replace strlcpy() with strscpy() (bsc#1227149).\n- wifi: mt7601u: delete dead code checking debugfs returns\n  (bsc#1227149).\n- commit 3625743\n\n- exfat: fix potential deadlock on __exfat_get_dentry_set\n  (git-fixes).\n- commit aaa908a\n\n- media: venus: fix use after free in vdec_close (git-fixes).\n- media: venus: flush all buffers in output plane streamoff\n  (git-fixes).\n- media: v4l: subdev: Fix typo in documentation (git-fixes).\n- media: imx-pxp: Fix ERR_PTR dereference in pxp_probe()\n  (git-fixes).\n- media: renesas: vsp1: Store RPF partition configuration per\n  RPF instance (git-fixes).\n- media: renesas: vsp1: Fix _irqsave and _irq mix (git-fixes).\n- media: rcar-vin: Fix YUYV8_1X16 handling for CSI-2 (git-fixes).\n- media: imx-jpeg: Drop initial source change event if capture\n  has been setup (git-fixes).\n- media: imx-jpeg: Remove some redundant error logs (git-fixes).\n- media: uvcvideo: Override default flags (git-fixes).\n- media: uvcvideo: Fix integer overflow calculating timestamp\n  (git-fixes).\n- saa7134: Unchecked i2c_transfer function result fixed\n  (git-fixes).\n- media: v4l: async: Fix NULL pointer dereference in adding\n  ancillary links (git-fixes).\n- media: i2c: Fix imx412 exposure control (git-fixes).\n- media: imon: Fix race getting ictx-\u0026gt;lock (git-fixes).\n- media: dvb-usb: Fix unexpected infinite loop in\n  dvb_usb_read_remote_control() (git-fixes).\n- media: pci: ivtv: Add check for DMA map result (git-fixes).\n- leds: flash: leds-qcom-flash: Test the correct variable in init\n  (git-fixes).\n- Revert \u0026quot;leds: led-core: Fix refcount leak in of_led_get()\u0026quot;\n  (git-fixes).\n- leds: mt6360: Fix memory leak in mt6360_init_isnk_properties()\n  (git-fixes).\n- leds: triggers: Flush pending brightness before activating\n  trigger (git-fixes).\n- leds: ss4200: Convert PCIBIOS_* return codes to errnos\n  (git-fixes).\n- leds: trigger: Unregister sysfs attributes before calling\n  deactivate() (git-fixes).\n- mfd: omap-usb-tll: Use struct_size to allocate tll (git-fixes).\n- mfd: pm8008: Fix regmap irq chip initialisation (git-fixes).\n- ipmi: ssif_bmc: prevent integer overflow on 32bit systems\n  (git-fixes).\n- ata: libata-scsi: Fix offsets for the fixed format sense data\n  (git-fixes).\n- commit a8e6a5f\n\n- Update\n  patches.suse/mptcp-ensure-snd_nxt-is-properly-initialized-on-conn.patch\n  (CVE-2024-36889 bsc#1225746).\n- commit 98abb2b\n\n- mptcp: fix data races on remote_id (CVE-2024-27404 bsc#1224422)\n- commit ed12cfe\n\n- netfilter: nf_tables: Fix potential data-race in __nft_expr_type_get() (CVE-2024-27020 bsc#1223815)\n- commit 79c457d\n\n- netfilter: nf_tables: Fix potential data-race in __nft_obj_type_get() (CVE-2024-27019 bsc#1223813)\n- commit 73c5c5f\n\n- btrfs: open code set_extent_bits_nowait (bsc#1223731\n  CVE-2024-26944).\n- commit da5e600\n\n- btrfs: open code set_extent_dirty (bsc#1223731 CVE-2024-26944).\n- commit 3076056\n\n- btrfs: open code set_extent_new (bsc#1223731 CVE-2024-26944).\n- Refresh\n  patches.suse/btrfs-make-find_first_extent_bit-return-a-boolean.patch.\n- commit 3afda0a\n\n- mm/page_table_check: fix crash on ZONE_DEVICE (CVE-2024-40948\n  bsc#1227801).\n- commit 69b3c59\n\n- btrfs: open code set_extent_delalloc (bsc#1223731\n  CVE-2024-26944).\n- btrfs: open code set_extent_defrag (bsc#1223731 CVE-2024-26944).\n- commit 646bcad\n\n- btrfs: use btrfs_next_item() at scrub.c:find_first_extent_item()\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: unexport extent_map_block_end() (bsc#1223731\n  CVE-2024-26944).\n- btrfs: split assert into two different asserts when removing\n  block group (bsc#1223731 CVE-2024-26944).\n- btrfs: mark sanity checks when getting chunk map as unlikely\n  (bsc#1223731 CVE-2024-26944).\n- commit b0dd338\n\n- gro: fix ownership transfer (CVE-2024-35890 bsc#1224516).\n- commit 8c57ce0\n\n- mptcp: ensure snd_nxt is properly initialized on connect\n  (CVE-2024-36889).\n- commit 724d285\n\n- ipv6: fib6_rules: avoid possible NULL dereference in\n  fib6_rule_action() (CVE-2024-36902 bsc#1225719).\n- commit d8c5ba2\n\n- phonet: fix rtm_phonet_notify() skb allocation (CVE-2024-36946\n  bsc#1225851).\n- commit a878203\n\n- r8169: Fix possible ring buffer corruption on fragmented Tx\n  packets (CVE-2024-38586 bsc#1226750).\n- commit 1324b27\n\n- btrfs: zoned: factor out DUP bg handling from\n  btrfs_load_block_group_zone_info (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: factor out single bg handling from\n  btrfs_load_block_group_zone_info (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: factor out per-zone logic from\n  btrfs_load_block_group_zone_info (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: introduce a zone_info struct in\n  btrfs_load_block_group_zone_info (bsc#1223731 CVE-2024-26944).\n- commit f06e144\n\n- wifi: virt_wifi: don't use strlen() in const context\n  (git-fixes).\n- commit b4154c8\n\n- wifi: rtw89: Fix array index mistake in\n  rtw89_sta_info_get_iter() (git-fixes).\n- wifi: rtl8xxxu: 8188f: Limit TX power index (git-fixes).\n- wifi: rtw89: 8852b: fix definition of KIP register number\n  (git-fixes).\n- wifi: mac80211: chanctx emulation set CHANGE_CHANNEL when\n  in_reconfig (git-fixes).\n- wifi: virt_wifi: avoid reporting connection success with wrong\n  SSID (git-fixes).\n- wifi: ath12k: fix peer metadata parsing (git-fixes).\n- wifi: ath11k: fix wrong handling of CCMP256 and GCMP ciphers\n  (git-fixes).\n- wifi: ath11k: fix RCU documentation in\n  ath11k_mac_op_ipv6_changed() (git-fixes).\n- wifi: iwlwifi: mvm: don't limit VLP/AFC to UATS-enabled\n  (git-fixes).\n- wifi: iwlwifi: fix iwl_mvm_get_valid_rx_ant() (git-fixes).\n- wifi: mac80211: correcty limit wider BW TDLS STAs (git-fixes).\n- wifi: mac80211: add ieee80211_tdls_sta_link_id() (stable-fixes).\n- commit 949fcca\n\n- wifi: cfg80211: handle 2x996 RU allocation in\n  cfg80211_calculate_bitrate_he() (git-fixes).\n- wifi: cfg80211: fix typo in cfg80211_calculate_bitrate_he()\n  (git-fixes).\n- wifi: ath12k: fix wrong definition of CE ring's base address\n  (git-fixes).\n- wifi: ath11k: fix wrong definition of CE ring's base address\n  (git-fixes).\n- wifi: ath12k: fix firmware crash during reo reinject\n  (git-fixes).\n- wifi: ath12k: fix invalid memory access while processing\n  fragmented packets (git-fixes).\n- wifi: ath12k: change DMA direction while mapping reinjected\n  packets (git-fixes).\n- wifi: ath11k: restore country code during resume (git-fixes).\n- wifi: ath11k: refactor setting country code logic\n  (stable-fixes).\n- wifi: ath12k: Fix tx completion ring (WBM2SW) setup failure\n  (git-fixes).\n- wifi: ath12k: Correct 6 GHz frequency value in rx status\n  (git-fixes).\n- wifi: ath12k: avoid duplicated vdev stop (git-fixes).\n- wifi: ath12k: drop failed transmitted frames from metric\n  calculation (git-fixes).\n- wifi: ath12k: Don't drop tx_status in failure case (git-fixes).\n- wifi: rtw89: fix HW scan not aborting properly (git-fixes).\n- commit 7f555ea\n\n- wifi: mac80211: reset negotiated TTLM on disconnect (git-fixes).\n- Refresh patches.kabi/wireless-kabi-workaround.patch.\n- commit e02cbd1\n\n- wifi: mac80211: cancel multi-link reconf work on disconnect\n  (git-fixes).\n- wifi: mwifiex: Fix interface type change (git-fixes).\n- wifi: brcmsmac: LCN PHY code is used for BCM4313 2G-only device\n  (git-fixes).\n- vmlinux.lds.h: catch .bss..L* sections into BSS\u0026quot;) (git-fixes).\n- wifi: mac80211: Recalc offload when monitor stop (git-fixes).\n- commit 0c5d63e\n\n- Bluetooth: hci_event: Set QoS encryption from BIGInfo report\n  (git-fixes).\n- Bluetooth: btnxpuart: Add handling for boot-signature timeout\n  errors (git-fixes).\n- Bluetooth: btintel: Refactor btintel_set_ppag() (git-fixes).\n- Bluetooth: hci_bcm4377: Use correct unit for timeouts\n  (git-fixes).\n- lib: objagg: Fix general protection fault (git-fixes).\n- lib: test_objagg: Fix spelling (git-fixes).\n- lib: objagg: Fix spelling (git-fixes).\n- cpufreq: ti-cpufreq: Handle deferred probe with dev_err_probe()\n  (git-fixes).\n- cpufreq/amd-pstate: Fix the scaling_max_freq setting on shared\n  memory CPPC systems (git-fixes).\n- firmware: turris-mox-rwtm: Initialize completion before mailbox\n  (git-fixes).\n- firmware: turris-mox-rwtm: Fix checking return value of\n  wait_for_completion_timeout() (git-fixes).\n- firmware: turris-mox-rwtm: Do not complete if there are no\n  waiters (git-fixes).\n- drivers: soc: xilinx: check return status of get_api_version()\n  (git-fixes).\n- soc: xilinx: rename cpu_number1 to dummy_cpu_number (git-fixes).\n- soc: qcom: pdr: fix parsing of domains lists (git-fixes).\n- soc: qcom: pdr: protect locator_addr with the main mutex\n  (git-fixes).\n- soc: qcom: rpmh-rsc: Ensure irqs aren't disabled by\n  rpmh_rsc_send_data() callers (git-fixes).\n- soc: qcom: pmic_glink: Handle the return value of\n  pmic_glink_init (git-fixes).\n- commit aea26b0\n\n- blacklist.conf: add 54cbc058d86b\n  commit 54cbc058d86b (\u0026quot;fs/aio: Make io_cancel() generate completions\n  again\u0026quot;) was later reverted upstream by commit 28468cbed92e, so blacklist\n  it.\n- commit bc9be4f\n\n- btrfs: remove the need_raid_map parameter from btrfs_map_block()\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: skip splitting and logical rewriting on pre-alloc\n  write (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: do not zone finish data relocation block group\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: add comments for btrfs_map_block() (bsc#1223731\n  CVE-2024-26944).\n- commit 0c47c71\n\n- Revert \u0026quot;gfs2: fix glock shrinker ref issues\u0026quot; (git-fixes).\n- commit f7bfdba\n\n- gfs2: Fix \u0026quot;ignore unlock failures after withdraw\u0026quot; (git-fixes).\n- commit 519ac22\n\n- gfs2: Don't forget to complete delayed withdraw (git-fixes).\n- commit 7f71d47\n\n- gfs2: Fix invalid metadata access in punch_hole (git-fixes).\n- commit 1be0540\n\n- gfs2: Rename gfs2_lookup_{ simple =\u0026gt; meta } (git-fixes).\n- commit d7e53ef\n\n- gfs2: Use mapping-\u0026gt;gfp_mask for metadata inodes (git-fixes).\n- commit 78503fa\n\n- gfs2: convert to ctime accessor functions (git-fixes).\n- commit b024418\n\n- gfs2: Get rid of gfs2_alloc_blocks generation parameter\n  (git-fixes).\n- commit e229d26\n\n- dlm: fix user space lock decision to copy lvb (git-fixes).\n- commit 9a5eade\n\n- ocfs2: fix DIO failure due to insufficient transaction credits\n  (git-fixes).\n- commit cf885b6\n\n- ocfs2: use coarse time for new created files (git-fixes).\n- commit 61f3cb7\n\n- ocfs2: fix races between hole punching and AIO+DIO (git-fixes).\n- commit bdcd35b\n\n- filelock: fix potential use-after-free in posix_lock_inode\n  (git-fixes).\n- commit 4ceada4\n\n- fs/pipe: Fix lockdep false-positive in watchqueue pipe_write()\n  (git-fixes).\n- commit 047ac8f\n\n- tracefs: Add missing lockdown check to tracefs_create_dir()\n  (git-fixes).\n- commit 65b8efc\n\n- f2fs: fix error path of __f2fs_build_free_nids (git-fixes).\n- commit 6c1efec\n\n- btrfs: zoned: re-enable metadata over-commit for zoned mode\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: don't activate non-DATA BG on allocation\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: no longer count fresh BG region as zone unusable\n  (bsc#1223731 CVE-2024-26944).\n- commit cc48fd8\n\n- smb: client: fix deadlock in smb2_find_smb_tcon() (bsc#1227103,\n  CVE-2024-39468).\n- commit 1548cc0\n\n- orangefs: fix out-of-bounds fsid access (git-fixes).\n- commit 8d69475\n\n- btrfs: zoned: activate metadata block group on write time\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: reserve zones for an active metadata/system\n  block group (bsc#1223731 CVE-2024-26944).\n- commit 00c0b10\n\n- btrfs: zoned: update meta write pointer on zone finish\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: defer advancing meta write pointer (bsc#1223731\n  CVE-2024-26944).\n- commit 9625328\n\n- net/mlx5: Always stop health timer during driver removal\n  (CVE-2024-40906 bsc#1227763).\n- commit 3630f6e\n\n- btrfs: zoned: return int from btrfs_check_meta_write_pointer\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: zoned: introduce block group context to\n  btrfs_eb_write_context (bsc#1223731 CVE-2024-26944).\n- btrfs: introduce struct to consolidate extent buffer write\n  context (bsc#1223731 CVE-2024-26944).\n- commit d8f8b66\n\n- btrfs: zoned: use vcalloc instead of for vzalloc in\n  btrfs_get_dev_zone_info (bsc#1223731 CVE-2024-26944).\n- commit 4837f02\n\n- btrfs: open code need_full_stripe conditions (bsc#1223731\n  CVE-2024-26944).\n- Refresh\n  patches.suse/btrfs-be-a-bit-more-careful-when-setting-mirror.patch.\n- commit 0011c1e\n\n- nilfs2: fix incorrect inode allocation from reserved inodes\n  (git-fixes).\n- commit 9ce9b3c\n\n- nilfs2: convert persistent object allocator to use kmap_local\n  (git-fixes).\n- commit dc36fd2\n\n- netfilter: nf_tables: restore set elements when delete set fails\n  (CVE-2024-27012 bsc#1223804).\n- commit 8ba3bb4\n\n- jffs2: Fix potential illegal address access in jffs2_free_inode\n  (git-fixes).\n- commit 282ccaf\n\n- hfsplus: fix to avoid false alarm of circular locking\n  (git-fixes).\n- commit 490432a\n\n- btrfs: open code btrfs_map_sblock (bsc#1223731 CVE-2024-26944).\n- commit 5fa5c99\n\n- btrfs: rename __btrfs_map_block to btrfs_map_block (bsc#1223731\n  CVE-2024-26944).\n- commit de51f30\n\n- btrfs: remove unused btrfs_map_block (bsc#1223731\n  CVE-2024-26944).\n- commit 0ff7c2f\n\n- btrfs: optimize simple reads in btrfsic_map_block (bsc#1223731\n  CVE-2024-26944).\n- commit 3260913\n\n- btrfs: remove unused BTRFS_MAP_DISCARD (bsc#1223731\n  CVE-2024-26944).\n- commit 68b562a\n\n- btrfs: pass the new logical address to split_extent_map\n  (bsc#1223731 CVE-2024-26944).\n- commit c2e8884\n\n- btrfs: defer splitting of ordered extents until I/O completion\n  (bsc#1223731 CVE-2024-26944).\n- commit 5ae3e38\n\n- btrfs: handle completed ordered extents in\n  btrfs_split_ordered_extent (bsc#1223731 CVE-2024-26944).\n- commit ddd9e87\n\n- btrfs: atomically insert the new extent in\n  btrfs_split_ordered_extent (bsc#1223731 CVE-2024-26944).\n- commit 4030656\n\n- btrfs: split btrfs_alloc_ordered_extent to allocation and\n  insertion helpers (bsc#1223731 CVE-2024-26944).\n- Refresh\n  patches.suse/0002-btrfs-fix-qgroup_free_reserved_data-int-overflow.patch.\n- commit e1bc1c4\n\n- drm/mst: Fix NULL pointer dereference at drm_dp_add_payload_part2 (bsc#1227723 CVE-2024-39498)\n- commit bb19e55\n\n- btrfs: return the new ordered_extent from\n  btrfs_split_ordered_extent (bsc#1223731 CVE-2024-26944).\n- commit c61ece3\n\n- btrfs: reorder conditions in btrfs_extract_ordered_extent\n  (bsc#1223731 CVE-2024-26944).\n- commit 7ad1725\n\n- btrfs: move split_extent_map to extent_map.c (bsc#1223731\n  CVE-2024-26944).\n- commit 4667690\n\n- btrfs: record orig_physical only for the original bio\n  (bsc#1223731 CVE-2024-26944).\n- commit f1ddea8\n\n- btrfs: optimize the logical to physical mapping for zoned writes\n  (bsc#1223731 CVE-2024-26944).\n- Refresh\n  patches.suse/0002-btrfs-fix-qgroup_free_reserved_data-int-overflow.patch.\n- commit 59cfe96\n\n- ionic: fix use after netif_napi_del() (CVE-2024-39502\n  bsc#1227755).\n- commit a8905bd\n\n- netfilter: flowtable: validate pppoe header (CVE-2024-27016\n  bsc#1223807).\n- commit 4c0256f\n\n- i40e: fix: remove needless retries of NVM update (bsc#1227736).\n- commit df4f038\n\n- spi: spi-microchip-core: Fix the number of chip selects\n  supported (git-fixes).\n- spi: atmel-quadspi: Add missing check for clk_prepare\n  (git-fixes).\n- gpio: mc33880: Convert comma to semicolon (git-fixes).\n- pwm: stm32: Always do lazy disabling (git-fixes).\n- hwmon: (max6697) Fix swapped temp{1,8} critical alarms\n  (git-fixes).\n- hwmon: (max6697) Fix underflow when writing limit attributes\n  (git-fixes).\n- hwmon: (adt7475) Fix default duty on fan is disabled\n  (git-fixes).\n- platform/chrome: cros_ec_debugfs: fix wrong EC message version\n  (git-fixes).\n- char: tpm: Fix possible memory leak in\n  tpm_bios_measurements_open() (git-fixes).\n- tools/memory-model: Fix bug in lock.cat (git-fixes).\n- drm/gma500: fix null pointer dereference in\n  cdv_intel_lvds_get_modes (git-fixes).\n- drm/gma500: fix null pointer dereference in\n  psb_intel_lvds_get_modes (git-fixes).\n- drm/meson: fix canvas release in bind function (git-fixes).\n- commit 027008e\n\n- Move upstreamed patches into sorted section\n- commit da52786\n\n- ipv6: prevent NULL dereference in ip6_output() (CVE-2024-36901 bsc#1225711)\n- commit 299bf13\n\n- i40e: Do not use WQ_MEM_RECLAIM flag for workqueue (CVE-2024-36004 bsc#1224545)\n- commit 42d6eee\n\n- nbd: null check for nla_nest_start (CVE-2024-27025 bsc#1223778)\n- commit a23796b\n\n- btrfs: rename the bytenr field in struct btrfs_ordered_sum to\n  logical (bsc#1223731 CVE-2024-26944).\n- btrfs: mark the len field in struct btrfs_ordered_sum as\n  unsigned (bsc#1223731 CVE-2024-26944).\n- btrfs: don't call btrfs_record_physical_zoned for failed append\n  (bsc#1223731 CVE-2024-26944).\n- btrfs: optimize out btrfs_is_zoned for !CONFIG_BLK_DEV_ZONED\n  (bsc#1223731 CVE-2024-26944).\n- commit 7e64d12\n\n- btrfs: use SECTOR_SHIFT to convert LBA to physical offset\n  (bsc#1223731 CVE-2024-26944).\n- Refresh\n  patches.suse/btrfs-don-t-warn-if-discard-range-is-not-aligned-to-.patch.\n- commit ad23354\n\n- btrfs: don't hold an extra reference for redirtied buffers\n  (bsc#1223731 CVE-2024-26944).\n- Refresh\n  patches.suse/0003-btrfs-free-qgroup-pertrans-reserve-on-transaction-ab.patch.\n- commit 47897b2\n\n- btrfs: export bitmap_test_range_all_{set,zero} (bsc#1223731\n  CVE-2024-26944).\n- commit fcba900\n\n- Update patch reference for ath12k fix (CVE-2024-40979 bsc#1227855)\n- commit 0463455\n\n- mlxsw: spectrum_acl_tcam: Fix memory leak during rehash\n  (CVE-2024-35853 bsc#1224604).\n- commit d46e600\n\n- mlxsw: spectrum_acl_tcam: Fix possible use-after-free during\n  activity update (CVE-2024-35854 bsc#1224636).\n- commit 7cd7b18\n\n- phonet/pep: fix racy skb_queue_empty() use (CVE-2024-27402\n  bsc#1224414).\n- commit 9f9d7b5\n\n- kprobe/ftrace: fix build error due to bad function definition\n  (git-fixes).\n- commit 16bb0c0\n\n- net: prevent mss overflow in skb_segment() (CVE-2023-52435\n  bsc#1220138).\n- commit b718cb4\n\n- netfilter: nf_tables: do not compare internal table flags on\n  updates (CVE-2024-27065 bsc#1223836).\n- commit 0e49dd8\n\n- tracing/net_sched: NULL pointer dereference in\n  perf_trace_qdisc_reset() (git-fixes).\n- commit c773566\n\n- tracing: Build event generation tests only as modules\n  (git-fixes).\n- commit dd7f603\n\n- usb: ucsi: stm32: fix command completion handling (git-fixes).\n- commit 3155170\n\n- Bluetooth: qca: set power_ctrl_enabled on NULL returned by\n  gpiod_get_optional() (git-fixes).\n- commit 3a34099\n\n- cachefiles: add output string to\n  cachefiles_obj_[get|put]_ondemand_fd (git-fixes).\n- commit 12446de\n\n- iommu/vt-d: Allocate DMAR fault interrupts locally\n  (bsc#1224767).\n- commit 85bf7e2\n\n- iommu/amd: Fix panic accessing amd_iommu_enable_faulting\n  (bsc#1224767).\n- commit 567c8c9\n\n- netfilter: flowtable: incorrect pppoe tuple (CVE-2024-27015\n  bsc#1223806).\n- commit e834f51\n\n- netfilter: nf_tables: Fix a memory leak in nf_tables_updchain\n  (CVE-2024-27064 bsc#1223740).\n- commit daf6634\n\n- blacklist.conf: feature, not fix\n- commit 7a64b31\n\n- kprobe/ftrace: bail out if ftrace was killed (git-fixes).\n- commit 43ba702\n\n- tipc: Check the bearer type before calling\n  tipc_udp_nl_bearer_add() (CVE-2024-26663 bsc#1222326).\n- commit fff5ef3\n\n- blacklist.conf: add not-relevant tracing fixes\n- commit b158327\n\n- Update\n  patches.suse/ring-buffer-Fix-a-race-between-readers-and-resize-checks.patch\n  (bsc#1222893).\n- commit eebb09a\n\n- wifi: ath11k: Add coldboot calibration support for QCN9074\n  (bsc#1227149).\n- wifi: ath11k: Split coldboot calibration hw_param (bsc#1227149).\n- Refresh\n  patches.suse/wifi-ath11k-fix-boot-failure-with-one-MSI-vector.patch.\n- Refresh patches.suse/wifi-ath11k-support-hibernation.patch.\n- commit e553d75\n\n- wifi: ath9k: avoid using uninitialized array (bsc#1227149).\n- Refresh patches.suse/wifi-ath9k-fix-fortify-warnings.patch.\n- commit 7a06512\n\n- iommu: Fix compilation without CONFIG_IOMMU_INTEL (git-fixes).\n- commit dcdbf4a\n\n- wifi: mt76: mt7615: add missing chanctx ops (bsc#1227149).\n- wifi: mt76: mt7915: add missing chanctx ops (bsc#1227149).\n- commit 5e9fc63\n\n- kABI workaround for wireless updates (bsc#1227149).\n- commit 956c903\n\n- i2c: rcar: bring hardware to known state when probing\n  (git-fixes).\n- i2c: testunit: avoid re-issued work after read message\n  (git-fixes).\n- i2c: mark HostNotify target address as used (git-fixes).\n- i2c: testunit: correct Kconfig description (git-fixes).\n- commit 834d4d5\n\n- supported.conf: update for mt76 stuff (bsc#1227149)\n- commit 276fbe5\n\n- kabi/severities: cover all mt76 modules (bsc#1227149)\n- commit 8877f2f\n\n- wifi: mac80211: fix BSS_CHANGED_UNSOL_BCAST_PROBE_RESP\n  (bsc#1227149).\n- commit a3d6465\n\n- wifi: mac80211: fix monitor channel with chanctx emulation\n  (bsc#1227149).\n- wifi: cfg80211: validate HE operation element parsing\n  (bsc#1227149).\n- wifi: mac80211: don't select link ID if not provided in scan\n  request (bsc#1227149).\n- wifi: mac80211: check EHT/TTLM action frame length\n  (bsc#1227149).\n- wifi: mac80211: correctly set active links upon TTLM\n  (bsc#1227149).\n- wifi: cfg80211: set correct param change count in ML element\n  (bsc#1227149).\n- wifi: mac80211: use deflink and fix typo in link ID check\n  (bsc#1227149).\n- commit e4d62d6\n\n- kabi/severities: ignore kABI changes Realtek WiFi drivers (bsc#1227149)\n  All those symbols are local and used for its own helpers\n- commit c402c7b\n\n- wifi: rtlwifi: Ignore IEEE80211_CONF_CHANGE_RETRY_LIMITS\n  (bsc#1227149).\n- wifi: rtw89: wow: refine WoWLAN flows of HCI interrupts and\n  low power mode (bsc#1227149).\n- wifi: rtl8xxxu: enable MFP support with security flag of RX\n  descriptor (bsc#1227149).\n- wifi: rtw89: fw: scan offload prohibit all 6 GHz channel if\n  no 6 GHz sband (bsc#1227149).\n- wifi: rtw89: 8852c: add quirk to set PCI BER for certain\n  platforms (bsc#1227149).\n- wifi: rtw89: download firmware with five times retry\n  (bsc#1227149).\n- commit 70ec305\n\n- wifi: rtw89: coex: fix configuration for shared antenna for\n  8922A (bsc#1227149).\n- wifi: rtw89: wow: move release offload packet earlier for\n  WoWLAN mode (bsc#1227149).\n- wifi: rtw89: wow: set security engine options for 802.11ax\n  chips only (bsc#1227149).\n- wifi: rtw89: update suspend/resume for different generation\n  (bsc#1227149).\n- wifi: rtw89: wow: update config mac function with different\n  generation (bsc#1227149).\n- wifi: rtw89: update DMA function with different generation\n  (bsc#1227149).\n- wifi: rtw89: wow: update WoWLAN status register for different\n  generation (bsc#1227149).\n- wifi: rtw89: wow: update WoWLAN reason register for different\n  chips (bsc#1227149).\n- wifi: rtw89: coex: Add coexistence policy to decrease WiFi\n  packet CRC-ERR (bsc#1227149).\n- wifi: rtw89: coex: When Bluetooth not available don't set\n  power/gain (bsc#1227149).\n- wifi: rtw89: coex: add return value to ensure H2C command is\n  success or not (bsc#1227149).\n- wifi: rtw89: coex: Reorder H2C command index to align with\n  firmware (bsc#1227149).\n- wifi: rtw89: coex: add BTC ctrl_info version 7 and related logic\n  (bsc#1227149).\n- wifi: rtw89: coex: add init_info H2C command format version 7\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add coexistence helpers of SW grant\n  (bsc#1227149).\n- wifi: rtw89: mac: add coexistence helpers {cfg/get}_plt\n  (bsc#1227149).\n- wifi: rtlwifi: Remove rtl_intf_ops.read_efuse_byte\n  (bsc#1227149).\n- wifi: rtl8xxxu: fix mixed declarations in rtl8xxxu_set_aifs()\n  (bsc#1227149).\n- wifi: rtw89: pci: implement PCI CLK/ASPM/L1SS for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: Update EHT PHY beamforming capability\n  (bsc#1227149).\n- wifi: rtw89: advertise missing extended scan feature\n  (bsc#1227149).\n- wifi: rtlwifi: set initial values for unexpected cases of USB\n  endpoint priority (bsc#1227149).\n- wifi: rtl8xxxu: check vif before using in rtl8xxxu_tx()\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8192cu: Fix TX aggregation (bsc#1227149).\n- commit e9149f1\n\n- wifi: rtw89: 8922a: add helper of set_channel (bsc#1227149).\n- wifi: rtw89: 8922a: add set_channel RF part (bsc#1227149).\n- wifi: rtw89: 8922a: add set_channel BB part (bsc#1227149).\n- wifi: rtw89: 8922a: add set_channel MAC part (bsc#1227149).\n- wifi: rtlwifi: rtl_usb: Store the endpoint addresses\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8192cu: Fix 2T2R chip type detection\n  (bsc#1227149).\n- wifi: rtw89: 8922a: declare to support two chanctx\n  (bsc#1227149).\n- wifi: rtw89: chan: support MCC on Wi-Fi 7 chips (bsc#1227149).\n- wifi: rtw89: fw: implement MRC H2C command functions\n  (bsc#1227149).\n- wifi: rtw89: mac: implement MRC C2H event handling\n  (bsc#1227149).\n- wifi: rtw89: fw: add definition of H2C command and C2H event\n  for MRC series (bsc#1227149).\n- wifi: rtw89: change qutoa to DBCC by default for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: reference quota mode when setting Tx power\n  (bsc#1227149).\n- wifi: rtw89: 8922a: implement AP mode related reg for BE\n  generation (bsc#1227149).\n- wifi: rtw89: 8922a: correct register definition and merge IO\n  for ctrl_nbtg_bt_tx() (bsc#1227149).\n- wifi: rtw89: differentiate narrow_bw_ru_dis setting according\n  to chip gen (bsc#1227149).\n- wifi: rtw89: use PLCP information to match BSS_COLOR and AID\n  (bsc#1227149).\n- wifi: rtw89: mac: reset PHY-1 hardware when going to\n  enable/disable (bsc#1227149).\n- wifi: rtw89: mac: correct MUEDCA setting for MAC-1\n  (bsc#1227149).\n- wifi: rtw89: mac: return held quota of DLE when changing MAC-1\n  (bsc#1227149).\n- wifi: rtw89: load BB parameters to PHY-1 (bsc#1227149).\n- wifi: rtw89: correct PHY register offset for PHY-1\n  (bsc#1227149).\n- wifi: rtw89: chan: MCC take reconfig into account (bsc#1227149).\n- wifi: rtw89: chan: move handling from add/remove to\n  assign/unassign for MLO (bsc#1227149).\n- wifi: rtw89: chan: tweak weight recalc ahead before MLO\n  (bsc#1227149).\n- wifi: rtw89: chan: tweak bitmap recalc ahead before MLO\n  (bsc#1227149).\n- wifi: rtw89: chan: add sub-entity swap function to cover\n  replacing (bsc#1227149).\n- wifi: rtw89: drop TIMING_BEACON_ONLY and sync beacon TSF by self\n  (bsc#1227149).\n- wifi: rtl8xxxu: update rate mask per sta (bsc#1227149).\n- wifi: rtw89: fw: download firmware with key data for secure boot\n  (bsc#1227149).\n- wifi: rtw89: fw: parse secure section from firmware file\n  (bsc#1227149).\n- wifi: rtw89: fw: read firmware secure information from efuse\n  (bsc#1227149).\n- wifi: rtw89: fw: consider checksum length of security data\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops::rfk_hw_init (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops::rfk_init_late to do initial\n  RF calibrations later (bsc#1227149).\n- commit 28c4b55\n\n- wifi: rtw89: 8922a: rfk: implement chip_ops to call RF\n  calibrations (bsc#1227149).\n- wifi: rtw89: rfk: add H2C command to trigger TSSI (bsc#1227149).\n- wifi: rtw89: rfk: add H2C command to trigger TXGAPK\n  (bsc#1227149).\n- wifi: rtw89: rfk: add H2C command to trigger DACK (bsc#1227149).\n- wifi: rtw89: rfk: add H2C command to trigger DPK (bsc#1227149).\n- wifi: rtw89: rfk: add H2C command to trigger RX DCK\n  (bsc#1227149).\n- wifi: rtw89: rfk: add H2C command to trigger IQK (bsc#1227149).\n- wifi: rtw89: rfk: send channel information to firmware for RF\n  calibrations (bsc#1227149).\n- wifi: rtw89: rfk: add a completion to wait RF calibration\n  report from C2H event (bsc#1227149).\n- wifi: rtl8xxxu: Add TP-Link TL-WN823N V2 (bsc#1227149).\n- wifi: rtl8xxxu: fix error messages (bsc#1227149).\n- wifi: rtw89: 8922a: add more fields to beacon H2C command to\n  support multi-links (bsc#1227149).\n- wifi: rtw89: update ps_state register for chips with different\n  generation (bsc#1227149).\n- wifi: rtw89: add new H2C for PS mode in 802.11be chip\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add ieee80211_ops::hw_scan (bsc#1227149).\n- wifi: rtw89: prepare scan leaf functions for wifi 7 ICs\n  (bsc#1227149).\n- wifi: rtw89: debug: add FW log component for scan (bsc#1227149).\n- wifi: rtw89: update scan C2H messages for wifi 7 IC\n  (bsc#1227149).\n- wifi: rtw89: 8922a: set chip_ops FEM and GPIO to NULL\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops to get thermal value\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add RF read/write v2 (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops::cfg_txrx_path (bsc#1227149).\n- wifi: rtw89: 8922a: implement {stop,resume}_sch_tx and cfg_ppdu\n  (bsc#1227149).\n- wifi: rtw89: 8922a: hook handlers of TX/RX descriptors to\n  chip_ops (bsc#1227149).\n- wifi: rtw89: pci: validate RX tag for RXQ and RPQ (bsc#1227149).\n- wifi: rtw89: pci: interrupt v2 refine IMR for SER (bsc#1227149).\n- wifi: rtw89: pci: update SER timer unit and timeout time\n  (bsc#1227149).\n- wifi: rtw89: fix disabling concurrent mode TX hang issue\n  (bsc#1227149).\n- wifi: rtw89: fix HW scan timeout due to TSF sync issue\n  (bsc#1227149).\n- wifi: rtw89: add wait/completion for abort scan (bsc#1227149).\n- wifi: rtw89: disable RTS when broadcast/multicast (bsc#1227149).\n- wifi: rtw89: Set default CQM config if not present\n  (bsc#1227149).\n- wifi: rtw89: refine hardware scan C2H events (bsc#1227149).\n- wifi: rtw89: refine add_chan H2C command to encode_bits\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add BTG functions to assist BT coexistence\n  to control TX/RX (bsc#1227149).\n- wifi: rtw89: 8922a: add TX power related ops (bsc#1227149).\n- wifi: rtw89: 8922a: add register definitions of H2C, C2H,\n  page, RRSR and EDCCA (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops related to BB init\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops::{enable,disable}_bb_rf\n  (bsc#1227149).\n- wifi: rtw89: add mlo_dbcc_mode for WiFi 7 chips (bsc#1227149).\n- wifi: rtlwifi: Speed up firmware loading for USB (bsc#1227149).\n- wifi: rtl8xxxu: add missing number of sec cam entries for all\n  variants (bsc#1227149).\n- wifi: rtl8xxxu: make instances of iface limit and combination\n  to be static const (bsc#1227149).\n- wifi: rtl8xxxu: convert EN_DESC_ID of TX descriptor to le32 type\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8192de: Don't read register in\n  _rtl92de_query_rxphystatus (bsc#1227149).\n- wifi: rtw89: fw: extend JOIN H2C command to support WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: fw: use struct to fill JOIN H2C command\n  (bsc#1227149).\n- wifi: rtw89: fw: add H2C command to reset DMAC table for WiFi 7\n  (bsc#1227149).\n- wifi: rtw89: fw: add H2C command to reset CMAC table for WiFi 7\n  (bsc#1227149).\n- wifi: rtw89: fw: update TX AMPDU parameter to CMAC table\n  (bsc#1227149).\n- wifi: rtw89: fw: add chip_ops to update CMAC table to associated\n  station (bsc#1227149).\n- wifi: rtw89: fw: fill CMAC table to associated station for\n  WiFi 7 chips (bsc#1227149).\n- wifi: rtw89: fw: add H2C command to update security CAM v2\n  (bsc#1227149).\n- wifi: rtw89: declare EXT NSS BW of VHT capability (bsc#1227149).\n- wifi: rtw89: add EHT capabilities for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: change supported bandwidths of chip_info to bit\n  mask (bsc#1227149).\n- wifi: rtw89: adjust init_he_cap() to add EHT cap into\n  iftype_data (bsc#1227149).\n- wifi: rtw88: use kstrtoX_from_user() in debugfs handlers\n  (bsc#1227149).\n- wifi: rtl8xxxu: enable channel switch support (bsc#1227149).\n- wifi: rtlwifi: rtl_usb: Use sync register writes (bsc#1227149).\n- commit 055a697\n\n- wifi: rtlwifi: cleanup few rtlxxx_tx_fill_desc() routines\n  (bsc#1227149).\n- wifi: rtw89: add chip_ops::update_beacon to abstract update\n  beacon operation (bsc#1227149).\n- wifi: rtw89: add H2C command to download beacon frame for WiFi\n  7 chips (bsc#1227149).\n- wifi: rtw89: use struct to fill H2C command to download beacon\n  frame (bsc#1227149).\n- wifi: rtw89: add new H2C command to pause/sleep transmitting\n  by MAC ID (bsc#1227149).\n- wifi: rtw89: refine H2C command that pause transmitting by\n  MAC ID (bsc#1227149).\n- wifi: rtw89: fw: use struct to fill BA CAM H2C commands\n  (bsc#1227149).\n- wifi: rtw89: 8922a: update BA CAM number to 24 (bsc#1227149).\n- wifi: rtw89: add chip_ops::h2c_ba_cam() to configure BA CAM\n  (bsc#1227149).\n- wifi: rtw89: mac: add feature_init to initialize BA CAM V1\n  (bsc#1227149).\n- wifi: rtw89: add firmware H2C command of BA CAM V1\n  (bsc#1227149).\n- wifi: rtl8xxxu: Fix off by one initial RTS rate (bsc#1227149).\n- wifi: rtl8xxxu: Fix LED control code of RTL8192FU (bsc#1227149).\n- wifi: rtl8xxxu: declare concurrent mode support for 8188f\n  (bsc#1227149).\n- wifi: rtl8xxxu: make supporting AP mode only on port 0\n  transparent (bsc#1227149).\n- wifi: rtl8xxxu: add hw crypto support for AP mode (bsc#1227149).\n- wifi: rtl8xxxu: remove obsolete priv-\u0026gt;vif (bsc#1227149).\n- wifi: rtl8xxxu: add macids for STA mode (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interface in start_ap()\n  (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interfaces in\n  bss_info_changed() (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interfaces in\n  {add,remove}_interface() (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interfaces in\n  watchdog_callback() (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interfaces in\n  configure_filter() (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interfaces in\n  update_beacon_work_callback() (bsc#1227149).\n- wifi: rtl8xxxu: support multiple interfaces in set_aifs()\n  (bsc#1227149).\n- wifi: rtl8xxxu: support setting bssid register for multiple\n  interfaces (bsc#1227149).\n- wifi: rtl8xxxu: don't parse CFO, if both interfaces are\n  connected in STA mode (bsc#1227149).\n- wifi: rtl8xxxu: extend check for matching bssid to both\n  interfaces (bsc#1227149).\n- wifi: rtl8xxxu: extend wifi connected check to both interfaces\n  (bsc#1227149).\n- wifi: rtl8xxxu: support setting mac address register for both\n  interfaces (bsc#1227149).\n- wifi: rtl8xxxu: 8188e: convert usage of priv-\u0026gt;vif to\n  priv-\u0026gt;vifs[0] (bsc#1227149).\n- wifi: rtl8xxxu: support setting linktype for both interfaces\n  (bsc#1227149).\n- wifi: rtl8xxxu: prepare supporting two virtual interfaces\n  (bsc#1227149).\n- wifi: rtl8xxxu: remove assignment of priv-\u0026gt;vif in\n  rtl8xxxu_bss_info_changed() (bsc#1227149).\n- wifi: rtw88: 8822ce: refine power parameters for RFE type 5\n  (bsc#1227149).\n- wifi: rtw89: mac: Fix spelling mistakes \u0026quot;notfify\u0026quot; -\u0026gt; \u0026quot;notify\u0026quot;\n  (bsc#1227149).\n- wifi: rtw89: phy: set channel_info for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: phy: add BB wrapper of TX power for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add NCTL pre-settings for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: phy: ignore special data from BB parameter file\n  (bsc#1227149).\n- wifi: rtw89: 8922a: update the register used in DIG and the\n  DIG flow (bsc#1227149).\n- wifi: rtw89: 8922a: set RX gain along with set_channel operation\n  (bsc#1227149).\n- wifi: rtw89: phy: add parser to support RX gain dynamic setting\n  flow (bsc#1227149).\n- wifi: rtw89: phy: move bb_gain_info used by WiFi 6 chips to\n  union (bsc#1227149).\n- wifi: rtw89: 8851b: update TX power tables to R37 (bsc#1227149).\n- wifi: rtw89: 8852b: update TX power tables to R36 (bsc#1227149).\n- wifi: rtw89: pci: use DBI function for 8852AE/8852BE/8851BE\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: phy: using calculate_bit_shift()\n  (bsc#1227149).\n- wifi: rtw89: coex: To improve Wi-Fi performance while BT is idle\n  (bsc#1227149).\n- wifi: rtw89: coex: Translate antenna configuration from ID to\n  string (bsc#1227149).\n- commit d99b9e1\n\n- wifi: rtw89: coex: Update RF parameter control setting logic\n  (bsc#1227149).\n- wifi: rtw89: coex: Add Bluetooth RSSI level information\n  (bsc#1227149).\n- wifi: rtw89: coex: Set Bluetooth scan low-priority when Wi-Fi\n  link/scan (bsc#1227149).\n- wifi: rtw89: coex: Update coexistence policy for Wi-Fi LPS\n  (bsc#1227149).\n- wifi: rtw89: coex: Still show hardware grant signal info even\n  Wi-Fi is PS (bsc#1227149).\n- wifi: rtw89: coex: Update BTG control related logic\n  (bsc#1227149).\n- wifi: rtw89: coex: Add Pre-AGC control to enhance Wi-Fi RX\n  performance (bsc#1227149).\n- wifi: rtw89: coex: Record down Wi-Fi initial mode information\n  (bsc#1227149).\n- wifi: rtw89: coex: Fix wrong Wi-Fi role info and FDDT parameter\n  members (bsc#1227149).\n- wifi: rtw88: use cfg80211_ssid_eq() instead of rtw_ssid_equal()\n  (bsc#1227149).\n- wifi: rtw89: mac: implement to configure TX/RX engines for\n  WiFi 7 chips (bsc#1227149).\n- wifi: rtw89: mac: add sys_init and filter option for WiFi 7\n  chips (bsc#1227149).\n- wifi: rtw89: only reset BB/RF for existing WiFi 6 chips while\n  starting up (bsc#1227149).\n- wifi: rtw89: add DBCC H2C to notify firmware the status\n  (bsc#1227149).\n- wifi: rtw89: mac: add suffix _ax to MAC functions (bsc#1227149).\n- wifi: rtw89: mac: add flags to check if CMAC and DMAC are\n  enabled (bsc#1227149).\n- wifi: rtw89: 8922a: add power on/off functions (bsc#1227149).\n- wifi: rtw89: add XTAL SI for WiFi 7 chips (bsc#1227149).\n- wifi: rtw89: phy: print out RFK log with formatted string\n  (bsc#1227149).\n- wifi: rtw89: parse and print out RFK log from C2H events\n  (bsc#1227149).\n- wifi: rtw89: add C2H event handlers of RFK log and report\n  (bsc#1227149).\n- wifi: rtw89: load RFK log format string from firmware file\n  (bsc#1227149).\n- wifi: rtw89: fw: add version field to BB MCU firmware element\n  (bsc#1227149).\n- wifi: rtw89: fw: load TX power track tables from fw_element\n  (bsc#1227149).\n- wifi: rtw88: Use random MAC when efuse MAC invalid\n  (bsc#1227149).\n- wifi: rtw89: avoid stringop-overflow warning (bsc#1227149).\n- wifi: rtw89: mac: refine SER setting during WiFi CPU power on\n  (bsc#1227149).\n- wifi: rtw89: 8922a: dump MAC registers when SER occurs\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add SER IMR tables (bsc#1227149).\n- wifi: rtw89: fw: extend program counter dump for Wi-Fi 7 chip\n  (bsc#1227149).\n- wifi: rtw89: 8922a: configure CRASH_TRIGGER FW feature\n  (bsc#1227149).\n- wifi: rtw89: fix misbehavior of TX beacon in concurrent mode\n  (bsc#1227149).\n- wifi: rtw89: refine remain on channel flow to improve P2P\n  connection (bsc#1227149).\n- wifi: rtw89: Refine active scan behavior in 6 GHz (bsc#1227149).\n- wifi: rtw89: fix not entering PS mode after AP stops\n  (bsc#1227149).\n- wifi: rtlwifi: Remove bridge vendor/device ids (bsc#1227149).\n- wifi: rtlwifi: Remove unused PCI related defines and struct\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: Access full PMCS reg and use\n  pci_regs.h (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: Add pdev into\n  _rtl8821ae_clear_pci_pme_status() (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: Use pci_find_capability()\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: Reverse PM Capability exists check\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: Remove unnecessary PME_Status bit set\n  (bsc#1227149).\n- wifi: rtlwifi: Convert to use PCIe capability accessors\n  (bsc#1227149).\n- wifi: rtw89: mac: functions to configure hardware engine and\n  quota for WiFi 7 chips (bsc#1227149).\n- wifi: rtw89: mac: use pointer to access functions of hardware\n  engine and quota (bsc#1227149).\n- wifi: rtw89: mac: move code related to hardware engine to\n  individual functions (bsc#1227149).\n- wifi: rtw89: mac: check queue empty according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: refine element naming used by queue empty check\n  (bsc#1227149).\n- wifi: rtw89: add reserved size as factor of DLE used size\n  (bsc#1227149).\n- wifi: rtw89: mac: add to get DLE reserved quota (bsc#1227149).\n- commit cf41ac5\n\n- wifi: rtw89: 8922a: extend and add quota number (bsc#1227149).\n- wifi: rtw89: debug: remove wrapper of rtw89_debug()\n  (bsc#1227149).\n- wifi: rtw89: debug: add debugfs entry to disable dynamic\n  mechanism (bsc#1227149).\n- wifi: rtw89: phy: dynamically adjust EDCCA threshold\n  (bsc#1227149).\n- wifi: rtw89: debug: add to check if debug mask is enabled\n  (bsc#1227149).\n- wifi: rtlwifi: rtl8821ae: phy: remove some useless code\n  (bsc#1227149).\n- wifi: rtw88: debug: remove wrapper of rtw_dbg() (bsc#1227149).\n- wifi: rtw89: 8922a: read efuse content from physical map\n  (bsc#1227149).\n- wifi: rtw89: 8922a: read efuse content via efuse map struct\n  from logic map (bsc#1227149).\n- wifi: rtw89: 8852c: read RX gain offset from efuse for 6GHz\n  channels (bsc#1227149).\n- wifi: rtw89: mac: add to access efuse for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: mac: use mac_gen pointer to access about efuse\n  (bsc#1227149).\n- wifi: rtw89: 8922a: add 8922A basic chip info (bsc#1227149).\n- wifi: rtlwifi: drop unused const_amdpci_aspm (bsc#1227149).\n- wifi: rtw89: regd: update regulatory map to R65-R44\n  (bsc#1227149).\n- wifi: rtw89: regd: handle policy of 6 GHz according to BIOS\n  (bsc#1227149).\n- wifi: rtw89: acpi: process 6 GHz band policy from DSM\n  (bsc#1227149).\n- wifi: rtlwifi: simplify rtl_action_proc() and rtl_tx_agg_start()\n  (bsc#1227149).\n- wifi: rtw89: pci: update interrupt mitigation register for\n  8922AE (bsc#1227149).\n- wifi: rtw89: pci: correct interrupt mitigation register for\n  8852CE (bsc#1227149).\n- wifi: rtw89: 8922ae: add v2 interrupt handlers for 8922AE\n  (bsc#1227149).\n- wifi: rtw89: pci: generalize interrupt status bits of interrupt\n  handlers (bsc#1227149).\n- wifi: rtw89: pci: add pre_deinit to be called after probe\n  complete (bsc#1227149).\n- wifi: rtw89: pci: stop/start DMA for level 1 recovery according\n  to chip gen (bsc#1227149).\n- wifi: rtw89: pci: reset BDRAM according to chip gen\n  (bsc#1227149).\n- wifi: rtw88: simplify __rtw_tx_work() (bsc#1227149).\n- wifi: rtw89: coex: use struct assignment to replace memcpy()\n  to append TDMA content (bsc#1227149).\n- wifi: rtw89: pci: implement PCI mac_post_init for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: pci: add LTR v2 for WiFi 7 chip (bsc#1227149).\n- wifi: rtw89: pci: implement PCI mac_pre_init for WiFi 7 chips\n  (bsc#1227149).\n- commit dcfcac7\n\n- wifi: rtw89: pci: use gen_def pointer to configure\n  mac_{pre,post}_init and clear PCI ring index (bsc#1227149).\n- wifi: rtw89: pci: add PCI generation information to pci_info\n  for each chip (bsc#1227149).\n- wifi: rtw89: extend PHY status parser to support WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: consider RX info for WiFi 7 chips (bsc#1227149).\n- wifi: rtw89: configure PPDU max user by chip (bsc#1227149).\n- wifi: rtw89: set entry size of address CAM to H2C field by chip\n  (bsc#1227149).\n- wifi: rtw89: pci: generalize code of PCI control DMA IO for\n  WiFi 7 (bsc#1227149).\n- wifi: rtw89: pci: add new RX ring design to determine full RX\n  ring efficiently (bsc#1227149).\n- wifi: rtw89: pci: define PCI ring address for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: 8922ae: add 8922AE PCI entry and basic info\n  (bsc#1227149).\n- wifi: rtlwifi: rtl92ee_dm_dynamic_primary_cca_check(): fix\n  typo in function name (bsc#1227149).\n- wifi: rtlwifi: cleanup struct rtl_phy (bsc#1227149).\n- wifi: rtlwifi: cleanup struct rtl_hal (bsc#1227149).\n- wifi: rtw89: cleanup firmware elements parsing (bsc#1227149).\n- wifi: rtlwifi: drop chk_switch_dmdp() from HAL interface\n  (bsc#1227149).\n- wifi: rtlwifi: drop fill_fake_txdesc() from HAL interface\n  (bsc#1227149).\n- wifi: rtlwifi: drop pre_fill_tx_bd_desc() from HAL interface\n  (bsc#1227149).\n- wifi: rtw89: move software DCFO compensation setting to proper\n  position (bsc#1227149).\n- wifi: rtw89: correct the DCFO tracking flow to improve CFO\n  compensation (bsc#1227149).\n- wifi: rtw89: modify the register setting and the flow of CFO\n  tracking (bsc#1227149).\n- wifi: rtw89: phy: generalize valid bit of BSS color\n  (bsc#1227149).\n- wifi: rtw89: phy: change naming related BT coexistence functions\n  (bsc#1227149).\n- wifi: rtw88: dump firmware debug information in abnormal state\n  (bsc#1227149).\n- wifi: rtw88: debug: add to check if debug mask is enabled\n  (bsc#1227149).\n- wifi: rtlwifi: cleanup struct rtl_ps_ctl (bsc#1227149).\n- wifi: rtw89: mac: do bf_monitor only if WiFi 6 chips\n  (bsc#1227149).\n- wifi: rtw89: mac: set bf_assoc capabilities according to chip\n  gen (bsc#1227149).\n- wifi: rtw89: mac: set bfee_ctrl() according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: mac: add registers of MU-EDCA parameters for WiFi\n  7 chips (bsc#1227149).\n- wifi: rtw89: mac: generalize register of MU-EDCA switch\n  according to chip gen (bsc#1227149).\n- wifi: rtw89: mac: update RTS threshold according to chip gen\n  (bsc#1227149).\n- wifi: rtlwifi: simplify TX command fill callbacks (bsc#1227149).\n- wifi: rtw89: coex: add annotation __counted_by() to struct\n  rtw89_btc_btf_set_mon_reg (bsc#1227149).\n- wifi: rtw89: coex: add annotation __counted_by() for struct\n  rtw89_btc_btf_set_slot_table (bsc#1227149).\n- wifi: rtw89: add EHT radiotap in monitor mode (bsc#1227149).\n- wifi: rtw89: show EHT rate in debugfs (bsc#1227149).\n- wifi: rtw89: parse TX EHT rate selected by firmware from RA\n  C2H report (bsc#1227149).\n- wifi: rtw89: Add EHT rate mask as parameters of RA H2C command\n  (bsc#1227149).\n- wifi: rtw89: parse EHT information from RX descriptor and PPDU\n  status packet (bsc#1227149).\n- wifi: rtlwifi: use convenient list_count_nodes() (bsc#1227149).\n- commit 53661e1\n\n- wifi: rtlwifi: use unsigned long for bt_coexist_8723 timestamp\n  (bsc#1227149).\n- wifi: rtw88: 8821c: tweak CCK TX filter setting for SRRC\n  regulation (bsc#1227149).\n- wifi: rtw88: regd: update regulatory map to R64-R42\n  (bsc#1227149).\n- wifi: rtw88: 8822c: update TX power limit to V70 (bsc#1227149).\n- wifi: rtw88: 8821c: update TX power limit to V67 (bsc#1227149).\n- wifi: rtw88: regd: configure QATAR and UK (bsc#1227149).\n- wifi: rtlwifi: remove unreachable code in\n  rtl92d_dm_check_edca_turbo() (bsc#1227149).\n- wifi: rtw89: debug: txpwr table supports Wi-Fi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: debug: show txpwr table according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: phy: set TX power RU limit according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: phy: set TX power limit according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: phy: set TX power offset according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: phy: set TX power by rate according to chip gen\n  (bsc#1227149).\n- wifi: rtw89: mac: get TX power control register according to\n  chip gen (bsc#1227149).\n- wifi: rtlwifi: use unsigned long for rtl_bssid_entry timestamp\n  (bsc#1227149).\n- wifi: rtw89: refine bandwidth 160MHz uplink OFDMA performance\n  (bsc#1227149).\n- wifi: rtw89: refine uplink trigger based control mechanism\n  (bsc#1227149).\n- wifi: rtw89: 8851b: update TX power tables to R34 (bsc#1227149).\n- wifi: rtw89: 8852b: update TX power tables to R35 (bsc#1227149).\n- wifi: rtw89: 8852c: update TX power tables to R67 (bsc#1227149).\n- wifi: rtw89: regd: configure Thailand in regulation type\n  (bsc#1227149).\n- wifi: rtlwifi: cleanup few rtlxxxx_set_hw_reg() routines\n  (bsc#1227149).\n- wifi: rtw89: declare MCC in interface combination (bsc#1227149).\n- wifi: rtw89: 8852c: declare to support two chanctx\n  (bsc#1227149).\n- wifi: rtw89: pause/proceed MCC for ROC and HW scan\n  (bsc#1227149).\n- wifi: rtw89: mcc: fix NoA start time when GO is auxiliary\n  (bsc#1227149).\n- wifi: rtw89: load TX power related tables from FW elements\n  (bsc#1227149).\n- wifi: rtw89: phy: extend TX power common stuffs for Wi-Fi 7\n  chips (bsc#1227149).\n- wifi: rtw89: load TX power by rate when RFE parms setup\n  (bsc#1227149).\n- wifi: rtw89: phy: refine helpers used for raw TX power\n  (bsc#1227149).\n- commit 62f3f4a\n\n- wifi: rtw89: indicate TX power by rate table inside RFE\n  parameter (bsc#1227149).\n- wifi: rtw89: indicate TX shape table inside RFE parameter\n  (bsc#1227149).\n- wifi: rtw89: add subband index of primary channel to struct\n  rtw89_chan (bsc#1227149).\n- wifi: rtl8xxxu: Add a description about the device ID\n  0x7392:0xb722 (bsc#1227149).\n- wifi: rtw89: add mac_gen pointer to access mac port registers\n  (bsc#1227149).\n- wifi: rtw89: consolidate registers of mac port to struct\n  (bsc#1227149).\n- wifi: rtw89: add chip_info::txwd_info size to generalize TX\n  WD submit (bsc#1227149).\n- wifi: rtw89: add to fill TX descriptor v2 (bsc#1227149).\n- wifi: rtw89: add to fill TX descriptor for firmware command v2\n  (bsc#1227149).\n- wifi: rtw89: add to query RX descriptor format v2 (bsc#1227149).\n- wifi: rtw89: mcc: deal with beacon NoA if GO exists\n  (bsc#1227149).\n- wifi: rtw89: mcc: deal with BT slot change (bsc#1227149).\n- wifi: rtw89: mcc: deal with P2P PS change (bsc#1227149).\n- wifi: rtw89: mcc: track beacon offset and update when needed\n  (bsc#1227149).\n- wifi: rtw89: mcc: update role bitmap when changed (bsc#1227149).\n- wifi: rtw89: 52c: rfk: disable DPK during MCC (bsc#1227149).\n- wifi: rtw89: rfk: disable driver tracking during MCC\n  (bsc#1227149).\n- wifi: rtw89: 52c: rfk: refine MCC channel info notification\n  (bsc#1227149).\n- wifi: rtw89: 8922a: set memory heap address for secure firmware\n  (bsc#1227149).\n- wifi: rtw89: fw: refine download flow to support variant\n  firmware suits (bsc#1227149).\n- wifi: rtw89: 8922a: add chip_ops::bb_preinit to enable BB\n  before downloading firmware (bsc#1227149).\n- wifi: rtw89: fw: propagate an argument include_bb for BB MCU\n  firmware (bsc#1227149).\n- wifi: rtw89: fw: add checking type for variant type of firmware\n  (bsc#1227149).\n- wifi: rtw89: fw: implement supported functions of download\n  firmware for WiFi 7 chips (bsc#1227149).\n- wifi: rtw89: fw: generalize download firmware flow by mac_gen\n  pointers (bsc#1227149).\n- wifi: rtw89: fw: move polling function of firmware path ready\n  to an individual function (bsc#1227149).\n- wifi: rtw89: mcc: trigger FW to start/stop MCC (bsc#1227149).\n- wifi: rtw89: fix typo of rtw89_fw_h2c_mcc_macid_bitmap()\n  (bsc#1227149).\n- wifi: rtw89: mcc: decide pattern and calculate parameters\n  (bsc#1227149).\n- wifi: rtw89: mcc: consider and determine BT duration\n  (bsc#1227149).\n- commit bd46e4d\n\n- wifi: rtw89: mcc: fill fundamental configurations (bsc#1227149).\n- wifi: rtw89: mcc: initialize start flow (bsc#1227149).\n- wifi: rtw89: 8852c: Fix TSSI causes transmit power inaccuracy\n  (bsc#1227149).\n- wifi: rtw89: 8852c: Update bandedge parameters for better\n  performance (bsc#1227149).\n- wifi: rtl8xxxu: mark TOTOLINK N150UA V5/N150UA-B as tested\n  (bsc#1227149).\n- wifi: rtw88: fix typo rtw8822cu_probe (bsc#1227149).\n- wifi: rtlwifi: rtl8723: Remove unused function\n  rtl8723_cmd_send_packet() (bsc#1227149).\n- wifi: rtw89: Fix clang -Wimplicit-fallthrough in\n  rtw89_query_sar() (bsc#1227149).\n- wifi: rtw89: phy: modify register setting of ENV_MNTR, PHYSTS\n  and DIG (bsc#1227149).\n- wifi: rtw89: phy: add phy_gen_def::cr_base to support WiFi 7\n  chips (bsc#1227149).\n- wifi: rtw89: mac: define register address of rx_filter to\n  generalize code (bsc#1227149).\n- wifi: rtw89: mac: define internal memory address for WiFi 7 chip\n  (bsc#1227149).\n- wifi: rtw89: mac: generalize code to indirectly access WiFi\n  internal memory (bsc#1227149).\n- wifi: rtw89: mac: add mac_gen_def::band1_offset to map MAC\n  band1 register address (bsc#1227149).\n- wifi: rtw89: initialize multi-channel handling (bsc#1227149).\n- wifi: rtw89: provide functions to configure NoA for beacon\n  update (bsc#1227149).\n- wifi: rtw89: call rtw89_chan_get() by vif chanctx if aware of\n  vif (bsc#1227149).\n- wifi: rtw89: sar: let caller decide the center frequency to\n  query (bsc#1227149).\n- wifi: rtw89: refine rtw89_correct_cck_chan() by\n  rtw89_hw_to_nl80211_band() (bsc#1227149).\n- wifi: rtw89: add function prototype for coex request duration\n  (bsc#1227149).\n- wifi: rtw89: regd: update regulatory map to R64-R43\n  (bsc#1227149).\n- wifi: rtw89: fix a width vs precision bug (bsc#1227149).\n- wifi: rtlwifi: use eth_broadcast_addr() to assign broadcast\n  address (bsc#1227149).\n- wifi: rtw89: Introduce Time Averaged SAR (TAS) feature\n  (bsc#1227149).\n- wifi: rtw89: return failure if needed firmware elements are\n  not recognized (bsc#1227149).\n- wifi: rtw89: add to parse firmware elements of BB and RF tables\n  (bsc#1227149).\n- wifi: rtw89: introduce infrastructure of firmware elements\n  (bsc#1227149).\n- wifi: rtw89: add firmware suit for BB MCU 0/1 (bsc#1227149).\n- wifi: rtw89: add firmware parser for v1 format (bsc#1227149).\n- wifi: rtw89: introduce v1 format of firmware header\n  (bsc#1227149).\n- wifi: rtw89: support firmware log with formatted text\n  (bsc#1227149).\n- wifi: rtw89: recognize log format from firmware file\n  (bsc#1227149).\n- wifi: rtw89: get data rate mode/NSS/MCS v1 from RX descriptor\n  (bsc#1227149).\n- wifi: rtw89: add to display hardware rates v1 histogram in\n  debugfs (bsc#1227149).\n- wifi: rtw89: add C2H RA event V1 to support WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: use struct to access RA report (bsc#1227149).\n- wifi: rtw89: use struct to access firmware C2H event header\n  (bsc#1227149).\n- wifi: rtw89: add H2C RA command V1 to support WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: use struct to set RA H2C command (bsc#1227149).\n- wifi: rtw89: phy: rate pattern handles HW rate by chip gen\n  (bsc#1227149).\n- commit cdaa97d\n\n- wifi: rtlwifi: simplify LED management (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-simplify-non-chanctx-drivers.patch.\n- commit 34b32c5\n\n- wifi: rtw89: define hardware rate v1 for WiFi 7 chips\n  (bsc#1227149).\n- wifi: rtw89: add chip_info::chip_gen to determine chip\n  generation (bsc#1227149).\n- wifi: rtl8xxxu: Enable AP mode for RTL8723BU (bsc#1227149).\n- wifi: rtl8xxxu: Enable AP mode for RTL8192EU (bsc#1227149).\n- wifi: rtl8xxxu: Enable AP mode for RTL8710BU (RTL8188GU)\n  (bsc#1227149).\n- wifi: rtl8xxxu: Enable AP mode for RTL8192FU (bsc#1227149).\n- wifi: rtw88: simplify vif iterators (bsc#1227149).\n- wifi: rtw88: remove unused USB bulkout size set (bsc#1227149).\n- wifi: rtw88: remove unused and set but unused leftovers\n  (bsc#1227149).\n- wifi: rtlwifi: cleanup USB interface (bsc#1227149).\n- wifi: rtw89: use struct to parse firmware header (bsc#1227149).\n- wifi: rtw89: TX power stuffs replace confusing naming of _max\n  with _num (bsc#1227149).\n- wifi: rtw89: 8851b: configure to force 1 TX power value\n  (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: update IQK to version 0x8\n  (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add LCK track (bsc#1227149).\n- wifi: rtw89: 8851b: update TX power tables to R28 (bsc#1227149).\n- wifi: rtw89: 8851b: update RF radio A parameters to R28\n  (bsc#1227149).\n- wifi: rtw88: fix not entering PS mode after AP stops\n  (bsc#1227149).\n- wifi: rtw88: refine register based H2C command (bsc#1227149).\n- wifi: rtw88: Stop high queue during scan (bsc#1227149).\n- wifi: rtw88: Skip high queue in hci_flush (bsc#1227149).\n- wifi: rtw88: Fix AP mode incorrect DTIM behavior (bsc#1227149).\n- wifi: rtw88: use struct instead of macros to set TX desc\n  (bsc#1227149).\n- wifi: rtw88: process VO packets without workqueue to avoid\n  PTK rekey failed (bsc#1227149).\n- wifi: rtw88: Fix action frame transmission fail before\n  association (bsc#1227149).\n- wifi: rtw89: fix spelling typo of IQK debug messages\n  (bsc#1227149).\n- wifi: rtw89: cleanup rtw89_iqk_info and related code\n  (bsc#1227149).\n- wifi: rtw89: cleanup private data structures (bsc#1227149).\n- wifi: rtw88: add missing unwind goto for\n  __rtw_download_firmware() (bsc#1227149).\n- commit 9b282ce\n\n- wifi: rtlwifi: remove misused flag from HAL data (bsc#1227149).\n- wifi: rtlwifi: remove unused dualmac control leftovers\n  (bsc#1227149).\n- wifi: rtlwifi: remove unused timer and related code\n  (bsc#1227149).\n- wifi: rtw89: 8852c: update RF radio A/B parameters to R63\n  (bsc#1227149).\n- wifi: rtw89: 8852c: update TX power tables to R63 with 6 GHz\n  power type (3 of 3) (bsc#1227149).\n- wifi: rtw89: 8852c: update TX power tables to R63 with 6 GHz\n  power type (2 of 3) (bsc#1227149).\n- wifi: rtw89: 8852c: update TX power tables to R63 with 6 GHz\n  power type (1 of 3) (bsc#1227149).\n- wifi: rtw89: process regulatory for 6 GHz power type\n  (bsc#1227149).\n- wifi: rtw89: regd: update regulatory map to R64-R40\n  (bsc#1227149).\n- wifi: rtw89: regd: judge 6 GHz according to chip and BIOS\n  (bsc#1227149).\n- commit f81b870\n\n- wifi: rtw89: refine clearing supported bands to check 2/5 GHz\n  first (bsc#1227149).\n- Refresh\n  patches.suse/wifi-cfg80211-annotate-iftype_data-pointer-with-spar.patch.\n- commit 1873f0a\n\n- wifi: rtw89: 8851b: configure CRASH_TRIGGER feature for 8851B\n  (bsc#1227149).\n- wifi: rtw89: set TX power without precondition during setting\n  channel (bsc#1227149).\n- wifi: rtw89: debug: txpwr table access only valid page according\n  to chip (bsc#1227149).\n- wifi: rtw89: 8851b: enable hw_scan support (bsc#1227149).\n- wifi: rtlwifi: use helper function rtl_get_hdr() (bsc#1227149).\n- wifi: rtw89: use flexible array member in rtw89_btc_btf_tlv\n  (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: Fix spelling mistake KIP_RESOTRE -\u0026gt;\n  KIP_RESTORE (bsc#1227149).\n- wifi: rtw89: use struct to access register-based H2C/C2H\n  (bsc#1227149).\n- wifi: rtw89: use struct and le32_get_bits() to access RX\n  descriptor (bsc#1227149).\n- commit 21eb4e8\n\n- Update config files: update for the realtek wifi driver updates (bsc#1227149)\n- commit 33b8d09\n\n- wifi: rtw89: use struct and le32_get_bits() to access received\n  PHY status IEs (bsc#1227149).\n- wifi: rtw89: use struct and le32_get_bits to access RX info\n  (bsc#1227149).\n- wifi: rtw89: add chip_ops::query_rxdesc() and rxd_len as\n  helpers to support newer chips (bsc#1227149).\n- wifi: rtw89: 8851b: add 8851be to Makefile and Kconfig\n  (bsc#1227149).\n- wifi: rtw89: add tx_wake notify for 8851B (bsc#1227149).\n- wifi: rtw89: enlarge supported length of read_reg debugfs entry\n  (bsc#1227149).\n- wifi: rtw89: 8851b: add RF configurations (bsc#1227149).\n- wifi: rtw89: 8851b: add MAC configurations to chip_info\n  (bsc#1227149).\n- wifi: rtw89: 8851b: fill BB related capabilities to chip_info\n  (bsc#1227149).\n- wifi: rtw89: 8851b: add TX power related functions\n  (bsc#1227149).\n- commit 66eef0c\n\n- Update config files: update for the realtek wifi driver updates (bsc#1227149)\n- commit 75bc634\n\n- wifi: rtw89: refine packet offload handling under SER\n  (bsc#1227149).\n- wifi: rtw89: tweak H2C TX waiting function for SER\n  (bsc#1227149).\n- wifi: rtw89: ser: reset total_sta_assoc and tdls_peer when L2\n  (bsc#1227149).\n- wifi: rtw88: Add support for the SDIO based RTL8723DS chipset\n  (bsc#1227149).\n- wifi: rtw88: rtw8723d: Implement RTL8723DS (SDIO) efuse parsing\n  (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add TSSI (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add DPK (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add RX DCK (bsc#1227149).\n- wifi: rtw89: 8851b: add to parse efuse content (bsc#1227149).\n- wifi: rtw89: 8851b: add set channel function (bsc#1227149).\n- wifi: rtw89: 8851b: add basic power on function (bsc#1227149).\n- wifi: rtw89: 8851b: add BT coexistence support function\n  (bsc#1227149).\n- wifi: rtw89: 8851b: configure GPIO according to RFE type\n  (bsc#1227149).\n- wifi: rtw89: 8851b: add to read efuse version to recognize\n  hardware version B (bsc#1227149).\n- wifi: rtl8xxxu: Rename some registers (bsc#1227149).\n- wifi: rtl8xxxu: Support new chip RTL8192FU (bsc#1227149).\n- wifi: rtw89: suppress the log for specific SER called\n  CMDPSR_FRZTO (bsc#1227149).\n- wifi: rtw89: ser: L1 add pre-M0 and post-M0 states\n  (bsc#1227149).\n- wifi: rtw89: pci: fix interrupt enable mask for HALT C2H of\n  RTL8851B (bsc#1227149).\n- wifi: rtw89: support U-NII-4 channels on 5GHz band\n  (bsc#1227149).\n- wifi: rtw89: regd: judge UNII-4 according to BIOS and chip\n  (bsc#1227149).\n- wifi: rtw89: introduce realtek ACPI DSM method (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add IQK (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add DACK (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add RCK (bsc#1227149).\n- wifi: rtw89: 8851b: rfk: add AACK (bsc#1227149).\n- wifi: rtw89: 8851b: add set_channel_rf() (bsc#1227149).\n- wifi: rtw89: 8851b: add DLE mem and HFC quota (bsc#1227149).\n- wifi: rtw89: 8851b: add support WoWLAN to 8851B (bsc#1227149).\n- wifi: rtw89: change naming of BA CAM from V1 to V0_EXT\n  (bsc#1227149).\n- commit a1de2dd\n\n- wifi: rtw89: use chip_info::small_fifo_size to choose debug_mask\n  (bsc#1227149).\n- wifi: rtw89: add CFO XTAL registers field to support 8851B\n  (bsc#1227149).\n- wifi: rtw89: 8851b: add NCTL post table (bsc#1227149).\n- wifi: rtw89: 8851be: add 8851BE PCI entry and fill PCI\n  capabilities (bsc#1227149).\n- wifi: rtw89: 8851b: add 8851B basic chip_info (bsc#1227149).\n- wifi: rtw89: scan offload wait for FW done ACK (bsc#1227149).\n- wifi: rtw89: mac: handle C2H receive/done ACK in interrupt\n  context (bsc#1227149).\n- wifi: rtw89: packet offload wait for FW response (bsc#1227149).\n- wifi: rtw89: refine packet offload delete flow of 6 GHz probe\n  (bsc#1227149).\n- wifi: rtw89: release bit in rtw89_fw_h2c_del_pkt_offload()\n  (bsc#1227149).\n- wifi: rtw89: add EVM for antenna diversity (bsc#1227149).\n- wifi: rtw89: add RSSI based antenna diversity (bsc#1227149).\n- wifi: rtw89: initialize antenna for antenna diversity\n  (bsc#1227149).\n- wifi: rtw89: add EVM and SNR statistics to debugfs\n  (bsc#1227149).\n- wifi: rtw89: add RSSI statistics for the case of antenna\n  diversity to debugfs (bsc#1227149).\n- wifi: rtw89: set capability of TX antenna diversity\n  (bsc#1227149).\n- wifi: rtw89: use struct rtw89_phy_sts_ie0 instead of macro to\n  access PHY IE0 status (bsc#1227149).\n- wifi: rtw88: fix incorrect error codes in rtw_debugfs_set_*\n  (bsc#1227149).\n- wifi: rtw88: fix incorrect error codes in\n  rtw_debugfs_copy_from_user (bsc#1227149).\n- wifi: rtl8xxxu: rtl8xxxu_rx_complete(): remove unnecessary\n  return (bsc#1227149).\n- commit fef25cd\n\n- wifi: rtl8xxxu: Add sta_add() and sta_remove() callbacks\n  (bsc#1227149).\n- commit a27e0ec\n\n- wifi: rtl8xxxu: Support USB RX aggregation for the newer chips\n  (bsc#1227149).\n- wifi: rtl8xxxu: Set maximum number of supported stations\n  (bsc#1227149).\n- wifi: rtl8xxxu: Declare AP mode support for 8188f (bsc#1227149).\n- wifi: rtl8xxxu: Remove usage of tx_info-\u0026gt;control.rates[0].flags\n  (bsc#1227149).\n- wifi: rtl8xxxu: Remove usage of ieee80211_get_tx_rate()\n  (bsc#1227149).\n- wifi: rtl8xxxu: Clean up filter configuration (bsc#1227149).\n- wifi: rtl8xxxu: Enable hw seq for mgmt/non-QoS data frames\n  (bsc#1227149).\n- wifi: rtl8xxxu: Add parameter macid to update_rate_mask\n  (bsc#1227149).\n- wifi: rtl8xxxu: Put the macid in txdesc (bsc#1227149).\n- commit 6125130\n\n- wifi: radiotap: add bandwidth definition of EHT U-SIG\n  (bsc#1227149).\n- wifi: ieee80211: add UL-bandwidth definition of trigger frame\n  (bsc#1227149).\n- wifi: rtl8xxxu: Add parameter force to\n  rtl8xxxu_refresh_rate_mask (bsc#1227149).\n- wifi: rtl8xxxu: Add parameter role to report_connect\n  (bsc#1227149).\n- wifi: rtl8xxxu: Actually use macid in\n  rtl8xxxu_gen2_report_connect (bsc#1227149).\n- wifi: rtl8xxxu: Allow creating interface in AP mode\n  (bsc#1227149).\n- wifi: rtl8xxxu: Allow setting rts threshold to -1 (bsc#1227149).\n- wifi: rtl8xxxu: Add set_tim() callback (bsc#1227149).\n- wifi: rtl8xxxu: Add beacon functions (bsc#1227149).\n- wifi: rtl8xxxu: Select correct queue for beacon frames\n  (bsc#1227149).\n- wifi: rtl8xxxu: Add start_ap() callback (bsc#1227149).\n- commit 02b75ed\n\n- wifi: iwlwifi: bump FW API to 90 for BZ/SC devices (bsc#1227149\n  CVE-2023-47210 bsc#1225601 CVE-2023-38417 bsc#1225600).\n- commit ea4853c\n\n- wifi: iwlwifi: bump FW API to 89 for AX/BZ/SC devices\n  (bsc#1227149 CVE-2023-47210 bsc#1225601 CVE-2023-38417\n  bsc#1225600).\n- commit bc49209\n\n- ASoC: SOF: Intel: hda-pcm: Limit the maximum number of periods\n  by MAX_BDL_ENTRIES (stable-fixes).\n- ASoC: rt711-sdw: add missing readable registers (stable-fixes).\n- ALSA: hda/realtek: Enable Mute LED on HP 250 G7 (stable-fixes).\n- ALSA: hda/realtek: Limit mic boost on VAIO PRO PX\n  (stable-fixes).\n- ALSA: hda/realtek: add quirk for Clevo V5[46]0TU (stable-fixes).\n- commit 1ddd32b\n\n- hpet: Support 32-bit userspace (git-fixes).\n- misc: fastrpc: Restrict untrusted app to attach to privileged PD\n  (git-fixes).\n- misc: fastrpc: Fix ownership reassignment of remote heap\n  (git-fixes).\n- misc: fastrpc: Fix memory leak in audio daemon attach operation\n  (git-fixes).\n- misc: fastrpc: Avoid updating PD type for capability request\n  (git-fixes).\n- misc: fastrpc: Copy the complete capability structure to user\n  (git-fixes).\n- misc: fastrpc: Fix DSP capabilities request (git-fixes).\n- USB: serial: mos7840: fix crash on resume (git-fixes).\n- USB: core: Fix duplicate endpoint bug by clearing reserved\n  bits in the descriptor (git-fixes).\n- firmware: cs_dsp: Use strnlen() on name fields in V1 wmfw files\n  (git-fixes).\n- ASoC: SOF: Intel: hda: fix null deref on system suspend entry\n  (git-fixes).\n- firmware: cs_dsp: Prevent buffer overrun when processing V2\n  alg headers (git-fixes).\n- firmware: cs_dsp: Validate payload length before processing\n  block (git-fixes).\n- firmware: cs_dsp: Return error if block header overflows file\n  (git-fixes).\n- firmware: cs_dsp: Fix overflow checking of wmfw header\n  (git-fixes).\n- ALSA: hda: cs35l41: Fix swapped l/r audio channels for Lenovo\n  ThinBook 13x Gen4 (git-fixes).\n- commit 34ebce1\n\n- net/smc: avoid data corruption caused by decline (bsc#1225088\n  CVE-2023-52775).\n- commit 621e8ca\n\n- net: openvswitch: fix overwriting ct original tuple for  ICMPv6\n  (bsc#1226783 CVE-2024-38558).\n- commit 748cf39\n\n- ipv6: sr: fix missing sk_buff release in seg6_input_core\n  (bsc#1227626 CVE-2024-39490).\n- commit 3d59f52\n\n- mptcp: fix data re-injection from stale subflow (bsc#1223010\n  CVE-2024-26826).\n- commit f3a102e\n\n- net/smc: fix illegal rmb_desc access in SMC-D connection dump\n  (bsc#1220942 CVE-2024-26615).\n- commit f21afb0\n\n- kabi/severities: cover all ath/* drivers (bsc#1227149)\n  All symbols in ath/* network drivers are local and can be ignored\n- commit d902566\n\n- Refresh kabi workaround ath updates (bsc#1227149#)\n- commit b0fa38b\n\n- wifi: mac80211: simplify non-chanctx drivers (bsc#1227149).\n- commit eeb4722\n\n- wifi: ath11k: move power type check to ASSOC stage when\n  connecting to 6 GHz AP (bsc#1227149).\n- wifi: ath11k: fix WCN6750 firmware crash caused by 17 num_vdevs\n  (bsc#1227149).\n- wifi: ath12k: fix the problem that down grade phy mode operation\n  (bsc#1227149).\n- wifi: ath12k: check M3 buffer size as well whey trying to\n  reuse it (bsc#1227149).\n- wifi: ath12k: fix kernel crash during resume (bsc#1227149).\n- wifi: ath9k: work around memset overflow warning (bsc#1227149).\n- wifi: ath12k: use correct flag field for 320 MHz channels\n  (bsc#1227149).\n- commit 58db5ff\n\n- wifi: ath11k: use RCU when accessing struct inet6_dev::ac_list\n  (bsc#1227149).\n- wifi: ath12k: fix license in p2p.c and p2p.h (bsc#1227149).\n- wifi: ath11k: constify MHI channel and controller configs\n  (bsc#1227149).\n- wifi: ath12k: add rcu lock for ath12k_wmi_p2p_noa_event()\n  (bsc#1227149).\n- wifi: ath11k: remove unused scan_events from struct\n  scan_req_params (bsc#1227149).\n- wifi: ath11k: add support for QCA2066 (bsc#1227149).\n- wifi: ath11k: move pci.ops registration ahead (bsc#1227149).\n- commit 29f553c\n\n- wifi: ath11k: provide address list if chip supports 2 stations\n  (bsc#1227149).\n- wifi: ath11k: support 2 station interfaces (bsc#1227149).\n- wifi: ath12k: remove the unused scan_events from\n  ath12k_wmi_scan_req_arg (bsc#1227149).\n- wifi: ath12k: Remove unused scan_flags from struct\n  ath12k_wmi_scan_req_arg (bsc#1227149).\n- wifi: ath12k: Do not use scan_flags from struct\n  ath12k_wmi_scan_req_arg (bsc#1227149).\n- wifi: carl9170: Remove redundant assignment to pointer super\n  (bsc#1227149).\n- wifi: ath11k: Remove scan_flags union from struct\n  scan_req_params (bsc#1227149).\n- wifi: ath11k: Do not directly use scan_flags in struct\n  scan_req_params (bsc#1227149).\n- wifi: ath12k: Fix uninitialized use of ret in\n  ath12k_mac_allocate() (bsc#1227149).\n- wifi: ath11k: Really consistently use ath11k_vif_to_arvif()\n  (bsc#1227149).\n- wifi: ath12k: advertise P2P dev support for WCN7850\n  (bsc#1227149).\n- wifi: ath12k: designating channel frequency for ROC scan\n  (bsc#1227149).\n- wifi: ath12k: move peer delete after vdev stop of station for\n  WCN7850 (bsc#1227149).\n- wifi: ath12k: allow specific mgmt frame tx while vdev is not up\n  (bsc#1227149).\n- wifi: ath12k: change WLAN_SCAN_PARAMS_MAX_IE_LEN from 256 to\n  512 (bsc#1227149).\n- wifi: ath12k: implement remain on channel for P2P mode\n  (bsc#1227149).\n- wifi: ath12k: implement handling of P2P NoA event (bsc#1227149).\n- wifi: ath12k: add P2P IE in beacon template (bsc#1227149).\n- wifi: ath12k: change interface combination for P2P mode\n  (bsc#1227149).\n- wifi: ath12k: fix broken structure wmi_vdev_create_cmd\n  (bsc#1227149).\n- commit 21d36c7\n\n- wifi: ath11k: initialize eirp_power before use (bsc#1227149).\n- wifi: ath12k: enable 802.11 power save mode in station mode\n  (bsc#1227149).\n- wifi: ath12k: refactor the rfkill worker (bsc#1227149).\n- wifi: ath12k: add processing for TWT disable event\n  (bsc#1227149).\n- wifi: ath12k: add processing for TWT enable event (bsc#1227149).\n- wifi: ath12k: disable QMI PHY capability learn in split-phy\n  QCN9274 (bsc#1227149).\n- wifi: ath12k: Read board id to support split-PHY QCN9274\n  (bsc#1227149).\n- wifi: ath12k: fix PCI read and write (bsc#1227149).\n- wifi: ath12k: add MAC id support in WBM error path\n  (bsc#1227149).\n- wifi: ath12k: subscribe required word mask from rx tlv\n  (bsc#1227149).\n- commit c884365\n\n- wifi: ath12k: remove hal_desc_sz from hw params (bsc#1227149).\n- wifi: ath12k: split hal_ops to support RX TLVs word mask\n  compaction (bsc#1227149).\n- wifi: ath12k: fix firmware assert during insmod in memory\n  segment mode (bsc#1227149).\n- wifi: ath12k: Add logic to write QRTR node id to scratch\n  (bsc#1227149).\n- wifi: ath12k: fix fetching MCBC flag for QCN9274 (bsc#1227149).\n- wifi: ath12k: add support for peer meta data version\n  (bsc#1227149).\n- wifi: ath12k: fetch correct pdev id from\n  WMI_SERVICE_READY_EXT_EVENTID (bsc#1227149).\n- wifi: ath12k: indicate NON MBSSID vdev by default during vdev\n  start (bsc#1227149).\n- wifi: ath12k: add firmware-2.bin support (bsc#1227149).\n- wifi: ath9k:  remove redundant assignment to variable ret\n  (bsc#1227149).\n- commit 777dc1c\n\n- wifi: ath11k: fix connection failure due to unexpected peer\n  delete (bsc#1227149).\n- wifi: ath11k: avoid forward declaration of\n  ath11k_mac_start_vdev_delay() (bsc#1227149).\n- wifi: ath11k: rename ath11k_start_vdev_delay() (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for wcn36xx (bsc#1227149).\n- wifi: fill in MODULE_DESCRIPTION()s for ar5523 (bsc#1227149).\n- commit d2a4b44\n\n- wifi: ath11k: remove invalid peer create logic (bsc#1227149).\n- wifi: ath11k: enable 36 bit mask for stream DMA (bsc#1227149).\n- wifi: ath10k: Fix enum ath10k_fw_crash_dump_type kernel-doc\n  (bsc#1227149).\n- wifi: ath10k: Fix htt_data_tx_completion kernel-doc warning\n  (bsc#1227149).\n- wifi: ath10k: fix htt_q_state_conf \u0026amp; htt_q_state kernel-doc\n  (bsc#1227149).\n- wifi: ath10k: correctly document enum wmi_tlv_tx_pause_id\n  (bsc#1227149).\n- wifi: ath10k: add missing wmi_10_4_feature_mask documentation\n  (bsc#1227149).\n- wifi: ath12k: add support for collecting firmware log\n  (bsc#1227149).\n- wifi: ath12k: Introduce the container for mac80211 hw\n  (bsc#1227149).\n- wifi: ath12k: Refactor the mac80211 hw access from link/radio\n  (bsc#1227149).\n- commit 614fabb\n\n- iommu/vt-d: Improve ITE fault handling if target device isn't\n  present (git-fixes).\n- commit 134a3a5\n\n- wifi: ath12k: change MAC buffer ring size to 2048 (bsc#1227149).\n- wifi: ath12k: add support for BA1024 (bsc#1227149).\n- wifi: ath12k: fix wrong definitions of hal_reo_update_rx_queue\n  (bsc#1227149).\n- wifi: ath10k: replace ENOTSUPP with EOPNOTSUPP (bsc#1227149).\n- wifi: ath11k: replace ENOTSUPP with EOPNOTSUPP (bsc#1227149).\n- wifi: ath12k: replace ENOTSUPP with EOPNOTSUPP (bsc#1227149).\n- wifi: ath12k: add QMI PHY capability learn support\n  (bsc#1227149).\n- wifi: ath12k: refactor QMI MLO host capability helper function\n  (bsc#1227149).\n- wifi: ath11k: document HAL_RX_BUF_RBM_SW4_BM (bsc#1227149).\n- wifi: ath12k: ath12k_start_vdev_delay(): convert to use ar\n  (bsc#1227149).\n- commit dd312dc\n\n- wifi: ath12k: refactor ath12k_mac_op_flush() (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_ampdu_action()\n  (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_configure_filter()\n  (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_update_vif_offload()\n  (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_stop() (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_start() (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_conf_tx() (bsc#1227149).\n- wifi: ath12k: refactor ath12k_bss_assoc() (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_op_config() (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_register() and\n  ath12k_mac_unregister() (bsc#1227149).\n- commit b6ca728\n\n- wifi: ath12k: refactor ath12k_mac_setup_channels_rates()\n  (bsc#1227149).\n- wifi: ath12k: refactor ath12k_mac_allocate() and\n  ath12k_mac_destroy() (bsc#1227149).\n- wifi: ath12k: relocate ath12k_dp_pdev_pre_alloc() call\n  (bsc#1227149).\n- wifi: ath12k: Use initializers for QMI message buffers\n  (bsc#1227149).\n- wifi: ath12k: Add missing qmi_txn_cancel() calls (bsc#1227149).\n- wifi: ath12k: Remove unnecessary struct qmi_txn initializers\n  (bsc#1227149).\n- wifi: ath11k: use WMI_VDEV_SET_TPC_POWER_CMDID when\n  EXT_TPC_REG_SUPPORT for 6 GHz (bsc#1227149).\n- wifi: ath11k: add handler for WMI_VDEV_SET_TPC_POWER_CMDID\n  (bsc#1227149).\n- wifi: ath11k: add WMI_TLV_SERVICE_EXT_TPC_REG_SUPPORT service\n  bit (bsc#1227149).\n- wifi: ath11k: fill parameters for vdev set tpc power WMI command\n  (bsc#1227149).\n- commit 3c338b0\n\n- wifi: ath11k: save max transmit power in vdev start response\n  event from firmware (bsc#1227149).\n- commit 279ae7a\n\n- wifi: ath11k: add parse of transmit power envelope element\n  (bsc#1227149).\n- commit e295f89\n\n- wifi: ath11k: save power spectral density(PSD) of regulatory\n  rule (bsc#1227149).\n- wifi: ath11k: update regulatory rules when connect to AP on\n  6 GHz band for station (bsc#1227149).\n- wifi: ath11k: update regulatory rules when interface added\n  (bsc#1227149).\n- wifi: ath11k: fix a possible dead lock caused by ab-\u0026gt;base_lock\n  (bsc#1227149).\n- wifi: ath11k: store cur_regulatory_info for each radio\n  (bsc#1227149).\n- wifi: ath11k: add support to select 6 GHz regulatory type\n  (bsc#1227149).\n- wifi: ath12k: refactor ath12k_wmi_tlv_parse_alloc()\n  (bsc#1227149).\n- wifi: ath11k: fix IOMMU errors on buffer rings (bsc#1227149).\n- commit d84dbd2\n\n- wifi: ath12k: Make QMI message rules const (bsc#1227149).\n- wifi: ath12k: support default regdb while searching board-2.bin\n  for WCN7850 (bsc#1227149).\n- wifi: ath12k: add support to search regdb data in board-2.bin\n  for WCN7850 (bsc#1227149).\n- wifi: ath12k: remove unused ATH12K_BD_IE_BOARD_EXT\n  (bsc#1227149).\n- wifi: ath12k: add fallback board name without variant while\n  searching board-2.bin (bsc#1227149).\n- wifi: ath12k: add string type to search board data in\n  board-2.bin for WCN7850 (bsc#1227149).\n- wifi: ath10k: remove duplicate memset() in 10.4 TDLS peer update\n  (bsc#1227149).\n- wifi: ath10k: use flexible array in struct\n  wmi_tdls_peer_capabilities (bsc#1227149).\n- wifi: ath10k: remove unused template structs (bsc#1227149).\n- wifi: ath10k: remove struct wmi_pdev_chanlist_update_event\n  (bsc#1227149).\n- commit e73f8dc\n\n- wifi: ath10k: use flexible arrays for WMI start scan TLVs\n  (bsc#1227149).\n- wifi: ath10k: use flexible array in struct wmi_host_mem_chunks\n  (bsc#1227149).\n- wifi: ath9k: Convert to platform remove callback returning void\n  (bsc#1227149).\n- wifi: ath9k: delete some unused/duplicate macros (bsc#1227149).\n- wifi: ath11k: refactor ath11k_wmi_tlv_parse_alloc()\n  (bsc#1227149).\n- wifi: ath11k: rely on mac80211 debugfs handling for vif\n  (bsc#1227149).\n- wifi: ath11k: workaround too long expansion sparse warnings\n  (bsc#1227149).\n- Revert \u0026quot;wifi: ath12k: use ATH12K_PCI_IRQ_DP_OFFSET for DP IRQ\u0026quot;\n  (bsc#1227149).\n- wifi: ath9k: reset survey of current channel after a scan\n  started (bsc#1227149).\n- wifi: ath12k: fix the issue that the multicast/broadcast\n  indicator is not read correctly for WCN7850 (bsc#1227149).\n- commit 6cf204e\n\n- wifi: ath11k: Fix ath11k_htc_record flexible record\n  (bsc#1227149).\n- wifi: ath5k: remove unused ath5k_eeprom_info::ee_antenna\n  (bsc#1227149).\n- wifi: ath10k: add support to allow broadcast action frame RX\n  (bsc#1227149).\n- wifi: ath12k: avoid repeated wiphy access from hw (bsc#1227149).\n- wifi: ath12k: set IRQ affinity to CPU0 in case of one MSI vector\n  (bsc#1227149).\n- wifi: ath12k: do not restore ASPM in case of single MSI vector\n  (bsc#1227149).\n- wifi: ath12k: add support one MSI vector (bsc#1227149).\n- wifi: ath12k: refactor multiple MSI vector implementation\n  (bsc#1227149).\n- wifi: ath12k: use ATH12K_PCI_IRQ_DP_OFFSET for DP IRQ\n  (bsc#1227149).\n- wifi: ath12k: add CE and ext IRQ flag to indicate irq_handler\n  (bsc#1227149).\n- commit 908caeb\n\n- wifi: ath12k: get msi_data again after request_irq is called\n  (bsc#1227149).\n- wifi: wcn36xx: Convert to platform remove callback returning\n  void (bsc#1227149).\n- wifi: ath5k: Convert to platform remove callback returning void\n  (bsc#1227149).\n- wifi: ath12k: avoid repeated hw access from ar (bsc#1227149).\n- wifi: ath12k: Optimize the mac80211 hw data access\n  (bsc#1227149).\n- wifi: ath12k: add 320 MHz bandwidth enums (bsc#1227149).\n- wifi: ath11k: Convert to platform remove callback returning void\n  (bsc#1227149).\n- wifi: ath11k: remove ath11k_htc_record::pauload[] (bsc#1227149).\n- wifi: ath10k: Use DECLARE_FLEX_ARRAY() for ath10k_htc_record\n  (bsc#1227149).\n- wifi: ath10k: remove ath10k_htc_record::pauload[] (bsc#1227149).\n- commit 67bc0a7\n\n- wifi: ath10k: Update Qualcomm Innovation Center, Inc. copyrights\n  (bsc#1227149).\n- commit e13fd24\n\n- wifi: ath11k: Update Qualcomm Innovation Center, Inc. copyrights\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-ath11k-do-not-dump-SRNG-statistics-during-resum.patch.\n- Refresh\n  patches.suse/wifi-ath11k-fix-warning-on-DMA-ring-capabilities-eve.patch.\n- Refresh patches.suse/wifi-ath11k-support-hibernation.patch.\n- Refresh\n  patches.suse/wifi-ath11k-thermal-don-t-try-to-register-multiple-t.patch.\n- commit a886227\n\n- wifi: ath9k: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ath12k: refactor DP Rxdma ring structure (bsc#1227149).\n- wifi: ath12k: avoid explicit HW conversion argument in Rxdma\n  replenish (bsc#1227149).\n- wifi: ath12k: avoid explicit RBM id argument in Rxdma replenish\n  (bsc#1227149).\n- wifi: ath12k: avoid explicit mac id argument in Rxdma replenish\n  (bsc#1227149).\n- wifi: ath12k: fix the error handler of rfkill config\n  (bsc#1227149).\n- wifi: ath12k: use select for CRYPTO_MICHAEL_MIC (bsc#1227149).\n- wifi: ath11k: use select for CRYPTO_MICHAEL_MIC (bsc#1227149).\n- commit a869013\n\n- wifi: ath12k: Consolidate WMI peer flags (bsc#1227149).\n- wifi: ath11k: Consolidate WMI peer flags (bsc#1227149).\n- wifi: ath12k: Remove obsolete struct wmi_peer_flags_map\n  * peer_flags (bsc#1227149).\n- wifi: ath11k: Remove obsolete struct wmi_peer_flags_map\n  * peer_flags (bsc#1227149).\n- wifi: ath12k: Remove struct ath12k::ops (bsc#1227149).\n- wifi: ath11k: Remove struct ath11k::ops (bsc#1227149).\n- wifi: ath10k: Remove unused struct ath10k_htc_frame\n  (bsc#1227149).\n- wifi: ath10k: simplify __ath10k_htt_tx_txq_recalc()\n  (bsc#1227149).\n- wifi: ath11k: Remove unneeded semicolon (bsc#1227149).\n- wifi: ath10k: replace deprecated strncpy with memcpy\n  (bsc#1227149).\n- commit e59240f\n\n- wifi: ath12k: drop NULL pointer check in\n  ath12k_update_per_peer_tx_stats() (bsc#1227149).\n- Revert \u0026quot;wifi: ath11k: call ath11k_mac_fils_discovery() without\n  condition\u0026quot; (bsc#1227149).\n- wifi: ath12k: Introduce and use ath12k_sta_to_arsta()\n  (bsc#1227149).\n- wifi: ath12k: rename the sc naming convention to ab\n  (bsc#1227149).\n- wifi: ath12k: rename the wmi_sc naming convention to wmi_ab\n  (bsc#1227149).\n- commit f93677e\n\n- bus: mhi: host: allow MHI client drivers to provide the firmware\n  via a pointer (bsc#1227149).\n- commit 494649c\n\n- wifi: ath11k: add firmware-2.bin support (bsc#1227149).\n- Refresh patches.suse/wifi-ath11k-support-hibernation.patch.\n- commit 677d325\n\n- wifi: ath11k: qmi: refactor ath11k_qmi_m3_load() (bsc#1227149).\n- commit 296ac8f\n\n- wifi: ath11k: rename the sc naming convention to ab\n  (bsc#1227149).\n- Refresh patches.suse/wifi-ath11k-support-hibernation.patch.\n- Refresh\n  patches.suse/wifi-ath11k-thermal-don-t-try-to-register-multiple-t.patch.\n- commit 6eedd0d\n\n- wifi: ath11k: rename the wmi_sc naming convention to wmi_ab\n  (bsc#1227149).\n- wifi: ath6kl: replace deprecated strncpy with memcpy\n  (bsc#1227149).\n- commit cd59b03\n\n- wifi: ath5k: replace deprecated strncpy with strscpy\n  (bsc#1227149).\n- wifi: ath12k: Remove ath12k_base::bd_api (bsc#1227149).\n- wifi: ath11k: Remove ath11k_base::bd_api (bsc#1227149).\n- wifi: ath12k: Enable Mesh support for QCN9274 (bsc#1227149).\n- wifi: ath12k: register EHT mesh capabilities (bsc#1227149).\n- wifi: ath11k: Use device_get_match_data() (bsc#1227149).\n- wifi: ath11k: Introduce and use ath11k_sta_to_arsta()\n  (bsc#1227149).\n- wifi: ath11k: Remove unused struct ath11k_htc_frame\n  (bsc#1227149).\n- wifi: ath12k: fix invalid m3 buffer address (bsc#1227149).\n- wifi: ath12k: add ath12k_qmi_free_resource() for recovery\n  (bsc#1227149).\n- commit a18a8d4\n\n- wifi: ath12k: configure RDDM size to MHI for device recovery\n  (bsc#1227149).\n- wifi: ath12k: add parsing of phy bitmap for reg rules\n  (bsc#1227149).\n- wifi: ath11k: add parsing of phy bitmap for reg rules\n  (bsc#1227149).\n- wifi: ath11k: ath11k_debugfs_register(): fix format-truncation\n  warning (bsc#1227149).\n- wifi: ath12k: Consistently use ath12k_vif_to_arvif()\n  (bsc#1227149).\n- wifi: ath11k: call ath11k_mac_fils_discovery() without condition\n  (bsc#1227149).\n- wifi: ath12k: remove redundant memset() in\n  ath12k_hal_reo_qdesc_setup() (bsc#1227149).\n- wifi: ath9k_htc: fix format-truncation warning (bsc#1227149).\n- wifi: ath12k: fix debug messages (bsc#1227149).\n- wifi: ath11k: fix CAC running state during virtual interface\n  start (bsc#1227149).\n- commit c2f2e92\n\n- wifi: ath10k: simplify ath10k_peer_create() (bsc#1227149).\n- wifi: ath10k: indicate to mac80211 scan complete with aborted\n  flag for ATH10K_SCAN_STARTING state (bsc#1227149).\n- wifi: ath: dfs_pattern_detector: Use flex array to simplify code\n  (bsc#1227149).\n- wifi: carl9170: remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ath10k: consistently use kstrtoX_from_user() functions\n  (bsc#1227149).\n- wifi: ath12k: add keep backward compatibility of PHY mode to\n  avoid firmware crash (bsc#1227149).\n- wifi: ath12k: add read variant from SMBIOS for download board\n  data (bsc#1227149).\n- wifi: ath12k: do not drop data frames from unassociated stations\n  (bsc#1227149).\n- wifi: ath11k: mac: fix struct ieee80211_sband_iftype_data\n  handling (bsc#1227149).\n- wifi: ath11k: fix ath11k_mac_op_remain_on_channel() stack usage\n  (bsc#1227149).\n- commit b844022\n\n- wifi: ath12k: add msdu_end structure for WCN7850 (bsc#1227149).\n- wifi: ath12k: Set default beacon mode to burst mode\n  (bsc#1227149).\n- wifi: ath12k: call ath12k_mac_fils_discovery() without condition\n  (bsc#1227149).\n- wifi: ath11k: remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ath12k: enable IEEE80211_HW_SINGLE_SCAN_ON_ALL_BANDS\n  for WCN7850 (bsc#1227149).\n- wifi: ath12k: change to treat alpha code na as world wide\n  regdomain (bsc#1227149).\n- wifi: ath12k: indicate scan complete for scan canceled when\n  scan running (bsc#1227149).\n- wifi: ath12k: indicate to mac80211 scan complete with aborted\n  flag for ATH12K_SCAN_STARTING state (bsc#1227149).\n- wifi: ath12k: fix recovery fail while firmware crash when\n  doing channel switch (bsc#1227149).\n- wifi: ath12k: add support for hardware rfkill for WCN7850\n  (bsc#1227149).\n- commit 087627b\n\n- wifi: ath11k: use kstrtoul_from_user() where appropriate\n  (bsc#1227149).\n- wifi: ath11k: remove unused members of 'struct ath11k_base'\n  (bsc#1227149).\n- wifi: ath11k: drop redundant check in\n  ath11k_dp_rx_mon_dest_process() (bsc#1227149).\n- wifi: ath11k: drop NULL pointer check in\n  ath11k_update_per_peer_tx_stats() (bsc#1227149).\n- wifi: ath10k: drop HTT_DATA_TX_STATUS_DOWNLOAD_FAIL\n  (bsc#1227149).\n- wifi: ath10k: Annotate struct ath10k_ce_ring with __counted_by\n  (bsc#1227149).\n- wifi: wcn36xx: Annotate struct wcn36xx_hal_ind_msg with\n  __counted_by (bsc#1227149).\n- wifi: ath12k: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ath10k: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ath6kl: remove unnecessary (void*) conversions\n  (bsc#1227149).\n- commit 3f20dbc\n\n- wifi: ath5k: remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: wcn36xx: remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ar5523: Remove unnecessary (void*) conversions\n  (bsc#1227149).\n- wifi: ath9k: clean up function ath9k_hif_usb_resume\n  (bsc#1227149).\n- wifi: ath11k: add chip id board name while searching board-2.bin\n  for WCN6855 (bsc#1227149).\n- wifi: ath12k: change to initialize recovery variables earlier\n  in ath12k_core_reset() (bsc#1227149).\n- wifi: ath12k: enable 320 MHz bandwidth for 6 GHz band in EHT\n  PHY capability for WCN7850 (bsc#1227149).\n- wifi: ath9k: use u32 for txgain indexes (bsc#1227149).\n- wifi: ath9k: simplify ar9003_hw_process_ini() (bsc#1227149).\n- wifi: ath12k: fix radar detection in 160 MHz (bsc#1227149).\n- commit 0b35606\n\n- wifi: ath12k: fix WARN_ON during ath12k_mac_update_vif_chan\n  (bsc#1227149).\n- wifi: ath11k: fix tid bitmap is 0 in peer rx mu stats\n  (bsc#1227149).\n- wifi: ath11k: move references from rsvd2 to info fields\n  (bsc#1227149).\n- wifi: ath11k: mhi: add a warning message for MHI_CB_EE_RDDM\n  crash (bsc#1227149).\n- wifi: ath: Use is_multicast_ether_addr() to check multicast\n  Ether address (bsc#1227149).\n- wifi: ath12k: Remove unused declarations (bsc#1227149).\n- wifi: ath5k: ath5k_hw_get_median_noise_floor(): use swap()\n  (bsc#1227149).\n- wifi: ath: remove unused-but-set parameter (bsc#1227149).\n- wifi: ath11k: Remove unused declarations (bsc#1227149).\n- wifi: ath10k: fix Wvoid-pointer-to-enum-cast warning\n  (bsc#1227149).\n- commit 1f3c3b8\n\n- wifi: ath11k: fix Wvoid-pointer-to-enum-cast warning\n  (bsc#1227149).\n- wifi: ath11k: simplify the code with module_platform_driver\n  (bsc#1227149).\n- wifi: ath12k: Fix a few spelling errors (bsc#1227149).\n- wifi: ath11k: Fix a few spelling errors (bsc#1227149).\n- wifi: ath10k: Fix a few spelling errors (bsc#1227149).\n- wifi: ath11k: Consistently use ath11k_vif_to_arvif()\n  (bsc#1227149).\n- wifi: ath9k: Remove unused declarations (bsc#1227149).\n- wifi: ath9k: Remove unnecessary ternary operators (bsc#1227149).\n- wifi: ath9k: consistently use kstrtoX_from_user() functions\n  (bsc#1227149).\n- wifi: ath9k: fix parameter check in ath9k_init_debug()\n  (bsc#1227149).\n- commit 6c737fb\n\n- wifi: ath5k: Remove redundant dev_err() (bsc#1227149).\n- wifi: ath12k: avoid deadlock by change ieee80211_queue_work\n  for regd_update_work (bsc#1227149).\n- wifi: ath12k: add handler for scan event WMI_SCAN_EVENT_DEQUEUED\n  (bsc#1227149).\n- wifi: ath12k: relax list iteration in ath12k_mac_vif_unref()\n  (bsc#1227149).\n- wifi: ath12k: configure puncturing bitmap (bsc#1227149).\n- wifi: ath12k: parse WMI service ready ext2 event (bsc#1227149).\n- wifi: ath12k: add MLO header in peer association (bsc#1227149).\n- wifi: ath12k: peer assoc for 320 MHz (bsc#1227149).\n- wifi: ath12k: add WMI support for EHT peer (bsc#1227149).\n- wifi: ath12k: prepare EHT peer assoc parameters (bsc#1227149).\n- commit 3191784\n\n- wifi: ath12k: add EHT PHY modes (bsc#1227149).\n- wifi: ath12k: propagate EHT capabilities to userspace\n  (bsc#1227149).\n- wifi: ath12k: WMI support to process EHT capabilities\n  (bsc#1227149).\n- wifi: ath12k: move HE capabilities processing to a new function\n  (bsc#1227149).\n- commit 7fb64df\n\n- wifi: ath12k: rename HE capabilities setup/copy functions\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-cfg80211-annotate-iftype_data-pointer-with-spar.patch.\n- commit ddfeb0d\n\n- wifi: ath12k: change to use dynamic memory for channel list\n  of scan (bsc#1227149).\n- wifi: ath12k: trigger station disconnect on hardware restart\n  (bsc#1227149).\n- wifi: ath12k: Use pdev_id rather than mac_id to get pdev\n  (bsc#1227149).\n- wifi: ath12k: correct the data_type from QMI_OPT_FLAG to\n  QMI_UNSIGNED_1_BYTE for mlo_capable (bsc#1227149).\n- wifi: ath11k: Remove cal_done check during probe (bsc#1227149).\n- commit e204950\n\n- wifi: ath11k: simplify\n  ath11k_mac_validate_vht_he_fixed_rate_settings() (bsc#1227149).\n- wifi: ath6kl: Remove error checking for debugfs_create_dir()\n  (bsc#1227149).\n- wifi: ath5k: remove phydir check from ath5k_debug_init_device()\n  (bsc#1227149).\n- wifi: drivers: Explicitly include correct DT includes\n  (bsc#1227149).\n- wifi: ath10k: improve structure padding (bsc#1227149).\n- wifi: ath12k: fix conf_mutex in\n  ath12k_mac_op_unassign_vif_chanctx() (bsc#1227149).\n- wifi: ath11k: debug: add ATH11K_DBG_CE (bsc#1227149).\n- commit 3345b7e\n\n- wifi: ath11k: htc: cleanup debug messages (bsc#1227149).\n- wifi: ath11k: don't use %pK (bsc#1227149).\n- wifi: ath11k: hal: cleanup debug message (bsc#1227149).\n- wifi: ath11k: debug: use all upper case in ATH11k_DBG_HAL\n  (bsc#1227149).\n- wifi: ath11k: dp: cleanup debug message (bsc#1227149).\n- wifi: ath11k: pci: cleanup debug logging (bsc#1227149).\n- wifi: ath11k: wmi: add unified command debug messages\n  (bsc#1227149).\n- wifi: ath11k: wmi: use common error handling style\n  (bsc#1227149).\n- wifi: ath11k: wmi: cleanup error handling in\n  ath11k_wmi_send_init_country_cmd() (bsc#1227149).\n- wifi: ath11k: remove unsupported event handlers (bsc#1227149).\n- commit 37105bd\n\n- wifi: ath11k: add WMI event debug messages (bsc#1227149).\n- Refresh\n  patches.suse/wifi-ath11k-fix-gtk-offload-status-event-locking.patch.\n- Refresh\n  patches.suse/wifi-ath11k-fix-temperature-event-locking.patch.\n- commit 572fd2c\n\n- wifi: ath11k: remove manual mask names from debug messages\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-ath11k-fix-gtk-offload-status-event-locking.patch.\n- commit a7ae7bf\n\n- wifi: ath11k: print debug level in debug messages (bsc#1227149).\n- wifi: ath11k: debug: remove unused ATH11K_DBG_ANY (bsc#1227149).\n- wifi: ath12k: delete the timer rx_replenish_retry during rmmod\n  (bsc#1227149).\n- wifi: ath12k: Use msdu_end to check MCBC (bsc#1227149).\n- wifi: ath12k: check hardware major version for WCN7850\n  (bsc#1227149).\n- wifi: ath11k: update proper pdev/vdev id for testmode command\n  (bsc#1227149).\n- wifi: atk10k: Don't opencode ath10k_pci_priv() in\n  ath10k_ahb_priv() (bsc#1227149).\n- wifi: ath10k: Convert to platform remove callback returning void\n  (bsc#1227149).\n- commit cafd8ed\n\n- wifi: ath10k: Drop checks that are always false (bsc#1227149).\n- wifi: ath10k: Drop cleaning of driver data from probe error\n  path and remove (bsc#1227149).\n- wifi: ath11k: Add HTT stats for PHY reset case (bsc#1227149).\n- commit dde2040\n\n- wifi: ath11k: Allow ath11k to boot without caldata in ftm mode\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-ath11k-do-not-dump-SRNG-statistics-during-resum.patch.\n- commit adbddfc\n\n- wifi: ath11k: factory test mode support (bsc#1227149).\n- Refresh\n  patches.suse/wifi-ath11k-fix-warning-on-DMA-ring-capabilities-eve.patch.\n- Refresh\n  patches.suse/wifi-ath11k-rearrange-IRQ-enable-disable-in-reset-pa.patch.\n- Refresh patches.suse/wifi-ath11k-support-hibernation.patch.\n- commit 030f59a\n\n- wifi: ath11k: remove unused function ath11k_tm_event_wmi()\n  (bsc#1227149).\n- wifi: ath12k: Add support to parse new WMI event for 6 GHz\n  regulatory (bsc#1227149).\n- wifi: wil6210: wmi: Replace zero-length array with\n  DECLARE_FLEX_ARRAY() helper (bsc#1227149).\n- wifi: wil6210: fw: Replace zero-length arrays with\n  DECLARE_FLEX_ARRAY() helper (bsc#1227149).\n- wifi: ath11k: Send HT fixed rate in WMI peer fixed param\n  (bsc#1227149).\n- wifi: ath11k: Relocate the func\n  ath11k_mac_bitrate_mask_num_ht_rates() and change hweight16\n  to hweight8 (bsc#1227149).\n- wifi: ath12k: increase vdev setup timeout (bsc#1227149).\n- wifi: ath11k: EMA beacon support (bsc#1227149).\n- wifi: ath11k: MBSSID beacon support (bsc#1227149).\n- wifi: ath11k: refactor vif parameter configurations\n  (bsc#1227149).\n- wifi: ath11k: MBSSID parameter configuration in AP mode\n  (bsc#1227149).\n- wifi: ath11k: rename MBSSID fields in wmi_vdev_up_cmd\n  (bsc#1227149).\n- wifi: ath11k: MBSSID configuration during vdev create/start\n  (bsc#1227149).\n- wifi: ath11k: driver settings for MBSSID and EMA (bsc#1227149).\n- wifi: ath: work around false-positive stringop-overread warning\n  (bsc#1227149).\n- wifi: ath11k: Use list_count_nodes() (bsc#1227149).\n- wifi: ath10k: Use list_count_nodes() (bsc#1227149).\n- wifi: ath12k: fix potential wmi_mgmt_tx_queue race condition\n  (bsc#1227149).\n- wifi: ath12k: add wait operation for tx management packets\n  for flush from mac80211 (bsc#1227149).\n- wifi: ath12k: Remove some dead code (bsc#1227149).\n- wifi: ath12k: send WMI_PEER_REORDER_QUEUE_SETUP_CMDID when\n  ADDBA session starts (bsc#1227149).\n- wifi: ath12k: set PERST pin no pull request for WCN7850\n  (bsc#1227149).\n- wifi: ath12k: add qmi_cnss_feature_bitmap field to hardware\n  parameters (bsc#1227149).\n- wifi: ath10/11/12k: Use alloc_ordered_workqueue() to create\n  ordered workqueues (bsc#1227149).\n- commit 1763ceb\n\n- net: phy: microchip: lan87xx: reinit PHY after cable test\n  (git-fixes).\n- i2c: pnx: Fix potential deadlock warning from del_timer_sync()\n  call in isr (git-fixes).\n- drm/amdgpu/atomfirmware: silence UBSAN warning (stable-fixes).\n- drm: panel-orientation-quirks: Add quirk for Valve Galileo\n  (stable-fixes).\n- nilfs2: add missing check for inode numbers on directory entries\n  (stable-fixes).\n- nilfs2: fix inode number range checks (stable-fixes).\n- drm/amdgpu: silence UBSAN warning (stable-fixes).\n- spi: cadence: Ensure data lines set to low during dummy-cycle\n  period (stable-fixes).\n- regmap-i2c: Subtract reg size from max_write (stable-fixes).\n- platform/x86: touchscreen_dmi: Add info for the EZpad 6s Pro\n  (stable-fixes).\n- platform/x86: touchscreen_dmi: Add info for GlobalSpace SolT\n  IVW 11.6\u0026quot; tablet (stable-fixes).\n- nfc/nci: Add the inconsistency check between the input data\n  length and count (stable-fixes).\n- Input: ff-core - prefer struct_size over open coded arithmetic\n  (stable-fixes).\n- cdrom: rearrange last_media_change check to avoid unintentional\n  overflow (stable-fixes).\n- serial: imx: Raise TX trigger level to 8 (stable-fixes).\n- usb: xhci: prevent potential failure in handle_tx_event()\n  for Transfer events without TRB (stable-fixes).\n- thermal/drivers/mediatek/lvts_thermal: Check NULL ptr on\n  lvts_data (stable-fixes).\n- firmware: dmi: Stop decoding on broken entry (stable-fixes).\n- i2c: i801: Annotate apanel_addr as __ro_after_init\n  (stable-fixes).\n- media: dvb-frontends: tda10048: Fix integer overflow\n  (stable-fixes).\n- media: s2255: Use refcount_t instead of atomic_t for\n  num_channels (stable-fixes).\n- media: dvb-frontends: tda18271c2dd: Remove casting during div\n  (stable-fixes).\n- media: dw2102: fix a potential buffer overflow (git-fixes).\n- media: dw2102: Don't translate i2c read into write\n  (stable-fixes).\n- media: dvb-usb: dib0700_devices: Add missing release_firmware()\n  (stable-fixes).\n- media: dvb: as102-fe: Fix as10x_register_addr packing\n  (stable-fixes).\n- drm/amdgpu: fix the warning about the expression (int)size -\n  len (stable-fixes).\n- drm/amdgpu: fix uninitialized scalar variable warning\n  (stable-fixes).\n- drm/amd/display: Fix uninitialized variables in DM\n  (stable-fixes).\n- drm/amd/display: Skip finding free audio for unknown engine_id\n  (stable-fixes).\n- drm/amd/display: Check pipe offset before setting vblank\n  (stable-fixes).\n- drm/amd/display: Check index msg_id before read or write\n  (stable-fixes).\n- drm/amdgpu: Initialize timestamp for some legacy SOCs\n  (stable-fixes).\n- drm/amdgpu: Using uninitialized value *size when calling\n  amdgpu_vce_cs_reloc (stable-fixes).\n- drm/amdgpu: Fix uninitialized variable warnings (stable-fixes).\n- drm/lima: fix shared irq handling on driver remove\n  (stable-fixes).\n- wifi: mt76: mt7996: add sanity checks for background radar\n  trigger (stable-fixes).\n- wifi: mt76: replace skb_put with skb_put_zero (stable-fixes).\n- crypto: aead,cipher - zeroize key buffer after use\n  (stable-fixes).\n- crypto: hisilicon/debugfs - Fix debugfs uninit process issue\n  (stable-fixes).\n- commit 240e65e\n\n- Refresh patches.kabi/wireless-kabi-workaround.patch (bsc#1227149)\n  More fixes for 6.9 API updates\n- commit 25eb11c\n\n- wifi: iwlwifi: mvm: fix ROC version check (bsc#1227149).\n- wifi: iwlwifi: mvm: fix a crash on 7265 (bsc#1227149).\n- wifi: iwlwifi: Use request_module_nowait (bsc#1227149).\n- wifi: iwlwifi: mvm: don't always disable EMLSR due to BT coex\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: calculate EMLSR mode after connection\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: introduce esr_disable_reason (bsc#1227149).\n- wifi: iwlwifi: mvm: Do not warn on invalid link on scan complete\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: support iwl_dev_tx_power_cmd_v8\n  (bsc#1227149).\n- commit 74beb0b\n\n- net: mana: Fix possible double free in error handling path\n  (git-fixes).\n- RDMA/mana_ib: Ignore optional access flags for MRs (git-fixes).\n- net: mana: Fix the extra HZ in mana_hwc_send_request\n  (git-fixes).\n- commit cb4a2bd\n\n- wifi: iwlwifi: mvm: fix link ID management (bsc#1227149).\n- Revert \u0026quot;wifi: iwlwifi: bump FW API to 90 for BZ/SC devices\u0026quot;\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: handle debugfs names more carefully\n  (bsc#1227149).\n- commit 1b2b558\n\n- wifi: iwlwifi: mvm: Configure the link mapping for non-MLD FW\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: consider having one active link\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: pick the version of SESSION_PROTECTION_NOTIF\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: disable MLO for the time being\n  (bsc#1227149).\n- wifi: cfg80211: add a flag to disable wireless extensions\n  (bsc#1227149).\n- iwlwifi: mvm: Use for_each_thermal_trip() for walking trip\n  points (bsc#1227149).\n- iwlwifi: mvm: Populate trip table before registering thermal\n  zone (bsc#1227149).\n- iwlwifi: mvm: Drop unused fw_trips_index[] from\n  iwl_mvm_thermal_device (bsc#1227149).\n- commit 53ce28e\n\n- wifi: mac80211: add link id to ieee80211_gtk_rekey_add()\n  (bsc#1227149).\n- wifi: iwlwifi: load b0 version of ucode for HR1/HR2\n  (bsc#1227149).\n- wifi: iwlwifi: handle per-phy statistics from fw (bsc#1227149).\n- wifi: iwlwifi: iwl-fh.h: fix kernel-doc issues (bsc#1227149).\n- wifi: iwlwifi: api: fix kernel-doc reference (bsc#1227149).\n- wifi: iwlwifi: mvm: unlock mvm if there is no primary link\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: partially support PHY context version 6\n  (bsc#1227149).\n- commit 590b6b6\n\n- wifi: iwlwifi: cancel session protection only if there is one\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: remove IWL_MVM_STATUS_NEED_FLUSH_P2P\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: check own capabilities for EMLSR\n  (bsc#1227149).\n- wifi: iwlwifi: iwl-trans.h: clean up kernel-doc (bsc#1227149).\n- wifi: iwlwifi: fw: file: clean up kernel-doc (bsc#1227149).\n- wifi: iwlwifi: api: dbg-tlv: fix up kernel-doc (bsc#1227149).\n- wifi: iwlwifi: error-dump: fix kernel-doc issues (bsc#1227149).\n- commit b9417e2\n\n- wifi: iwlwifi: mvm: fix thermal kernel-doc (bsc#1227149).\n- wifi: iwlwifi: don't use TRUE/FALSE with bool (bsc#1227149).\n- wifi: iwlwifi: api: fix constant version to match FW\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Extend support for P2P service discovery\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: work around A-MSDU size problem\n  (bsc#1227149).\n- wifi: iwlwifi: nvm: parse the VLP/AFC bit from regulatory\n  (bsc#1227149).\n- wifi: iwlwifi: iwlmvm: handle unprotected deauth/disassoc in d3\n  (bsc#1227149).\n- wifi: iwlwifi: fix #ifdef CONFIG_ACPI check (bsc#1227149).\n- wifi: iwlwifi: queue: improve warning for no skb in reclaim\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: move BA notif messages before action\n  (bsc#1227149).\n- commit da274a5\n\n- wifi: cfg80211: report unprotected deauth/disassoc in wowlan\n  (bsc#1227149).\n- Refresh patches.kabi/wireless-kabi-workaround.patch.\n- commit 8a7655b\n\n- wifi: nl80211: allow reporting wakeup for unprot deauth/disassoc\n  (bsc#1227149).\n- Refresh patches.kabi/wireless-kabi-workaround.patch.\n- commit e91caa5\n\n- wifi: cfg80211: rename UHB to 6 GHz (bsc#1227149).\n- Refresh patches.kabi/wireless-kabi-workaround.patch.\n- commit 72d3017\n\n- wifi: iwlwifi: mvm: show skb_mac_gso_segment() failure reason\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: remove flags for enable/disable beacon\n  filter (bsc#1227149).\n- wifi: iwlwifi: pcie: Add new PCI device id and CNVI\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: don't send the smart fifo command if not\n  needed (bsc#1227149).\n- wifi: iwlwifi: fw: allow vmalloc for PNVM image (bsc#1227149).\n- wifi: iwlwifi: mvm: don't do duplicate detection for nullfunc\n  packets (bsc#1227149).\n- wifi: iwlwifi: mvm: avoid garbage iPN (bsc#1227149).\n- wifi: iwlwifi: mvm: always update keys in D3 exit (bsc#1227149).\n- wifi: iwlwifi: mvm: limit pseudo-D3 to 60 seconds (bsc#1227149).\n- wifi: iwlwifi: mvm: combine condition/warning (bsc#1227149).\n- commit 9013bb7\n\n- wifi: iwlwifi: mvm: fix the key PN index (bsc#1227149).\n- wifi: iwlwifi: mvm: Keep connection in case of missed beacons\n  during RX (bsc#1227149).\n- wifi: iwlwifi: properly check if link is active (bsc#1227149).\n- wifi: iwlwifi: take SGOM and UATS code out of ACPI ifdef\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: don't abort queue sync in CT-kill\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: define RX queue sync timeout as a macro\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: expand queue sync warning messages\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Declare support for secure LTF measurement\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: advertise support for protected ranging\n  negotiation (bsc#1227149).\n- wifi: iwlwifi: mvm: remove one queue sync on BA session stop\n  (bsc#1227149).\n- commit d32b4ac\n\n- wifi: iwlwifi: mvm: don't support reduced tx power on ack for\n  new devices (bsc#1227149).\n- wifi: iwlwifi: use system_unbound_wq for debug dump\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: remove EHT code from mac80211.c\n  (bsc#1227149).\n- wifi: iwlwifi: read mac step from aux register (bsc#1227149).\n- wifi: iwlwifi: adjust rx_phyinfo debugfs to MLO (bsc#1227149).\n- wifi: iwlwifi: mvm: const-ify chandef pointers (bsc#1227149).\n- wifi: iwlwifi: Add support for PPAG cmd v5 and PPAG revision 3\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: don't allow hw-rfkill to stop device on\n  gen2 (bsc#1227149).\n- wifi: iwlwifi: add HONOR to PPAG approved list (bsc#1227149).\n- commit 6501846\n\n- wifi: mac80211: update beacon counters per link basis\n  (bsc#1227149).\n- wifi: iwlwifi: return negative -EINVAL instead of positive\n  EINVAL (bsc#1227149).\n- wifi: iwlwifi: fw: fix compiler warning for NULL string print\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: make functions public (bsc#1227149).\n- wifi: iwlwifi: bump FW API to 88 for AX/BZ/SC devices\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: don't send BT_COEX_CI command on new devices\n  (bsc#1227149).\n- wifi: iwlwifi: read DSM functions from UEFI (bsc#1227149).\n- commit 4b3d0a2\n\n- wifi: iwlwifi: prepare for reading DSM from UEFI (bsc#1227149).\n- wifi: iwlwifi: simplify getting DSM from ACPI (bsc#1227149).\n- wifi: iwlwifi: take send-DSM-to-FW flows out of ACPI ifdef\n  (bsc#1227149).\n- wifi: iwlwifi: rfi: use a single DSM function for all RFI\n  configurations (bsc#1227149).\n- wifi: iwlwifi: read ECKV table from UEFI (bsc#1227149).\n- wifi: iwlwifi: read WRDD table from UEFI (bsc#1227149).\n- wifi: iwlwifi: support link command version 2 (bsc#1227149).\n- wifi: iwlwifi: mvm: use fast balance scan in case of an active\n  P2P GO (bsc#1227149).\n- wifi: iwlwifi: mvm: don't send NDPs for new tx devices\n  (bsc#1227149).\n- wifi: iwlwifi: read SPLC from UEFI (bsc#1227149).\n- commit 10d0457\n\n- wifi: iwlwifi: prepare for reading SPLC from UEFI (bsc#1227149).\n- wifi: iwlwifi: api: clean up some kernel-doc/typos\n  (bsc#1227149).\n- wifi: iwlwifi: remove unused function prototype (bsc#1227149).\n- iwlwifi: fw: fix more kernel-doc warnings (bsc#1227149).\n- wifi: iwlwifi: read WTAS table from UEFI (bsc#1227149).\n- commit edb7009\n\n- wifi: iwlwifi: separate TAS 'read-from-BIOS' and 'send-to-FW'\n  flows (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-fix-warnings-from-dmi_get_system_in.patch.\n- commit cbe5734\n\n- wifi: iwlwifi: prepare for reading TAS table from UEFI\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-fix-warnings-from-dmi_get_system_in.patch.\n- commit 37ff9f0\n\n- wifi: iwlwifi: don't check TAS block list size twice\n  (bsc#1227149).\n- wifi: iwlwifi: read PPAG table from UEFI (bsc#1227149).\n- wifi: iwlwifi: validate PPAG table when sent to FW\n  (bsc#1227149).\n- commit aab6534\n\n- wifi: iwlwifi: prepare for reading PPAG table from UEFI\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-fw-fix-compile-w-o-CONFIG_ACPI.patch.\n- commit b317fc2\n\n- wifi: iwlwifi: small cleanups in PPAG table flows (bsc#1227149).\n- wifi: iwlwifi: read SAR tables from UEFI (bsc#1227149).\n- wifi: iwlwifi: cleanup sending PER_CHAIN_LIMIT_OFFSET_CMD\n  (bsc#1227149).\n- wifi: iwlwifi: prepare for reading SAR tables from UEFI\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: check AP supports EMLSR (bsc#1227149).\n- wifi: iwlwifi: mvm: d3: implement suspend with MLO\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: refactor duplicate chanctx condition\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: log dropped packets due to MIC error\n  (bsc#1227149).\n- commit ab26861\n\n- wifi: iwlwifi: mvm: support SPP A-MSDUs (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-don-t-set-the-MFP-flag-for-the-GTK.patch.\n- commit d834590\n\n- wifi: mac80211: add support for SPP A-MSDUs (bsc#1227149).\n- commit 265cdf6\n\n- wifi: cfg80211: add support for SPP A-MSDUs (bsc#1227149).\n- Refresh patches.kabi/wireless-kabi-workaround.patch.\n- commit f498490\n\n- wifi: iwlwifi: implement GLAI ACPI table loading (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-fw-fix-compile-w-o-CONFIG_ACPI.patch.\n- commit 85303bc\n\n- wifi: iwlwifi: remove Gl A-step remnants (bsc#1227149).\n- wifi: iwlwifi: mvm: Fix FTM initiator flags (bsc#1227149).\n- wifi: iwlwifi: always have 'uats_enabled' (bsc#1227149).\n- wifi: iwlwifi: mvm: don't set trigger frame padding in AP mode\n  (bsc#1227149).\n- wifi: iwlwifi: Fix spelling mistake \u0026quot;SESION\u0026quot; -\u0026gt; \u0026quot;SESSION\u0026quot;\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: add support for TID to link mapping neg\n  request (bsc#1227149).\n- wifi: iwlwifi: cleanup uefi variables loading (bsc#1227149).\n- wifi: iwlwifi: mvm: disconnect station vifs if recovery failed\n  (bsc#1227149).\n- wifi: iwlwifi: fw: dbg: ensure correct config name sizes\n  (bsc#1227149).\n- commit ff842c3\n\n- wifi: ieee80211: add definitions for negotiated TID to Link map\n  (bsc#1227149).\n- commit b1d66f3\n\n- wifi: mac80211: process and save negotiated TID to Link mapping\n  request (bsc#1227149).\n- Refresh patches.kabi/wireless-kabi-workaround.patch.\n- commit 32a5092\n\n- wifi: cfg80211: add RNR with reporting AP information\n  (bsc#1227149).\n- commit 8fede1e\n\n- wifi: iwlwifi: implement can_activate_links callback\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-fix-active-link-counting-during-rec.patch.\n- commit 7e399ce\n\n- wifi: iwlwifi: remove retry loops in start (bsc#1227149).\n- commit 3c4f0f3\n\n- wifi: iwlwifi: dbg-tlv: use struct_size() for allocation\n  (bsc#1227149).\n- wifi: iwlwifi: dbg-tlv: avoid extra allocation/copy\n  (bsc#1227149).\n- wifi: iwlwifi: fix some kernel-doc issues (bsc#1227149).\n- wifi: iwlwifi: mvm: d3: disconnect on GTK rekey failure\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Add support for removing responder TKs\n  (bsc#1227149).\n- wifi: iwlwifi: disable eSR when BT is active (bsc#1227149).\n- wifi: iwlwifi: add support for a wiphy_work rx handler\n  (bsc#1227149).\n- wifi: iwlwifi: bump FW API to 87 for AX/BZ/SC devices\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: introduce PHY_CONTEXT_CMD_API_VER_5\n  (bsc#1227149).\n- wifi: iwlwifi: skip affinity setting on non-SMP (bsc#1227149).\n- wifi: iwlwifi: nvm-parse: advertise common packet padding\n  (bsc#1227149).\n- wifi: iwlwifi: change link id in time event to s8 (bsc#1227149).\n- wifi: iwlwifi: mvm: limit EHT 320 MHz MCS for STEP URM\n  (bsc#1227149).\n- wifi: iwlwifi: disable 160 MHz based on subsystem device ID\n  (bsc#1227149).\n- wifi: iwlwifi: make TB reallocation a debug message\n  (bsc#1227149).\n- wifi: iwlwifi: Add support for new 802.11be device\n  (bsc#1227149).\n- commit 6617b64\n\n- pmdomain: imx8mp-blk-ctrl: imx8mp_blk: Add fdcc clock to\n  hdmimix domain (CVE-2024-35942 bsc#1224589).\n- commit cf74548\n\n- platform/x86: toshiba_acpi: Fix array out-of-bounds access\n  (git-fixes).\n- ACPI: processor_idle: Fix invalid comparison with insertion\n  sort for latency (git-fixes).\n- commit ec2c4bc\n\n- KVM: SEV-ES: Delegate LBR virtualization to the processor\n  (git-fixes).\n- commit ca0a7e8\n\n- KVM: x86: Always sync PIR to IRR prior to scanning I/O APIC\n  routes (git-fixes).\n- commit 6653b01\n\n- KVM: SEV-ES: Disallow SEV-ES guests when X86_FEATURE_LBRV is\n  absent (git-fixes).\n- commit 1094992\n\n- KVM: SVM: WARN on vNMI + NMI window iff NMIs are outright masked\n  (git-fixes).\n- commit 2cc4a9c\n\n- drivers/xen: Improve the late XenStore init protocol\n  (git-fixes).\n- commit cb805fb\n\n- xen/x86: add extra pages to unpopulated-alloc if available\n  (git-fixes).\n- commit d9de7d9\n\n- kunit: Fix checksum tests on big endian CPUs (git-fixed).\n- commit 91a58a6\n\n- KVM: arm64: Fix circular locking dependency (bsc#1222463 CVE-2024-26691).\n- commit 3273efe\n\n- Drivers: hv: vmbus: Don't free ring buffers that couldn't be re-encrypted (bsc#1225744, CVE-2024-36909).\n- uio_hv_generic: Don't free decrypted memory (bsc#1225717, CVE-2024-36910).\n- hv_netvsc: Don't free decrypted memory (bsc#1225745, CVE-2024-36911).\n- Drivers: hv: vmbus: Track decrypted status in vmbus_gpadl (bsc#1225752, CVE-2024-36912).\n- Drivers: hv: vmbus: Leak pages if set_memory_encrypted() fails (bsc#1225753, CVE-2024-36913).\n- commit a78a9db\n\n- x86/speculation, objtool: Use absolute relocations for annotations (git-fixes).\n- commit 14e0989\n\n- x86/head/64: Move the __head definition to \u0026lt;asm/init.h\u0026gt; (git-fixes).\n- commit 36d1750\n\n- x86/csum: Remove unnecessary odd handling (git-fixes).\n- commit 439ef62\n\n- x86/csum: Fix clang -Wuninitialized in csum_partial() (git-fixes).\n- commit 98db437\n\n- x86/csum: Improve performance of `csum_partial` (git-fixes).\n- commit 131cca3\n\n- x86/boot: Ignore NMIs during very early boot (git-fixes).\n- commit 3c94948\n\n- x86/asm: Fix build of UML with KASAN (git-fixes).\n- commit 89fc5d7\n\n- blacklist.conf: Blacklist useless revert\n- commit 0a21e69\n\n- tunnels: fix out of bounds access when building IPv6 PMTU error (bsc#1222328 CVE-2024-26665).\n- commit f28b881\n\n- SUNRPC: avoid soft lockup when transmitting UDP to reachable\n  server (bsc#1225272).\n- commit 3fc313b\n\n- Move upstreamed turbostat patch into sorted section\n- commit 768422e\n\n- Move out-of-tree patch to the right section\n- commit a3dba46\n\n- powerpc/pseries: Fix scv instruction crash with kexec\n  (bsc#1194869).\n- commit 245b529\n\n- powerpc/prom: Add CPU info to hardware description string later\n  (bsc#1215199).\n- commit 75358e1\n\n- kernel-binary: vdso: Own module_dir\n- commit ff69986\n\n- enic: Validate length of nl attributes in enic_set_vf_port\n  (CVE-2024-38659 bsc#1226883).\n- commit 82dab70\n\n- wifi: wilc1000: fix ies_len type in connect path (git-fixes).\n- commit 857b40a\n\n- net/dcb: check for detached device before executing callbacks\n  (bsc#1215587).\n- commit c563440\n\n- Update patches.suse/atm-Fix-Use-After-Free-in-do_vcc_ioctl.patch\n  (git-fixes bsc#1218730 CVE-2023-51780).\n- commit 93588a3\n\n- powerpc/64s/radix/kfence: map __kfence_pool at page granularity\n  (bsc#1223570 ltc#205770).\n- commit d4edfeb\n\n- crypto/ecdsa: make ecdsa_ecc_ctx_deinit() to zeroize the public\n  key (bsc#1222768).\n- commit 817f8be\n\n- crypto/ecdh: make ecdh_compute_value() to zeroize the public\n  key (bsc#1222768).\n- commit 3f5391b\n\n- PCI: Do not wait for disconnected devices when resuming\n  (git-fixes).\n- commit f7f9960\n\n- powerpc/rtas: Prevent Spectre v1 gadget construction in\n  sys_rtas() (bsc#1227487).\n- commit 42da489\n\n- Enable CONFIG_SCHED_CLUSTER=y on arm64 (jsc#PED-8701).\n- commit 9157a3d\n\n- clk: qcom: clk-alpha-pll: set ALPHA_EN bit for Stromer Plus PLLs\n  (git-fixes).\n- clk: qcom: gcc-sm6350: Fix gpll6* \u0026amp; gpll7 parents (git-fixes).\n- clk: mediatek: mt8183: Only enable runtime PM on mt8183-mfgcfg\n  (git-fixes).\n- commit 1a2b239\n\n- nfs: drop the incorrect assertion in nfs_swap_rw() (git-fixes).\n- NFS: add barriers when testing for NFS_FSDATA_BLOCKED\n  (git-fixes).\n- SUNRPC: return proper error from gss_wrap_req_priv (git-fixes).\n- NFSv4.1 enforce rootpath check in fs_location query (git-fixes).\n- SUNRPC: Fix loop termination condition in\n  gss_free_in_token_pages() (git-fixes).\n- nfs: fix undefined behavior in nfs_block_bits() (git-fixes).\n- pNFS/filelayout: fixup pNfs allocation modes (git-fixes).\n- rpcrdma: fix handling for RDMA_CM_EVENT_DEVICE_REMOVAL\n  (git-fixes).\n- NFS: Fix READ_PLUS when server doesn't support OP_READ_PLUS\n  (git-fixes).\n- sunrpc: fix NFSACL RPC retry on soft mount (git-fixes).\n- nfs: keep server info for remounts (git-fixes).\n- NFSv4: Fixup smatch warning for ambiguous return (git-fixes).\n- SUNRPC: Fix gss_free_in_token_pages() (git-fixes).\n- knfsd: LOOKUP can return an illegal error value (git-fixes).\n- nfs: Handle error of rpc_proc_register() in nfs_net_init()\n  (git-fixes).\n- nfsd: hold a lighter-weight client reference over CB_RECALL_ANY\n  (git-fixes).\n- NFSD: Fix checksum mismatches in the duplicate reply cache\n  (git-fixes).\n- commit e019385\n\n- Update\n  patches.suse/ALSA-hda-intel-sdw-acpi-fix-usage-of-device_get_name.patch\n  (git-fixes CVE-2024-36955 bsc#1225810).\n- Update\n  patches.suse/ASoC-SOF-ipc4-topology-Fix-input-format-query-of-pro.patch\n  (git-fixes CVE-2024-39473 bsc#1227433).\n- Update\n  patches.suse/Bluetooth-qca-fix-firmware-check-error-path.patch\n  (git-fixes CVE-2024-36942 bsc#1225843).\n- Update\n  patches.suse/Reapply-drm-qxl-simplify-qxl_fence_wait.patch\n  (stable-fixes CVE-2024-36944 bsc#1225847).\n- Update\n  patches.suse/amd-amdkfd-sync-all-devices-to-wait-all-processes-be.patch\n  (stable-fixes CVE-2024-36949 bsc#1225894).\n- Update\n  patches.suse/drm-amdkfd-range-check-cp-bad-op-exception-interrupt.patch\n  (stable-fixes CVE-2024-36951 bsc#1225896).\n- Update patches.suse/drm-i915-hwmon-Get-rid-of-devm.patch\n  (stable-fixes CVE-2024-39479 bsc#1227443).\n- Update\n  patches.suse/fbdev-savage-Handle-err-return-when-savagefb_check_v.patch\n  (git-fixes CVE-2024-39475 bsc#1227435).\n- Update\n  patches.suse/firewire-ohci-mask-bus-reset-interrupts-between-ISR-.patch\n  (stable-fixes CVE-2024-36950 bsc#1225895).\n- Update\n  patches.suse/media-mc-Fix-graph-walk-in-media_pipeline_start.patch\n  (git-fixes CVE-2024-39481 bsc#1227446).\n- Update\n  patches.suse/pinctrl-core-delete-incorrect-free-in-pinctrl_enable.patch\n  (git-fixes CVE-2024-36940 bsc#1225840).\n- Update\n  patches.suse/pinctrl-devicetree-fix-refcount-leak-in-pinctrl_dt_t.patch\n  (git-fixes CVE-2024-36959 bsc#1225839).\n- Update patches.suse/qibfs-fix-dentry-leak.patch (git-fixes\n  CVE-2024-36947 bsc#1225856).\n- Update\n  patches.suse/spi-fix-null-pointer-dereference-within-spi_sync.patch\n  (git-fixes CVE-2024-36930 bsc#1225830).\n- Update\n  patches.suse/wifi-iwlwifi-read-txq-read_ptr-under-lock.patch\n  (stable-fixes CVE-2024-36922 bsc#1225805).\n- Update\n  patches.suse/wifi-nl80211-don-t-free-NULL-coalescing-rule.patch\n  (git-fixes CVE-2024-36941 bsc#1225835).\n- commit ffdc766\n\n- Update\n  patches.suse/crypto-rsa-add-a-check-for-allocation-failure.patch\n  (bsc#1222775 CVE-2023-52472 bsc#1220430 bsc#1220427).\n- commit 7754b95\n\n- drm/fbdev-generic: Fix framebuffer on big endian devices\n  (git-fixes).\n- drm/nouveau: fix null pointer dereference in\n  nouveau_connector_get_modes (git-fixes).\n- usb: dwc3: core: Workaround for CSR read timeout (stable-fixes).\n- usb: gadget: printer: SS+ support (stable-fixes).\n- drm/amdgpu: avoid using null object of framebuffer\n  (stable-fixes).\n- drm/amd/display: Send DP_TOTAL_LTTPR_CNT during detection if\n  LTTPR is present (stable-fixes).\n- drm/amdgpu/atomfirmware: fix parsing of vram_info\n  (stable-fixes).\n- drm/nouveau/dispnv04: fix null pointer dereference in\n  nv17_tv_get_ld_modes (stable-fixes).\n- drm/nouveau/dispnv04: fix null pointer dereference in\n  nv17_tv_get_hd_modes (stable-fixes).\n- ALSA: hda/realtek: fix mute/micmute LEDs don't work for\n  EliteBook 645/665 G11 (stable-fixes).\n- usb: typec: ucsi: Ack also failed Get Error commands\n  (git-fixes).\n- iio: pressure: bmp280: Fix BMP580 temperature reading\n  (stable-fixes).\n- usb: typec: ucsi: Never send a lone connector change ack\n  (stable-fixes).\n- mtd: partitions: redboot: Added conversion of operands to a\n  larger type (stable-fixes).\n- media: dvbdev: Initialize sbuf (stable-fixes).\n- ALSA: emux: improve patch ioctl data validation (stable-fixes).\n- drm/radeon/radeon_display: Decrease the size of allocated memory\n  (stable-fixes).\n- drm/panel: ilitek-ili9881c: Fix warning with GPIO controllers\n  that sleep (stable-fixes).\n- wifi: ieee80211: check for NULL in ieee80211_mle_size_ok()\n  (stable-fixes).\n- crypto: ecdh - explicitly zeroize private_key (stable-fixes).\n- soc: ti: wkup_m3_ipc: Send NULL dummy message instead of\n  pointer message (stable-fixes).\n- usb: dwc3: core: Add DWC31 version 2.00a controller\n  (stable-fixes).\n- iio: pressure: fix some word spelling errors (stable-fixes).\n- commit 42cf83f\n\n- Drop amd-pstate patch that caused a regression on 6.6.x stable\n- commit d3672a6\n\n- RDMA/restrack: Fix potential invalid address access (git-fixes)\n- commit 91e323d\n\n- smb: client: fix use-after-free in smb2_query_info_compound()\n  (bsc#1225489, CVE-2023-52751).\n- Refresh\n  patches.suse/smb-client-fix-potential-OOBs-in-smb2_parse_contexts-.patch.\n- commit fed05d1\n\n- smb: client: prevent new fids from being removed by laundromat\n  (git-fixes, bsc#1225172).\n- commit b3d54ea\n\n- smb: client: make laundromat a delayed worker (git-fixes,\n  bsc#1225172).\n- commit 97932f6\n\n- smb3: allow controlling length of time directory entries are\n  cached with dir leases (git-fixes, bsc#1225172).\n- commit c39c365\n\n- smb: client: do not start laundromat thread on nohandlecache\n  (git-fixes, bsc#1225172).\n- commit b320db3\n\n- smb3: allow controlling maximum number of cached directories\n  (git-fixes, bsc#1225172).\n- commit e5e6d01\n\n- smb3: do not start laundromat thread when dir leases disabled\n  (git-fixes, bsc#1225172).\n- commit b758cab\n\n- cifs: Add a laundromat thread for cached directories (git-fixes,\n  bsc#1225172).\n- commit b1876e3\n\n- bcache: fix variable length array abuse in btree_iter\n  (CVE-2024-39482 bsc#1227447).\n- commit 3d0cfa1\n\n- mm/vmalloc: fix vmalloc which may return null if called with\n  __GFP_NOFAIL (CVE-2024-39474 bsc#1227434).\n- commit 13add8a\n\n- selftests: make order checking verbose in msg_zerocopy selftest\n  (git-fixes).\n- selftests: fix OOM in msg_zerocopy selftest (git-fixes).\n- can: kvaser_usb: Explicitly initialize family in leafimx\n  driver_info struct (git-fixes).\n- bluetooth/hci: disallow setting handle bigger than\n  HCI_CONN_HANDLE_MAX (git-fixes).\n- Bluetooth: ISO: Check socket flag instead of hcon (git-fixes).\n- Bluetooth: Ignore too large handle values in BIG (git-fixes).\n- Bluetooth: qca: Fix BT enable failure again for QCA6390 after\n  warm reboot (git-fixes).\n- Bluetooth: hci_event: Fix setting of unicast qos interval\n  (git-fixes).\n- Bluetooth: hci_bcm4377: Fix msgid release (git-fixes).\n- mac802154: fix time calculation in\n  ieee802154_configure_durations() (git-fixes).\n- net: phy: phy_device: Fix PHY LED blinking code comment\n  (git-fixes).\n- wifi: cfg80211: restrict NL80211_ATTR_TXQ_QUANTUM values\n  (git-fixes).\n- platform/x86: toshiba_acpi: Fix quickstart quirk handling\n  (git-fixes).\n- commit 3db85da\n\n- jfs: xattr: fix buffer overflow for invalid xattr\n  (bsc#1227383).\n- commit ae2a0d9\n\n- iommu/arm-smmu-v3: Free MSIs in case of ENOMEM (git-fixes).\n- commit 2fb4aa0\n\n- blacklist.conf: Add d988d9a9b9d1 panic: Flush kernel log buffer at the end\n- commit 0ce2686\n\n- Update\n  patches.suse/arm64-mm-Batch-dsb-and-isb-when-populating-pgtables.patch\n  (jsc#PED-8688 bsc#1226202).\n- Update\n  patches.suse/arm64-mm-Don-t-remap-pgtables-for-allocate-vs-populate.patch\n  (jsc#PED-8688 bsc#1226202).\n- Update\n  patches.suse/arm64-mm-Don-t-remap-pgtables-per-cont-pte-pmd-block.patch\n  (jsc#PED-8688 bsc#1226202).\n- Update\n  patches.suse/net-ena-Fix-redundant-device-NUMA-node-override.patch\n  (jsc#PED-8688 bsc#1226202).\n- commit 584efba\n\n- Update\n  patches.suse/usb-gadget-printer-fix-races-against-disable.patch\n  (CVE-2024-25741 bsc#1219832).\n- commit 4a6f084\n\n- llc: make llc_ui_sendmsg() more robust against bonding changes\n  (CVE-2024-26636 bsc#1221659).\n- commit 1bb1c76\n\n- llc: Drop support for ETH_P_TR_802_2 (CVE-2024-26635\n  bsc#1221656).\n- commit 6a42a8d\n\n- PCI: vmd: Create domain symlink before pci_bus_add_devices()\n  (bsc#1227363).\n- commit 3666715\n\n- md: fix resync softlockup when bitmap size is less than array\n  size (CVE-2024-38598, bsc#1226757).\n- commit 43087c7\n\n- ice: fix LAG and VF lock dependency in ice_reset_vf()\n  (CVE-2024-36003 bsc#1224544).\n- commit 0af15ab\n\n- Refresh\n  patches.suse/nvme-tcp-strict-pdu-pacing-to-avoid-send-stalls-on-T.patch.\n- commit a27eef2\n\n- block: refine the EOF check in blkdev_iomap_begin (bsc#1226866\n  CVE-2024-38604).\n- commit 9e332c1\n\n- blacklist.conf: 9cb46b31f3d0 drm/xe/xe_migrate: Cast to output precision before multiplying operands\n- commit d95545e\n\n- kabi/severities: ignore amd pds internal symbols\n- commit 3a9ca76\n\n- ip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\n  (CVE-2024-26641 bsc#1221654).\n- commit 5bd1138\n\n- hsr: Fix uninit-value access in hsr_get_node() (bsc#1223021\n  CVE-2024-26863).\n- commit 21d04a8\n\n- ip6_tunnel: fix NEXTHDR_FRAGMENT handling in\n  ip6_tnl_parse_tlv_enc_lim() (CVE-2024-26633 bsc#1221647).\n- commit 78e628d\n\n- pds_core: Prevent race issues involving the adminq (bsc#1221057\n  CVE-2024-26623).\n- commit 94351ab\n\n- iommufd: Fix protection fault in iommufd_test_syz_conv_iova\n  (bsc#1222779 CVE-2024-26785).\n- commit 5644693\n\n- devlink: fix possible use-after-free and memory leaks in\n  devlink_init() (bsc#1222438 CVE-2024-26734).\n- commit d3a3753\n\n- dm snapshot: fix lockup in dm_exception_table_exit (bsc#1224743,\n  CVE-2024-35805).\n- commit ba12566\n\n- io_uring/rsrc: fix incorrect assignment of iter-\u0026gt;nr_segs in\n  io_import_fixed (git-fixes).\n- io_uring/rsrc: don't lock while !TASK_RUNNING (git-fixes).\n- io_uring/io-wq: avoid garbage value of 'match' in\n  io_wq_enqueue() (git-fixes).\n- commit 7d3e252\n\n- io_uring: check for non-NULL file pointer in io_file_can_poll()\n  (bsc#1226990 CVE-2024-39371).\n- io_uring/io-wq: Use set_bit() and test_bit() at worker-\u0026gt;flags\n  (git-fixes).\n- io_uring/sqpoll: work around a potential audit memory leak\n  (git-fixes).\n- commit 24603fc\n\n- io_uring: Fix io_cqring_wait() not restoring sigmask on\n  get_timespec64() failure (git-fixes).\n- commit e640a65\n\n- hsr: Prevent use after free in prp_create_tagged_frame()\n  (CVE-2023-52846 bsc#1225098).\n- commit cf63988\n\n- drivers/virt/acrn: fix PFNMAP PTE checks in acrn_vm_ram_map()\n  (CVE-2024-38610 bsc#1226758).\n- commit 7069ac2\n\n- virt: acrn: stop using follow_pfn (CVE-2024-38610 bsc#1226758).\n- commit c2ea51b\n\n- btrfs: fix crash on racing fsync and size-extending write into\n  prealloc (bsc#1227101 CVE-2024-37354).\n- commit 1d355af\n\n- kernel-doc: fix struct_group_tagged() parsing (git-fixes).\n- commit e3a2a2e\n\n- mtd: rawnand: rockchip: ensure NVDDR timings are rejected\n  (git-fixes).\n- mtd: rawnand: Bypass a couple of sanity checks during NAND\n  identification (git-fixes).\n- mtd: rawnand: Fix the nand_read_data_op() early check\n  (git-fixes).\n- mtd: rawnand: Ensure ECC configuration is propagated to upper\n  layers (git-fixes).\n- commit e545951\n\n- Correct SCSI patch references (bsc#1225767 CVE-2024-36919 bsc#1226785 CVE-2024-38559)\n- commit e8ea587\n\n- gfs2: Fix potential glock use-after-free on unmount (bsc#1226775\n  CVE-2024-38570).\n- gfs2: Rename sd_{ glock =\u0026gt; kill }_wait (bsc#1226775\n  CVE-2024-38570).\n- commit f3adbca\n\n- X.509: Fix the parser of extended key usage for length\n  (bsc#1218820).\n- commit a9df6a7\n\n- tcp: Use refcount_inc_not_zero() in tcp_twsk_unique()\n  (CVE-2024-36904 bsc#1225732).\n- commit d578dcc\n\n- Update\n  patches.suse/1352-drm-amdgpu-Fix-possible-null-pointer-dereference.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52883\n  bsc#1226630).\n- Update\n  patches.suse/9p-add-missing-locking-around-taking-dentry-fid-list.patch\n  (git-fixes CVE-2024-39463 bsc#1227090).\n- Update\n  patches.suse/ALSA-Fix-deadlocks-with-kctl-removals-at-disconnecti.patch\n  (stable-fixes CVE-2024-38600 bsc#1226864).\n- Update\n  patches.suse/ALSA-core-Fix-NULL-module-pointer-assignment-at-card.patch\n  (git-fixes CVE-2024-38605 bsc#1226740).\n- Update\n  patches.suse/ALSA-hda-Fix-possible-null-ptr-deref-when-assigning-.patch\n  (git-fixes CVE-2023-52806 bsc#1225554).\n- Update\n  patches.suse/ALSA-hda-cs_dsp_ctl-Use-private_free-for-control-cle.patch\n  (git-fixes CVE-2024-38388 bsc#1226890).\n- Update\n  patches.suse/ALSA-timer-Set-lower-bound-of-start-tick-time.patch\n  (stable-fixes git-fixes CVE-2024-38618 bsc#1226754).\n- Update\n  patches.suse/ASoC-kirkwood-Fix-potential-NULL-dereference.patch\n  (git-fixes CVE-2024-38550 bsc#1226633).\n- Update\n  patches.suse/ASoC-mediatek-Assign-dummy-when-codec-not-specified-.patch\n  (git-fixes CVE-2024-38551 bsc#1226761).\n- Update\n  patches.suse/Bluetooth-btusb-Add-date-evt_skb-is-NULL-check.patch\n  (git-fixes CVE-2023-52833 bsc#1225595).\n- Update\n  patches.suse/Bluetooth-hci_core-Fix-possible-buffer-overflow.patch\n  (git-fixes CVE-2024-26889).\n- Update\n  patches.suse/HID-uclogic-Fix-user-memory-access-bug-in-uclogic_pa.patch\n  (git-fixes CVE-2023-52866 bsc#1225120).\n- Update\n  patches.suse/IB-mlx5-Fix-init-stage-error-handling-to-avoid-doubl.patch\n  (jsc#PED-6864 CVE-2023-52851 bsc#1225587).\n- Update\n  patches.suse/Input-cyapa-add-missing-input-core-locking-to-suspen.patch\n  (git-fixes CVE-2023-52884 bsc#1226764).\n- Update\n  patches.suse/Input-synaptics-rmi4-fix-use-after-free-in-rmi_unreg.patch\n  (git-fixes CVE-2023-52840 bsc#1224928).\n- Update\n  patches.suse/KEYS-trusted-Do-not-use-WARN-when-encode-fails.patch\n  (git-fixes CVE-2024-36975 bsc#1226520).\n- Update\n  patches.suse/KEYS-trusted-Fix-memory-leak-in-tpm2_key_encode.patch\n  (git-fixes CVE-2024-36967 bsc#1226131).\n- Update\n  patches.suse/RDMA-cma-Fix-kmemleak-in-rdma_core-observed-during-b.patch\n  (git-fixes CVE-2024-38539 bsc#1226608).\n- Update patches.suse/RDMA-hns-Fix-UAF-for-cq-async-event.patch\n  (git-fixes CVE-2024-38545 bsc#1226595).\n- Update\n  patches.suse/RDMA-hns-Fix-deadlock-on-SRQ-async-events.patch\n  (git-fixes CVE-2024-38591 bsc#1226738).\n- Update\n  patches.suse/RDMA-hns-Modify-the-print-level-of-CQE-error.patch\n  (git-fixes CVE-2024-38590 bsc#1226839).\n- Update\n  patches.suse/RDMA-rxe-Fix-seg-fault-in-rxe_comp_queue_pkt.patch\n  (git-fixes CVE-2024-38544 bsc#1226597).\n- Update\n  patches.suse/SUNRPC-Fix-RPC-client-cleaned-up-the-freed-pipefs-de.patch\n  (git-fixes CVE-2023-52803 bsc#1225008).\n- Update patches.suse/af_unix-Clear-stale-u-oob_skb.patch\n  (CVE-2024-26676 bsc#1222380 CVE-2024-35970 bsc#1224584).\n- Update\n  patches.suse/af_unix-Drop-oob_skb-ref-before-purging-queue-in-GC.patch\n  (CVE-2024-26676 bsc#1222380 CVE-2024-26750 bsc#1222617).\n- Update\n  patches.suse/af_unix-Fix-task-hung-while-purging-oob_skb-in-GC.patch\n  (CVE-2024-26676 bsc#1222380 CVE-2024-26780 bsc#1222588).\n- Update\n  patches.suse/af_unix-Update-unix_sk-sk-oob_skb-under-sk_receive_queue-lock.patch\n  (CVE-2024-26676 bsc#1222380 CVE-2024-36972 bsc#1226163).\n- Update\n  patches.suse/arm64-Restrict-CPU_BIG_ENDIAN-to-GNU-as-or-LLVM-IAS-.patch\n  (git-fixes CVE-2023-52750 bsc#1225485).\n- Update\n  patches.suse/atl1c-Work-around-the-DMA-RX-overflow-issue.patch\n  (git-fixes CVE-2023-52834 bsc#1225599).\n- Update\n  patches.suse/ax25-Fix-reference-count-leak-issue-of-net_device.patch\n  (git-fixes CVE-2024-38554 bsc#1226742).\n- Update\n  patches.suse/ax25-Fix-reference-count-leak-issues-of-ax25_dev.patch\n  (git-fixes CVE-2024-38602 bsc#1226613).\n- Update\n  patches.suse/blk-cgroup-fix-list-corruption-from-reorder-of-WRITE-lqueued.patch\n  (bsc#1225605 CVE-2024-38384 bsc#1226938).\n- Update\n  patches.suse/blk-cgroup-fix-list-corruption-from-resetting-io-stat.patch\n  (bsc#1225605 CVE-2024-38663 bsc#1226939).\n- Update\n  patches.suse/bnxt_re-avoid-shift-undefined-behavior-in-bnxt_qplib.patch\n  (git-fixes CVE-2024-38540 bsc#1226582).\n- Update\n  patches.suse/bonding-stop-the-device-in-bond_setup_by_slave.patch\n  (git-fixes CVE-2023-52784 bsc#1224946).\n- Update\n  patches.suse/can-dev-can_put_echo_skb-don-t-crash-kernel-if-can_p.patch\n  (git-fixes CVE-2023-52878 bsc#1225000).\n- Update\n  patches.suse/clk-mediatek-clk-mt2701-Add-check-for-mtk_alloc_clk_.patch\n  (git-fixes CVE-2023-52875 bsc#1225096).\n- Update\n  patches.suse/clk-mediatek-clk-mt6765-Add-check-for-mtk_alloc_clk_.patch\n  (git-fixes CVE-2023-52870 bsc#1224937).\n- Update\n  patches.suse/clk-mediatek-clk-mt6779-Add-check-for-mtk_alloc_clk_.patch\n  (git-fixes CVE-2023-52873 bsc#1225589).\n- Update\n  patches.suse/clk-mediatek-clk-mt6797-Add-check-for-mtk_alloc_clk_.patch\n  (git-fixes CVE-2023-52865 bsc#1225086).\n- Update\n  patches.suse/clk-mediatek-clk-mt7629-Add-check-for-mtk_alloc_clk_.patch\n  (git-fixes CVE-2023-52858 bsc#1225566).\n- Update\n  patches.suse/clk-mediatek-clk-mt7629-eth-Add-check-for-mtk_alloc_.patch\n  (git-fixes CVE-2023-52876 bsc#1225036).\n- Update\n  patches.suse/cppc_cpufreq-Fix-possible-null-pointer-dereference.patch\n  (git-fixes CVE-2024-38573 bsc#1226739).\n- Update patches.suse/cpufreq-exit-callback-is-optional.patch\n  (git-fixes CVE-2024-38615 bsc#1226592).\n- Update patches.suse/crypto-bcm-Fix-pointer-arithmetic.patch\n  (git-fixes CVE-2024-38579 bsc#1226637).\n- Update\n  patches.suse/crypto-pcrypt-Fix-hungtask-for-PADATA_RESET.patch\n  (git-fixes CVE-2023-52813 bsc#1225527).\n- Update patches.suse/cxl-mem-Fix-shutdown-order.patch (git-fixes\n  CVE-2023-52849 bsc#1224949).\n- Update\n  patches.suse/cxl-region-Do-not-try-to-cleanup-after-cxl_region_se.patch\n  (git-fixes CVE-2023-52792 bsc#1225477).\n- Update patches.suse/cxl-region-Fix-cxlr_pmem-leaks.patch\n  (git-fixes CVE-2024-38391 bsc#1226894).\n- Update\n  patches.suse/dma-buf-sw-sync-don-t-enable-IRQ-from-sync_print_obj.patch\n  (git-fixes CVE-2024-38780 bsc#1226886).\n- Update\n  patches.suse/dma-mapping-benchmark-fix-node-id-validation.patch\n  (git-fixes CVE-2024-34777 bsc#1226796).\n- Update\n  patches.suse/dma-mapping-benchmark-handle-NUMA_NO_NODE-correctly.patch\n  (git-fixes CVE-2024-39277 bsc#1226909).\n- Update\n  patches.suse/dmaengine-idxd-Avoid-unnecessary-destruction-of-file.patch\n  (git-fixes CVE-2024-38629 bsc#1226905).\n- Update\n  patches.suse/drm-amd-Fix-UBSAN-array-index-out-of-bounds-for-Pola.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52819\n  bsc#1225532).\n- Update\n  patches.suse/drm-amd-Fix-UBSAN-array-index-out-of-bounds-for-SMU7.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52818\n  bsc#1225530).\n- Update\n  patches.suse/drm-amd-check-num-of-link-levels-when-update-pcie-pa.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52812\n  bsc#1225564).\n- Update\n  patches.suse/drm-amd-display-Avoid-NULL-dereference-of-timing-gen.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52753\n  bsc#1225478).\n- Update\n  patches.suse/drm-amd-display-Fix-division-by-zero-in-setup_dsc_co.patch\n  (stable-fixes CVE-2024-36969 bsc#1226155).\n- Update\n  patches.suse/drm-amd-display-Fix-null-pointer-dereference-in-erro.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52862\n  bsc#1225015).\n- Update\n  patches.suse/drm-amd-display-Fix-potential-index-out-of-bounds-in.patch\n  (git-fixes CVE-2024-38552 bsc#1226767).\n- Update\n  patches.suse/drm-amd-display-fix-a-NULL-pointer-dereference-in-am.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52773\n  bsc#1225041).\n- Update\n  patches.suse/drm-amd-display-fixed-integer-types-and-null-check-l.patch\n  (git-fixes CVE-2024-26767).\n- Update\n  patches.suse/drm-amdgpu-Fix-a-null-pointer-access-when-the-smc_rr.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52817\n  bsc#1225569).\n- Update\n  patches.suse/drm-amdgpu-Fix-buffer-size-in-gfx_v9_4_3_init_-cp_co.patch\n  (git-fixes CVE-2024-39291 bsc#1226934).\n- Update\n  patches.suse/drm-amdgpu-Fix-potential-null-pointer-derefernce.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52814\n  bsc#1225565).\n- Update\n  patches.suse/drm-amdgpu-add-error-handle-to-avoid-out-of-bounds.patch\n  (stable-fixes CVE-2024-39471 bsc#1227096).\n- Update\n  patches.suse/drm-amdgpu-mes-fix-use-after-free-issue.patch\n  (stable-fixes CVE-2024-38581 bsc#1226657).\n- Update\n  patches.suse/drm-amdgpu-vkms-fix-a-possible-null-pointer-derefere.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52815\n  bsc#1225568).\n- Update\n  patches.suse/drm-amdkfd-Fix-a-race-condition-of-vram-buffer-unref.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52825\n  bsc#1225076).\n- Update\n  patches.suse/drm-amdkfd-Fix-shift-out-of-bounds-issue.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52816\n  bsc#1225529).\n- Update\n  patches.suse/drm-bridge-cdns-mhdp8546-Fix-possible-null-pointer-d.patch\n  (git-fixes CVE-2024-38548).\n- Update\n  patches.suse/drm-bridge-it66121-Fix-invalid-connector-dereference.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52861\n  bsc#1224941).\n- Update\n  patches.suse/drm-bridge-lt8912b-Fix-crash-on-bridge-detach.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52856\n  bsc#1224932).\n- Update\n  patches.suse/drm-mediatek-Add-0-size-check-to-mtk_drm_gem_obj.patch\n  (git-fixes CVE-2024-38549 bsc#1226735).\n- Update\n  patches.suse/drm-mediatek-Fix-coverity-issue-with-unintentional-i.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52857\n  bsc#1225581).\n- Update\n  patches.suse/drm-mediatek-Init-ddp_comp-with-devm_kcalloc.patch\n  (git-fixes CVE-2024-38592 bsc#1226844).\n- Update\n  patches.suse/drm-msm-a6xx-Avoid-a-nullptr-dereference-when-speedb.patch\n  (git-fixes CVE-2024-38390 bsc#1226891).\n- Update\n  patches.suse/drm-msm-dpu-Add-callback-function-pointer-check-befo.patch\n  (git-fixes CVE-2024-38622 bsc#1226856).\n- Update\n  patches.suse/drm-panel-fix-a-possible-null-pointer-dereference.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52821\n  bsc#1225022).\n- Update\n  patches.suse/drm-panel-panel-tpo-tpg110-fix-a-possible-null-point.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52826\n  bsc#1225077).\n- Update patches.suse/drm-radeon-possible-buffer-overflow.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52867\n  bsc#1225009).\n- Update\n  patches.suse/drm-vc4-Fix-possible-null-pointer-dereference.patch\n  (git-fixes CVE-2024-38546 bsc#1226593).\n- Update\n  patches.suse/drm-vmwgfx-Fix-invalid-reads-in-fence-signaled-event.patch\n  (git-fixes CVE-2024-36960 bsc#1225872).\n- Update\n  patches.suse/drm-zynqmp_dpsub-Always-register-bridge.patch\n  (git-fixes CVE-2024-38664 bsc#1226941).\n- Update\n  patches.suse/e1000e-change-usleep_range-to-udelay-in-PHY-mdic-acc.patch\n  (CVE-2024-39296 bsc#1226989 CVE-2024-36887 bsc#1225731).\n- Update\n  patches.suse/ecryptfs-Fix-buffer-size-for-tag-66-packet.patch\n  (git-fixes CVE-2024-38578 bsc#1226634).\n- Update\n  patches.suse/efi-libstub-only-free-priv.runtime_map-when-allocate.patch\n  (git-fixes CVE-2024-33619 bsc#1226768).\n- Update\n  patches.suse/fbdev-imsttfb-fix-a-resource-leak-in-probe.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52838\n  bsc#1225031).\n- Update\n  patches.suse/fs-9p-only-translate-RWX-permissions-for-plain-9P200.patch\n  (git-fixes CVE-2024-36964 bsc#1225866).\n- Update\n  patches.suse/fs-jfs-Add-check-for-negative-db_l2nbperpage.patch\n  (git-fixes CVE-2023-52810 bsc#1225557).\n- Update\n  patches.suse/fs-jfs-Add-validity-check-for-db_maxag-and-db_agpref.patch\n  (git-fixes CVE-2023-52804 bsc#1225550).\n- Update\n  patches.suse/ftrace-Fix-possible-use-after-free-issue-in-ftrace_location.patch\n  (git-fixes CVE-2024-38588 bsc#1226837).\n- Update\n  patches.suse/genirq-irqdesc-Prevent-use-after-free-in-irq_find_at.patch\n  (git-fixes CVE-2024-38385 bsc#1227085).\n- Update patches.suse/gfs2-ignore-negated-quota-changes.patch\n  (git-fixes CVE-2023-52759 bsc#1225560).\n- Update\n  patches.suse/hid-cp2112-Fix-duplicate-workqueue-initialization.patch\n  (git-fixes CVE-2023-52853 bsc#1224988).\n- Update\n  patches.suse/hwmon-axi-fan-control-Fix-possible-NULL-pointer-dere.patch\n  (git-fixes CVE-2023-52863 bsc#1225586).\n- Update\n  patches.suse/i2c-acpi-Unbind-mux-adapters-before-delete.patch\n  (git-fixes CVE-2024-39362 bsc#1226995).\n- Update\n  patches.suse/i2c-core-Run-atomic-i2c-xfer-when-preemptible.patch\n  (git-fixes CVE-2023-52791 bsc#1225108).\n- Update\n  patches.suse/i3c-master-mipi-i3c-hci-Fix-a-kernel-panic-for-acces.patch\n  (git-fixes CVE-2023-52763 bsc#1225570).\n- Update\n  patches.suse/i3c-mipi-i3c-hci-Fix-out-of-bounds-access-in-hci_dma.patch\n  (git-fixes CVE-2023-52766).\n- Update\n  patches.suse/i915-perf-Fix-NULL-deref-bugs-with-drm_dbg-calls.patch\n  (jsc#PED-3527 jsc#PED-5475 jsc#PED-6068 jsc#PED-6070\n  jsc#PED-6116 jsc#PED-6120 jsc#PED-5065 jsc#PED-5477 jsc#PED-5511\n  jsc#PED-6041 jsc#PED-6069 jsc#PED-6071 CVE-2023-52788\n  bsc#1225106).\n- Update\n  patches.suse/igb-Fix-string-truncation-warnings-in-igb_set_fw_ver.patch\n  (git-fixes CVE-2024-36010 bsc#1225594).\n- Update\n  patches.suse/iommu-vt-d-Fix-WARN_ON-in-iommu-probe-path.patch\n  (git-fixes CVE-2024-35957 bsc#1224673).\n- Update\n  patches.suse/iommufd-Fix-missing-update-of-domains_itree-after-splitting-iopt\n  (jsc#PED-7779 jsc#PED-7780 CVE-2023-52801 bsc#1225006).\n- Update\n  patches.suse/ipvlan-add-ipvlan_route_v6_outbound-helper.patch\n  (git-fixes CVE-2023-52796 bsc#1224930).\n- Update\n  patches.suse/jffs2-prevent-xattr-node-from-overflowing-the-eraseblock.patch\n  (git-fixes CVE-2024-38599 bsc#1226848).\n- Update\n  patches.suse/jfs-fix-array-index-out-of-bounds-in-dbFindLeaf.patch\n  (git-fixes CVE-2023-52799 bsc#1225472).\n- Update\n  patches.suse/jfs-fix-array-index-out-of-bounds-in-diAlloc.patch\n  (git-fixes CVE-2023-52805 bsc#1225553).\n- Update\n  patches.suse/kunit-fortify-Fix-mismatched-kvalloc-vfree-usage.patch\n  (git-fixes CVE-2024-38617 bsc#1226859).\n- Update\n  patches.suse/lib-generic-radix-tree.c-Don-t-overflow-in-peek.patch\n  (git-fixes CVE-2021-47432 bsc#1225391).\n- Update\n  patches.suse/lib-test_hmm.c-handle-src_pfns-and-dst_pfns-allocati.patch\n  (git-fixes CVE-2024-38543 bsc#1226594).\n- Update\n  patches.suse/locking-ww_mutex-test-Fix-potential-workqueue-corrup.patch\n  (bsc#1219953 CVE-2023-52836 bsc#1225609).\n- Update\n  patches.suse/md-Don-t-ignore-suspended-array-in-md_check_recovery-1baa.patch\n  (bsc#1219596 CVE-2024-26758).\n- Update\n  patches.suse/media-atomisp-ssh_css-Fix-a-null-pointer-dereference.patch\n  (git-fixes CVE-2024-38547 bsc#1226632).\n- Update\n  patches.suse/media-bttv-fix-use-after-free-error-due-to-btv-timeo.patch\n  (git-fixes CVE-2023-52847 bsc#1225588).\n- Update\n  patches.suse/media-gspca-cpia1-shift-out-of-bounds-in-set_flicker.patch\n  (git-fixes CVE-2023-52764 bsc#1225571).\n- Update\n  patches.suse/media-hantro-Check-whether-reset-op-is-defined-befor.patch\n  (git-fixes CVE-2023-52850 bsc#1225014).\n- Update\n  patches.suse/media-i2c-et8ek8-Don-t-strip-remove-function-when-dr.patch\n  (git-fixes CVE-2024-38611 bsc#1226760).\n- Update\n  patches.suse/media-imon-fix-access-to-invalid-resource-for-the-se.patch\n  (git-fixes CVE-2023-52754 bsc#1225490).\n- Update\n  patches.suse/media-lgdt3306a-Add-a-check-against-null-pointer-def.patch\n  (stable-fixes CVE-2022-48772 bsc#1226976).\n- Update\n  patches.suse/media-stk1160-fix-bounds-checking-in-stk1160_copy_vi.patch\n  (git-fixes CVE-2024-38621 bsc#1226895).\n- Update\n  patches.suse/media-vidtv-mux-Add-check-and-kfree-for-kstrdup.patch\n  (git-fixes CVE-2023-52841 bsc#1225592).\n- Update patches.suse/media-vidtv-psi-Add-check-for-kstrdup.patch\n  (git-fixes CVE-2023-52844 bsc#1225590).\n- Update\n  patches.suse/mfd-qcom-spmi-pmic-Fix-revid-implementation.patch\n  (git-fixes CVE-2023-52765 bsc#1225029).\n- Update\n  patches.suse/misc-microchip-pci1xxxx-fix-double-free-in-the-error.patch\n  (git-fixes CVE-2024-36973 bsc#1226457).\n- Update\n  patches.suse/net-hns3-fix-out-of-bounds-access-may-occur-when-coa.patch\n  (git-fixes CVE-2023-52807 bsc#1225097).\n- Update\n  patches.suse/net-ks8851-Queue-RX-packets-in-IRQ-handler-instead-o.patch\n  (git-fixes CVE-2024-36962 bsc#1225827).\n- Update\n  patches.suse/net-mlx5-Fix-peer-devlink-set-for-SF-representor-dev.patch\n  (git-fixes CVE-2024-38595 bsc#1226741).\n- Update\n  patches.suse/net-mlx5e-Track-xmit-submission-to-PTP-WQ-after-popu.patch\n  (jsc#PED-3311 CVE-2023-52782 bsc#1225103).\n- Update\n  patches.suse/net-mvneta-fix-calls-to-page_pool_get_stats.patch\n  (git-fixes CVE-2023-52780 bsc#1224933).\n- Update\n  patches.suse/net-wangxun-fix-kernel-panic-due-to-null-pointer.patch\n  (git-fixes CVE-2023-52783 bsc#1225104).\n- Update\n  patches.suse/netfilter-complete-validation-of-user-input.patch\n  (git-fixes CVE-2024-35896 bsc#1224662 CVE-2024-35962\n  bsc#1224583).\n- Update\n  patches.suse/nfc-nci-Fix-uninit-value-in-nci_rx_work.patch\n  (git-fixes CVE-2024-38381 bsc#1226878).\n- Update\n  patches.suse/nilfs2-fix-nilfs_empty_dir-misjudgment-and-long-loop.patch\n  (git-fixes CVE-2024-39469 bsc#1226992).\n- Update\n  patches.suse/nilfs2-fix-potential-hang-in-nilfs_detach_log_writer.patch\n  (git-fixes CVE-2024-38582 bsc#1226658).\n- Update\n  patches.suse/nilfs2-fix-use-after-free-of-timer-for-log-writer-th.patch\n  (git-fixes CVE-2024-38583 bsc#1226777).\n- Update\n  patches.suse/of-module-add-buffer-overflow-check-in-of_modalias.patch\n  (git-fixes CVE-2024-38541 bsc#1226587).\n- Update\n  patches.suse/padata-Fix-refcnt-handling-in-padata_free_shell.patch\n  (git-fixes CVE-2023-52854 bsc#1225584).\n- Update\n  patches.suse/perf-core-Bail-out-early-if-the-request-AUX-area-is-out-of-bound.patch\n  (git-fixes CVE-2023-52835 bsc#1225602).\n- Update\n  patches.suse/platform-x86-wmi-Fix-opening-of-char-device.patch\n  (git-fixes CVE-2023-52864 bsc#1225132).\n- Update\n  patches.suse/powerpc-pseries-iommu-LPAR-panics-during-boot-up-wit.patch\n  (bsc#1222011 ltc#205900 CVE-2024-36926 bsc#1225829).\n- Update patches.suse/pstore-platform-Add-check-for-kstrdup.patch\n  (git-fixes CVE-2023-52869 bsc#1225050).\n- Update\n  patches.suse/remoteproc-mediatek-Make-sure-IPI-buffer-fits-in-L2T.patch\n  (git-fixes CVE-2024-36965 bsc#1226149).\n- Update\n  patches.suse/ring-buffer-Fix-a-race-between-readers-and-resize-checks.patch\n  (git-fixes CVE-2024-38601 bsc#1226876).\n- Update\n  patches.suse/s390-dasd-protect-device-queue-against-concurrent-access.patch\n  (git-fixes bsc#1217481 CVE-2023-52774 bsc#1225572).\n- Update\n  patches.suse/scsi-hisi_sas-Set-debugfs_dir-pointer-to-NULL-after-removing-debugfs.patch\n  (git-fixes CVE-2023-52808 bsc#1225555).\n- Update\n  patches.suse/scsi-ibmvfc-Remove-BUG_ON-in-the-case-of-an-empty-ev.patch\n  (bsc#1209834 ltc#202097 CVE-2023-52811 bsc#1225559).\n- Update\n  patches.suse/scsi-libfc-Fix-potential-NULL-pointer-dereference-in-fc_lport_ptp_setup.patch\n  (git-fixes CVE-2023-52809 bsc#1225556).\n- Update\n  patches.suse/scsi-lpfc-Move-NPIV-s-transport-unregistration-to-af.patch\n  (bsc#1221777 CVE-2024-36952 bsc#1225898).\n- Update\n  patches.suse/scsi-lpfc-Release-hbalock-before-calling-lpfc_worker.patch\n  (bsc#1221777 CVE-2024-36924 bsc#1225820).\n- Update\n  patches.suse/serial-max3100-Lock-port-lock-when-calling-uart_hand.patch\n  (git-fixes CVE-2024-38634 bsc#1226868).\n- Update\n  patches.suse/serial-max3100-Update-uart_driver_registered-on-driv.patch\n  (git-fixes CVE-2024-38633 bsc#1226867).\n- Update\n  patches.suse/soc-qcom-llcc-Handle-a-second-device-without-data-co.patch\n  (git-fixes CVE-2023-52871 bsc#1225534).\n- Update\n  patches.suse/soundwire-cadence-fix-invalid-PDI-offset.patch\n  (stable-fixes CVE-2024-38635 bsc#1226863).\n- Update patches.suse/speakup-Fix-sizeof-vs-ARRAY_SIZE-bug.patch\n  (git-fixes CVE-2024-38587 bsc#1226780).\n- Update patches.suse/spi-Fix-null-dereference-on-suspend.patch\n  (git-fixes CVE-2023-52749 bsc#1225476).\n- Update\n  patches.suse/thermal-core-prevent-potential-string-overflow.patch\n  (git-fixes CVE-2023-52868 bsc#1225044).\n- Update\n  patches.suse/thermal-drivers-qcom-lmh-Check-for-SCM-availability-.patch\n  (git-fixes CVE-2024-39466 bsc#1227089).\n- Update\n  patches.suse/thermal-drivers-tsens-Fix-null-pointer-dereference.patch\n  (git-fixes CVE-2024-38571 bsc#1226737).\n- Update\n  patches.suse/thermal-intel-powerclamp-fix-mismatch-in-get-functio.patch\n  (git-fixes CVE-2023-52794 bsc#1225028).\n- Update\n  patches.suse/tls-fix-NULL-deref-on-tls_sw_splice_eof-with-empty-r.patch\n  (jsc#PED-6831 CVE-2023-52767 bsc#1224998).\n- Update\n  patches.suse/tpm_tis_spi-Account-for-SPI-header-when-allocating-T.patch\n  (git-fixes CVE-2024-36477 bsc#1226840).\n- Update\n  patches.suse/tracing-Have-trace_event_file-have-ref-counters.patch\n  (git-fixes CVE-2023-52879 bsc#1225101).\n- Update\n  patches.suse/tracing-trigger-Fix-to-return-error-if-failed-to-alloc-snapshot.patch\n  (git-fixes CVE-2024-26920).\n- Update\n  patches.suse/tty-n_gsm-fix-race-condition-in-status-line-change-o.patch\n  (git-fixes CVE-2023-52872 bsc#1225591).\n- Update\n  patches.suse/tty-n_gsm-require-CAP_NET_ADMIN-to-attach-N_GSM0710-.patch\n  (bsc#1222619 CVE-2023-52880).\n- Update\n  patches.suse/tty-vcc-Add-check-for-kstrdup-in-vcc_probe.patch\n  (git-fixes CVE-2023-52789 bsc#1225180).\n- Update\n  patches.suse/usb-config-fix-iteration-issue-in-usb_get_bos_descri.patch\n  (git-fixes CVE-2023-52781 bsc#1225092).\n- Update\n  patches.suse/usb-dwc3-Wait-unconditionally-after-issuing-EndXfer-.patch\n  (git-fixes CVE-2024-36977 bsc#1226513).\n- Update\n  patches.suse/usb-gadget-u_audio-Fix-race-condition-use-of-control.patch\n  (git-fixes CVE-2024-38628 bsc#1226911).\n- Update\n  patches.suse/usb-storage-alauda-Check-whether-the-media-is-initia.patch\n  (git-fixes CVE-2024-38619 bsc#1226861).\n- Update\n  patches.suse/usb-typec-tcpm-Fix-NULL-pointer-dereference-in-tcpm_.patch\n  (git-fixes CVE-2023-52877 bsc#1224944).\n- Update\n  patches.suse/vhost-vdpa-fix-use-after-free-in-vhost_vdpa_probe.patch\n  (jsc#PED-3311 CVE-2023-52795 bsc#1225085).\n- Update\n  patches.suse/virtio-blk-fix-implicit-overflow-on-virtio_max_dma_s.patch\n  (git-fixes CVE-2023-52762 bsc#1225573).\n- Update\n  patches.suse/virtio-vsock-Fix-uninit-value-in-virtio_transport_re.patch\n  (jsc#PED-5505 CVE-2023-52842 bsc#1225025).\n- Update\n  patches.suse/watchdog-cpu5wdt.c-Fix-use-after-free-bug-caused-by-.patch\n  (git-fixes CVE-2024-38630 bsc#1226908).\n- Update\n  patches.suse/wifi-ar5523-enable-proper-endpoint-verification.patch\n  (git-fixes CVE-2024-38565 bsc#1226747).\n- Update\n  patches.suse/wifi-ath11k-fix-dfs-radar-event-locking.patch\n  (git-fixes CVE-2023-52798 bsc#1224947).\n- Update\n  patches.suse/wifi-ath11k-fix-gtk-offload-status-event-locking.patch\n  (git-fixes CVE-2023-52777 bsc#1224992).\n- Update patches.suse/wifi-ath11k-fix-htt-pktlog-locking.patch\n  (git-fixes CVE-2023-52800).\n- Update\n  patches.suse/wifi-ath12k-fix-dfs-radar-and-temperature-event-lock.patch\n  (git-fixes CVE-2023-52776 bsc#1225090).\n- Update\n  patches.suse/wifi-ath12k-fix-htt-mlo-offset-event-locking.patch\n  (git-fixes CVE-2023-52769 bsc#1225001).\n- Update\n  patches.suse/wifi-ath12k-fix-out-of-bound-access-of-qmi_invoke_ha.patch\n  (git-fixes CVE-2024-38572 bsc#1226776).\n- Update\n  patches.suse/wifi-ath12k-fix-possible-out-of-bound-read-in-ath12k.patch\n  (git-fixes CVE-2023-52827 bsc#1225078).\n- Update\n  patches.suse/wifi-ath12k-fix-possible-out-of-bound-write-in-ath12.patch\n  (git-fixes CVE-2023-52829 bsc#1225081).\n- Update\n  patches.suse/wifi-brcmfmac-pcie-handle-randbuf-allocation-failure.patch\n  (git-fixes CVE-2024-38575 bsc#1226612).\n- Update\n  patches.suse/wifi-carl9170-add-a-proper-sanity-check-for-endpoint.patch\n  (git-fixes CVE-2024-38567 bsc#1226769).\n- Update\n  patches.suse/wifi-carl9170-re-fix-fortified-memset-warning.patch\n  (git-fixes CVE-2024-38616 bsc#1226852).\n- Update\n  patches.suse/wifi-mac80211-don-t-return-unset-power-in-ieee80211_.patch\n  (git-fixes CVE-2023-52832 bsc#1225577).\n- Update\n  patches.suse/wifi-nl80211-Avoid-address-calculations-via-out-of-b.patch\n  (git-fixes CVE-2024-38562 bsc#1226788).\n- Update\n  patches.suse/wifi-wilc1000-use-vmm_table-as-array-in-wilc-struct.patch\n  (git-fixes CVE-2023-52768 bsc#1225004).\n- Update\n  patches.suse/x86-tdx-Zero-out-the-missing-RSI-in-TDX_HYPERCALL-macro.patch\n  (jsc#PED-5824 CVE-2023-52874 bsc#1225049).\n- commit 33efdc4\n\n- tcp: do not accept ACK of bytes we never sent (CVE-2023-52881\n  bsc#1225611).\n- commit 16404a6\n\n- net: ena: Fix redundant device NUMA node override\n  (jsc#PED-8688).\n- commit 6ad6684\n\n- ata: ahci: Clean up sysfs file on error (git-fixes).\n- ata: libata-core: Fix double free on error (git-fixes).\n- ata,scsi: libata-core: Do not leak memory for ata_port struct\n  members (git-fixes).\n- ata: libata-core: Fix null pointer dereference on error\n  (git-fixes).\n- kbuild: Fix build target deb-pkg: ln: failed to create hard link\n  (git-fixes).\n- kbuild: doc: Update default INSTALL_MOD_DIR from extra to\n  updates (git-fixes).\n- kbuild: Install dtb files as 0644 in Makefile.dtbinst\n  (git-fixes).\n- counter: ti-eqep: enable clock at probe (git-fixes).\n- iio: chemical: bme680: Fix sensor data read operation\n  (git-fixes).\n- iio: chemical: bme680: Fix overflows in compensate() functions\n  (git-fixes).\n- iio: chemical: bme680: Fix calibration data variable\n  (git-fixes).\n- iio: chemical: bme680: Fix pressure value output (git-fixes).\n- iio: accel: fxls8962af: select IIO_BUFFER \u0026amp; IIO_KFIFO_BUF\n  (git-fixes).\n- iio: adc: ad7266: Fix variable checking bug (git-fixes).\n- iio: xilinx-ams: Don't include ams_ctrl_channels in scan_mask\n  (git-fixes).\n- serial: bcm63xx-uart: fix tx after conversion to\n  uart_port_tx_limited() (git-fixes).\n- serial: core: introduce uart_port_tx_limited_flags()\n  (git-fixes).\n- Revert \u0026quot;serial: core: only stop transmit when HW fifo is empty\u0026quot;\n  (git-fixes).\n- tty: mcf: MCF54418 has 10 UARTS (git-fixes).\n- usb: gadget: aspeed_udc: fix device address configuration\n  (git-fixes).\n- usb: dwc3: core: remove lock of otg mode during gadget\n  suspend/resume to avoid deadlock (git-fixes).\n- usb: typec: ucsi: glink: fix child node release in probe\n  function (git-fixes).\n- usb: musb: da8xx: fix a resource leak in probe() (git-fixes).\n- usb: atm: cxacru: fix endpoint checking in cxacru_bind()\n  (git-fixes).\n- usb: gadget: printer: fix races against disable (git-fixes).\n- PCI/MSI: Fix UAF in msi_capability_init (git-fixes).\n- commit a2ea5a9\n\n- crypto: deflate - Add aliases to deflate (bsc#1227190).\n- commit 27ffd92\n\n- crypto: iaa - Account for cpu-less numa nodes (bsc#1227190).\n- commit cd600aa\n\n- i2c: testunit: discard write requests while old command is\n  running (git-fixes).\n- i2c: testunit: don't erase registers after STOP (git-fixes).\n- mmc: sdhci: Do not lock spinlock around mmc_gpio_get_ro()\n  (git-fixes).\n- mmc: sdhci: Do not invert write-protect twice (git-fixes).\n- mmc: sdhci-brcmstb: check R1_STATUS for erase/trim/discard\n  (git-fixes).\n- mmc: sdhci-pci: Convert PCIBIOS_* return codes to errnos\n  (git-fixes).\n- commit 448487d\n\n- gpiolib: cdev: Disallow reconfiguration without direction\n  (uAPI v1) (git-fixes).\n- gpio: davinci: Validate the obtained number of IRQs (git-fixes).\n- commit 919ebd1\n\n- wifi: iwlwifi: mvm: fix the TXF mapping for BZ devices\n  (bsc#1227149).\n- wifi: iwlwifi: clear link_id in time_event (bsc#1227149).\n- wifi: iwlwifi: mvm: fix a battery life regression (bsc#1227149).\n- wifi: iwlwifi: remove extra kernel-doc (bsc#1227149).\n- wifi: iwlwifi: mvm: skip adding debugfs symlink for reconfig\n  (bsc#1227149).\n- wifi: iwlwifi: replace ENOTSUPP with EOPNOTSUPP (bsc#1227149).\n- wifi: iwlwifi: mvm: use the new command to clear the internal\n  buffer (bsc#1227149).\n- commit acd03db\n\n- wifi: iwlwifi: mvm: add US/Canada MCC to API (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-fix-warnings-from-dmi_get_system_in.patch.\n- commit 70a9591\n\n- wifi: iwlwifi: mvm: disallow puncturing in US/Canada\n  (bsc#1227149).\n- wifi: iwlwifi: Add rf_mapping of new wifi7 devices\n  (bsc#1227149).\n- wifi: iwlwifi: cleanup BT Shared Single Antenna code\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Do not warn if valid link pair was not found\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: d3: avoid intermediate/early mutex unlock\n  (bsc#1227149).\n- wifi: iwlwifi: Don't mark DFS channels as NO-IR (bsc#1227149).\n- wifi: iwlwifi: mvm: Allow DFS concurrent operation\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: do not send STA_DISABLE_TX_CMD for newer\n  firmware (bsc#1227149).\n- wifi: iwlwifi: remove async command callback (bsc#1227149).\n- commit 0205124\n\n- wifi: iwlwifi: fw: file: don't use [0] for variable arrays\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: get_crf_id() can be void (bsc#1227149).\n- wifi: iwlwifi: pcie: dump CSRs before removal (bsc#1227149).\n- wifi: iwlwifi: pcie: clean up device removal work (bsc#1227149).\n- wifi: iwlwifi: mvm: add a debugfs hook to clear the monitor data\n  (bsc#1227149).\n- wifi: iwlwifi: refactor RX tracing (bsc#1227149).\n- wifi: iwlwifi: mvm: Correctly report TSF data in scan complete\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Use the link ID provided in scan request\n  (bsc#1227149).\n- wifi: iwlwifi: fw: replace deprecated strncpy with strscpy_pad\n  (bsc#1227149).\n- wifi: iwlwifi: fix system commands group ordering (bsc#1227149).\n- commit 6cae420\n\n- wifi: iwlwifi: drop NULL pointer check in\n  iwl_mvm_tzone_set_trip_temp() (bsc#1227149).\n- wifi: iwlwifi: bump FW API to 86 for AX/BZ/SC devices\n  (bsc#1227149).\n- wifi: iwlwifi: read DSM func 2 for specific RF types\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: show dump even for pldr_sync (bsc#1227149).\n- wifi: iwlwifi: mvm: cycle FW link on chanctx removal\n  (bsc#1227149).\n- wifi: iwlwifi: trace full frames with TX status request\n  (bsc#1227149).\n- wifi: iwlwifi: fw: Add support for UATS table in UHB\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: add a print when sending RLC command\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: debugfs for fw system stats (bsc#1227149).\n- wifi: iwlwifi: mvm: implement new firmware API for statistics\n  (bsc#1227149).\n- commit ed6b54f\n\n- wifi: iwlwifi: disable multi rx queue for 9000 (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-include-link-ID-when-releasing-fram.patch.\n- commit 9866ec0\n\n- wifi: iwlwifi: mvm: fix regdb initialization (bsc#1227149).\n- wifi: iwlwifi: mvm: simplify the reorder buffer (bsc#1227149).\n- wifi: iwlwifi: mvm: Return success if link could not be removed\n  (bsc#1227149).\n- wifi: iwlwifi: add support for SNPS DPHYIP region type\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: remove set_tim callback for MLD ops\n  (bsc#1227149).\n- wifi: iwlwifi: api: fix center_freq label in PHY diagram\n  (bsc#1227149).\n- wifi: iwlwifi: support link id in SESSION_PROTECTION_NOTIF\n  (bsc#1227149).\n- wifi: iwlwifi: support link_id in SESSION_PROTECTION cmd\n  (bsc#1227149).\n- wifi: iwlwifi: make time_events MLO aware (bsc#1227149).\n- commit 1ea0f35\n\n- wifi: iwlwifi: add support for activating UNII-1 in WW via BIOS\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: extend alive timeout to 2 seconds\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: fix the PHY context resolution for p2p\n  device (bsc#1227149).\n- wifi: iwlwifi: mvm: fold the ref++ into iwl_mvm_phy_ctxt_add\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: don't add dummy phy context (bsc#1227149).\n- wifi: iwlwifi: mvm: cleanup MLO and non-MLO unification code\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: implement ROC version 3 (bsc#1227149).\n- wifi: iwlwifi: send EDT table to FW (bsc#1227149).\n- wifi: iwlmvm: fw: Add new OEM vendor to tas approved list\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Fix unreachable code path (bsc#1227149).\n- commit 50ebcaa\n\n- wifi: iwlwifi: mvm: advertise support for SCS traffic\n  description (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-do-not-announce-EPCS-support.patch.\n- commit 7208326\n\n- wifi: iwlwifi: add new RF support for wifi7 (bsc#1227149).\n- wifi: iwlwifi: fw: increase fw_version string size\n  (bsc#1227149).\n- wifi: iwlwifi: check for kmemdup() return value in\n  iwl_parse_tlv_firmware() (bsc#1227149).\n- wifi: iwlwifi: fix the rf step and flavor bits range\n  (bsc#1227149).\n- wifi: iwlwifi: fw: Fix debugfs command sending (bsc#1227149).\n- wifi: iwlwifi: mvm: add start mac ctdp sum calculation debugfs\n  handler (bsc#1227149).\n- wifi: iwlwifi: abort scan when rfkill on but device enabled\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: Add basic link selection logic\n  (bsc#1227149).\n- wifi: iwlwifi: mei: return error from register when not built\n  (bsc#1227149).\n- commit fddf9eb\n\n- wifi: iwlwifi: mvm: fix SB CFG check (bsc#1227149).\n- wifi: iwlwifi: mvm: add a per-link debugfs (bsc#1227149).\n- wifi: iwlwifi: mvm: rework debugfs handling (bsc#1227149).\n- wifi: iwlwifi: add support for new ini region types\n  (bsc#1227149).\n- wifi: iwlwifi: Extract common prph mac/phy regions data dump\n  logic (bsc#1227149).\n- wifi: iwlwifi: bump FW API to 84 for AX/BZ/SC devices\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: offload IGTK in AP if BIGTK is supported\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: clean up WFPM control bits (bsc#1227149).\n- wifi: iwlwifi: fix opmode start/stop race (bsc#1227149).\n- wifi: iwlwifi: skip opmode start retries on dead transport\n  (bsc#1227149).\n- commit 36551d1\n\n- wifi: iwlwifi: mvm: add support for new wowlan_info_notif\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-d3-fix-IPN-byte-order.patch.\n- commit 0b379ae\n\n- wifi: iwlwifi: pcie: propagate iwl_pcie_gen2_apm_init() error\n  (bsc#1227149).\n- wifi: iwlwifi: add mapping of a periphery register crf for WH RF\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: check for iwl_mvm_mld_update_sta() errors\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: support injection antenna control\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: refactor TX rate handling (bsc#1227149).\n- wifi: iwlwifi: mvm: make pldr_sync AX210 specific (bsc#1227149).\n- wifi: iwlwifi: fail NIC access fast on dead NIC (bsc#1227149).\n- wifi: iwlwifi: pcie: (re-)assign BAR0 on driver bind\n  (bsc#1227149).\n- commit 0882d6d\n\n- wifi: iwlwifi: implement enable/disable for China 2022\n  regulatory (bsc#1227149).\n- wifi: iwlwifi: mvm: handle link-STA allocation in restart\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: iterate active links for STA queues\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: support set_antenna() (bsc#1227149).\n- wifi: iwlwifi: mvm: add a debug print when we get a BAR\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: move listen interval to constants\n  (bsc#1227149).\n- wifi: iwlwifi: no power save during transition to D3\n  (bsc#1227149).\n- wifi: iwlwifi: update context info structure definitions\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: fix recovery flow in CSA (bsc#1227149).\n- wifi: iwlwifi: mvm: enable FILS DF Tx on non-PSC channel\n  (bsc#1227149).\n- commit 5c7efaf\n\n- wifi: iwlwifi: mvm: make \u0026quot;pldr_sync\u0026quot; mode effective\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: log dropped frames (bsc#1227149).\n- wifi: iwlwifi: fw: disable firmware debug asserts (bsc#1227149).\n- wifi: iwlwifi: remove dead-code (bsc#1227149).\n- wifi: iwlwifi: pcie: enable TOP fatal error interrupt\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: give up mem read if HW is dead\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: rescan bus if no parent (bsc#1227149).\n- wifi: iwlwifi: mvm: reduce maximum RX A-MPDU size (bsc#1227149).\n- wifi: iwlwifi: mvm: check link more carefully (bsc#1227149).\n- wifi: iwlwifi: mvm: move RU alloc B2 placement (bsc#1227149).\n- commit 8aa4ff8\n\n- virtio: delete vq in vp_find_vqs_msix() when request_irq()\n  fails (CVE-2024-37353 bsc#1226875).\n- commit 4591439\n\n- wifi: iwlwifi: mvm: fix kernel-doc (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-ensure-offloading-TID-queue-exists.patch.\n- commit 68376c9\n\n- wifi: iwlwifi: pcie: fix kernel-doc issues (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-pcie-fix-RB-status-reading.patch.\n- commit f106797\n\n- wifi: iwlwifi: fw: reconstruct the API/CAPA enum number\n  (bsc#1227149).\n- wifi: iwlwifi: dvm: remove kernel-doc warnings (bsc#1227149).\n- wifi: iwlwifi: queue: fix kernel-doc (bsc#1227149).\n- wifi: iwlwifi: fix some kernel-doc issues (bsc#1227149).\n- wifi: iwlwifi: mvm: disconnect long CSA only w/o alternative\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: increase session protection after CSA\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: support CSA with MLD (bsc#1227149).\n- wifi: iwlmei: don't send nic info with invalid mac address\n  (bsc#1227149).\n- commit 85cbe83\n\n- wifi: iwlwifi: mvm: support flush on AP interfaces\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-iwlwifi-mvm-change-iwl_mvm_flush_sta-API.patch.\n- commit 908ff7c\n\n- wifi: iwlmei: send driver down SAP message only if wiamt is\n  enabled (bsc#1227149).\n- wifi: iwlmei: send HOST_GOES_DOWN message even if wiamt is\n  disabled (bsc#1227149).\n- wifi: iwlmei: don't send SAP messages if AMT is disabled\n  (bsc#1227149).\n- wifi: iwlwifi: remove memory check for LMAC error address\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: enable HE TX/RX \u0026lt;242 tone RU on new RFs\n  (bsc#1227149).\n- wifi: iwlwifi: add Razer to ppag approved list (bsc#1227149).\n- wifi: iwlwifi: pcie: point invalid TFDs to invalid data\n  (bsc#1227149).\n- wifi: iwlwifi: queue: move iwl_txq_gen2_set_tb() up\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: move gen1 TB handling to header\n  (bsc#1227149).\n- commit 92ab309\n\n- wifi: iwlwifi: remove 'def_rx_queue' struct member\n  (bsc#1227149).\n- wifi: iwlwifi: pcie: clean up gen1/gen2 TFD unmap (bsc#1227149).\n- wifi: iwlwifi: remove WARN from read_mem32() (bsc#1227149).\n- wifi: iwlwifi: api: fix a small upper/lower-case typo\n  (bsc#1227149).\n- wifi: iwlwifi: mvm: advertise MLO only if EHT is enabled\n  (bsc#1227149).\n- commit aa9a391\n\n- Add alt-commit to iwlwifi patches\n- commit 865aa7a\n\n- wifi: mac80211: fix unsolicited broadcast probe config\n  (bsc#1227149).\n- wifi: mac80211: initialize SMPS mode correctly (bsc#1227149).\n- wifi: mac80211: fix driver debugfs for vif type change\n  (bsc#1227149).\n- wifi: mac80211: improve CSA/ECSA connection refusal\n  (bsc#1227149).\n- wifi: cfg80211: detect stuck ECSA element in probe resp\n  (bsc#1227149).\n- wifi: mac80211: add/remove driver debugfs entries as appropriate\n  (bsc#1227149).\n- wifi: mac80211: do not re-add debugfs entries during resume\n  (bsc#1227149).\n- commit 769161a\n\n- wifi: mac80211: remove redundant ML element check (bsc#1227149).\n- wifi: cfg80211: Update the default DSCP-to-UP mapping\n  (bsc#1227149).\n- wifi: mac80211: fix spelling typo in comment (bsc#1227149).\n- wifi: mac80211: add a driver callback to check active_links\n  (bsc#1227149).\n- wifi: mac80211: fix advertised TTLM scheduling (bsc#1227149).\n- wifi: cfg80211: avoid double free if updating BSS fails\n  (bsc#1227149).\n- commit e8bab13\n\n- wifi: cfg80211: handle UHB AP and STA power type (bsc#1227149).\n- commit 6021aa4\n\n- wifi: cfg80211: ensure cfg80211_bss_update frees IEs on error\n  (bsc#1227149).\n- wifi: mac80211: allow 64-bit radiotap timestamps (bsc#1227149).\n- wifi: mac80211: rework RX timestamp flags (bsc#1227149).\n- wifi: mac80211: Schedule regulatory channels check on bandwith\n  change (bsc#1227149).\n- wifi: cfg80211: Schedule regulatory check on BSS STA channel\n  change (bsc#1227149).\n- wifi: cfg80211: reg: Support P2P operation on DFS channels\n  (bsc#1227149).\n- wifi: mac80211: Skip association timeout update after comeback\n  rejection (bsc#1227149).\n- wifi: mac80211: address some kerneldoc warnings (bsc#1227149).\n- wifi: cfg80211: address several kerneldoc warnings\n  (bsc#1227149).\n- commit bc44e06\n\n- wifi: cfg80211: generate an ML element for per-STA profiles\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-cfg80211-parse-all-ML-elements-in-an-ML-probe-r.patch.\n- commit d924102\n\n- wifi: cfg80211: introduce cfg80211_ssid_eq() (bsc#1227149).\n- wifi: mac80211: sta_info.c: fix sentence grammar (bsc#1227149).\n- wifi: mac80211: rx.c: fix sentence grammar (bsc#1227149).\n- wifi: cfg80211: fix spelling \u0026amp; punctutation (bsc#1227149).\n- wifi: cfg80211: sort certificates in build (bsc#1227149).\n- wifi: mac80211: drop spurious WARN_ON() in\n  ieee80211_ibss_csa_beacon() (bsc#1227149).\n- wifi: mac80211: don't set ESS capab bit in assoc request\n  (bsc#1227149).\n- wifi: cfg80211: consume both probe response and beacon IEs\n  (bsc#1227149).\n- wifi: cfg80211: Replace ENOTSUPP with EOPNOTSUPP (bsc#1227149).\n- commit 5e5ecdb\n\n- wifi: cfg80211: OWE DH IE handling offload (bsc#1227149).\n- commit 58c8e33\n\n- wifi: cfg80211: add BSS usage reporting (bsc#1227149).\n- Refresh\n  patches.suse/wifi-cfg80211-parse-all-ML-elements-in-an-ML-probe-r.patch.\n- commit 5b2693d\n\n- wifi: mac80211: Replace ENOTSUPP with EOPNOTSUPP (bsc#1227149).\n- wifi: mac80211: add a flag to disallow puncturing (bsc#1227149).\n- wifi: cfg80211: Add support for setting TID to link mapping\n  (bsc#1227149).\n- wifi: mac80211: update some locking documentation (bsc#1227149).\n- wifi: nl80211: Extend del pmksa support for SAE and OWE security\n  (bsc#1227149).\n- wifi: mac80211: cleanup airtime arithmetic with\n  ieee80211_sta_keep_active() (bsc#1227149).\n- wifi: cfg80211: expose nl80211_chan_width_to_mhz for wide\n  sharing (bsc#1227149).\n- wifi: cfg80211: make RX assoc data const (bsc#1227149).\n- commit e4b61c4\n\n- wifi: cfg80211: Extend support for scanning while MLO connected\n  (bsc#1227149).\n- commit b4c9412\n\n- wifi: cfg80211: hold wiphy mutex for send_interface\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-cfg80211-fix-missing-interfaces-when-dumping.patch.\n- commit 2123690\n\n- wifi: cfg80211: fix CQM for non-range use (bsc#1227149).\n- commit 3c8ba48\n\n- wifi: nl80211: refactor nl80211_send_mlme_event() arguments\n  (bsc#1227149).\n- wifi: mac80211: Extend support for scanning while MLO connected\n  (bsc#1227149).\n- wifi: mac80211: use wiphy locked debugfs for sdata/link\n  (bsc#1227149).\n- wifi: mac80211: use wiphy locked debugfs helpers for agg_status\n  (bsc#1227149).\n- wifi: cfg80211: add locked debugfs wrappers (bsc#1227149).\n- wifi: mac80211: drop robust action frames before assoc\n  (bsc#1227149).\n- wifi: cfg80211: Allow AP/P2PGO to indicate port authorization\n  to peer STA/P2PClient (bsc#1227149).\n- commit 03e12a0\n\n- blacklist: drop the wifi entries to be backported\n- commit 891934b\n\n- wifi: mac80211: fix another key installation error path\n  (bsc#1227149).\n- wifi: mac80211: rename struct cfg80211_rx_assoc_resp to\n  cfg80211_rx_assoc_resp_data (bsc#1227149).\n- wifi: mac80211: rename ieee80211_tx_status() to\n  ieee80211_tx_status_skb() (bsc#1227149).\n- wifi: mac80211: fix change_address deadlock during unregister\n  (bsc#1227149).\n- wifi: mac80211: Add __counted_by for struct ieee802_11_elems\n  and use struct_size() (bsc#1227149).\n- wifi: remove unused argument of ieee80211_get_tdls_action()\n  (bsc#1227149).\n- wifi: mac80211: fix header kernel-doc typos (bsc#1227149).\n- wifi: cfg80211: fix header kernel-doc typos (bsc#1227149).\n- wifi: mac80211: add link id to mgd_prepare_tx() (bsc#1227149).\n- wifi: mac80211: Check if we had first beacon with relevant links\n  (bsc#1227149).\n- commit fa14599\n\n- kABI fix of KVM: x86/pmu: Prioritize VMX interception over\n- commit 1f1d114\n\n- wifi: mac80211: flush STA queues on unauthorization\n  (bsc#1227149).\n- wifi: mac80211: purge TX queues in flush_queues flow\n  (bsc#1227149).\n- wifi: cfg80211: wext: convert return value to kernel-doc\n  (bsc#1227149).\n- wifi: mac80211: fix a expired vs. cancel race in roc\n  (bsc#1227149).\n- wifi: mac80211: make mgd_protect_tdls_discover MLO-aware\n  (bsc#1227149).\n- wifi: cfg80211: Fix typo in documentation (bsc#1227149).\n- wifi: cfg80211: Handle specific BSSID in 6GHz scanning\n  (bsc#1227149).\n- wifi: mac80211: mesh: fix some kdoc warnings (bsc#1227149).\n- wifi: cfg80211: Include operating class 137 in 6GHz band\n  (bsc#1227149).\n- wifi: mac80211: Rename and update\n  IEEE80211_VIF_DISABLE_SMPS_OVERRIDE (bsc#1227149).\n- commit 585676b\n\n- wifi: mac80211: split ieee80211_drop_unencrypted_mgmt() return\n  value (bsc#1227149).\n- commit 3835ef2\n\n- wifi: mac80211: fix error path key leak (bsc#1227149).\n- Refresh patches.suse/wifi-mac80211-remove-key_mtx.patch.\n- commit 3b93fe9\n\n- wifi: mac80211: fix potential key leak (bsc#1227149).\n- Refresh patches.suse/wifi-mac80211-remove-key_mtx.patch.\n- commit 9fa5ec3\n\n- wifi: mac80211: handle debugfs when switching to/from MLO\n  (bsc#1227149).\n- wifi: mac80211: add a driver callback to add vif debugfs\n  (bsc#1227149).\n- wifi: mac80211: cleanup auth_data only if association continues\n  (bsc#1227149).\n- wifi: mac80211: add back SPDX identifier (bsc#1227149).\n- wifi: mac80211: fix ieee80211_drop_unencrypted_mgmt return\n  type/value (bsc#1227149).\n- wifi: mac80211: expand __ieee80211_data_to_8023() status\n  (bsc#1227149).\n- wifi: mac80211: remove RX_DROP_UNUSABLE (bsc#1227149).\n- commit e0a6a5e\n\n- wifi: cfg80211: add local_state_change to deauth trace\n  (bsc#1227149).\n- wifi: mac80211: reject MLO channel configuration if not\n  supported (bsc#1227149).\n- wifi: mac80211: report per-link error during association\n  (bsc#1227149).\n- wifi: cfg80211: report per-link errors during association\n  (bsc#1227149).\n- wifi: mac80211: support antenna control in injection\n  (bsc#1227149).\n- wifi: mac80211: support handling of advertised TID-to-link\n  mapping (bsc#1227149).\n- wifi: mac80211: add support for parsing TID to Link mapping\n  element (bsc#1227149).\n- wifi: mac80211: Notify the low level driver on change in MLO\n  valid links (bsc#1227149).\n- wifi: mac80211: describe return values in kernel-doc\n  (bsc#1227149).\n- wifi: cfg80211: reg: describe return values in kernel-doc\n  (bsc#1227149).\n- commit df6c84a\n\n- wifi: mac80211: allow for_each_sta_active_link() under RCU\n  (bsc#1227149).\n- wifi: mac80211: relax RCU check in for_each_vif_active_link()\n  (bsc#1227149).\n- wifi: mac80211: don't connect to an AP while it's in a CSA\n  process (bsc#1227149).\n- wifi: mac80211: update the rx_chains after set_antenna()\n  (bsc#1227149).\n- wifi: mac80211: use bandwidth indication element for CSA\n  (bsc#1227149).\n- wifi: cfg80211: split struct cfg80211_ap_settings (bsc#1227149).\n- wifi: mac80211: ethtool: always hold wiphy mutex (bsc#1227149).\n- wifi: cfg80211: make read-only array centers_80mhz static const\n  (bsc#1227149).\n- wifi: cfg80211: save power spectral density(psd) of regulatory\n  rule (bsc#1227149).\n- wifi: cfg80211: fix kernel-doc for wiphy_delayed_work_flush()\n  (bsc#1227149).\n- commit 7f3b9af\n\n- wifi: mac80211: Sanity check tx bitrate if not provided by\n  driver (bsc#1227149).\n- wifi: cfg80211: export DFS CAC time and usable state helper\n  functions (bsc#1227149).\n- wifi: cfg80211: call reg_call_notifier on beacon hints\n  (bsc#1227149).\n- wifi: cfg80211: allow reg update by driver even if wiphy-\u0026gt;regd\n  is set (bsc#1227149).\n- wifi: mac80211: additions to change_beacon() (bsc#1227149).\n- wifi: nl80211: additions to NL80211_CMD_SET_BEACON\n  (bsc#1227149).\n- wifi: cfg80211: modify prototype for change_beacon\n  (bsc#1227149).\n- wifi: mac80211: fixes in FILS discovery updates (bsc#1227149).\n- wifi: nl80211: fixes to FILS discovery updates (bsc#1227149).\n- wifi: lib80211: remove unused variables iv32 and iv16\n  (bsc#1227149).\n- commit 67ccb18\n\n- wifi: mac80211: fix various kernel-doc issues (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-track-capability-opmode-NSS-separately.patch.\n- commit b1c042f\n\n- wifi: mac80211: remove shifted rate support (bsc#1227149).\n- wifi: cfg80211: remove scan_width support (bsc#1227149).\n- wifi: wext: avoid extra calls to strlen() in ieee80211_bss()\n  (bsc#1227149).\n- wifi: mac80211: fix channel switch link data (bsc#1227149).\n- wifi: mac80211: Do not force off-channel for management Tx\n  with MLO (bsc#1227149).\n- wifi: mac80211: take MBSSID/EHT data also from probe resp\n  (bsc#1227149).\n- wifi: mac80211: Print local link address during authentication\n  (bsc#1227149).\n- wifi: cfg80211: reg: fix various kernel-doc issues\n  (bsc#1227149).\n- wifi: mac80211: remove unnecessary struct forward declaration\n  (bsc#1227149).\n- commit 5936128\n\n- wifi: cfg80211: annotate iftype_data pointer with sparse\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-cfg80211-fix-wiphy-delayed-work-queueing.patch.\n- commit 031b8a7\n\n- wifi: mac80211: add more warnings about inserting sta info\n  (bsc#1227149).\n- wifi: mac80211: add support for mld in ieee80211_chswitch_done\n  (bsc#1227149).\n- wifi: mac80211: fix BA session teardown race (bsc#1227149).\n- wifi: mac80211: fix TXQ error path and cleanup (bsc#1227149).\n- commit 8e5b425\n\n- wifi: cfg80211: remove wdev mutex (bsc#1227149).\n- commit 4d7cf99\n\n- wifi: mac80211: set wiphy for virtual monitors (bsc#1227149).\n- commit 6022030\n\n- iommu/amd: Fix sysfs leak in iommu init (git-fixes).\n- commit 5b11e2a\n\n- wifi: mac80211: remove key_mtx (bsc#1227149).\n- commit 36d4ad3\n\n- iommu: Return right value in iommu_sva_bind_device()\n  (git-fixes).\n- commit 769b149\n\n- wifi: mac80211: remove sta_mtx (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-check-if-the-existing-link-config-rema.patch.\n- Refresh\n  patches.suse/wifi-mac80211-don-t-re-add-debugfs-during-reconfig.patch.\n- commit 5b967e8\n\n- wifi: mac80211: reduce iflist_mtx (bsc#1227149).\n- wifi: mac80211: remove local-\u0026gt;mtx (bsc#1227149).\n- wifi: mac80211: remove ampdu_mlme.mtx (bsc#1227149).\n- wifi: mac80211: remove chanctx_mtx (bsc#1227149).\n- wifi: mac80211: take wiphy lock for MAC addr change\n  (bsc#1227149).\n- wifi: mac80211: extend wiphy lock in interface removal\n  (bsc#1227149).\n- wifi: mac80211: hold wiphy_lock around concurrency checks\n  (bsc#1227149).\n- wifi: mac80211: ethtool: hold wiphy mutex (bsc#1227149).\n- commit b3dacec\n\n- wifi: mac80211: check wiphy mutex in ops (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-do-not-pass-AP_VLAN-vif-pointer-to-dri.patch.\n- commit 3b00636\n\n- wifi: cfg80211: check wiphy mutex is held for wdev mutex\n  (bsc#1227149).\n- wifi: cfg80211: hold wiphy lock in\n  cfg80211_any_wiphy_oper_chan() (bsc#1227149).\n- wifi: cfg80211: sme: hold wiphy lock for wdev iteration\n  (bsc#1227149).\n- wifi: cfg80211: reg: hold wiphy mutex for wdev iteration\n  (bsc#1227149).\n- wifi: mac80211: move color change finalize to wiphy work\n  (bsc#1227149).\n- wifi: mac80211: move CSA finalize to wiphy work (bsc#1227149).\n- wifi: mac80211: move filter reconfig to wiphy work\n  (bsc#1227149).\n- wifi: mac80211: move tspec work to wiphy work (bsc#1227149).\n- wifi: mac80211: move key tailroom work to wiphy work\n  (bsc#1227149).\n- commit d930910\n\n- wifi: mac80211: move dynamic PS to wiphy work (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-move-sched-scan-stop-work-to-wiphy-wor.patch.\n- commit 6350819\n\n- wifi: mac80211: move DFS CAC work to wiphy work (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-move-radar-detect-work-to-wiphy-work.patch.\n- commit 46fc728\n\n- wifi: mac80211: move TDLS work to wiphy work (bsc#1227149).\n- wifi: mac80211: move link activation work to wiphy work\n  (bsc#1227149).\n- wifi: mac80211: lock wiphy in IP address notifier (bsc#1227149).\n- wifi: mac80211: move monitor work to wiphy work (bsc#1227149).\n- wifi: mac80211: add more ops assertions (bsc#1227149).\n- wifi: mac80211: convert A-MPDU work to wiphy work (bsc#1227149).\n- wifi: mac80211: flush wiphy work where appropriate\n  (bsc#1227149).\n- wifi: cfg80211: check RTNL when iterating devices (bsc#1227149).\n- commit 425f8ad\n\n- wifi: mac80211: lock wiphy for aggregation debugfs\n  (bsc#1227149).\n- wifi: mac80211: hold wiphy lock in netdev/link debugfs\n  (bsc#1227149).\n- wifi: mac80211: debugfs: lock wiphy instead of RTNL\n  (bsc#1227149).\n- wifi: mac80211: fix SMPS status handling (bsc#1227149).\n- wifi: mac80211: Fix SMPS handling in the context of MLO\n  (bsc#1227149).\n- wifi: mac80211: rework ack_frame_id handling a bit\n  (bsc#1227149).\n- wifi: mac80211: tx: clarify conditions in if statement\n  (bsc#1227149).\n- wifi: mac80211: Do not include crypto/algapi.h (bsc#1227149).\n- wifi: cfg80211: improve documentation for flag fields\n  (bsc#1227149).\n- wifi: nl80211: Remove unused declaration\n  nl80211_pmsr_dump_results() (bsc#1227149).\n- commit 75d4c97\n\n- wifi: mac80211: mesh: Remove unused function declaration\n  mesh_ids_set_default() (bsc#1227149).\n- commit b3033c6\n\n- wifi: mac80211: Remove unused function declarations\n  (bsc#1227149).\n- Refresh\n  patches.suse/wifi-mac80211-move-radar-detect-work-to-wiphy-work.patch.\n- commit 343f020\n\n- x86/tsc: Trust initial offset in architectural TSC-adjust MSRs\n  (bsc#1222015 bsc#1226962).\n- commit ba98363\n\n- KVM: x86/pmu: Prioritize VMX interception over #GP on RDPMC\n  due to bad index (bsc#1226158).\n- commit fdb5ce1\n\n- net/9p: fix uninit-value in p9_client_rpc() (CVE-2024-39301\n  bsc#1226994).\n- commit d8af728\n\n- arm64/io: add constant-argument check (bsc#1226502 git-fixes)\n- commit 45e8b78\n\n- struct acpi_ec kABI workaround (git-fixes).\n- commit 3605f74\n\n- wifi: mt76: mt7921s: fix potential hung tasks during chip\n  recovery (stable-fixes).\n- commit d9504b4\n\n- drm/drm_file: Fix pid refcounting race (git-fixes).\n- drm/i915/gt: Fix potential UAF by revoke of fence registers\n  (git-fixes).\n- drm/amdgpu: Fix pci state save during mode-1 reset (git-fixes).\n- drm/panel: simple: Add missing display timing flags for KOE\n  TX26D202VM0BWA (git-fixes).\n- drm/fbdev-dma: Only set smem_start is enable per module option\n  (git-fixes).\n- net: usb: ax88179_178a: improve link status logs (git-fixes).\n- net: phy: micrel: add Microchip KSZ 9477 to the device table\n  (git-fixes).\n- batman-adv: Don't accept TT entries for out-of-spec VIDs\n  (git-fixes).\n- can: mcp251xfd: fix infinite loop when xmit fails (git-fixes).\n- net: can: j1939: recover socket queue on CAN bus error during\n  BAM transmission (git-fixes).\n- net: can: j1939: Initialize unused data in j1939_send_one()\n  (git-fixes).\n- net: can: j1939: enhanced error handling for tightly received\n  RTS messages in xtp_rx_rts_session_new (git-fixes).\n- ASoC: fsl-asoc-card: set priv-\u0026gt;pdev before using it (git-fixes).\n- ASoC: amd: acp: remove i2s configuration check in\n  acp_i2s_probe() (git-fixes).\n- ASoC: amd: acp: add a null check for chip_pdev structure\n  (git-fixes).\n- ASoC: q6apm-lpass-dai: close graph on prepare errors\n  (git-fixes).\n- ASoC: rockchip: i2s-tdm: Fix trcm mode by setting clock on\n  right mclk (git-fixes).\n- ALSA: seq: Fix missing MSB in MIDI2 SPP conversion (git-fixes).\n- ALSA: hda/realtek: Fix conflicting quirk for PCI SSID 17aa:3820\n  (git-fixes).\n- ALSA: seq: Fix missing channel at encoding RPN/NRPN MIDI2\n  messages (git-fixes).\n- drm/amdgpu: fix UBSAN warning in kv_dpm.c (stable-fixes).\n- drm/radeon: fix UBSAN warning in kv_dpm.c (stable-fixes).\n- ACPI: EC: Evaluate orphan _REG under EC device (git-fixes).\n- serial: exar: adding missing CTI and Exar PCI ids\n  (stable-fixes).\n- serial: imx: Introduce timeout when waiting on transmitter empty\n  (stable-fixes).\n- usb: gadget: function: Remove usage of the deprecated\n  ida_simple_xx() API (stable-fixes).\n- usb: typec: ucsi_glink: drop special handling for CCI_BUSY\n  (stable-fixes).\n- usb: dwc3: pci: Don't set \u0026quot;linux,phy_charger_detect\u0026quot; property\n  on Lenovo Yoga Tab2 1380 (stable-fixes).\n- usb: misc: uss720: check for incompatible versions of the\n  Belkin F5U002 (stable-fixes).\n- usb: gadget: uvc: configfs: ensure guid to be valid before set\n  (stable-fixes).\n- cpufreq: amd-pstate: fix memory leak on CPU EPP exit\n  (stable-fixes).\n- ACPI: EC: Install address space handler at the namespace root\n  (stable-fixes).\n- PCI/PM: Avoid D3cold for HP Pavilion 17 PC/1972 PCIe Ports\n  (stable-fixes).\n- power: supply: cros_usbpd: provide ID table for avoiding\n  fallback match (stable-fixes).\n- platform/x86: toshiba_acpi: Add quirk for buttons on Z830\n  (stable-fixes).\n- ASoC: Intel: sof-sdw: really remove FOUR_SPEAKER quirk\n  (git-fixes).\n- ASoC: Intel: sof_sdw: add quirk for Dell SKU 0C0F\n  (stable-fixes).\n- ASoC: Intel: sof_sdw: add JD2 quirk for HP Omen 14\n  (stable-fixes).\n- drm/lima: mask irqs in timeout path before hard reset\n  (stable-fixes).\n- drm/lima: add mask irq callback to gp and pp (stable-fixes).\n- drm/amd/display: revert Exit idle optimizations before HDCP\n  execution (stable-fixes).\n- drm/amd/display: Exit idle optimizations before HDCP execution\n  (stable-fixes).\n- Bluetooth: ath3k: Fix multiple issues reported by checkpatch.pl\n  (stable-fixes).\n- batman-adv: bypass empty buckets in batadv_purge_orig_ref()\n  (stable-fixes).\n- ssb: Fix potential NULL pointer dereference in\n  ssb_device_uevent() (stable-fixes).\n- HID: Add quirk for Logitech Casa touchpad (stable-fixes).\n- ACPI: x86: Add PNP_UART1_SKIP quirk for Lenovo Blade2 tablets\n  (stable-fixes).\n- crypto: hisilicon/qm - Add the err memory release process to\n  qm uninit (stable-fixes).\n- crypto: hisilicon/sec - Fix memory leak for sec resource release\n  (stable-fixes).\n- commit bbedf42\n\n- net/mlx5: Fix MTMP register capability offset in MCAM register\n  (git-fixes).\n- bonding: fix oops during rmmod (CVE-2024-39296 bsc#1226989).\n- e1000e: change usleep_range to udelay in PHY mdic access\n  (CVE-2024-39296 bsc#1226989).\n- dpll: spec: use proper enum for pin capabilities attribute\n  (git-fixes).\n- tools: ynl: fix handling of multiple mcast groups (git-fixes).\n- tools: ynl: don't leak mcast_groups on init error (git-fixes).\n- tools: ynl: make sure we always pass yarg to mnl_cb_run\n  (git-fixes).\n- commit 164182f\n\n- iommu/vt-d: Fix WARN_ON in iommu probe path (git-fixes).\n- iommu/vt-d: Use device rbtree in iopf reporting path\n  (bsc#1224751 CVE-2024-35843).\n- iommu/vt-d: Use rbtree to track iommu probed devices\n  (git-fixes).\n- commit 5f366a7\n\n- nilfs2: fix potential kernel bug due to lack of writeback flag\n  waiting (bsc#1227066 CVE-2024-37078).\n- commit bd6df7f\n\n- kABI workaround for FPGA changes (CVE-2024-35247 bsc#1226948\n  CVE-2024-36479 bsc#1226949 CVE-2024-37021 bsc#1226950).\n- commit 4b32e86\n\n- fpga: region: add owner module and take its refcount\n  (CVE-2024-35247 bsc#1226948).\n- Refresh patches.suse/fpga-add-kABI-padding.patch.\n- commit 670051c\n\n- fpga: manager: add owner module and take its refcount\n  (CVE-2024-37021 bsc#1226950).\n- Refresh patches.suse/fpga-add-kABI-padding.patch.\n- commit 34a2533\n\n- fpga: bridge: add owner module and take its refcount\n  (CVE-2024-36479 bsc#1226949).\n- commit 545627b\n\n- Fix build failure on powerpc\n  Refresh\n  patches.suse/powerpc-uaccess-Use-YZ-asm-constraint-for-ld.patch.\n- commit 4cafc95\n\n- kabi: Use __iowriteXX_copy_inlined for in-kernel modules (bsc#1226502)\n- commit 54c3656\n\n- net: hns3: Remove io_stop_wc() calls after __iowrite64_copy() (bsc#1226502)\n- commit 5ea0ed2\n\n- arm64/io: Provide a WC friendly __iowriteXX_copy() (bsc#1226502)\n- commit a39a193\n\n- s390: Stop using weak symbols for __iowrite64_copy() (bsc#1226502)\n- commit 4a798a5\n\n- s390: Implement __iowrite32_copy() (bsc#1226502)\n- commit 80e689b\n\n- x86: Stop using weak symbols for __iowrite32_copy() (bsc#1226502)\n- commit 894aede\n\n- net/mlx5: Use mlx5_ipsec_rx_status_destroy to correctly delete\n  status rules (CVE-2024-36281 bsc#1226799).\n- commit a7197fd\n\n- ceph: switch to use cap_delay_lock for the unlink delay list\n  (bsc#1226022).\n- ceph: break the check delayed cap loop every 5s (bsc#1226022).\n- ceph: add ceph_cap_unlink_work to fire check_caps() immediately\n  (bsc#1226022).\n- ceph: always queue a writeback when revoking the Fb caps\n  (bsc#1226022).\n- ceph: always check dir caps asynchronously (bsc#1226022).\n- commit 7eb372a\n\n- arm64: mm: Don't remap pgtables for allocate vs populate\n  (jsc#PED-8688).\n- arm64: mm: Batch dsb and isb when populating pgtables\n  (jsc#PED-8688).\n- arm64: mm: Don't remap pgtables per-cont(pte|pmd) block\n  (jsc#PED-8688).\n- commit fdec960\n\n- epoll: be better about file lifetimes (bsc#1226610\n  CVE-2024-38580).\n- commit 4ff3c13\n\n- null_blk: Fix return value of nullb_device_power_store()\n  (bsc#1226841 CVE-2024-36478).\n- commit f213a2a\n\n- f2fs: multidev: fix to recognize valid zero block address (bsc#1226879, CVE-2024-38636).\n- commit ec1ded3\n\n- s390/cpacf: Make use of invalid opcode produce a link error\n  (git-fixes bsc#1227072).\n- commit 24c76d1\n\n- s390/ap: Fix crash in AP internal function modify_bitmap()\n  (CVE-2024-38661 bsc#1226996 git-fixes).\n- commit 456a41d\n\n- selftests/bpf: Add sockopt case to verify prog_type (bsc#1226789\n  CVE-2024-38564).\n- selftests/bpf: Extend sockopt tests to use BPF_LINK_CREATE\n  (bsc#1226789 CVE-2024-38564).\n- bpf: Add BPF_PROG_TYPE_CGROUP_SKB attach type enforcement in\n  BPF_LINK_CREATE (bsc#1226789 CVE-2024-38564).\n- commit 2f12314\n\n- bpf: Fix verifier assumptions about socket-\u0026gt;sk (bsc#1226790\n  CVE-2024-38566).\n- commit dc586b3\n\n- scsi: qedf: Ensure the copied buf is NUL terminated (bsc#1226758\n  CVE-2024-38559).\n- scsi: bfa: Ensure the copied buf is NUL terminated (bsc#1226786\n  CVE-2024-38560).\n- scsi: bnx2fc: Remove spin_lock_bh while releasing resources\n  after upload (bsc#1224767 CVE-2024-36919).\n- commit 3cabc93\n\n- nvme: do not retry authentication failures (bsc#1186716).\n- nvme-fabrics: short-circuit reconnect retries (bsc#1186716).\n- nvme: return kernel error codes for admin queue connect\n  (bsc#1186716).\n- nvmet: return DHCHAP status codes from nvmet_setup_auth()\n  (bsc#1186716).\n- nvmet: lock config semaphore when accessing DH-HMAC-CHAP key\n  (bsc#1186716).\n- commit ac2b954\n\n- net: sched: sch_multiq: fix possible OOB write in multiq_tune()\n  (CVE-2024-36978 bsc#1226514).\n- commit 3b6fd26\n\n- nvmet: prevent sprintf() overflow in nvmet_subsys_nsid_exists()\n  (git-fixes).\n- commit 556ea4a\n\n- null_blk: fix null-ptr-dereference while configuring 'power'\n  and 'submit_queues' (bsc#1226841 CVE-2024-36478).\n- commit d0b4b2a\n\n- block: fix overflow in blk_ioctl_discard() (bsc#1225770\n  CVE-2024-36917).\n- commit bbdd816\n\n- mm: Avoid overflows in dirty throttling logic (bsc#1222364\n  CVE-2024-26720).\n- commit 77e301c\n\n- net/sched: taprio: always validate TCA_TAPRIO_ATTR_PRIOMAP\n  (CVE-2024-36974 bsc#1226519).\n- commit f911add\n\n- PCI: Clear Secondary Status errors after enumeration (bsc#1226928)\n- commit 606f4e7\n\n- nvmet-passthru: propagate status from id override functions\n  (git-fixes).\n- nvme: fix nvme_pr_* status code parsing (git-fixes).\n- nvmet: fix nvme status code when namespace is disabled\n  (git-fixes).\n- nvmet-tcp: fix possible memory leak when tearing down a\n  controller (git-fixes).\n- nvmet-auth: replace pr_debug() with pr_err() to report an error\n  (git-fixes).\n- nvmet-auth: return the error code to the nvmet_auth_host_hash()\n  callers (git-fixes).\n- nvme: find numa distance only if controller has valid numa id\n  (git-fixes).\n- commit 3709ef4\n\n- nvme: cancel pending I/O if nvme controller is in terminal state\n  (bsc#1226503).\n  Refresh:\n  - patches.suse/nvme-multipath-fix-io-accounting-on-failover.patch\n- commit 7dbf1d4\n\n- stm class: Fix a double free in stm_register_device()\n  (CVE-2024-38627 bsc#1226857).\n- commit ef5c589\n\n- Input: ili210x - fix ili251x_read_touch_data() return value\n  (git-fixes).\n- pinctrl: rockchip: fix pinmux reset in rockchip_pmx_set\n  (git-fixes).\n- pinctrl: rockchip: use dedicated pinctrl type for RK3328\n  (git-fixes).\n- pinctrl: rockchip: fix pinmux bits for RK3328 GPIO3-B pins\n  (git-fixes).\n- pinctrl: rockchip: fix pinmux bits for RK3328 GPIO2-B pins\n  (git-fixes).\n- pinctrl: fix deadlock in create_pinctrl() when handling\n  - EPROBE_DEFER (git-fixes).\n- pinctrl: qcom: spmi-gpio: drop broken pm8008 support\n  (git-fixes).\n- commit a1b46e3\n\n- drivers/perf: hisi: hns3: Actually use\n  devm_add_action_or_reset() (CVE-2024-38603 bsc#1226842).\n- commit 4db6ba6\n\n- NFSv4.x: by default serialize open/close operations (bsc#1223863 bsc#1227362).\n- commit 6ed2498\n\n- work around gcc bugs with 'asm goto' with outputs (git-fixes).\n- Refresh\n  patches.suse/powerpc-uaccess-Fix-build-errors-seen-with-GCC-13-14.patch.\n- Refresh\n  patches.suse/powerpc-uaccess-Use-YZ-asm-constraint-for-ld.patch.\n- commit eac0f3f\n\n- x86/asm: Remove the __iomem annotation of movdir64b()'s dst argument (git-fixes).\n- commit 8a8a749\n\n- x86/tdx: Preserve shared bit on mprotect() (git-fixes).\n- commit ea4a8f6\n\n- x86/sev: Fix position dependent variable references in startup code (git-fixes).\n- Refresh\n  patches.suse/x86-coco-Require-seeding-RNG-with-RDRAND-on-CoCo-systems.patch.\n- commit 2efccd0\n\n- x86/mce: Mark fatal MCE's page as poison to avoid panic in the kdump  kernel (git-fixes).\n- Refresh\n  patches.suse/x86-mce-Differentiate-real-hardware-MCs-from-TDX-erratum-o.patch.\n- commit d75f0fd\n\n- x86/kexec: Fix bug with call depth tracking (git-fixes).\n- commit 926155d\n\n- x86/nmi: Drop unused declaration of proc_nmi_enabled() (git-fixes).\n- commit 3441c2e\n\n- x86/insn: Fix PUSH instruction in x86 instruction decoder opcode map (git-fixes).\n- commit 820085a\n\n- x86/uaccess: Fix missed zeroing of ia32 u64 get_user() range checking (git-fixes).\n- commit 1c4403a\n\n- blacklist.conf: Blacklist invalid commit (git-fixes)\n  We don't support CPU_MITIGATIONS hence to need for this logic\n- commit 6899966\n\n- net: fec: remove .ndo_poll_controller to avoid deadlocks\n  (CVE-2024-38553 bsc#1226744).\n- net/mlx5: Discard command completions in internal error\n  (CVE-2024-38555 bsc#1226607).\n- net/mlx5: Add a timeout to acquire the command queue semaphore\n  (CVE-2024-38556 bsc#1226774).\n- net/mlx5: Reload only IB representors upon lag disable/enable\n  (CVE-2024-38557 bsc#1226781).\n- net/mlx5e: Fix netif state handling (CVE-2024-38608\n  bsc#1226746).\n- eth: sungem: remove .ndo_poll_controller to avoid deadlocks\n  (CVE-2024-38597 bsc#1226749).\n- net: stmmac: move the EST lock to struct stmmac_priv\n  (CVE-2024-38594 bsc#1226734).\n- commit d6f20aa\n\n- i2c: ocores: set IACK bit after core is enabled (git-fixes).\n- commit dc04936\n\n- regulator: bd71815: fix ramp values (git-fixes).\n- regulator: core: Fix modpost error \u0026quot;regulator_get_regmap\u0026quot;\n  undefined (git-fixes).\n- spi: stm32: qspi: Clamp stm32_qspi_get_mode() output to\n  CCR_BUSWIDTH_4 (git-fixes).\n- spi: stm32: qspi: Fix dual flash mode sanity test in\n  stm32_qspi_setup() (git-fixes).\n- firmware: psci: Fix return value from psci_system_suspend()\n  (git-fixes).\n- commit 5c1d1d7\n\n- RDMA/mlx5: Add check for srq max_sge attribute (git-fixes)\n- commit 5a7a44c\n\n- RDMA/mlx5: Fix unwind flow as part of mlx5_ib_stage_init_init (git-fixes)\n- commit a73b3cb\n\n- RDMA/mlx5: Ensure created mkeys always have a populated rb_key (git-fixes)\n- commit 194920a\n\n- RDMA/mlx5: Follow rb_key.ats when creating new mkeys (git-fixes)\n- commit 93d4abb\n\n- RDMA/mlx5: Remove extra unlock on error path (git-fixes)\n- commit 662ecd8\n\n- RDMA/rxe: Fix responder length checking for UD request packets (git-fixes)\n- commit 77ecb50\n\n- RDMA/rxe: Fix data copy for IB_SEND_INLINE (git-fixes)\n- commit 9ec1cd9\n\n- RDMA/bnxt_re: Fix the max msix vectors macro (git-fixes)\n- commit 19f32fe\n\n- drm/i915/mso: using joiner is not possible with eDP MSO\n  (git-fixes).\n- ALSA: hda/realtek: Add quirk for Lenovo Yoga Pro 7 14AHP9\n  (stable-fixes).\n- ACPICA: Revert \u0026quot;ACPICA: avoid Info: mapping multiple BARs. Your\n  kernel is fine.\u0026quot; (git-fixes).\n- thermal/drivers/mediatek/lvts_thermal: Return error in case\n  of invalid efuse data (git-fixes).\n- dmaengine: ioatdma: Fix missing kmem_cache_destroy()\n  (git-fixes).\n- dmaengine: ioatdma: Fix kmemleak in ioat_pci_probe()\n  (git-fixes).\n- dmaengine: ioatdma: Fix error path in ioat3_dma_probe()\n  (git-fixes).\n- dmaengine: ioatdma: Fix leaking on version mismatch (git-fixes).\n- dmaengine: idxd: Fix possible Use-After-Free in\n  irq_process_work_list (git-fixes).\n- xhci: Apply broken streams quirk to Etron EJ188 xHCI host\n  (stable-fixes).\n- xhci: Apply reset resume quirk to Etron EJ188 xHCI host\n  (stable-fixes).\n- xhci: Set correct transferred length for cancelled bulk\n  transfers (stable-fixes).\n- drm/exynos/vidi: fix memory leak in .get_modes() (stable-fixes).\n- ACPI: x86: Force StorageD3Enable on more products\n  (stable-fixes).\n- nilfs2: fix nilfs_empty_dir() misjudgment and long loop on\n  I/O errors (git-fixes).\n- kheaders: explicitly define file modes for archived headers\n  (stable-fixes).\n- intel_th: pci: Add Lunar Lake support (stable-fixes).\n- intel_th: pci: Add Meteor Lake-S support (stable-fixes).\n- intel_th: pci: Add Sapphire Rapids SOC support (stable-fixes).\n- intel_th: pci: Add Granite Rapids SOC support (stable-fixes).\n- intel_th: pci: Add Granite Rapids support (stable-fixes).\n- clkdev: Update clkdev id usage to allow for longer names\n  (stable-fixes).\n- nilfs2: return the mapped address from nilfs_get_page()\n  (stable-fixes).\n- commit 8bec8e0\n\n- drivers/perf: hisi_pcie: Fix out-of-bound access when valid\n  event group (CVE-2024-38569 bsc#1226772).\n- commit 6715b52\n\n- drivers/perf: hisi: hns3: Fix out-of-bound access when valid\n  event group (CVE-2024-38568 bsc#1226771).\n- commit 33d69e0\n\n- sched/core: Fix incorrect initialization of the 'burst'\n  parameter in cpu_max_write() (bsc#1226791).\n- commit 6b67975\n\n- blacklist.conf: Add 6fb454606153 sched: Simplify tg_set_cfs_bandwidth()\n- commit 4e56705\n\n- virtio_net: checksum offloading handling fix (git-fixes).\n- commit d283709\n\n- virtio_net: avoid data-races on dev-\u0026gt;stats fields (git-fixes).\n- commit 50373fb\n\n- vfio/fsl-mc: Block calling interrupt handler without trigger\n  (bsc#1222810 CVE-2024-26814).\n- commit b1aee55\n\n- vfio/platform: Create persistent IRQ handlers (bsc#1222809\n  CVE-2024-26813).\n- commit 28ae90e\n\n- ALSA: hda/realtek: Add more codec ID to no shutup pins list\n  (stable-fixes).\n- ALSA: hda/realtek: Add quirk for Lenovo Yoga Pro 7 14ARP8\n  (stable-fixes).\n- ALSA: hda/realtek: Support Lenovo Thinkbook 13x Gen 4\n  (stable-fixes).\n- ALSA: hda/realtek: Support Lenovo Thinkbook 16P Gen 5\n  (stable-fixes).\n- ALSA: hda: cs35l41: Support Lenovo Thinkbook 13x Gen 4\n  (stable-fixes).\n- ALSA: hda: cs35l41: Support Lenovo Thinkbook 16P Gen 5\n  (stable-fixes).\n- ALSA: hda/realtek: Limit mic boost on N14AP7 (stable-fixes).\n- ALSA: hda/realtek: fix mute/micmute LEDs don't work for ProBook\n  445/465 G11 (stable-fixes).\n- ALSA: hda: cs35l56: Fix lifecycle of codec pointer\n  (stable-fixes).\n- commit 3c2cbdc\n\n- net: usb: rtl8150 fix unintiatilzed variables in\n  rtl8150_get_link_ksettings (git-fixes).\n- net: usb: ax88179_178a: improve reset check (git-fixes).\n- net: phy: mxl-gpy: Remove interrupt mask clearing from\n  config_init (git-fixes).\n- net: lan743x: Support WOL at both the PHY and MAC appropriately\n  (git-fixes).\n- net: lan743x: disable WOL upon resume to restore full data\n  path operation (git-fixes).\n- ALSA: hda/realtek: Enable headset mic on IdeaPad 330-17IKB 81DM\n  (git-fixes).\n- ALSA: hda: tas2781: Component should be unbound before\n  deconstruction (git-fixes).\n- ALSA: hda: cs35l41: Component should be unbound before\n  deconstruction (git-fixes).\n- ALSA: hda: cs35l56: Component should be unbound before\n  deconstruction (git-fixes).\n- ALSA/hda: intel-dsp-config: Document AVS as dsp_driver option\n  (git-fixes).\n- ALSA: hda/realtek: Remove Framework Laptop 16 from quirks\n  (git-fixes).\n- ALSA: seq: ump: Fix missing System Reset message handling\n  (git-fixes).\n- ALSA: hda: cs35l41: Possible null pointer dereference in\n  cs35l41_hda_unbind() (git-fixes).\n- commit 045593b\n\n- tcp: Dump bound-only sockets in inet_diag (bsc#1204562).\n- commit ff006da\n\n- cachefiles: remove requests from xarray during flushing requests\n  (bsc#1226588).\n- commit b238f81\n\n- blacklist.conf: add ppdev cleanup\n- commit 58ce126\n\n- net/smc: fix neighbour and rtable leak in smc_ib_find_route()\n  (git-fixes bsc#1225823 CVE-2024-36945 bsc#1226547).\n- commit d4aa573\n\n- selftests/bpf: test case for callback_depth states pruning logic\n  (bsc#1225903).\n- bpf: check bpf_func_state-\u0026gt;callback_depth when pruning states\n  (bsc#1225903).\n- commit 6632e43\n\n- supported.conf: Add APM X-Gene SoC hardware monitoring driver (jsc#PED-8649)\n  Module is marked supported because of merge from SP6, but lets add\n  reference to SLM6.0 maintenance task.\n- commit d270c07\n\n- gpio: tqmx86: introduce shadow register for GPIO output value\n  (git-fixes).\n- Refresh\n  patches.suse/gpio-tqmx86-store-IRQ-trigger-type-and-unmask-status.patch.\n- commit 559245f\n\n- efi/x86: Free EFI memory map only when installing a new one\n  (git-fixes).\n- gpio: lpc32xx: fix module autoloading (stable-fixes).\n- commit d39df35\n\n- Move upstreamed NFS patch into sorted section\n- commit 19c3986\n\n- nfsd: optimise recalculate_deny_mode() for a common case\n  (bsc#1217912).\n- commit 882d2ff\n\n- NFS: avoid infinite loop in pnfs_update_layout (bsc#1219633\n  bsc#1226226).\n- commit b98e69a\n\n- NFS: abort nfs_atomic_open_v23 if name is too long\n  (bsc#1219847).\n- NFS: add atomic_open for NFSv3 to handle O_TRUNC correctly\n  (bsc#1219847).\n- commit 772961e\n\n- fs/9p: fix uninitialized values during inode evict (bsc#1225815\n  CVE-2024-36923).\n- commit b349473\n\n- x86/mce: Dynamically size space for machine check records\n  (bsc#1222241).\n- commit 2d0d4b2\n\n- nvme-tcp: Export the nvme_tcp_wq to sysfs (bsc#1224049).\n- Refresh\n  patches.suse/nvme-tcp-Add-wq_unbound-modparam-for-nvme_tcp_wq.patch.\n- commit 099b967\n\n- net: preserve kabi for struct dst_ops (CVE-2024-36971\n  bsc#1226145).\n- commit 6d764b6\n\n- kcov: don't lose track of remote references during softirqs\n  (git-fixes).\n- commit fc5abf0\n\n- rtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n  (CVE-2024-27414 bsc#1224439).\n- commit 6651625\n\n- netfilter: nf_tables: reject new basechain after table flag update\n  (CVE-2024-35900 bsc#1224497).\n- commit ef2c4d5\n\n- net: fix __dst_negative_advice() race (CVE-2024-36971\n  bsc#1226145).\n- commit 604ed28\n\n- ipv6: Fix infinite recursion in fib6_dump_done() (CVE-2024-35886\n  bsc#1224670).\n- commit ba91bc1\n\n- drm/amd/display: Disable idle reallow as part of command/gpint (bsc#1225702 CVE-2024-36024)\n- commit 6d53e8c\n\n- RAS/AMD/ATL: Use system settings for MI300 DRAM to normalized\n  address translation (bsc#1225300).\n- RAS/AMD/ATL: Fix MI300 bank hash (bsc#1225300).\n- commit 82b08f9\n\n- i2c: designware: Fix the functionality flags of the slave-only\n  interface (git-fixes).\n- i2c: at91: Fix the functionality flags of the slave-only\n  interface (git-fixes).\n- USB: class: cdc-wdm: Fix CPU lockup caused by excessive log\n  messages (git-fixes).\n- xhci: Handle TD clearing for multiple streams case (git-fixes).\n- thunderbolt: debugfs: Fix margin debugfs node creation condition\n  (git-fixes).\n- usb-storage: alauda: Check whether the media is initialized\n  (git-fixes).\n- usb: typec: tcpm: Ignore received Hard Reset in TOGGLING state\n  (git-fixes).\n- usb: typec: tcpm: fix use-after-free case in\n  tcpm_register_source_caps (git-fixes).\n- USB: xen-hcd: Traverse host/ when CONFIG_USB_XEN_HCD is selected\n  (git-fixes).\n- tty: n_tty: Fix buffer offsets when lookahead is used\n  (git-fixes).\n- drivers: core: synchronize really_probe() and dev_uevent()\n  (git-fixes).\n- iio: imu: inv_icm42600: delete unneeded update watermark call\n  (git-fixes).\n- iio: dac: ad5592r: fix temperature channel scaling value\n  (git-fixes).\n- iio: adc: ad9467: fix scan type sign (git-fixes).\n- misc: microchip: pci1xxxx: Fix a memory leak in the error\n  handling of gp_aux_bus_probe() (git-fixes).\n- misc: microchip: pci1xxxx: fix double free in the error handling\n  of gp_aux_bus_probe() (git-fixes).\n- mei: me: release irq in mei_me_pci_resume error path\n  (git-fixes).\n- ax25: Fix refcount imbalance on inbound connections (git-fixes).\n- tpm_tis: Do *not* flush uninitialized work (git-fixes).\n- selftests/mm: fix build warnings on ppc64 (stable-fixes).\n- selftests/mm: compaction_test: fix incorrect write of zero to\n  nr_hugepages (git-fixes).\n- genirq/irqdesc: Prevent use-after-free in irq_find_at_or_after()\n  (git-fixes).\n- drm/amdgpu/atomfirmware: add intergrated info v2.3 table\n  (stable-fixes).\n- intel_th: pci: Add Meteor Lake-S CPU support (stable-fixes).\n- mmc: sdhci-acpi: Add quirk to enable pull-up on the card-detect\n  GPIO on Asus T100TA (git-fixes).\n- mmc: sdhci-acpi: Disable write protect detection on Toshiba\n  WT10-A (stable-fixes).\n- mmc: sdhci-acpi: Fix Lenovo Yoga Tablet 2 Pro 1380 sdcard slot\n  not working (stable-fixes).\n- mmc: sdhci-acpi: Sort DMI quirks alphabetically (stable-fixes).\n- mmc: sdhci: Add support for \u0026quot;Tuning Error\u0026quot; interrupts\n  (stable-fixes).\n- mmc: core: Add mmc_gpiod_set_cd_config() function\n  (stable-fixes).\n- media: mxl5xx: Move xpt structures off stack (stable-fixes).\n- media: lgdt3306a: Add a check against null-pointer-def\n  (stable-fixes).\n- media: v4l2-core: hold videodev_lock until dev reg, finishes\n  (stable-fixes).\n- drm/amdgpu: add error handle to avoid out-of-bounds\n  (stable-fixes).\n- drm/i915/hwmon: Get rid of devm (stable-fixes).\n- wifi: rtw89: correct aSIFSTime for 6GHz band (stable-fixes).\n- wifi: rtlwifi: rtl8192de: Fix endianness issue in RX path\n  (stable-fixes).\n- wifi: rtlwifi: rtl8192de: Fix low speed with WPA3-SAE\n  (stable-fixes).\n- wifi: rtlwifi: rtl8192de: Fix 5 GHz TX power (stable-fixes).\n- wifi: rtl8xxxu: Fix the TX power of RTL8192CU, RTL8723AU\n  (stable-fixes).\n- ACPI: resource: Do IRQ override on TongFang GXxHRXx and GMxHGxx\n  (stable-fixes).\n- crypto: ecrdsa - Fix module auto-load on add_key (stable-fixes).\n- drm/sun4i: hdmi: Move mode_set into enable (stable-fixes).\n- drm/sun4i: hdmi: Convert encoder to atomic (stable-fixes).\n- mmc: core: Do not force a retune before RPMB switch\n  (stable-fixes).\n- commit 8df97c4\n\n- nvme/tcp: Add wq_unbound modparam for nvme_tcp_wq (bsc#1224049).\n- commit 7af7bce\n\n- ocfs2: fix sparse warnings (bsc#1219224).\n- ocfs2: speed up chain-list searching (bsc#1219224).\n- ocfs2: adjust enabling place for la window (bsc#1219224).\n- ocfs2: improve write IO performance when fragmentation is high\n  (bsc#1219224).\n- commit 98a3adb\n\n- drm/exynos: hdmi: report safe 640x480 mode as a fallback when\n  no EDID found (git-fixes).\n- drm/nouveau: don't attempt to schedule hpd_work on headless\n  cards (git-fixes).\n- drm/bridge/panel: Fix runtime warning on panel bridge release\n  (git-fixes).\n- drm/komeda: check for error-valued pointer (git-fixes).\n- commit b393dd7\n\n- Temporarily drop KVM patch that caused a regression (bsc#1226158)\n  Delete patches.suse/KVM-x86-pmu-Prioritize-VMX-interception-over-GP-on-R.patch\n- commit 33f31da\n\n- kABI: bpf: verifier kABI workaround\n  (bsc#1225903).\n- commit 726091c\n\n- bpf: keep track of max number of bpf_loop callback iterations\n  (bsc#1225903).\n- selftests/bpf: test widening for iterating callbacks\n  (bsc#1225903).\n- bpf: widening for callback iterators (bsc#1225903).\n- selftests/bpf: tests for iterating callbacks (bsc#1225903).\n- bpf: verify callbacks as if they are called unknown number of\n  times (bsc#1225903).\n- bpf: extract setup_func_entry() utility function (bsc#1225903).\n- bpf: extract __check_reg_arg() utility function (bsc#1225903).\n- selftests/bpf: track string payload offset as scalar in\n  strobemeta (bsc#1225903).\n- selftests/bpf: track tcp payload offset as scalar in\n  xdp_synproxy (bsc#1225903).\n- bpf: print full verifier states on infinite loop detection\n  (bsc#1225903).\n- selftests/bpf: test if state loops are detected in a tricky case\n  (bsc#1225903).\n- bpf: correct loop detection for iterators convergence\n  (bsc#1225903).\n- selftests/bpf: tests with delayed read/precision makrs in loop\n  body (bsc#1225903).\n- bpf: exact states comparison for iterator convergence checks\n  (bsc#1225903).\n- bpf: extract same_callsites() as utility function (bsc#1225903).\n- bpf: move explored_state() closer to the beginning of verifier.c\n  (bsc#1225903).\n- commit 63dfc45\n\n- ipv6: Fix potential uninit-value access in __ip6_make_skb()\n  (CVE-2024-36903 bsc#1225741).\n- commit f510672\n\n- Update references\n- commit 36a2563\n\n- drm/amd/display: Skip on writeback when it's not applicable (CVE-2024-36914 bsc#1225757).\n- commit e1ad803\n\n- cpufreq: amd-pstate: Fix the inconsistency in max frequency\n  units (git-fixes).\n- commit 9dd9a2b\n\n- gpiolib: cdev: Fix use after free in lineinfo_changed_notify\n  (bsc#1225737 CVE-2024-36899).\n- commit 24144db\n\n- nouveau: report byte usage in VRAM usage (git-fixes).\n- Refresh\n  patches.suse/drm-nouveau-use-tile_mode-and-pte_kind-for-VM_BIND-b.patch.\n- commit 5638f93\n\n- nouveau: add an ioctl to report vram usage (stable-fixes).\n- Refresh\n  patches.suse/drm-nouveau-use-tile_mode-and-pte_kind-for-VM_BIND-b.patch.\n- commit 7ea88ac\n\n- nouveau: add an ioctl to return vram bar size (stable-fixes).\n- Refresh\n  patches.suse/drm-nouveau-use-tile_mode-and-pte_kind-for-VM_BIND-b.patch.\n- commit 07ddfce\n\n- platform/x86: dell-smbios: Fix wrong token data in sysfs\n  (git-fixes).\n- net: phy: Micrel KSZ8061: fix errata solution not taking effect\n  problem (git-fixes).\n- wifi: ath10k: fix QCOM_RPROC_COMMON dependency (git-fixes).\n- wifi: mac80211: correctly parse Spatial Reuse Parameter Set\n  element (git-fixes).\n- wifi: iwlwifi: mvm: don't read past the mfuart notifcation\n  (git-fixes).\n- wifi: iwlwifi: mvm: check n_ssids before accessing the ssids\n  (git-fixes).\n- wifi: iwlwifi: dbg_ini: move iwl_dbg_tlv_free outside of\n  debugfs ifdef (git-fixes).\n- wifi: iwlwifi: mvm: set properly mac header (git-fixes).\n- wifi: iwlwifi: mvm: revert gen2 TX A-MPDU size to 64\n  (git-fixes).\n- wifi: iwlwifi: mvm: don't initialize csa_work twice (git-fixes).\n- wifi: cfg80211: pmsr: use correct nla_get_uX functions\n  (git-fixes).\n- wifi: cfg80211: Lock wiphy in cfg80211_get_station (git-fixes).\n- wifi: cfg80211: fully move wiphy work to unbound workqueue\n  (git-fixes).\n- wifi: mac80211: Fix deadlock in\n  ieee80211_sta_ps_deliver_wakeup() (git-fixes).\n- wifi: mac80211: mesh: Fix leak of mesh_preq_queue objects\n  (git-fixes).\n- net: phy: micrel: fix KSZ9477 PHY issues after suspend/resume\n  (git-fixes).\n- module: don't ignore sysfs_create_link() failures (git-fixes).\n- soundwire: cadence: fix invalid PDI offset (stable-fixes).\n- platform/x86/intel/tpmi: Handle error from tpmi_process_info()\n  (stable-fixes).\n- platform/x86: thinkpad_acpi: Take hotkey_mutex during\n  hotkey_exit() (git-fixes).\n- media: radio-shark2: Avoid led_names truncations (git-fixes).\n- wifi: nl80211: Avoid address calculations via out of bounds\n  array indexing (git-fixes).\n- selftests: mptcp: add ms units for tc-netem delay\n  (stable-fixes).\n- pwm: sti: Simplify probe function using devm functions\n  (git-fixes).\n- regulator: vqmmc-ipq4019: fix module autoloading (stable-fixes).\n- regulator: irq_helpers: duplicate IRQ name (stable-fixes).\n- platform/x86: ISST: Add Grand Ridge to HPM CPU list\n  (stable-fixes).\n- selftests: sud_test: return correct emulated syscall value on\n  RISC-V (stable-fixes).\n- wifi: cfg80211: fix the order of arguments for trace events\n  of the tx_rx_evt class (stable-fixes).\n- wifi: mac80211: ensure beacon is non-S1G prior to extracting\n  the beacon timestamp field (stable-fixes).\n- wifi: mac80211: don't use rate mask for scanning (stable-fixes).\n- pwm: sti: Prepare removing pwm_chip from driver data\n  (stable-fixes).\n- commit d252b95\n\n- HID: logitech-dj: Fix memory leak in\n  logi_dj_recv_switch_to_dj_mode() (git-fixes).\n- HID: core: remove unnecessary WARN_ON() in implement()\n  (git-fixes).\n- kconfig: doc: fix a typo in the note about 'imply' (git-fixes).\n- gpio: tqmx86: fix broken IRQ_TYPE_EDGE_BOTH interrupt type\n  (git-fixes).\n- gpio: tqmx86: store IRQ trigger type and unmask status\n  separately (git-fixes).\n- gpio: tqmx86: fix typo in Kconfig label (git-fixes).\n- drm/vmwgfx: Don't memcmp equivalent pointers (git-fixes).\n- drm/vmwgfx: 3D disabled should not effect STDU memory limits\n  (git-fixes).\n- drm/vmwgfx: Filter modes which exceed graphics memory\n  (git-fixes).\n- drm/panel: sitronix-st7789v: Add check for\n  of_drm_get_panel_orientation (git-fixes).\n- drm/amd: Fix shutdown (again) on some SMU v13.0.4/11 platforms\n  (git-fixes).\n- kconfig: fix comparison to constant symbols, 'm', 'n'\n  (git-fixes).\n- drm/amdgpu: Fix buffer size in gfx_v9_4_3_init_\n  cp_compute_microcode() and rlc_microcode() (git-fixes).\n- drm/amdgpu: init microcode chip name from ip versions\n  (stable-fixes).\n- fpga: dfl-pci: add PCI subdevice ID for Intel D5005 card\n  (stable-fixes).\n- iio: accel: mxc4005: Reset chip on probe() and resume()\n  (stable-fixes).\n- drm/amdkfd: Flush the process wq before creating a kfd_process\n  (stable-fixes).\n- drm/amd/display: Disable seamless boot on 128b/132b encoding\n  (stable-fixes).\n- drm/amd/display: Fix DC mode screen flickering on DCN321\n  (stable-fixes).\n- drm/amd/display: Add VCO speed parameter for DCN31 FPU\n  (stable-fixes).\n- drm/amd/display: Allocate zero bw after bw alloc enable\n  (stable-fixes).\n- drm/amd/display: Add dtbclk access to dcn315 (stable-fixes).\n- drm/amdgpu: Fix VRAM memory accounting (stable-fixes).\n- drm/etnaviv: fix tx clock gating on some GC7000 variants\n  (stable-fixes).\n- HID: mcp-2221: cancel delayed_work only when CONFIG_IIO is\n  enabled (stable-fixes).\n- iio: adc: ad9467: use chip_info variables instead of array\n  (stable-fixes).\n- iio: adc: ad9467: use spi_get_device_match_data()\n  (stable-fixes).\n- iio: accel: mxc4005: allow module autoloading via OF compatible\n  (stable-fixes).\n- commit 4e48378\n\n- kABI workaround for sof_ipc_pcm_ops (git-fixes).\n- commit 070cfe5\n\n- Bluetooth: L2CAP: Fix rejecting L2CAP_CONN_PARAM_UPDATE_REQ\n  (git-fixes).\n- cxl/region: Fix memregion leaks in devm_cxl_add_region()\n  (git-fixes).\n- cxl/test: Add missing vmalloc.h for tools/testing/cxl/test/mem.c\n  (git-fixes).\n- cxl/region: Fix cxlr_pmem leaks (git-fixes).\n- cxl/trace: Correct DPA field masks for general_media \u0026amp; dram\n  events (git-fixes).\n- ASoC: SOF: pcm: Restrict DSP D0i3 during S0ix to IPC3\n  (stable-fixes).\n- drm/amdgpu/mes: fix use-after-free issue (stable-fixes).\n- drm/amdgpu: Fix the ring buffer size for queue VM flush\n  (stable-fixes).\n- drm/amdkfd: Add VRAM accounting for SVM migration\n  (stable-fixes).\n- drm/amd/pm: Restore config space after reset (stable-fixes).\n- drm/amdgpu: Update BO eviction priorities (stable-fixes).\n- drm/amd/display: Set color_mgmt_changed to true on unsuspend\n  (stable-fixes).\n- drm/amd/display: Revert Remove pixle rate limit for subvp\n  (stable-fixes).\n- drm/amd/display: Remove pixle rate limit for subvp\n  (stable-fixes).\n- Bluetooth: hci_event: Remove code to removed CONFIG_BT_HS\n  (stable-fixes).\n- Bluetooth: Remove usage of the deprecated ida_simple_xx() API\n  (stable-fixes).\n- ASoC: Intel: common: add ACPI matching tables for Arrow Lake\n  (stable-fixes).\n- Bluetooth: ISO: Fix BIS cleanup (stable-fixes).\n- commit b6ffdb9\n\n- KVM: arm64: Use local TLBI on permission relaxation\n  (bsc#1219478).\n- Refresh\n  patches.suse/KVM-arm64-Always-invalidate-TLB-for-stage-2-permission-faults.\n- commit c414679\n\n- KVM: x86: Don't advertise guest.MAXPHYADDR as host.MAXPHYADDR\n  in CPUID (git-fixes).\n- commit 001738e\n\n- net: usb: qmi_wwan: add Telit FN920C04 compositions (git-fixes).\n- commit 49f5909\n\n- Replace the inhouse patch with following upstream patch\n  (bsc#1221097, bsc#1224572, CVE-2024-35979)\n  patches.suse/raid1-fix-use-after-free-for-original-bio-in-raid1_-fcf3.patch.\n- commit 03ae28a\n\n- supported.conf: mark ufs as unsupported\n  UFS is an unsupported filesystem, mark it as such. We still keep it\n  around (not marking as optional), to accommodate any potential\n  migrations from BSD systems.\n- commit 5192abd\n\n- supported.conf: mark orangefs as optional\n  We don't support orangefs at all (and it is already marked as such), but\n  since there are no SLE consumers of it, mark it as optional.\n- commit 264e3d2\n\n- blacklist.conf: add f2fs fixes 87161a2b0aed and 4e0197f9932f\n  Both are f2fs-related fixes, f2fs is unsupported and not compiled at\n  all.\n- commit e891815\n\n- nilfs2: fix potential hang in nilfs_detach_log_writer()\n  (git-fixes).\n- commit 181df2f\n\n- rpm/kernel-obs-build.spec.in: Add iso9660 (bsc#1226212)\n  Some builds don't just create an iso9660 image, but also mount it during\n  build.\n- commit aaee141\n\n- blacklist.conf: kABI\n- commit 70e89e6\n\n- Input: xpad - add support for ASUS ROG RAIKIRI (git-fixes).\n- commit 9d3a015\n\n- ext4: correct offset of gdb backup in non meta_bg group to\n  update_backups (bsc#1224735 CVE-2024-35807).\n- commit 68779d8\n\n- ext4: remove unnecessary check from alloc_flex_gd() (bsc#1222080\n  CVE-2023-52622).\n- commit 2e6ec2e\n\n- llc: verify mac len before reading mac header\n  (CVE-2023-52843 bsc#1224951).\n- commit ea955e6\n\n- netfilter: nf_tables: Fix potential data-race in __nft_flowtable_type_get()\n  (CVE-2024-35898 bsc#1224498).\n- commit 47a49f0\n\n- nfc: llcp: fix nfc_llcp_setsockopt() unsafe copies\n  (CVE-2024-36915 bsc#1225758).\n- commit 0955416\n\n- net: add copy_safe_from_sockptr() helper\n  (git-fixes prerequisite CVE-2024-36915 bsc#1225758).\n- commit e4ca26d\n\n- rpm/kernel-obs-build.spec.in: Add networking modules for docker\n  (bsc#1226211)\n  docker needs more networking modules, even legacy iptable_nat and _filter.\n- commit 415e132\n\n- rtnetlink: Correct nested IFLA_VF_VLAN_LIST attribute validation\n  (CVE-2024-36017 bsc#1225681).\n- commit 349b81e\n\n- mm: use memalloc_nofs_save() in page_cache_ra_order()\n  (bsc#1225723 CVE-2024-36882).\n- commit 858537f\n\n- blk-iocost: avoid out of bounds shift (bsc#1225759\n  CVE-2024-36916).\n- commit 9e35e70\n\n- netfilter: complete validation of user input\n  (git-fixes CVE-2024-35896 bsc#1224662).\n- commit a54ae57\n\n- net: hns3: fix kernel crash when devlink reload during\n  initialization (CVE-2024-36900 bsc#1225726).\n- net: hns3: release PTP resources if pf initialization failed\n  (CVE-2024-36900 bsc#1225726).\n- commit ad59124\n\n- blk-mq: make sure active queue usage is held for\n  bio_integrity_prep() (bsc#1225105 CVE-2023-52787).\n- commit 6131890\n\n- block: prevent division by zero in blk_rq_stat_sum()\n  (bsc#1224661 CVE-2024-35925).\n- commit 7339ca3\n\n- Update refs for patches.suse/nbd-fix-uaf-in-nbd_open.patch (bsc#1216436\n  bsc#1224935 CVE-2023-52837).\n- commit 95ff8cb\n\n- netfilter: validate user input for expected length\n  (CVE-2024-35896 bsc#1224662).\n- commit 6a29de4\n\n- ext4: fix corruption during on-line resize (bsc#1224735\n  CVE-2024-35807).\n- commit 751677a\n\n- ext4: fix racy may inline data check in dio write (bsc#1224939\n  CVE-2023-52786).\n- commit 742009f\n\n- ext4: avoid online resizing failures due to oversized flex bg\n  (bsc#1222080 CVE-2023-52622).\n- commit 817510d\n\n- arm64: asm-bug: Add .align 2 to the end of __BUG_ENTRY\n  (git-fixes).\n- commit d2efb00\n\n- net: mana: Enable MANA driver on ARM64 with 4K page size\n  (jsc#PED-8491).\n- Update config files.\n- commit 5211306\n\n- bna: ensure the copied buf is NUL terminated (CVE-2024-36934\n  bsc#1225760).\n- ice: ensure the copied buf is NUL terminated (CVE-2024-36935\n  bsc#1225763).\n- commit ab36d7d\n\n- xdp: use flags field to disambiguate broadcast redirect\n  (bsc#1225834 CVE-2024-36937).\n- commit de0720c\n\n- fs/pipe: move check to pipe_has_watch_queue() (bsc#1224614\n  CVE-2023-52672).\n- commit 66a9a3f\n\n- tipc: Change nla_policy for bearer-related names to NLA_NUL_STRING\n  (CVE-2023-52845 bsc#1225585).\n- commit a73a0ca\n\n- pipe: wakeup wr_wait after setting max_usage (bsc#1224614\n  CVE-2023-52672).\n- commit 333fe30\n\n- blacklist.conf: add bsc#1223013 CVE-2024-26482, does not apply\n- commit a7ff2c2\n\n- netfilter: nf_tables: honor table dormant flag from netdev release event path\n  (CVE-2024-36005 bsc#1224539).\n- commit 5b08b61\n\n- blacklist.conf: irrelevant build fix\n- commit 226f27a\n\n- scsi: target: core: Add TMF to tmr_list handling (bsc#1223018\n  CVE-2024-26845).\n- commit 6b81c05\n\n- iommu: mtk: fix module autoloading (git-fixes).\n- commit 50334e4\n\n- iommu/amd: Enhance def_domain_type to handle untrusted device\n  (git-fixes).\n- commit 9d0dd7f\n\n- iommu: Undo pasid attachment only for the devices that have\n  succeeded (git-fixes).\n- commit 4de170c\n\n- net/sched: fix lockdep splat in qdisc_tree_reduce_backlog()\n  (CVE-2024-35892 bsc#1224515).\n- commit e8fcaf3\n\n- eeprom: at24: fix memory corruption race condition (bsc#1224612\n  CVE-2024-35848).\n- commit 269cd6c\n\n- udp: do not accept non-tunnel GSO skbs landing in a tunnel\n  (CVE-2024-35884 bsc#1224520).\n- commit 78d5dd0\n\n- Kabi workaround for icmp: prevent possible NULL dereferences from\n  icmp_build_probe() (CVE-2024-35857 bsc#1224619).\n- icmp: prevent possible NULL dereferences from icmp_build_probe()\n  (CVE-2024-35857 bsc#1224619).\n- commit fa789e3\n\n- io_uring/net: correct the type of variable (git-fixes).\n- commit 91963e3\n\n- sock_map: avoid race between sock_map_close and sk_psock_put\n  (bsc#1225475 CVE-2023-52735).\n- commit 71eeba4\n\n- Update\n  patches.suse/usb-dwc2-fix-possible-NULL-pointer-dereference-cause.patch\n  (CVE-2023-52855 bsc#1225583).\n  Adding references\n- commit 4b5e987\n\n- net: preserve kabi for sk_buff (CVE-2024-26921 bsc#1223138).\n- commit 7bf5961\n\n- inet: inet_defrag: prevent sk release while still in use\n  (CVE-2024-26921 bsc#1223138).\n- commit 2016faf\n\n- perf ui browser: Avoid SEGV on title (git fixes).\n- commit 1578c22\n\n- perf pmu: Count sys and cpuid JSON events separately (git\n  fixes).\n- perf stat: Don't display metric header for non-leader uncore\n  events (git-fixes).\n- perf daemon: Fix file leak in daemon_session__control\n  (git-fixes).\n- perf symbols: Fix ownership of string in dso__load_vmlinux()\n  (git-fixes).\n- perf thread: Fixes to thread__new() related to initializing comm\n  (git-fixes).\n- perf report: Avoid SEGV in report__setup_sample_type()\n  (git-fixes).\n- perf ui browser: Don't save pointer to stack memory (git-fixes).\n- perf bench internals inject-build-id: Fix trap divide when\n  collecting just one DSO (git-fixes).\n- perf intel-pt: Fix unassigned instruction op (discovered by\n  MemorySanitizer) (git-fixes).\n- perf test shell arm_coresight: Increase buffer size for\n  Coresight basic tests (git-fixes).\n- perf docs: Document bpf event modifier (git-fixes).\n- perf bench uprobe: Remove lib64 from libc.so.6 binary path\n  (git-fixes).\n- perf record: Fix debug message placement for test consumption\n  (git-fixes).\n- perf tests: Apply attributes to all events in object code\n  reading test (git-fixes).\n- perf tests: Make \u0026quot;test data symbol\u0026quot; more robust on Neoverse N1\n  (git-fixes).\n- perf annotate: Fix annotation_calc_lines() to pass correct\n  address to get_srcline() (git-fixes).\n- perf stat: Do not fail on metrics on s390 z/VM systems\n  (git-fixes).\n- perf sched timehist: Fix -g/--call-graph option failure\n  (git-fixes).\n- perf annotate: Get rid of duplicate --group option item\n  (git-fixes).\n- perf probe: Add missing libgen.h header needed for using\n  basename() (git-fixes).\n- perf record: Delete session after stopping sideband thread\n  (git-fixes).\n- perf auxtrace: Fix multiple use of --itrace option (git-fixes).\n- perf script: Show also errors for --insn-trace option\n  (git-fixes).\n- perf lock contention: Add a missing NULL check (git-fixes).\n- perf vendor events amd: Fix Zen 4 cache latency events\n  (git-fixes).\n- libperf evlist: Avoid out-of-bounds access (git-fixes).\n- perf pmu: Fix a potential memory leak in perf_pmu__lookup()\n  (git-fixes).\n- perf print-events: make is_event_supported() more robust\n  (git-fixes).\n- perf list: fix short description for some cache events\n  (git-fixes).\n- perf metric: Don't remove scale from counts (git-fixes).\n- perf stat: Avoid metric-only segv (git-fixes).\n- perf expr: Fix \u0026quot;has_event\u0026quot; function for metric style events\n  (git-fixes).\n- perf srcline: Add missed addr2line closes (git-fixes).\n- perf thread_map: Free strlist on normal path in\n  thread_map__new_by_tid_str() (git-fixes).\n- perf bpf: Clean up the generated/copied vmlinux.h (git-fixes).\n- perf jevents: Drop or simplify small integer values (git-fixes).\n- perf evsel: Fix duplicate initialization of data-\u0026gt;id in\n  evsel__parse_sample() (git-fixes).\n- perf pmu: Treat the msr pmu as software (git-fixes).\n- perf record: Check conflict between '--timestamp-filename'\n  option and pipe mode before recording (git-fixes).\n- perf record: Fix possible incorrect free in\n  record__switch_output() (git-fixes).\n- perf vendor events amd: Add Zen 4 memory controller events\n  (git-fixes).\n- perf top: Uniform the event name for the hybrid machine\n  (git-fixes).\n- perf top: Use evsel's cpus to replace user_requested_cpus\n  (git-fixes).\n- commit a1f9340\n\n- nfs: Bump default write congestion size (bsc#1218442).\n- commit 563bd84\n\n- nfs: Avoid flushing many pages with NFS_FILE_SYNC (bsc#1218442).\n- commit 1092c12\n\n- blacklist.conf: remove fix for CVE-2024-35956 bsc#1224674, not applicable\n- Delete patches.suse/btrfs-qgroup-fix-qgroup-prealloc-rsv-leak-in-subvolu.patch.\n  Quoting bsc#1225945#c11:\n  \u0026quot;So the upstream 6.5 kernel commit (1b53e51a4a8f (\u0026quot;btrfs: don't commit\n  transaction for every subvol create\u0026quot;)\n  ) was never backported to SLE, so that fix eb96e221937a (\u0026quot;btrfs: fix\n  unwritten extent buffer after snapshotting a new subvolume\u0026quot;) was never\n  backported.\u0026quot;\n- commit d947258\n\n- crypto: iaa - Fix async_disable descriptor leak (CVE-2024-35926\n  bsc#1224655).\n- commit c5d6a9b\n\n- xsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n  (bsc#1224575 CVE-2024-35976).\n- commit 794d5e8\n\n- bpf, skmsg: Fix NULL pointer dereference in\n  sk_psock_skb_ingress_enqueue (bsc#1225761 CVE-2024-36938).\n- commit 2f2e817\n\n- ipv4: check for NULL idev in ip_route_use_hint()\n  (CVE-2024-36008 bsc#1224540)\n- commit d751eb5\n\n- smb3: fix lock ordering potential deadlock in\n  cifs_sync_mid_result (bsc#1225172, bsc#1224549, CVE-2024-35998).\n- commit 98bfec0\n\n- smb: client: fix potential deadlock when releasing mids\n  (bsc#1225172, bsc#1225548, CVE-2023-52757).\n- commit 1b322a8\n\n- blacklist.conf: add d380ce70058a4ccddc3e5f5c2063165dc07672c6\n  netrom: Fix data-races around sysctl_net_busy_read\n  (CVE-2024-27419 bsc#1224759)\n- commit 1fe217c\n\n- octeontx2-af: avoid off-by-one read from userspace (bsc#1225762 CVE-2024-36957)\n- commit d3dcfbb\n\n- kabi/severities: Ignore io_uring internal symbols\n- commit 0e91c09\n\n- perf/x86: Fix out of range data (git-fixes).\n- perf/x86/intel/ds: Don't clear -\u0026gt;pebs_data_cfg for the last\n  PEBS event (git-fixes).\n- perf/x86/amd/lbr: Discard erroneous branch entries (git-fixes).\n- commit 664d77f\n\n- cifs: failure to add channel on iface should bump up weight\n  (git-fixes, bsc#1225172).\n- commit 007b237\n\n- smb: client: fix parsing of SMB3.1.1 POSIX create context\n  (git-fixes, bsc#1225172).\n- commit 5f27f69\n\n- Revert \u0026quot;cifs: reconnect work should have reference on server\n  struct\u0026quot; (git-fixes, bsc#1225172).\n- commit 3ca4c0c\n\n- cifs: fix leak of iface for primary channel (git-fixes,\n  bsc#1225172).\n- commit b7eb8e8\n\n- smb: client: fix mount when dns_resolver key is not available\n  (git-fixes, bsc#1225172).\n- commit 28edb5c\n\n- scsi: lpfc: Copyright updates for 14.4.0.2 patches\n  (bsc#1225842).\n- scsi: lpfc: Update lpfc version to 14.4.0.2 (bsc#1225842).\n- scsi: lpfc: Add support for 32 byte CDBs (bsc#1225842).\n- scsi: lpfc: Change lpfc_hba hba_flag member into a bitmask\n  (bsc#1225842).\n  Refresh:\n  - patches.suse/lpfc-reintroduce-old-irq-probe-logic.patch\n- scsi: lpfc: Introduce rrq_list_lock to protect active_rrq_list\n  (bsc#1225842).\n- scsi: lpfc: Clear deferred RSCN processing flag when driver\n  is unloading (bsc#1225842).\n- scsi: lpfc: Update logging of protection type for T10 DIF I/O\n  (bsc#1225842).\n- scsi: lpfc: Change default logging level for unsolicited CT\n  MIB commands (bsc#1225842).\n- commit 5a56384\n\n- nvmet: fix ns enable/disable possible hang (git-fixes).\n- nvme-multipath: fix io accounting on failover (git-fixes).\n- nvme: fix multipath batched completion accounting (git-fixes).\n- commit ed3b392\n\n- Update\n  patches.suse/ALSA-hda-intel-sdw-acpi-fix-usage-of-device_get_name.patch\n  (git-fixes CVE-2024-36955).\n- Update\n  patches.suse/ARM-9381-1-kasan-clear-stale-stack-poison.patch\n  (git-fixes bsc#1225715 CVE-2024-36906).\n- Update\n  patches.suse/Bluetooth-HCI-Fix-potential-null-ptr-deref.patch\n  (git-fixes bsc#1225579 CVE-2024-36011).\n- Update\n  patches.suse/Bluetooth-L2CAP-Fix-slab-use-after-free-in-l2cap_con.patch\n  (git-fixes bsc#1225578 CVE-2024-36013).\n- Update\n  patches.suse/Bluetooth-msft-fix-slab-use-after-free-in-msft_do_cl.patch\n  (git-fixes bsc#1225502 CVE-2024-36012).\n- Update\n  patches.suse/Bluetooth-qca-add-missing-firmware-sanity-checks.patch\n  (git-fixes bsc#1225722 CVE-2024-36880).\n- Update\n  patches.suse/Bluetooth-qca-fix-firmware-check-error-path.patch\n  (git-fixes CVE-2024-36942).\n- Update\n  patches.suse/Bluetooth-qca-fix-info-leak-when-fetching-fw-build-i.patch\n  (git-fixes bsc#1225720 CVE-2024-36032).\n- Update\n  patches.suse/KVM-x86-mmu-Write-protect-L2-SPTEs-in-TDP-MMU-when-c.patch\n  (git-fixes bsc#1223749 CVE-2024-26990).\n- Update\n  patches.suse/KVM-x86-pmu-Disable-support-for-adaptive-PEBS.patch\n  (git-fixes bsc#1223692 CVE-2024-26992).\n- Update\n  patches.suse/Reapply-drm-qxl-simplify-qxl_fence_wait.patch\n  (stable-fixes CVE-2024-36944).\n- Update\n  patches.suse/USB-core-Fix-access-violation-during-port-device-rem.patch\n  (git-fixes bsc#1225734 CVE-2024-36896).\n- Update\n  patches.suse/amd-amdkfd-sync-all-devices-to-wait-all-processes-be.patch\n  (stable-fixes CVE-2024-36949).\n- Update patches.suse/bpf-Check-bloom-filter-map-value-size.patch\n  (bsc#1224488 CVE-2024-35905 bsc#1225766 CVE-2024-36918).\n- Update\n  patches.suse/clk-sunxi-ng-h6-Reparent-CPUX-during-PLL-CPUX-rate-c.patch\n  (git-fixes bsc#1225692 CVE-2023-52882).\n- Update\n  patches.suse/cxl-pci-Fix-disabling-memory-if-DVSEC-CXL-Range-does.patch\n  (git-fixes CVE-2024-26761).\n- Update\n  patches.suse/drm-amd-display-Atom-Integrated-System-Info-v2_2-for.patch\n  (stable-fixes bsc#1225735 CVE-2024-36897).\n- Update\n  patches.suse/drm-amd-pm-fixes-a-random-hang-in-S4-for-SMU-v13.0.4.patch\n  (stable-fixes bsc#1225705 CVE-2024-36026).\n- Update\n  patches.suse/drm-amdkfd-range-check-cp-bad-op-exception-interrupt.patch\n  (stable-fixes CVE-2024-36951).\n- Update\n  patches.suse/drm-arm-malidp-fix-a-possible-null-pointer-dereferen.patch\n  (git-fixes bsc#1225593 CVE-2024-36014).\n- Update\n  patches.suse/drm-nouveau-firmware-Fix-SG_DEBUG-error-with-nvkm_fi.patch\n  (stable-fixes bsc#1225728 CVE-2024-36885).\n- Update\n  patches.suse/efi-unaccepted-touch-soft-lockup-during-memory-accept.patch\n  (git-fixes bsc#1225773 CVE-2024-36936).\n- Update\n  patches.suse/firewire-ohci-mask-bus-reset-interrupts-between-ISR-.patch\n  (stable-fixes CVE-2024-36950).\n- Update patches.suse/gpiolib-cdev-fix-uninitialised-kfifo.patch\n  (git-fixes bsc#1225736 CVE-2024-36898).\n- Update\n  patches.suse/i40e-fix-vf-may-be-used-uninitialized-in-this-functi.patch\n  (git-fixes bsc#1225698 CVE-2024-36020).\n- Update\n  patches.suse/maple_tree-fix-mas_empty_area_rev-null-pointer-deref.patch\n  (git-fixes bsc#1225710 CVE-2024-36891).\n- Update\n  patches.suse/mm-slab-make-__free-kfree-accept-error-pointers.patch\n  (git-fixes bsc#1225714 CVE-2024-36890).\n- Update\n  patches.suse/mmc-sdhci-msm-pervent-access-to-suspended-controller.patch\n  (git-fixes bsc#1225708 CVE-2024-36029).\n- Update\n  patches.suse/net-hns3-fix-kernel-crash-when-devlink-reload-during.patch\n  (git-fixes bsc#1225699 CVE-2024-36021).\n- Update\n  patches.suse/nouveau-dmem-handle-kcalloc-allocation-failure.patch\n  (git-fixes CVE-2024-26943).\n- Update\n  patches.suse/nouveau-uvmm-fix-addr-range-calcs-for-remap-operatio.patch\n  (git-fixes bsc#1225694 CVE-2024-36018).\n- Update\n  patches.suse/pinctrl-core-delete-incorrect-free-in-pinctrl_enable.patch\n  (git-fixes CVE-2024-36940).\n- Update\n  patches.suse/pinctrl-devicetree-fix-refcount-leak-in-pinctrl_dt_t.patch\n  (git-fixes CVE-2024-36959).\n- Update\n  patches.suse/ppdev-Add-an-error-check-in-register_device.patch\n  (git-fixes bsc#1225640 CVE-2024-36015).\n- Update patches.suse/qibfs-fix-dentry-leak.patch (git-fixes\n  CVE-2024-36947).\n- Update\n  patches.suse/regmap-maple-Fix-cache-corruption-in-regcache_maple_.patch\n  (git-fixes bsc#1225695 CVE-2024-36019).\n- Update\n  patches.suse/s390-cio-Ensure-the-copied-buf-is-NUL-terminated.patch\n  (git-fixes bsc#1223869 bsc#1225747 CVE-2024-36931).\n- Update\n  patches.suse/s390-qeth-Fix-kernel-panic-after-setting-hsuid.patch\n  (git-fixes bsc#1223874 bsc#1225775 CVE-2024-36928).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-off-by-one-in-qla_edif_app_getstats.patch\n  (git-fixes bsc#1225704 CVE-2024-36025).\n- Update\n  patches.suse/spi-fix-null-pointer-dereference-within-spi_sync.patch\n  (git-fixes CVE-2024-36930).\n- Update\n  patches.suse/swiotlb-Fix-double-allocation-of-slots-due-to-broken-alignment-handling.patch\n  (bsc#1224331 bsc#1224602 CVE-2024-35814).\n- Update\n  patches.suse/tty-n_gsm-fix-possible-out-of-bounds-in-gsm0_receive.patch\n  (git-fixes bsc#1225642 CVE-2024-36016).\n- Update\n  patches.suse/usb-gadget-f_fs-Fix-race-between-aio_cancel-and-AIO-.patch\n  (git-fixes bsc#1225749 CVE-2024-36894).\n- Update\n  patches.suse/usb-gadget-uvc-use-correct-buffer-size-when-parsing-.patch\n  (git-fixes bsc#1225750 CVE-2024-36895).\n- Update\n  patches.suse/usb-typec-tcpm-Check-for-port-partner-validity-befor.patch\n  (git-fixes bsc#1225748 CVE-2024-36893).\n- Update\n  patches.suse/wifi-iwlwifi-mvm-guard-against-invalid-STA-ID-on-rem.patch\n  (stable-fixes bsc#1225769 CVE-2024-36921).\n- Update\n  patches.suse/wifi-iwlwifi-read-txq-read_ptr-under-lock.patch\n  (stable-fixes CVE-2024-36922).\n- Update\n  patches.suse/wifi-nl80211-don-t-free-NULL-coalescing-rule.patch\n  (git-fixes CVE-2024-36941).\n- Update\n  patches.suse/x86-efistub-Call-mixed-mode-boot-services-on-the-firmware-.patch\n  (git-fixes bsc#1224742 CVE-2024-35803).\n- commit 539780f\n\n- powerpc/pseries/lparcfg: drop error message from guest name\n  lookup (bsc#1187716 ltc#193451 git-fixes).\n- commit ceab637\n\n- blacklist.conf: PPC fsl_msi is not used\n- commit ae6590d\n\n- powerpc/uaccess: Use YZ asm constraint for ld (bsc#1194869).\n- powerpc/uaccess: Fix build errors seen with GCC 13/14\n  (bsc#1194869).\n- commit 46b5d84\n\n- Add reference to L3 bsc#1225765 in BPF control flow graph and precision backtrack fixes (bsc#1225756)\n  The L3 bsc#1225765 was created seperately since our customer requires\n  PTF.\n- Update patches.suse/bpf-fix-precision-backtracking-instruction-iteration.patch\n- Update patches.suse/bpf-handle-ldimm64-properly-in-check_cfg.patch\n- Update patches.suse/selftests-bpf-add-edge-case-backtracking-logic-test.patch\n- Update patches.suse/selftests-bpf-precision-tracking-test-for-BPF_NEG-an.patch\n- commit 054635e\n\n- netfilter: nf_tables: release mutex after nft_gc_seq_end from\n  abort path (CVE-2024-26925 bsc#1223390).\n- commit 578a709\n\n- series.conf: cleanup\n  Fix subsection header to silence series_insert error.\n- commit 4628dc3\n\n- ASoC: wm_adsp: Add missing MODULE_DESCRIPTION() (git-fixes).\n- ALSA: ump: Set default protocol when not given explicitly\n  (git-fixes).\n- ALSA/hda: intel-dsp-config: reduce log verbosity (git-fixes).\n- ALSA: core: Remove debugfs at disconnection (git-fixes).\n- commit f8e0906\n\n- drm/panel: sitronix-st7789v: fix display size for\n  jt240mhqs_hwt_ek_e3 panel (git-fixes).\n- drm/panel: sitronix-st7789v: tweak timing for\n  jt240mhqs_hwt_ek_e3 panel (git-fixes).\n- drm/panel: sitronix-st7789v: fix timing for jt240mhqs_hwt_ek_e3\n  panel (git-fixes).\n- dma-buf/sw-sync: don't enable IRQ from sync_print_obj()\n  (git-fixes).\n- Revert \u0026quot;drm/amdkfd: fix gfx_target_version for certain 11.0.3\n  devices\u0026quot; (stable-fixes).\n- drm/amd/display: Enable colorspace property for MST connectors\n  (git-fixes).\n- drm/i915: Fix audio component initialization (git-fixes).\n- drm/i915/dpt: Make DPT object unshrinkable (git-fixes).\n- drm/i915/gt: Fix CCS id's calculation for CCS mode setting\n  (git-fixes).\n- drm/i915/guc: avoid FIELD_PREP warning (git-fixes).\n- drm/i915/gt: Disarm breadcrumbs if engines are already idle\n  (git-fixes).\n- drm/shmem-helper: Fix BUG_ON() on mmap(PROT_WRITE, MAP_PRIVATE)\n  (git-fixes).\n- hwmon: (shtc1) Fix property misspelling (git-fixes).\n- hwmon: (intel-m10-bmc-hwmon) Fix multiplier for N6000 board\n  power sensor (git-fixes).\n- spi: stm32: Don't warn about spurious interrupts (git-fixes).\n- spi: Don't mark message DMA mapped when no transfer in it is\n  (git-fixes).\n- dma-mapping: benchmark: handle NUMA_NO_NODE correctly\n  (git-fixes).\n- dma-mapping: benchmark: fix node id validation (git-fixes).\n- ALSA: seq: ump: Fix swapped song position pointer data\n  (git-fixes).\n- ASoC: SOF: ipc4-topology: Fix input format query of process\n  modules without base extension (git-fixes).\n- ALSA: seq: Fix yet another spot for system message conversion\n  (git-fixes).\n- ALSA: ump: Don't accept an invalid UMP protocol number\n  (git-fixes).\n- ALSA: ump: Don't clear bank selection after sending a program\n  change (git-fixes).\n- ALSA: seq: Fix incorrect UMP type for system messages\n  (git-fixes).\n- ALSA: seq: Don't clear bank selection at event -\u0026gt; UMP MIDI2\n  conversion (git-fixes).\n- ALSA: seq: Fix missing bank setup between MIDI1/MIDI2 UMP\n  conversion (git-fixes).\n- ALSA: hda/realtek: Adjust G814JZR to use SPI init for amp\n  (git-fixes).\n- docs: netdev: Fix typo in Signed-off-by tag (git-fixes).\n- net: usb: smsc95xx: fix changing LED_SEL bit value updated\n  from EEPROM (git-fixes).\n- net: phy: micrel: set soft_reset callback to genphy_soft_reset\n  for KSZ8061 (git-fixes).\n- commit e5505a5\n\n- Add alt-commit to a nouveau patch\n- commit 0024d10\n\n- 9p: add missing locking around taking dentry fid list (git-fixes)\n- commit 581af2d\n\n- blacklist.conf: only a VFS cleanup\n- commit f4a0ca8\n\n- blacklist.conf: openpromfs not built\n- commit 475ff82\n\n- ecryptfs: Fix buffer size for tag 66 packet (git-fixes)\n- commit 17aae28\n\n- llc: call sock_orphan() at release time\n  (CVE-2024-26625 bsc#1221086)\n- commit fe6bd4d\n\n- fs/9p: translate O_TRUNC into OTRUNC (git-fixes)\n- commit e03e9a5\n\n- bpf: Fix precision tracking for BPF_ALU | BPF_TO_BE | BPF_END\n  (git-fixes).\n- commit e824dba\n\n- fs/9p: only translate RWX permissions for plain 9P2000 (git-fixes)\n- commit ebd0dc6\n\n- selftests/bpf: precision tracking test for BPF_NEG and BPF_END\n  (bsc#1225756).\n- commit a410d73\n\n- selftests/bpf: add edge case backtracking logic test\n  (bsc#1225756).\n- bpf: fix precision backtracking instruction iteration\n  (bsc#1225756).\n- bpf: handle ldimm64 properly in check_cfg() (bsc#1225756).\n- commit 9cbb99b\n\n- blacklist.conf: remove add and revert patch pair\n- commit f17fe30\n\n- fs: indicate request originates from old mount API (git-fixes)\n- commit 0754468\n\n- blacklist.conf: only comment fix\n- commit b912460\n\n- locks: fix KASAN: use-after-free in trace_event_raw_event_filelock_lock (git-fixes)\n- commit 4c48f9f\n\n- fs: Fix error checking for d_hash_and_lookup() (git-fixes)\n- commit c90513f\n\n- nvme-pci: Add quirk for broken MSIs (git-fixes).\n- nvme: fix warn output about shared namespaces without\n  CONFIG_NVME_MULTIPATH (git-fixes).\n- drivers/nvme: Add quirks for device 126f:2262 (git-fixes).\n- commit fff60eb\n\n- Update\n  patches.suse/nvme-ensure-disabling-pairs-with-unquiesce.patch\n  (jsc#PED-6252 jsc#PED-5728 jsc#PED-5062 jsc#PED-3535\n  bsc#1224534).\n- commit d9497f3\n\n- octeontx2-af: fix the double free in rvu_npc_freemem() (bsc#1225712 CVE-2024-36030)\n- commit 294ca99\n\n- idpf: extend tx watchdog timeout (bsc#1224137).\n- commit fbf0ed6\n\n- kABI fix of KVM: x86/pmu: Allow programming events that match\n  unsupported arch events (bsc#1225696).\n- Refresh\n  patches.suse/KVM-x86-pmu-Allow-programming-events-that-match-unsu.patch.\n- commit 0e4ccf5\n\n- swiotlb: extend buffer pre-padding to alloc_align_mask if necessary (bsc#1224331)\n- commit c148fd3\n\n- calipso: fix memory leak in netlbl_calipso_add_pass()\n  (CVE-2023-52698 bsc#1224621)\n- commit 5fc90b9\n\n- kabi/severities: ignore IMS functions\n  They were dropped in previous patches. Noone is supposed to use them.\n- commit 494909c\n\n- smb: client: set correct id, uid and cruid for multiuser\n  automounts (bsc#1223011, CVE-2024-26822).\n- commit 6fce785\n\n- smb: client: fix potential OOBs in smb2_parse_contexts()\n  (bsc#1220148, CVE-2023-52434).\n- commit a00a7f6\n\n- dm-integrity: fix a memory leak when rechecking the data\n  (bsc#1223077, CVE-2024-26860).\n- commit 29984e7\n\n- btrfs: zoned: don't skip block groups with 100% zone unusable\n  (bsc#1220120).\n- btrfs: don't refill whole delayed refs block reserve when\n  starting transaction (bsc#1220120).\n- btrfs: add new unused block groups to the list of unused block\n  groups (bsc#1220120).\n- btrfs: do not delete unused block group if it may be used soon\n  (bsc#1220120).\n- btrfs: add and use helper to check if block group is used\n  (bsc#1220120).\n- btrfs: always reserve space for delayed refs when starting\n  transaction (bsc#1220120).\n- btrfs: stop doing excessive space reservation for csum deletion\n  (bsc#1220120).\n- btrfs: remove pointless initialization at\n  btrfs_delayed_refs_rsv_release() (bsc#1220120).\n- btrfs: reserve space for delayed refs on a per ref basis\n  (bsc#1220120).\n- btrfs: allow to run delayed refs by bytes to be released\n  instead of count (bsc#1220120).\n- btrfs: simplify check for extent item overrun at\n  lookup_inline_extent_backref() (bsc#1220120).\n- btrfs: return -EUCLEAN if extent item is missing when searching\n  inline backref (bsc#1220120).\n- btrfs: use a single variable for return value at\n  lookup_inline_extent_backref() (bsc#1220120).\n- btrfs: use a single variable for return value at\n  run_delayed_extent_op() (bsc#1220120).\n- btrfs: remove pointless 'ref_root' variable from\n  run_delayed_data_ref() (bsc#1220120).\n- btrfs: initialize key where it's used when running delayed\n  data ref (bsc#1220120).\n- btrfs: remove refs_to_drop argument from __btrfs_free_extent()\n  (bsc#1220120).\n- btrfs: remove refs_to_add argument from __btrfs_inc_extent_ref()\n  (bsc#1220120).\n- btrfs: remove the refcount warning/check at\n  btrfs_put_delayed_ref() (bsc#1220120).\n- btrfs: remove unnecessary logic when running new delayed\n  references (bsc#1220120).\n- btrfs: pass a space_info argument to\n  btrfs_reserve_metadata_bytes() (bsc#1220120).\n- btrfs: log message if extent item not found when running\n  delayed extent op (bsc#1220120).\n- btrfs: remove redundant BUG_ON() from __btrfs_inc_extent_ref()\n  (bsc#1220120).\n- btrfs: move btrfs_free_excluded_extents() into block-group.c\n  (bsc#1220120).\n- btrfs: open code trivial btrfs_add_excluded_extent()\n  (bsc#1220120).\n- btrfs: make find_first_extent_bit() return a boolean\n  (bsc#1220120).\n- btrfs: make btrfs_destroy_pinned_extent() return void\n  (bsc#1220120).\n- btrfs: make btrfs_destroy_marked_extents() return void\n  (bsc#1220120).\n- btrfs: rename add_new_free_space() to btrfs_add_new_free_space()\n  (bsc#1220120).\n- btrfs: update documentation for add_new_free_space()\n  (bsc#1220120).\n- commit 37b05cd\n\n- Refresh\n  patches.suse/0002-PKCS-7-Check-codeSigning-EKU-for-kernel-module-and-k.patch (bsc#1222771).\n  In preparation of enabling CONFIG_FIPS_SIGNATURE_SELFTEST, amend the\n  missing 'usage' argument in the pkcs7_validate_trust() invocation\n  from  the PKCS#7 selftest.\n- commit cfa0827\n\n- blacklist.conf: arm: kernel does not support folios\n- commit e0489ca\n\n- printk: Let no_printk() use _printk() (bsc#1225618).\n- commit 2abd745\n\n- printk: Update @console_may_schedule in\n  console_trylock_spinning() (bsc#1225616).\n- commit e5e7ac5\n\n- af_unix: Update unix_sk(sk)-\u0026gt;oob_skb under sk_receive_queue lock\n  (CVE-2024-26676 bsc#1222380).\n- af_unix: Don't peek OOB data without MSG_OOB (CVE-2024-26676 bsc#1222380).\n- af_unix: Clear stale u-\u0026gt;oob_skb (CVE-2024-26676 bsc#1222380).\n- commit 7722c8d\n\n- af_unix: fix use-after-free in unix_stream_read_actor()\n  (CVE-2023-52772 bsc#1224989).\n- commit 0f5ff3f\n\n- certs: Add ECDSA signature verification self-test (bsc#1222777).\n- Port \u0026quot;certs: Add ECDSA signature verification self-test\u0026quot;.\n- Enable new CONFIG_FIPS_SIGNATURE_SELFTEST_ECDSA.\n- Refresh\n  0002-PKCS-7-Check-codeSigning-EKU-for-kernel-module-and-k.patch:\n  trivial context update to Kconfig\n- commit 7338b2e\n\n- dump_stack: Do not get cpu_sync for panic CPU (bsc#1225607).\n- commit 3d953e1\n\n- printk: Avoid non-panic CPUs writing to ringbuffer\n  (bsc#1225607).\n- commit 9a41cad\n\n- certs: Move RSA self-test data to separate file (bsc#1222777).\n- Port \u0026quot;certs: Move RSA self-test data to separate file\u0026quot;.\n- Enable new CONFIG_FIPS_SIGNATURE_SELFTEST_RSA.\n- Refresh\n  patches.suse/0002-PKCS-7-Check-codeSigning-EKU-for-kernel-module-and-k.patch:\n  - trivial context update to Kconfig,\n  - account for changed pkcs7_validate_trust() callsite amended by\n    this refreshed patch.\n- commit 248ad2a\n\n- printk: Disable passing console lock owner completely during\n  panic() (bsc#1225607).\n- commit a31a4d6\n\n- printk: ringbuffer: Skip non-finalized records in panic\n  (bsc#1225607).\n- commit 8be42db\n\n- Enable CONFIG_FIPS_SIGNATURE_SELFTEST (bsc#1222771)\n- commit 4ade1c7\n\n- printk: Wait for all reserved records with pr_flush()\n  (bsc#1225607).\n- commit 4a07b6c\n\n- printk: ringbuffer: Cleanup reader terminology (bsc#1225607).\n- commit b3f2a50\n\n- printk: Add this_cpu_in_panic() (bsc#1225607).\n- commit 8afb830\n\n- printk: For @suppress_panic_printk check for other CPU in panic\n  (bsc#1225607).\n- commit f2045e0\n\n- printk: ringbuffer: Clarify special lpos values (bsc#1225607).\n- commit d1338d8\n\n- printk: ringbuffer: Do not skip non-finalized records with\n  prb_next_seq() (bsc#1225607).\n- commit 1ea687c\n\n- prctl: generalize PR_SET_MDWE support check to be per-arch\n  (bsc#1225610).\n- commit b86afe4\n\n- printk: Use prb_first_seq() as base for 32bit seq macros\n  (bsc#1225607).\n- commit ea93856\n\n- printk: Adjust mapping for 32bit seq macros (bsc#1225607).\n- commit e9e690d\n\n- blk-cgroup: fix list corruption from reorder of WRITE -\u0026gt;lqueued\n  (bsc#1225605).\n- blk-cgroup: fix list corruption from resetting io stat\n  (bsc#1225605).\n- commit c132bd3\n\n- printk: nbcon: Relocate 32bit seq macros (bsc#1225607).\n- commit 6293dd4\n\n- printk: Rename abandon_console_lock_in_panic() to\n  other_cpu_in_panic() (bsc#1225607).\n- commit 74aec78\n\n- printk: Consolidate console deferred printing (bsc#1225607).\n- commit c45374f\n\n- printk: Do not take console lock for console_flush_on_panic()\n  (bsc#1225607).\n- commit ca5038f\n\n- printk: Keep non-panic-CPUs out of console lock (bsc#1225607).\n- commit 2d7bf36\n\n- printk: Reduce console_unblank() usage in unsafe scenarios\n  (bsc#1225607).\n- commit 54eafaa\n\n- livepatch: Fix missing newline character in\n  klp_resolve_symbols() (bsc#1223539).\n- commit af0f908\n\n- blacklist.conf: workqueues: system-wide nr_active enforcement patchset;\n  not worth the risk (bsc#1225580)\n- commit 059cebc\n\n- cpumap: Zero-initialise xdp_rxq_info struct before running\n  XDP program (bsc#1224718 CVE-2024-27431).\n- commit fb7728a\n\n- kABI: bpf: struct bpf_link and bpf_link_ops kABI workaround\n  (bsc#1224531 CVE-2024-35860).\n- commit 7744489\n\n- Revert \u0026quot;PCI/MSI: Provide IMS (Interrupt Message Store) support\u0026quot;\n  (git-fixes).\n- Revert \u0026quot;PCI/MSI: Provide pci_ims_alloc/free_irq()\u0026quot; (git-fixes).\n- Revert \u0026quot;PCI/MSI: Provide stubs for IMS functions\u0026quot; (git-fixes).\n- commit 0dc394b\n\n- ppdev: Add an error check in register_device (git-fixes).\n- commit cfdb6a2\n\n- bpf: support deferring bpf_link dealloc to after RCU grace\n  period (bsc#1224531 CVE-2024-35860).\n- bpf: put uprobe link's path and task in release callback\n  (bsc#1224531 CVE-2024-35860).\n- commit a95dd44\n\n- Bluetooth: ISO: Fix not validating setsockopt user input\n  (bsc#1224581 CVE-2024-35964).\n- commit 9d49d44\n\n- blacklist.conf: workqueues: cosmetic; truncated names in ps output\n- commit 2ed068f\n\n- Bluetooth: ISO: Add support for BT_PKT_STATUS (bsc#1224581\n  CVE-2024-35964).\n- commit cadac48\n\n- Bluetooth: af_bluetooth: Make BT_PKT_STATUS generic (bsc#1224581\n  CVE-2024-35964).\n- Refresh\n  patches.suse/Bluetooth-SCO-Fix-not-validating-setsockopt-user-inp.patch.\n- commit 774d916\n\n- bpf, sockmap: Prevent lock inversion deadlock in map delete elem\n  (bsc#1209657 CVE-2023-0160 bsc#1224511 CVE-2024-35895).\n- commit fa3fb92\n\n- tpm_tis_spi: Account for SPI header when allocating TPM SPI\n  xfer buffer (git-fixes).\n- commit 6d124e2\n\n- smb: client: fix potential UAF in cifs_debug_files_proc_show()\n  (bsc#1225172, bsc#1223532, CVE-2024-26928).\n- commit 1089c4a\n\n- smb3: missing lock when picking channel (bsc#1225172,\n  bsc#1224550, CVE-2024-35999).\n- commit d7be3a1\n\n- smb: client: fix potential UAF in\n  cifs_signal_cifsd_for_reconnect() (bsc#1225172, bsc#1224766,\n  CVE-2024-35861).\n- commit 0d45a76\n\n- smb: client: fix potential UAF in smb2_is_network_name_deleted()\n  (bsc#1225172, bsc#1224764, CVE-2024-35862).\n- commit 6632102\n\n- smb: client: fix potential UAF in is_valid_oplock_break()\n  (bsc#1225172, bsc#1224763, CVE-2024-35863).\n- commit 06c348c\n\n- smb: client: fix potential UAF in smb2_is_valid_oplock_break()\n  (bsc#1225172, bsc#1224668, CVE-2024-35865).\n- commit 60bea5b\n\n- smb: client: fix potential UAF in smb2_is_valid_lease_break()\n  (bsc#1225172, bsc#1224765, CVE-2024-35864).\n- commit 52cc8d8\n\n- smb: client: fix potential UAF in cifs_stats_proc_show()\n  (bsc#1225172, bsc#1224664, CVE-2024-35867).\n- commit 3a82d6a\n\n- smb: client: fix potential UAF in cifs_stats_proc_write()\n  (bsc#1225172, bsc#1224678, CVE-2024-35868).\n- commit fb4bf4e\n\n- smb: client: fix potential UAF in cifs_dump_full_key()\n  (bsc#1225172, bsc#1224667, CVE-2024-35866).\n- commit b0961fe\n\n- smb: client: guarantee refcounted children from parent session\n  (bsc#1225172, bsc#1224679, CVE-2024-35869).\n- commit 97642d2\n\n- smb: client: fix UAF in smb2_reconnect_server() (bsc#1225172,\n  bsc#1224672, CVE-2024-35870).\n- commit e205efa\n\n- smb: Fix regression in writes when non-standard maximum write\n  size negotiated (bsc#1222464, CVE-2024-26692).\n- commit 761be1f\n\n- cifs: Fix writeback data corruption (bsc#1225172,\n  bsc#1223810, CVE-2024-27036).\n- commit 75108cc\n\n- cifs: Don't use certain unnecessary folio_*() functions\n  (bsc#1225172).\n- commit 3ddf86f\n\n- blacklist.conf: Ignore all devicetree schemes changes\n  We do not use them, so lets silence all git-fixes for them.\n- commit 84a3286\n\n- x86/bpf: Fix IP after emitting call depth accounting (bsc#1224493 CVE-2024-35903).\n- commit 1c0fa71\n\n- drm/amdgpu: Skip do PCI error slot reset during RAS recovery (CVE-2024-35931 bsc#1224652).\n- commit 1dec1c9\n\n- kabi/severities: ignore TAS2781 symbol drop, it's only locally used\n- commit f367fdb\n\n- ASoC: tas2781: Fix wrong loading calibrated data sequence\n  (git-fixes).\n- commit 5851e36\n\n- mm: page_owner: fix wrong information in dump_page_owner\n  (git-fixes).\n- ALSA: scarlett2: Add missing error check to\n  scarlett2_config_save() (git-fixes).\n- commit 4b2ccd1\n\n- x86/mm/pat: fix VM_PAT handling in COW mappings (bsc#1224525\n  CVE-2024-35877).\n- commit 24cc941\n\n- io_uring: fail NOP if non-zero op flags is passed in\n  (git-fixes).\n- io_uring/net: fix sendzc lazy wake polling (git-fixes).\n- io-wq: write next_work before dropping acct_lock (git-fixes).\n- io_uring: use the right type for work_llist empty check\n  (git-fixes).\n- io_uring/net: restore msg_control on sendzc retry (git-fixes).\n- commit 92fcddd\n\n- io_uring/kbuf: hold io_buffer_list reference over mmap\n  (git-fixes bsc#1224523 CVE-2024-35880).\n- io_uring/kbuf: protect io_buffer_list teardown with a reference\n  (git-fixes).\n  Reuses a padding space in the structure.\n- io_uring/kbuf: get rid of bl-\u0026gt;is_ready (git-fixes).\n- io_uring/kbuf: get rid of lower BGID lists (git-fixes).\n  Including kabi preservation patch.\n- io_uring/kbuf: rename is_mapped (git-fixes).\n- commit 3037746\n\n- io_uring: use private workqueue for exit work (git-fixes).\n- io_uring/rw: don't allow multishot reads without NOWAIT support\n  (git-fixes).\n- io_uring: clear opcode specific data for an early failure\n  (git-fixes).\n- io_uring: fix poll_remove stalled req completion (git-fixes).\n- io_uring: Fix release of pinned pages when __io_uaddr_map fails\n  (git-fixes bsc#1224698 CVE-2024-35831).\n- io_uring: clean rings on NO_MMAP alloc fail (git-fixes).\n- io_uring/rw: return IOU_ISSUE_SKIP_COMPLETE for multishot retry\n  (git-fixes).\n- io_uring: don't save/restore iowait state (git-fixes).\n- commit 289cc2c\n\n- io_uring: fix mshot io-wq checks (git-fixes).\n- io_uring/net: correctly handle multishot recvmsg retry setup\n  (git-fixes).\n- io_uring: fix io_queue_proc modifying req-\u0026gt;flags (git-fixes).\n- commit 78dda9b\n\n- io_uring: fix mshot read defer taskrun cqe posting (git-fixes).\n- commit de73141\n\n- ipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n  (CVE-2024-35969 bsc#1224580)\n- commit f419c6d\n\n- mlxsw: spectrum_acl_tcam: Fix memory leak when canceling rehash\n  work (CVE-2024-35852 bsc#1224502).\n- mlxsw: spectrum_acl_tcam: Fix incorrect list API usage\n  (CVE-2024-36006 bsc#1224541).\n- mlxsw: spectrum_acl_tcam: Fix warning during rehash\n  (CVE-2024-36007 bsc#1224543).\n- commit 88a980b\n\n- Revert \u0026quot;iommu/vt-d: Enable PCI/IMS\u0026quot; (git-fixes).\n- commit f424462\n\n- Revert \u0026quot;iommu/amd: Enable PCI/IMS\u0026quot; (git-fixes).\n- commit 278bf80\n\n- iommufd: Add missing IOMMUFD_DRIVER kconfig for the selftest\n  (git-fixes).\n- commit 481f9bd\n\n- btrfs: avoid start and commit empty transaction when flushing\n  qgroups (bsc#1220120).\n- btrfs: avoid start and commit empty transaction when starting\n  qgroup rescan (bsc#1220120).\n- btrfs: avoid starting and committing empty transaction when\n  flushing space (bsc#1220120).\n- btrfs: avoid starting new transaction when flushing delayed\n  items and refs (bsc#1220120).\n- btrfs: merge find_free_dev_extent() and\n  find_free_dev_extent_start() (bsc#1220120).\n- btrfs: make find_free_dev_extent() static (bsc#1220120).\n- btrfs: make btrfs_cleanup_fs_roots() static (bsc#1220120).\n- btrfs: fail priority metadata ticket with real fs error\n  (bsc#1220120).\n- btrfs: return real error when orphan cleanup fails due to a\n  transaction abort (bsc#1220120).\n- btrfs: store the error that turned the fs into error state\n  (bsc#1220120).\n- btrfs: don't steal space from global rsv after a transaction\n  abort (bsc#1220120).\n- btrfs: print available space across all block groups when\n  dumping space info (bsc#1220120).\n- btrfs: print available space for a block group when dumping\n  a space info (bsc#1220120).\n- btrfs: print block group super and delalloc bytes when dumping\n  space info (bsc#1220120).\n- btrfs: print target number of bytes when dumping free space\n  (bsc#1220120).\n- btrfs: update comment for btrfs_join_transaction_nostart()\n  (bsc#1220120).\n- commit b4554d4\n\n- mm/secretmem: fix GUP-fast succeeding on secretmem folios\n  (CVE-2024-35872 bsc#1224530).\n- commit 42a2f6f\n\n- cifs: fix charset issue in reconnection (bsc#1225172).\n- commit b4ea103\n\n- btrfs: make btrfs_destroy_delayed_refs() return void\n  (bsc#1220120).\n- btrfs: remove unnecessary prototype declarations at disk-io.c\n  (bsc#1220120).\n- btrfs: use a single switch statement when initializing delayed\n  ref head (bsc#1220120).\n- btrfs: use bool type for delayed ref head fields that are used\n  as booleans (bsc#1220120).\n- btrfs: assert correct lock is held at btrfs_select_ref_head()\n  (bsc#1220120).\n- btrfs: get rid of label and goto at insert_delayed_ref()\n  (bsc#1220120).\n- btrfs: make insert_delayed_ref() return a bool instead of an\n  int (bsc#1220120).\n- btrfs: use a bool to track qgroup record insertion when adding\n  ref head (bsc#1220120).\n- btrfs: remove pointless in_tree field from struct\n  btrfs_delayed_ref_node (bsc#1220120).\n- btrfs: remove unused is_head field from struct\n  btrfs_delayed_ref_node (bsc#1220120).\n- btrfs: reorder some members of struct btrfs_delayed_ref_head\n  (bsc#1220120).\n- commit 2e19466\n\n- btrfs: qgroup: fix qgroup prealloc rsv leak in subvolume operations (CVE-2024-35956 bsc#1224674)\n- commit 9bb0c20\n\n- Update patches.suse/btrfs-send-handle-path-ref-underflow-in-header-itera.patch (CVE-2024-35935 bsc#1224645)\n- commit 5aa2b5a\n\n- btrfs: make error messages more clear when getting a chunk map (git-fixes)\n- commit 47ecf55\n\n- blacklist.conf: btrfs: compilation warning fix\n- commit 02490e2\n\n- blacklist.conf: btrfs: code not built\n- commit 5199fc3\n\n- btrfs: compare the correct fsid/metadata_uuid in btrfs_validate_super (git-fixes)\n- commit 907e740\n\n- tracing: Add MODULE_DESCRIPTION() to preemptirq_delay_test\n  (git-fixes).\n- commit 113163c\n\n- btrfs: use the correct superblock to compare fsid in btrfs_validate_super (git-fixes)\n- commit 4318f3e\n\n- ring-buffer: Fix a race between readers and resize checks\n  (git-fixes).\n- commit 568ebcf\n\n- btrfs: add a helper to read the superblock metadata_uuid (git-fixes)\n- commit 543d7b8\n\n- ftrace: Fix possible use-after-free issue in ftrace_location()\n  (git-fixes).\n- commit 4cf7fca\n\n- tracing: hide unused ftrace_event_id_fops (git-fixes).\n- commit 61c90c7\n\n- blacklist.conf: add not-relevant tracing commits\n- commit b97c070\n\n- x86/retpoline: Do the necessary fixup to the Zen3/4 srso return thunk  for !SRSO (git-fixes).\n- commit 1340b2d\n\n- x86/efistub: Add missing boot_params for mixed mode compat entry (git-fixes).\n- commit 12dcb3a\n\n- x86/efistub: Call mixed mode boot services on the firmware's stack (git-fixes).\n- commit 9d83518\n\n- x86/pm: Work around false positive kmemleak report in msr_build_context() (git-fixes).\n- commit 2e5a312\n\n- x86/kconfig: Select ARCH_WANT_FRAME_POINTERS again when UNWINDER_FRAME_POINTER=y (git-fixes).\n- commit 453faa5\n\n- x86/mce: Make sure to grab mce_sysfs_mutex in set_bank() (git-fixes).\n- commit e894262\n\n- mm/slab: make __free(kfree) accept error pointers (git-fixes).\n- commit 8b5f449\n\n- x86/Kconfig: Remove CONFIG_AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT (git-fixes).\n- commit fa1d89a\n\n- Update\n  patches.suse/virtio_net-Do-not-send-RSS-key-if-it-is-not-supporte.patch\n  (bsc#1224565, CVE-2024-35981).\n- commit 50a448d\n\n- Update\n  patches.suse/KVM-x86-Mark-target-gfn-of-emulated-atomic-instructi.patch\n  (bsc#1224638, CVE-2024-35804).\n- commit aac65c3\n\n- Update\n  patches.suse/KVM-SVM-Flush-pages-under-kvm-lock-to-fix-UAF-in-svm.patch\n  (bsc#1224725, CVE-2024-35791).\n- commit 80eb8d1\n\n- cxl/port: Fix delete_endpoint() vs parent unregistration race\n  (CVE-2023-52771 bsc#1225007).\n- commit b115e15\n\n- i3c: master: svc: change ENXIO to EAGAIN when IBI occurs during\n  start frame (git-fixes).\n- commit cc09a8e\n\n- kselftest: Add a ksft_perror() helper (stable-fixes).\n- Refresh\n  patches.suse/selftests-timers-posix_timers-Reimplement-check_time.patch.\n- commit f14f41c\n\n- nilfs2: fix unexpected freezing of nilfs_segctor_sync()\n  (git-fixes).\n- nilfs2: fix use-after-free of timer for log writer thread\n  (git-fixes).\n- kasan, fortify: properly rename memintrinsics (git-fixes).\n- i3c: master: svc: fix invalidate IBI type and miss call client\n  IBI handler (git-fixes).\n- serial: kgdboc: Fix NMI-safety problems from keyboard reset code\n  (stable-fixes).\n- drm/amd/display: Fix division by zero in setup_dsc_config\n  (stable-fixes).\n- docs: kernel_include.py: Cope with docutils 0.21 (stable-fixes).\n- mmc: core: Add HS400 tuning in HS400es initialization\n  (stable-fixes).\n- commit 0b2962b\n\n- Bluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()\n  (git-fixes).\n- commit 3e2fb47\n\n- ALSA: hda/realtek: fix mute/micmute LEDs don't work for ProBook\n  440/460 G11 (stable-fixes).\n- ALSA: hda/realtek: Enable headset mic of JP-IK LEAP W502 with\n  ALC897 (stable-fixes).\n- ALSA: usb-audio: Fix for sampling rates support for Mbox3\n  (stable-fixes).\n- ALSA: timer: Set lower bound of start tick time (stable-fixes).\n- ALSA: usb-audio: Add sampling rates support for Mbox3\n  (stable-fixes).\n- commit ae40914\n\n- drm/nouveau: use tile_mode and pte_kind for VM_BIND bo\n  allocations (git-fixes).\n- Input: cyapa - add missing input core locking to suspend/resume\n  functions (git-fixes).\n- Input: pm8xxx-vibrator - correct VIB_MAX_LEVELS calculation\n  (git-fixes).\n- Input: ims-pcu - fix printf string overflow (git-fixes).\n- ASoC: tas2552: Add TX path for capturing AUDIO-OUT data\n  (git-fixes).\n- ALSA: core: Fix NULL module pointer assignment at card init\n  (git-fixes).\n- speakup: Fix sizeof() vs ARRAY_SIZE() bug (git-fixes).\n- serial: sc16is7xx: fix bug in sc16is7xx_set_baud() when using\n  prescaler (git-fixes).\n- serial: 8250_bcm7271: use default_mux_rate if possible\n  (git-fixes).\n- serial: 8520_mtk: Set RTS on shutdown for Rx in-band wakeup\n  (git-fixes).\n- tty: n_gsm: fix missing receive state reset after mode switch\n  (git-fixes).\n- tty: n_gsm: fix possible out-of-bounds in gsm0_receive()\n  (git-fixes).\n- commit be92dbc\n\n- io_uring/net: fix overflow check in io_recvmsg_mshot_prep()\n  (git-fixes CVE-2024-35827 bsc#1224606).\n- commit e6510ec\n\n- io_uring/net: move receive multishot out of the generic msghdr\n  path (git-fixes).\n- commit 98302d6\n\n- io_uring/net: unify how recvmsg and sendmsg copy in the msghdr\n  (git-fixes).\n- commit 8bed9be\n\n- cifs: handle cases where multiple sessions share connection\n  (bsc#1225172).\n- commit 6704757\n\n- smb3: show beginning time for per share stats (bsc#1225172).\n- commit 9dab491\n\n- cifs: cifs_chan_is_iface_active should be called with chan_lock\n  held (bsc#1225172).\n- commit 7f878c6\n\n- cifs: do not pass cifs_sb when trying to add channels\n  (bsc#1225172).\n- commit b48e89f\n\n- smb: client: remove extra @chan_count check in\n  __cifs_put_smb_ses() (bsc#1225172).\n- commit 58e3272\n\n- cifs: reconnect work should have reference on server struct\n  (bsc#1225172).\n- commit f1bff59\n\n- cifs: handle cases where a channel is closed (bsc#1225172).\n- commit c305501\n\n- smb: client: reduce stack usage in cifs_try_adding_channels()\n  (bsc#1225172).\n- commit 16a3d64\n\n- smb: client: get rid of dfs code dep in namespace.c\n  (bsc#1225172).\n- commit 658ebd6\n\n- smb: client: get rid of dfs naming in automount code\n  (bsc#1225172).\n- commit b47e685\n\n- smb: client: rename cifs_dfs_ref.c to namespace.c (bsc#1225172).\n- commit 429bc2d\n\n- smb: client: ensure to try all targets when finding nested links\n  (bsc#1225172).\n- commit b03bac4\n\n- smb: client: introduce DFS_CACHE_TGT_LIST() (bsc#1225172).\n- commit f066846\n\n- cifs: account for primary channel in the interface list\n  (bsc#1225172).\n- commit 28558fb\n\n- cifs: distribute channels across interfaces based on speed\n  (bsc#1225172).\n- commit 66db7c6\n\n- io_uring: remove unconditional looping in local task_work\n  handling (git-fixes).\n- commit 1df83aa\n\n- io_uring: remove looping around handling traditional task_work\n  (git-fixes).\n- commit 6bdc394\n\n- dmaengine: dw-edma: eDMA: Add sync read before starting the\n  DMA transfer in remote setup (CVE-2024-27408 bsc#1224430).\n- commit 26ca7a6\n\n- pmdomain: ti: Add a null pointer check to the\n  omap_prm_domain_init (CVE-2024-35943 bsc#1224649).\n- commit 4abda58\n\n- media: mediatek: vcodec: Fix oops when HEVC init fails\n  (CVE-2024-35921 bsc#1224477).\n- commit 7226612\n\n- drivers/perf: hisi: use cpuhp_state_remove_instance_nocalls()\n  for hisi_hns3_pmu uninit process (CVE-2023-52860 bsc#1224936).\n- commit f0f6842\n\n- kABI workaround for struct idxd_evl (CVE-2024-35991\n  bsc#1224553).\n- commit 4c82821\n\n- dmaengine: idxd: Convert spinlock to mutex to lock evl workqueue\n  (CVE-2024-35991 bsc#1224553).\n- commit bba26d6\n\n- sched/topology: Optimize topology_span_sane() (bsc#1225053).\n- cpumask: Add for_each_cpu_from() (bsc#1225053).\n- commit a6ca3d0\n\n- mlxsw: spectrum_acl_tcam: Fix possible use-after-free during\n  rehash (CVE-2024-35854 bsc#1224636).\n- commit 2a8bef6\n\n- net: mctp: take ownership of skb in mctp_local_output\n  (CVE-2024-27418 bsc#1224720)\n- commit afb99d9\n\n- ipv6: fix potential \u0026quot;struct net\u0026quot; leak in inet6_rtm_getaddr()\n  (CVE-2024-27417 bsc#1224721)\n- commit 4e68c84\n\n- regulator: bd71828: Don't overwrite runtime voltages\n  (git-fixes).\n- nfc: nci: Fix handling of zero-length payload packets in\n  nci_rx_work() (git-fixes).\n- nfc: nci: Fix uninit-value in nci_rx_work (git-fixes).\n- selftests: net: kill smcrouted in the cleanup logic in amt.sh\n  (git-fixes).\n- tools/latency-collector: Fix -Wformat-security compile warns\n  (git-fixes).\n- commit 3a26e1a\n\n- bpf: Protect against int overflow for stack access size\n  (bsc#1224488 CVE-2024-35905).\n- bpf: Check bloom filter map value size (bsc#1224488\n  CVE-2024-35905).\n- commit 5fa3c11\n\n- io_uring: drop any code related to SCM_RIGHTS (git-fixes\n  CVE-2023-52656 bsc#1224187).\n- io_uring/unix: drop usage of io_uring socket (git-fixes).\n- Refresh\n  patches.suse/fs-Rename-anon_inode_getfile_secure-and-anon_inode_getfd_secure.\n  Commit together because this required explicit merging with the\n  anonymous inode creation function change. Incldues kabi fix up.\n- commit b304b67\n\n- autofs: use wake_up() instead of wake_up_interruptible(()\n  (bsc#1224166).\n- commit eb57c74\n\n- Update patches.suse/scsi-qedf-Wait-for-stag-work-during-unload.patch (bsc#1214852)\n- Update patches.suse/scsi-qedf-Don-t-process-stag-work-during-unload.patch (bsc#1214852)\n- commit 4cb5fde\n\n- Remove NTFSv3 from configs (bsc#1224429)\n  References: bsc#1224429 comment#3\n  We only support fuse version of the NTFS-3g driver. Disable NTFSv3 from\n  all configs.\n  This was enabled in\n  d016c04d731 (\u0026quot;Bump to 6.4 kernel (jsc#PED-4593)\u0026quot;)\n- commit b4be251\n\n- s390/ipl: Fix incorrect initialization of len fields in nvme\n  reipl block (git-fixes bsc#1225136).\n- commit 273e6f4\n\n- s390/ipl: Fix incorrect initialization of nvme dump block\n  (git-fixes bsc#1225134).\n- commit 955c716\n\n- s390/cpacf: Split and rework cpacf query functions (git-fixes\n  bsc#1225133).\n- commit ee9583e\n\n- s390/bpf: Fix bpf_plt pointer arithmetic (git-fixes bsc#1224481\n  CVE-2024-35917).\n- commit 34e1a55\n\n- Move upstreamed mm patches into sorted section\n- commit e3937f1\n\n- Move upstreamed powerpc patches into sorted section\n- commit fdb5fa6\n\n- kABI workaround for cs35l56 (git-fixes).\n- commit 331f8f7\n\n- ASoC: SOF: Intel: mtl: call dsp dump when boot retry fails\n  (stable-fixes).\n- Refresh\n  patches.suse/ASoC-SOF-Intel-mtl-Implement-firmware-boot-state-che.patch.\n- commit 8e475f5\n\n- ASoC: SOF: Intel: mtl: Disable interrupts when firmware boot\n  failed (git-fixes).\n- ASoC: cs35l56: Prevent overwriting firmware ASP config\n  (git-fixes).\n- commit 1a7f82c\n\n- ALSA: scarlett2: Add clamp() in scarlett2_mixer_ctl_put()\n  (CVE-2023-52674 bsc#1224727).\n- ALSA: scarlett2: Add missing error checks to *_ctl_get()\n  (CVE-2023-52680 bsc#1224608).\n- ALSA: scarlett2: Add missing error check to\n  scarlett2_usb_set_config() (CVE-2023-52692 bsc#1224628).\n- commit fff59c9\n\n- vmci: prevent speculation leaks by sanitizing event in\n  event_deliver() (git-fixes).\n- VMCI: Fix an error handling path in vmci_guest_probe_device()\n  (git-fixes).\n- VMCI: Fix possible memcpy() run-time warning in\n  vmci_datagram_invoke_guest_handler() (stable-fixes).\n- VMCI: Fix memcpy() run-time warning in dg_dispatch_as_host()\n  (stable-fixes CVE-2024-35944 bsc#1224648).\n- commit d9694ad\n\n- spmi: hisi-spmi-controller: Do not override device identifier\n  (git-fixes).\n- extcon: max8997: select IRQ_DOMAIN instead of depending on it\n  (git-fixes).\n- interconnect: qcom: qcm2290: Fix mas_snoc_bimc QoS port\n  assignment (git-fixes).\n- iio: pressure: dps310: support negative temperature values\n  (git-fixes).\n- iio: adc: stm32: Fixing err code to not indicate success\n  (git-fixes).\n- iio: core: Leave private pointer NULL when no private data\n  supplied (git-fixes).\n- counter: linux/counter.h: fix Excess kernel-doc description\n  warning (git-fixes).\n- staging: vt6655: Remove unused declaration of\n  RFbAL7230SelectChannelPostProcess() (git-fixes).\n- serial: sh-sci: protect invalidating RXDMA on shutdown\n  (git-fixes).\n- serial: sc16is7xx: add proper sched.h include for\n  sched_set_fifo() (git-fixes).\n- serial: max3100: Fix bitwise types (git-fixes).\n- serial: max3100: Update uart_driver_registered on driver removal\n  (git-fixes).\n- serial: max3100: Lock port-\u0026gt;lock when calling\n  uart_handle_cts_change() (git-fixes).\n- usb: fotg210: Add missing kernel doc description (git-fixes).\n- usb: typec: tipd: fix event checking for tps6598x (git-fixes).\n- usb: typec: ucsi: displayport: Fix potential deadlock\n  (git-fixes).\n- usb: dwc3: Wait unconditionally after issuing EndXfer command\n  (git-fixes).\n- usb: gadget: u_audio: Clear uac pointer when freed (git-fixes).\n- usb: gadget: u_audio: Fix race condition use of controls after\n  free during gadget unbind (git-fixes).\n- usb: typec: ucsi: simplify partner's PD caps registration\n  (git-fixes).\n- usb: typec: ucsi: always register a link to USB PD device\n  (git-fixes).\n- leds: pwm: Disable PWM when going to suspend (git-fixes).\n- commit 0d08462\n\n- af_unix: Suppress false-positive lockdep splat for spin_lock()\n  in __unix_gc() (CVE-2024-26923 bsc#1223384).\n- af_unix: fix lockdep positive in sk_diag_dump_icons()\n  (CVE-2024-26923 bsc#1223384).\n- commit a652e3a\n\n- Update\n  patches.suse/ACPI-CPPC-Use-access_width-over-bit_width-for-system.patch\n  (stable-fixes CVE-2024-35995 bsc#1224557).\n- Update\n  patches.suse/ALSA-usb-audio-Stop-parsing-channels-bits-when-all-c.patch\n  (git-fixes CVE-2024-27436 bsc#1224803).\n- Update\n  patches.suse/ASoC-SOF-ipc4-pcm-Workaround-for-crashed-firmware-on.patch\n  (stable-fixes CVE-2024-27057 bsc#1223831).\n- Update\n  patches.suse/ASoC-mediatek-sof-common-Add-NULL-check-for-normal_l.patch\n  (git-fixes CVE-2024-35842 bsc#1224688).\n- Update\n  patches.suse/Bluetooth-Fix-memory-leak-in-hci_req_sync_complete.patch\n  (git-fixes CVE-2024-35978 bsc#1224571).\n- Update\n  patches.suse/Bluetooth-Fix-use-after-free-bugs-caused-by-sco_sock.patch\n  (git-fixes CVE-2024-27398 bsc#1224174).\n- Update\n  patches.suse/Bluetooth-L2CAP-Fix-not-validating-setsockopt-user-i.patch\n  (git-fixes CVE-2024-35965 bsc#1224579).\n- Update\n  patches.suse/Bluetooth-RFCOMM-Fix-not-validating-setsockopt-user-.patch\n  (git-fixes CVE-2024-35966 bsc#1224576).\n- Update\n  patches.suse/Bluetooth-SCO-Fix-not-validating-setsockopt-user-inp.patch\n  (git-fixes CVE-2024-35967 bsc#1224587).\n- Update\n  patches.suse/Bluetooth-btintel-Fix-null-ptr-deref-in-btintel_read.patch\n  (stable-fixes CVE-2024-35933 bsc#1224640).\n- Update\n  patches.suse/Bluetooth-hci_event-Fix-handling-of-HCI_EV_IO_CAPA_R.patch\n  (git-fixes CVE-2024-27416 bsc#1224723).\n- Update\n  patches.suse/Bluetooth-hci_sock-Fix-not-validating-setsockopt-use.patch\n  (git-fixes CVE-2024-35963 bsc#1224582).\n- Update\n  patches.suse/Bluetooth-l2cap-fix-null-ptr-deref-in-l2cap_chan_tim.patch\n  (git-fixes CVE-2024-27399 bsc#1224177).\n- Update\n  patches.suse/Bluetooth-qca-fix-NULL-deref-on-non-serdev-setup.patch\n  (git-fixes CVE-2024-35850 bsc#1224600).\n- Update\n  patches.suse/Bluetooth-qca-fix-NULL-deref-on-non-serdev-suspend.patch\n  (git-fixes CVE-2024-35851 bsc#1224509).\n- Update\n  patches.suse/Bluetooth-rfcomm-Fix-null-ptr-deref-in-rfcomm_check_.patch\n  (bsc#1219170 CVE-2024-22099 CVE-2024-26903 bsc#1223187).\n- Update\n  patches.suse/HID-i2c-hid-remove-I2C_HID_READ_PENDING-flag-to-prev.patch\n  (git-fixes CVE-2024-35997 bsc#1224552).\n- Update\n  patches.suse/NFS-Fix-nfs_netfs_issue_read-xarray-locking-for-writ.patch\n  (git-fixes CVE-2024-27031 bsc#1223805).\n- Update\n  patches.suse/NFSv4.2-fix-nfs4_listxattr-kernel-BUG-at-mm-usercopy.patch\n  (git-fixes CVE-2024-26870 bsc#1223113).\n- Update\n  patches.suse/PCI-PM-Drain-runtime-idle-callbacks-before-driver-re.patch\n  (stable-fixes CVE-2024-35809 bsc#1224738).\n- Update\n  patches.suse/SUNRPC-fix-some-memleaks-in-gssx_dec_option_array.patch\n  (git-fixes CVE-2024-27388 bsc#1223744).\n- Update\n  patches.suse/USB-core-Fix-deadlock-in-usb_deauthorize_interface.patch\n  (git-fixes CVE-2024-26934 bsc#1223671).\n- Update patches.suse/accel-ivpu-Fix-deadlock-in-context_xa.patch\n  (git-fixes CVE-2024-35953 bsc#1224704).\n- Update\n  patches.suse/arm64-hibernate-Fix-level3-translation-fault-in-swsu.patch\n  (git-fixes CVE-2024-26989 bsc#1223748).\n- Update patches.suse/ax25-Fix-netdev-refcount-issue.patch\n  (git-fixes CVE-2024-36009 bsc#1224542).\n- Update\n  patches.suse/ax25-fix-use-after-free-bugs-caused-by-ax25_ds_del_t.patch\n  (git-fixes CVE-2024-35887 bsc#1224663).\n- Update\n  patches.suse/batman-adv-Avoid-infinite-loop-trying-to-resize-loca.patch\n  (git-fixes CVE-2024-35982 bsc#1224566).\n- Update\n  patches.suse/block-fix-q-blkg_list-corruption-during-disk-rebind.patch\n  (bsc#1223591 CVE-2024-35974 bsc#1224573).\n- Update\n  patches.suse/bnxt_en-Fix-possible-memory-leak-in-bnxt_rdma_aux_de.patch\n  (git-fixes CVE-2024-35972 bsc#1224577).\n- Update\n  patches.suse/bootconfig-use-memblock_free_late-to-free-xbc-memory.patch\n  (git-fixes CVE-2024-26983 bsc#1223637).\n- Update\n  patches.suse/btrfs-fix-deadlock-with-fiemap-and-extent-locking.patch\n  (bsc#1223285 CVE-2024-35784 bsc#1224804).\n- Update\n  patches.suse/btrfs-fix-information-leak-in-btrfs_ioctl_logical_to.patch\n  (git-fixes CVE-2024-35849 bsc#1224733).\n- Update\n  patches.suse/btrfs-fix-race-between-ordered-extent-completion-and.patch\n  (bsc#1223285 CVE-2024-26794 bsc#1222426).\n- Update\n  patches.suse/btrfs-fix-race-when-detecting-delalloc-ranges-during.patch\n  (bsc#1223285 CVE-2024-27080 bsc#1223782).\n- Update\n  patches.suse/btrfs-handle-chunk-tree-lookup-error-in-btrfs_reloca.patch\n  (git-fixes CVE-2024-35936 bsc#1224644).\n- Update\n  patches.suse/clk-Get-runtime-PM-before-walking-tree-during-disabl.patch\n  (git-fixes CVE-2024-27004 bsc#1223762).\n- Update\n  patches.suse/clk-Get-runtime-PM-before-walking-tree-for-clk_summa.patch\n  (git-fixes CVE-2024-27003 bsc#1223761).\n- Update\n  patches.suse/clk-mediatek-Do-a-runtime-PM-get-on-controllers-duri.patch\n  (git-fixes CVE-2024-27002 bsc#1223759).\n- Update\n  patches.suse/comedi-vmk80xx-fix-incomplete-endpoint-checking.patch\n  (git-fixes CVE-2024-27001 bsc#1223698).\n- Update\n  patches.suse/dm-raid-really-frozen-sync_thread-during-suspend-16c4.patch\n  (jsc#PED-7542 CVE-2024-35794 bsc#1224706).\n- Update\n  patches.suse/dm-raid456-md-raid456-fix-a-deadlock-for-dm-raid456-4142.patch\n  (bsc#1219596 CVE-2024-26962 bsc#1223654).\n- Update\n  patches.suse/dma-buf-Fix-NULL-pointer-dereference-in-sanitycheck.patch\n  (git-fixes CVE-2024-35916 bsc#1224480).\n- Update patches.suse/dma-xilinx_dpdma-Fix-locking.patch\n  (git-fixes CVE-2024-35990 bsc#1224559).\n- Update\n  patches.suse/dmaengine-fsl-qdma-Fix-a-memory-leak-related-to-the--3aa58cb.patch\n  (git-fixes CVE-2024-35833 bsc#1224632).\n- Update\n  patches.suse/dmaengine-idxd-Fix-oops-during-rmmod-on-single-CPU-p.patch\n  (git-fixes CVE-2024-35989 bsc#1224558).\n- Update\n  patches.suse/dpll-fix-dpll_pin_on_pin_register-for-multiple-paren.patch\n  (CVE-2024-27027 bsc#1223787 CVE-2024-36002 bsc#1224546).\n- Update\n  patches.suse/dpll-fix-pin-dump-crash-for-rebound-module.patch\n  (jsc#PED-6079 CVE-2024-35836 bsc#1224633).\n- Update\n  patches.suse/drm-Check-output-polling-initialized-before-disablin.patch\n  (stable-fixes CVE-2024-35927 bsc#1224654).\n- Update\n  patches.suse/drm-amd-amdgpu-Fix-potential-ioremap-memory-leaks-in.patch\n  (stable-fixes CVE-2024-35928 bsc#1224653).\n- Update\n  patches.suse/drm-amd-display-Fix-bounds-check-for-dcn35-DcfClocks.patch\n  (git-fixes CVE-2024-35788 bsc#1224709).\n- Update\n  patches.suse/drm-amd-display-Prevent-crash-when-disable-stream.patch\n  (stable-fixes CVE-2024-35799 bsc#1224740).\n- Update\n  patches.suse/drm-amdgpu-amdgpu_ttm_gart_bind-set-gtt-bound-flag.patch\n  (stable-fixes CVE-2024-35817 bsc#1224736).\n- Update\n  patches.suse/drm-amdgpu-fix-deadlock-while-reading-mqd-from-debug.patch\n  (git-fixes CVE-2024-35795 bsc#1224634).\n- Update\n  patches.suse/drm-amdgpu-fix-mmhub-client-id-out-of-bounds-access.patch\n  (git-fixes CVE-2024-27029 bsc#1223789).\n- Update\n  patches.suse/drm-amdgpu-once-more-fix-the-call-oder-in-amdgpu_ttm.patch\n  (git-fixes CVE-2024-27400 bsc#1224180).\n- Update\n  patches.suse/drm-amdgpu-pm-Fix-NULL-pointer-dereference-when-get-.patch\n  (git-fixes CVE-2024-26949 bsc#1223665).\n- Update\n  patches.suse/drm-amdgpu-validate-the-parameters-of-bo-mapping-ope.patch\n  (git-fixes CVE-2024-26922 bsc#1223315).\n- Update\n  patches.suse/drm-amdkfd-Fix-memory-leak-in-create_process-failure.patch\n  (git-fixes CVE-2024-26986 bsc#1223728).\n- Update patches.suse/drm-ast-Fix-soft-lockup.patch (git-fixes\n  CVE-2024-35952 bsc#1224705).\n- Update\n  patches.suse/drm-client-Fully-protect-modes-with-dev-mode_config..patch\n  (stable-fixes CVE-2024-35950 bsc#1224703).\n- Update\n  patches.suse/drm-i915-bios-Tolerate-devdata-NULL-in-intel_bios_en.patch\n  (stable-fixes CVE-2024-26938 bsc#1223678).\n- Update\n  patches.suse/drm-i915-gt-Reset-queue_priority_hint-on-parking.patch\n  (git-fixes CVE-2024-26937 bsc#1223677).\n- Update\n  patches.suse/drm-lima-fix-a-memleak-in-lima_heap_alloc.patch\n  (git-fixes CVE-2024-35829 bsc#1224707).\n- Update\n  patches.suse/drm-nouveau-fix-stale-locked-mutex-in-nouveau_gem_io.patch\n  (git-fixes CVE-2024-35786 bsc#1224714).\n- Update\n  patches.suse/drm-nouveau-keep-DMA-buffers-required-for-suspend-re.patch\n  (git-fixes CVE-2024-27411 bsc#1224433).\n- Update patches.suse/drm-nv04-Fix-out-of-bounds-access.patch\n  (git-fixes CVE-2024-27008 bsc#1223802).\n- Update\n  patches.suse/drm-panfrost-Fix-the-error-path-in-panfrost_mmu_map_.patch\n  (git-fixes CVE-2024-35951 bsc#1224701).\n- Update\n  patches.suse/drm-vc4-don-t-check-if-plane-state-fb-state-fb.patch\n  (stable-fixes CVE-2024-35932 bsc#1224650).\n- Update\n  patches.suse/drm-vmwgfx-Create-debugfs-ttm_resource_manager-entry.patch\n  (git-fixes CVE-2024-26940 bsc#1223718).\n- Update\n  patches.suse/drm-vmwgfx-Fix-the-lifetime-of-the-bo-cursor-memory.patch\n  (git-fixes CVE-2024-35810 bsc#1224626).\n- Update\n  patches.suse/dyndbg-fix-old-BUG_ON-in-control-parser.patch\n  (stable-fixes CVE-2024-35947 bsc#1224647).\n- Update\n  patches.suse/efi-capsule-loader-fix-incorrect-allocation-size.patch\n  (git-fixes CVE-2024-27413 bsc#1224438).\n- Update patches.suse/efi-fix-panic-in-kdump-kernel.patch\n  (git-fixes CVE-2024-35800 bsc#1224507).\n- Update\n  patches.suse/fat-fix-uninitialized-field-in-nostale-filehandles.patch\n  (git-fixes CVE-2024-26973 bsc#1223641).\n- Update\n  patches.suse/fbmon-prevent-division-by-zero-in-fb_videomode_from_.patch\n  (stable-fixes CVE-2024-35922 bsc#1224660).\n- Update\n  patches.suse/fs-aio-Check-IOCB_AIO_RW-before-the-struct-aio_kiocb.patch\n  (bsc#1222721 CVE-2024-26764 CVE-2024-35815 bsc#1224685).\n- Update\n  patches.suse/geneve-fix-header-validation-in-geneve-6-_xmit_skb.patch\n  (git-fixes CVE-2024-35973 bsc#1224586).\n- Update\n  patches.suse/geneve-make-sure-to-pull-inner-header-in-geneve_rx.patch\n  (git-fixes CVE-2024-26857 bsc#1223058).\n- Update\n  patches.suse/i2c-smbus-fix-NULL-function-pointer-dereference.patch\n  (git-fixes CVE-2024-35984 bsc#1224567).\n- Update\n  patches.suse/ice-fix-memory-corruption-bug-with-suspend-and-rebui.patch\n  (git-fixes CVE-2024-35911 bsc#1224486).\n- Update\n  patches.suse/ice-fix-uninitialized-dplls-mutex-usage.patch\n  (git-fixes CVE-2024-26854 bsc#1223039).\n- Update\n  patches.suse/idpf-fix-kernel-panic-on-unknown-packet-types.patch\n  (git-fixes CVE-2024-35889 bsc#1224517).\n- Update\n  patches.suse/igc-avoid-returning-frame-twice-in-XDP_REDIRECT.patch\n  (git-fixes CVE-2024-26853 bsc#1223061).\n- Update\n  patches.suse/init-main.c-Fix-potential-static_command_line-memory.patch\n  (git-fixes CVE-2024-26988 bsc#1223747).\n- Update\n  patches.suse/iommufd-Fix-iopt_access_list_id-overwrite-bug.patch\n  (git-fixes CVE-2024-26786 bsc#1222780).\n- Update\n  patches.suse/irqchip-gic-v3-its-Prevent-double-free-on-error.patch\n  (git-fixes CVE-2024-35847 bsc#1224697).\n- Update\n  patches.suse/kprobes-Fix-possible-use-after-free-issue-on-kprobe-registration.patch\n  (git-fixes CVE-2024-35955 bsc#1224676).\n- Update\n  patches.suse/mac802154-fix-llsec-key-resources-release-in-mac8021.patch\n  (git-fixes CVE-2024-26961 bsc#1223652).\n- Update\n  patches.suse/md-dm-raid-don-t-call-md_reap_sync_thread-directly-cd32.patch\n  (jsc#PED-7542 CVE-2024-35808 bsc#1224623).\n- Update patches.suse/md-fix-kmemleak-of-rdev-serial-6cf3.patch\n  (jsc#PED-7542 CVE-2024-26900 bsc#1223046).\n- Update\n  patches.suse/media-tc358743-register-v4l2-async-device-only-after.patch\n  (git-fixes CVE-2024-35830 bsc#1224680).\n- Update\n  patches.suse/misc-lis3lv02d_i2c-Fix-regulators-getting-en-dis-abl.patch\n  (git-fixes CVE-2024-35824 bsc#1224609).\n- Update\n  patches.suse/mlxbf_gige-call-request_irq-after-NAPI-initialized.patch\n  (git-fixes CVE-2024-35907 bsc#1224492).\n- Update\n  patches.suse/mlxbf_gige-stop-interface-during-shutdown.patch\n  (git-fixes CVE-2024-35885 bsc#1224519).\n- Update\n  patches.suse/mmc-core-Avoid-negative-index-with-array-access.patch\n  (git-fixes CVE-2024-35813 bsc#1224618).\n- Update\n  patches.suse/msft-hv-2971-net-mana-Fix-Rx-DMA-datasize-and-skb_over_panic.patch\n  (git-fixes CVE-2024-35901 bsc#1224495).\n- Update\n  patches.suse/net-ena-Fix-incorrect-descriptor-free-behavior.patch\n  (git-fixes CVE-2024-35958 bsc#1224677).\n- Update\n  patches.suse/net-ethernet-mtk_eth_soc-fix-PPE-hanging-issue.patch\n  (git-fixes CVE-2024-27432 bsc#1224716).\n- Update\n  patches.suse/net-hns3-fix-kernel-crash-when-1588-is-received-on-H.patch\n  (git-fixes CVE-2024-26881 bsc#1223041).\n- Update\n  patches.suse/net-ice-Fix-potential-NULL-pointer-dereference-in-ic.patch\n  (git-fixes CVE-2024-26855 bsc#1223051).\n- Update\n  patches.suse/net-ks8851-Handle-softirqs-at-the-end-of-IRQ-thread-.patch\n  (git-fixes CVE-2024-35971 bsc#1224578).\n- Update\n  patches.suse/net-ll_temac-platform_get_resource-replaced-by-wrong.patch\n  (git-fixes CVE-2024-35796 bsc#1224615).\n- Update\n  patches.suse/net-mlx5-Properly-link-new-fs-rules-into-the-tree.patch\n  (git-fixes CVE-2024-35960 bsc#1224588).\n- Update\n  patches.suse/net-mlx5-Register-devlink-first-under-devlink-lock.patch\n  (git-fixes CVE-2024-35961 bsc#1224585).\n- Update\n  patches.suse/net-mlx5e-Fix-mlx5e_priv_init-cleanup-flow.patch\n  (git-fixes CVE-2024-35959 bsc#1224666).\n- Update\n  patches.suse/net-mlx5e-Use-a-memory-barrier-to-enforce-PTP-WQ-xmi.patch\n  (git-fixes CVE-2024-26858 bsc#1223020).\n- Update\n  patches.suse/net-mlx5e-fix-a-double-free-in-arfs_create_groups.patch\n  (jsc#PED-3311 CVE-2024-35835 bsc#1224605).\n- Update\n  patches.suse/net-mvpp2-clear-BM-pool-before-initialization.patch\n  (git-fixes CVE-2024-35837 bsc#1224500).\n- Update\n  patches.suse/net-phy-micrel-Fix-potential-null-pointer-dereferenc.patch\n  (git-fixes CVE-2024-35891 bsc#1224513).\n- Update\n  patches.suse/net-phy-phy_device-Prevent-nullptr-exceptions-on-ISR.patch\n  (stable-fixes CVE-2024-35945 bsc#1224639).\n- Update\n  patches.suse/net-sparx5-Fix-use-after-free-inside-sparx5_del_mact.patch\n  (git-fixes CVE-2024-26856 bsc#1223052).\n- Update patches.suse/net-tls-fix-WARNIING-in-__sk_msg_free.patch\n  (bsc#1221858 CVE-2024-35841 bsc#1224687).\n- Update\n  patches.suse/net-wwan-t7xx-Split-64bit-accesses-to-fix-alignment-.patch\n  (git-fixes CVE-2024-35909 bsc#1224491).\n- Update\n  patches.suse/nfc-nci-Fix-uninit-value-in-nci_dev_up-and-nci_ntf_p.patch\n  (git-fixes CVE-2024-35915 bsc#1224479).\n- Update\n  patches.suse/nfp-flower-handle-acti_netdevs-allocation-failure.patch\n  (git-fixes CVE-2024-27046 bsc#1223827).\n- Update\n  patches.suse/nfs-fix-panic-when-nfs4_ff_layout_prepare_ds-fails.patch\n  (git-fixes CVE-2024-26868 bsc#1223038).\n- Update\n  patches.suse/nfsd-Fix-error-cleanup-path-in-nfsd_rename.patch\n  (bsc#1221044 CVE-2023-52591 CVE-2024-35914 bsc#1224482).\n- Update\n  patches.suse/nouveau-fix-instmem-race-condition-around-ptr-stores.patch\n  (git-fixes CVE-2024-26984 bsc#1223633).\n- Update patches.suse/nouveau-lock-the-client-object-tree.patch\n  (stable-fixes CVE-2024-27062 bsc#1223834).\n- Update\n  patches.suse/nvme-fc-do-not-wait-in-vain-when-unloading-module.patch\n  (git-fixes CVE-2024-26846 bsc#1223023).\n- Update\n  patches.suse/nvme-fix-reconnection-fail-due-to-reserved-tag-alloc.patch\n  (git-fixes CVE-2024-27435 bsc#1224717).\n- Update\n  patches.suse/octeontx2-af-Use-separate-handlers-for-interrupts.patch\n  (git-fixes CVE-2024-27030 bsc#1223790).\n- Update\n  patches.suse/octeontx2-pf-Fix-transmit-scheduler-resource-leak.patch\n  (git-fixes CVE-2024-35975 bsc#1224569).\n- Update\n  patches.suse/of-dynamic-Synchronize-of_changeset_destroy-with-the.patch\n  (git-fixes CVE-2024-35879 bsc#1224524).\n- Update\n  patches.suse/of-module-prevent-NULL-pointer-dereference-in-vsnpri.patch\n  (stable-fixes CVE-2024-35878 bsc#1224671).\n- Update\n  patches.suse/phy-marvell-a3700-comphy-Fix-out-of-bounds-read.patch\n  (git-fixes CVE-2024-35992 bsc#1224555).\n- Update\n  patches.suse/phy-ti-tusb1210-Resolve-charger-det-crash-if-charger.patch\n  (git-fixes CVE-2024-35986 bsc#1224562).\n- Update\n  patches.suse/platform-chrome-cros_ec_uart-properly-fix-race-condi.patch\n  (git-fixes CVE-2024-35977 bsc#1224568).\n- Update\n  patches.suse/power-supply-bq27xxx-i2c-Do-not-free-non-existing-IR.patch\n  (git-fixes CVE-2024-27412 bsc#1224437).\n- Update\n  patches.suse/pstore-inode-Only-d_invalidate-is-needed.patch\n  (git-fixes CVE-2024-27389 bsc#1223705).\n- Update\n  patches.suse/pstore-zone-Add-a-null-pointer-check-to-the-psz_kmsg.patch\n  (stable-fixes CVE-2024-35940 bsc#1224537).\n- Update\n  patches.suse/s390-zcrypt-fix-reference-counting-on-zcrypt-card-objects.patch\n  (git-fixes bsc#1223592 CVE-2024-26957 bsc#1223666).\n- Update\n  patches.suse/scsi-core-Fix-unremoved-procfs-host-directory-regression.patch\n  (git-fixes CVE-2024-26935 bsc#1223675).\n- Update\n  patches.suse/scsi-lpfc-Fix-possible-memory-leak-in-lpfc_rcv_padis.patch\n  (bsc#1220021 CVE-2024-35930 bsc#1224651).\n- Update patches.suse/scsi-sg-Avoid-sg-device-teardown-race.patch\n  (git-fixes CVE-2024-35954 bsc#1224675).\n- Update\n  patches.suse/scsi-smartpqi-Fix-disable_managed_interrupts.patch\n  (git-fixes CVE-2024-26742 bsc#1222608).\n- Update\n  patches.suse/selinux-avoid-dereference-of-garbage-after-mount-fai.patch\n  (git-fixes CVE-2024-35904 bsc#1224494).\n- Update\n  patches.suse/serial-mxs-auart-add-spinlock-around-changing-cts-st.patch\n  (git-fixes CVE-2024-27000 bsc#1223757).\n- Update\n  patches.suse/serial-pmac_zilog-Remove-flawed-mitigation-for-rx-ir.patch\n  (git-fixes CVE-2024-26999 bsc#1223754).\n- Update\n  patches.suse/soc-fsl-qbman-Always-disable-interrupts-when-taking-.patch\n  (git-fixes CVE-2024-35806 bsc#1224699).\n- Update\n  patches.suse/soc-fsl-qbman-Use-raw-spinlock-for-cgr_lock.patch\n  (git-fixes CVE-2024-35819 bsc#1224683).\n- Update patches.suse/speakup-Avoid-crash-on-very-long-word.patch\n  (git-fixes CVE-2024-26994 bsc#1223750).\n- Update\n  patches.suse/spi-lpspi-Avoid-potential-use-after-free-in-probe.patch\n  (git-fixes CVE-2024-26866 bsc#1223024).\n- Update\n  patches.suse/spi-mchp-pci1xxx-Fix-a-possible-null-pointer-derefer.patch\n  (git-fixes CVE-2024-35883 bsc#1224521).\n- Update\n  patches.suse/spi-spi-mt65xx-Fix-NULL-pointer-access-in-interrupt-.patch\n  (git-fixes CVE-2024-27028 bsc#1223788).\n- Update\n  patches.suse/ubifs-Set-page-uptodate-in-the-correct-place.patch\n  (git-fixes CVE-2024-35821 bsc#1224629).\n- Update\n  patches.suse/usb-cdc-wdm-close-race-between-read-and-workqueue.patch\n  (git-fixes CVE-2024-35812 bsc#1224624).\n- Update\n  patches.suse/usb-dwc2-host-Fix-dereference-issue-in-DDMA-completi.patch\n  (git-fixes CVE-2024-26997 bsc#1223741).\n- Update\n  patches.suse/usb-dwc3-am62-fix-module-unload-reload-behavior.patch\n  (git-fixes CVE-2024-26963 bsc#1223651).\n- Update\n  patches.suse/usb-gadget-f_ncm-Fix-UAF-ncm-object-at-re-bind-after.patch\n  (stable-fixes CVE-2024-26996 bsc#1223752).\n- Update\n  patches.suse/usb-gadget-ncm-Avoid-dropping-datagrams-of-properly-.patch\n  (git-fixes CVE-2024-27405 bsc#1224423).\n- Update\n  patches.suse/usb-gadget-ncm-Fix-handling-of-zero-block-length-pac.patch\n  (git-fixes CVE-2024-35825 bsc#1224681).\n- Update\n  patches.suse/usb-typec-altmodes-displayport-create-sysfs-nodes-as.patch\n  (git-fixes CVE-2024-35790 bsc#1224712).\n- Update\n  patches.suse/usb-typec-tcpm-Correct-the-PDO-counting-in-pd_set.patch\n  (git-fixes CVE-2024-26995 bsc#1223696).\n- Update\n  patches.suse/usb-typec-tcpm-fix-double-free-issue-in-tcpm_port_un.patch\n  (git-fixes CVE-2024-26932 bsc#1223649).\n- Update patches.suse/usb-typec-ucsi-Limit-read-size-on-v1.2.patch\n  (stable-fixes CVE-2024-35924 bsc#1224657).\n- Update\n  patches.suse/usb-udc-remove-warning-when-queue-disabled-ep.patch\n  (stable-fixes CVE-2024-35822 bsc#1224739).\n- Update\n  patches.suse/usb-xhci-Add-error-handling-in-xhci_map_urb_for_dma.patch\n  (git-fixes CVE-2024-26964 bsc#1223650).\n- Update\n  patches.suse/vt-fix-unicode-buffer-corruption-when-deleting-chara.patch\n  (git-fixes CVE-2024-35823 bsc#1224692).\n- Update\n  patches.suse/wifi-ath11k-decrease-MHI-channel-buffer-length-to-8K.patch\n  (bsc#1207948 CVE-2024-35938 bsc#1224643).\n- Update\n  patches.suse/wifi-brcmfmac-Fix-use-after-free-bug-in-brcmf_cfg802.patch\n  (CVE-2023-47233 bsc#1216702 CVE-2024-35811 bsc#1224592).\n- Update\n  patches.suse/wifi-cfg80211-check-A-MSDU-format-more-carefully.patch\n  (stable-fixes CVE-2024-35937 bsc#1224526).\n- Update\n  patches.suse/wifi-iwlwifi-dbg-tlv-ensure-NUL-termination.patch\n  (git-fixes CVE-2024-35845 bsc#1224731).\n- Update\n  patches.suse/wifi-iwlwifi-mvm-don-t-set-the-MFP-flag-for-the-GTK.patch\n  (git-fixes CVE-2024-27434 bsc#1224710).\n- Update\n  patches.suse/wifi-iwlwifi-mvm-rfi-fix-potential-response-leaks.patch\n  (git-fixes CVE-2024-35912 bsc#1224487).\n- Update\n  patches.suse/wifi-libertas-fix-some-memleaks-in-lbs_allocate_cmd_.patch\n  (git-fixes CVE-2024-35828 bsc#1224622).\n- Update\n  patches.suse/wifi-mac80211-check-clear-fast-rx-for-non-4addr-sta-.patch\n  (stable-fixes CVE-2024-35789 bsc#1224749).\n- Update\n  patches.suse/wifi-mac80211-fix-potential-sta-link-leak.patch\n  (git-fixes CVE-2024-35838 bsc#1224613).\n- Update\n  patches.suse/wifi-nl80211-reject-iftype-change-with-mesh-ID-chang.patch\n  (git-fixes CVE-2024-27410 bsc#1224432).\n- Update\n  patches.suse/wifi-rtw89-fix-null-pointer-access-when-abort-scan.patch\n  (stable-fixes CVE-2024-35946 bsc#1224646).\n- Update\n  patches.suse/wireguard-netlink-access-device-through-ctx-instead-.patch\n  (git-fixes CVE-2024-26950 bsc#1223661).\n- Update\n  patches.suse/wireguard-netlink-check-for-dangling-peer-via-is_dea.patch\n  (git-fixes CVE-2024-26951 bsc#1223660).\n- Update\n  patches.suse/wireguard-receive-annotate-data-race-around-receivin.patch\n  (git-fixes CVE-2024-26861 bsc#1223076).\n- Update\n  patches.suse/x86-coco-Require-seeding-RNG-with-RDRAND-on-CoCo-systems.patch\n  (git-fixes CVE-2024-35875 bsc#1224665).\n- Update\n  patches.suse/x86-fpu-Keep-xfd_state-in-sync-with-MSR_IA32_XFD.patch\n  (git-fixes CVE-2024-35801 bsc#1224732).\n- Update\n  patches.suse/xen-evtchn-avoid-WARN-when-unbinding-an-event-channe.patch\n  (git-fixes CVE-2024-27067 bsc#1223739).\n- Update\n  patches.suse/xsk-recycle-buffer-in-case-Rx-queue-was-full.patch\n  (bsc#1221303 CVE-2024-26611 CVE-2024-35834 bsc#1224620).\n- commit 005afc6\n\n- Update\n  patches.suse/ACPI-LPIT-Avoid-u32-multiplication-overflow.patch\n  (git-fixes CVE-2023-52683 bsc#1224627).\n- Update\n  patches.suse/ACPI-video-check-for-error-while-searching-for-backl.patch\n  (git-fixes CVE-2023-52693 bsc#1224686).\n- Update\n  patches.suse/ASoC-Intel-sof_sdw_rt_sdca_jack_common-ctx-headset_c.patch\n  (git-fixes CVE-2023-52697 bsc#1224596).\n- Update\n  patches.suse/ASoC-SOF-amd-Fix-memory-leak-in-amd_sof_acp_probe.patch\n  (git-fixes CVE-2023-52663 bsc#1224630).\n- Update\n  patches.suse/Revert-drm-amd-pm-resolve-reboot-exception-for-si-ol.patch\n  (git-fixes CVE-2023-52657 bsc#1224722).\n- Update\n  patches.suse/Revert-net-mlx5-Block-entering-switchdev-mode-with-n.patch\n  (git-fixes CVE-2023-52658 bsc#1224719).\n- Update\n  patches.suse/SUNRPC-fix-a-memleak-in-gss_import_v2_context.patch\n  (git-fixes CVE-2023-52653 bsc#1223712).\n- Update\n  patches.suse/bpf-Guard-stack-limits-against-32bit-overflow.patch\n  (git-fixes CVE-2023-52676 bsc#1224730).\n- Update\n  patches.suse/crypto-rsa-add-a-check-for-allocation-failure.patch\n  (bsc#1222775 CVE-2023-52472 bsc#1220430).\n- Update\n  patches.suse/crypto-s390-aes-Fix-buffer-overread-in-CTR-mode.patch\n  (git-fixes CVE-2023-52669 bsc#1224637).\n- Update\n  patches.suse/crypto-safexcel-Add-error-handling-for-dma_map_sg-ca.patch\n  (git-fixes CVE-2023-52687 bsc#1224501).\n- Update\n  patches.suse/drm-amd-display-Check-writeback-connectors-in-create.patch\n  (git-fixes CVE-2023-52695 bsc#1224506).\n- Update\n  patches.suse/drm-amd-display-Fix-a-debugfs-null-pointer-error.patch\n  (git-fixes CVE-2023-52673 bsc#1224741).\n- Update\n  patches.suse/drm-amd-display-Fix-hang-underflow-when-transitionin.patch\n  (git-fixes CVE-2023-52671 bsc#1224729).\n- Update\n  patches.suse/drm-amd-pm-fix-a-double-free-in-si_dpm_init.patch\n  (git-fixes CVE-2023-52691 bsc#1224607).\n- Update\n  patches.suse/drm-amdkfd-Confirm-list-is-non-empty-before-utilizin.patch\n  (git-fixes CVE-2023-52678 bsc#1224617).\n- Update\n  patches.suse/drm-bridge-tpd12s015-Drop-buggy-__exit-annotation-fo.patch\n  (git-fixes CVE-2023-52694 bsc#1224598).\n- Update\n  patches.suse/drm-tegra-rgb-Fix-missing-clk_put-in-the-error-handl.patch\n  (git-fixes CVE-2023-52661 bsc#1224445).\n- Update\n  patches.suse/drm-vmwgfx-fix-a-memleak-in-vmw_gmrid_man_get_node.patch\n  (git-fixes CVE-2023-52662 bsc#1224449).\n- Update patches.suse/efivarfs-Free-s_fs_info-on-unmount.patch\n  (bsc#1220328 CVE-2023-52463 CVE-2023-52681 bsc#1224505).\n- Update\n  patches.suse/media-rkisp1-Fix-IRQ-handling-due-to-shared-interrup.patch\n  (stable-fixes CVE-2023-52660 bsc#1224443).\n- Update\n  patches.suse/net-atlantic-eliminate-double-free-in-error-handling.patch\n  (git-fixes CVE-2023-52664 bsc#1224747).\n- Update\n  patches.suse/net-mlx5e-fix-a-potential-double-free-in-fs_any_crea.patch\n  (jsc#PED-3311 CVE-2023-52667 bsc#1224603).\n- Update\n  patches.suse/of-Fix-double-free-in-of_parse_phandle_with_args_map.patch\n  (git-fixes CVE-2023-52679 bsc#1224508).\n- Update\n  patches.suse/powerpc-imc-pmu-Add-a-null-pointer-check-in-update_events_in_group.patch\n  (git-fixes CVE-2023-52675 bsc#1224504).\n- Update\n  patches.suse/powerpc-powernv-Add-a-null-pointer-check-in-opal_eve.patch\n  (bsc#1065729 CVE-2023-52686 bsc#1224682).\n- Update\n  patches.suse/powerpc-powernv-Add-a-null-pointer-check-in-opal_pow.patch\n  (bsc#1181674 ltc#189159 git-fixes CVE-2023-52696 bsc#1224601).\n- Update\n  patches.suse/powerpc-powernv-Add-a-null-pointer-check-to-scom_deb.patch\n  (bsc#1194869 CVE-2023-52690 bsc#1224611).\n- Update\n  patches.suse/pstore-ram_core-fix-possible-overflow-in-persistent_.patch\n  (git-fixes CVE-2023-52685 bsc#1224728).\n- Update\n  patches.suse/rpmsg-virtio-Free-driver_override-when-rpmsg_remove.patch\n  (git-fixes CVE-2023-52670 bsc#1224696).\n- commit 578211b\n\n- vhost: Add smp_rmb() in vhost_enable_notify() (git-fixes).\n- commit 2e20e2c\n\n- vhost: Add smp_rmb() in vhost_vq_avail_empty() (git-fixes).\n- commit 936d53e\n\n- virtio_net: Do not send RSS key if it is not supported\n  (git-fixes).\n- commit cc7c4a0\n\n- vsock/virtio: fix packet delivery to tap device (git-fixes).\n- commit dfd8673\n\n- virtio-blk: Ensure no requests in virtqueues before deleting\n  vqs (git-fixes).\n- commit 966a23e\n\n- KVM: VMX: Disable LBR virtualization if the CPU doesn't support\n  LBR callstacks (git-fixes).\n- commit f941b05\n\n- efi/unaccepted: do not let /proc/vmcore try to access unaccepted memory (git-fixes).\n- commit c99f198\n\n- proc/kcore: do not try to access unaccepted memory (git-fixes).\n- commit 2daf00c\n\n- efi/unaccepted: touch soft lockup during memory accept (git-fixes).\n- commit 45ed7cb\n\n- x86/mm: Ensure input to pfn_to_kaddr() is treated as a 64-bit type (bsc#1224442 CVE-2023-52659).\n- commit dad72fd\n\n- kabi fix of perf/x86/intel: Expose existence of callback support to KVM\n  (git fixes).\n- commit 5db441c\n\n- perf/x86/intel: Expose existence of callback support to KVM\n  (git-fixes).\n- commit b24b5fc\n\n- kABI fix of KVM: x86: Snapshot if a vCPU's vendor model is AMD vs.\n  Intel compatible (git-fixes).\n- commit 38bcaaa\n\n- ceph: redirty page before returning AOP_WRITEPAGE_ACTIVATE\n  (bsc#1224866).\n- commit 6a4b4a1\n\n- supported.conf: Add APM X-Gene SoC hardware monitoring driver (bsc#1223265 jsc#PED-8570)\n- commit 4b0eeb3\n\n- blacklist.conf: cephfs client logging infrastructure commits\n  These two commits are useless in isolation, they are part of a larger set\n  of commits that add extra info to debug logs.\n- commit 2056926\n\n- remoteproc: k3-r5: Jump to error handling labels in start/stop\n  errors (git-fixes).\n- commit 6f545f8\n\n- libsubcmd: Fix parse-options memory leak (git-fixes).\n- dmaengine: idxd: Avoid unnecessary destruction of file_ida\n  (git-fixes).\n- dmaengine: axi-dmac: fix possible race in remove() (git-fixes).\n- dmaengine: idma64: Add check for dma_set_max_seg_size\n  (git-fixes).\n- remoteproc: k3-r5: Do not allow core1 to power up before core0\n  via sysfs (git-fixes).\n- remoteproc: k3-r5: Wait for core0 power-up before powering up\n  core1 (git-fixes).\n- remoteproc: mediatek: Make sure IPI buffer fits in L2TCM\n  (git-fixes).\n- PCI: tegra194: Fix probe path for Endpoint mode (git-fixes).\n- PCI: rockchip-ep: Remove wrong mask on subsys_vendor_id\n  (git-fixes).\n- PCI: dwc: ep: Fix DBI access failure for drivers requiring\n  refclk from host (git-fixes).\n- PCI/EDR: Align EDR_PORT_LOCATE_DSM with PCI Firmware r3.3\n  (git-fixes).\n- PCI/EDR: Align EDR_PORT_DPC_ENABLE_DSM with PCI Firmware r3.3\n  (git-fixes).\n- KEYS: trusted: Do not use WARN when encode fails (git-fixes).\n- KEYS: trusted: Fix memory leak in tpm2_key_encode() (git-fixes).\n- commit d7da373\n\n- KVM: x86: Only set APICV_INHIBIT_REASON_ABSENT if APICv is\n  enabled (git-fixes).\n- commit 7d13726\n\n- KVM: x86: Allow, don't ignore, same-value writes to immutable\n  MSRs (git-fixes).\n- commit e25e965\n\n- KVM: nVMX: Clear EXIT_QUALIFICATION when injecting an EPT\n  Misconfig (git-fixes).\n- commit 21a74db\n\n- KVM: x86/mmu: Don't force emulation of L2 accesses to non-APIC\n  internal slots (git-fixes).\n- commit b2d6429\n\n- KVM: x86/mmu: Move private vs. shared check above slot validity\n  checks (git-fixes).\n- commit 2108d3a\n\n- KVM: x86: Fully re-initialize supported_mce_cap on vendor\n  module load (git-fixes).\n- commit 52160e6\n\n- KVM: x86/mmu: Write-protect L2 SPTEs in TDP MMU when clearing\n  dirty status (git-fixes).\n- commit 7bdd69f\n\n- blacklist.conf: Add a1fd0b9d751f sched/fair: Allow disabling sched_balance_newidle with sched_relax_domain_level\n- commit 3d0aa70\n\n- drm/nouveau/disp: Fix missing backlight control on Macbook 5,\n  1 (bsc#1223838).\n- commit 07ffc12\n\n- iommu/dma: Force swiotlb_max_mapping_size on an untrusted device (bsc#1224331)\n- commit 55fb87b\n\n- swiotlb: Fix alignment checks when both allocation and DMA masks are (bsc#1224331)\n- commit 8bebd77\n\n- swiotlb: Honour dma_alloc_coherent() alignment in swiotlb_alloc() (bsc#1224331)\n- commit fcf796a\n\n- swiotlb: Fix double-allocation of slots due to broken alignment (bsc#1224331)\n- commit c65bb03\n\n- KVM: x86/pmu: Set enable bits for GP counters in\n  PERF_GLOBAL_CTRL at \u0026quot;RESET\u0026quot; (git-fixes).\n- commit 1ba62ae\n\n- KVM: x86/pmu: Disable support for adaptive PEBS (git-fixes).\n- commit 9862bdd\n\n- KVM: x86/pmu: Do not mask LVTPC when handling a PMI on AMD\n  platforms (git-fixes).\n- commit 5f8077d\n\n- KVM: x86: Snapshot if a vCPU's vendor model is AMD vs. Intel\n  compatible (git-fixes).\n- commit c9c8902\n\n- x86/kvm/Kconfig: Have KVM_AMD_SEV select ARCH_HAS_CC_PLATFORM\n  (git-fixes).\n- commit f882a8e\n\n- KVM: x86: Use actual kvm_cpuid.base for clearing\n  KVM_FEATURE_PV_UNHALT (git-fixes).\n- commit 80b67d0\n\n- s390/cio: fix tracepoint subchannel type field (git-fixes\n  bsc#1224793).\n- commit f1aa928\n\n- s390/bpf: Emit a barrier for BPF_FETCH instructions (git-fixes\n  bsc#1224792).\n- commit d08e4ce\n\n- KVM: s390: Check kvm pointer when testing KVM_CAP_S390_HPAGE_1M\n  (git-fixes bsc#1224790).\n- commit b0b1c22\n\n- KVM: x86: Introduce __kvm_get_hypervisor_cpuid() helper\n  (git-fixes).\n- commit 652c188\n\n- rpm/kernel-obs-build.spec.in: remove reiserfs from OBS initrd\n  We disabled the FS in bug 1202309. And we actively blacklist it in:\n  /usr/lib/modprobe.d/60-blacklist_fs-reiserfs.conf\n  This, as a side-effect, fixes obs-build's warning:\n  dracut-pre-udev[1463]: sh: line 1: /usr/lib/module-init-tools/unblacklist: No such file or directory\n  Exactly due to the above 60-blacklist_fs-reiserfs.conf trying to call the\n  above unblacklist.\n  We should likely drop ext2+ext3 from the list too, as we don't build\n  them at all. But that's a different story.\n- commit 9e1a078\n\n- KVM: SVM: Add support for allowing zero SEV ASIDs (git-fixes).\n- commit 9327154\n\n- KVM: SVM: Use unsigned integers when dealing with ASIDs\n  (git-fixes).\n- commit b0fec37\n\n- tools/power turbostat: Expand probe_intel_uncore_frequency()\n  (bsc#1221765).\n- commit 7c0d70f\n\n- KVM: x86/xen: fix recursive deadlock in timer injection\n  (git-fixes).\n- commit 389ea84\n\n- KVM: x86/xen: remove WARN_ON_ONCE() with false positives in\n  evtchn delivery (git-fixes).\n- commit d63a8c9\n\n- KVM: x86/xen: inject vCPU upcall vector when local APIC is\n  enabled (git-fixes).\n- commit 538dcab\n\n- KVM: x86/xen: improve accuracy of Xen timers (git-fixes).\n- commit 921d76d\n\n- KVM: x86/pmu: Explicitly check NMI from guest to reducee false\n  positives (git-fixes).\n- commit be2edf0\n\n- KVM: x86/pmu: Zero out PMU metadata on AMD if PMU is disabled\n  (git-fixes).\n- commit fe18eef\n\n- KVM: x86/pmu: Disallow \u0026quot;fast\u0026quot; RDPMC for architectural Intel PMUs\n  (git-fixes).\n- commit 406de6b\n\n- KVM: x86/pmu: Apply \u0026quot;fast\u0026quot; RDPMC only to Intel PMUs (git-fixes).\n- commit dd1520f\n\n- KVM: x86/pmu: Prioritize VMX interception over #GP on RDPMC\n  due to bad index (git-fixes).\n- commit b2e9cf1\n\n- blacklist.conf: add \u0026quot;libbpf: Fix NULL pointer dereference in bpf_object__collect_prog_relos\u0026quot;\n- commit f859338\n\n- KVM: x86/pmu: Don't ignore bits 31:30 for RDPMC index on AMD\n  (git-fixes).\n- commit fd656b7\n\n- KVM: x86/pmu: Allow programming events that match unsupported\n  arch events (git-fixes).\n- commit 60f57dc\n\n- firmware: dmi-id: add a release callback function (git-fixes).\n- watchdog: sa1100: Fix PTR_ERR_OR_ZERO() vs NULL check in\n  sa1100dog_probe() (git-fixes).\n- watchdog: rti_wdt: Set min_hw_heartbeat_ms to accommodate a\n  safety margin (git-fixes).\n- watchdog: bd9576: Drop \u0026quot;always-running\u0026quot; property (git-fixes).\n- watchdog: cpu5wdt.c: Fix use-after-free bug caused by\n  cpu5wdt_trigger (git-fixes).\n- i2c: acpi: Unbind mux adapters before delete (git-fixes).\n- i2c: synquacer: Fix an error handling path in\n  synquacer_i2c_probe() (git-fixes).\n- i2c: cadence: Avoid fifo clear after start (git-fixes).\n- pinctrl: qcom: pinctrl-sm7150: Fix sdc1 and ufs special pins\n  regs (git-fixes).\n- pinctrl: armada-37xx: remove an unused variable (git-fixes).\n- crypto: qat - Fix ADF_DEV_RESET_SYNC memory leak (git-fixes).\n- commit 60d82a4\n\n- KVM: x86/pmu: Always treat Fixed counters as available when\n  supported (git-fixes).\n- commit c4b0d18\n\n- KVM: VMX: Report up-to-date exit qualification to userspace\n  (git-fixes).\n- commit d6b020d\n\n- KVM: x86: Fix broken debugregs ABI for 32 bit kernels\n  (git-fixes).\n- commit 69a1ee8\n\n- SEV: disable SEV-ES DebugSwap by default (git-fixes).\n- commit dcaff2f\n\n- KVM: x86/mmu: Restrict KVM_SW_PROTECTED_VM to the TDP MMU\n  (git-fixes).\n- commit c561279\n\n- KVM: x86: Update KVM_SW_PROTECTED_VM docs to make it clear\n  they're a WIP (git-fixes).\n- commit aba16e8\n\n- KVM: x86: Mark target gfn of emulated atomic instruction as\n  dirty (git-fixes).\n- commit 303882a\n\n- KVM: SVM: Flush pages under kvm-\u0026gt;lock to fix UAF in\n  svm_register_enc_region() (git-fixes).\n- commit 4382f8a\n\n- sysv: don't call sb_bread() with pointers_lock held\n  (bsc#1224659 CVE-2023-52699).\n- commit 6cad3fd\n\n- Update\n  patches.suse/scsi-smartpqi-Fix-disable_managed_interrupts.patch\n  (git-fixes bsc#1222608 CVE-2024-26742).\n- commit 950259c\n\n- btrfs: always clear PERTRANS metadata during commit (git-fixes)\n- commit f24386b\n\n- btrfs: record delayed inode root in transaction (git-fixes)\n- commit 3382370\n\n- btrfs: send: handle path ref underflow in header iterate_inode_ref() (git-fixes)\n- commit 21cfc26\n\n- btrfs: export: handle invalid inode or root reference in btrfs_get_parent() (git-fixes)\n- commit a357818\n\n- btrfs: fix kvcalloc() arguments order in btrfs_ioctl_send() (git-fixes)\n- commit 3227c75\n\n- btrfs: sysfs: validate scrub_speed_max value (git-fixes)\n- commit 333b480\n\n- blacklist.conf: btrfs: build fix for config we don't use\n- commit d489b93\n\n- btrfs: prevent transaction block reserve underflow when starting transaction (git-fixes)\n- commit e1ff84f\n\n- btrfs: fix race when refilling delayed refs block reserve (git-fixes)\n- commit f241886\n\n- btrfs: assert delayed node locked when removing delayed item (git-fixes)\n- commit 7298484\n\n- btrfs: check for BTRFS_FS_ERROR in pending ordered assert (git-fixes)\n- commit f5815af\n\n- btrfs: output extra debug info if we failed to find an inline backref (git-fixes)\n- commit 92fba41\n\n- btrfs: set page extent mapped after read_folio in relocate_one_page (git-fixes)\n- commit 446041f\n\n- btrfs: handle errors properly in update_inline_extent_backref() (git-fixes)\n- commit ca5b7a2\n\n- RDMA/cma: Fix kmemleak in rdma_core observed during blktests nvme/rdma use siw (git-fixes)\n- commit 4bdc550\n\n- RDMA/IPoIB: Fix format truncation compilation errors (git-fixes)\n- commit 6d737b0\n\n- bnxt_re: avoid shift undefined behavior in bnxt_qplib_alloc_init_hwq (git-fixes)\n- commit 3e0bec3\n\n- IB/mlx5: Use __iowrite64_copy() for write combining stores (git-fixes)\n- commit 9a3847d\n\n- RDMA/rxe: Fix incorrect rxe_put in error path (git-fixes)\n- commit c50f3b5\n\n- RDMA/rxe: Allow good work requests to be executed (git-fixes)\n- commit b36653a\n\n- RDMA/rxe: Fix seg fault in rxe_comp_queue_pkt (git-fixes)\n- commit ba9e71d\n\n- RDMA/hns: Modify the print level of CQE error (git-fixes)\n- commit 12a2ba5\n\n- RDMA/hns: Use complete parentheses in macros (git-fixes)\n- commit 7a9c544\n\n- RDMA/hns: Fix GMV table pagesize (git-fixes)\n- commit fb0321b\n\n- RDMA/hns: Fix UAF for cq async event (git-fixes)\n- commit 8ea7fea\n\n- RDMA/hns: Fix deadlock on SRQ async events. (git-fixes)\n- commit fb64efc\n\n- RDMA/hns: Add max_ah and cq moderation capacities in query_device() (git-fixes)\n- commit 6c2f69b\n\n- RDMA/hns: Fix return value in hns_roce_map_mr_sg (git-fixes)\n- commit 60cadbc\n\n- RDMA/mlx5: Adding remote atomic access flag to updatable flags (git-fixes)\n- commit dacefcf\n\n- RDMA/mlx5: Change check for cacheable mkeys (git-fixes)\n- commit c838c29\n\n- RDMA/mlx5: Uncacheable mkey has neither rb_key or cache_ent (git-fixes)\n- commit 3012f2a\n\n- qibfs: fix dentry leak (git-fixes)\n- commit 3dd0249\n\n- RDMA/mlx5: Fix port number for counter query in multi-port configuration (git-fixes)\n- commit 52028fd\n\n- RDMA/cm: Print the old state when cm_destroy_id gets timeout (git-fixes)\n- commit 1a1a1ef\n\n- RDMA/rxe: Fix the problem \u0026quot;mutex_destroy missing\u0026quot; (git-fixes)\n- commit 0a73f85\n\n- blacklist.conf: (\u0026quot;arm64: dts: broadcom: bcmbca: bcm4908: set brcm,wp-not-connected\u0026quot;)\n- commit a7b0273\n\n- arm64: dts: microchip: sparx5: fix mdio reg (git-fixes)\n- commit 88132f5\n\n- arm64: dts: hi3798cv200: fix the size of GICR (git-fixes)\n- commit 366d274\n\n- arm64: tegra: Correct Tegra132 I2C alias (git-fixes)\n- commit da1130e\n\n- arm64: dts: allwinner: h616: Fix I2C0 pins (git-fixes)\n- commit eee423c\n\n- arm64: dts: allwinner: Pine H64: correctly remove reg_gmac_3v3 (git-fixes)\n- commit 7d432cc\n\n- arm64: dts: rockchip: Add enable-strobe-pulldown to emmc phy on ROCK (git-fixes)\n- commit d52e38e\n\n- arm64: dts: rockchip: Add enable-strobe-pulldown to emmc phy on ROCK (git-fixes)\n- commit 029788f\n\n- arm64: dts: rockchip: fix alphabetical ordering RK3399 puma (git-fixes)\n  Refresh patches.suse/arm64-dts-rockchip-enable-internal-pull-up-on-PCIE_WAKE-for-RK3399-Puma.patch\n- commit aeac8db\n\n- blacklist.conf: (\u0026quot;dt-bindings: display: samsung,ams495qa01: add missing SPI properties\u0026quot;)\n- commit f4f5a90\n\n- blacklist.conf: (\u0026quot;dt-bindings: iio: health: maxim,max30102: fix compatible check\u0026quot;)\n- commit 1690e24\n\n- blacklist.conf: (\u0026quot;dt-bindings: pwm: mediatek,pwm-disp: Document power-domains property\u0026quot;)\n- commit 6958159\n\n- blacklist.conf: (\u0026quot;dt-bindings: fsl-imx-sdma: fix HDMI audio index\u0026quot;)\n- commit 952bf73\n\n- blacklist.conf: (\u0026quot;dt-bindings: lcdif: Do not require power-domains for i.MX6ULL\u0026quot;)\n- commit eabdd33\n\n- blacklist.conf: (\u0026quot;dt-bindings: interrupt-controller: renesas,rzg2l-irqc: Update\u0026quot;)\n- commit ad9009e\n\n- blacklist.conf: (\u0026quot;dt-bindings: mtd: avoid automatically select from mtd.yaml\u0026quot;)\n- commit 2d9981a\n\n- blacklist.conf: (\u0026quot;dt-bindings: can: mpfs: add missing required clock\u0026quot;)\n- commit d5f79eb\n\n- blacklist.conf: (\u0026quot;dt-bindings: mfd: dlg,da9063: Make #interrupt-cells required\u0026quot;)\n- commit a6ea77b\n\n- blacklist.conf: (\u0026quot;dt-bindings: pinctr: pinctrl-zynq: Fix compatible string\u0026quot;)\n- commit f208a95\n\n- blacklist.conf: (\u0026quot;dt-bindings: msm: qcom, mdss: Include ommited fam-b compatible\u0026quot;)\n- commit 3478db8\n\n- blacklist.conf: (\u0026quot;dt-bindings: display: ti,am65x-dss: Add support for common1 region\u0026quot;)\n- commit 7eb6591\n\n- blacklist.conf: (\u0026quot;dt-bindings: opp: drop maxItems from inner items\u0026quot;)\n- commit 878a019\n\n- blacklist.conf: (\u0026quot;dt-bindings: pwm: amlogic: fix s4 bindings\u0026quot;)\n- commit e2029e3\n\n- blacklist.conf: (\u0026quot;dt-bindings: arm: rockchip: Correct vendor for Banana Pi R2 Pro\u0026quot;)\n- commit c1d1519\n\n- blacklist.conf: (\u0026quot;dt-bindings: arm: rockchip: Correct vendor for Orange Pi RK3399 board\u0026quot;)\n- commit 88539b6\n\n- dt-bindings: clock: qcom: Add missing UFS QREF clocks (git-fixes)\n- commit 4e403e4\n\n- blacklist.conf: (\u0026quot;dt-bindings: arm: qcom: drop the superfluous device compatibility\u0026quot;)\n- commit f6fdbc2\n\n- blacklist.conf: (\u0026quot;dt-bindings: riscv: cpus: Clarify mmu-type interpretation\u0026quot;)\n- commit 4b6b7f4\n\n- blacklist.conf: (\u0026quot;dt-bindings: power: reset: qcom-pon: fix inconsistent example\u0026quot;)\n- commit b2da43b\n\n- blacklist.conf: (\u0026quot;dt-bindings: rtc: qcom-pm8xxx: fix inconsistent example\u0026quot;)\n- commit 673e959\n\n- blacklist.conf: (\u0026quot;dt-bindings: phy: qcom,sc8280xp-qmp-usb43dp-phy: fix path to header\u0026quot;)\n- commit 2965719\n\n- blacklist.conf: (\u0026quot;dt-bindings: phy: amlogic,g12a-mipi-dphy-analog: drop unneeded reg\u0026quot;)\n- commit 44293cc\n\n- blacklist.conf: (\u0026quot;dt-bindings: gpio: xilinx: Fix node address in gpio\u0026quot;)\n- commit 51eae0f\n\n- blacklist.conf: (\u0026quot;dt-bindings: iio/adc: qcom,spmi-vadc: fix example node names\u0026quot;)\n- commit 5559cae\n\n- blacklist.conf: (\u0026quot;dt-bindings: iio/adc: qcom,spmi-iadc: fix example node name\u0026quot;)\n- commit 6d910c5\n\n- blacklist.conf: (\u0026quot;dt-bindings: PCI: qcom: Correct reset-names property\u0026quot;)\n- commit cfa6f44\n\n- blacklist.conf: (\u0026quot;dt-bindings: mailbox: zynqmp: extend required list\u0026quot;)\n- commit 193f0ac\n\n- blacklist.conf: (\u0026quot;dt-bindings: mailbox: qcom,apcs-kpss-global: drop duplicated\u0026quot;)\n- commit 855a271\n\n- blacklist.conf: (\u0026quot;dt-bindings: mfd: hisilicon,hi6421-spmi-pmic: Fix regulator binding\u0026quot;)\n- commit 9b3e020\n\n- blacklist.conf: (\u0026quot;dt-bindings: mfd: hisilicon,hi6421-spmi-pmic: Fix up binding\u0026quot;)\n- commit a0c4967\n\n- blacklist.conf: (\u0026quot;dt-bindings: remoteproc: qcom: sc7180-pas: Fix SC7280 MPSS PD-names\u0026quot;)\n- commit de1ba63\n\n- blacklist.conf: (\u0026quot;dt-bindings: mmc: sdhci-pxa: Fix 'regs' typo\u0026quot;)\n- commit 3378497\n\n- blacklist.conf: (\u0026quot;dt-bindings: Remove alt_ref from versal\u0026quot;)\n- commit 4d14333\n\n- blacklist.conf: (\u0026quot;dt-bindings: watchdog: qcom-wdt: Make the interrupt example edge\u0026quot;)\n- commit 17a3ab8\n\n- blacklist.conf: (\u0026quot;dt-bindings: display: msm: qcm2290-mdss: Use the non-deprecated DSI\u0026quot;)\n- commit 4aa1481\n\n- blacklist.conf: (\u0026quot;dt-bindings: arm: stm32: don't mix SCMI and non-SCMI board\u0026quot;)\n- commit 448ff06\n\n- blacklist.conf: (\u0026quot;dt-bindings: media: mediatek: mdp3: correct RDMA and WROT node with\u0026quot;)\n- commit ab03332\n\n- blacklist.conf: (\u0026quot;dt-bindings: nvmem: mxs-ocotp: Document fsl,ocotp\u0026quot;)\n- commit 1d6fc28\n\n- blacklist.conf: (\u0026quot;dt-bindings: interrupt-controller: Allow #power-domain-cells\u0026quot;)\n- commit 027195f\n\n- blacklist.conf: (\u0026quot;dt: dt-extract-compatibles: Don't follow symlinks when walking tree\u0026quot;)\n- commit 60fcfee\n\n- blacklist.conf: (\u0026quot;dt-bindings: soc: fsl: cpm_qe: cpm1-scc-qmc: Fix example property\u0026quot;)\n- commit de60146\n\n- blacklist.conf: (\u0026quot;dt-bindings: PCI: brcm,iproc-pcie: Fix 'msi' child node schema\u0026quot;)\n- commit d7b96e4\n\n- blacklist.conf: (\u0026quot;dt-bindings: soc: qcom: smd-rpm: Add MSM8909 to qcom,smd-channels\u0026quot;)\n- commit 1171729\n\n- selftests/kcmp: remove unused open mode (git-fixes).\n- nilfs2: make superblock data array index computation sparse\n  friendly (git-fixes).\n- Docs/admin-guide/mm/damon/usage: fix wrong example of DAMOS\n  filter matching sysfs file (git-fixes).\n- lib/test_hmm.c: handle src_pfns and dst_pfns allocation failure\n  (git-fixes).\n- commit 7902091\n\n- powerpc/pseries/vio: Don't return ENODEV if node or compatible\n  missing (bsc#1220783).\n- commit 19e446b\n\n- clk: qcom: clk-alpha-pll: fix rate setting for Stromer PLLs\n  (git-fixes).\n- clk: qcom: mmcc-msm8998: fix venus clock issue (git-fixes).\n- clk: qcom: dispcc-sm8550: fix DisplayPort clocks (git-fixes).\n- clk: qcom: dispcc-sm6350: fix DisplayPort clocks (git-fixes).\n- clk: qcom: dispcc-sm8450: fix DisplayPort clocks (git-fixes).\n- clk: qcom: clk-alpha-pll: remove invalid Stromer register offset\n  (git-fixes).\n- clk: samsung: exynosautov9: fix wrong pll clock id value\n  (git-fixes).\n- clk: renesas: r9a07g043: Add clock and reset entry for PLIC\n  (git-fixes).\n- clk: renesas: r8a779a0: Fix CANFD parent clock (git-fixes).\n- clk: rs9: fix wrong default value for clock amplitude\n  (git-fixes).\n- clk: mediatek: mt8365-mm: fix DPI0 parent (git-fixes).\n- clk: mediatek: pllfh: Don't log error for missing fhctl node\n  (git-fixes).\n- commit 8bfa411\n\n- blacklist.conf: Add reverted dmaengine commit entries\n- commit 134f997\n\n- selftests: net: bridge: increase IGMP/MLD exclude timeout\n  membership interval (git-fixes).\n- of: module: add buffer overflow check in of_modalias()\n  (git-fixes).\n- selftests/powerpc/dexcr: Add -no-pie to hashchk tests\n  (git-fixes).\n- firmware: raspberrypi: Use correct device for DMA mappings\n  (git-fixes).\n- Revert \u0026quot;drm/nouveau/firmware: Fix SG_DEBUG error with\n  nvkm_firmware_ctor()\u0026quot; (stable-fixes).\n- drm/i915/audio: Fix audio time stamp programming for DP\n  (stable-fixes).\n- gpiolib: cdev: fix uninitialised kfifo (git-fixes).\n- selftests: test_bridge_neigh_suppress.sh: Fix failures due to\n  duplicate MAC (git-fixes).\n- Bluetooth: qca: fix firmware check error path (git-fixes).\n- dyndbg: fix old BUG_ON in \u0026gt;control parser (stable-fixes).\n- mei: me: add lunar lake point M DID (stable-fixes).\n- usb: xhci-plat: Don't include xhci.h (stable-fixes).\n- ASoC: meson: axg-fifo: use threaded irq to check periods\n  (git-fixes).\n- drm/nouveau/firmware: Fix SG_DEBUG error with\n  nvkm_firmware_ctor() (stable-fixes).\n- drm/amd/display: Fix incorrect DSC instance for MST\n  (stable-fixes).\n- drm/amd/display: Atom Integrated System Info v2_2 for DCN35\n  (stable-fixes).\n- drm/amd/display: Handle Y carry-over in VCP X.Y calculation\n  (stable-fixes).\n- clk: Don't hold prepare_lock when calling kref_put()\n  (stable-fixes).\n- drm/nouveau/dp: Don't probe eDP ports twice harder\n  (stable-fixes).\n- drm/radeon: silence UBSAN warning (v3) (stable-fixes).\n- net:usb:qmi_wwan: support Rolling modules (stable-fixes).\n- gpio: crystalcove: Use -ENOTSUPP consistently (stable-fixes).\n- gpio: wcove: Use -ENOTSUPP consistently (stable-fixes).\n- platform/x86: ISST: Add Granite Rapids-D to HPM CPU list\n  (stable-fixes).\n- selftests: timers: Fix valid-adjtimex signed left-shift\n  undefined behavior (stable-fixes).\n- gpu: host1x: Do not setup DMA for virtual devices\n  (stable-fixes).\n- amd/amdkfd: sync all devices to wait all processes being evicted\n  (stable-fixes).\n- drm/amdgpu: Fix VCN allocation in CPX partition (stable-fixes).\n- drm/amdgpu: implement IRQ_STATE_ENABLE for SDMA v4.4.2\n  (stable-fixes).\n- drm/amdgpu: Refine IB schedule error logging (stable-fixes).\n- firewire: ohci: mask bus reset interrupts between ISR and\n  bottom half (stable-fixes).\n- regulator: tps65132: Add of_match table (stable-fixes).\n- ata: sata_gemini: Check clk_enable() result (stable-fixes).\n- ASoC: SOF: Intel: hda-dsp: Skip IMR boot on ACE platforms in\n  case of S3 suspend (stable-fixes).\n- ALSA: line6: Zero-initialize message buffers (stable-fixes).\n- vboxsf: explicitly deny setlease attempts (stable-fixes).\n- drm/amdkfd: range check cp bad op exception interrupts\n  (stable-fixes).\n- drm/amdkfd: Check cgroup when returning DMABuf info\n  (stable-fixes).\n- selftests/ftrace: Fix event filter target_func selection\n  (stable-fixes).\n- wifi: iwlwifi: mvm: guard against invalid STA ID on removal\n  (stable-fixes).\n- wifi: iwlwifi: read txq-\u0026gt;read_ptr under lock (stable-fixes).\n- wifi: mac80211: fix prep_connection error path (stable-fixes).\n- wifi: cfg80211: fix rdev_dump_mpp() arguments order\n  (stable-fixes).\n- wifi: mac80211: fix ieee80211_bss_*_flags kernel-doc\n  (stable-fixes).\n- ASoC: meson: axg-fifo: use FIELD helpers (stable-fixes).\n- gpiolib: cdev: relocate debounce_period_us from struct gpio_desc\n  (stable-fixes).\n- selftests/net: convert test_bridge_neigh_suppress.sh to run\n  it in unique namespace (stable-fixes).\n- commit 2872089\n\n- af_unix: Fix garbage collector racing against connect()\n  (CVE-2024-26923 bsc#1223384).\n- af_unix: Replace BUG_ON() with WARN_ON_ONCE() (CVE-2024-26923\n  bsc#1223384).\n- af_unix: Do not use atomic ops for unix_sk(sk)-\u0026gt;inflight\n  (CVE-2024-26923 bsc#1223384).\n- commit a683abb\n\n- dm-multipath: dont't attempt SG_IO on non-SCSI-disks\n  (bsc#1223575).\n- commit 2f6779f\n\n- btrfs: qgroup: convert PREALLOC to PERTRANS after record_root_in_trans (git-fixes)\n- commit b85295a\n\n- btrfs: don't arbitrarily slow down delalloc if we're committing (git-fixes)\n- commit d9b2223\n\n- btrfs: reset destination buffer when read_extent_buffer() gets invalid range (git-fixes)\n- commit 7ef02d5\n\n- btrfs: return -EUCLEAN for delayed tree ref with a ref count not equals to 1 (git-fixes)\n- commit e6b51c1\n\n- btrfs: file_remove_privs needs an exclusive lock in direct io write (git-fixes)\n- commit 0bc88db\n\n- blacklist.conf: btrfs: cleanup, v0 extent removal\n- commit fecc398\n\n- btrfs: don't start transaction when joining with TRANS_JOIN_NOSTART (git-fixes)\n- commit 74fcad3\n\n- btrfs: fix start transaction qgroup rsv double free (git-fixes)\n- commit 272247e\n\n- btrfs: free qgroup rsv on io failure (git-fixes)\n- commit 384dac4\n\n- netfilter: nf_tables: disable toggling dormant table state\n  more than once (git-fixes).\n- commit 76bebd5\n\n- mptcp: process pending subflow error on close (git-fixes).\n- commit ef629c5\n\n- mptcp: move __mptcp_error_report in protocol.c (git-fixes).\n- commit a777e91\n\n- mptcp: fix bogus receive window shrinkage with multiple subflows\n  (git-fixes).\n- commit deea9a0\n\n- netfilter: nft_set_rbtree: use read spinlock to avoid datapath\n  contention (git-fixes).\n- commit ddc952e\n\n- net/smc: use smc_lgr_list.lock to protect smc_lgr_list.list\n  iterate in smcr_port_add (git-fixes).\n- commit 2d7895b\n\n- net/smc: bugfix for smcr v2 server connect success statistic\n  (git-fixes).\n- commit e746f6b\n\n- netfilter: nf_tables: uapi: Describe NFTA_RULE_CHAIN_ID\n  (git-fixes).\n- commit ec5b855\n\n- net: annotate data-races around sk-\u0026gt;sk_bind_phc (git-fixes).\n- commit 16b7a1e\n\n- net: annotate data-races around sk-\u0026gt;sk_tsflags (git-fixes).\n- commit b028530\n\n- arm64: Add the arm64.no32bit_el0 command line option\n  (jsc#PED-3184).\n  Please note that some adjustments were needed since the upstream commit\n  is based on kernel 6.9 which has idreg-override.c moved under\n  arch/arm64/kernel/pi/.\n- commit 4fba46a\n\n- af_unix: Drop oob_skb ref before purging queue in GC\n  (CVE-2024-26676 bsc#1222380).\n- commit 57acc3a\n\n- af_unix: Fix task hung while purging oob_skb in GC\n  (CVE-2024-26676 bsc#1222380).\n- commit 3af3fbb\n\n- af_unix: Call kfree_skb() for dead unix_(sk)-\u0026gt;oob_skb in GC\n  (CVE-2024-26676 bsc#1222380).\n- commit 7728cdc\n\n- platform/x86/intel-uncore-freq: Don't present root domain on\n  error (git-fixes).\n- tools/arch/x86/intel_sdsi: Fix meter_certificate decoding\n  (git-fixes).\n- tools/arch/x86/intel_sdsi: Fix meter_show display (git-fixes).\n- tools/arch/x86/intel_sdsi: Fix maximum meter bundle length\n  (git-fixes).\n- platform/x86: xiaomi-wmi: Fix race condition when reporting\n  key events (git-fixes).\n- mtd: rawnand: hynix: fixed typo (git-fixes).\n- mtd: core: Report error if first mtd_otp_size() call fails in\n  mtd_otp_nvmem_add() (git-fixes).\n- mmc: davinci: Don't strip remove function when driver is builtin\n  (git-fixes).\n- mmc: sdhci_am654: Fix ITAPDLY for HS400 timing (git-fixes).\n- mmc: sdhci_am654: Add ITAPDLYSEL in sdhci_j721e_4bit_set_clock\n  (git-fixes).\n- mmc: sdhci_am654: Add OTAP/ITAP delay enable (git-fixes).\n- mmc: sdhci_am654: Write ITAPDLY for DDR52 timing (git-fixes).\n- mmc: sdhci_am654: Add tuning algorithm for delay chain\n  (git-fixes).\n- media: sunxi: a83-mips-csi2: also select GENERIC_PHY\n  (git-fixes).\n- media: flexcop-usb: fix sanity check of bNumEndpoints\n  (git-fixes).\n- media: stk1160: fix bounds checking in stk1160_copy_video()\n  (git-fixes).\n- media: uvcvideo: Add quirk for Logitech Rally Bar (git-fixes).\n- media: v4l: Don't turn on privacy LED if streamon fails\n  (git-fixes).\n- media: mc: mark the media devnode as registered from the,\n  start (git-fixes).\n- media: atomisp: ssh_css: Fix a null-pointer dereference in\n  load_video_binaries (git-fixes).\n- media: v4l2-subdev: Fix stream handling for crop API\n  (git-fixes).\n- media: mc: Fix graph walk in media_pipeline_start (git-fixes).\n- media: i2c: et8ek8: Don't strip remove function when driver\n  is builtin (git-fixes).\n- media: dt-bindings: ovti,ov2680: Fix the power supply names\n  (git-fixes).\n- media: ipu3-cio2: Request IRQ earlier (git-fixes).\n- media: rcar-vin: work around -Wenum-compare-conditional warning\n  (git-fixes).\n- media: ngene: Add dvb_ca_en50221_init return value check\n  (git-fixes).\n- commit ceb1555\n\n- Move upstreamed media patches into sorted section\n- commit 521e539\n\n- dmaengine: idxd: move safety flag to struct ends (bsc#1223625\n  CVE-2024-21823).\n- dmaengine: idxd: add a write() method for applications to\n  submit work (bsc#1223625 CVE-2024-21823).\n- dmaengine: idxd: add a new security check to deal with a\n  hardware erratum (bsc#1223625 CVE-2024-21823).\n- VFIO: Add the SPR_DSA and SPR_IAX devices to the denylist\n  (bsc#1223625 CVE-2024-21823).\n- commit 8718675\n\n- Update\n  patches.suse/io_uring-af_unix-disable-sending-io_uring-over-socke.patch\n  (bsc#1218447 CVE-2023-6531 CVE-2023-52654 bsc#1224099).\n- Update\n  patches.suse/usb-aqc111-check-packet-for-fixup-for-true-limit.patch\n  (git-fixes CVE-2023-52655 bsc#1217169).\n- commit 07c8bc1\n\n- octeontx2-pf: fix FLOW_DIS_IS_FRAGMENT implementation\n  (git-fixes).\n- commit 78ec58d\n\n- net/mlx5: Fix peer devlink set for SF representor devlink port\n  (git-fixes).\n- commit 6a691b6\n\n- net/mlx5: Lag, restore buckets number to default after hash\n  LAG deactivation (git-fixes).\n- commit 19da0bb\n\n- net: sparx5: flower: fix fragment flags handling (git-fixes).\n- commit 5fd27e9\n\n- net: ena: Set tx_info-\u0026gt;xdpf value to NULL (git-fixes).\n- commit 7d1d83a\n\n- net: ena: Fix incorrect descriptor free behavior (git-fixes).\n- commit 69577fd\n\n- net: ena: Wrong missing IO completions check order (git-fixes).\n- commit fbbd86e\n\n- net: ena: Fix potential sign extension issue (git-fixes).\n- commit b3cc5f8\n\n- net: dsa: mt7530: trap link-local frames regardless of ST Port\n  State (git-fixes).\n- commit 726080b\n\n- net: sparx5: fix wrong config being used when reconfiguring PCS\n  (git-fixes).\n- commit d2d1229\n\n- net/mlx5e: RSS, Block XOR hash with over 128 channels\n  (git-fixes).\n- commit 40b1ccb\n\n- net/mlx5: Restore mistakenly dropped parts in register devlink\n  flow (git-fixes).\n- commit dfb4099\n\n- btrfs: defrag: avoid unnecessary defrag caused by incorrect extent size (git-fixes)\n- commit a1c6e8c\n\n- btrfs: don't warn if discard range is not aligned to sector (git-fixes)\n- commit f239c2a\n\n- btrfs: tree-checker: fix inline ref size in error messages (git-fixes)\n- commit a304971\n\n- btrfs: defrag: reject unknown flags of btrfs_ioctl_defrag_range_args (git-fixes)\n- commit 81a1329\n\n- btrfs: do not allow non subvolume root targets for snapshot (git-fixes)\n- commit d495a4b\n\n- btrfs: send: ensure send_fd is writable (git-fixes)\n- commit 5055583\n\n- btrfs: free the allocated memory if btrfs_alloc_page_array() fails (git-fixes)\n- commit 532ad3c\n\n- btrfs: fix 64bit compat send ioctl arguments not initializing version member (git-fixes)\n- commit 2c30d15\n\n- btrfs: fix off-by-one when checking chunk map includes logical address (git-fixes)\n- commit e5842bb\n\n- blacklist.conf: btrfs: ref-verify not built\n- commit 701d654\n\n- btrfs: use u64 for buffer sizes in the tree search ioctls (git-fixes)\n- commit a1c6ed1\n\n- btrfs: error out when reallocating block for defrag using a stale transaction (git-fixes)\n- commit e6bb34b\n\n- btrfs: error when COWing block from a root that is being deleted (git-fixes)\n- commit 78a2694\n\n- btrfs: error out when COWing block using a stale transaction (git-fixes)\n- commit 850d86f\n\n- s390/cpum_cf: make crypto counters upward compatible across\n  machine types (bsc#1224348).\n- commit 36c1e09\n\n- btrfs: always print transaction aborted messages with an error level (git-fixes)\n- commit 26fa5ae\n\n- net/mlx5e: Do not produce metadata freelist entries in Tx port\n  ts WQE xmit (git-fixes).\n- commit 287b501\n\n- net/mlx5e: HTB, Fix inconsistencies with QoS SQs number\n  (git-fixes).\n- commit 0085432\n\n- net/mlx5e: Fix mlx5e_priv_init() cleanup flow (git-fixes).\n- commit 01134b3\n\n- net/mlx5e: RSS, Block changing channels number when RXFH is\n  configured (git-fixes).\n- commit c93a7d5\n\n- net/mlx5: Correctly compare pkt reformat ids (git-fixes).\n- commit 76a7159\n\n- net/mlx5: Properly link new fs rules into the tree (git-fixes).\n- commit 7272c33\n\n- net/mlx5: offset comp irq index in name by one (git-fixes).\n- commit 56809e4\n\n- net/mlx5: Register devlink first under devlink lock (git-fixes).\n- commit 3162538\n\n- net/mlx5: E-switch, store eswitch pointer before registering\n  devlink_param (git-fixes).\n- commit d6f7fd4\n\n- ALSA: hda/realtek - fixed headset Mic not show (stable-fixes).\n- ALSA: hda: hda_cs_dsp_ctl: Remove notification of driver write\n  (stable-fixes).\n- ALSA: Fix deadlocks with kctl removals at disconnection\n  (stable-fixes).\n- ALSA: hda: clarify Copyright information (stable-fixes).\n- ALSA: hda/realtek: Add support for ASUS Zenbook 2024 HN7306W\n  (stable-fixes).\n- ALSA: hda/realtek: Fix internal speakers for Legion Y9000X\n  2022 IAH7 (stable-fixes).\n- ALSA: hda: Add Intel BMG PCI ID and HDMI codec vid\n  (stable-fixes).\n- ALSA: hda: cs35l41: Add support for ASUS ROG 2024 Laptops\n  (stable-fixes).\n- ALSA: hda: cs35l41: Ignore errors when configuring IRQs\n  (stable-fixes).\n- ALSA: hda/realtek: Add quirks for Lenovo 13X (stable-fixes).\n- ALSA: hda: cs35l41: Support Lenovo 13X laptop without _DSD\n  (stable-fixes).\n- ALSA: hda: cs35l41: Remove redundant argument to\n  cs35l41_request_firmware_file() (stable-fixes).\n- ALSA: hda: cs35l41: Update DSP1RX5/6 Sources for DSP config\n  (stable-fixes).\n- ALSA: hda/realtek: Add quirks for HP Omen models using CS35L41\n  (stable-fixes).\n- ALSA: hda: cs35l41: Support HP Omen models without _DSD\n  (stable-fixes).\n- ALSA: hda: cs35l41: Set the max PCM Gain using tuning setting\n  (stable-fixes).\n- commit bd5e5fc\n\n- Add cherry-picked patch references to amdgpu patches\n- commit fb4ef8e\n\n- ALSA: hda/realtek: Drop doubly quirk entry for 103c:8a2e\n  (git-fixes).\n- ASoC: tas2781: Fix a warning reported by robot kernel test\n  (git-fixes).\n- ASoC: tracing: Export SND_SOC_DAPM_DIR_OUT to its value\n  (git-fixes).\n- ASoC: Intel: avs: Test result of avs_get_module_entry()\n  (git-fixes).\n- ASoC: Intel: avs: Fix potential integer overflow (git-fixes).\n- ASoC: Intel: avs: Fix ASRC module initialization (git-fixes).\n- ASoC: SOF: Intel: mtl: Implement firmware boot state check\n  (git-fixes).\n- ASoC: SOF: Intel: lnl: Correct rom_status_reg (git-fixes).\n- ASoC: SOF: Intel: mtl: Correct rom_status_reg (git-fixes).\n- Revert \u0026quot;ASoC: SOF: Intel: hda-dai-ops: only allocate/release\n  streams for first CPU DAI\u0026quot; (stable-fixes).\n- Revert \u0026quot;ASoC: SOF: Intel: hda-dai-ops: reset device count for\n  SoundWire DAIs\u0026quot; (stable-fixes).\n- ASoC: kirkwood: Fix potential NULL dereference (git-fixes).\n- ASoC: Intel: avs: ssm4567: Do not ignore route checks\n  (git-fixes).\n- ASoC: Intel: Disable route checks for Skylake boards\n  (git-fixes).\n- ASoC: mediatek: Assign dummy when codec not specified for a\n  DAI link (git-fixes).\n- ASoC: mediatek: mt8192: fix register configuration for tdm\n  (git-fixes).\n- ALSA: hda: cs35l56: Fix lifetime of cs_dsp instance (git-fixes).\n- ALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\n  (git-fixes).\n- ALSA: hda: cs35l41: Remove Speaker ID for Lenovo Legion slim\n  7 16ARHA7 (git-fixes).\n- fbdev: savage: Handle err return when savagefb_check_var failed\n  (git-fixes).\n- fbdev: sh7760fb: allow modular build (git-fixes).\n- fbdev: sisfb: hide unused variables (git-fixes).\n- fbdev: shmobile: fix snprintf truncation (git-fixes).\n- drm: zynqmp_dpsub: Always register bridge (git-fixes).\n- Revert \u0026quot;drm/bridge: ti-sn65dsi83: Fix enable error path\u0026quot;\n  (git-fixes).\n- drm/fbdev-generic: Do not set physical framebuffer address\n  (git-fixes).\n- drm/msm/a6xx: Avoid a nullptr dereference when speedbin setting\n  fails (git-fixes).\n- drm/msm/adreno: fix CP cycles stat retrieval on a7xx\n  (git-fixes).\n- drm/msm/dpu: Add callback function pointer check before its call\n  (git-fixes).\n- drm/msm/dpu: Allow configuring multiple active DSC blocks\n  (git-fixes).\n- drm/msm/dpu: Always flush the slave INTF on the CTL (git-fixes).\n- drm/msm/dsi: Print dual-DSI-adjusted pclk instead of original\n  mode pclk (git-fixes).\n- drm/msm/dp: Avoid a long timeout for AUX transfer if nothing\n  connected (git-fixes).\n- drm/msm/dp: allow voltage swing / pre emphasis of 3 (git-fixes).\n- drm/mediatek: dp: Fix mtk_dp_aux_transfer return value\n  (git-fixes).\n- drm/mediatek: Init `ddp_comp` with devm_kcalloc() (git-fixes).\n- drm/mediatek: Add 0 size check to mtk_drm_gem_obj (git-fixes).\n- drm/bridge: tc358775: fix support for jeida-18 and jeida-24\n  (git-fixes).\n- drm/meson: gate px_clk when setting rate (git-fixes).\n- drm/rockchip: vop2: Do not divide height twice for YUV\n  (git-fixes).\n- drm/panel: simple: Add missing Innolux G121X1-L03 format,\n  flags, connector (git-fixes).\n- drm/bridge: anx7625: Update audio status while detecting\n  (git-fixes).\n- drm/panel: novatek-nt35950: Don't log an error when DSI host\n  can't be found (git-fixes).\n- drm/bridge: dpc3433: Don't log an error when DSI host can't\n  be found (git-fixes).\n- drm/bridge: tc358775: Don't log an error when DSI host can't\n  be found (git-fixes).\n- drm/bridge: lt9611uxc: Don't log an error when DSI host can't\n  be found (git-fixes).\n- drm/bridge: lt9611: Don't log an error when DSI host can't be\n  found (git-fixes).\n- drm/bridge: lt8912b: Don't log an error when DSI host can't\n  be found (git-fixes).\n- drm/bridge: icn6211: Don't log an error when DSI host can't\n  be found (git-fixes).\n- drm/bridge: anx7625: Don't log an error when DSI host can't\n  be found (git-fixes).\n- drm: vc4: Fix possible null pointer dereference (git-fixes).\n- drm/arm/malidp: fix a possible null pointer dereference\n  (git-fixes).\n- drm/amd/display: Remove redundant condition in\n  dcn35_calc_blocks_to_gate() (git-fixes).\n- drm/amd/display: Fix potential index out of bounds in color\n  transformation function (git-fixes).\n- drm: bridge: cdns-mhdp8546: Fix possible null pointer\n  dereference (git-fixes).\n- drm/meson: vclk: fix calculation of 59.94 fractional rates\n  (git-fixes).\n- drm/panel: ltk050h3146w: drop duplicate commands from\n  LTK050H3148W init (git-fixes).\n- drm/panel: ltk050h3146w: add MIPI_DSI_MODE_VIDEO to LTK050H3148W\n  flags (git-fixes).\n- drm/lcdif: Do not disable clocks on already suspended hardware\n  (git-fixes).\n- drm/omapdrm: Fix console by implementing fb_dirty (git-fixes).\n- drm/nouveau/dp: Fix incorrect return code in r535_dp_aux_xfer()\n  (git-fixes).\n- drm/ci: update device type for volteer devices (git-fixes).\n- drm/bridge: Fix improper bridge init order with\n  pre_enable_prev_first (git-fixes).\n- commit e7d2777\n\n- Revert \u0026quot;selinux: introduce an initial SID for early boot processes\u0026quot; (bsc#1208593)\n  It caused a regression on ALP-current branch, kernel-obs-qa build failed.\n- commit 35271c3\n\n- powerpc/eeh: Permanently disable the removed device (bsc#1223991\n  ltc#205740).\n- commit b9c2f2f\n\n- fat: fix uninitialized field in nostale filehandles (git-fixes)\n- commit f1e1fd7\n\n- net: ks8851: Queue RX packets in IRQ handler instead of\n  disabling BHs (git-fixes).\n- commit cc9313f\n\n- Move upstreamed ACPI patch into sorted section\n- commit 6c48aae\n\n- fs: relax mount_setattr() permission checks (git-fixes)\n- commit 3b377cf\n\n- bpf, arm64: Fix incorrect runtime stats (git-fixes)\n- commit c30a258\n\n- fast_dput(): handle underflows gracefully (git-fixes)\n- commit 7a48807\n\n- ecryptfs: Reject casefold directory inodes (git-fixes)\n- commit bc23622\n\n- fsverity: skip PKCS#7 parser when keyring is empty (git-fixes)\n- commit 97f203b\n\n- cifs: fix underflow in parse_server_interfaces() (CVE-2024-26828 bsc#1223084).\n- commit 40aba68\n\n- blacklist.conf: fs updates\n- commit 372a9be\n\n- octeontx2-af: Fix NIX SQ mode and BP config (git-fixes).\n- commit 6fa6e4e\n\n- net: ks8851: Handle softirqs at the end of IRQ thread to fix\n  hang (git-fixes).\n- commit 871b504\n\n- net: ks8851: Inline ks8851_rx_skb() (git-fixes).\n- commit 0fafe3f\n\n- bnxt_en: Reset PTP tx_avail after possible firmware reset\n  (git-fixes).\n- commit 9421aa8\n\n- bnxt_en: Fix error recovery for RoCE ulp client (git-fixes).\n- commit a747a74\n\n- bnxt_en: Fix possible memory leak in bnxt_rdma_aux_device_init()\n  (git-fixes).\n- commit 6a62a82\n\n- geneve: fix header validation in geneve[6]_xmit_skb (git-fixes).\n- commit d4d699c\n\n- octeontx2-pf: Fix transmit scheduler resource leak (git-fixes).\n- commit 9beffaf\n\n- net/mlx5: SF, Stop waiting for FW as teardown was called\n  (git-fixes).\n- commit 2583247\n\n- mlxsw: Use refcount_t for reference counting (git-fixes).\n- commit 5be65d6\n\n- net: ena: Use tx_ring instead of xdp_ring for XDP channel TX\n  (git-fixes).\n- commit d4b3628\n\n- net: ena: Pass ena_adapter instead of net_device to\n  ena_xmit_common() (git-fixes).\n- commit c080c13\n\n- net: ena: Move XDP code to its new files (git-fixes).\n- commit 7cd4a35\n\n- net: openvswitch: Fix Use-After-Free in ovs_ct_exit (bsc#1224098\n  CVE-2024-27395).\n- commit a237c4c\n\n- selinux: introduce an initial SID for early boot processes\n  (bsc#1208593).\n- commit a82f05c\n\n- mctp: perform route lookups under a RCU read-side lock\n  (CVE-2023-52483 bsc#1220738).\n- commit 659b74f\n\n- net: gtp: Fix Use-After-Free in gtp_dellink (bsc#1224096\n  CVE-2024-27396).\n- commit 7f59223\n\n- Move upstreamed patches into sorted section\n- commit 25085d6\n\n- wifi: iwlwifi: mvm: fix check in iwl_mvm_sta_fw_id_mask\n  (git-fixes).\n- commit 61c5310\n\n- ax25: Fix reference count leak issue of net_device (git-fixes).\n- ax25: Fix reference count leak issues of ax25_dev (git-fixes).\n- net: usb: ax88179_178a: fix link status when link is set to\n  down/up (git-fixes).\n- selftests: net: move amt to socat for better compatibility\n  (git-fixes).\n- Bluetooth: qca: Fix error code in qca_read_fw_build_info()\n  (git-fixes).\n- net: usb: smsc95xx: stop lying about skb-\u0026gt;truesize (git-fixes).\n- wifi: mwl8k: initialize cmd-\u0026gt;addr[] properly (git-fixes).\n- wifi: rtw89: pci: correct TX resource checking for PCI DMA\n  channel of firmware command (git-fixes).\n- wifi: ar5523: enable proper endpoint verification (git-fixes).\n- wifi: carl9170: add a proper sanity check for endpoints\n  (git-fixes).\n- wifi: ath10k: populate board data for WCN3990 (git-fixes).\n- wifi: ath10k: Fix an error code problem in\n  ath10k_dbg_sta_write_peer_debug_trigger() (git-fixes).\n- wifi: ath12k: fix out-of-bound access of qmi_invoke_handler()\n  (git-fixes).\n- wifi: carl9170: re-fix fortified-memset warning (git-fixes).\n- wifi: mt76: mt7603: add wpdma tx eof flag for PSE client reset\n  (git-fixes).\n- wifi: mt76: mt7603: fix tx queue of loopback packets\n  (git-fixes).\n- net: usb: sr9700: stop lying about skb-\u0026gt;truesize (git-fixes).\n- usb: aqc111: stop lying about skb-\u0026gt;truesize (git-fixes).\n- wifi: iwlwifi: mvm: init vif works only once (git-fixes).\n- net: nfc: remove inappropriate attrs check (stable-fixes).\n- wifi: ath11k: don't force enable power save on non-running vdevs\n  (git-fixes).\n- wifi: ath10k: poll service ready message before failing\n  (git-fixes).\n- wifi: iwlwifi: reconfigure TLC during HW restart (git-fixes).\n- wifi: iwlwifi: mvm: select STA mask only for active links\n  (git-fixes).\n- wifi: iwlwifi: mvm: fix active link counting during recovery\n  (git-fixes).\n- wifi: iwlwifi: mvm: allocate STA links only for active links\n  (git-fixes).\n- wifi: ieee80211: fix ieee80211_mle_basic_sta_prof_size_ok()\n  (git-fixes).\n- wifi: mt76: mt7915: workaround too long expansion sparse\n  warnings (git-fixes).\n- wifi: brcmfmac: pcie: handle randbuf allocation failure\n  (git-fixes).\n- bitops: add missing prototype check (git-fixes).\n- ata: pata_legacy: make legacy_exit() work again (git-fixes).\n- efi: libstub: only free priv.runtime_map when allocated\n  (git-fixes).\n- HID: amd_sfh: Handle \u0026quot;no sensors\u0026quot; in PM operations (git-fixes).\n- HID: intel-ish-hid: ipc: Add check for pci_alloc_irq_vectors\n  (git-fixes).\n- hwmon: (lm70) fix links in doc and comments (git-fixes).\n- spi: xilinx: Fix kernel documentation in the xilinx_spi.h\n  (git-fixes).\n- ACPI: LPSS: Advertise number of chip selects via property\n  (git-fixes).\n- ACPI: bus: Indicate support for IRQ ResourceSource thru _OSC\n  (git-fixes).\n- ACPI: Fix Generic Initiator Affinity _OSC bit (git-fixes).\n- ACPI: bus: Indicate support for the Generic Event Device thru\n  _OSC (git-fixes).\n- ACPI: bus: Indicate support for _TFP thru _OSC (git-fixes).\n- ACPI: disable -Wstringop-truncation (git-fixes).\n- cpufreq: brcmstb-avs-cpufreq: ISO C90 forbids mixed declarations\n  (git-fixes).\n- cppc_cpufreq: Fix possible null pointer dereference (git-fixes).\n- cpufreq: exit() callback is optional (git-fixes).\n- thermal/drivers/tsens: Fix null pointer dereference (git-fixes).\n- thermal/drivers/qcom/lmh: Check for SCM availability at probe\n  (git-fixes).\n- selftests: default to host arch for LLVM builds (git-fixes).\n- selftests/resctrl: fix clang build failure: use LOCAL_HDRS\n  (git-fixes).\n- selftests/binderfs: use the Makefile's rules, not Make's\n  implicit rules (git-fixes).\n- irqchip/loongson-pch-msi: Fix off-by-one on allocation error\n  path (git-fixes).\n- irqchip/alpine-msi: Fix off-by-one in allocation error path\n  (git-fixes).\n- commit ea6926d\n\n- block: Fix iterating over an empty bio with\n  bio_for_each_folio_all (bsc#1221635 CVE-2024-26632).\n- commit a419383\n\n- iomap: clear the per-folio dirty bits on all writeback failures (git-fixes)\n- commit cfedccd\n\n- x86/retpoline: Add NOENDBR annotation to the SRSO dummy return thunk (git-fixes).\n- commit 431e388\n\n- kabi/severities: Remove mitigation-related symbols\n  Those are used by the core kernel to implement CPU vulnerabilities\n  mitigation and are not expected to be consumed by 3rd party users.\n- commit 8d79889\n\n- Update\n  patches.suse/Bluetooth-hci_sync-Don-t-double-print-name-in-add-re.patch\n  (bsc#1216358).\n  Added bugzilla reference\n- commit 3985fb5\n\n- Update patches.suse/usb-ulpi-Fix-debugfs-directory-leak.patch\n  (bsc#1223847 CVE-2024-26919).\n  Added bugzilla ID and CVE\n- commit 44b677b\n\n- xfs: fix perag leak when growfs fails (git-fixes).\n- commit 111377b\n\n- xfs: add lock protection when remove perag from radix tree\n  (git-fixes).\n- commit fdadeb0\n\n- xfs: force all buffers to be written during btree bulk load\n  (git-fixes).\n- commit bcc67e9\n\n- xfs: recompute growfsrtfree transaction reservation while\n  growing rt volume (git-fixes).\n- commit 0ef8d73\n\n- xfs: make xchk_iget safer in the presence of corrupt inode\n  btrees (git-fixes).\n- commit 3312038\n\n- xfs: transfer recovered intent item ownership in -\u0026gt;iop_recover\n  (git-fixes).\n- commit 9cdf2ef\n\n- xfs: pass the xfs_defer_pending object to iop_recover\n  (git-fixes).\n- commit c4d4eda\n\n- xfs: use xfs_defer_pending objects to recover intent items\n  (git-fixes).\n- commit 4e8f44d\n\n- jffs2: prevent xattr node from overflowing the eraseblock\n  (git-fixes).\n- commit bb15e9c\n\n- x86/cpu: Add model number for Intel Arrow Lake mobile processor (git-fixes).\n- commit 7c55ce6\n\n- x86/bugs: Fix the SRSO mitigation on Zen3/4 (git-fixes).\n- commit b73f38c\n\n- x86/calldepth: Rename __x86_return_skl() to call_depth_return_thunk() (git-fixes).\n- commit 5ad2192\n\n- x86/nospec: Refactor UNTRAIN_RET[_*] (git-fixes).\n- commit 653bafb\n\n- x86/rethunk: Use SYM_CODE_START[_LOCAL]_NOALIGN macros (git-fixes).\n- commit 3e5de92\n\n- x86/srso: Disentangle rethunk-dependent options (git-fixes).\n- Refresh\n  patches.suse/x86-bugs-Cache-the-value-of-MSR_IA32_ARCH_CAPABILITIES.patch.\n- commit 4761d61\n\n- x86/bugs: Remove default case for fully switched enums (git-fixes).\n- commit caa1a64\n\n- x86/srso: Remove 'pred_cmd' label (git-fixes).\n- commit d2d0e6a\n\n- x86/srso: Unexport untraining functions (git-fixes).\n- commit f855258\n\n- x86/srso: Improve i-cache locality for alias mitigation (git-fixes).\n- commit 8ffea3d\n\n- x86/srso: Fix unret validation dependencies (git-fixes).\n- commit 95452af\n\n- x86/srso: Print actual mitigation if requested mitigation isn't  possible (git-fixes).\n- Refresh\n  patches.suse/x86-srso-fix-vulnerability-reporting-for-missing-microcode.patch.\n- commit 3afb908\n\n- blacklist.conf: not applicable\n- commit 158f7dc\n\n- x86/coco: Require seeding RNG with RDRAND on CoCo systems (git-fixes).\n- commit 9588be6\n\n- x86/nmi: Fix the inverse \u0026quot;in NMI handler\u0026quot; check (git-fixes).\n- commit 3b9c9ee\n\n- x86/purgatory: Switch to the position-independent small code model (git-fixes).\n- commit 57ab7d5\n\n- x86/CPU/AMD: Add models 0x10-0x1f to the Zen5 range (git-fixes).\n- commit f043bca\n\n- Move upstreamed patches into sorted section\n- commit 96e6c4c\n\n- soc: qcom: pmic_glink: Make client-lock non-sleeping\n  (git-fixes).\n- commit 410217d\n\n- soc: qcom: rpmh-rsc: Enhance check for VRM in-flight request\n  (git-fixes).\n- commit 2c41b82\n\n- crypto: qat - specify firmware files for 402xx (git-fixes).\n- crypto: qat - improve error logging to be consistent across\n  features (git-fixes).\n- crypto: x86/sha512-avx2 - add missing vzeroupper (git-fixes).\n- crypto: x86/sha256-avx2 - add missing vzeroupper (git-fixes).\n- crypto: x86/nh-avx2 - add missing vzeroupper (git-fixes).\n- crypto: ccp - drop platform ifdef checks (git-fixes).\n- crypto: bcm - Fix pointer arithmetic (git-fixes).\n- crypto: ecdsa - Fix module auto-load on add-key (git-fixes).\n- kunit/fortify: Fix mismatched kvalloc()/vfree() usage\n  (git-fixes).\n- nilfs2: fix out-of-range warning (git-fixes).\n- admin-guide/hw-vuln/core-scheduling: fix return type of\n  PR_SCHED_CORE_GET (git-fixes).\n- soc: mediatek: cmdq: Fix typo of CMDQ_JUMP_RELATIVE (git-fixes).\n- soc: qcom: pmic_glink: notify clients about the current state\n  (git-fixes).\n- soc: qcom: pmic_glink: don't traverse clients list without a\n  lock (git-fixes).\n- commit 7da1cbc\n\n- btrfs: add missing mutex_unlock in btrfs_relocate_sys_chunks() (git-fixes)\n- commit 8bc326a\n\n- blacklist.conf: add perf patch already known by alias commit\n- commit 706da8e\n\n- btrfs: fix wrong block_start calculation for btrfs_drop_extent_map_range() (git-fixes)\n  Dropped hunk in selftests (test_case_7), 92e1229b204d6.\n- commit 8dcf7c1\n\n- btrfs: fix information leak in btrfs_ioctl_logical_to_ino() (git-fixes)\n- commit 622d549\n\n- btrfs: handle chunk tree lookup error in btrfs_relocate_sys_chunks() (git-fixes)\n- commit 84f4309\n\n- btrfs: reject encoded write if inode has nodatasum flag set (git-fixes)\n- commit bbc649d\n\n- btrfs: send: return EOPNOTSUPP on unknown flags (git-fixes)\n- commit 8ef1c53\n\n- btrfs: fix lockdep splat and potential deadlock after failure running delayed items (git-fixes)\n- commit a6f28a6\n\n- btrfs: release path before inode lookup during the ino lookup ioctl (git-fixes)\n- commit 4b7ba54\n\n- blacklist.conf: Add 2d6cd791e63e \u0026quot;btrfs: fix race between finishing block group creation and its item update\u0026quot;\n- commit ca673ac\n\n- firewire: nosy: ensure user_length is taken into account when\n  fetching packet contents (CVE-2024-27401 bsc#1224181).\n- commit 5441039\n\n- Update\n  patches.suse/usb-aqc111-check-packet-for-fixup-for-true-limit.patch\n  (bsc#1217169 CVE-2023-52655).\n  Added bugzilla and CVE\n- commit 20db8f9\n\n- btrfs: fix off-by-one chunk length calculation at contains_pending_extent() (git-fixes)\n- commit 9ec1333\n\n- crypto: rsa - add a check for allocation failure (bsc#1222775).\n- commit 8c6c396\n\n- blacklist.conf: kABI\n- commit 70f199a\n\n- blacklist.conf: kABI\n- commit 835874a\n\n- kABI workaround for of driver changes (git-fixes).\n- commit ef08885\n\n- aoe: avoid potential deadlock at set_capacity (CVE-2024-26775,\n  bsc#1222627).\n- commit fd6e05d\n\n- crypto: testmgr - remove unused xts4096 and xts512 algorithms\n  from testmgr.c (bsc#1222769).\n- commit 0de6756\n\n- crypto: rsa - allow only odd e and restrict value in FIPS mode\n  (bsc#1222775).\n- commit c5ca0e4\n\n- of: module: prevent NULL pointer dereference in vsnprintf()\n  (stable-fixes).\n- of: dynamic: Synchronize of_changeset_destroy() with the\n  devlink removals (git-fixes).\n- of: property: fw_devlink: Fix stupid bug in remote-endpoint\n  parsing (git-fixes).\n- of: property: Add in-ports/out-ports support to\n  of_graph_get_port_parent() (stable-fixes).\n- of: property: Improve finding the supplier of a remote-endpoint\n  property (git-fixes).\n- of: property: Improve finding the consumer of a remote-endpoint\n  property (git-fixes).\n- of: unittest: Fix compile in the non-dynamic case (git-fixes).\n- of: property: fix typo in io-channels (git-fixes).\n- commit 7743bc7\n\n- crypto: ecc - update ecc_gen_privkey for FIPS 186-5\n  (bsc#1222782).\n- commit bcc0381\n\n- selftests/pidfd: Fix config for pidfd_setns_test (git-fixes).\n- EDAC/synopsys: Fix ECC status and IRQ control race condition\n  (git-fixes).\n- commit 85ce9d3\n\n- nfs: fix UAF in direct writes (bsc#1223653 CVE-2024-26958).\n- commit 9b53f23\n\n- drm/connector: Add \\n to message about demoting connector\n  force-probes (git-fixes).\n- drm/meson: dw-hdmi: add bandgap setting for g12 (git-fixes).\n- drm/meson: dw-hdmi: power up phy on device init (git-fixes).\n- drm/amdgpu: Fix comparison in amdgpu_res_cpu_visible\n  (git-fixes).\n- drm/amdkfd: don't allow mapping the MMIO HDP page with large\n  pages (git-fixes).\n- dm/amd/pm: Fix problems with reboot/shutdown for some SMU\n  13.0.4/13.0.11 users (git-fixes).\n- drm/i915/bios: Fix parsing backlight BDB data (git-fixes).\n- drm/i915/gt: Automate CCS Mode setting during engine resets\n  (git-fixes).\n- maple_tree: fix mas_empty_area_rev() null pointer dereference\n  (git-fixes).\n- spi: microchip-core-qspi: fix setting spi bus clock rate\n  (git-fixes).\n- regulator: core: fix debugfs creation regression (git-fixes).\n- commit 3a3ad92\n\n- netfilter: nf_tables: mark set as dead when unbinding anonymous\n  set with timeout (bsc#1221829 CVE-2024-26643).\n- commit c841ee9\n\n- block/rnbd-srv: Check for unlikely string overflow (bsc#1221615\n  CVE-2023-52618).\n- commit 3cf7eb9\n\n- block: bio-integrity: fix kcalloc() arguments order (bsc#1217384\n  CVE-2023-6238).\n- commit 37816df\n\n- hwmon: (pmbus/ucd9000) Increase delay from 250 to 500us\n  (git-fixes).\n- hwmon: (corsair-cpro) Protect ccp-\u0026gt;wait_input_report with a\n  spinlock (git-fixes).\n- hwmon: (corsair-cpro) Use complete_all() instead of complete()\n  in ccp_raw_event() (git-fixes).\n- hwmon: (corsair-cpro) Use a separate buffer for sending commands\n  (git-fixes).\n- nfc: nci: Fix kcov check in nci_rx_work() (git-fixes).\n- Bluetooth: l2cap: fix null-ptr-deref in l2cap_chan_timeout\n  (git-fixes).\n- Bluetooth: HCI: Fix potential null-ptr-deref (git-fixes).\n- Bluetooth: qca: fix info leak when fetching fw build id\n  (git-fixes).\n- Bluetooth: qca: fix NVM configuration parsing (git-fixes).\n- Bluetooth: qca: add missing firmware sanity checks (git-fixes).\n- Bluetooth: msft: fix slab-use-after-free in msft_do_close()\n  (git-fixes).\n- Bluetooth: Fix use-after-free bugs caused by sco_sock_timeout\n  (git-fixes).\n- ARM: 9381/1: kasan: clear stale stack poison (git-fixes).\n- commit aa6a883\n\n- Update\n  patches.suse/xen-netfront-Add-missing-skb_mark_for_recycle.patch\n  (git-fixes CVE-2024-27393 bsc#1224076).\n- commit 3dacd9a\n\n- kprobes/x86: Use copy_from_kernel_nofault() to read from unsafe\n  address (CVE-2024-26946 bsc#1223669).\n- commit c3ef9f9\n\n- Move upstreamed powerpc patches into sorted section\n- commit de7fc3a\n\n- io_uring: kabi cookie remove (bsc#1217384).\n- commit 6174cfd\n\n- Update\n  patches.suse/USB-core-Fix-deadlock-in-port-disable-sysfs-attribut.patch\n  (bsc#1223670 CVE-2024-26933).\n  Added CVE and bugzilla ID\n- commit 2932a82\n\n- crypto: iaa - Fix nr_cpus \u0026lt; nr_iaa case (bsc#1223732\n  CVE-2024-26945).\n- commit d4480a0\n\n- supported.conf: support tcp_dctcp module (jsc#PED-8111)\n- commit 84b1f91\n\n- Update\n  patches.suse/crypto-lib-mpi-Fix-unexpected-pointer-access-in-mpi_.patch\n  (git-fixes CVE-2023-52616 bsc#1221612).\n- commit 0f801e9\n\n- Update \u0026quot;drm/vmwgfx: Fix possible null pointer derefence with invalid contexts\u0026quot; (CVE-2024-26979 bsc#1223628)\n- commit 562486d\n\n- btrfs: fix race when detecting delalloc ranges during fiemap\n  (bsc#1223285).\n- commit b4449a9\n\n- btrfs: ensure fiemap doesn't race with writes when\n  FIEMAP_FLAG_SYNC is given (bsc#1223285).\n- commit e1d5456\n\n- btrfs: fix race between ordered extent completion and fiemap\n  (bsc#1223285).\n- commit b2ade77\n\n- btrfs: fix deadlock with fiemap and extent locking\n  (bsc#1223285).\n- commit 032df64\n\n- btrfs: send: don't issue unnecessary zero writes for trailing\n  hole (bsc#1222459).\n- commit 79ef069\n\n- inet: read sk-\u0026gt;sk_family once in inet_recv_error() (bsc#1222385\n  CVE-2024-26679).\n- commit cb5e75a\n\n- Move upstreamed HD-audio patch into sorted section\n- commit d615f15\n\n- ACPI: video: Add backlight=native quirk for Lenovo Slim 7 16ARH7\n  (bsc#1217750).\n- commit 9e75dfd\n\n- btrfs: dev-replace: properly validate device names (CVE-2024-26791 bsc#1222793)\n- commit 0244362\n\n- fs/ntfs3: Add NULL ptr dereference checking at the end of attr_allocate_frame() (CVE-2023-52641 bsc#1222303)\n- commit 3195e8d\n\n- fix patch references (CVE-2024-26739 bsc#1222559):\n  - patches.suse/net-sched-act_mirred-Create-function-tcf_mirred_to_d.patch\n  - patches.suse/net-sched-act_mirred-don-t-override-retval-if-we-alr.patch\n- commit af4b677\n\n- usb: dwc3: core: Prevent phy suspend during init (Git-fixes).\n- commit 0feb823\n\n- netfilter: nft_ct: fix l3num expectations with inet pseudo\n  family (git-fixes).\n- commit e0fbf15\n\n- drm/i915/vma: Fix UAF on destroy against retire race (CVE-2024-26939 bsc#1223679).\n- commit 0c69759\n\n- Reapply \u0026quot;drm/qxl: simplify qxl_fence_wait\u0026quot; (stable-fixes).\n- commit 2bd2798\n\n- rds: tcp: Fix use-after-free of net in reqsk_timer_handler()\n  (CVE-2024-26865 bsc#1223062).\n- commit 4df5c35\n\n- packet: annotate data-races around ignore_outgoing\n  (CVE-2024-26862 bsc#1223111).\n- commit 50ec7e9\n\n- Update\n  patches.suse/sctp-fix-potential-deadlock-on-net-sctp.addr_wq.patch\n  references (add CVE-2024-0639 bsc#1218917).\n- commit 61e4bcd\n\n- fs/ntfs3: Fix NULL pointer dereference on error in attr_allocate_frame() (CVE-2023-52641 bsc#1222303)\n- commit 45e1211\n\n- netfilter: nft_ct: sanitize layer 3 and 4 protocol number in\n  custom expectations (bsc#1222368 CVE-2024-26673).\n- commit bffaac0\n\n- fs: sysfs: Fix reference leak in sysfs_break_active_protection() (CVE-2024-26993 bsc#1223693)\n- commit b75cd2c\n\n- btrfs: don't drop extent_map for free space inode on write error (CVE-2024-26726 bsc#1222532)\n- commit 60707c9\n\n- ring-buffer: Only update pages_touched when a new page is\n  touched (git-fixes).\n- commit f2292de\n\n- kprobes: Fix possible use-after-free issue on kprobe\n  registration (git-fixes).\n- commit 3121e4a\n\n- Update\n  patches.suse/0001-s390-cio-fix-race-condition-during-online-processing.patch\n  (bsc#1219485 bsc#1219451 git-fixes CVE-2024-27009 bsc#1223699).\n- Update\n  patches.suse/Bluetooth-btnxpuart-Fix-btnxpuart_close.patch\n  (git-fixes CVE-2024-26959 bsc#1223667).\n- Update\n  patches.suse/USB-usb-storage-Prevent-divide-by-0-error-in-isd200_.patch\n  (git-fixes CVE-2024-27059 bsc#1223738).\n- Update\n  patches.suse/backlight-hx8357-Fix-potential-NULL-pointer-derefere.patch\n  (git-fixes CVE-2024-27071 bsc#1223734).\n- Update patches.suse/clk-Fix-clk_core_get-NULL-dereference.patch\n  (git-fixes CVE-2024-27038 bsc#1223816).\n- Update\n  patches.suse/clk-hisilicon-hi3559a-Fix-an-erroneous-devm_kfree.patch\n  (git-fixes CVE-2024-27039 bsc#1223821).\n- Update\n  patches.suse/clk-qcom-gcc-ipq6018-fix-terminating-of-frequency-ta.patch\n  (git-fixes CVE-2024-26970 bsc#1223644).\n- Update\n  patches.suse/clk-qcom-gcc-ipq8074-fix-terminating-of-frequency-ta.patch\n  (git-fixes CVE-2024-26969 bsc#1223645).\n- Update\n  patches.suse/clk-qcom-gcc-ipq9574-fix-terminating-of-frequency-ta.patch\n  (git-fixes CVE-2024-26968 bsc#1223642).\n- Update\n  patches.suse/clk-qcom-mmcc-apq8084-fix-terminating-of-frequency-t.patch\n  (git-fixes CVE-2024-26966 bsc#1223646).\n- Update\n  patches.suse/clk-qcom-mmcc-msm8974-fix-terminating-of-frequency-t.patch\n  (git-fixes CVE-2024-26965 bsc#1223648).\n- Update\n  patches.suse/clk-zynq-Prevent-null-pointer-dereference-caused-by-.patch\n  (git-fixes CVE-2024-27037 bsc#1223717).\n- Update\n  patches.suse/cpufreq-brcmstb-avs-cpufreq-add-check-for-cpufreq_cp.patch\n  (git-fixes CVE-2024-27051 bsc#1223769).\n- Update\n  patches.suse/crypto-qat-resolve-race-condition-during-AER-recover.patch\n  (git-fixes CVE-2024-26974 bsc#1223638).\n- Update\n  patches.suse/drm-amd-display-Add-replay-NULL-check-in-edp_set_rep.patch\n  (git-fixes CVE-2024-27040 bsc#1223711).\n- Update\n  patches.suse/drm-amd-display-Fix-a-potential-buffer-overflow-in-d.patch\n  (git-fixes CVE-2024-27045 bsc#1223826).\n- Update\n  patches.suse/drm-amd-display-Fix-potential-NULL-pointer-dereferen.patch\n  (git-fixes CVE-2024-27044 bsc#1223723).\n- Update\n  patches.suse/drm-amd-display-fix-NULL-checks-for-adev-dm.dc-in-am.patch\n  (git-fixes CVE-2024-27041 bsc#1223714).\n- Update\n  patches.suse/drm-amdgpu-Fix-potential-out-of-bounds-access-in-amd.patch\n  (git-fixes CVE-2024-27042 bsc#1223823).\n- Update\n  patches.suse/drm-vmwgfx-Fix-possible-null-pointer-derefence-with-.patch\n  (git-fixes CVE-2024-26979 bsc#1223628).\n- Update\n  patches.suse/md-Fix-missing-release-of-active_io-for-flush-8556.patch\n  (jsc#PED-7542 CVE-2024-27023 bsc#1223776).\n- Update\n  patches.suse/media-dvb-frontends-avoid-stack-overflow-warnings-wi.patch\n  (git-fixes CVE-2024-27075 bsc#1223842).\n- Update patches.suse/media-edia-dvbdev-fix-a-use-after-free.patch\n  (git-fixes CVE-2024-27043 bsc#1223824).\n- Update\n  patches.suse/media-go7007-fix-a-memleak-in-go7007_load_encoder.patch\n  (git-fixes CVE-2024-27074 bsc#1223844).\n- Update\n  patches.suse/media-imx-csc-scaler-fix-v4l2_ctrl_handler-memory-le.patch\n  (git-fixes CVE-2024-27076 bsc#1223779).\n- Update\n  patches.suse/media-ttpci-fix-two-memleaks-in-budget_av_attach.patch\n  (git-fixes CVE-2024-27073 bsc#1223843).\n- Update\n  patches.suse/media-usbtv-Remove-useless-locks-in-usbtv_video_free.patch\n  (git-fixes CVE-2024-27072 bsc#1223837).\n- Update\n  patches.suse/media-v4l2-mem2mem-fix-a-memleak-in-v4l2_m2m_registe.patch\n  (git-fixes CVE-2024-27077 bsc#1223780).\n- Update\n  patches.suse/media-v4l2-tpg-fix-some-memleaks-in-tpg_alloc.patch\n  (git-fixes CVE-2024-27078 bsc#1223781).\n- Update\n  patches.suse/net-phy-fix-phy_get_internal_delay-accessing-an-empt.patch\n  (git-fixes CVE-2024-27047 bsc#1223828).\n- Update\n  patches.suse/nilfs2-fix-failure-to-detect-DAT-corruption-in-btree.patch\n  (git-fixes CVE-2024-26956 bsc#1223663).\n- Update\n  patches.suse/nilfs2-prevent-kernel-bug-at-submit_bh_wbc.patch\n  (git-fixes CVE-2024-26955 bsc#1223657).\n- Update patches.suse/pci_iounmap-Fix-MMIO-mapping-leak.patch\n  (git-fixes CVE-2024-26977 bsc#1223631).\n- Update\n  patches.suse/powercap-intel_rapl-Fix-a-NULL-pointer-dereference.patch\n  (git-fixes CVE-2024-26975 bsc#1223632).\n- Update\n  patches.suse/s390-Once-the-discipline-is-associated-with-the-device-de.patch\n  (bsc#1141539 git-fixes CVE-2024-27054 bsc#1223819).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-command-flush-on-cable-pull.patch\n  (bsc#1221816 CVE-2024-26931 bsc#1223627).\n- Update patches.suse/scsi-qla2xxx-Fix-double-free-of-fcport.patch\n  (bsc#1221816 CVE-2024-26929 bsc#1223715).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-double-free-of-the-ha-vp_map-pointe.patch\n  (bsc#1221816 CVE-2024-26930 bsc#1223626).\n- Update\n  patches.suse/thermal-drivers-mediatek-lvts_thermal-Fix-a-memory-l.patch\n  (git-fixes CVE-2024-27068 bsc#1223808).\n- Update\n  patches.suse/thunderbolt-Fix-NULL-pointer-dereference-in-tb_port_.patch\n  (git-fixes CVE-2024-27060 bsc#1223725).\n- Update patches.suse/usb-ulpi-Fix-debugfs-directory-leak.patch\n  (git-fixes CVE-2024-26919 bsc#1223847).\n- Update\n  patches.suse/wifi-brcm80211-handle-pmk_op-allocation-failure.patch\n  (git-fixes CVE-2024-27048 bsc#1223760).\n- Update\n  patches.suse/wifi-rtl8xxxu-add-cancel_work_sync-for-c2hcmd_work.patch\n  (git-fixes CVE-2024-27052 bsc#1223829).\n- Update\n  patches.suse/wifi-wilc1000-do-not-realloc-workqueue-everytime-an-.patch\n  (git-fixes CVE-2024-27391 bsc#1223709).\n- Update\n  patches.suse/wifi-wilc1000-fix-RCU-usage-in-connect-path.patch\n  (git-fixes CVE-2024-27053 bsc#1223737).\n- commit 9296e40\n\n- Update\n  patches.suse/drm-tegra-dsi-Add-missing-check-for-of_find_device_b.patch\n  (git-fixes CVE-2023-52650 bsc#1223770).\n- Update\n  patches.suse/drm-vkms-Avoid-reading-beyond-LUT-array.patch\n  (git-fixes CVE-2023-52649 bsc#1223768).\n- Update\n  patches.suse/drm-vmwgfx-Unmap-the-surface-before-resetting-it-on-.patch\n  (git-fixes CVE-2023-52648 bsc#1223765).\n- Update\n  patches.suse/media-nxp-imx8-isi-Check-whether-crossbar-pad-is-non.patch\n  (git-fixes CVE-2023-52647 bsc#1223764).\n- commit f67398e\n\n- Update\n  patches.suse/powerpc-pseries-Fix-potential-memleak-in-papr_get_at.patch\n  (bsc#1215199 CVE-2022-48669 bsc#1223756).\n- commit e9a7939\n\n- ring-buffer: use READ_ONCE() to read cpu_buffer-\u0026gt;commit_page\n  in concurrent environment (git-fixes).\n- commit 8f1aa4c\n\n- Delete\n  patches.suse/iommufd-iova_bitmap-Move-symbols-to-IOMMUFD-namespace.\n  (bsc#1222654)\n- commit dc5c22e\n\n- fuse: don't unhash root (bsc#1223946).\n- fuse: fix root lookup with nonzero generation (bsc#1223945).\n- virtio: treat alloc_dax() -EOPNOTSUPP failure as non-fatal\n  (bsc#1223944).\n- commit 5171d01\n\n- tun: limit printing rate when illegal packet received by tun\n  dev (bsc#1223745 CVE-2024-27013).\n- net/mlx5e: Prevent deadlock while disabling aRFS (bsc#1223735\n  CVE-2024-27014).\n- commit d039d3b\n\n- drm/amd/display: Add a dc_state NULL check in dc_state_release (CVE-2024-26948 bsc#1223664)\n- commit adac21d\n\n- slimbus: qcom-ngd-ctrl: Add timeout for wait operation\n  (git-fixes).\n- iio:imu: adis16475: Fix sync mode setting (git-fixes).\n- iio: accel: mxc4005: Interrupt handling fixes (git-fixes).\n- iio: pressure: Fixes BME280 SPI driver data (git-fixes).\n- usb: typec: tcpm: Check for port partner validity before\n  consuming it (git-fixes).\n- usb: typec: tcpm: unregister existing source caps before\n  re-registration (git-fixes).\n- usb: typec: tcpm: clear pd_event queue in PORT_RESET\n  (git-fixes).\n- usb: ohci: Prevent missed ohci interrupts (git-fixes).\n- usb: gadget: f_fs: Fix a race condition when processing setup\n  packets (git-fixes).\n- USB: core: Fix access violation during port device removal\n  (git-fixes).\n- usb: gadget: uvc: use correct buffer size when parsing configfs\n  lists (git-fixes).\n- usb: gadget: composite: fix OS descriptors w_value logic\n  (git-fixes).\n- usb: gadget: f_fs: Fix race between aio_cancel() and AIO\n  request complete (git-fixes).\n- clk: sunxi-ng: h6: Reparent CPUX during PLL CPUX rate change\n  (git-fixes).\n- commit 8d8f752\n\n- Move upstreamed USB fix into sorted section\n- commit 21751fe\n\n- ASoC: da7219-aad: fix usage of device_get_named_child_node()\n  (git-fixes).\n- ASoC: rt715-sdca: volume step modification (git-fixes).\n- ASoC: rt715: add vendor clear control register (git-fixes).\n- ASoC: cs35l41: Update DSP1RX5/6 Sources for DSP config\n  (git-fixes).\n- ASoC: cs35l56: Fix unintended bus access while resetting amp\n  (git-fixes).\n- ASoC: rt722-sdca: add headset microphone vrefo setting\n  (git-fixes).\n- ASoC: rt722-sdca: modify channel number to support 4 channels\n  (git-fixes).\n- ASoC: rt5645: Fix the electric noise due to the CBJ contacts\n  floating (git-fixes).\n- ASoC: acp: Support microphone from device Acer 315-24p\n  (git-fixes).\n- ASoC: Intel: bytcr_rt5640: Apply Asus T100TA quirk to Asus\n  T100TAM too (git-fixes).\n- commit 59787a2\n\n- ALSA: hda/realtek: Fix build error without CONFIG_PM\n  (stable-fixes).\n- ALSA: hda: cs35l56: Exit cache-only after\n  cs35l56_wait_for_firmware_boot() (stable-fixes).\n- ALSA: hda/realtek - Set GPIO3 to default at S4 state for\n  Thinkpad with ALC1318 (stable-fixes).\n- ALSA: hda: intel-dsp-config: harden I2C/I2S codec detection\n  (stable-fixes).\n- ALSA: hda/realtek: Fix mute led of HP Laptop 15-da3001TU\n  (stable-fixes).\n- commit 11f233b\n\n- ASoC: meson: axg-tdm-interface: manage formatters in trigger\n  (git-fixes).\n- ASoC: meson: axg-card: make links nonatomic (git-fixes).\n- ASoC: meson: cards: select SND_DYNAMIC_MINORS (git-fixes).\n- ASoC: codecs: wsa881x: set clk_stop_mode1 flag (git-fixes).\n- ASoC: ti: davinci-mcasp: Fix race condition during probe\n  (git-fixes).\n- ASoC: Intel: avs: Set name of control as in topology\n  (git-fixes).\n- regmap: Add regmap_read_bypassed() (git-fixes).\n- ASoC: SOF: Intel: add default firmware library path for LNL\n  (git-fixes).\n- ASoC: tegra: Fix DSPK 16-bit playback (git-fixes).\n- ALSA: hda: intel-sdw-acpi: fix usage of\n  device_get_named_child_node() (git-fixes).\n- drm/panel: ili9341: Use predefined error codes (git-fixes).\n- drm/panel: ili9341: Respect deferred probe (git-fixes).\n- drm/vmwgfx: Fix invalid reads in fence signaled events\n  (git-fixes).\n- drm/vmwgfx: Fix Legacy Display Unit (git-fixes).\n- drm/amdgpu: fix doorbell regression (git-fixes).\n- drm/amdgpu: once more fix the call oder in amdgpu_ttm_move()\n  v2 (git-fixes).\n- spi: fix null pointer dereference within spi_sync (git-fixes).\n- spi: hisi-kunpeng: Delete the dump interface of data registers\n  in debugfs (git-fixes).\n- commit de68d11\n\n- wifi: iwlwifi: mvm: ensure offloading TID queue exists\n  (CVE-2024-27056 bsc#1223822).\n- commit 8f83255\n\n- dpll: fix dpll_pin_on_pin_register() for multiple parent pins\n  (CVE-2024-27027 bsc#1223787).\n- commit ce9b326\n\n- dpll: fix dpll_xa_ref_*_del() for multiple registrations\n  (CVE-2024-27027 bsc#1223787).\n- commit f5ff522\n\n- s390/qeth: Fix kernel panic after setting hsuid (git-fixes\n  bsc#1223874).\n- commit eae1390\n\n- s390/mm: Fix storage key clearing for guest huge pages\n  (git-fixes bsc#1223872).\n- commit 329e03c\n\n- s390/mm: Fix clearing storage keys for huge pages (git-fixes\n  bsc#1223871).\n- commit a7e3ff2\n\n- s390/vdso: Add CFI for RA register to asm macro vdso_func\n  (git-fixes bsc#1223870).\n- commit 2641ba1\n\n- s390/cio: Ensure the copied buf is NUL terminated (git-fixes\n  bsc#1223869).\n- commit dcf45a9\n\n- KVM: x86/mmu: x86: Don't overflow lpage_info when checking\n  attributes (bsc#1223695, CVE-2024-26991).\n- commit da41325\n\n- mm: swap: fix race between free_swap_and_cache() and swapoff()\n  (CVE-2024-26960 bsc#1223655).\n- swap: comments get_swap_device() with usage rule (CVE-2024-26960\n  bsc#1223655).\n- commit 9df3192\n\n- NTB: fix possible name leak in ntb_register_device()\n  (CVE-2023-52652 bsc#1223686).\n- commit a6fcfa7\n\n- Refresh patches.suse/powerpc-pseries-iommu-LPAR-panics-when-rebooted-with.patch.\n- commit ca33aea\n\n- powerpc/pseries: make max polling consistent for longer H_CALLs\n  (bsc#1215199).\n- commit bead2d2\n\n- fork: defer linking file vma until vma is fully initialized\n  (bsc#1223774 CVE-2024-27022).\n- commit 126ee1a\n\nPackage less was updated:\n\n- Fix CVE-2024-32487, mishandling of \\n character in paths when  LESSOPEN is set leads to OS command execution\n  (CVE-2024-32487, bsc#1222849)\n  * CVE-2024-32487.patch\n\nPackage expat was updated:\n\n- Security fix (bsc#1229932, CVE-2024-45492): detect integer  overflow in function nextScaffoldPart\n  * Added expat-CVE-2024-45492.patch\n- Security fix (bsc#1229931, CVE-2024-45491): detect integer\n  overflow in dtdCopy\n  * Added expat-CVE-2024-45491.patch\n- Security fix (bsc#1229930, CVE-2024-45490): reject negative\n  len for XML_ParseBuffer\n  * Added expat-CVE-2024-45490.patch\n\n- Security fix (boo#1221289, CVE-2024-28757): XML Entity Expansion\n  attack when there is isolated use of external parsers.\n  * Added expat-CVE-2024-28757.patch\n  * Added expat-fix-minicheck.patch\n\nPackage gcc13 was updated:\n\n- Update to GCC 13.3 release\n- Update to gcc-13 branch head, b7a2697733d19a093cbdd0e200, git8761\n- Removed gcc13-pr111731.patch now included upstream\n\n- Add gcc13-amdgcn-remove-fiji.patch removing Fiji support from\n  the GCN offload compiler as that is requiring Code Object version 3\n  which is no longer supported by llvm18.\n\n- Add gcc13-pr101523.patch to avoid combine spending too much\n  compile-time and memory doing nothing on s390x.  [boo#1188441]\n\n- Make requirement to lld version specific to avoid requiring the\n  meta-package.\n\n- Add gcc13-pr111731.patch to fix unwinding for JIT code.\n  [bsc#1221239]\n\n- Revert libgccjit dependency change.  [boo#1220724]\n\n- Fix libgccjit-devel dependency, a newer shared library is OK.\n- Fix libgccjit dependency, the corresponding compiler isn't required.\n\n- Use %patch -P N instead of %patchN.\n\nPackage gnutls was updated:\n\n- Security fix: [bsc#1221747, CVE-2024-28835]  * gnutls: certtool crash when verifying a certificate chain\n  * Add gnutls-CVE-2024-28835.patch\n\n- Security fix: [bsc#1221746, CVE-2024-28834]\n  * gnutls: side-channel in the deterministic ECDSA\n  * Add gnutls-CVE-2024-28834.patch\n\n- jitterentropy: Release the memory of the entropy collector when\n  using jitterentropy with phtreads as there is also a\n  pre-intitization done in the main thread. [bsc#1221242]\n  * Add gnutls-FIPS-jitterentropy-deinit-threads.patch\n\nPackage nghttp2 was updated:\n\n- security update- added patches\n  fix CVE-2024-28182 [bsc#1221399], HTTP/2 CONTINUATION frames can be utilized for DoS attacks\n  + nghttp2-CVE-2024-28182-1.patch\n  fix CVE-2024-28182 [bsc#1221399], HTTP/2 CONTINUATION frames can be utilized for DoS attacks\n  + nghttp2-CVE-2024-28182-2.patch\n\nPackage python311:base was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n- Add CVE-2023-52425-libexpat-2.6.0-backport.patch to fix tests with\n  patched libexpat below 2.6.0 that doesn't update the version number,\n  just in SLE.\n- Add CVE-2024-4032-private-IP-addrs.patch to fix bsc#1226448\n  (CVE-2024-4032) rearranging definition of private v global IP\n  addresses.\n- Add CVE-2024-0397-memrace_ssl.SSLContext_cert_store.patch\n  fixing bsc#1226447 (CVE-2024-0397) by removing memory race\n  condition in ssl.SSLContext certificate store methods.\n- Add CVE-2024-6923-email-hdr-inject.patch to prevent email\n  header injection due to unquoted newlines (bsc#1228780,\n  CVE-2024-6923).\n- Stop using %%defattr, it seems to be breaking proper executable\n  attributes on /usr/bin/ scripts (bsc#1227378).\n- Remove included patches:\n  - libexpat260.patch\n  - support-expat-CVE-2022-25236-patched.patch\n  - CVE-2023-52425-remove-reparse_deferral-tests.patch\n\n- Because of bsc#1189495 we have to revert use of %autopatch.\n\nPackage libxml2 was updated:\n\n- Security fix (CVE-2024-34459, bsc#1224282) buffer over-read in  xmlHTMLPrintFileContext in xmllint.c\n  * Added libxml2-CVE-2024-34459.patch\n\nPackage openssh was updated:\n\n- Add patch from upstream to fix proxy multiplexing mode:  * 0001-upstream-fix-proxy-multiplexing-mode_-broken-when-keystroke.patch\n- Add patch from upstream to restore correctly sigprocmask\n  * 0001-upstream-correctly-restore-sigprocmask-around-ppoll.patch\n- Add patch from upstream to fix a logic error in\n  ObscureKeystrokeTiming that rendered this feature ineffective,\n  allowing a passive observer to detect which network packets\n  contained real keystrokes (bsc#1227318, CVE-2024-39894):\n  * 0001-upstream-when-sending-ObscureKeystrokeTiming-chaff-packets_.patch\n\n- Add patch to fix a race condition in a signal handler by removing\n  the async-signal-unsafe code (CVE-2024-6387, bsc#1226642):\n  * fix-CVE-2024-6387.patch\n\nPackage perl-Bootloader was updated:\n\n- 0001-bootloader_entry-script-can-have-an-optional-force-d.patch  bootloader_entry script can have an optional 'force-default' argument (bsc#1215064)\n\nPackage libxml2:python was updated:\n\n- Security fix (CVE-2024-34459, bsc#1224282) buffer over-read in  xmlHTMLPrintFileContext in xmllint.c\n  * Added libxml2-CVE-2024-34459.patch\n\nPackage python-requests was updated:\n\n- Update to 2.32.2  * To provide a more stable migration for custom HTTPAdapters impacted by the CVE changes in 2.32.0,\n    we've renamed _get_connection to a new public API, get_connection_with_tls_context. Existing\n    custom HTTPAdapters will need to migrate their code to use this new API. get_connection is\n    considered deprecated in all versions of Requests\u0026gt;=2.32.0.\n\n- Update to 2.32.1\n  * Fixed an issue where setting verify=False on the first request from a Session\n    will cause subsequent requests to the same origin to also ignore cert verification,\n    regardless of the value of verify. (bsc#1224788, CVE-2024-35195)\n  * verify=True now reuses a global SSLContext which should improve request time\n    variance between first and subsequent requests.\n  * Requests now supports optional use of character detection (chardet or charset_normalizer)\n    when repackaged or vendored. This enables pip and other projects to minimize their\n    vendoring surface area.\n  * Requests has officially added support for CPython 3.12 and dropped support for CPython 3.7.\n  * Starting in Requests 2.33.0, Requests will migrate to a PEP 517 build system using hatchling.\n\nPackage python-urllib3 was updated:\n\nPackage python311 was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n- Add CVE-2023-52425-libexpat-2.6.0-backport.patch to fix tests with\n  patched libexpat below 2.6.0 that doesn't update the version number,\n  just in SLE.\n- Add CVE-2024-4032-private-IP-addrs.patch to fix bsc#1226448\n  (CVE-2024-4032) rearranging definition of private v global IP\n  addresses.\n- Add CVE-2024-0397-memrace_ssl.SSLContext_cert_store.patch\n  fixing bsc#1226447 (CVE-2024-0397) by removing memory race\n  condition in ssl.SSLContext certificate store methods.\n- Add CVE-2024-6923-email-hdr-inject.patch to prevent email\n  header injection due to unquoted newlines (bsc#1228780,\n  CVE-2024-6923).\n- Stop using %%defattr, it seems to be breaking proper executable\n  attributes on /usr/bin/ scripts (bsc#1227378).\n- Remove included patches:\n  - libexpat260.patch\n  - support-expat-CVE-2022-25236-patched.patch\n  - CVE-2023-52425-remove-reparse_deferral-tests.patch\n\n- Because of bsc#1189495 we have to revert use of %autopatch.\n\nPackage selinux-policy was updated:\n\n- Update to version 20230523+git25.ad22dd7f:  * Backport wtmpdb label change to have the same wtmpdb label\n    as in SL Micro 6.1 (bsc#1229132)\n  * Add auth_rw_wtmpdb_login_records to domains using auth_manage_login_records\n  * Add auth_rw_wtmpdb_login_records to modules\n  * Allow xdm_t to read-write to wtmpdb (bsc#1225984)\n  * Introduce types for wtmpdb and rw interface\n  * Introduce wtmp_file_type attribute\n  * Revert \u0026quot;Add policy for wtmpdb (bsc#1210717)\u0026quot;\n\n- Update to version 20230523+git18.f44daf8a:\n  * Provide type for sysstat lock files (bsc#1228247)\n\n- Update to version 20230523+git16.0849f54c:\n  * allow firewalld access to /dev/random and write HW acceleration logs\n    (bsc#1215405, bsc#1227930)\n\nPackage suse-build-key was updated:\n\n- extended 2048 bit SUSE SLE 12, 15 GA-SP5 key until 2028. (bsc#1229339)  - gpg-pubkey-39db7c82-5f68629b.asc\n  + gpg-pubkey-39db7c82-66c5d91a.asc\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "SL-Micro-release-6.0-24.15",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bash-5.2.15-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bash-sh-5.2.15-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ca-certificates-mozilla-2.68-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cockpit-bridge-309-6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cockpit-kdump-309-6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cockpit-selinux-309-6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cockpit-system-309-6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cockpit-ws-309-6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.6.0-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dracut-059+suse.571.g32b61281-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dracut-transactional-update-4.8.1-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.76.2-5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.38-7.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-base-2.38-7.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-6.4.0-18.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "less-633-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcap-ng0-0.8.3-4.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.6.0-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libexpat1-2.5.0-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-13.3.0+git8781-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.76.2-5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.76.2-5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.76.2-5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgnutls30-3.8.3-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.76.2-5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgomp1-13.3.0+git8781-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libnghttp2-14-1.52.0-5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_11-1_0-3.11.8-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libselinux1-3.5-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsemanage-conf-3.5-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsemanage2-3.5-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-13.3.0+git8781-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtukit4-4.8.1-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-2-2.11.6-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-tools-2.11.6-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-9.6p1-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-clients-9.6p1-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-common-9.6p1-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-server-9.6p1-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-Bootloader-1.6-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-selinux-3.5-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-3.11.8-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-base-3.11.8-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-libxml2-2.11.6-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-requests-2.32.2-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-urllib3-2.1.0-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "selinux-policy-20230523+git25.ad22dd7f-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "selinux-policy-targeted-20230523+git25.ad22dd7f-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "selinux-tools-3.5-3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-build-key-12.0-4.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "transactional-update-4.8.1-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "transactional-update-zypp-config-4.8.1-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "tukit-4.8.1-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "tukitd-4.8.1-1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.68-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-needs-restarting-1.14.68-2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-0-byos-v20240912-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sle-micro-6-0-byos-v20240912-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2021-47432",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlib/generic-radix-tree.c: Don't overflow in peek()\n\nWhen we started spreading new inode numbers throughout most of the 64\nbit inode space, that triggered some corner case bugs, in particular\nsome integer overflows related to the radix tree code. Oops.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-25236",
      "Description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-48669",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries: Fix potential memleak in papr_get_attr()\n\n`buf` is allocated in papr_get_attr(), and krealloc() of `buf`\ncould fail. We need to free the original `buf` in the case of failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: lgdt3306a: Add a check against null-pointer-def\n\nThe driver should check whether the client provides the platform_data.\n\nThe following log reveals it:\n\n[   29.610324] BUG: KASAN: null-ptr-deref in kmemdup+0x30/0x40\n[   29.610730] Read of size 40 at addr 0000000000000000 by task bash/414\n[   29.612820] Call Trace:\n[   29.613030]  \u003cTASK\u003e\n[   29.613201]  dump_stack_lvl+0x56/0x6f\n[   29.613496]  ? kmemdup+0x30/0x40\n[   29.613754]  print_report.cold+0x494/0x6b7\n[   29.614082]  ? kmemdup+0x30/0x40\n[   29.614340]  kasan_report+0x8a/0x190\n[   29.614628]  ? kmemdup+0x30/0x40\n[   29.614888]  kasan_check_range+0x14d/0x1d0\n[   29.615213]  memcpy+0x20/0x60\n[   29.615454]  kmemdup+0x30/0x40\n[   29.615700]  lgdt3306a_probe+0x52/0x310\n[   29.616339]  i2c_device_probe+0x951/0xa90",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-0160",
      "Description": "A deadlock flaw was found in the Linux kernel's BPF subsystem. This flaw allows a local user to potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-47210",
      "Description": "Improper input validation for some Intel(R) PROSet/Wireless WiFi software for linux before version 23.20 may allow an unauthenticated user to potentially enable denial of service via adjacent access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-47233",
      "Description": "The brcm80211 component in the Linux kernel through 6.5.10 has a brcmf_cfg80211_detach use-after-free in the device unplugging (disconnect the USB by hotplug) code. For physically proximate attackers with local access, this \"could be exploited in a real world scenario.\" This is related to brcmf_cfg80211_escan_timeout_worker in drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-51780",
      "Description": "An issue was discovered in the Linux kernel before 6.6.8. do_vcc_ioctl in net/atm/ioctl.c has a use-after-free because of a vcc_recvmsg race condition.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52425",
      "Description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52434",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential OOBs in smb2_parse_contexts()\n\nValidate offsets and lengths before dereferencing create contexts in\nsmb2_parse_contexts().\n\nThis fixes following oops when accessing invalid create contexts from\nserver:\n\n  BUG: unable to handle page fault for address: ffff8881178d8cc3\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 4a01067 P4D 4a01067 PUD 0\n  Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 3 PID: 1736 Comm: mount.cifs Not tainted 6.7.0-rc4 #1\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\n  rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\n  RIP: 0010:smb2_parse_contexts+0xa0/0x3a0 [cifs]\n  Code: f8 10 75 13 48 b8 93 ad 25 50 9c b4 11 e7 49 39 06 0f 84 d2 00\n  00 00 8b 45 00 85 c0 74 61 41 29 c5 48 01 c5 41 83 fd 0f 76 55 \u003c0f\u003e b7\n  7d 04 0f b7 45 06 4c 8d 74 3d 00 66 83 f8 04 75 bc ba 04 00\n  RSP: 0018:ffffc900007939e0 EFLAGS: 00010216\n  RAX: ffffc90000793c78 RBX: ffff8880180cc000 RCX: ffffc90000793c90\n  RDX: ffffc90000793cc0 RSI: ffff8880178d8cc0 RDI: ffff8880180cc000\n  RBP: ffff8881178d8cbf R08: ffffc90000793c22 R09: 0000000000000000\n  R10: ffff8880180cc000 R11: 0000000000000024 R12: 0000000000000000\n  R13: 0000000000000020 R14: 0000000000000000 R15: ffffc90000793c22\n  FS: 00007f873753cbc0(0000) GS:ffff88806bc00000(0000)\n  knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: ffff8881178d8cc3 CR3: 00000000181ca000 CR4: 0000000000750ef0\n  PKRU: 55555554\n  Call Trace:\n   \u003cTASK\u003e\n   ? __die+0x23/0x70\n   ? page_fault_oops+0x181/0x480\n   ? search_module_extables+0x19/0x60\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? exc_page_fault+0x1b6/0x1c0\n   ? asm_exc_page_fault+0x26/0x30\n   ? smb2_parse_contexts+0xa0/0x3a0 [cifs]\n   SMB2_open+0x38d/0x5f0 [cifs]\n   ? smb2_is_path_accessible+0x138/0x260 [cifs]\n   smb2_is_path_accessible+0x138/0x260 [cifs]\n   cifs_is_path_remote+0x8d/0x230 [cifs]\n   cifs_mount+0x7e/0x350 [cifs]\n   cifs_smb3_do_mount+0x128/0x780 [cifs]\n   smb3_get_tree+0xd9/0x290 [cifs]\n   vfs_get_tree+0x2c/0x100\n   ? capable+0x37/0x70\n   path_mount+0x2d7/0xb80\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? _raw_spin_unlock_irqrestore+0x44/0x60\n   __x64_sys_mount+0x11a/0x150\n   do_syscall_64+0x47/0xf0\n   entry_SYSCALL_64_after_hwframe+0x6f/0x77\n  RIP: 0033:0x7f8737657b1e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52435",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: prevent mss overflow in skb_segment()\n\nOnce again syzbot is able to crash the kernel in skb_segment() [1]\n\nGSO_BY_FRAGS is a forbidden value, but unfortunately the following\ncomputation in skb_segment() can reach it quite easily :\n\n\tmss = mss * partial_segs;\n\n65535 = 3 * 5 * 17 * 257, so many initial values of mss can lead to\na bad final result.\n\nMake sure to limit segmentation so that the new mss value is smaller\nthan GSO_BY_FRAGS.\n\n[1]\n\ngeneral protection fault, probably for non-canonical address 0xdffffc000000000e: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000070-0x0000000000000077]\nCPU: 1 PID: 5079 Comm: syz-executor993 Not tainted 6.7.0-rc4-syzkaller-00141-g1ae4cd3cbdd0 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/10/2023\nRIP: 0010:skb_segment+0x181d/0x3f30 net/core/skbuff.c:4551\nCode: 83 e3 02 e9 fb ed ff ff e8 90 68 1c f9 48 8b 84 24 f8 00 00 00 48 8d 78 70 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c0f\u003e b6 04 02 84 c0 74 08 3c 03 0f 8e 8a 21 00 00 48 8b 84 24 f8 00\nRSP: 0018:ffffc900043473d0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000010046 RCX: ffffffff886b1597\nRDX: 000000000000000e RSI: ffffffff886b2520 RDI: 0000000000000070\nRBP: ffffc90004347578 R08: 0000000000000005 R09: 000000000000ffff\nR10: 000000000000ffff R11: 0000000000000002 R12: ffff888063202ac0\nR13: 0000000000010000 R14: 000000000000ffff R15: 0000000000000046\nFS: 0000555556e7e380(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020010000 CR3: 0000000027ee2000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\nudp6_ufo_fragment+0xa0e/0xd00 net/ipv6/udp_offload.c:109\nipv6_gso_segment+0x534/0x17e0 net/ipv6/ip6_offload.c:120\nskb_mac_gso_segment+0x290/0x610 net/core/gso.c:53\n__skb_gso_segment+0x339/0x710 net/core/gso.c:124\nskb_gso_segment include/net/gso.h:83 [inline]\nvalidate_xmit_skb+0x36c/0xeb0 net/core/dev.c:3626\n__dev_queue_xmit+0x6f3/0x3d60 net/core/dev.c:4338\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\npacket_xmit+0x257/0x380 net/packet/af_packet.c:276\npacket_snd net/packet/af_packet.c:3087 [inline]\npacket_sendmsg+0x24c6/0x5220 net/packet/af_packet.c:3119\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg+0xd5/0x180 net/socket.c:745\n__sys_sendto+0x255/0x340 net/socket.c:2190\n__do_sys_sendto net/socket.c:2202 [inline]\n__se_sys_sendto net/socket.c:2198 [inline]\n__x64_sys_sendto+0xe0/0x1b0 net/socket.c:2198\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0x40/0x110 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\nRIP: 0033:0x7f8692032aa9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 d1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff8d685418 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f8692032aa9\nRDX: 0000000000010048 RSI: 00000000200000c0 RDI: 0000000000000003\nRBP: 00000000000f4240 R08: 0000000020000540 R09: 0000000000000014\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fff8d685480\nR13: 0000000000000001 R14: 00007fff8d685480 R15: 0000000000000003\n\u003c/TASK\u003e\nModules linked in:\n---[ end trace 0000000000000000 ]---\nRIP: 0010:skb_segment+0x181d/0x3f30 net/core/skbuff.c:4551\nCode: 83 e3 02 e9 fb ed ff ff e8 90 68 1c f9 48 8b 84 24 f8 00 00 00 48 8d 78 70 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c0f\u003e b6 04 02 84 c0 74 08 3c 03 0f 8e 8a 21 00 00 48 8b 84 24 f8 00\nRSP: 0018:ffffc900043473d0 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000010046 RCX: ffffffff886b1597\nRDX: 000000000000000e RSI: ffffffff886b2520 RDI: 0000000000000070\nRBP: ffffc90004347578 R0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52463",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefivarfs: force RO when remounting if SetVariable is not supported\n\nIf SetVariable at runtime is not supported by the firmware we never assign\na callback for that function. At the same time mount the efivarfs as\nRO so no one can call that.  However, we never check the permission flags\nwhen someone remounts the filesystem as RW. As a result this leads to a\ncrash looking like this:\n\n$ mount -o remount,rw /sys/firmware/efi/efivars\n$ efi-updatevar -f PK.auth PK\n\n[  303.279166] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[  303.280482] Mem abort info:\n[  303.280854]   ESR = 0x0000000086000004\n[  303.281338]   EC = 0x21: IABT (current EL), IL = 32 bits\n[  303.282016]   SET = 0, FnV = 0\n[  303.282414]   EA = 0, S1PTW = 0\n[  303.282821]   FSC = 0x04: level 0 translation fault\n[  303.283771] user pgtable: 4k pages, 48-bit VAs, pgdp=000000004258c000\n[  303.284913] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n[  303.286076] Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP\n[  303.286936] Modules linked in: qrtr tpm_tis tpm_tis_core crct10dif_ce arm_smccc_trng rng_core drm fuse ip_tables x_tables ipv6\n[  303.288586] CPU: 1 PID: 755 Comm: efi-updatevar Not tainted 6.3.0-rc1-00108-gc7d0c4695c68 #1\n[  303.289748] Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.04-00627-g88336918701d 04/01/2023\n[  303.291150] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  303.292123] pc : 0x0\n[  303.292443] lr : efivar_set_variable_locked+0x74/0xec\n[  303.293156] sp : ffff800008673c10\n[  303.293619] x29: ffff800008673c10 x28: ffff0000037e8000 x27: 0000000000000000\n[  303.294592] x26: 0000000000000800 x25: ffff000002467400 x24: 0000000000000027\n[  303.295572] x23: ffffd49ea9832000 x22: ffff0000020c9800 x21: ffff000002467000\n[  303.296566] x20: 0000000000000001 x19: 00000000000007fc x18: 0000000000000000\n[  303.297531] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaac807ab54\n[  303.298495] x14: ed37489f673633c0 x13: 71c45c606de13f80 x12: 47464259e219acf4\n[  303.299453] x11: ffff000002af7b01 x10: 0000000000000003 x9 : 0000000000000002\n[  303.300431] x8 : 0000000000000010 x7 : ffffd49ea8973230 x6 : 0000000000a85201\n[  303.301412] x5 : 0000000000000000 x4 : ffff0000020c9800 x3 : 00000000000007fc\n[  303.302370] x2 : 0000000000000027 x1 : ffff000002467400 x0 : ffff000002467000\n[  303.303341] Call trace:\n[  303.303679]  0x0\n[  303.303938]  efivar_entry_set_get_size+0x98/0x16c\n[  303.304585]  efivarfs_file_write+0xd0/0x1a4\n[  303.305148]  vfs_write+0xc4/0x2e4\n[  303.305601]  ksys_write+0x70/0x104\n[  303.306073]  __arm64_sys_write+0x1c/0x28\n[  303.306622]  invoke_syscall+0x48/0x114\n[  303.307156]  el0_svc_common.constprop.0+0x44/0xec\n[  303.307803]  do_el0_svc+0x38/0x98\n[  303.308268]  el0_svc+0x2c/0x84\n[  303.308702]  el0t_64_sync_handler+0xf4/0x120\n[  303.309293]  el0t_64_sync+0x190/0x194\n[  303.309794] Code: ???????? ???????? ???????? ???????? (????????)\n[  303.310612] ---[ end trace 0000000000000000 ]---\n\nFix this by adding a .reconfigure() function to the fs operations which\nwe can use to check the requested flags and deny anything that's not RO\nif the firmware doesn't implement SetVariable at runtime.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52472",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: rsa - add a check for allocation failure\n\nStatic checkers insist that the mpi_alloc() allocation can fail so add\na check to prevent a NULL dereference.  Small allocations like this\ncan't actually fail in current kernels, but adding a check is very\nsimple and makes the static checkers happy.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52483",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmctp: perform route lookups under a RCU read-side lock\n\nOur current route lookups (mctp_route_lookup and mctp_route_lookup_null)\ntraverse the net's route list without the RCU read lock held. This means\nthe route lookup is subject to preemption, resulting in an potential\ngrace period expiry, and so an eventual kfree() while we still have the\nroute pointer.\n\nAdd the proper read-side critical section locks around the route\nlookups, preventing premption and a possible parallel kfree.\n\nThe remaining net-\u003emctp.routes accesses are already under a\nrcu_read_lock, or protected by the RTNL for updates.\n\nBased on an analysis from Sili Luo \u003crootlab@huawei.com\u003e, where\nintroducing a delay in the route lookup could cause a UAF on\nsimultaneous sendmsg() and route deletion.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nreiserfs: Avoid touching renamed directory if parent does not change\n\nThe VFS will not be locking moved directory if its parent does not\nchange. Change reiserfs rename code to avoid touching renamed directory\nif its parent does not change as without locking that can corrupt the\nfilesystem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52616",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: lib/mpi - Fix unexpected pointer access in mpi_ec_init\n\nWhen the mpi_ec_ctx structure is initialized, some fields are not\ncleared, causing a crash when referencing the field when the\nstructure was released. Initially, this issue was ignored because\nmemory for mpi_ec_ctx is allocated with the __GFP_ZERO flag.\nFor example, this error will be triggered when calculating the\nZa value for SM2 separately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52618",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock/rnbd-srv: Check for unlikely string overflow\n\nSince \"dev_search_path\" can technically be as large as PATH_MAX,\nthere was a risk of truncation when copying it and a second string\ninto \"full_path\" since it was also PATH_MAX sized. The W=1 builds were\nreporting this warning:\n\ndrivers/block/rnbd/rnbd-srv.c: In function 'process_msg_open.isra':\ndrivers/block/rnbd/rnbd-srv.c:616:51: warning: '%s' directive output may be truncated writing up to 254 bytes into a region of size between 0 and 4095 [-Wformat-truncation=]\n  616 |                 snprintf(full_path, PATH_MAX, \"%s/%s\",\n      |                                                   ^~\nIn function 'rnbd_srv_get_full_path',\n    inlined from 'process_msg_open.isra' at drivers/block/rnbd/rnbd-srv.c:721:14: drivers/block/rnbd/rnbd-srv.c:616:17: note: 'snprintf' output between 2 and 4351 bytes into a destination of size 4096\n  616 |                 snprintf(full_path, PATH_MAX, \"%s/%s\",\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  617 |                          dev_search_path, dev_name);\n      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo fix this, unconditionally check for truncation (as was already done\nfor the case where \"%SESSNAME%\" was present).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52622",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid online resizing failures due to oversized flex bg\n\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\n\n     mkfs.ext4 -F -G 67108864 $dev -b 4096 100M\n     mount $dev $dir\n     resize2fs $dev 16G\n\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n \u003cTASK\u003e\n __kmalloc_large_node+0xa2/0x200\n __kmalloc+0x16e/0x290\n ext4_resize_fs+0x481/0xd80\n __ext4_ioctl+0x1616/0x1d90\n ext4_ioctl+0x12/0x20\n __x64_sys_ioctl+0xf0/0x150\n do_syscall_64+0x3b/0x90\n==================================================================\n\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n\n (PAGE_SIZE \u003c\u003c MAX_ORDER) / sizeof(struct ext4_new_group_data) ~ 21845\n\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52641",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/ntfs3: Add NULL ptr dereference checking at the end of attr_allocate_frame()\n\nIt is preferable to exit through the out: label because\ninternal debugging functions are located there.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52647",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: nxp: imx8-isi: Check whether crossbar pad is non-NULL before access\n\nWhen translating source to sink streams in the crossbar subdev, the\ndriver tries to locate the remote subdev connected to the sink pad. The\nremote pad may be NULL, if userspace tries to enable a stream that ends\nat an unconnected crossbar sink. When that occurs, the driver\ndereferences the NULL pad, leading to a crash.\n\nPrevent the crash by checking if the pad is NULL before using it, and\nreturn an error if it is.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52648",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Unmap the surface before resetting it on a plane state\n\nSwitch to a new plane state requires unreferencing of all held surfaces.\nIn the work required for mob cursors the mapped surfaces started being\ncached but the variable indicating whether the surface is currently\nmapped was not being reset. This leads to crashes as the duplicated\nstate, incorrectly, indicates the that surface is mapped even when\nno surface is present. That's because after unreferencing the surface\nit's perfectly possible for the plane to be backed by a bo instead of a\nsurface.\n\nReset the surface mapped flag when unreferencing the plane state surface\nto fix null derefs in cleanup. Fixes crashes in KDE KWin 6.0 on Wayland:\n\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 4 PID: 2533 Comm: kwin_wayland Not tainted 6.7.0-rc3-vmwgfx #2\nHardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020\nRIP: 0010:vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx]\nCode: 00 00 00 75 3a 48 83 c4 10 5b 5d c3 cc cc cc cc 48 8b b3 a8 00 00 00 48 c7 c7 99 90 43 c0 e8 93 c5 db ca 48 8b 83 a8 00 00 00 \u003c48\u003e 8b 78 28 e8 e3 f\u003e\nRSP: 0018:ffffb6b98216fa80 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff969d84cdcb00 RCX: 0000000000000027\nRDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff969e75f21600\nRBP: ffff969d4143dc50 R08: 0000000000000000 R09: ffffb6b98216f920\nR10: 0000000000000003 R11: ffff969e7feb3b10 R12: 0000000000000000\nR13: 0000000000000000 R14: 000000000000027b R15: ffff969d49c9fc00\nFS:  00007f1e8f1b4180(0000) GS:ffff969e75f00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000028 CR3: 0000000104006004 CR4: 00000000003706f0\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x23/0x70\n ? page_fault_oops+0x171/0x4e0\n ? exc_page_fault+0x7f/0x180\n ? asm_exc_page_fault+0x26/0x30\n ? vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx]\n drm_atomic_helper_cleanup_planes+0x9b/0xc0\n commit_tail+0xd1/0x130\n drm_atomic_helper_commit+0x11a/0x140\n drm_atomic_commit+0x97/0xd0\n ? __pfx___drm_printfn_info+0x10/0x10\n drm_atomic_helper_update_plane+0xf5/0x160\n drm_mode_cursor_universal+0x10e/0x270\n drm_mode_cursor_common+0x102/0x230\n ? __pfx_drm_mode_cursor2_ioctl+0x10/0x10\n drm_ioctl_kernel+0xb2/0x110\n drm_ioctl+0x26d/0x4b0\n ? __pfx_drm_mode_cursor2_ioctl+0x10/0x10\n ? __pfx_drm_ioctl+0x10/0x10\n vmw_generic_ioctl+0xa4/0x110 [vmwgfx]\n __x64_sys_ioctl+0x94/0xd0\n do_syscall_64+0x61/0xe0\n ? __x64_sys_ioctl+0xaf/0xd0\n ? syscall_exit_to_user_mode+0x2b/0x40\n ? do_syscall_64+0x70/0xe0\n ? __x64_sys_ioctl+0xaf/0xd0\n ? syscall_exit_to_user_mode+0x2b/0x40\n ? do_syscall_64+0x70/0xe0\n ? exc_page_fault+0x7f/0x180\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\nRIP: 0033:0x7f1e93f279ed\nCode: 04 25 28 00 00 00 48 89 45 c8 31 c0 48 8d 45 10 c7 45 b0 10 00 00 00 48 89 45 b8 48 8d 45 d0 48 89 45 c0 b8 10 00 00 00 0f 05 \u003c89\u003e c2 3d 00 f0 ff f\u003e\nRSP: 002b:00007ffca0faf600 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 000055db876ed2c0 RCX: 00007f1e93f279ed\nRDX: 00007ffca0faf6c0 RSI: 00000000c02464bb RDI: 0000000000000015\nRBP: 00007ffca0faf650 R08: 000055db87184010 R09: 0000000000000007\nR10: 000055db886471a0 R11: 0000000000000246 R12: 00007ffca0faf6c0\nR13: 00000000c02464bb R14: 0000000000000015 R15: 00007ffca0faf790\n \u003c/TASK\u003e\nModules linked in: snd_seq_dummy snd_hrtimer nf_conntrack_netbios_ns nf_conntrack_broadcast nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_ine\u003e\nCR2: 0000000000000028\n---[ end trace 0000000000000000 ]---\nRIP: 0010:vmw_du_cursor_plane_cleanup_fb+0x124/0x140 [vmwgfx]\nCode: 00 00 00 75 3a 48 83 c4 10 5b 5d c3 cc cc cc cc 48 8b b3 a8 00 00 00 48 c7 c7 99 90 43 c0 e8 93 c5 db ca 48 8b 83 a8 00 00 00 \u003c48\u003e 8b 78 28 e8 e3 f\u003e\nRSP: 0018:ffffb6b98216fa80 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff969d84cdcb00 RCX: 0000000000000027\nRDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff969e75f21600\nRBP: ffff969d4143\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52649",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vkms: Avoid reading beyond LUT array\n\nWhen the floor LUT index (drm_fixp2int(lut_index) is the last\nindex of the array the ceil LUT index will point to an entry\nbeyond the array. Make sure we guard against it and use the\nvalue of the floor LUT index.\n\nv3:\n - Drop bits from commit description that didn't contribute\n   anything of value",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/tegra: dsi: Add missing check for of_find_device_by_node\n\nAdd check for the return value of of_find_device_by_node() and return\nthe error if it fails in order to avoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52652",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNTB: fix possible name leak in ntb_register_device()\n\nIf device_register() fails in ntb_register_device(), the device name\nallocated by dev_set_name() should be freed. As per the comment in\ndevice_register(), callers should use put_device() to give up the\nreference in the error path. So fix this by calling put_device() in the\nerror path so that the name can be freed in kobject_cleanup().\n\nAs a result of this, put_device() in the error path of\nntb_register_device() is removed and the actual error is returned.\n\n[mani: reworded commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52653",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: fix a memleak in gss_import_v2_context\n\nThe ctx-\u003emech_used.data allocated by kmemdup is not freed in neither\ngss_import_v2_context nor it only caller gss_krb5_import_sec_context,\nwhich frees ctx on error.\n\nThus, this patch reform the last call of gss_import_v2_context to the\ngss_krb5_import_ctx_v2, preventing the memleak while keepping the return\nformation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52655",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: aqc111: check packet for fixup for true limit\n\nIf a device sends a packet that is inbetween 0\nand sizeof(u64) the value passed to skb_trim()\nas length will wrap around ending up as some very\nlarge value.\n\nThe driver will then proceed to parse the header\nlocated at that position, which will either oops or\nprocess some random value.\n\nThe fix is to check against sizeof(u64) rather than\n0, which the driver currently does. The issue exists\nsince the introduction of the driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52656",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: drop any code related to SCM_RIGHTS\n\nThis is dead code after we dropped support for passing io_uring fds\nover SCM_RIGHTS, get rid of it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52657",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"drm/amd/pm: resolve reboot exception for si oland\"\n\nThis reverts commit e490d60a2f76bff636c68ce4fe34c1b6c34bbd86.\n\nThis causes hangs on SI when DC is enabled and errors on driver\nreboot and power off cycles.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52658",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"net/mlx5: Block entering switchdev mode with ns inconsistency\"\n\nThis reverts commit 662404b24a4c4d839839ed25e3097571f5938b9b.\nThe revert is required due to the suspicion it is not good for anything\nand cause crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52659",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Ensure input to pfn_to_kaddr() is treated as a 64-bit type\n\nOn 64-bit platforms, the pfn_to_kaddr() macro requires that the input\nvalue is 64 bits in order to ensure that valid address bits don't get\nlost when shifting that input by PAGE_SHIFT to calculate the physical\naddress to provide a virtual address for.\n\nOne such example is in pvalidate_pages() (used by SEV-SNP guests), where\nthe GFN in the struct used for page-state change requests is a 40-bit\nbit-field, so attempts to pass this GFN field directly into\npfn_to_kaddr() ends up causing guest crashes when dealing with addresses\nabove the 1TB range due to the above.\n\nFix this issue with SEV-SNP guests, as well as any similar cases that\nmight cause issues in current/future code, by using an inline function,\ninstead of a macro, so that the input is implicitly cast to the\nexpected 64-bit input type prior to performing the shift operation.\n\nWhile it might be argued that the issue is on the caller side, other\narchs/macros have taken similar approaches to deal with instances like\nthis, such as ARM explicitly casting the input to phys_addr_t:\n\n  e48866647b48 (\"ARM: 8396/1: use phys_addr_t in pfn_to_kaddr()\")\n\nA C inline function is even better though.\n\n[ mingo: Refined the changelog some more \u0026 added __always_inline. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52660",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rkisp1: Fix IRQ handling due to shared interrupts\n\nThe driver requests the interrupts as IRQF_SHARED, so the interrupt\nhandlers can be called at any time. If such a call happens while the ISP\nis powered down, the SoC will hang as the driver tries to access the\nISP registers.\n\nThis can be reproduced even without the platform sharing the IRQ line:\nEnable CONFIG_DEBUG_SHIRQ and unload the driver, and the board will\nhang.\n\nFix this by adding a new field, 'irqs_enabled', which is used to bail\nout from the interrupt handler when the ISP is not operational.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52661",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/tegra: rgb: Fix missing clk_put() in the error handling paths of tegra_dc_rgb_probe()\n\nIf clk_get_sys(..., \"pll_d2_out0\") fails, the clk_get_sys() call must be\nundone.\n\nAdd the missing clk_put and a new 'put_pll_d_out0' label in the error\nhandling path, and use it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52662",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: fix a memleak in vmw_gmrid_man_get_node\n\nWhen ida_alloc_max fails, resources allocated before should be freed,\nincluding *res allocated by kmalloc and ttm_resource_init.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52663",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: amd: Fix memory leak in amd_sof_acp_probe()\n\nDriver uses kasprintf() to initialize fw_{code,data}_bin members of\nstruct acp_dev_data, but kfree() is never called to deallocate the\nmemory, which results in a memory leak.\n\nFix the issue by switching to devm_kasprintf(). Additionally, ensure the\nallocation was successful by checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52664",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atlantic: eliminate double free in error handling logic\n\nDriver has a logic leak in ring data allocation/free,\nwhere aq_ring_free could be called multiple times on same ring,\nif system is under stress and got memory allocation error.\n\nRing pointer was used as an indicator of failure, but this is\nnot correct since only ring data is allocated/deallocated.\nRing itself is an array member.\n\nChanging ring allocation functions to return error code directly.\nThis simplifies error handling and eliminates aq_ring_free\non higher layer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52667",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: fix a potential double-free in fs_any_create_groups\n\nWhen kcalloc() for ft-\u003eg succeeds but kvzalloc() for in fails,\nfs_any_create_groups() will free ft-\u003eg. However, its caller\nfs_any_create_table() will free ft-\u003eg again through calling\nmlx5e_destroy_flow_table(), which will lead to a double-free.\nFix this by setting ft-\u003eg to NULL in fs_any_create_groups().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52669",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: s390/aes - Fix buffer overread in CTR mode\n\nWhen processing the last block, the s390 ctr code will always read\na whole block, even if there isn't a whole block of data left.  Fix\nthis by using the actual length left and copy it into a buffer first\nfor processing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52670",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrpmsg: virtio: Free driver_override when rpmsg_remove()\n\nFree driver_override when rpmsg_remove(), otherwise\nthe following memory leak will occur:\n\nunreferenced object 0xffff0000d55d7080 (size 128):\n  comm \"kworker/u8:2\", pid 56, jiffies 4294893188 (age 214.272s)\n  hex dump (first 32 bytes):\n    72 70 6d 73 67 5f 6e 73 00 00 00 00 00 00 00 00  rpmsg_ns........\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c000000009c94c9c1\u003e] __kmem_cache_alloc_node+0x1f8/0x320\n    [\u003c000000002300d89b\u003e] __kmalloc_node_track_caller+0x44/0x70\n    [\u003c00000000228a60c3\u003e] kstrndup+0x4c/0x90\n    [\u003c0000000077158695\u003e] driver_set_override+0xd0/0x164\n    [\u003c000000003e9c4ea5\u003e] rpmsg_register_device_override+0x98/0x170\n    [\u003c000000001c0c89a8\u003e] rpmsg_ns_register_device+0x24/0x30\n    [\u003c000000008bbf8fa2\u003e] rpmsg_probe+0x2e0/0x3ec\n    [\u003c00000000e65a68df\u003e] virtio_dev_probe+0x1c0/0x280\n    [\u003c00000000443331cc\u003e] really_probe+0xbc/0x2dc\n    [\u003c00000000391064b1\u003e] __driver_probe_device+0x78/0xe0\n    [\u003c00000000a41c9a5b\u003e] driver_probe_device+0xd8/0x160\n    [\u003c000000009c3bd5df\u003e] __device_attach_driver+0xb8/0x140\n    [\u003c0000000043cd7614\u003e] bus_for_each_drv+0x7c/0xd4\n    [\u003c000000003b929a36\u003e] __device_attach+0x9c/0x19c\n    [\u003c00000000a94e0ba8\u003e] device_initial_probe+0x14/0x20\n    [\u003c000000003c999637\u003e] bus_probe_device+0xa0/0xac",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52671",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix hang/underflow when transitioning to ODM4:1\n\n[Why]\nUnder some circumstances, disabling an OPTC and attempting to reclaim\nits OPP(s) for a different OPTC could cause a hang/underflow due to OPPs\nnot being properly disconnected from the disabled OPTC.\n\n[How]\nEnsure that all OPPs are unassigned from an OPTC when it gets disabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52672",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npipe: wakeup wr_wait after setting max_usage\n\nCommit c73be61cede5 (\"pipe: Add general notification queue support\") a\nregression was introduced that would lock up resized pipes under certain\nconditions. See the reproducer in [1].\n\nThe commit resizing the pipe ring size was moved to a different\nfunction, doing that moved the wakeup for pipe-\u003ewr_wait before actually\nraising pipe-\u003emax_usage. If a pipe was full before the resize occured it\nwould result in the wakeup never actually triggering pipe_write.\n\nSet @max_usage and @nr_accounted before waking writers if this isn't a\nwatch queue.\n\n[Christian Brauner \u003cbrauner@kernel.org\u003e: rewrite to account for watch queues]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52673",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix a debugfs null pointer error\n\n[WHY \u0026 HOW]\nCheck whether get_subvp_en() callback exists before calling it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52674",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: scarlett2: Add clamp() in scarlett2_mixer_ctl_put()\n\nEnsure the value passed to scarlett2_mixer_ctl_put() is between 0 and\nSCARLETT2_MIXER_MAX_VALUE so we don't attempt to access outside\nscarlett2_mixer_values[].",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52675",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/imc-pmu: Add a null pointer check in update_events_in_group()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52676",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Guard stack limits against 32bit overflow\n\nThis patch promotes the arithmetic around checking stack bounds to be\ndone in the 64-bit domain, instead of the current 32bit. The arithmetic\nimplies adding together a 64-bit register with a int offset. The\nregister was checked to be below 1\u003c\u003c29 when it was variable, but not\nwhen it was fixed. The offset either comes from an instruction (in which\ncase it is 16 bit), from another register (in which case the caller\nchecked it to be below 1\u003c\u003c29 [1]), or from the size of an argument to a\nkfunc (in which case it can be a u32 [2]). Between the register being\ninconsistently checked to be below 1\u003c\u003c29, and the offset being up to an\nu32, it appears that we were open to overflowing the `int`s which were\ncurrently used for arithmetic.\n\n[1] https://github.com/torvalds/linux/blob/815fb87b753055df2d9e50f6cd80eb10235fe3e9/kernel/bpf/verifier.c#L7494-L7498\n[2] https://github.com/torvalds/linux/blob/815fb87b753055df2d9e50f6cd80eb10235fe3e9/kernel/bpf/verifier.c#L11904",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52678",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Confirm list is non-empty before utilizing list_first_entry in kfd_topology.c\n\nBefore using list_first_entry, make sure to check that list is not\nempty, if list is empty return -ENODATA.\n\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/../amdkfd/kfd_topology.c:1347 kfd_create_indirect_link_prop() warn: can 'gpu_link' even be NULL?\ndrivers/gpu/drm/amd/amdgpu/../amdkfd/kfd_topology.c:1428 kfd_add_peer_prop() warn: can 'iolink1' even be NULL?\ndrivers/gpu/drm/amd/amdgpu/../amdkfd/kfd_topology.c:1433 kfd_add_peer_prop() warn: can 'iolink2' even be NULL?",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52679",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: Fix double free in of_parse_phandle_with_args_map\n\nIn of_parse_phandle_with_args_map() the inner loop that\niterates through the map entries calls of_node_put(new)\nto free the reference acquired by the previous iteration\nof the inner loop. This assumes that the value of \"new\" is\nNULL on the first iteration of the inner loop.\n\nMake sure that this is true in all iterations of the outer\nloop by setting \"new\" to NULL after its value is assigned to \"cur\".\n\nExtend the unittest to detect the double free and add an additional\ntest case that actually triggers this path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52680",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: scarlett2: Add missing error checks to *_ctl_get()\n\nThe *_ctl_get() functions which call scarlett2_update_*() were not\nchecking the return value. Fix to check the return value and pass to\nthe caller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52683",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: LPIT: Avoid u32 multiplication overflow\n\nIn lpit_update_residency() there is a possibility of overflow\nin multiplication, if tsc_khz is large enough (\u003e UINT_MAX/1000).\n\nChange multiplication to mul_u32_u32().\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52685",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52686",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check in opal_event_init()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52687",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: safexcel - Add error handling for dma_map_sg() calls\n\nMacro dma_map_sg() may return 0 on error. This patch enables\nchecks in case of the macro failure and ensures unmapping of\npreviously mapped buffers with dma_unmap_sg().\n\nFound by Linux Verification Center (linuxtesting.org) with static\nanalysis tool SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52690",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check to scom_debug_init_one()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.\nAdd a null pointer check, and release 'ent' to avoid memory leaks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52691",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: fix a double-free in si_dpm_init\n\nWhen the allocation of\nadev-\u003epm.dpm.dyn_state.vddc_dependency_on_dispclk.entries fails,\namdgpu_free_extended_power_table is called to free some fields of adev.\nHowever, when the control flow returns to si_dpm_sw_init, it goes to\nlabel dpm_failed and calls si_dpm_fini, which calls\namdgpu_free_extended_power_table again and free those fields again. Thus\na double-free is triggered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52692",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: scarlett2: Add missing error check to scarlett2_usb_set_config()\n\nscarlett2_usb_set_config() calls scarlett2_usb_get() but was not\nchecking the result. Return the error if it fails rather than\ncontinuing with an invalid value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52693",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: video: check for error while searching for backlight device parent\n\nIf acpi_get_parent() called in acpi_video_dev_register_backlight()\nfails, for example, because acpi_ut_acquire_mutex() fails inside\nacpi_get_parent), this can lead to incorrect (uninitialized)\nacpi_parent handle being passed to acpi_get_pci_dev() for detecting\nthe parent pci device.\n\nCheck acpi_get_parent() result and set parent device only in case of success.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52694",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/bridge: tpd12s015: Drop buggy __exit annotation for remove function\n\nWith tpd12s015_remove() marked with __exit this function is discarded\nwhen the driver is compiled as a built-in. The result is that when the\ndriver unbinds there is no cleanup done which results in resource\nleakage or worse.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52695",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check writeback connectors in create_validate_stream_for_sink\n\n[WHY \u0026 HOW]\nThis is to check connector type to avoid\nunhandled null pointer for writeback connectors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52696",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check in opal_powercap_init()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52697",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: sof_sdw_rt_sdca_jack_common: ctx-\u003eheadset_codec_dev = NULL\n\nsof_sdw_rt_sdca_jack_exit() are used by different codecs, and some of\nthem use the same dai name.\nFor example, rt712 and rt713 both use \"rt712-sdca-aif1\" and\nsof_sdw_rt_sdca_jack_exit().\nAs a result, sof_sdw_rt_sdca_jack_exit() will be called twice by\nmc_dailink_exit_loop(). Set ctx-\u003eheadset_codec_dev = NULL; after\nput_device(ctx-\u003eheadset_codec_dev); to avoid ctx-\u003eheadset_codec_dev\nbeing put twice.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52698",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncalipso: fix memory leak in netlbl_calipso_add_pass()\n\nIf IPv6 support is disabled at boot (ipv6.disable=1),\nthe calipso_init() -\u003e netlbl_calipso_ops_register() function isn't called,\nand the netlbl_calipso_ops_get() function always returns NULL.\nIn this case, the netlbl_calipso_add_pass() function allocates memory\nfor the doi_def variable but doesn't free it with the calipso_doi_free().\n\nBUG: memory leak\nunreferenced object 0xffff888011d68180 (size 64):\n  comm \"syz-executor.1\", pid 10746, jiffies 4295410986 (age 17.928s)\n  hex dump (first 32 bytes):\n    00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c...\u003e] kmalloc include/linux/slab.h:552 [inline]\n    [\u003c...\u003e] netlbl_calipso_add_pass net/netlabel/netlabel_calipso.c:76 [inline]\n    [\u003c...\u003e] netlbl_calipso_add+0x22e/0x4f0 net/netlabel/netlabel_calipso.c:111\n    [\u003c...\u003e] genl_family_rcv_msg_doit+0x22f/0x330 net/netlink/genetlink.c:739\n    [\u003c...\u003e] genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]\n    [\u003c...\u003e] genl_rcv_msg+0x341/0x5a0 net/netlink/genetlink.c:800\n    [\u003c...\u003e] netlink_rcv_skb+0x14d/0x440 net/netlink/af_netlink.c:2515\n    [\u003c...\u003e] genl_rcv+0x29/0x40 net/netlink/genetlink.c:811\n    [\u003c...\u003e] netlink_unicast_kernel net/netlink/af_netlink.c:1313 [inline]\n    [\u003c...\u003e] netlink_unicast+0x54b/0x800 net/netlink/af_netlink.c:1339\n    [\u003c...\u003e] netlink_sendmsg+0x90a/0xdf0 net/netlink/af_netlink.c:1934\n    [\u003c...\u003e] sock_sendmsg_nosec net/socket.c:651 [inline]\n    [\u003c...\u003e] sock_sendmsg+0x157/0x190 net/socket.c:671\n    [\u003c...\u003e] ____sys_sendmsg+0x712/0x870 net/socket.c:2342\n    [\u003c...\u003e] ___sys_sendmsg+0xf8/0x170 net/socket.c:2396\n    [\u003c...\u003e] __sys_sendmsg+0xea/0x1b0 net/socket.c:2429\n    [\u003c...\u003e] do_syscall_64+0x30/0x40 arch/x86/entry/common.c:46\n    [\u003c...\u003e] entry_SYSCALL_64_after_hwframe+0x61/0xc6\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller\n\n[PM: merged via the LSM tree at Jakub Kicinski request]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52699",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsysv: don't call sb_bread() with pointers_lock held\n\nsyzbot is reporting sleep in atomic context in SysV filesystem [1], for\nsb_bread() is called with rw_spinlock held.\n\nA \"write_lock(\u0026pointers_lock) =\u003e read_lock(\u0026pointers_lock) deadlock\" bug\nand a \"sb_bread() with write_lock(\u0026pointers_lock)\" bug were introduced by\n\"Replace BKL for chain locking with sysvfs-private rwlock\" in Linux 2.5.12.\n\nThen, \"[PATCH] err1-40: sysvfs locking fix\" in Linux 2.6.8 fixed the\nformer bug by moving pointers_lock lock to the callers, but instead\nintroduced a \"sb_bread() with read_lock(\u0026pointers_lock)\" bug (which made\nthis problem easier to hit).\n\nAl Viro suggested that why not to do like get_branch()/get_block()/\nfind_shared() in Minix filesystem does. And doing like that is almost a\nrevert of \"[PATCH] err1-40: sysvfs locking fix\" except that get_branch()\n from with find_shared() is called without write_lock(\u0026pointers_lock).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52735",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Don't let sock_map_{close,destroy,unhash} call itself\n\nsock_map proto callbacks should never call themselves by design. Protect\nagainst bugs like [1] and break out of the recursive loop to avoid a stack\noverflow in favor of a resource leak.\n\n[1] https://lore.kernel.org/all/00000000000073b14905ef2e7401@google.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52749",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: Fix null dereference on suspend\n\nA race condition exists where a synchronous (noqueue) transfer can be\nactive during a system suspend. This can cause a null pointer\ndereference exception to occur when the system resumes.\n\nExample order of events leading to the exception:\n1. spi_sync() calls __spi_transfer_message_noqueue() which sets\n   ctlr-\u003ecur_msg\n2. Spi transfer begins via spi_transfer_one_message()\n3. System is suspended interrupting the transfer context\n4. System is resumed\n6. spi_controller_resume() calls spi_start_queue() which resets cur_msg\n   to NULL\n7. Spi transfer context resumes and spi_finalize_current_message() is\n   called which dereferences cur_msg (which is now NULL)\n\nWait for synchronous transfers to complete before suspending by\nacquiring the bus mutex and setting/checking a suspend flag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52750",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: Restrict CPU_BIG_ENDIAN to GNU as or LLVM IAS 15.x or newer\n\nPrior to LLVM 15.0.0, LLVM's integrated assembler would incorrectly\nbyte-swap NOP when compiling for big-endian, and the resulting series of\nbytes happened to match the encoding of FNMADD S21, S30, S0, S0.\n\nThis went unnoticed until commit:\n\n  34f66c4c4d5518c1 (\"arm64: Use a positive cpucap for FP/SIMD\")\n\nPrior to that commit, the kernel would always enable the use of FPSIMD\nearly in boot when __cpu_setup() initialized CPACR_EL1, and so usage of\nFNMADD within the kernel was not detected, but could result in the\ncorruption of user or kernel FPSIMD state.\n\nAfter that commit, the instructions happen to trap during boot prior to\nFPSIMD being detected and enabled, e.g.\n\n| Unhandled 64-bit el1h sync exception on CPU0, ESR 0x000000001fe00000 -- ASIMD\n| CPU: 0 PID: 0 Comm: swapper Not tainted 6.6.0-rc3-00013-g34f66c4c4d55 #1\n| Hardware name: linux,dummy-virt (DT)\n| pstate: 400000c9 (nZcv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n| pc : __pi_strcmp+0x1c/0x150\n| lr : populate_properties+0xe4/0x254\n| sp : ffffd014173d3ad0\n| x29: ffffd014173d3af0 x28: fffffbfffddffcb8 x27: 0000000000000000\n| x26: 0000000000000058 x25: fffffbfffddfe054 x24: 0000000000000008\n| x23: fffffbfffddfe000 x22: fffffbfffddfe000 x21: fffffbfffddfe044\n| x20: ffffd014173d3b70 x19: 0000000000000001 x18: 0000000000000005\n| x17: 0000000000000010 x16: 0000000000000000 x15: 00000000413e7000\n| x14: 0000000000000000 x13: 0000000000001bcc x12: 0000000000000000\n| x11: 00000000d00dfeed x10: ffffd414193f2cd0 x9 : 0000000000000000\n| x8 : 0101010101010101 x7 : ffffffffffffffc0 x6 : 0000000000000000\n| x5 : 0000000000000000 x4 : 0101010101010101 x3 : 000000000000002a\n| x2 : 0000000000000001 x1 : ffffd014171f2988 x0 : fffffbfffddffcb8\n| Kernel panic - not syncing: Unhandled exception\n| CPU: 0 PID: 0 Comm: swapper Not tainted 6.6.0-rc3-00013-g34f66c4c4d55 #1\n| Hardware name: linux,dummy-virt (DT)\n| Call trace:\n|  dump_backtrace+0xec/0x108\n|  show_stack+0x18/0x2c\n|  dump_stack_lvl+0x50/0x68\n|  dump_stack+0x18/0x24\n|  panic+0x13c/0x340\n|  el1t_64_irq_handler+0x0/0x1c\n|  el1_abort+0x0/0x5c\n|  el1h_64_sync+0x64/0x68\n|  __pi_strcmp+0x1c/0x150\n|  unflatten_dt_nodes+0x1e8/0x2d8\n|  __unflatten_device_tree+0x5c/0x15c\n|  unflatten_device_tree+0x38/0x50\n|  setup_arch+0x164/0x1e0\n|  start_kernel+0x64/0x38c\n|  __primary_switched+0xbc/0xc4\n\nRestrict CONFIG_CPU_BIG_ENDIAN to a known good assembler, which is\neither GNU as or LLVM's IAS 15.0.0 and newer, which contains the linked\ncommit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52751",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix use-after-free in smb2_query_info_compound()\n\nThe following UAF was triggered when running fstests generic/072 with\nKASAN enabled against Windows Server 2022 and mount options\n'multichannel,max_channels=2,vers=3.1.1,mfsymlinks,noperm'\n\n  BUG: KASAN: slab-use-after-free in smb2_query_info_compound+0x423/0x6d0 [cifs]\n  Read of size 8 at addr ffff888014941048 by task xfs_io/27534\n\n  CPU: 0 PID: 27534 Comm: xfs_io Not tainted 6.6.0-rc7 #1\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\n  rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\n  Call Trace:\n   dump_stack_lvl+0x4a/0x80\n   print_report+0xcf/0x650\n   ? srso_alias_return_thunk+0x5/0x7f\n   ? srso_alias_return_thunk+0x5/0x7f\n   ? __phys_addr+0x46/0x90\n   kasan_report+0xda/0x110\n   ? smb2_query_info_compound+0x423/0x6d0 [cifs]\n   ? smb2_query_info_compound+0x423/0x6d0 [cifs]\n   smb2_query_info_compound+0x423/0x6d0 [cifs]\n   ? __pfx_smb2_query_info_compound+0x10/0x10 [cifs]\n   ? srso_alias_return_thunk+0x5/0x7f\n   ? __stack_depot_save+0x39/0x480\n   ? kasan_save_stack+0x33/0x60\n   ? kasan_set_track+0x25/0x30\n   ? ____kasan_slab_free+0x126/0x170\n   smb2_queryfs+0xc2/0x2c0 [cifs]\n   ? __pfx_smb2_queryfs+0x10/0x10 [cifs]\n   ? __pfx___lock_acquire+0x10/0x10\n   smb311_queryfs+0x210/0x220 [cifs]\n   ? __pfx_smb311_queryfs+0x10/0x10 [cifs]\n   ? srso_alias_return_thunk+0x5/0x7f\n   ? __lock_acquire+0x480/0x26c0\n   ? lock_release+0x1ed/0x640\n   ? srso_alias_return_thunk+0x5/0x7f\n   ? do_raw_spin_unlock+0x9b/0x100\n   cifs_statfs+0x18c/0x4b0 [cifs]\n   statfs_by_dentry+0x9b/0xf0\n   fd_statfs+0x4e/0xb0\n   __do_sys_fstatfs+0x7f/0xe0\n   ? __pfx___do_sys_fstatfs+0x10/0x10\n   ? srso_alias_return_thunk+0x5/0x7f\n   ? lockdep_hardirqs_on_prepare+0x136/0x200\n   ? srso_alias_return_thunk+0x5/0x7f\n   do_syscall_64+0x3f/0x90\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n\n  Allocated by task 27534:\n   kasan_save_stack+0x33/0x60\n   kasan_set_track+0x25/0x30\n   __kasan_kmalloc+0x8f/0xa0\n   open_cached_dir+0x71b/0x1240 [cifs]\n   smb2_query_info_compound+0x5c3/0x6d0 [cifs]\n   smb2_queryfs+0xc2/0x2c0 [cifs]\n   smb311_queryfs+0x210/0x220 [cifs]\n   cifs_statfs+0x18c/0x4b0 [cifs]\n   statfs_by_dentry+0x9b/0xf0\n   fd_statfs+0x4e/0xb0\n   __do_sys_fstatfs+0x7f/0xe0\n   do_syscall_64+0x3f/0x90\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n\n  Freed by task 27534:\n   kasan_save_stack+0x33/0x60\n   kasan_set_track+0x25/0x30\n   kasan_save_free_info+0x2b/0x50\n   ____kasan_slab_free+0x126/0x170\n   slab_free_freelist_hook+0xd0/0x1e0\n   __kmem_cache_free+0x9d/0x1b0\n   open_cached_dir+0xff5/0x1240 [cifs]\n   smb2_query_info_compound+0x5c3/0x6d0 [cifs]\n   smb2_queryfs+0xc2/0x2c0 [cifs]\n\nThis is a race between open_cached_dir() and cached_dir_lease_break()\nwhere the cache entry for the open directory handle receives a lease\nbreak while creating it.  And before returning from open_cached_dir(),\nwe put the last reference of the new @cfid because of\n!@cfid-\u003ehas_lease.\n\nBesides the UAF, while running xfstests a lot of missed lease breaks\nhave been noticed in tests that run several concurrent statfs(2) calls\non those cached fids\n\n  CIFS: VFS: \\\\w22-root1.gandalf.test No task to wake, unknown frame...\n  CIFS: VFS: \\\\w22-root1.gandalf.test Cmd: 18 Err: 0x0 Flags: 0x1...\n  CIFS: VFS: \\\\w22-root1.gandalf.test smb buf 00000000715bfe83 len 108\n  CIFS: VFS: Dump pending requests:\n  CIFS: VFS: \\\\w22-root1.gandalf.test No task to wake, unknown frame...\n  CIFS: VFS: \\\\w22-root1.gandalf.test Cmd: 18 Err: 0x0 Flags: 0x1...\n  CIFS: VFS: \\\\w22-root1.gandalf.test smb buf 000000005aa7316e len 108\n  ...\n\nTo fix both, in open_cached_dir() ensure that @cfid-\u003ehas_lease is set\nright before sending out compounded request so that any potential\nlease break will be get processed by demultiplex thread while we're\nstill caching @cfid.  And, if open failed for some reason, re-check\n@cfid-\u003ehas_lease to decide whether or not put lease reference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52753",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Avoid NULL dereference of timing generator\n\n[Why \u0026 How]\nCheck whether assigned timing generator is NULL or not before\naccessing its funcs to prevent NULL dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52754",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imon: fix access to invalid resource for the second interface\n\nimon driver probes two USB interfaces, and at the probe of the second\ninterface, the driver assumes blindly that the first interface got\nbound with the same imon driver.  It's usually true, but it's still\npossible that the first interface is bound with another driver via a\nmalformed descriptor.  Then it may lead to a memory corruption, as\nspotted by syzkaller; imon driver accesses the data from drvdata as\nstruct imon_context object although it's a completely different one\nthat was assigned by another driver.\n\nThis patch adds a sanity check -- whether the first interface is\nreally bound with the imon driver or not -- for avoiding the problem\nabove at the probe time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52757",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential deadlock when releasing mids\n\nAll release_mid() callers seem to hold a reference of @mid so there is\nno need to call kref_put(\u0026mid-\u003erefcount, __release_mid) under\n@server-\u003emid_lock spinlock.  If they don't, then an use-after-free bug\nwould have occurred anyways.\n\nBy getting rid of such spinlock also fixes a potential deadlock as\nshown below\n\nCPU 0                                CPU 1\n------------------------------------------------------------------\ncifs_demultiplex_thread()            cifs_debug_data_proc_show()\n release_mid()\n  spin_lock(\u0026server-\u003emid_lock);\n                                     spin_lock(\u0026cifs_tcp_ses_lock)\n\t\t\t\t      spin_lock(\u0026server-\u003emid_lock)\n  __release_mid()\n   smb2_find_smb_tcon()\n    spin_lock(\u0026cifs_tcp_ses_lock) *deadlock*",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52759",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52762",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-blk: fix implicit overflow on virtio_max_dma_size\n\nThe following codes have an implicit conversion from size_t to u32:\n(u32)max_size = (size_t)virtio_max_dma_size(vdev);\n\nThis may lead overflow, Ex (size_t)4G -\u003e (u32)0. Once\nvirtio_max_dma_size() has a larger size than U32_MAX, use U32_MAX\ninstead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52763",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: master: mipi-i3c-hci: Fix a kernel panic for accessing DAT_data.\n\nThe `i3c_master_bus_init` function may attach the I2C devices before the\nI3C bus initialization. In this flow, the DAT `alloc_entry`` will be used\nbefore the DAT `init`. Additionally, if the `i3c_master_bus_init` fails,\nthe DAT `cleanup` will execute before the device is detached, which will\nexecue DAT `free_entry` function. The above scenario can cause the driver\nto use DAT_data when it is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52764",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: gspca: cpia1: shift-out-of-bounds in set_flicker\n\nSyzkaller reported the following issue:\nUBSAN: shift-out-of-bounds in drivers/media/usb/gspca/cpia1.c:1031:27\nshift exponent 245 is too large for 32-bit type 'int'\n\nWhen the value of the variable \"sd-\u003eparams.exposure.gain\" exceeds the\nnumber of bits in an integer, a shift-out-of-bounds error is reported. It\nis triggered because the variable \"currentexp\" cannot be left-shifted by\nmore than the number of bits in an integer. In order to avoid invalid\nrange during left-shift, the conditional expression is added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52765",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: qcom-spmi-pmic: Fix revid implementation\n\nThe Qualcomm SPMI PMIC revid implementation is broken in multiple ways.\n\nFirst, it assumes that just because the sibling base device has been\nregistered that means that it is also bound to a driver, which may not\nbe the case (e.g. due to probe deferral or asynchronous probe). This\ncould trigger a NULL-pointer dereference when attempting to access the\ndriver data of the unbound device.\n\nSecond, it accesses driver data of a sibling device directly and without\nany locking, which means that the driver data may be freed while it is\nbeing accessed (e.g. on driver unbind).\n\nThird, it leaks a struct device reference to the sibling device which is\nlooked up using the spmi_device_from_of() every time a function (child)\ndevice is calling the revid function (e.g. on probe).\n\nFix this mess by reimplementing the revid lookup so that it is done only\nat probe of the PMIC device; the base device fetches the revid info from\nthe hardware, while any secondary SPMI device fetches the information\nfrom the base device and caches it so that it can be accessed safely\nfrom its children. If the base device has not been probed yet then probe\nof a secondary device is deferred.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52766",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: mipi-i3c-hci: Fix out of bounds access in hci_dma_irq_handler\n\nDo not loop over ring headers in hci_dma_irq_handler() that are not\nallocated and enabled in hci_dma_init(). Otherwise out of bounds access\nwill occur from rings-\u003eheaders[i] access when i \u003e= number of allocated\nring headers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52767",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix NULL deref on tls_sw_splice_eof() with empty record\n\nsyzkaller discovered that if tls_sw_splice_eof() is executed as part of\nsendfile() when the plaintext/ciphertext sk_msg are empty, the send path\ngets confused because the empty ciphertext buffer does not have enough\nspace for the encryption overhead. This causes tls_push_record() to go on\nthe `split = true` path (which is only supposed to be used when interacting\nwith an attached BPF program), and then get further confused and hit the\ntls_merge_open_record() path, which then assumes that there must be at\nleast one populated buffer element, leading to a NULL deref.\n\nIt is possible to have empty plaintext/ciphertext buffers if we previously\nbailed from tls_sw_sendmsg_locked() via the tls_trim_both_msgs() path.\ntls_sw_push_pending_record() already handles this case correctly; let's do\nthe same check in tls_sw_splice_eof().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52768",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: use vmm_table as array in wilc struct\n\nEnabling KASAN and running some iperf tests raises some memory issues with\nvmm_table:\n\nBUG: KASAN: slab-out-of-bounds in wilc_wlan_handle_txq+0x6ac/0xdb4\nWrite of size 4 at addr c3a61540 by task wlan0-tx/95\n\nKASAN detects that we are writing data beyond range allocated to vmm_table.\nThere is indeed a mismatch between the size passed to allocator in\nwilc_wlan_init, and the range of possible indexes used later: allocation\nsize is missing a multiplication by sizeof(u32)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52769",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix htt mlo-offset event locking\n\nThe ath12k active pdevs are protected by RCU but the htt mlo-offset\nevent handling code calling ath12k_mac_get_ar_by_pdev_id() was not\nmarked as a read-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52771",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/port: Fix delete_endpoint() vs parent unregistration race\n\nThe CXL subsystem, at cxl_mem -\u003eprobe() time, establishes a lineage of\nports (struct cxl_port objects) between an endpoint and the root of a\nCXL topology. Each port including the endpoint port is attached to the\ncxl_port driver.\n\nGiven that setup, it follows that when either any port in that lineage\ngoes through a cxl_port -\u003eremove() event, or the memdev goes through a\ncxl_mem -\u003eremove() event. The hierarchy below the removed port, or the\nentire hierarchy if the memdev is removed needs to come down.\n\nThe delete_endpoint() callback is careful to check whether it is being\ncalled to tear down the hierarchy, or if it is only being called to\nteardown the memdev because an ancestor port is going through\n-\u003eremove().\n\nThat care needs to take the device_lock() of the endpoint's parent.\nWhich requires 2 bugs to be fixed:\n\n1/ A reference on the parent is needed to prevent use-after-free\n   scenarios like this signature:\n\n    BUG: spinlock bad magic on CPU#0, kworker/u56:0/11\n    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS edk2-20230524-3.fc38 05/24/2023\n    Workqueue: cxl_port detach_memdev [cxl_core]\n    RIP: 0010:spin_bug+0x65/0xa0\n    Call Trace:\n      do_raw_spin_lock+0x69/0xa0\n     __mutex_lock+0x695/0xb80\n     delete_endpoint+0xad/0x150 [cxl_core]\n     devres_release_all+0xb8/0x110\n     device_unbind_cleanup+0xe/0x70\n     device_release_driver_internal+0x1d2/0x210\n     detach_memdev+0x15/0x20 [cxl_core]\n     process_one_work+0x1e3/0x4c0\n     worker_thread+0x1dd/0x3d0\n\n2/ In the case of RCH topologies, the parent device that needs to be\n   locked is not always @port-\u003edev as returned by cxl_mem_find_port(), use\n   endpoint-\u003edev.parent instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: fix use-after-free in unix_stream_read_actor()\n\nsyzbot reported the following crash [1]\n\nAfter releasing unix socket lock, u-\u003eoob_skb can be changed\nby another thread. We must temporarily increase skb refcount\nto make sure this other thread will not free the skb under us.\n\n[1]\n\nBUG: KASAN: slab-use-after-free in unix_stream_read_actor+0xa7/0xc0 net/unix/af_unix.c:2866\nRead of size 4 at addr ffff88801f3b9cc4 by task syz-executor107/5297\n\nCPU: 1 PID: 5297 Comm: syz-executor107 Not tainted 6.6.0-syzkaller-15910-gb8e3a87a627b #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/09/2023\nCall Trace:\n\u003cTASK\u003e\n__dump_stack lib/dump_stack.c:88 [inline]\ndump_stack_lvl+0xd9/0x1b0 lib/dump_stack.c:106\nprint_address_description mm/kasan/report.c:364 [inline]\nprint_report+0xc4/0x620 mm/kasan/report.c:475\nkasan_report+0xda/0x110 mm/kasan/report.c:588\nunix_stream_read_actor+0xa7/0xc0 net/unix/af_unix.c:2866\nunix_stream_recv_urg net/unix/af_unix.c:2587 [inline]\nunix_stream_read_generic+0x19a5/0x2480 net/unix/af_unix.c:2666\nunix_stream_recvmsg+0x189/0x1b0 net/unix/af_unix.c:2903\nsock_recvmsg_nosec net/socket.c:1044 [inline]\nsock_recvmsg+0xe2/0x170 net/socket.c:1066\n____sys_recvmsg+0x21f/0x5c0 net/socket.c:2803\n___sys_recvmsg+0x115/0x1a0 net/socket.c:2845\n__sys_recvmsg+0x114/0x1e0 net/socket.c:2875\ndo_syscall_x64 arch/x86/entry/common.c:51 [inline]\ndo_syscall_64+0x3f/0x110 arch/x86/entry/common.c:82\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\nRIP: 0033:0x7fc67492c559\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 51 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fc6748ab228 EFLAGS: 00000246 ORIG_RAX: 000000000000002f\nRAX: ffffffffffffffda RBX: 000000000000001c RCX: 00007fc67492c559\nRDX: 0000000040010083 RSI: 0000000020000140 RDI: 0000000000000004\nRBP: 00007fc6749b6348 R08: 00007fc6748ab6c0 R09: 00007fc6748ab6c0\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fc6749b6340\nR13: 00007fc6749b634c R14: 00007ffe9fac52a0 R15: 00007ffe9fac5388\n\u003c/TASK\u003e\n\nAllocated by task 5295:\nkasan_save_stack+0x33/0x50 mm/kasan/common.c:45\nkasan_set_track+0x25/0x30 mm/kasan/common.c:52\n__kasan_slab_alloc+0x81/0x90 mm/kasan/common.c:328\nkasan_slab_alloc include/linux/kasan.h:188 [inline]\nslab_post_alloc_hook mm/slab.h:763 [inline]\nslab_alloc_node mm/slub.c:3478 [inline]\nkmem_cache_alloc_node+0x180/0x3c0 mm/slub.c:3523\n__alloc_skb+0x287/0x330 net/core/skbuff.c:641\nalloc_skb include/linux/skbuff.h:1286 [inline]\nalloc_skb_with_frags+0xe4/0x710 net/core/skbuff.c:6331\nsock_alloc_send_pskb+0x7e4/0x970 net/core/sock.c:2780\nsock_alloc_send_skb include/net/sock.h:1884 [inline]\nqueue_oob net/unix/af_unix.c:2147 [inline]\nunix_stream_sendmsg+0xb5f/0x10a0 net/unix/af_unix.c:2301\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg+0xd5/0x180 net/socket.c:745\n____sys_sendmsg+0x6ac/0x940 net/socket.c:2584\n___sys_sendmsg+0x135/0x1d0 net/socket.c:2638\n__sys_sendmsg+0x117/0x1e0 net/socket.c:2667\ndo_syscall_x64 arch/x86/entry/common.c:51 [inline]\ndo_syscall_64+0x3f/0x110 arch/x86/entry/common.c:82\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nFreed by task 5295:\nkasan_save_stack+0x33/0x50 mm/kasan/common.c:45\nkasan_set_track+0x25/0x30 mm/kasan/common.c:52\nkasan_save_free_info+0x2b/0x40 mm/kasan/generic.c:522\n____kasan_slab_free mm/kasan/common.c:236 [inline]\n____kasan_slab_free+0x15b/0x1b0 mm/kasan/common.c:200\nkasan_slab_free include/linux/kasan.h:164 [inline]\nslab_free_hook mm/slub.c:1800 [inline]\nslab_free_freelist_hook+0x114/0x1e0 mm/slub.c:1826\nslab_free mm/slub.c:3809 [inline]\nkmem_cache_free+0xf8/0x340 mm/slub.c:3831\nkfree_skbmem+0xef/0x1b0 net/core/skbuff.c:1015\n__kfree_skb net/core/skbuff.c:1073 [inline]\nconsume_skb net/core/skbuff.c:1288 [inline]\nconsume_skb+0xdf/0x170 net/core/skbuff.c:1282\nqueue_oob net/unix/af_unix.c:2178 [inline]\nu\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: fix a NULL pointer dereference in amdgpu_dm_i2c_xfer()\n\nWhen ddc_service_construct() is called, it explicitly checks both the\nlink type and whether there is something on the link which will\ndictate whether the pin is marked as hw_supported.\n\nIf the pin isn't set or the link is not set (such as from\nunloading/reloading amdgpu in an IGT test) then fail the\namdgpu_dm_i2c_xfer() call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52774",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: protect device queue against concurrent access\n\nIn dasd_profile_start() the amount of requests on the device queue are\ncounted. The access to the device queue is unprotected against\nconcurrent access. With a lot of parallel I/O, especially with alias\ndevices enabled, the device queue can change while dasd_profile_start()\nis accessing the queue. In the worst case this leads to a kernel panic\ndue to incorrect pointer accesses.\n\nFix this by taking the device lock before accessing the queue and\ncounting the requests. Additionally the check for a valid profile data\npointer can be done earlier to avoid unnecessary locking in a hot path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52775",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: avoid data corruption caused by decline\n\nWe found a data corruption issue during testing of SMC-R on Redis\napplications.\n\nThe benchmark has a low probability of reporting a strange error as\nshown below.\n\n\"Error: Protocol error, got \"\\xe2\" as reply type byte\"\n\nFinally, we found that the retrieved error data was as follows:\n\n0xE2 0xD4 0xC3 0xD9 0x04 0x00 0x2C 0x20 0xA6 0x56 0x00 0x16 0x3E 0x0C\n0xCB 0x04 0x02 0x01 0x00 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00\n0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE2\n\nIt is quite obvious that this is a SMC DECLINE message, which means that\nthe applications received SMC protocol message.\nWe found that this was caused by the following situations:\n\nclient                  server\n        |  clc proposal\n        -------------\u003e\n        |  clc accept\n        \u003c-------------\n        |  clc confirm\n        -------------\u003e\nwait llc confirm\n\t\t\tsend llc confirm\n        |failed llc confirm\n        |   x------\n(after 2s)timeout\n                        wait llc confirm rsp\n\nwait decline\n\n(after 1s) timeout\n                        (after 2s) timeout\n        |   decline\n        --------------\u003e\n        |   decline\n        \u003c--------------\n\nAs a result, a decline message was sent in the implementation, and this\nmessage was read from TCP by the already-fallback connection.\n\nThis patch double the client timeout as 2x of the server value,\nWith this simple change, the Decline messages should never cross or\ncollide (during Confirm link timeout).\n\nThis issue requires an immediate solution, since the protocol updates\ninvolve a more long-term solution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52776",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix dfs-radar and temperature event locking\n\nThe ath12k active pdevs are protected by RCU but the DFS-radar and\ntemperature event handling code calling ath12k_mac_get_ar_by_pdev_id()\nwas not marked as a read-side critical section.\n\nMark the code in question as RCU read-side critical sections to avoid\nany potential use-after-free issues.\n\nNote that the temperature event handler looks like a place holder\ncurrently but would still trigger an RCU lockdep splat.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix gtk offload status event locking\n\nThe ath11k active pdevs are protected by RCU but the gtk offload status\nevent handling code calling ath11k_mac_get_arvif_by_vdev_id() was not\nmarked as a read-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52780",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvneta: fix calls to page_pool_get_stats\n\nCalling page_pool_get_stats in the mvneta driver without checks\nleads to kernel crashes.\nFirst the page pool is only available if the bm is not used.\nThe page pool is also not allocated when the port is stopped.\nIt can also be not allocated in case of errors.\n\nThe current implementation leads to the following crash calling\nethstats on a port that is down or when calling it at the wrong moment:\n\nble to handle kernel NULL pointer dereference at virtual address 00000070\n[00000070] *pgd=00000000\nInternal error: Oops: 5 [#1] SMP ARM\nHardware name: Marvell Armada 380/385 (Device Tree)\nPC is at page_pool_get_stats+0x18/0x1cc\nLR is at mvneta_ethtool_get_stats+0xa0/0xe0 [mvneta]\npc : [\u003cc0b413cc\u003e]    lr : [\u003cbf0a98d8\u003e]    psr: a0000013\nsp : f1439d48  ip : f1439dc0  fp : 0000001d\nr10: 00000100  r9 : c4816b80  r8 : f0d75150\nr7 : bf0b400c  r6 : c238f000  r5 : 00000000  r4 : f1439d68\nr3 : c2091040  r2 : ffffffd8  r1 : f1439d68  r0 : 00000000\nFlags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\nControl: 10c5387d  Table: 066b004a  DAC: 00000051\nRegister r0 information: NULL pointer\nRegister r1 information: 2-page vmalloc region starting at 0xf1438000 allocated at kernel_clone+0x9c/0x390\nRegister r2 information: non-paged memory\nRegister r3 information: slab kmalloc-2k start c2091000 pointer offset 64 size 2048\nRegister r4 information: 2-page vmalloc region starting at 0xf1438000 allocated at kernel_clone+0x9c/0x390\nRegister r5 information: NULL pointer\nRegister r6 information: slab kmalloc-cg-4k start c238f000 pointer offset 0 size 4096\nRegister r7 information: 15-page vmalloc region starting at 0xbf0a8000 allocated at load_module+0xa30/0x219c\nRegister r8 information: 1-page vmalloc region starting at 0xf0d75000 allocated at ethtool_get_stats+0x138/0x208\nRegister r9 information: slab task_struct start c4816b80 pointer offset 0\nRegister r10 information: non-paged memory\nRegister r11 information: non-paged memory\nRegister r12 information: 2-page vmalloc region starting at 0xf1438000 allocated at kernel_clone+0x9c/0x390\nProcess snmpd (pid: 733, stack limit = 0x38de3a88)\nStack: (0xf1439d48 to 0xf143a000)\n9d40:                   000000c0 00000001 c238f000 bf0b400c f0d75150 c4816b80\n9d60: 00000100 bf0a98d8 00000000 00000000 00000000 00000000 00000000 00000000\n9d80: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9da0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9dc0: 00000dc0 5335509c 00000035 c238f000 bf0b2214 01067f50 f0d75000 c0b9b9c8\n9de0: 0000001d 00000035 c2212094 5335509c c4816b80 c238f000 c5ad6e00 01067f50\n9e00: c1b0be80 c4816b80 00014813 c0b9d7f0 00000000 00000000 0000001d 0000001d\n9e20: 00000000 00001200 00000000 00000000 c216ed90 c73943b8 00000000 00000000\n9e40: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9e60: 00000000 c0ad9034 00000000 00000000 00000000 00000000 00000000 00000000\n9e80: 00000000 00000000 00000000 5335509c c1b0be80 f1439ee4 00008946 c1b0be80\n9ea0: 01067f50 f1439ee3 00000000 00000046 b6d77ae0 c0b383f0 00008946 becc83e8\n9ec0: c1b0be80 00000051 0000000b c68ca480 c7172d00 c0ad8ff0 f1439ee3 cf600e40\n9ee0: 01600e40 32687465 00000000 00000000 00000000 01067f50 00000000 00000000\n9f00: 00000000 5335509c 00008946 00008946 00000000 c68ca480 becc83e8 c05e2de0\n9f20: f1439fb0 c03002f0 00000006 5ac3c35a c4816b80 00000006 b6d77ae0 c030caf0\n9f40: c4817350 00000014 f1439e1c 0000000c 00000000 00000051 01000000 00000014\n9f60: 00003fec f1439edc 00000001 c0372abc b6d77ae0 c0372abc cf600e40 5335509c\n9f80: c21e6800 01015c9c 0000000b 00008946 00000036 c03002f0 c4816b80 00000036\n9fa0: b6d77ae0 c03000c0 01015c9c 0000000b 0000000b 00008946 becc83e8 00000000\n9fc0: 01015c9c 0000000b 00008946 00000036 00000035 010678a0 b6d797ec b6d77ae0\n9fe0: b6dbf738 becc838c b6d186d7 b6baa858 40000030 0000000b 00000000 00000000\n page_pool_get_s\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52781",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: config: fix iteration issue in 'usb_get_bos_descriptor()'\n\nThe BOS descriptor defines a root descriptor and is the base descriptor for\naccessing a family of related descriptors.\n\nFunction 'usb_get_bos_descriptor()' encounters an iteration issue when\nskipping the 'USB_DT_DEVICE_CAPABILITY' descriptor type. This results in\nthe same descriptor being read repeatedly.\n\nTo address this issue, a 'goto' statement is introduced to ensure that the\npointer and the amount read is updated correctly. This ensures that the\nfunction iterates to the next descriptor instead of reading the same\ndescriptor repeatedly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52782",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Track xmit submission to PTP WQ after populating metadata map\n\nEnsure the skb is available in metadata mapping to skbs before tracking the\nmetadata index for detecting undelivered CQEs. If the metadata index is put\nin the tracking list before putting the skb in the map, the metadata index\nmight be used for detecting undelivered CQEs before the relevant skb is\navailable in the map, which can lead to a null-ptr-deref.\n\nLog:\n    general protection fault, probably for non-canonical address 0xdffffc0000000005: 0000 [#1] SMP KASAN\n    KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]\n    CPU: 0 PID: 1243 Comm: kworker/0:2 Not tainted 6.6.0-rc4+ #108\n    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n    Workqueue: events mlx5e_rx_dim_work [mlx5_core]\n    RIP: 0010:mlx5e_ptp_napi_poll+0x9a4/0x2290 [mlx5_core]\n    Code: 8c 24 38 cc ff ff 4c 8d 3c c1 4c 89 f9 48 c1 e9 03 42 80 3c 31 00 0f 85 97 0f 00 00 4d 8b 3f 49 8d 7f 28 48 89 f9 48 c1 e9 03 \u003c42\u003e 80 3c 31 00 0f 85 8b 0f 00 00 49 8b 47 28 48 85 c0 0f 84 05 07\n    RSP: 0018:ffff8884d3c09c88 EFLAGS: 00010206\n    RAX: 0000000000000069 RBX: ffff8881160349d8 RCX: 0000000000000005\n    RDX: ffffed10218f48cf RSI: 0000000000000004 RDI: 0000000000000028\n    RBP: ffff888122707700 R08: 0000000000000001 R09: ffffed109a781383\n    R10: 0000000000000003 R11: 0000000000000003 R12: ffff88810c7a7a40\n    R13: ffff888122707700 R14: dffffc0000000000 R15: 0000000000000000\n    FS:  0000000000000000(0000) GS:ffff8884d3c00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 00007f4f878dd6e0 CR3: 000000014d108002 CR4: 0000000000370eb0\n    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n    Call Trace:\n    \u003cIRQ\u003e\n    ? die_addr+0x3c/0xa0\n    ? exc_general_protection+0x144/0x210\n    ? asm_exc_general_protection+0x22/0x30\n    ? mlx5e_ptp_napi_poll+0x9a4/0x2290 [mlx5_core]\n    ? mlx5e_ptp_napi_poll+0x8f6/0x2290 [mlx5_core]\n    __napi_poll.constprop.0+0xa4/0x580\n    net_rx_action+0x460/0xb80\n    ? _raw_spin_unlock_irqrestore+0x32/0x60\n    ? __napi_poll.constprop.0+0x580/0x580\n    ? tasklet_action_common.isra.0+0x2ef/0x760\n    __do_softirq+0x26c/0x827\n    irq_exit_rcu+0xc2/0x100\n    common_interrupt+0x7f/0xa0\n    \u003c/IRQ\u003e\n    \u003cTASK\u003e\n    asm_common_interrupt+0x22/0x40\n    RIP: 0010:__kmem_cache_alloc_node+0xb/0x330\n    Code: 41 5d 41 5e 41 5f c3 8b 44 24 14 8b 4c 24 10 09 c8 eb d5 e8 b7 43 ca 01 0f 1f 80 00 00 00 00 0f 1f 44 00 00 55 48 89 e5 41 57 \u003c41\u003e 56 41 89 d6 41 55 41 89 f5 41 54 49 89 fc 53 48 83 e4 f0 48 83\n    RSP: 0018:ffff88812c4079c0 EFLAGS: 00000246\n    RAX: 1ffffffff083c7fe RBX: ffff888100042dc0 RCX: 0000000000000218\n    RDX: 00000000ffffffff RSI: 0000000000000dc0 RDI: ffff888100042dc0\n    RBP: ffff88812c4079c8 R08: ffffffffa0289f96 R09: ffffed1025880ea9\n    R10: ffff888138839f80 R11: 0000000000000002 R12: 0000000000000dc0\n    R13: 0000000000000100 R14: 000000000000008c R15: ffff8881271fc450\n    ? cmd_exec+0x796/0x2200 [mlx5_core]\n    kmalloc_trace+0x26/0xc0\n    cmd_exec+0x796/0x2200 [mlx5_core]\n    mlx5_cmd_do+0x22/0xc0 [mlx5_core]\n    mlx5_cmd_exec+0x17/0x30 [mlx5_core]\n    mlx5_core_modify_cq_moderation+0x139/0x1b0 [mlx5_core]\n    ? mlx5_add_cq_to_tasklet+0x280/0x280 [mlx5_core]\n    ? lockdep_set_lock_cmp_fn+0x190/0x190\n    ? process_one_work+0x659/0x1220\n    mlx5e_rx_dim_work+0x9d/0x100 [mlx5_core]\n    process_one_work+0x730/0x1220\n    ? lockdep_hardirqs_on_prepare+0x400/0x400\n    ? max_active_store+0xf0/0xf0\n    ? assign_work+0x168/0x240\n    worker_thread+0x70f/0x12d0\n    ? __kthread_parkme+0xd1/0x1d0\n    ? process_one_work+0x1220/0x1220\n    kthread+0x2d9/0x3b0\n    ? kthread_complete_and_exit+0x20/0x20\n    ret_from_fork+0x2d/0x70\n    ? kthread_complete_and_exit+0x20/0x20\n    ret_from_fork_as\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52783",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wangxun: fix kernel panic due to null pointer\n\nWhen the device uses a custom subsystem vendor ID, the function\nwx_sw_init() returns before the memory of 'wx-\u003emac_table' is allocated.\nThe null pointer will causes the kernel panic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52784",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: stop the device in bond_setup_by_slave()\n\nCommit 9eed321cde22 (\"net: lapbether: only support ethernet devices\")\nhas been able to keep syzbot away from net/lapb, until today.\n\nIn the following splat [1], the issue is that a lapbether device has\nbeen created on a bonding device without members. Then adding a non\nARPHRD_ETHER member forced the bonding master to change its type.\n\nThe fix is to make sure we call dev_close() in bond_setup_by_slave()\nso that the potential linked lapbether devices (or any other devices\nhaving assumptions on the physical device) are removed.\n\nA similar bug has been addressed in commit 40baec225765\n(\"bonding: fix panic on non-ARPHRD_ETHER enslave failure\")\n\n[1]\nskbuff: skb_under_panic: text:ffff800089508810 len:44 put:40 head:ffff0000c78e7c00 data:ffff0000c78e7bea tail:0x16 end:0x140 dev:bond0\nkernel BUG at net/core/skbuff.c:192 !\nInternal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 6007 Comm: syz-executor383 Not tainted 6.6.0-rc3-syzkaller-gbf6547d8715b #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/04/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : skb_panic net/core/skbuff.c:188 [inline]\npc : skb_under_panic+0x13c/0x140 net/core/skbuff.c:202\nlr : skb_panic net/core/skbuff.c:188 [inline]\nlr : skb_under_panic+0x13c/0x140 net/core/skbuff.c:202\nsp : ffff800096a06aa0\nx29: ffff800096a06ab0 x28: ffff800096a06ba0 x27: dfff800000000000\nx26: ffff0000ce9b9b50 x25: 0000000000000016 x24: ffff0000c78e7bea\nx23: ffff0000c78e7c00 x22: 000000000000002c x21: 0000000000000140\nx20: 0000000000000028 x19: ffff800089508810 x18: ffff800096a06100\nx17: 0000000000000000 x16: ffff80008a629a3c x15: 0000000000000001\nx14: 1fffe00036837a32 x13: 0000000000000000 x12: 0000000000000000\nx11: 0000000000000201 x10: 0000000000000000 x9 : cb50b496c519aa00\nx8 : cb50b496c519aa00 x7 : 0000000000000001 x6 : 0000000000000001\nx5 : ffff800096a063b8 x4 : ffff80008e280f80 x3 : ffff8000805ad11c\nx2 : 0000000000000001 x1 : 0000000100000201 x0 : 0000000000000086\nCall trace:\nskb_panic net/core/skbuff.c:188 [inline]\nskb_under_panic+0x13c/0x140 net/core/skbuff.c:202\nskb_push+0xf0/0x108 net/core/skbuff.c:2446\nip6gre_header+0xbc/0x738 net/ipv6/ip6_gre.c:1384\ndev_hard_header include/linux/netdevice.h:3136 [inline]\nlapbeth_data_transmit+0x1c4/0x298 drivers/net/wan/lapbether.c:257\nlapb_data_transmit+0x8c/0xb0 net/lapb/lapb_iface.c:447\nlapb_transmit_buffer+0x178/0x204 net/lapb/lapb_out.c:149\nlapb_send_control+0x220/0x320 net/lapb/lapb_subr.c:251\n__lapb_disconnect_request+0x9c/0x17c net/lapb/lapb_iface.c:326\nlapb_device_event+0x288/0x4e0 net/lapb/lapb_iface.c:492\nnotifier_call_chain+0x1a4/0x510 kernel/notifier.c:93\nraw_notifier_call_chain+0x3c/0x50 kernel/notifier.c:461\ncall_netdevice_notifiers_info net/core/dev.c:1970 [inline]\ncall_netdevice_notifiers_extack net/core/dev.c:2008 [inline]\ncall_netdevice_notifiers net/core/dev.c:2022 [inline]\n__dev_close_many+0x1b8/0x3c4 net/core/dev.c:1508\ndev_close_many+0x1e0/0x470 net/core/dev.c:1559\ndev_close+0x174/0x250 net/core/dev.c:1585\nlapbeth_device_event+0x2e4/0x958 drivers/net/wan/lapbether.c:466\nnotifier_call_chain+0x1a4/0x510 kernel/notifier.c:93\nraw_notifier_call_chain+0x3c/0x50 kernel/notifier.c:461\ncall_netdevice_notifiers_info net/core/dev.c:1970 [inline]\ncall_netdevice_notifiers_extack net/core/dev.c:2008 [inline]\ncall_netdevice_notifiers net/core/dev.c:2022 [inline]\n__dev_close_many+0x1b8/0x3c4 net/core/dev.c:1508\ndev_close_many+0x1e0/0x470 net/core/dev.c:1559\ndev_close+0x174/0x250 net/core/dev.c:1585\nbond_enslave+0x2298/0x30cc drivers/net/bonding/bond_main.c:2332\nbond_do_ioctl+0x268/0xc64 drivers/net/bonding/bond_main.c:4539\ndev_ifsioc+0x754/0x9ac\ndev_ioctl+0x4d8/0xd34 net/core/dev_ioctl.c:786\nsock_do_ioctl+0x1d4/0x2d0 net/socket.c:1217\nsock_ioctl+0x4e8/0x834 net/socket.c:1322\nvfs_ioctl fs/ioctl.c:51 [inline]\n__do_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix racy may inline data check in dio write\n\nsyzbot reports that the following warning from ext4_iomap_begin()\ntriggers as of the commit referenced below:\n\n        if (WARN_ON_ONCE(ext4_has_inline_data(inode)))\n                return -ERANGE;\n\nThis occurs during a dio write, which is never expected to encounter\nan inode with inline data. To enforce this behavior,\next4_dio_write_iter() checks the current inline state of the inode\nand clears the MAY_INLINE_DATA state flag to either fall back to\nbuffered writes, or enforce that any other writers in progress on\nthe inode are not allowed to create inline data.\n\nThe problem is that the check for existing inline data and the state\nflag can span a lock cycle. For example, if the ilock is originally\nlocked shared and subsequently upgraded to exclusive, another writer\nmay have reacquired the lock and created inline data before the dio\nwrite task acquires the lock and proceeds.\n\nThe commit referenced below loosens the lock requirements to allow\nsome forms of unaligned dio writes to occur under shared lock, but\nAFAICT the inline data check was technically already racy for any\ndio write that would have involved a lock cycle. Regardless, lift\nclearing of the state bit to the same lock critical section that\nchecks for preexisting inline data on the inode to close the race.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52787",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: make sure active queue usage is held for bio_integrity_prep()\n\nblk_integrity_unregister() can come if queue usage counter isn't held\nfor one bio with integrity prepared, so this request may be completed with\ncalling profile-\u003ecomplete_fn, then kernel panic.\n\nAnother constraint is that bio_integrity_prep() needs to be called\nbefore bio merge.\n\nFix the issue by:\n\n- call bio_integrity_prep() with one queue usage counter grabbed reliably\n\n- call bio_integrity_prep() before bio merge",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52788",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni915/perf: Fix NULL deref bugs with drm_dbg() calls\n\nWhen i915 perf interface is not available dereferencing it will lead to\nNULL dereferences.\n\nAs returning -ENOTSUPP is pretty clear return when perf interface is not\navailable.\n\n[tursulin: added stable tag]\n(cherry picked from commit 36f27350ff745bd228ab04d7845dfbffc177a889)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: vcc: Add check for kstrdup() in vcc_probe()\n\nAdd check for the return value of kstrdup() and return the error, if it\nfails in order to avoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: core: Run atomic i2c xfer when !preemptible\n\nSince bae1d3a05a8b, i2c transfers are non-atomic if preemption is\ndisabled. However, non-atomic i2c transfers require preemption (e.g. in\nwait_for_completion() while waiting for the DMA).\n\npanic() calls preempt_disable_notrace() before calling\nemergency_restart(). Therefore, if an i2c device is used for the\nrestart, the xfer should be atomic. This avoids warnings like:\n\n[   12.667612] WARNING: CPU: 1 PID: 1 at kernel/rcu/tree_plugin.h:318 rcu_note_context_switch+0x33c/0x6b0\n[   12.676926] Voluntary context switch within RCU read-side critical section!\n...\n[   12.742376]  schedule_timeout from wait_for_completion_timeout+0x90/0x114\n[   12.749179]  wait_for_completion_timeout from tegra_i2c_wait_completion+0x40/0x70\n...\n[   12.994527]  atomic_notifier_call_chain from machine_restart+0x34/0x58\n[   13.001050]  machine_restart from panic+0x2a8/0x32c\n\nUse !preemptible() instead, which is basically the same check as\npre-v5.2.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/region: Do not try to cleanup after cxl_region_setup_targets() fails\n\nCommit 5e42bcbc3fef (\"cxl/region: decrement -\u003enr_targets on error in\ncxl_region_attach()\") tried to avoid 'eiw' initialization errors when\n-\u003enr_targets exceeded 16, by just decrementing -\u003enr_targets when\ncxl_region_setup_targets() failed.\n\nCommit 86987c766276 (\"cxl/region: Cleanup target list on attach error\")\nextended that cleanup to also clear cxled-\u003epos and p-\u003etargets[pos]. The\ninitialization error was incidentally fixed separately by:\nCommit 8d4285425714 (\"cxl/region: Fix port setup uninitialized variable\nwarnings\") which was merged a few days after 5e42bcbc3fef.\n\nBut now the original cleanup when cxl_region_setup_targets() fails\nprevents endpoint and switch decoder resources from being reused:\n\n1) the cleanup does not set the decoder's region to NULL, which results\n   in future dpa_size_store() calls returning -EBUSY\n2) the decoder is not properly freed, which results in future commit\n   errors associated with the upstream switch\n\nNow that the initialization errors were fixed separately, the proper\ncleanup for this case is to just return immediately. Then the resources\nassociated with this target get cleanup up as normal when the failed\nregion is deleted.\n\nThe -\u003enr_targets decrement in the error case also helped prevent\na p-\u003etargets[] array overflow, so add a new check to prevent against\nthat overflow.\n\nTested by trying to create an invalid region for a 2 switch * 2 endpoint\ntopology, and then following up with creating a valid region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: intel: powerclamp: fix mismatch in get function for max_idle\n\nKASAN reported this\n\n      [ 444.853098] BUG: KASAN: global-out-of-bounds in param_get_int+0x77/0x90\n      [ 444.853111] Read of size 4 at addr ffffffffc16c9220 by task cat/2105\n      ...\n      [ 444.853442] The buggy address belongs to the variable:\n      [ 444.853443] max_idle+0x0/0xffffffffffffcde0 [intel_powerclamp]\n\nThere is a mismatch between the param_get_int and the definition of\nmax_idle.  Replacing param_get_int with param_get_byte resolves this\nissue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52795",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvhost-vdpa: fix use after free in vhost_vdpa_probe()\n\nThe put_device() calls vhost_vdpa_release_dev() which calls\nida_simple_remove() and frees \"v\".  So this call to\nida_simple_remove() is a use after free and a double free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52796",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: add ipvlan_route_v6_outbound() helper\n\nInspired by syzbot reports using a stack of multiple ipvlan devices.\n\nReduce stack size needed in ipvlan_process_v6_outbound() by moving\nthe flowi6 struct used for the route lookup in an non inlined\nhelper. ipvlan_route_v6_outbound() needs 120 bytes on the stack,\nimmediately reclaimed.\n\nAlso make sure ipvlan_process_v4_outbound() is not inlined.\n\nWe might also have to lower MAX_NEST_DEV, because only syzbot uses\nsetups with more than four stacked devices.\n\nBUG: TASK stack guard page was hit at ffffc9000e803ff8 (stack is ffffc9000e804000..ffffc9000e808000)\nstack guard page: 0000 [#1] SMP KASAN\nCPU: 0 PID: 13442 Comm: syz-executor.4 Not tainted 6.1.52-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/09/2023\nRIP: 0010:kasan_check_range+0x4/0x2a0 mm/kasan/generic.c:188\nCode: 48 01 c6 48 89 c7 e8 db 4e c1 03 31 c0 5d c3 cc 0f 0b eb 02 0f 0b b8 ea ff ff ff 5d c3 cc 00 00 cc cc 00 00 cc cc 55 48 89 e5 \u003c41\u003e 57 41 56 41 55 41 54 53 b0 01 48 85 f6 0f 84 a4 01 00 00 48 89\nRSP: 0018:ffffc9000e804000 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff817e5bf2\nRDX: 0000000000000000 RSI: 0000000000000008 RDI: ffffffff887c6568\nRBP: ffffc9000e804000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: dffffc0000000001 R12: 1ffff92001d0080c\nR13: dffffc0000000000 R14: ffffffff87e6b100 R15: 0000000000000000\nFS: 00007fd0c55826c0(0000) GS:ffff8881f6800000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffc9000e803ff8 CR3: 0000000170ef7000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003c#DF\u003e\n\u003c/#DF\u003e\n\u003cTASK\u003e\n[\u003cffffffff81f281d1\u003e] __kasan_check_read+0x11/0x20 mm/kasan/shadow.c:31\n[\u003cffffffff817e5bf2\u003e] instrument_atomic_read include/linux/instrumented.h:72 [inline]\n[\u003cffffffff817e5bf2\u003e] _test_bit include/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]\n[\u003cffffffff817e5bf2\u003e] cpumask_test_cpu include/linux/cpumask.h:506 [inline]\n[\u003cffffffff817e5bf2\u003e] cpu_online include/linux/cpumask.h:1092 [inline]\n[\u003cffffffff817e5bf2\u003e] trace_lock_acquire include/trace/events/lock.h:24 [inline]\n[\u003cffffffff817e5bf2\u003e] lock_acquire+0xe2/0x590 kernel/locking/lockdep.c:5632\n[\u003cffffffff8563221e\u003e] rcu_lock_acquire+0x2e/0x40 include/linux/rcupdate.h:306\n[\u003cffffffff8561464d\u003e] rcu_read_lock include/linux/rcupdate.h:747 [inline]\n[\u003cffffffff8561464d\u003e] ip6_pol_route+0x15d/0x1440 net/ipv6/route.c:2221\n[\u003cffffffff85618120\u003e] ip6_pol_route_output+0x50/0x80 net/ipv6/route.c:2606\n[\u003cffffffff856f65b5\u003e] pol_lookup_func include/net/ip6_fib.h:584 [inline]\n[\u003cffffffff856f65b5\u003e] fib6_rule_lookup+0x265/0x620 net/ipv6/fib6_rules.c:116\n[\u003cffffffff85618009\u003e] ip6_route_output_flags_noref+0x2d9/0x3a0 net/ipv6/route.c:2638\n[\u003cffffffff8561821a\u003e] ip6_route_output_flags+0xca/0x340 net/ipv6/route.c:2651\n[\u003cffffffff838bd5a3\u003e] ip6_route_output include/net/ip6_route.h:100 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_process_v6_outbound drivers/net/ipvlan/ipvlan_core.c:473 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_process_outbound drivers/net/ipvlan/ipvlan_core.c:529 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_xmit_mode_l3 drivers/net/ipvlan/ipvlan_core.c:602 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_queue_xmit+0xc33/0x1be0 drivers/net/ipvlan/ipvlan_core.c:677\n[\u003cffffffff838c2909\u003e] ipvlan_start_xmit+0x49/0x100 drivers/net/ipvlan/ipvlan_main.c:229\n[\u003cffffffff84d03900\u003e] netdev_start_xmit include/linux/netdevice.h:4966 [inline]\n[\u003cffffffff84d03900\u003e] xmit_one net/core/dev.c:3644 [inline]\n[\u003cffffffff84d03900\u003e] dev_hard_start_xmit+0x320/0x980 net/core/dev.c:3660\n[\u003cffffffff84d080e2\u003e] __dev_queue_xmit+0x16b2/0x3370 net/core/dev.c:4324\n[\u003cffffffff855ce4cd\u003e] dev_queue_xmit include/linux/netdevice.h:3067 [inline]\n[\u003cffffffff855ce4cd\u003e] neigh_hh_output include/net/neighbour.h:529 [inline]\n[\u003cf\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52798",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix dfs radar event locking\n\nThe ath11k active pdevs are protected by RCU but the DFS radar event\nhandling code calling ath11k_mac_get_ar_by_pdev_id() was not marked as a\nread-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52799",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in dbFindLeaf\n\nCurrently while searching for dmtree_t for sufficient free blocks there\nis an array out of bounds while getting element in tp-\u003edm_stree. To add\nthe required check for out of bound we first need to determine the type\nof dmtree. Thus added an extra parameter to dbFindLeaf so that the type\nof tree can be determined and the required check can be applied.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix htt pktlog locking\n\nThe ath11k active pdevs are protected by RCU but the htt pktlog handling\ncode calling ath11k_mac_get_ar_by_pdev_id() was not marked as a\nread-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52801",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Fix missing update of domains_itree after splitting iopt_area\n\nIn iopt_area_split(), if the original iopt_area has filled a domain and is\nlinked to domains_itree, pages_nodes have to be properly\nreinserted. Otherwise the domains_itree becomes corrupted and we will UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52803",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix RPC client cleaned up the freed pipefs dentries\n\nRPC client pipefs dentries cleanup is in separated rpc_remove_pipedir()\nworkqueue,which takes care about pipefs superblock locking.\nIn some special scenarios, when kernel frees the pipefs sb of the\ncurrent client and immediately alloctes a new pipefs sb,\nrpc_remove_pipedir function would misjudge the existence of pipefs\nsb which is not the one it used to hold. As a result,\nthe rpc_remove_pipedir would clean the released freed pipefs dentries.\n\nTo fix this issue, rpc_remove_pipedir should check whether the\ncurrent pipefs sb is consistent with the original pipefs sb.\n\nThis error can be catched by KASAN:\n=========================================================\n[  250.497700] BUG: KASAN: slab-use-after-free in dget_parent+0x195/0x200\n[  250.498315] Read of size 4 at addr ffff88800a2ab804 by task kworker/0:18/106503\n[  250.500549] Workqueue: events rpc_free_client_work\n[  250.501001] Call Trace:\n[  250.502880]  kasan_report+0xb6/0xf0\n[  250.503209]  ? dget_parent+0x195/0x200\n[  250.503561]  dget_parent+0x195/0x200\n[  250.503897]  ? __pfx_rpc_clntdir_depopulate+0x10/0x10\n[  250.504384]  rpc_rmdir_depopulate+0x1b/0x90\n[  250.504781]  rpc_remove_client_dir+0xf5/0x150\n[  250.505195]  rpc_free_client_work+0xe4/0x230\n[  250.505598]  process_one_work+0x8ee/0x13b0\n...\n[   22.039056] Allocated by task 244:\n[   22.039390]  kasan_save_stack+0x22/0x50\n[   22.039758]  kasan_set_track+0x25/0x30\n[   22.040109]  __kasan_slab_alloc+0x59/0x70\n[   22.040487]  kmem_cache_alloc_lru+0xf0/0x240\n[   22.040889]  __d_alloc+0x31/0x8e0\n[   22.041207]  d_alloc+0x44/0x1f0\n[   22.041514]  __rpc_lookup_create_exclusive+0x11c/0x140\n[   22.041987]  rpc_mkdir_populate.constprop.0+0x5f/0x110\n[   22.042459]  rpc_create_client_dir+0x34/0x150\n[   22.042874]  rpc_setup_pipedir_sb+0x102/0x1c0\n[   22.043284]  rpc_client_register+0x136/0x4e0\n[   22.043689]  rpc_new_client+0x911/0x1020\n[   22.044057]  rpc_create_xprt+0xcb/0x370\n[   22.044417]  rpc_create+0x36b/0x6c0\n...\n[   22.049524] Freed by task 0:\n[   22.049803]  kasan_save_stack+0x22/0x50\n[   22.050165]  kasan_set_track+0x25/0x30\n[   22.050520]  kasan_save_free_info+0x2b/0x50\n[   22.050921]  __kasan_slab_free+0x10e/0x1a0\n[   22.051306]  kmem_cache_free+0xa5/0x390\n[   22.051667]  rcu_core+0x62c/0x1930\n[   22.051995]  __do_softirq+0x165/0x52a\n[   22.052347]\n[   22.052503] Last potentially related work creation:\n[   22.052952]  kasan_save_stack+0x22/0x50\n[   22.053313]  __kasan_record_aux_stack+0x8e/0xa0\n[   22.053739]  __call_rcu_common.constprop.0+0x6b/0x8b0\n[   22.054209]  dentry_free+0xb2/0x140\n[   22.054540]  __dentry_kill+0x3be/0x540\n[   22.054900]  shrink_dentry_list+0x199/0x510\n[   22.055293]  shrink_dcache_parent+0x190/0x240\n[   22.055703]  do_one_tree+0x11/0x40\n[   22.056028]  shrink_dcache_for_umount+0x61/0x140\n[   22.056461]  generic_shutdown_super+0x70/0x590\n[   22.056879]  kill_anon_super+0x3a/0x60\n[   22.057234]  rpc_kill_sb+0x121/0x200",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52804",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/jfs: Add validity check for db_maxag and db_agpref\n\nBoth db_maxag and db_agpref are used as the index of the\ndb_agfree array, but there is currently no validity check for\ndb_maxag and db_agpref, which can lead to errors.\n\nThe following is related bug reported by Syzbot:\n\nUBSAN: array-index-out-of-bounds in fs/jfs/jfs_dmap.c:639:20\nindex 7936 is out of range for type 'atomic_t[128]'\n\nAdd checking that the values of db_maxag and db_agpref are valid\nindexes for the db_agfree array.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in diAlloc\n\nCurrently there is not check against the agno of the iag while\nallocating new inodes to avoid fragmentation problem. Added the check\nwhich is required.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52806",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: Fix possible null-ptr-deref when assigning a stream\n\nWhile AudioDSP drivers assign streams exclusively of HOST or LINK type,\nnothing blocks a user to attempt to assign a COUPLED stream. As\nsupplied substream instance may be a stub, what is the case when\ncode-loading, such scenario ends with null-ptr-deref.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52807",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix out-of-bounds access may occur when coalesce info is read via debugfs\n\nThe hns3 driver define an array of string to show the coalesce\ninfo, but if the kernel adds a new mode or a new state,\nout-of-bounds access may occur when coalesce info is read via\ndebugfs, this patch fix the problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52808",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Set debugfs_dir pointer to NULL after removing debugfs\n\nIf init debugfs failed during device registration due to memory allocation\nfailure, debugfs_remove_recursive() is called, after which debugfs_dir is\nnot set to NULL. debugfs_remove_recursive() will be called again during\ndevice removal. As a result, illegal pointer is accessed.\n\n[ 1665.467244] hisi_sas_v3_hw 0000:b4:02.0: failed to init debugfs!\n...\n[ 1669.836708] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0\n[ 1669.872669] pc : down_write+0x24/0x70\n[ 1669.876315] lr : down_write+0x1c/0x70\n[ 1669.879961] sp : ffff000036f53a30\n[ 1669.883260] x29: ffff000036f53a30 x28: ffffa027c31549f8\n[ 1669.888547] x27: ffffa027c3140000 x26: 0000000000000000\n[ 1669.893834] x25: ffffa027bf37c270 x24: ffffa027bf37c270\n[ 1669.899122] x23: ffff0000095406b8 x22: ffff0000095406a8\n[ 1669.904408] x21: 0000000000000000 x20: ffffa027bf37c310\n[ 1669.909695] x19: 00000000000000a0 x18: ffff8027dcd86f10\n[ 1669.914982] x17: 0000000000000000 x16: 0000000000000000\n[ 1669.920268] x15: 0000000000000000 x14: ffffa0274014f870\n[ 1669.925555] x13: 0000000000000040 x12: 0000000000000228\n[ 1669.930842] x11: 0000000000000020 x10: 0000000000000bb0\n[ 1669.936129] x9 : ffff000036f537f0 x8 : ffff80273088ca10\n[ 1669.941416] x7 : 000000000000001d x6 : 00000000ffffffff\n[ 1669.946702] x5 : ffff000008a36310 x4 : ffff80273088be00\n[ 1669.951989] x3 : ffff000009513e90 x2 : 0000000000000000\n[ 1669.957276] x1 : 00000000000000a0 x0 : ffffffff00000001\n[ 1669.962563] Call trace:\n[ 1669.965000]  down_write+0x24/0x70\n[ 1669.968301]  debugfs_remove_recursive+0x5c/0x1b0\n[ 1669.972905]  hisi_sas_debugfs_exit+0x24/0x30 [hisi_sas_main]\n[ 1669.978541]  hisi_sas_v3_remove+0x130/0x150 [hisi_sas_v3_hw]\n[ 1669.984175]  pci_device_remove+0x48/0xd8\n[ 1669.988082]  device_release_driver_internal+0x1b4/0x250\n[ 1669.993282]  device_release_driver+0x28/0x38\n[ 1669.997534]  pci_stop_bus_device+0x84/0xb8\n[ 1670.001611]  pci_stop_and_remove_bus_device_locked+0x24/0x40\n[ 1670.007244]  remove_store+0xfc/0x140\n[ 1670.010802]  dev_attr_store+0x44/0x60\n[ 1670.014448]  sysfs_kf_write+0x58/0x80\n[ 1670.018095]  kernfs_fop_write+0xe8/0x1f0\n[ 1670.022000]  __vfs_write+0x60/0x190\n[ 1670.025472]  vfs_write+0xac/0x1c0\n[ 1670.028771]  ksys_write+0x6c/0xd8\n[ 1670.032071]  __arm64_sys_write+0x24/0x30\n[ 1670.035977]  el0_svc_common+0x78/0x130\n[ 1670.039710]  el0_svc_handler+0x38/0x78\n[ 1670.043442]  el0_svc+0x8/0xc\n\nTo fix this, set debugfs_dir to NULL after debugfs_remove_recursive().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52809",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: libfc: Fix potential NULL pointer dereference in fc_lport_ptp_setup()\n\nfc_lport_ptp_setup() did not check the return value of fc_rport_create()\nwhich can return NULL and would cause a NULL pointer dereference. Address\nthis issue by checking return value of fc_rport_create() and log error\nmessage on fc_rport_create() failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52810",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/jfs: Add check for negative db_l2nbperpage\n\nl2nbperpage is log2(number of blks per page), and the minimum legal\nvalue should be 0, not negative.\n\nIn the case of l2nbperpage being negative, an error will occur\nwhen subsequently used as shift exponent.\n\nSyzbot reported this bug:\n\nUBSAN: shift-out-of-bounds in fs/jfs/jfs_dmap.c:799:12\nshift exponent -16777216 is negative",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52811",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ibmvfc: Remove BUG_ON in the case of an empty event pool\n\nIn practice the driver should never send more commands than are allocated\nto a queue's event pool. In the unlikely event that this happens, the code\nasserts a BUG_ON, and in the case that the kernel is not configured to\ncrash on panic returns a junk event pointer from the empty event list\ncausing things to spiral from there. This BUG_ON is a historical artifact\nof the ibmvfc driver first being upstreamed, and it is well known now that\nthe use of BUG_ON is bad practice except in the most unrecoverable\nscenario. There is nothing about this scenario that prevents the driver\nfrom recovering and carrying on.\n\nRemove the BUG_ON in question from ibmvfc_get_event() and return a NULL\npointer in the case of an empty event pool. Update all call sites to\nibmvfc_get_event() to check for a NULL pointer and perfrom the appropriate\nfailure or recovery action.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52812",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd: check num of link levels when update pcie param\n\nIn SR-IOV environment, the value of pcie_table-\u003enum_of_link_levels will\nbe 0, and num_of_levels - 1 will cause array index out of bounds",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: pcrypt - Fix hungtask for PADATA_RESET\n\nWe found a hungtask bug in test_aead_vec_cfg as follows:\n\nINFO: task cryptomgr_test:391009 blocked for more than 120 seconds.\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\nCall trace:\n __switch_to+0x98/0xe0\n __schedule+0x6c4/0xf40\n schedule+0xd8/0x1b4\n schedule_timeout+0x474/0x560\n wait_for_common+0x368/0x4e0\n wait_for_completion+0x20/0x30\n wait_for_completion+0x20/0x30\n test_aead_vec_cfg+0xab4/0xd50\n test_aead+0x144/0x1f0\n alg_test_aead+0xd8/0x1e0\n alg_test+0x634/0x890\n cryptomgr_test+0x40/0x70\n kthread+0x1e0/0x220\n ret_from_fork+0x10/0x18\n Kernel panic - not syncing: hung_task: blocked tasks\n\nFor padata_do_parallel, when the return err is 0 or -EBUSY, it will call\nwait_for_completion(\u0026wait-\u003ecompletion) in test_aead_vec_cfg. In normal\ncase, aead_request_complete() will be called in pcrypt_aead_serial and the\nreturn err is 0 for padata_do_parallel. But, when pinst-\u003eflags is\nPADATA_RESET, the return err is -EBUSY for padata_do_parallel, and it\nwon't call aead_request_complete(). Therefore, test_aead_vec_cfg will\nhung at wait_for_completion(\u0026wait-\u003ecompletion), which will cause\nhungtask.\n\nThe problem comes as following:\n(padata_do_parallel)                 |\n    rcu_read_lock_bh();              |\n    err = -EINVAL;                   |   (padata_replace)\n                                     |     pinst-\u003eflags |= PADATA_RESET;\n    err = -EBUSY                     |\n    if (pinst-\u003eflags \u0026 PADATA_RESET) |\n        rcu_read_unlock_bh()         |\n        return err\n\nIn order to resolve the problem, we replace the return err -EBUSY with\n-EAGAIN, which means parallel_data is changing, and the caller should call\nit again.\n\nv3:\nremove retry and just change the return err.\nv2:\nintroduce padata_try_do_parallel() in pcrypt_aead_encrypt and\npcrypt_aead_decrypt to solve the hungtask.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix potential null pointer derefernce\n\nThe amdgpu_ras_get_context may return NULL if device\nnot support ras feature, so add check before using.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52815",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/vkms: fix a possible null pointer dereference\n\nIn amdgpu_vkms_conn_get_modes(), the return value of drm_cvt_mode()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_cvt_mode(). Add a check to avoid null pointer\ndereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52816",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix shift out-of-bounds issue\n\n[  567.613292] shift exponent 255 is too large for 64-bit type 'long unsigned int'\n[  567.614498] CPU: 5 PID: 238 Comm: kworker/5:1 Tainted: G           OE      6.2.0-34-generic #34~22.04.1-Ubuntu\n[  567.614502] Hardware name: AMD Splinter/Splinter-RPL, BIOS WS43927N_871 09/25/2023\n[  567.614504] Workqueue: events send_exception_work_handler [amdgpu]\n[  567.614748] Call Trace:\n[  567.614750]  \u003cTASK\u003e\n[  567.614753]  dump_stack_lvl+0x48/0x70\n[  567.614761]  dump_stack+0x10/0x20\n[  567.614763]  __ubsan_handle_shift_out_of_bounds+0x156/0x310\n[  567.614769]  ? srso_alias_return_thunk+0x5/0x7f\n[  567.614773]  ? update_sd_lb_stats.constprop.0+0xf2/0x3c0\n[  567.614780]  svm_range_split_by_granularity.cold+0x2b/0x34 [amdgpu]\n[  567.615047]  ? srso_alias_return_thunk+0x5/0x7f\n[  567.615052]  svm_migrate_to_ram+0x185/0x4d0 [amdgpu]\n[  567.615286]  do_swap_page+0x7b6/0xa30\n[  567.615291]  ? srso_alias_return_thunk+0x5/0x7f\n[  567.615294]  ? __free_pages+0x119/0x130\n[  567.615299]  handle_pte_fault+0x227/0x280\n[  567.615303]  __handle_mm_fault+0x3c0/0x720\n[  567.615311]  handle_mm_fault+0x119/0x330\n[  567.615314]  ? lock_mm_and_find_vma+0x44/0x250\n[  567.615318]  do_user_addr_fault+0x1a9/0x640\n[  567.615323]  exc_page_fault+0x81/0x1b0\n[  567.615328]  asm_exc_page_fault+0x27/0x30\n[  567.615332] RIP: 0010:__get_user_8+0x1c/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix a null pointer access when the smc_rreg pointer is NULL\n\nIn certain types of chips, such as VEGA20, reading the amdgpu_regs_smc file could result in an abnormal null pointer access when the smc_rreg pointer is NULL. Below are the steps to reproduce this issue and the corresponding exception log:\n\n1. Navigate to the directory: /sys/kernel/debug/dri/0\n2. Execute command: cat amdgpu_regs_smc\n3. Exception Log::\n[4005007.702554] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[4005007.702562] #PF: supervisor instruction fetch in kernel mode\n[4005007.702567] #PF: error_code(0x0010) - not-present page\n[4005007.702570] PGD 0 P4D 0\n[4005007.702576] Oops: 0010 [#1] SMP NOPTI\n[4005007.702581] CPU: 4 PID: 62563 Comm: cat Tainted: G           OE     5.15.0-43-generic #46-Ubunt       u\n[4005007.702590] RIP: 0010:0x0\n[4005007.702598] Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.\n[4005007.702600] RSP: 0018:ffffa82b46d27da0 EFLAGS: 00010206\n[4005007.702605] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffa82b46d27e68\n[4005007.702609] RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff9940656e0000\n[4005007.702612] RBP: ffffa82b46d27dd8 R08: 0000000000000000 R09: ffff994060c07980\n[4005007.702615] R10: 0000000000020000 R11: 0000000000000000 R12: 00007f5e06753000\n[4005007.702618] R13: ffff9940656e0000 R14: ffffa82b46d27e68 R15: 00007f5e06753000\n[4005007.702622] FS:  00007f5e0755b740(0000) GS:ffff99479d300000(0000) knlGS:0000000000000000\n[4005007.702626] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[4005007.702629] CR2: ffffffffffffffd6 CR3: 00000003253fc000 CR4: 00000000003506e0\n[4005007.702633] Call Trace:\n[4005007.702636]  \u003cTASK\u003e\n[4005007.702640]  amdgpu_debugfs_regs_smc_read+0xb0/0x120 [amdgpu]\n[4005007.703002]  full_proxy_read+0x5c/0x80\n[4005007.703011]  vfs_read+0x9f/0x1a0\n[4005007.703019]  ksys_read+0x67/0xe0\n[4005007.703023]  __x64_sys_read+0x19/0x20\n[4005007.703028]  do_syscall_64+0x5c/0xc0\n[4005007.703034]  ? do_user_addr_fault+0x1e3/0x670\n[4005007.703040]  ? exit_to_user_mode_prepare+0x37/0xb0\n[4005007.703047]  ? irqentry_exit_to_user_mode+0x9/0x20\n[4005007.703052]  ? irqentry_exit+0x19/0x30\n[4005007.703057]  ? exc_page_fault+0x89/0x160\n[4005007.703062]  ? asm_exc_page_fault+0x8/0x30\n[4005007.703068]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n[4005007.703075] RIP: 0033:0x7f5e07672992\n[4005007.703079] Code: c0 e9 b2 fe ff ff 50 48 8d 3d fa b2 0c 00 e8 c5 1d 02 00 0f 1f 44 00 00 f3 0f        1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 e       c 28 48 89 54 24\n[4005007.703083] RSP: 002b:00007ffe03097898 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n[4005007.703088] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f5e07672992\n[4005007.703091] RDX: 0000000000020000 RSI: 00007f5e06753000 RDI: 0000000000000003\n[4005007.703094] RBP: 00007f5e06753000 R08: 00007f5e06752010 R09: 00007f5e06752010\n[4005007.703096] R10: 0000000000000022 R11: 0000000000000246 R12: 0000000000022000\n[4005007.703099] R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000\n[4005007.703105]  \u003c/TASK\u003e\n[4005007.703107] Modules linked in: nf_tables libcrc32c nfnetlink algif_hash af_alg binfmt_misc nls_       iso8859_1 ipmi_ssif ast intel_rapl_msr intel_rapl_common drm_vram_helper drm_ttm_helper amd64_edac t       tm edac_mce_amd kvm_amd ccp mac_hid k10temp kvm acpi_ipmi ipmi_si rapl sch_fq_codel ipmi_devintf ipm       i_msghandler msr parport_pc ppdev lp parport mtd pstore_blk efi_pstore ramoops pstore_zone reed_solo       mon ip_tables x_tables autofs4 ib_uverbs ib_core amdgpu(OE) amddrm_ttm_helper(OE) amdttm(OE) iommu_v       2 amd_sched(OE) amdkcl(OE) drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops cec rc_core        drm igb ahci xhci_pci libahci i2c_piix4 i2c_algo_bit xhci_pci_renesas dca\n[4005007.703184] CR2: 0000000000000000\n[4005007.703188] ---[ en\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52818",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd: Fix UBSAN array-index-out-of-bounds for SMU7\n\nFor pptable structs that use flexible array sizes, use flexible arrays.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd: Fix UBSAN array-index-out-of-bounds for Polaris and Tonga\n\nFor pptable structs that use flexible array sizes, use flexible arrays.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52821",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panel: fix a possible null pointer dereference\n\nIn versatile_panel_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52825",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix a race condition of vram buffer unref in svm code\n\nprange-\u003esvm_bo unref can happen in both mmu callback and a callback after\nmigrate to system ram. Both are async call in different tasks. Sync svm_bo\nunref operation to avoid random \"use-after-free\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52826",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panel/panel-tpo-tpg110: fix a possible null pointer dereference\n\nIn tpg110_get_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a NULL pointer dereference on\nfailure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52827",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix possible out-of-bound read in ath12k_htt_pull_ppdu_stats()\n\nlen is extracted from HTT message and could be an unexpected value in\ncase errors happen, so add validation before using to avoid possible\nout-of-bound read in the following message iteration and parsing.\n\nThe same issue also applies to ppdu_info-\u003eppdu_stats.common.num_users,\nso validate it before using too.\n\nThese are found during code review.\n\nCompile test only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52829",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix possible out-of-bound write in ath12k_wmi_ext_hal_reg_caps()\n\nreg_cap.phy_id is extracted from WMI event and could be an unexpected value\nin case some errors happen. As a result out-of-bound write may occur to\nsoc-\u003ehal_reg_cap. Fix it by validating reg_cap.phy_id before using it.\n\nThis is found during code review.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52832",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: don't return unset power in ieee80211_get_tx_power()\n\nWe can get a UBSAN warning if ieee80211_get_tx_power() returns the\nINT_MIN value mac80211 internally uses for \"unset power level\".\n\n UBSAN: signed-integer-overflow in net/wireless/nl80211.c:3816:5\n -2147483648 * 100 cannot be represented in type 'int'\n CPU: 0 PID: 20433 Comm: insmod Tainted: G        WC OE\n Call Trace:\n  dump_stack+0x74/0x92\n  ubsan_epilogue+0x9/0x50\n  handle_overflow+0x8d/0xd0\n  __ubsan_handle_mul_overflow+0xe/0x10\n  nl80211_send_iface+0x688/0x6b0 [cfg80211]\n  [...]\n  cfg80211_register_wdev+0x78/0xb0 [cfg80211]\n  cfg80211_netdev_notifier_call+0x200/0x620 [cfg80211]\n  [...]\n  ieee80211_if_add+0x60e/0x8f0 [mac80211]\n  ieee80211_register_hw+0xda5/0x1170 [mac80211]\n\nIn this case, simply return an error instead, to indicate\nthat no data is available.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52833",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btusb: Add date-\u003eevt_skb is NULL check\n\nfix crash because of null pointers\n\n[ 6104.969662] BUG: kernel NULL pointer dereference, address: 00000000000000c8\n[ 6104.969667] #PF: supervisor read access in kernel mode\n[ 6104.969668] #PF: error_code(0x0000) - not-present page\n[ 6104.969670] PGD 0 P4D 0\n[ 6104.969673] Oops: 0000 [#1] SMP NOPTI\n[ 6104.969684] RIP: 0010:btusb_mtk_hci_wmt_sync+0x144/0x220 [btusb]\n[ 6104.969688] RSP: 0018:ffffb8d681533d48 EFLAGS: 00010246\n[ 6104.969689] RAX: 0000000000000000 RBX: ffff8ad560bb2000 RCX: 0000000000000006\n[ 6104.969691] RDX: 0000000000000000 RSI: ffffb8d681533d08 RDI: 0000000000000000\n[ 6104.969692] RBP: ffffb8d681533d70 R08: 0000000000000001 R09: 0000000000000001\n[ 6104.969694] R10: 0000000000000001 R11: 00000000fa83b2da R12: ffff8ad461d1d7c0\n[ 6104.969695] R13: 0000000000000000 R14: ffff8ad459618c18 R15: ffffb8d681533d90\n[ 6104.969697] FS:  00007f5a1cab9d40(0000) GS:ffff8ad578200000(0000) knlGS:00000\n[ 6104.969699] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 6104.969700] CR2: 00000000000000c8 CR3: 000000018620c001 CR4: 0000000000760ef0\n[ 6104.969701] PKRU: 55555554\n[ 6104.969702] Call Trace:\n[ 6104.969708]  btusb_mtk_shutdown+0x44/0x80 [btusb]\n[ 6104.969732]  hci_dev_do_close+0x470/0x5c0 [bluetooth]\n[ 6104.969748]  hci_rfkill_set_block+0x56/0xa0 [bluetooth]\n[ 6104.969753]  rfkill_set_block+0x92/0x160\n[ 6104.969755]  rfkill_fop_write+0x136/0x1e0\n[ 6104.969759]  __vfs_write+0x18/0x40\n[ 6104.969761]  vfs_write+0xdf/0x1c0\n[ 6104.969763]  ksys_write+0xb1/0xe0\n[ 6104.969765]  __x64_sys_write+0x1a/0x20\n[ 6104.969769]  do_syscall_64+0x51/0x180\n[ 6104.969771]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[ 6104.969773] RIP: 0033:0x7f5a21f18fef\n[ 6104.9] RSP: 002b:00007ffeefe39010 EFLAGS: 00000293 ORIG_RAX: 0000000000000001\n[ 6104.969780] RAX: ffffffffffffffda RBX: 000055c10a7560a0 RCX: 00007f5a21f18fef\n[ 6104.969781] RDX: 0000000000000008 RSI: 00007ffeefe39060 RDI: 0000000000000012\n[ 6104.969782] RBP: 00007ffeefe39060 R08: 0000000000000000 R09: 0000000000000017\n[ 6104.969784] R10: 00007ffeefe38d97 R11: 0000000000000293 R12: 0000000000000002\n[ 6104.969785] R13: 00007ffeefe39220 R14: 00007ffeefe391a0 R15: 000055c10a72acf0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52834",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natl1c: Work around the DMA RX overflow issue\n\nThis is based on alx driver commit 881d0327db37 (\"net: alx: Work around\nthe DMA RX overflow issue\").\n\nThe alx and atl1c drivers had RX overflow error which was why a custom\nallocator was created to avoid certain addresses. The simpler workaround\nthen created for alx driver, but not for atl1c due to lack of tester.\n\nInstead of using a custom allocator, check the allocated skb address and\nuse skb_reserve() to move away from problematic 0x...fc0 address.\n\nTested on AR8131 on Acer 4540.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52835",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/core: Bail out early if the request AUX area is out of bound\n\nWhen perf-record with a large AUX area, e.g 4GB, it fails with:\n\n    #perf record -C 0 -m ,4G -e arm_spe_0// -- sleep 1\n    failed to mmap with 12 (Cannot allocate memory)\n\nand it reveals a WARNING with __alloc_pages():\n\n\t------------[ cut here ]------------\n\tWARNING: CPU: 44 PID: 17573 at mm/page_alloc.c:5568 __alloc_pages+0x1ec/0x248\n\tCall trace:\n\t __alloc_pages+0x1ec/0x248\n\t __kmalloc_large_node+0xc0/0x1f8\n\t __kmalloc_node+0x134/0x1e8\n\t rb_alloc_aux+0xe0/0x298\n\t perf_mmap+0x440/0x660\n\t mmap_region+0x308/0x8a8\n\t do_mmap+0x3c0/0x528\n\t vm_mmap_pgoff+0xf4/0x1b8\n\t ksys_mmap_pgoff+0x18c/0x218\n\t __arm64_sys_mmap+0x38/0x58\n\t invoke_syscall+0x50/0x128\n\t el0_svc_common.constprop.0+0x58/0x188\n\t do_el0_svc+0x34/0x50\n\t el0_svc+0x34/0x108\n\t el0t_64_sync_handler+0xb8/0xc0\n\t el0t_64_sync+0x1a4/0x1a8\n\n'rb-\u003eaux_pages' allocated by kcalloc() is a pointer array which is used to\nmaintains AUX trace pages. The allocated page for this array is physically\ncontiguous (and virtually contiguous) with an order of 0..MAX_ORDER. If the\nsize of pointer array crosses the limitation set by MAX_ORDER, it reveals a\nWARNING.\n\nSo bail out early with -ENOMEM if the request AUX area is out of bound,\ne.g.:\n\n    #perf record -C 0 -m ,4G -e arm_spe_0// -- sleep 1\n    failed to mmap with 12 (Cannot allocate memory)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52836",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlocking/ww_mutex/test: Fix potential workqueue corruption\n\nIn some cases running with the test-ww_mutex code, I was seeing\nodd behavior where sometimes it seemed flush_workqueue was\nreturning before all the work threads were finished.\n\nOften this would cause strange crashes as the mutexes would be\nfreed while they were being used.\n\nLooking at the code, there is a lifetime problem as the\ncontrolling thread that spawns the work allocates the\n\"struct stress\" structures that are passed to the workqueue\nthreads. Then when the workqueue threads are finished,\nthey free the stress struct that was passed to them.\n\nUnfortunately the workqueue work_struct node is in the stress\nstruct. Which means the work_struct is freed before the work\nthread returns and while flush_workqueue is waiting.\n\nIt seems like a better idea to have the controlling thread\nboth allocate and free the stress structures, so that we can\nbe sure we don't corrupt the workqueue by freeing the structure\nprematurely.\n\nSo this patch reworks the test to do so, and with this change\nI no longer see the early flush_workqueue returns.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52837",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: fix uaf in nbd_open\n\nCommit 4af5f2e03013 (\"nbd: use blk_mq_alloc_disk and\nblk_cleanup_disk\") cleans up disk by blk_cleanup_disk() and it won't set\ndisk-\u003eprivate_data as NULL as before. UAF may be triggered in nbd_open()\nif someone tries to open nbd device right after nbd_put() since nbd has\nbeen free in nbd_dev_remove().\n\nFix this by implementing -\u003efree_disk and free private data in it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52838",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: imsttfb: fix a resource leak in probe\n\nI've re-written the error handling but the bug is that if init_imstt()\nfails we need to call iounmap(par-\u003ecmap_regs).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52840",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: synaptics-rmi4 - fix use after free in rmi_unregister_function()\n\nThe put_device() calls rmi_release_function() which frees \"fn\" so the\ndereference on the next line \"fn-\u003enum_of_irqs\" is a use after free.\nMove the put_device() to the end to fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52841",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vidtv: mux: Add check and kfree for kstrdup\n\nAdd check for the return value of kstrdup() and return the error\nif it fails in order to avoid NULL pointer dereference.\nMoreover, use kfree() in the later error handling in order to avoid\nmemory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52842",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio/vsock: Fix uninit-value in virtio_transport_recv_pkt()\n\nKMSAN reported the following uninit-value access issue:\n\n=====================================================\nBUG: KMSAN: uninit-value in virtio_transport_recv_pkt+0x1dfb/0x26a0 net/vmw_vsock/virtio_transport_common.c:1421\n virtio_transport_recv_pkt+0x1dfb/0x26a0 net/vmw_vsock/virtio_transport_common.c:1421\n vsock_loopback_work+0x3bb/0x5a0 net/vmw_vsock/vsock_loopback.c:120\n process_one_work kernel/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6/0x1e60 kernel/workqueue.c:2703\n worker_thread+0xeca/0x14d0 kernel/workqueue.c:2784\n kthread+0x3cc/0x520 kernel/kthread.c:388\n ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:304\n\nUninit was stored to memory at:\n virtio_transport_space_update net/vmw_vsock/virtio_transport_common.c:1274 [inline]\n virtio_transport_recv_pkt+0x1ee8/0x26a0 net/vmw_vsock/virtio_transport_common.c:1415\n vsock_loopback_work+0x3bb/0x5a0 net/vmw_vsock/vsock_loopback.c:120\n process_one_work kernel/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6/0x1e60 kernel/workqueue.c:2703\n worker_thread+0xeca/0x14d0 kernel/workqueue.c:2784\n kthread+0x3cc/0x520 kernel/kthread.c:388\n ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:304\n\nUninit was created at:\n slab_post_alloc_hook+0x105/0xad0 mm/slab.h:767\n slab_alloc_node mm/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x5a2/0xaf0 mm/slub.c:3523\n kmalloc_reserve+0x13c/0x4a0 net/core/skbuff.c:559\n __alloc_skb+0x2fd/0x770 net/core/skbuff.c:650\n alloc_skb include/linux/skbuff.h:1286 [inline]\n virtio_vsock_alloc_skb include/linux/virtio_vsock.h:66 [inline]\n virtio_transport_alloc_skb+0x90/0x11e0 net/vmw_vsock/virtio_transport_common.c:58\n virtio_transport_reset_no_sock net/vmw_vsock/virtio_transport_common.c:957 [inline]\n virtio_transport_recv_pkt+0x1279/0x26a0 net/vmw_vsock/virtio_transport_common.c:1387\n vsock_loopback_work+0x3bb/0x5a0 net/vmw_vsock/vsock_loopback.c:120\n process_one_work kernel/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6/0x1e60 kernel/workqueue.c:2703\n worker_thread+0xeca/0x14d0 kernel/workqueue.c:2784\n kthread+0x3cc/0x520 kernel/kthread.c:388\n ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:304\n\nCPU: 1 PID: 10664 Comm: kworker/1:5 Not tainted 6.6.0-rc3-00146-g9f3ebbef746f #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-1.fc38 04/01/2014\nWorkqueue: vsock-loopback vsock_loopback_work\n=====================================================\n\nThe following simple reproducer can cause the issue described above:\n\nint main(void)\n{\n  int sock;\n  struct sockaddr_vm addr = {\n    .svm_family = AF_VSOCK,\n    .svm_cid = VMADDR_CID_ANY,\n    .svm_port = 1234,\n  };\n\n  sock = socket(AF_VSOCK, SOCK_STREAM, 0);\n  connect(sock, (struct sockaddr *)\u0026addr, sizeof(addr));\n  return 0;\n}\n\nThis issue occurs because the `buf_alloc` and `fwd_cnt` fields of the\n`struct virtio_vsock_hdr` are not initialized when a new skb is allocated\nin `virtio_transport_init_hdr()`. This patch resolves the issue by\ninitializing these fields during allocation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52843",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: verify mac len before reading mac header\n\nLLC reads the mac header with eth_hdr without verifying that the skb\nhas an Ethernet header.\n\nSyzbot was able to enter llc_rcv on a tun device. Tun can insert\npackets without mac len and with user configurable skb-\u003eprotocol\n(passing a tun_pi header when not configuring IFF_NO_PI).\n\n    BUG: KMSAN: uninit-value in llc_station_ac_send_test_r net/llc/llc_station.c:81 [inline]\n    BUG: KMSAN: uninit-value in llc_station_rcv+0x6fb/0x1290 net/llc/llc_station.c:111\n    llc_station_ac_send_test_r net/llc/llc_station.c:81 [inline]\n    llc_station_rcv+0x6fb/0x1290 net/llc/llc_station.c:111\n    llc_rcv+0xc5d/0x14a0 net/llc/llc_input.c:218\n    __netif_receive_skb_one_core net/core/dev.c:5523 [inline]\n    __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5637\n    netif_receive_skb_internal net/core/dev.c:5723 [inline]\n    netif_receive_skb+0x58/0x660 net/core/dev.c:5782\n    tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1555\n    tun_get_user+0x54c5/0x69c0 drivers/net/tun.c:2002\n\nAdd a mac_len test before all three eth_hdr(skb) calls under net/llc.\n\nThere are further uses in include/net/llc_pdu.h. All these are\nprotected by a test skb-\u003eprotocol == ETH_P_802_2. Which does not\nprotect against this tun scenario.\n\nBut the mac_len test added in this patch in llc_fixup_skb will\nindirectly protect those too. That is called from llc_rcv before any\nother LLC code.\n\nIt is tempting to just add a blanket mac_len check in llc_rcv, but\nnot sure whether that could break valid LLC paths that do not assume\nan Ethernet header. 802.2 LLC may be used on top of non-802.3\nprotocols in principle. The below referenced commit shows that used\nto, on top of Token Ring.\n\nAt least one of the three eth_hdr uses goes back to before the start\nof git history. But the one that syzbot exercises is introduced in\nthis commit. That commit is old enough (2008), that effectively all\nstable kernels should receive this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52844",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vidtv: psi: Add check for kstrdup\n\nAdd check for the return value of kstrdup() and return the error\nif it fails in order to avoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52845",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Change nla_policy for bearer-related names to NLA_NUL_STRING\n\nsyzbot reported the following uninit-value access issue [1]:\n\n=====================================================\nBUG: KMSAN: uninit-value in strlen lib/string.c:418 [inline]\nBUG: KMSAN: uninit-value in strstr+0xb8/0x2f0 lib/string.c:756\n strlen lib/string.c:418 [inline]\n strstr+0xb8/0x2f0 lib/string.c:756\n tipc_nl_node_reset_link_stats+0x3ea/0xb50 net/tipc/node.c:2595\n genl_family_rcv_msg_doit net/netlink/genetlink.c:971 [inline]\n genl_family_rcv_msg net/netlink/genetlink.c:1051 [inline]\n genl_rcv_msg+0x11ec/0x1290 net/netlink/genetlink.c:1066\n netlink_rcv_skb+0x371/0x650 net/netlink/af_netlink.c:2545\n genl_rcv+0x40/0x60 net/netlink/genetlink.c:1075\n netlink_unicast_kernel net/netlink/af_netlink.c:1342 [inline]\n netlink_unicast+0xf47/0x1250 net/netlink/af_netlink.c:1368\n netlink_sendmsg+0x1238/0x13d0 net/netlink/af_netlink.c:1910\n sock_sendmsg_nosec net/socket.c:730 [inline]\n sock_sendmsg net/socket.c:753 [inline]\n ____sys_sendmsg+0x9c2/0xd60 net/socket.c:2541\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2595\n __sys_sendmsg net/socket.c:2624 [inline]\n __do_sys_sendmsg net/socket.c:2633 [inline]\n __se_sys_sendmsg net/socket.c:2631 [inline]\n __x64_sys_sendmsg+0x307/0x490 net/socket.c:2631\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nUninit was created at:\n slab_post_alloc_hook+0x12f/0xb70 mm/slab.h:767\n slab_alloc_node mm/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x577/0xa80 mm/slub.c:3523\n kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:559\n __alloc_skb+0x318/0x740 net/core/skbuff.c:650\n alloc_skb include/linux/skbuff.h:1286 [inline]\n netlink_alloc_large_skb net/netlink/af_netlink.c:1214 [inline]\n netlink_sendmsg+0xb34/0x13d0 net/netlink/af_netlink.c:1885\n sock_sendmsg_nosec net/socket.c:730 [inline]\n sock_sendmsg net/socket.c:753 [inline]\n ____sys_sendmsg+0x9c2/0xd60 net/socket.c:2541\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2595\n __sys_sendmsg net/socket.c:2624 [inline]\n __do_sys_sendmsg net/socket.c:2633 [inline]\n __se_sys_sendmsg net/socket.c:2631 [inline]\n __x64_sys_sendmsg+0x307/0x490 net/socket.c:2631\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nTIPC bearer-related names including link names must be null-terminated\nstrings. If a link name which is not null-terminated is passed through\nnetlink, strstr() and similar functions can cause buffer overrun. This\ncauses the above issue.\n\nThis patch changes the nla_policy for bearer-related names from NLA_STRING\nto NLA_NUL_STRING. This resolves the issue by ensuring that only\nnull-terminated strings are accepted as bearer-related names.\n\nsyzbot reported similar uninit-value issue related to bearer names [2]. The\nroot cause of this issue is that a non-null-terminated bearer name was\npassed. This patch also resolved this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52846",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhsr: Prevent use after free in prp_create_tagged_frame()\n\nThe prp_fill_rct() function can fail.  In that situation, it frees the\nskb and returns NULL.  Meanwhile on the success path, it returns the\noriginal skb.  So it's straight forward to fix bug by using the returned\nvalue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52847",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: bttv: fix use after free error due to btv-\u003etimeout timer\n\nThere may be some a race condition between timer function\nbttv_irq_timeout and bttv_remove. The timer is setup in\nprobe and there is no timer_delete operation in remove\nfunction. When it hit kfree btv, the function might still be\ninvoked, which will cause use after free bug.\n\nThis bug is found by static analysis, it may be false positive.\n\nFix it by adding del_timer_sync invoking to the remove function.\n\ncpu0                cpu1\n                  bttv_probe\n                    -\u003etimer_setup\n                      -\u003ebttv_set_dma\n                        -\u003emod_timer;\nbttv_remove\n  -\u003ekfree(btv);\n                  -\u003ebttv_irq_timeout\n                    -\u003eUSE btv",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/mem: Fix shutdown order\n\nIra reports that removing cxl_mock_mem causes a crash with the following\ntrace:\n\n BUG: kernel NULL pointer dereference, address: 0000000000000044\n [..]\n RIP: 0010:cxl_region_decode_reset+0x7f/0x180 [cxl_core]\n [..]\n Call Trace:\n  \u003cTASK\u003e\n  cxl_region_detach+0xe8/0x210 [cxl_core]\n  cxl_decoder_kill_region+0x27/0x40 [cxl_core]\n  cxld_unregister+0x29/0x40 [cxl_core]\n  devres_release_all+0xb8/0x110\n  device_unbind_cleanup+0xe/0x70\n  device_release_driver_internal+0x1d2/0x210\n  bus_remove_device+0xd7/0x150\n  device_del+0x155/0x3e0\n  device_unregister+0x13/0x60\n  devm_release_action+0x4d/0x90\n  ? __pfx_unregister_port+0x10/0x10 [cxl_core]\n  delete_endpoint+0x121/0x130 [cxl_core]\n  devres_release_all+0xb8/0x110\n  device_unbind_cleanup+0xe/0x70\n  device_release_driver_internal+0x1d2/0x210\n  bus_remove_device+0xd7/0x150\n  device_del+0x155/0x3e0\n  ? lock_release+0x142/0x290\n  cdev_device_del+0x15/0x50\n  cxl_memdev_unregister+0x54/0x70 [cxl_core]\n\nThis crash is due to the clearing out the cxl_memdev's driver context\n(@cxlds) before the subsystem is done with it. This is ultimately due to\nthe region(s), that this memdev is a member, being torn down and expecting\nto be able to de-reference @cxlds, like here:\n\nstatic int cxl_region_decode_reset(struct cxl_region *cxlr, int count)\n...\n                if (cxlds-\u003ercd)\n                        goto endpoint_reset;\n...\n\nFix it by keeping the driver context valid until memdev-device\nunregistration, and subsequently the entire stack of related\ndependencies, unwinds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52850",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: hantro: Check whether reset op is defined before use\n\nThe i.MX8MM/N/P does not define the .reset op since reset of the VPU is\ndone by genpd. Check whether the .reset op is defined before calling it\nto avoid NULL pointer dereference.\n\nNote that the Fixes tag is set to the commit which removed the reset op\nfrom i.MX8M Hantro G2 implementation, this is because before this commit\nall the implementations did define the .reset op.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52851",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/mlx5: Fix init stage error handling to avoid double free of same QP and UAF\n\nIn the unlikely event that workqueue allocation fails and returns NULL in\nmlx5_mkey_cache_init(), delete the call to\nmlx5r_umr_resource_cleanup() (which frees the QP) in\nmlx5_ib_stage_post_ib_reg_umr_init().  This will avoid attempted double\nfree of the same QP when __mlx5_ib_add() does its cleanup.\n\nResolves a splat:\n\n   Syzkaller reported a UAF in ib_destroy_qp_user\n\n   workqueue: Failed to create a rescuer kthread for wq \"mkey_cache\": -EINTR\n   infiniband mlx5_0: mlx5_mkey_cache_init:981:(pid 1642):\n   failed to create work queue\n   infiniband mlx5_0: mlx5_ib_stage_post_ib_reg_umr_init:4075:(pid 1642):\n   mr cache init failed -12\n   ==================================================================\n   BUG: KASAN: slab-use-after-free in ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2073)\n   Read of size 8 at addr ffff88810da310a8 by task repro_upstream/1642\n\n   Call Trace:\n   \u003cTASK\u003e\n   kasan_report (mm/kasan/report.c:590)\n   ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2073)\n   mlx5r_umr_resource_cleanup (drivers/infiniband/hw/mlx5/umr.c:198)\n   __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4178)\n   mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402)\n   ...\n   \u003c/TASK\u003e\n\n   Allocated by task 1642:\n   __kmalloc (./include/linux/kasan.h:198 mm/slab_common.c:1026\n   mm/slab_common.c:1039)\n   create_qp (./include/linux/slab.h:603 ./include/linux/slab.h:720\n   ./include/rdma/ib_verbs.h:2795 drivers/infiniband/core/verbs.c:1209)\n   ib_create_qp_kernel (drivers/infiniband/core/verbs.c:1347)\n   mlx5r_umr_resource_init (drivers/infiniband/hw/mlx5/umr.c:164)\n   mlx5_ib_stage_post_ib_reg_umr_init (drivers/infiniband/hw/mlx5/main.c:4070)\n   __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4168)\n   mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402)\n   ...\n\n   Freed by task 1642:\n   __kmem_cache_free (mm/slub.c:1826 mm/slub.c:3809 mm/slub.c:3822)\n   ib_destroy_qp_user (drivers/infiniband/core/verbs.c:2112)\n   mlx5r_umr_resource_cleanup (drivers/infiniband/hw/mlx5/umr.c:198)\n   mlx5_ib_stage_post_ib_reg_umr_init (drivers/infiniband/hw/mlx5/main.c:4076\n   drivers/infiniband/hw/mlx5/main.c:4065)\n   __mlx5_ib_add (drivers/infiniband/hw/mlx5/main.c:4168)\n   mlx5r_probe (drivers/infiniband/hw/mlx5/main.c:4402)\n   ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhid: cp2112: Fix duplicate workqueue initialization\n\nPreviously the cp2112 driver called INIT_DELAYED_WORK within\ncp2112_gpio_irq_startup, resulting in duplicate initilizations of the\nworkqueue on subsequent IRQ startups following an initial request. This\nresulted in a warning in set_work_data in workqueue.c, as well as a rare\nNULL dereference within process_one_work in workqueue.c.\n\nInitialize the workqueue within _probe instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npadata: Fix refcnt handling in padata_free_shell()\n\nIn a high-load arm64 environment, the pcrypt_aead01 test in LTP can lead\nto system UAF (Use-After-Free) issues. Due to the lengthy analysis of\nthe pcrypt_aead01 function call, I'll describe the problem scenario\nusing a simplified model:\n\nSuppose there's a user of padata named `user_function` that adheres to\nthe padata requirement of calling `padata_free_shell` after `serial()`\nhas been invoked, as demonstrated in the following code:\n\n```c\nstruct request {\n    struct padata_priv padata;\n    struct completion *done;\n};\n\nvoid parallel(struct padata_priv *padata) {\n    do_something();\n}\n\nvoid serial(struct padata_priv *padata) {\n    struct request *request = container_of(padata,\n    \t\t\t\tstruct request,\n\t\t\t\tpadata);\n    complete(request-\u003edone);\n}\n\nvoid user_function() {\n    DECLARE_COMPLETION(done)\n    padata-\u003eparallel = parallel;\n    padata-\u003eserial = serial;\n    padata_do_parallel();\n    wait_for_completion(\u0026done);\n    padata_free_shell();\n}\n```\n\nIn the corresponding padata.c file, there's the following code:\n\n```c\nstatic void padata_serial_worker(struct work_struct *serial_work) {\n    ...\n    cnt = 0;\n\n    while (!list_empty(\u0026local_list)) {\n        ...\n        padata-\u003eserial(padata);\n        cnt++;\n    }\n\n    local_bh_enable();\n\n    if (refcount_sub_and_test(cnt, \u0026pd-\u003erefcnt))\n        padata_free_pd(pd);\n}\n```\n\nBecause of the high system load and the accumulation of unexecuted\nsoftirq at this moment, `local_bh_enable()` in padata takes longer\nto execute than usual. Subsequently, when accessing `pd-\u003erefcnt`,\n`pd` has already been released by `padata_free_shell()`, resulting\nin a UAF issue with `pd-\u003erefcnt`.\n\nThe fix is straightforward: add `refcount_dec_and_test` before calling\n`padata_free_pd` in `padata_free_shell`.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52855",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: fix possible NULL pointer dereference caused by driver concurrency\n\nIn _dwc2_hcd_urb_enqueue(), \"urb-\u003ehcpriv = NULL\" is executed without\nholding the lock \"hsotg-\u003elock\". In _dwc2_hcd_urb_dequeue():\n\n    spin_lock_irqsave(\u0026hsotg-\u003elock, flags);\n    ...\n\tif (!urb-\u003ehcpriv) {\n\t\tdev_dbg(hsotg-\u003edev, \"## urb-\u003ehcpriv is NULL ##\\n\");\n\t\tgoto out;\n\t}\n    rc = dwc2_hcd_urb_dequeue(hsotg, urb-\u003ehcpriv); // Use urb-\u003ehcpriv\n    ...\nout:\n    spin_unlock_irqrestore(\u0026hsotg-\u003elock, flags);\n\nWhen _dwc2_hcd_urb_enqueue() and _dwc2_hcd_urb_dequeue() are\nconcurrently executed, the NULL check of \"urb-\u003ehcpriv\" can be executed\nbefore \"urb-\u003ehcpriv = NULL\". After urb-\u003ehcpriv is NULL, it can be used\nin the function call to dwc2_hcd_urb_dequeue(), which can cause a NULL\npointer dereference.\n\nThis possible bug is found by an experimental static analysis tool\ndeveloped by myself. This tool analyzes the locking APIs to extract\nfunction pairs that can be concurrently executed, and then analyzes the\ninstructions in the paired functions to identify possible concurrency\nbugs including data races and atomicity violations. The above possible\nbug is reported, when my tool analyzes the source code of Linux 6.5.\n\nTo fix this possible bug, \"urb-\u003ehcpriv = NULL\" should be executed with\nholding the lock \"hsotg-\u003elock\". After using this patch, my tool never\nreports the possible bug, with the kernelconfiguration allyesconfig for\nx86_64. Because I have no associated hardware, I cannot test the patch\nin runtime testing, and just verify it according to the code logic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52856",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/bridge: lt8912b: Fix crash on bridge detach\n\nThe lt8912b driver, in its bridge detach function, calls\ndrm_connector_unregister() and drm_connector_cleanup().\n\ndrm_connector_unregister() should be called only for connectors\nexplicitly registered with drm_connector_register(), which is not the\ncase in lt8912b.\n\nThe driver's drm_connector_funcs.destroy hook is set to\ndrm_connector_cleanup().\n\nThus the driver should not call either drm_connector_unregister() nor\ndrm_connector_cleanup() in its lt8912_bridge_detach(), as they cause a\ncrash on bridge detach:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000000\nMem abort info:\n  ESR = 0x0000000096000006\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x06: level 2 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000006, ISS2 = 0x00000000\n  CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n  GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\nuser pgtable: 4k pages, 48-bit VAs, pgdp=00000000858f3000\n[0000000000000000] pgd=0800000085918003, p4d=0800000085918003, pud=0800000085431003, pmd=0000000000000000\nInternal error: Oops: 0000000096000006 [#1] PREEMPT SMP\nModules linked in: tidss(-) display_connector lontium_lt8912b tc358768 panel_lvds panel_simple drm_dma_helper drm_kms_helper drm drm_panel_orientation_quirks\nCPU: 3 PID: 462 Comm: rmmod Tainted: G        W          6.5.0-rc2+ #2\nHardware name: Toradex Verdin AM62 on Verdin Development Board (DT)\npstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : drm_connector_cleanup+0x78/0x2d4 [drm]\nlr : lt8912_bridge_detach+0x54/0x6c [lontium_lt8912b]\nsp : ffff800082ed3a90\nx29: ffff800082ed3a90 x28: ffff0000040c1940 x27: 0000000000000000\nx26: 0000000000000000 x25: dead000000000122 x24: dead000000000122\nx23: dead000000000100 x22: ffff000003fb6388 x21: 0000000000000000\nx20: 0000000000000000 x19: ffff000003fb6260 x18: fffffffffffe56e8\nx17: 0000000000000000 x16: 0010000000000000 x15: 0000000000000038\nx14: 0000000000000000 x13: ffff800081914b48 x12: 000000000000040e\nx11: 000000000000015a x10: ffff80008196ebb8 x9 : ffff800081914b48\nx8 : 00000000ffffefff x7 : ffff0000040c1940 x6 : ffff80007aa649d0\nx5 : 0000000000000000 x4 : 0000000000000001 x3 : ffff80008159e008\nx2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000\nCall trace:\n drm_connector_cleanup+0x78/0x2d4 [drm]\n lt8912_bridge_detach+0x54/0x6c [lontium_lt8912b]\n drm_bridge_detach+0x44/0x84 [drm]\n drm_encoder_cleanup+0x40/0xb8 [drm]\n drmm_encoder_alloc_release+0x1c/0x30 [drm]\n drm_managed_release+0xac/0x148 [drm]\n drm_dev_put.part.0+0x88/0xb8 [drm]\n devm_drm_dev_init_release+0x14/0x24 [drm]\n devm_action_release+0x14/0x20\n release_nodes+0x5c/0x90\n devres_release_all+0x8c/0xe0\n device_unbind_cleanup+0x18/0x68\n device_release_driver_internal+0x208/0x23c\n driver_detach+0x4c/0x94\n bus_remove_driver+0x70/0xf4\n driver_unregister+0x30/0x60\n platform_driver_unregister+0x14/0x20\n tidss_platform_driver_exit+0x18/0xb2c [tidss]\n __arm64_sys_delete_module+0x1a0/0x2b4\n invoke_syscall+0x48/0x110\n el0_svc_common.constprop.0+0x60/0x10c\n do_el0_svc_compat+0x1c/0x40\n el0_svc_compat+0x40/0xac\n el0t_32_sync_handler+0xb0/0x138\n el0t_32_sync+0x194/0x198\nCode: 9104a276 f2fbd5b7 aa0203e1 91008af8 (f85c0420)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Fix coverity issue with unintentional integer overflow\n\n1. Instead of multiplying 2 variable of different types. Change to\nassign a value of one variable and then multiply the other variable.\n\n2. Add a int variable for multiplier calculation instead of calculating\ndifferent types multiplier with dma_addr_t variable directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52858",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt7629: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/perf: hisi: use cpuhp_state_remove_instance_nocalls() for hisi_hns3_pmu uninit process\n\nWhen tearing down a 'hisi_hns3' PMU, we mistakenly run the CPU hotplug\ncallbacks after the device has been unregistered, leading to fireworks\nwhen we try to execute empty function callbacks within the driver:\n\n  | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n  | CPU: 0 PID: 15 Comm: cpuhp/0 Tainted: G        W  O      5.12.0-rc4+ #1\n  | Hardware name:  , BIOS KpxxxFPGA 1P B600 V143 04/22/2021\n  | pstate: 80400009 (Nzcv daif +PAN -UAO -TCO BTYPE=--)\n  | pc : perf_pmu_migrate_context+0x98/0x38c\n  | lr : perf_pmu_migrate_context+0x94/0x38c\n  |\n  | Call trace:\n  |  perf_pmu_migrate_context+0x98/0x38c\n  |  hisi_hns3_pmu_offline_cpu+0x104/0x12c [hisi_hns3_pmu]\n\nUse cpuhp_state_remove_instance_nocalls() instead of\ncpuhp_state_remove_instance() so that the notifiers don't execute after\nthe PMU device has been unregistered.\n\n[will: Rewrote commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge: it66121: Fix invalid connector dereference\n\nFix the NULL pointer dereference when no monitor is connected, and the\nsound card is opened from userspace.\n\nInstead return an empty buffer (of zeroes) as the EDID information to\nthe sound framework if there is no connector attached.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52862",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix null pointer dereference in error message\n\nThis patch fixes a null pointer dereference in the error message that is\nprinted when the Display Core (DC) fails to initialize. The original\nmessage includes the DC version number, which is undefined if the DC is\nnot initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (axi-fan-control) Fix possible NULL pointer dereference\n\naxi_fan_control_irq_handler(), dependent on the private\naxi_fan_control_data structure, might be called before the hwmon\ndevice is registered. That will cause an \"Unable to handle kernel\nNULL pointer dereference\" error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52864",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: wmi: Fix opening of char device\n\nSince commit fa1f68db6ca7 (\"drivers: misc: pass miscdevice pointer via\nfile private data\"), the miscdevice stores a pointer to itself inside\nfilp-\u003eprivate_data, which means that private_data will not be NULL when\nwmi_char_open() is called. This might cause memory corruption should\nwmi_char_open() be unable to find its driver, something which can\nhappen when the associated WMI device is deleted in wmi_free_devices().\n\nFix the problem by using the miscdevice pointer to retrieve the WMI\ndevice data associated with a char device using container_of(). This\nalso avoids wmi_char_open() picking a wrong WMI device bound to a\ndriver with the same name as the original driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6797: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52866",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: uclogic: Fix user-memory-access bug in uclogic_params_ugee_v2_init_event_hooks()\n\nWhen CONFIG_HID_UCLOGIC=y and CONFIG_KUNIT_ALL_TESTS=y, launch kernel and\nthen the below user-memory-access bug occurs.\n\nIn hid_test_uclogic_params_cleanup_event_hooks(),it call\nuclogic_params_ugee_v2_init_event_hooks() with the first arg=NULL, so\nwhen it calls uclogic_params_ugee_v2_has_battery(), the hid_get_drvdata()\nwill access hdev-\u003edev with hdev=NULL, which will cause below\nuser-memory-access.\n\nSo add a fake_device with quirks member and call hid_set_drvdata()\nto assign hdev-\u003edev-\u003edriver_data which avoids the null-ptr-def bug\nfor drvdata-\u003equirks in uclogic_params_ugee_v2_has_battery(). After applying\nthis patch, the below user-memory-access bug never occurs.\n\n general protection fault, probably for non-canonical address 0xdffffc0000000329: 0000 [#1] PREEMPT SMP KASAN\n KASAN: probably user-memory-access in range [0x0000000000001948-0x000000000000194f]\n CPU: 5 PID: 2189 Comm: kunit_try_catch Tainted: G    B   W        N 6.6.0-rc2+ #30\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n RIP: 0010:uclogic_params_ugee_v2_init_event_hooks+0x87/0x600\n Code: f3 f3 65 48 8b 14 25 28 00 00 00 48 89 54 24 60 31 d2 48 89 fa c7 44 24 30 00 00 00 00 48 c7 44 24 28 02 f8 02 01 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 2c 04 00 00 48 8b 9d 48 19 00 00 48 b8 00 00 00\n RSP: 0000:ffff88810679fc88 EFLAGS: 00010202\n RAX: dffffc0000000000 RBX: 0000000000000004 RCX: 0000000000000000\n RDX: 0000000000000329 RSI: ffff88810679fd88 RDI: 0000000000001948\n RBP: 0000000000000000 R08: 0000000000000000 R09: ffffed1020f639f0\n R10: ffff888107b1cf87 R11: 0000000000000400 R12: 1ffff11020cf3f92\n R13: ffff88810679fd88 R14: ffff888100b97b08 R15: ffff8881030bb080\n FS:  0000000000000000(0000) GS:ffff888119e80000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000000005286001 CR4: 0000000000770ee0\n DR0: ffffffff8fdd6cf4 DR1: ffffffff8fdd6cf5 DR2: ffffffff8fdd6cf6\n DR3: ffffffff8fdd6cf7 DR6: 00000000fffe0ff0 DR7: 0000000000000600\n PKRU: 55555554\n Call Trace:\n  \u003cTASK\u003e\n  ? die_addr+0x3d/0xa0\n  ? exc_general_protection+0x144/0x220\n  ? asm_exc_general_protection+0x22/0x30\n  ? uclogic_params_ugee_v2_init_event_hooks+0x87/0x600\n  ? sched_clock_cpu+0x69/0x550\n  ? uclogic_parse_ugee_v2_desc_gen_params+0x70/0x70\n  ? load_balance+0x2950/0x2950\n  ? rcu_trc_cmpxchg_need_qs+0x67/0xa0\n  hid_test_uclogic_params_cleanup_event_hooks+0x9e/0x1a0\n  ? uclogic_params_ugee_v2_init_event_hooks+0x600/0x600\n  ? __switch_to+0x5cf/0xe60\n  ? migrate_enable+0x260/0x260\n  ? __kthread_parkme+0x83/0x150\n  ? kunit_try_run_case_cleanup+0xe0/0xe0\n  kunit_generic_run_threadfn_adapter+0x4a/0x90\n  ? kunit_try_catch_throw+0x80/0x80\n  kthread+0x2b5/0x380\n  ? kthread_complete_and_exit+0x20/0x20\n  ret_from_fork+0x2d/0x70\n  ? kthread_complete_and_exit+0x20/0x20\n  ret_from_fork_asm+0x11/0x20\n  \u003c/TASK\u003e\n Modules linked in:\n Dumping ftrace buffer:\n    (ftrace buffer empty)\n ---[ end trace 0000000000000000 ]---\n RIP: 0010:uclogic_params_ugee_v2_init_event_hooks+0x87/0x600\n Code: f3 f3 65 48 8b 14 25 28 00 00 00 48 89 54 24 60 31 d2 48 89 fa c7 44 24 30 00 00 00 00 48 c7 44 24 28 02 f8 02 01 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 2c 04 00 00 48 8b 9d 48 19 00 00 48 b8 00 00 00\n RSP: 0000:ffff88810679fc88 EFLAGS: 00010202\n RAX: dffffc0000000000 RBX: 0000000000000004 RCX: 0000000000000000\n RDX: 0000000000000329 RSI: ffff88810679fd88 RDI: 0000000000001948\n RBP: 0000000000000000 R08: 0000000000000000 R09: ffffed1020f639f0\n R10: ffff888107b1cf87 R11: 0000000000000400 R12: 1ffff11020cf3f92\n R13: ffff88810679fd88 R14: ffff888100b97b08 R15: ffff8881030bb080\n FS:  0000000000000000(0000) GS:ffff888119e80000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000000005286001 CR4: 0000000000770ee0\n DR0: ffffffff8fdd6cf4 DR1: \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: possible buffer overflow\n\nBuffer 'afmt_status' of size 6 could overflow, since index 'afmt_idx' is\nchecked after access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: core: prevent potential string overflow\n\nThe dev-\u003eid value comes from ida_alloc() so it's a number between zero\nand INT_MAX.  If it's too high then these sprintf()s will overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52869",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npstore/platform: Add check for kstrdup\n\nAdd check for the return value of kstrdup() and return the error\nif it fails in order to avoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6765: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52871",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: llcc: Handle a second device without data corruption\n\nUsually there is only one llcc device. But if there were a second, even\na failed probe call would modify the global drv_data pointer. So check\nif drv_data is valid before overwriting it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52872",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix race condition in status line change on dead connections\n\ngsm_cleanup_mux() cleans up the gsm by closing all DLCIs, stopping all\ntimers, removing the virtual tty devices and clearing the data queues.\nThis procedure, however, may cause subsequent changes of the virtual modem\nstatus lines of a DLCI. More data is being added the outgoing data queue\nand the deleted kick timer is restarted to handle this. At this point many\nresources have already been removed by the cleanup procedure. Thus, a\nkernel panic occurs.\n\nFix this by proving in gsm_modem_update() that the cleanup procedure has\nnot been started and the mux is still alive.\n\nNote that writing to a virtual tty is already protected by checks against\nthe DLCI specific connection state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52873",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6779: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52874",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/tdx: Zero out the missing RSI in TDX_HYPERCALL macro\n\nIn the TDX_HYPERCALL asm, after the TDCALL instruction returns from the\nuntrusted VMM, the registers that the TDX guest shares to the VMM need\nto be cleared to avoid speculative execution of VMM-provided values.\n\nRSI is specified in the bitmap of those registers, but it is missing\nwhen zeroing out those registers in the current TDX_HYPERCALL.\n\nIt was there when it was originally added in commit 752d13305c78\n(\"x86/tdx: Expand __tdx_hypercall() to handle more arguments\"), but was\nlater removed in commit 1e70c680375a (\"x86/tdx: Do not corrupt\nframe-pointer in __tdx_hypercall()\"), which was correct because %rsi is\nlater restored in the \"pop %rsi\".  However a later commit 7a3a401874be\n(\"x86/tdx: Drop flags from __tdx_hypercall()\") removed that \"pop %rsi\"\nbut forgot to add the \"xor %rsi, %rsi\" back.\n\nFix by adding it back.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52875",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt2701: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52876",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt7629-eth: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52877",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: Fix NULL pointer dereference in tcpm_pd_svdm()\n\nIt is possible that typec_register_partner() returns ERR_PTR on failure.\nWhen port-\u003epartner is an error, a NULL pointer dereference may occur as\nshown below.\n\n[91222.095236][  T319] typec port0: failed to register partner (-17)\n...\n[91225.061491][  T319] Unable to handle kernel NULL pointer dereference\nat virtual address 000000000000039f\n[91225.274642][  T319] pc : tcpm_pd_data_request+0x310/0x13fc\n[91225.274646][  T319] lr : tcpm_pd_data_request+0x298/0x13fc\n[91225.308067][  T319] Call trace:\n[91225.308070][  T319]  tcpm_pd_data_request+0x310/0x13fc\n[91225.308073][  T319]  tcpm_pd_rx_handler+0x100/0x9e8\n[91225.355900][  T319]  kthread_worker_fn+0x178/0x58c\n[91225.355902][  T319]  kthread+0x150/0x200\n[91225.355905][  T319]  ret_from_fork+0x10/0x30\n\nAdd a check for port-\u003epartner to avoid dereferencing a NULL pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52878",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: dev: can_put_echo_skb(): don't crash kernel if can_priv::echo_skb is accessed out of bounds\n\nIf the \"struct can_priv::echoo_skb\" is accessed out of bounds, this\nwould cause a kernel crash. Instead, issue a meaningful warning\nmessage and return with an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52879",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Have trace_event_file have ref counters\n\nThe following can crash the kernel:\n\n # cd /sys/kernel/tracing\n # echo 'p:sched schedule' \u003e kprobe_events\n # exec 5\u003e\u003eevents/kprobes/sched/enable\n # \u003e kprobe_events\n # exec 5\u003e\u0026-\n\nThe above commands:\n\n 1. Change directory to the tracefs directory\n 2. Create a kprobe event (doesn't matter what one)\n 3. Open bash file descriptor 5 on the enable file of the kprobe event\n 4. Delete the kprobe event (removes the files too)\n 5. Close the bash file descriptor 5\n\nThe above causes a crash!\n\n BUG: kernel NULL pointer dereference, address: 0000000000000028\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP PTI\n CPU: 6 PID: 877 Comm: bash Not tainted 6.5.0-rc4-test-00008-g2c6b6b1029d4-dirty #186\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.2-debian-1.16.2-1 04/01/2014\n RIP: 0010:tracing_release_file_tr+0xc/0x50\n\nWhat happens here is that the kprobe event creates a trace_event_file\n\"file\" descriptor that represents the file in tracefs to the event. It\nmaintains state of the event (is it enabled for the given instance?).\nOpening the \"enable\" file gets a reference to the event \"file\" descriptor\nvia the open file descriptor. When the kprobe event is deleted, the file is\nalso deleted from the tracefs system which also frees the event \"file\"\ndescriptor.\n\nBut as the tracefs file is still opened by user space, it will not be\ntotally removed until the final dput() is called on it. But this is not\ntrue with the event \"file\" descriptor that is already freed. If the user\ndoes a write to or simply closes the file descriptor it will reference the\nevent \"file\" descriptor that was just freed, causing a use-after-free bug.\n\nTo solve this, add a ref count to the event \"file\" descriptor as well as a\nnew flag called \"FREED\". The \"file\" will not be freed until the last\nreference is released. But the FREE flag will be set when the event is\nremoved to prevent any more modifications to that event from happening,\neven if there's still a reference to the event \"file\" descriptor.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: require CAP_NET_ADMIN to attach N_GSM0710 ldisc\n\nAny unprivileged user can attach N_GSM0710 ldisc, but it requires\nCAP_NET_ADMIN to create a GSM network anyway.\n\nRequire initial namespace CAP_NET_ADMIN to do that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: do not accept ACK of bytes we never sent\n\nThis patch is based on a detailed report and ideas from Yepeng Pan\nand Christian Rossow.\n\nACK seq validation is currently following RFC 5961 5.2 guidelines:\n\n   The ACK value is considered acceptable only if\n   it is in the range of ((SND.UNA - MAX.SND.WND) \u003c= SEG.ACK \u003c=\n   SND.NXT).  All incoming segments whose ACK value doesn't satisfy the\n   above condition MUST be discarded and an ACK sent back.  It needs to\n   be noted that RFC 793 on page 72 (fifth check) says: \"If the ACK is a\n   duplicate (SEG.ACK \u003c SND.UNA), it can be ignored.  If the ACK\n   acknowledges something not yet sent (SEG.ACK \u003e SND.NXT) then send an\n   ACK, drop the segment, and return\".  The \"ignored\" above implies that\n   the processing of the incoming data segment continues, which means\n   the ACK value is treated as acceptable.  This mitigation makes the\n   ACK check more stringent since any ACK \u003c SND.UNA wouldn't be\n   accepted, instead only ACKs that are in the range ((SND.UNA -\n   MAX.SND.WND) \u003c= SEG.ACK \u003c= SND.NXT) get through.\n\nThis can be refined for new (and possibly spoofed) flows,\nby not accepting ACK for bytes that were never sent.\n\nThis greatly improves TCP security at a little cost.\n\nI added a Fixes: tag to make sure this patch will reach stable trees,\neven if the 'blamed' patch was adhering to the RFC.\n\ntp-\u003ebytes_acked was added in linux-4.2\n\nFollowing packetdrill test (courtesy of Yepeng Pan) shows\nthe issue at hand:\n\n0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3\n+0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0\n+0 bind(3, ..., ...) = 0\n+0 listen(3, 1024) = 0\n\n// ---------------- Handshake ------------------- //\n\n// when window scale is set to 14 the window size can be extended to\n// 65535 * (2^14) = 1073725440. Linux would accept an ACK packet\n// with ack number in (Server_ISN+1-1073725440. Server_ISN+1)\n// ,though this ack number acknowledges some data never\n// sent by the server.\n\n+0 \u003c S 0:0(0) win 65535 \u003cmss 1400,nop,wscale 14\u003e\n+0 \u003e S. 0:0(0) ack 1 \u003c...\u003e\n+0 \u003c . 1:1(0) ack 1 win 65535\n+0 accept(3, ..., ...) = 4\n\n// For the established connection, we send an ACK packet,\n// the ack packet uses ack number 1 - 1073725300 + 2^32,\n// where 2^32 is used to wrap around.\n// Note: we used 1073725300 instead of 1073725440 to avoid possible\n// edge cases.\n// 1 - 1073725300 + 2^32 = 3221241997\n\n// Oops, old kernels happily accept this packet.\n+0 \u003c . 1:1001(1000) ack 3221241997 win 65535\n\n// After the kernel fix the following will be replaced by a challenge ACK,\n// and prior malicious frame would be dropped.\n+0 \u003e . 1:1(0) ack 1001",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52882",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: sunxi-ng: h6: Reparent CPUX during PLL CPUX rate change\n\nWhile PLL CPUX clock rate change when CPU is running from it works in\nvast majority of cases, now and then it causes instability. This leads\nto system crashes and other undefined behaviour. After a lot of testing\n(30+ hours) while also doing a lot of frequency switches, we can't\nobserve any instability issues anymore when doing reparenting to stable\nclock like 24 MHz oscillator.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52883",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix possible null pointer dereference\n\nabo-\u003etbo.resource may be NULL in amdgpu_vm_bo_update.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: cyapa - add missing input core locking to suspend/resume functions\n\nGrab input-\u003emutex during suspend/resume functions like it is done in\nother input drivers. This fixes the following warning during system\nsuspend/resume cycle on Samsung Exynos5250-based Snow Chromebook:\n\n------------[ cut here ]------------\nWARNING: CPU: 1 PID: 1680 at drivers/input/input.c:2291 input_device_enabled+0x68/0x6c\nModules linked in: ...\nCPU: 1 PID: 1680 Comm: kworker/u4:12 Tainted: G        W          6.6.0-rc5-next-20231009 #14109\nHardware name: Samsung Exynos (Flattened Device Tree)\nWorkqueue: events_unbound async_run_entry_fn\n unwind_backtrace from show_stack+0x10/0x14\n show_stack from dump_stack_lvl+0x58/0x70\n dump_stack_lvl from __warn+0x1a8/0x1cc\n __warn from warn_slowpath_fmt+0x18c/0x1b4\n warn_slowpath_fmt from input_device_enabled+0x68/0x6c\n input_device_enabled from cyapa_gen3_set_power_mode+0x13c/0x1dc\n cyapa_gen3_set_power_mode from cyapa_reinitialize+0x10c/0x15c\n cyapa_reinitialize from cyapa_resume+0x48/0x98\n cyapa_resume from dpm_run_callback+0x90/0x298\n dpm_run_callback from device_resume+0xb4/0x258\n device_resume from async_resume+0x20/0x64\n async_resume from async_run_entry_fn+0x40/0x15c\n async_run_entry_fn from process_scheduled_works+0xbc/0x6a8\n process_scheduled_works from worker_thread+0x188/0x454\n worker_thread from kthread+0x108/0x140\n kthread from ret_from_fork+0x14/0x28\nException stack(0xf1625fb0 to 0xf1625ff8)\n...\n---[ end trace 0000000000000000 ]---\n...\n------------[ cut here ]------------\nWARNING: CPU: 1 PID: 1680 at drivers/input/input.c:2291 input_device_enabled+0x68/0x6c\nModules linked in: ...\nCPU: 1 PID: 1680 Comm: kworker/u4:12 Tainted: G        W          6.6.0-rc5-next-20231009 #14109\nHardware name: Samsung Exynos (Flattened Device Tree)\nWorkqueue: events_unbound async_run_entry_fn\n unwind_backtrace from show_stack+0x10/0x14\n show_stack from dump_stack_lvl+0x58/0x70\n dump_stack_lvl from __warn+0x1a8/0x1cc\n __warn from warn_slowpath_fmt+0x18c/0x1b4\n warn_slowpath_fmt from input_device_enabled+0x68/0x6c\n input_device_enabled from cyapa_gen3_set_power_mode+0x13c/0x1dc\n cyapa_gen3_set_power_mode from cyapa_reinitialize+0x10c/0x15c\n cyapa_reinitialize from cyapa_resume+0x48/0x98\n cyapa_resume from dpm_run_callback+0x90/0x298\n dpm_run_callback from device_resume+0xb4/0x258\n device_resume from async_resume+0x20/0x64\n async_resume from async_run_entry_fn+0x40/0x15c\n async_run_entry_fn from process_scheduled_works+0xbc/0x6a8\n process_scheduled_works from worker_thread+0x188/0x454\n worker_thread from kthread+0x108/0x140\n kthread from ret_from_fork+0x14/0x28\nException stack(0xf1625fb0 to 0xf1625ff8)\n...\n---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6238",
      "Description": "A buffer overflow vulnerability was found in the NVM Express (NVMe) driver in the Linux kernel. Only privileged user could specify a small meta buffer and let the device perform larger Direct Memory Access (DMA) into the same buffer, overwriting unrelated kernel memory, causing random kernel crashes and memory corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6531",
      "Description": "A use-after-free flaw was found in the Linux Kernel due to a race problem in the unix garbage collector's deletion of SKB races with unix_stream_read_generic() on the socket that the SKB is queued on.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0397",
      "Description": "A defect was discovered in the Python \"ssl\" module where there is a memory\nrace condition with the ssl.SSLContext methods \"cert_store_stats()\" and\n\"get_ca_certs()\". The race condition can be triggered if the methods are\ncalled at the same time as certificates are loaded into the SSLContext,\nsuch as during the TLS handshake with a certificate directory configured.\nThis issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0450",
      "Description": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to \"quoted-overlap\" zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0639",
      "Description": "A denial of service vulnerability due to a deadlock was found in sctp_auto_asconf_init in net/sctp/socket.c in the Linux kernel's SCTP subsystem. This flaw allows guests with local user privileges to trigger a deadlock and potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2004",
      "Description": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-21823",
      "Description": "Hardware logic with insecure de-synchronization in Intel(R) DSA and Intel(R) IAA for some Intel(R) 4th or 5th generation Xeon(R) processors may allow an authorized user to potentially enable escalation of privilege local access",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-22099",
      "Description": "NULL Pointer Dereference vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (net, bluetooth modules) allows Overflow Buffers. This vulnerability is associated with program files /net/bluetooth/rfcomm/core.C.\n\nThis issue affects Linux kernel: v2.6.12-rc2.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2379",
      "Description": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2398",
      "Description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2466",
      "Description": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-25741",
      "Description": "printer_write in drivers/usb/gadget/function/f_printer.c in the Linux kernel through 6.7.4 does not properly call usb_ep_queue, which might allow attackers to cause a denial of service or have unspecified other impact.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26482",
      "Description": "** DISPUTED ** An HTML injection vulnerability exists in the Edit Content Layout module of Kirby CMS v4.1.0. NOTE: the vendor disputes the significance of this report because some HTML formatting (such as with an H1 element) is allowed, but there is backend sanitization such that the reporter's mentioned \"injecting malicious scripts\" would not occur.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26611",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: fix usage of multi-buffer BPF helpers for ZC XDP\n\nCurrently when packet is shrunk via bpf_xdp_adjust_tail() and memory\ntype is set to MEM_TYPE_XSK_BUFF_POOL, null ptr dereference happens:\n\n[1136314.192256] BUG: kernel NULL pointer dereference, address:\n0000000000000034\n[1136314.203943] #PF: supervisor read access in kernel mode\n[1136314.213768] #PF: error_code(0x0000) - not-present page\n[1136314.223550] PGD 0 P4D 0\n[1136314.230684] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[1136314.239621] CPU: 8 PID: 54203 Comm: xdpsock Not tainted 6.6.0+ #257\n[1136314.250469] Hardware name: Intel Corporation S2600WFT/S2600WFT,\nBIOS SE5C620.86B.02.01.0008.031920191559 03/19/2019\n[1136314.265615] RIP: 0010:__xdp_return+0x6c/0x210\n[1136314.274653] Code: ad 00 48 8b 47 08 49 89 f8 a8 01 0f 85 9b 01 00 00 0f 1f 44 00 00 f0 41 ff 48 34 75 32 4c 89 c7 e9 79 cd 80 ff 83 fe 03 75 17 \u003cf6\u003e 41 34 01 0f 85 02 01 00 00 48 89 cf e9 22 cc 1e 00 e9 3d d2 86\n[1136314.302907] RSP: 0018:ffffc900089f8db0 EFLAGS: 00010246\n[1136314.312967] RAX: ffffc9003168aed0 RBX: ffff8881c3300000 RCX:\n0000000000000000\n[1136314.324953] RDX: 0000000000000000 RSI: 0000000000000003 RDI:\nffffc9003168c000\n[1136314.336929] RBP: 0000000000000ae0 R08: 0000000000000002 R09:\n0000000000010000\n[1136314.348844] R10: ffffc9000e495000 R11: 0000000000000040 R12:\n0000000000000001\n[1136314.360706] R13: 0000000000000524 R14: ffffc9003168aec0 R15:\n0000000000000001\n[1136314.373298] FS:  00007f8df8bbcb80(0000) GS:ffff8897e0e00000(0000)\nknlGS:0000000000000000\n[1136314.386105] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[1136314.396532] CR2: 0000000000000034 CR3: 00000001aa912002 CR4:\n00000000007706f0\n[1136314.408377] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[1136314.420173] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[1136314.431890] PKRU: 55555554\n[1136314.439143] Call Trace:\n[1136314.446058]  \u003cIRQ\u003e\n[1136314.452465]  ? __die+0x20/0x70\n[1136314.459881]  ? page_fault_oops+0x15b/0x440\n[1136314.468305]  ? exc_page_fault+0x6a/0x150\n[1136314.476491]  ? asm_exc_page_fault+0x22/0x30\n[1136314.484927]  ? __xdp_return+0x6c/0x210\n[1136314.492863]  bpf_xdp_adjust_tail+0x155/0x1d0\n[1136314.501269]  bpf_prog_ccc47ae29d3b6570_xdp_sock_prog+0x15/0x60\n[1136314.511263]  ice_clean_rx_irq_zc+0x206/0xc60 [ice]\n[1136314.520222]  ? ice_xmit_zc+0x6e/0x150 [ice]\n[1136314.528506]  ice_napi_poll+0x467/0x670 [ice]\n[1136314.536858]  ? ttwu_do_activate.constprop.0+0x8f/0x1a0\n[1136314.546010]  __napi_poll+0x29/0x1b0\n[1136314.553462]  net_rx_action+0x133/0x270\n[1136314.561619]  __do_softirq+0xbe/0x28e\n[1136314.569303]  do_softirq+0x3f/0x60\n\nThis comes from __xdp_return() call with xdp_buff argument passed as\nNULL which is supposed to be consumed by xsk_buff_free() call.\n\nTo address this properly, in ZC case, a node that represents the frag\nbeing removed has to be pulled out of xskb_list. Introduce\nappropriate xsk helpers to do such node operation and use them\naccordingly within bpf_xdp_adjust_tail().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26615",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: fix illegal rmb_desc access in SMC-D connection dump\n\nA crash was found when dumping SMC-D connections. It can be reproduced\nby following steps:\n\n- run nginx/wrk test:\n  smc_run nginx\n  smc_run wrk -t 16 -c 1000 -d \u003cduration\u003e -H 'Connection: Close' \u003cURL\u003e\n\n- continuously dump SMC-D connections in parallel:\n  watch -n 1 'smcss -D'\n\n BUG: kernel NULL pointer dereference, address: 0000000000000030\n CPU: 2 PID: 7204 Comm: smcss Kdump: loaded Tainted: G\tE      6.7.0+ #55\n RIP: 0010:__smc_diag_dump.constprop.0+0x5e5/0x620 [smc_diag]\n Call Trace:\n  \u003cTASK\u003e\n  ? __die+0x24/0x70\n  ? page_fault_oops+0x66/0x150\n  ? exc_page_fault+0x69/0x140\n  ? asm_exc_page_fault+0x26/0x30\n  ? __smc_diag_dump.constprop.0+0x5e5/0x620 [smc_diag]\n  ? __kmalloc_node_track_caller+0x35d/0x430\n  ? __alloc_skb+0x77/0x170\n  smc_diag_dump_proto+0xd0/0xf0 [smc_diag]\n  smc_diag_dump+0x26/0x60 [smc_diag]\n  netlink_dump+0x19f/0x320\n  __netlink_dump_start+0x1dc/0x300\n  smc_diag_handler_dump+0x6a/0x80 [smc_diag]\n  ? __pfx_smc_diag_dump+0x10/0x10 [smc_diag]\n  sock_diag_rcv_msg+0x121/0x140\n  ? __pfx_sock_diag_rcv_msg+0x10/0x10\n  netlink_rcv_skb+0x5a/0x110\n  sock_diag_rcv+0x28/0x40\n  netlink_unicast+0x22a/0x330\n  netlink_sendmsg+0x1f8/0x420\n  __sock_sendmsg+0xb0/0xc0\n  ____sys_sendmsg+0x24e/0x300\n  ? copy_msghdr_from_user+0x62/0x80\n  ___sys_sendmsg+0x7c/0xd0\n  ? __do_fault+0x34/0x160\n  ? do_read_fault+0x5f/0x100\n  ? do_fault+0xb0/0x110\n  ? __handle_mm_fault+0x2b0/0x6c0\n  __sys_sendmsg+0x4d/0x80\n  do_syscall_64+0x69/0x180\n  entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nIt is possible that the connection is in process of being established\nwhen we dump it. Assumed that the connection has been registered in a\nlink group by smc_conn_create() but the rmb_desc has not yet been\ninitialized by smc_buf_create(), thus causing the illegal access to\nconn-\u003ermb_desc. So fix it by checking before dump.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26623",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: Prevent race issues involving the adminq\n\nThere are multiple paths that can result in using the pdsc's\nadminq.\n\n[1] pdsc_adminq_isr and the resulting work from queue_work(),\n    i.e. pdsc_work_thread()-\u003epdsc_process_adminq()\n\n[2] pdsc_adminq_post()\n\nWhen the device goes through reset via PCIe reset and/or\na fw_down/fw_up cycle due to bad PCIe state or bad device\nstate the adminq is destroyed and recreated.\n\nA NULL pointer dereference can happen if [1] or [2] happens\nafter the adminq is already destroyed.\n\nIn order to fix this, add some further state checks and\nimplement reference counting for adminq uses. Reference\ncounting was used because multiple threads can attempt to\naccess the adminq at the same time via [1] or [2]. Additionally,\nmultiple clients (i.e. pds-vfio-pci) can be using [2]\nat the same time.\n\nThe adminq_refcnt is initialized to 1 when the adminq has been\nallocated and is ready to use. Users/clients of the adminq\n(i.e. [1] and [2]) will increment the refcnt when they are using\nthe adminq. When the driver goes into a fw_down cycle it will\nset the PDSC_S_FW_DEAD bit and then wait for the adminq_refcnt\nto hit 1. Setting the PDSC_S_FW_DEAD before waiting will prevent\nany further adminq_refcnt increments. Waiting for the\nadminq_refcnt to hit 1 allows for any current users of the adminq\nto finish before the driver frees the adminq. Once the\nadminq_refcnt hits 1 the driver clears the refcnt to signify that\nthe adminq is deleted and cannot be used. On the fw_up cycle the\ndriver will once again initialize the adminq_refcnt to 1 allowing\nthe adminq to be used again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26625",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: call sock_orphan() at release time\n\nsyzbot reported an interesting trace [1] caused by a stale sk-\u003esk_wq\npointer in a closed llc socket.\n\nIn commit ff7b11aa481f (\"net: socket: set sock-\u003esk to NULL after\ncalling proto_ops::release()\") Eric Biggers hinted that some protocols\nare missing a sock_orphan(), we need to perform a full audit.\n\nIn net-next, I plan to clear sock-\u003esk from sock_orphan() and\namend Eric patch to add a warning.\n\n[1]\n BUG: KASAN: slab-use-after-free in list_empty include/linux/list.h:373 [inline]\n BUG: KASAN: slab-use-after-free in waitqueue_active include/linux/wait.h:127 [inline]\n BUG: KASAN: slab-use-after-free in sock_def_write_space_wfree net/core/sock.c:3384 [inline]\n BUG: KASAN: slab-use-after-free in sock_wfree+0x9a8/0x9d0 net/core/sock.c:2468\nRead of size 8 at addr ffff88802f4fc880 by task ksoftirqd/1/27\n\nCPU: 1 PID: 27 Comm: ksoftirqd/1 Not tainted 6.8.0-rc1-syzkaller-00049-g6098d87eaf31 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.2-debian-1.16.2-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0xd9/0x1b0 lib/dump_stack.c:106\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0xc4/0x620 mm/kasan/report.c:488\n  kasan_report+0xda/0x110 mm/kasan/report.c:601\n  list_empty include/linux/list.h:373 [inline]\n  waitqueue_active include/linux/wait.h:127 [inline]\n  sock_def_write_space_wfree net/core/sock.c:3384 [inline]\n  sock_wfree+0x9a8/0x9d0 net/core/sock.c:2468\n  skb_release_head_state+0xa3/0x2b0 net/core/skbuff.c:1080\n  skb_release_all net/core/skbuff.c:1092 [inline]\n  napi_consume_skb+0x119/0x2b0 net/core/skbuff.c:1404\n  e1000_unmap_and_free_tx_resource+0x144/0x200 drivers/net/ethernet/intel/e1000/e1000_main.c:1970\n  e1000_clean_tx_irq drivers/net/ethernet/intel/e1000/e1000_main.c:3860 [inline]\n  e1000_clean+0x4a1/0x26e0 drivers/net/ethernet/intel/e1000/e1000_main.c:3801\n  __napi_poll.constprop.0+0xb4/0x540 net/core/dev.c:6576\n  napi_poll net/core/dev.c:6645 [inline]\n  net_rx_action+0x956/0xe90 net/core/dev.c:6778\n  __do_softirq+0x21a/0x8de kernel/softirq.c:553\n  run_ksoftirqd kernel/softirq.c:921 [inline]\n  run_ksoftirqd+0x31/0x60 kernel/softirq.c:913\n  smpboot_thread_fn+0x660/0xa10 kernel/smpboot.c:164\n  kthread+0x2c6/0x3a0 kernel/kthread.c:388\n  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147\n  ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:242\n \u003c/TASK\u003e\n\nAllocated by task 5167:\n  kasan_save_stack+0x33/0x50 mm/kasan/common.c:47\n  kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n  unpoison_slab_object mm/kasan/common.c:314 [inline]\n  __kasan_slab_alloc+0x81/0x90 mm/kasan/common.c:340\n  kasan_slab_alloc include/linux/kasan.h:201 [inline]\n  slab_post_alloc_hook mm/slub.c:3813 [inline]\n  slab_alloc_node mm/slub.c:3860 [inline]\n  kmem_cache_alloc_lru+0x142/0x6f0 mm/slub.c:3879\n  alloc_inode_sb include/linux/fs.h:3019 [inline]\n  sock_alloc_inode+0x25/0x1c0 net/socket.c:308\n  alloc_inode+0x5d/0x220 fs/inode.c:260\n  new_inode_pseudo+0x16/0x80 fs/inode.c:1005\n  sock_alloc+0x40/0x270 net/socket.c:634\n  __sock_create+0xbc/0x800 net/socket.c:1535\n  sock_create net/socket.c:1622 [inline]\n  __sys_socket_create net/socket.c:1659 [inline]\n  __sys_socket+0x14c/0x260 net/socket.c:1706\n  __do_sys_socket net/socket.c:1720 [inline]\n  __se_sys_socket net/socket.c:1718 [inline]\n  __x64_sys_socket+0x72/0xb0 net/socket.c:1718\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xd3/0x250 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nFreed by task 0:\n  kasan_save_stack+0x33/0x50 mm/kasan/common.c:47\n  kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n  kasan_save_free_info+0x3f/0x60 mm/kasan/generic.c:640\n  poison_slab_object mm/kasan/common.c:241 [inline]\n  __kasan_slab_free+0x121/0x1b0 mm/kasan/common.c:257\n  kasan_slab_free include/linux/kasan.h:184 [inline]\n  slab_free_hook mm/slub.c:2121 [inlin\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26632",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix iterating over an empty bio with bio_for_each_folio_all\n\nIf the bio contains no data, bio_first_folio() calls page_folio() on a\nNULL pointer and oopses.  Move the test that we've reached the end of\nthe bio from bio_next_folio() to bio_first_folio().\n\n[axboe: add unlikely() to error case]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26633",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nip6_tunnel: fix NEXTHDR_FRAGMENT handling in ip6_tnl_parse_tlv_enc_lim()\n\nsyzbot pointed out [1] that NEXTHDR_FRAGMENT handling is broken.\n\nReading frag_off can only be done if we pulled enough bytes\nto skb-\u003ehead. Currently we might access garbage.\n\n[1]\nBUG: KMSAN: uninit-value in ip6_tnl_parse_tlv_enc_lim+0x94f/0xbb0\nip6_tnl_parse_tlv_enc_lim+0x94f/0xbb0\nipxip6_tnl_xmit net/ipv6/ip6_tunnel.c:1326 [inline]\nip6_tnl_start_xmit+0xab2/0x1a70 net/ipv6/ip6_tunnel.c:1432\n__netdev_start_xmit include/linux/netdevice.h:4940 [inline]\nnetdev_start_xmit include/linux/netdevice.h:4954 [inline]\nxmit_one net/core/dev.c:3548 [inline]\ndev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n__dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\nneigh_connected_output+0x569/0x660 net/core/neighbour.c:1592\nneigh_output include/net/neighbour.h:542 [inline]\nip6_finish_output2+0x23a9/0x2b30 net/ipv6/ip6_output.c:137\nip6_finish_output+0x855/0x12b0 net/ipv6/ip6_output.c:222\nNF_HOOK_COND include/linux/netfilter.h:303 [inline]\nip6_output+0x323/0x610 net/ipv6/ip6_output.c:243\ndst_output include/net/dst.h:451 [inline]\nip6_local_out+0xe9/0x140 net/ipv6/output_core.c:155\nip6_send_skb net/ipv6/ip6_output.c:1952 [inline]\nip6_push_pending_frames+0x1f9/0x560 net/ipv6/ip6_output.c:1972\nrawv6_push_pending_frames+0xbe8/0xdf0 net/ipv6/raw.c:582\nrawv6_sendmsg+0x2b66/0x2e70 net/ipv6/raw.c:920\ninet_sendmsg+0x105/0x190 net/ipv4/af_inet.c:847\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg net/socket.c:745 [inline]\n____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n__sys_sendmsg net/socket.c:2667 [inline]\n__do_sys_sendmsg net/socket.c:2676 [inline]\n__se_sys_sendmsg net/socket.c:2674 [inline]\n__x64_sys_sendmsg+0x307/0x490 net/socket.c:2674\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\nslab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\nslab_alloc_node mm/slub.c:3478 [inline]\n__kmem_cache_alloc_node+0x5c9/0x970 mm/slub.c:3517\n__do_kmalloc_node mm/slab_common.c:1006 [inline]\n__kmalloc_node_track_caller+0x118/0x3c0 mm/slab_common.c:1027\nkmalloc_reserve+0x249/0x4a0 net/core/skbuff.c:582\npskb_expand_head+0x226/0x1a00 net/core/skbuff.c:2098\n__pskb_pull_tail+0x13b/0x2310 net/core/skbuff.c:2655\npskb_may_pull_reason include/linux/skbuff.h:2673 [inline]\npskb_may_pull include/linux/skbuff.h:2681 [inline]\nip6_tnl_parse_tlv_enc_lim+0x901/0xbb0 net/ipv6/ip6_tunnel.c:408\nipxip6_tnl_xmit net/ipv6/ip6_tunnel.c:1326 [inline]\nip6_tnl_start_xmit+0xab2/0x1a70 net/ipv6/ip6_tunnel.c:1432\n__netdev_start_xmit include/linux/netdevice.h:4940 [inline]\nnetdev_start_xmit include/linux/netdevice.h:4954 [inline]\nxmit_one net/core/dev.c:3548 [inline]\ndev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n__dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\nneigh_connected_output+0x569/0x660 net/core/neighbour.c:1592\nneigh_output include/net/neighbour.h:542 [inline]\nip6_finish_output2+0x23a9/0x2b30 net/ipv6/ip6_output.c:137\nip6_finish_output+0x855/0x12b0 net/ipv6/ip6_output.c:222\nNF_HOOK_COND include/linux/netfilter.h:303 [inline]\nip6_output+0x323/0x610 net/ipv6/ip6_output.c:243\ndst_output include/net/dst.h:451 [inline]\nip6_local_out+0xe9/0x140 net/ipv6/output_core.c:155\nip6_send_skb net/ipv6/ip6_output.c:1952 [inline]\nip6_push_pending_frames+0x1f9/0x560 net/ipv6/ip6_output.c:1972\nrawv6_push_pending_frames+0xbe8/0xdf0 net/ipv6/raw.c:582\nrawv6_sendmsg+0x2b66/0x2e70 net/ipv6/raw.c:920\ninet_sendmsg+0x105/0x190 net/ipv4/af_inet.c:847\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg net/socket.c:745 [inline]\n____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n__sys_sendmsg net/socket.c:2667 [inline]\n__do_sys_sendms\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26635",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: Drop support for ETH_P_TR_802_2.\n\nsyzbot reported an uninit-value bug below. [0]\n\nllc supports ETH_P_802_2 (0x0004) and used to support ETH_P_TR_802_2\n(0x0011), and syzbot abused the latter to trigger the bug.\n\n  write$tun(r0, \u0026(0x7f0000000040)={@val={0x0, 0x11}, @val, @mpls={[], @llc={@snap={0xaa, 0x1, ')', \"90e5dd\"}}}}, 0x16)\n\nllc_conn_handler() initialises local variables {saddr,daddr}.mac\nbased on skb in llc_pdu_decode_sa()/llc_pdu_decode_da() and passes\nthem to __llc_lookup().\n\nHowever, the initialisation is done only when skb-\u003eprotocol is\nhtons(ETH_P_802_2), otherwise, __llc_lookup_established() and\n__llc_lookup_listener() will read garbage.\n\nThe missing initialisation existed prior to commit 211ed865108e\n(\"net: delete all instances of special processing for token ring\").\n\nIt removed the part to kick out the token ring stuff but forgot to\nclose the door allowing ETH_P_TR_802_2 packets to sneak into llc_rcv().\n\nLet's remove llc_tr_packet_type and complete the deprecation.\n\n[0]:\nBUG: KMSAN: uninit-value in __llc_lookup_established+0xe9d/0xf90\n __llc_lookup_established+0xe9d/0xf90\n __llc_lookup net/llc/llc_conn.c:611 [inline]\n llc_conn_handler+0x4bd/0x1360 net/llc/llc_conn.c:791\n llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c:206\n __netif_receive_skb_one_core net/core/dev.c:5527 [inline]\n __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5641\n netif_receive_skb_internal net/core/dev.c:5727 [inline]\n netif_receive_skb+0x58/0x660 net/core/dev.c:5786\n tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1555\n tun_get_user+0x53af/0x66d0 drivers/net/tun.c:2002\n tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048\n call_write_iter include/linux/fs.h:2020 [inline]\n new_sync_write fs/read_write.c:491 [inline]\n vfs_write+0x8ef/0x1490 fs/read_write.c:584\n ksys_write+0x20f/0x4c0 fs/read_write.c:637\n __do_sys_write fs/read_write.c:649 [inline]\n __se_sys_write fs/read_write.c:646 [inline]\n __x64_sys_write+0x93/0xd0 fs/read_write.c:646\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x44/0x110 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nLocal variable daddr created at:\n llc_conn_handler+0x53/0x1360 net/llc/llc_conn.c:783\n llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c:206\n\nCPU: 1 PID: 5004 Comm: syz-executor994 Not tainted 6.6.0-syzkaller-14500-g1c41041124bd #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/09/2023",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26636",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: make llc_ui_sendmsg() more robust against bonding changes\n\nsyzbot was able to trick llc_ui_sendmsg(), allocating an skb with no\nheadroom, but subsequently trying to push 14 bytes of Ethernet header [1]\n\nLike some others, llc_ui_sendmsg() releases the socket lock before\ncalling sock_alloc_send_skb().\nThen it acquires it again, but does not redo all the sanity checks\nthat were performed.\n\nThis fix:\n\n- Uses LL_RESERVED_SPACE() to reserve space.\n- Check all conditions again after socket lock is held again.\n- Do not account Ethernet header for mtu limitation.\n\n[1]\n\nskbuff: skb_under_panic: text:ffff800088baa334 len:1514 put:14 head:ffff0000c9c37000 data:ffff0000c9c36ff2 tail:0x5dc end:0x6c0 dev:bond0\n\n kernel BUG at net/core/skbuff.c:193 !\nInternal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 6875 Comm: syz-executor.0 Not tainted 6.7.0-rc8-syzkaller-00101-g0802e17d9aca-dirty #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : skb_panic net/core/skbuff.c:189 [inline]\n pc : skb_under_panic+0x13c/0x140 net/core/skbuff.c:203\n lr : skb_panic net/core/skbuff.c:189 [inline]\n lr : skb_under_panic+0x13c/0x140 net/core/skbuff.c:203\nsp : ffff800096f97000\nx29: ffff800096f97010 x28: ffff80008cc8d668 x27: dfff800000000000\nx26: ffff0000cb970c90 x25: 00000000000005dc x24: ffff0000c9c36ff2\nx23: ffff0000c9c37000 x22: 00000000000005ea x21: 00000000000006c0\nx20: 000000000000000e x19: ffff800088baa334 x18: 1fffe000368261ce\nx17: ffff80008e4ed000 x16: ffff80008a8310f8 x15: 0000000000000001\nx14: 1ffff00012df2d58 x13: 0000000000000000 x12: 0000000000000000\nx11: 0000000000000001 x10: 0000000000ff0100 x9 : e28a51f1087e8400\nx8 : e28a51f1087e8400 x7 : ffff80008028f8d0 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : 0000000000000001 x3 : ffff800082b78714\nx2 : 0000000000000001 x1 : 0000000100000000 x0 : 0000000000000089\nCall trace:\n  skb_panic net/core/skbuff.c:189 [inline]\n  skb_under_panic+0x13c/0x140 net/core/skbuff.c:203\n  skb_push+0xf0/0x108 net/core/skbuff.c:2451\n  eth_header+0x44/0x1f8 net/ethernet/eth.c:83\n  dev_hard_header include/linux/netdevice.h:3188 [inline]\n  llc_mac_hdr_init+0x110/0x17c net/llc/llc_output.c:33\n  llc_sap_action_send_xid_c+0x170/0x344 net/llc/llc_s_ac.c:85\n  llc_exec_sap_trans_actions net/llc/llc_sap.c:153 [inline]\n  llc_sap_next_state net/llc/llc_sap.c:182 [inline]\n  llc_sap_state_process+0x1ec/0x774 net/llc/llc_sap.c:209\n  llc_build_and_send_xid_pkt+0x12c/0x1c0 net/llc/llc_sap.c:270\n  llc_ui_sendmsg+0x7bc/0xb1c net/llc/af_llc.c:997\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  sock_sendmsg+0x194/0x274 net/socket.c:767\n  splice_to_socket+0x7cc/0xd58 fs/splice.c:881\n  do_splice_from fs/splice.c:933 [inline]\n  direct_splice_actor+0xe4/0x1c0 fs/splice.c:1142\n  splice_direct_to_actor+0x2a0/0x7e4 fs/splice.c:1088\n  do_splice_direct+0x20c/0x348 fs/splice.c:1194\n  do_sendfile+0x4bc/0xc70 fs/read_write.c:1254\n  __do_sys_sendfile64 fs/read_write.c:1322 [inline]\n  __se_sys_sendfile64 fs/read_write.c:1308 [inline]\n  __arm64_sys_sendfile64+0x160/0x3b4 fs/read_write.c:1308\n  __invoke_syscall arch/arm64/kernel/syscall.c:37 [inline]\n  invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:51\n  el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:136\n  do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:155\n  el0_svc+0x54/0x158 arch/arm64/kernel/entry-common.c:678\n  el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:696\n  el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:595\nCode: aa1803e6 aa1903e7 a90023f5 94792f6a (d4210000)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26641",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\n\nsyzbot found __ip6_tnl_rcv() could access unitiliazed data [1].\n\nCall pskb_inet_may_pull() to fix this, and initialize ipv6h\nvariable after this call as it can change skb-\u003ehead.\n\n[1]\n BUG: KMSAN: uninit-value in __INET_ECN_decapsulate include/net/inet_ecn.h:253 [inline]\n BUG: KMSAN: uninit-value in INET_ECN_decapsulate include/net/inet_ecn.h:275 [inline]\n BUG: KMSAN: uninit-value in IP6_ECN_decapsulate+0x7df/0x1e50 include/net/inet_ecn.h:321\n  __INET_ECN_decapsulate include/net/inet_ecn.h:253 [inline]\n  INET_ECN_decapsulate include/net/inet_ecn.h:275 [inline]\n  IP6_ECN_decapsulate+0x7df/0x1e50 include/net/inet_ecn.h:321\n  ip6ip6_dscp_ecn_decapsulate+0x178/0x1b0 net/ipv6/ip6_tunnel.c:727\n  __ip6_tnl_rcv+0xd4e/0x1590 net/ipv6/ip6_tunnel.c:845\n  ip6_tnl_rcv+0xce/0x100 net/ipv6/ip6_tunnel.c:888\n gre_rcv+0x143f/0x1870\n  ip6_protocol_deliver_rcu+0xda6/0x2a60 net/ipv6/ip6_input.c:438\n  ip6_input_finish net/ipv6/ip6_input.c:483 [inline]\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip6_input+0x15d/0x430 net/ipv6/ip6_input.c:492\n  ip6_mc_input+0xa7e/0xc80 net/ipv6/ip6_input.c:586\n  dst_input include/net/dst.h:461 [inline]\n  ip6_rcv_finish+0x5db/0x870 net/ipv6/ip6_input.c:79\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ipv6_rcv+0xda/0x390 net/ipv6/ip6_input.c:310\n  __netif_receive_skb_one_core net/core/dev.c:5532 [inline]\n  __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5646\n  netif_receive_skb_internal net/core/dev.c:5732 [inline]\n  netif_receive_skb+0x58/0x660 net/core/dev.c:5791\n  tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1555\n  tun_get_user+0x53af/0x66d0 drivers/net/tun.c:2002\n  tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048\n  call_write_iter include/linux/fs.h:2084 [inline]\n  new_sync_write fs/read_write.c:497 [inline]\n  vfs_write+0x786/0x1200 fs/read_write.c:590\n  ksys_write+0x20f/0x4c0 fs/read_write.c:643\n  __do_sys_write fs/read_write.c:655 [inline]\n  __se_sys_write fs/read_write.c:652 [inline]\n  __x64_sys_write+0x93/0xd0 fs/read_write.c:652\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n  slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\n  slab_alloc_node mm/slub.c:3478 [inline]\n  kmem_cache_alloc_node+0x5e9/0xb10 mm/slub.c:3523\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n  __alloc_skb+0x318/0x740 net/core/skbuff.c:651\n  alloc_skb include/linux/skbuff.h:1286 [inline]\n  alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6334\n  sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2787\n  tun_alloc_skb drivers/net/tun.c:1531 [inline]\n  tun_get_user+0x1e8a/0x66d0 drivers/net/tun.c:1846\n  tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048\n  call_write_iter include/linux/fs.h:2084 [inline]\n  new_sync_write fs/read_write.c:497 [inline]\n  vfs_write+0x786/0x1200 fs/read_write.c:590\n  ksys_write+0x20f/0x4c0 fs/read_write.c:643\n  __do_sys_write fs/read_write.c:655 [inline]\n  __se_sys_write fs/read_write.c:652 [inline]\n  __x64_sys_write+0x93/0xd0 fs/read_write.c:652\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nCPU: 0 PID: 5034 Comm: syz-executor331 Not tainted 6.7.0-syzkaller-00562-g9f8413c4a66f #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26643",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: mark set as dead when unbinding anonymous set with timeout\n\nWhile the rhashtable set gc runs asynchronously, a race allows it to\ncollect elements from anonymous sets with timeouts while it is being\nreleased from the commit path.\n\nMingi Cho originally reported this issue in a different path in 6.1.x\nwith a pipapo set with low timeouts which is not possible upstream since\n7395dfacfff6 (\"netfilter: nf_tables: use timestamp to check for set\nelement timeout\").\n\nFix this by setting on the dead flag for anonymous sets to skip async gc\nin this case.\n\nAccording to 08e4c8c5919f (\"netfilter: nf_tables: mark newset as dead on\ntransaction abort\"), Florian plans to accelerate abort path by releasing\nobjects via workqueue, therefore, this sets on the dead flag for abort\npath too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26663",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Check the bearer type before calling tipc_udp_nl_bearer_add()\n\nsyzbot reported the following general protection fault [1]:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000010: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000080-0x0000000000000087]\n...\nRIP: 0010:tipc_udp_is_known_peer+0x9c/0x250 net/tipc/udp_media.c:291\n...\nCall Trace:\n \u003cTASK\u003e\n tipc_udp_nl_bearer_add+0x212/0x2f0 net/tipc/udp_media.c:646\n tipc_nl_bearer_add+0x21e/0x360 net/tipc/bearer.c:1089\n genl_family_rcv_msg_doit+0x1fc/0x2e0 net/netlink/genetlink.c:972\n genl_family_rcv_msg net/netlink/genetlink.c:1052 [inline]\n genl_rcv_msg+0x561/0x800 net/netlink/genetlink.c:1067\n netlink_rcv_skb+0x16b/0x440 net/netlink/af_netlink.c:2544\n genl_rcv+0x28/0x40 net/netlink/genetlink.c:1076\n netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n netlink_unicast+0x53b/0x810 net/netlink/af_netlink.c:1367\n netlink_sendmsg+0x8b7/0xd70 net/netlink/af_netlink.c:1909\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0xd5/0x180 net/socket.c:745\n ____sys_sendmsg+0x6ac/0x940 net/socket.c:2584\n ___sys_sendmsg+0x135/0x1d0 net/socket.c:2638\n __sys_sendmsg+0x117/0x1e0 net/socket.c:2667\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x40/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nThe cause of this issue is that when tipc_nl_bearer_add() is called with\nthe TIPC_NLA_BEARER_UDP_OPTS attribute, tipc_udp_nl_bearer_add() is called\neven if the bearer is not UDP.\n\ntipc_udp_is_known_peer() called by tipc_udp_nl_bearer_add() assumes that\nthe media_ptr field of the tipc_bearer has an udp_bearer type object, so\nthe function goes crazy for non-UDP bearers.\n\nThis patch fixes the issue by checking the bearer type before calling\ntipc_udp_nl_bearer_add() in tipc_nl_bearer_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26665",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntunnels: fix out of bounds access when building IPv6 PMTU error\n\nIf the ICMPv6 error is built from a non-linear skb we get the following\nsplat,\n\n  BUG: KASAN: slab-out-of-bounds in do_csum+0x220/0x240\n  Read of size 4 at addr ffff88811d402c80 by task netperf/820\n  CPU: 0 PID: 820 Comm: netperf Not tainted 6.8.0-rc1+ #543\n  ...\n   kasan_report+0xd8/0x110\n   do_csum+0x220/0x240\n   csum_partial+0xc/0x20\n   skb_tunnel_check_pmtu+0xeb9/0x3280\n   vxlan_xmit_one+0x14c2/0x4080\n   vxlan_xmit+0xf61/0x5c00\n   dev_hard_start_xmit+0xfb/0x510\n   __dev_queue_xmit+0x7cd/0x32a0\n   br_dev_queue_push_xmit+0x39d/0x6a0\n\nUse skb_checksum instead of csum_partial who cannot deal with non-linear\nSKBs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26673",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_ct: sanitize layer 3 and 4 protocol number in custom expectations\n\n- Disallow families other than NFPROTO_{IPV4,IPV6,INET}.\n- Disallow layer 4 protocol with no ports, since destination port is a\n  mandatory attribute for this object.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26676",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Call kfree_skb() for dead unix_(sk)-\u003eoob_skb in GC.\n\nsyzbot reported a warning [0] in __unix_gc() with a repro, which\ncreates a socketpair and sends one socket's fd to itself using the\npeer.\n\n  socketpair(AF_UNIX, SOCK_STREAM, 0, [3, 4]) = 0\n  sendmsg(4, {msg_name=NULL, msg_namelen=0, msg_iov=[{iov_base=\"\\360\", iov_len=1}],\n          msg_iovlen=1, msg_control=[{cmsg_len=20, cmsg_level=SOL_SOCKET,\n                                      cmsg_type=SCM_RIGHTS, cmsg_data=[3]}],\n          msg_controllen=24, msg_flags=0}, MSG_OOB|MSG_PROBE|MSG_DONTWAIT|MSG_ZEROCOPY) = 1\n\nThis forms a self-cyclic reference that GC should finally untangle\nbut does not due to lack of MSG_OOB handling, resulting in memory\nleak.\n\nRecently, commit 11498715f266 (\"af_unix: Remove io_uring code for\nGC.\") removed io_uring's dead code in GC and revealed the problem.\n\nThe code was executed at the final stage of GC and unconditionally\nmoved all GC candidates from gc_candidates to gc_inflight_list.\nThat papered over the reported problem by always making the following\nWARN_ON_ONCE(!list_empty(\u0026gc_candidates)) false.\n\nThe problem has been there since commit 2aab4b969002 (\"af_unix: fix\nstruct pid leaks in OOB support\") added full scm support for MSG_OOB\nwhile fixing another bug.\n\nTo fix this problem, we must call kfree_skb() for unix_sk(sk)-\u003eoob_skb\nif the socket still exists in gc_candidates after purging collected skb.\n\nThen, we need to set NULL to oob_skb before calling kfree_skb() because\nit calls last fput() and triggers unix_release_sock(), where we call\nduplicate kfree_skb(u-\u003eoob_skb) if not NULL.\n\nNote that the leaked socket remained being linked to a global list, so\nkmemleak also could not detect it.  We need to check /proc/net/protocol\nto notice the unfreed socket.\n\n[0]:\nWARNING: CPU: 0 PID: 2863 at net/unix/garbage.c:345 __unix_gc+0xc74/0xe80 net/unix/garbage.c:345\nModules linked in:\nCPU: 0 PID: 2863 Comm: kworker/u4:11 Not tainted 6.8.0-rc1-syzkaller-00583-g1701940b1a02 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nWorkqueue: events_unbound __unix_gc\nRIP: 0010:__unix_gc+0xc74/0xe80 net/unix/garbage.c:345\nCode: 8b 5c 24 50 e9 86 f8 ff ff e8 f8 e4 22 f8 31 d2 48 c7 c6 30 6a 69 89 4c 89 ef e8 97 ef ff ff e9 80 f9 ff ff e8 dd e4 22 f8 90 \u003c0f\u003e 0b 90 e9 7b fd ff ff 48 89 df e8 5c e7 7c f8 e9 d3 f8 ff ff e8\nRSP: 0018:ffffc9000b03fba0 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: ffffc9000b03fc10 RCX: ffffffff816c493e\nRDX: ffff88802c02d940 RSI: ffffffff896982f3 RDI: ffffc9000b03fb30\nRBP: ffffc9000b03fce0 R08: 0000000000000001 R09: fffff52001607f66\nR10: 0000000000000003 R11: 0000000000000002 R12: dffffc0000000000\nR13: ffffc9000b03fc10 R14: ffffc9000b03fc10 R15: 0000000000000001\nFS:  0000000000000000(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005559c8677a60 CR3: 000000000d57a000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n process_one_work+0x889/0x15e0 kernel/workqueue.c:2633\n process_scheduled_works kernel/workqueue.c:2706 [inline]\n worker_thread+0x8b9/0x12a0 kernel/workqueue.c:2787\n kthread+0x2c6/0x3b0 kernel/kthread.c:388\n ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:242\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26679",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet: read sk-\u003esk_family once in inet_recv_error()\n\ninet_recv_error() is called without holding the socket lock.\n\nIPv6 socket could mutate to IPv4 with IPV6_ADDRFORM\nsocket option and trigger a KCSAN warning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26691",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Fix circular locking dependency\n\nThe rule inside kvm enforces that the vcpu-\u003emutex is taken *inside*\nkvm-\u003elock. The rule is violated by the pkvm_create_hyp_vm() which acquires\nthe kvm-\u003elock while already holding the vcpu-\u003emutex lock from\nkvm_vcpu_ioctl(). Avoid the circular locking dependency altogether by\nprotecting the hyp vm handle with the config_lock, much like we already\ndo for other forms of VM-scoped data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26692",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: Fix regression in writes when non-standard maximum write size negotiated\n\nThe conversion to netfs in the 6.3 kernel caused a regression when\nmaximum write size is set by the server to an unexpected value which is\nnot a multiple of 4096 (similarly if the user overrides the maximum\nwrite size by setting mount parm \"wsize\", but sets it to a value that\nis not a multiple of 4096).  When negotiated write size is not a\nmultiple of 4096 the netfs code can skip the end of the final\npage when doing large sequential writes, causing data corruption.\n\nThis section of code is being rewritten/removed due to a large\nnetfs change, but until that point (ie for the 6.3 kernel until now)\nwe can not support non-standard maximum write sizes.\n\nAdd a warning if a user specifies a wsize on mount that is not\na multiple of 4096 (and round down), also add a change where we\nround down the maximum write size if the server negotiates a value\nthat is not a multiple of 4096 (we also have to check to make sure that\nwe do not round it down to zero).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26720",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26726",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: don't drop extent_map for free space inode on write error\n\nWhile running the CI for an unrelated change I hit the following panic\nwith generic/648 on btrfs_holes_spacecache.\n\nassertion failed: block_start != EXTENT_MAP_HOLE, in fs/btrfs/extent_io.c:1385\n------------[ cut here ]------------\nkernel BUG at fs/btrfs/extent_io.c:1385!\ninvalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 1 PID: 2695096 Comm: fsstress Kdump: loaded Tainted: G        W          6.8.0-rc2+ #1\nRIP: 0010:__extent_writepage_io.constprop.0+0x4c1/0x5c0\nCall Trace:\n \u003cTASK\u003e\n extent_write_cache_pages+0x2ac/0x8f0\n extent_writepages+0x87/0x110\n do_writepages+0xd5/0x1f0\n filemap_fdatawrite_wbc+0x63/0x90\n __filemap_fdatawrite_range+0x5c/0x80\n btrfs_fdatawrite_range+0x1f/0x50\n btrfs_write_out_cache+0x507/0x560\n btrfs_write_dirty_block_groups+0x32a/0x420\n commit_cowonly_roots+0x21b/0x290\n btrfs_commit_transaction+0x813/0x1360\n btrfs_sync_file+0x51a/0x640\n __x64_sys_fdatasync+0x52/0x90\n do_syscall_64+0x9c/0x190\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nThis happens because we fail to write out the free space cache in one\ninstance, come back around and attempt to write it again.  However on\nthe second pass through we go to call btrfs_get_extent() on the inode to\nget the extent mapping.  Because this is a new block group, and with the\nfree space inode we always search the commit root to avoid deadlocking\nwith the tree, we find nothing and return a EXTENT_MAP_HOLE for the\nrequested range.\n\nThis happens because the first time we try to write the space cache out\nwe hit an error, and on an error we drop the extent mapping.  This is\nnormal for normal files, but the free space cache inode is special.  We\nalways expect the extent map to be correct.  Thus the second time\nthrough we end up with a bogus extent map.\n\nSince we're deprecating this feature, the most straightforward way to\nfix this is to simply skip dropping the extent map range for this failed\nrange.\n\nI shortened the test by using error injection to stress the area to make\nit easier to reproduce.  With this patch in place we no longer panic\nwith my error injection test.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26734",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndevlink: fix possible use-after-free and memory leaks in devlink_init()\n\nThe pernet operations structure for the subsystem must be registered\nbefore registering the generic netlink family.\n\nMake an unregister in case of unsuccessful registration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26739",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_mirred: don't override retval if we already lost the skb\n\nIf we're redirecting the skb, and haven't called tcf_mirred_forward(),\nyet, we need to tell the core to drop the skb by setting the retcode\nto SHOT. If we have called tcf_mirred_forward(), however, the skb\nis out of our hands and returning SHOT will lead to UaF.\n\nMove the retval override to the error path which actually need it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26742",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: smartpqi: Fix disable_managed_interrupts\n\nCorrect blk-mq registration issue with module parameter\ndisable_managed_interrupts enabled.\n\nWhen we turn off the default PCI_IRQ_AFFINITY flag, the driver needs to\nregister with blk-mq using blk_mq_map_queues(). The driver is currently\ncalling blk_mq_pci_map_queues() which results in a stack trace and possibly\nundefined behavior.\n\nStack Trace:\n[    7.860089] scsi host2: smartpqi\n[    7.871934] WARNING: CPU: 0 PID: 238 at block/blk-mq-pci.c:52 blk_mq_pci_map_queues+0xca/0xd0\n[    7.889231] Modules linked in: sd_mod t10_pi sg uas smartpqi(+) crc32c_intel scsi_transport_sas usb_storage dm_mirror dm_region_hash dm_log dm_mod ipmi_devintf ipmi_msghandler fuse\n[    7.924755] CPU: 0 PID: 238 Comm: kworker/0:3 Not tainted 4.18.0-372.88.1.el8_6_smartpqi_test.x86_64 #1\n[    7.944336] Hardware name: HPE ProLiant DL380 Gen10/ProLiant DL380 Gen10, BIOS U30 03/08/2022\n[    7.963026] Workqueue: events work_for_cpu_fn\n[    7.978275] RIP: 0010:blk_mq_pci_map_queues+0xca/0xd0\n[    7.978278] Code: 48 89 de 89 c7 e8 f6 0f 4f 00 3b 05 c4 b7 8e 01 72 e1 5b 31 c0 5d 41 5c 41 5d 41 5e 41 5f e9 7d df 73 00 31 c0 e9 76 df 73 00 \u003c0f\u003e 0b eb bc 90 90 0f 1f 44 00 00 41 57 49 89 ff 41 56 41 55 41 54\n[    7.978280] RSP: 0018:ffffa95fc3707d50 EFLAGS: 00010216\n[    7.978283] RAX: 00000000ffffffff RBX: 0000000000000000 RCX: 0000000000000010\n[    7.978284] RDX: 0000000000000004 RSI: 0000000000000000 RDI: ffff9190c32d4310\n[    7.978286] RBP: 0000000000000000 R08: ffffa95fc3707d38 R09: ffff91929b81ac00\n[    7.978287] R10: 0000000000000001 R11: ffffa95fc3707ac0 R12: 0000000000000000\n[    7.978288] R13: ffff9190c32d4000 R14: 00000000ffffffff R15: ffff9190c4c950a8\n[    7.978290] FS:  0000000000000000(0000) GS:ffff9193efc00000(0000) knlGS:0000000000000000\n[    7.978292] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    8.172814] CR2: 000055d11166c000 CR3: 00000002dae10002 CR4: 00000000007706f0\n[    8.172816] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[    8.172817] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[    8.172818] PKRU: 55555554\n[    8.172819] Call Trace:\n[    8.172823]  blk_mq_alloc_tag_set+0x12e/0x310\n[    8.264339]  scsi_add_host_with_dma.cold.9+0x30/0x245\n[    8.279302]  pqi_ctrl_init+0xacf/0xc8e [smartpqi]\n[    8.294085]  ? pqi_pci_probe+0x480/0x4c8 [smartpqi]\n[    8.309015]  pqi_pci_probe+0x480/0x4c8 [smartpqi]\n[    8.323286]  local_pci_probe+0x42/0x80\n[    8.337855]  work_for_cpu_fn+0x16/0x20\n[    8.351193]  process_one_work+0x1a7/0x360\n[    8.364462]  ? create_worker+0x1a0/0x1a0\n[    8.379252]  worker_thread+0x1ce/0x390\n[    8.392623]  ? create_worker+0x1a0/0x1a0\n[    8.406295]  kthread+0x10a/0x120\n[    8.418428]  ? set_kthread_struct+0x50/0x50\n[    8.431532]  ret_from_fork+0x1f/0x40\n[    8.444137] ---[ end trace 1bf0173d39354506 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26758",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: Don't ignore suspended array in md_check_recovery()\n\nmddev_suspend() never stop sync_thread, hence it doesn't make sense to\nignore suspended array in md_check_recovery(), which might cause\nsync_thread can't be unregistered.\n\nAfter commit f52f5c71f3d4 (\"md: fix stopping sync thread\"), following\nhang can be triggered by test shell/integrity-caching.sh:\n\n1) suspend the array:\nraid_postsuspend\n mddev_suspend\n\n2) stop the array:\nraid_dtr\n md_stop\n  __md_stop_writes\n   stop_sync_thread\n    set_bit(MD_RECOVERY_INTR, \u0026mddev-\u003erecovery);\n    md_wakeup_thread_directly(mddev-\u003esync_thread);\n    wait_event(..., !test_bit(MD_RECOVERY_RUNNING, \u0026mddev-\u003erecovery))\n\n3) sync thread done:\nmd_do_sync\n set_bit(MD_RECOVERY_DONE, \u0026mddev-\u003erecovery);\n md_wakeup_thread(mddev-\u003ethread);\n\n4) daemon thread can't unregister sync thread:\nmd_check_recovery\n if (mddev-\u003esuspended)\n   return; -\u003e return directly\n md_read_sync_thread\n clear_bit(MD_RECOVERY_RUNNING, \u0026mddev-\u003erecovery);\n -\u003e MD_RECOVERY_RUNNING can't be cleared, hence step 2 hang;\n\nThis problem is not just related to dm-raid, fix it by ignoring\nsuspended array in md_check_recovery(). And follow up patches will\nimprove dm-raid better to frozen sync thread during suspend.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26761",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/pci: Fix disabling memory if DVSEC CXL Range does not match a CFMWS window\n\nThe Linux CXL subsystem is built on the assumption that HPA == SPA.\nThat is, the host physical address (HPA) the HDM decoder registers are\nprogrammed with are system physical addresses (SPA).\n\nDuring HDM decoder setup, the DVSEC CXL range registers (cxl-3.1,\n8.1.3.8) are checked if the memory is enabled and the CXL range is in\na HPA window that is described in a CFMWS structure of the CXL host\nbridge (cxl-3.1, 9.18.1.3).\n\nNow, if the HPA is not an SPA, the CXL range does not match a CFMWS\nwindow and the CXL memory range will be disabled then. The HDM decoder\nstops working which causes system memory being disabled and further a\nsystem hang during HDM decoder initialization, typically when a CXL\nenabled kernel boots.\n\nPrevent a system hang and do not disable the HDM decoder if the\ndecoder's CXL range is not found in a CFMWS window.\n\nNote the change only fixes a hardware hang, but does not implement\nHPA/SPA translation. Support for this can be added in a follow on\npatch series.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26764",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/aio: Restrict kiocb_set_cancel_fn() to I/O submitted via libaio\n\nIf kiocb_set_cancel_fn() is called for I/O submitted via io_uring, the\nfollowing kernel warning appears:\n\nWARNING: CPU: 3 PID: 368 at fs/aio.c:598 kiocb_set_cancel_fn+0x9c/0xa8\nCall trace:\n kiocb_set_cancel_fn+0x9c/0xa8\n ffs_epfile_read_iter+0x144/0x1d0\n io_read+0x19c/0x498\n io_issue_sqe+0x118/0x27c\n io_submit_sqes+0x25c/0x5fc\n __arm64_sys_io_uring_enter+0x104/0xab0\n invoke_syscall+0x58/0x11c\n el0_svc_common+0xb4/0xf4\n do_el0_svc+0x2c/0xb0\n el0_svc+0x2c/0xa4\n el0t_64_sync_handler+0x68/0xb4\n el0t_64_sync+0x1a4/0x1a8\n\nFix this by setting the IOCB_AIO_RW flag for read and write I/O that is\nsubmitted by libaio.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26767",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: fixed integer types and null check locations\n\n[why]:\nissues fixed:\n- comparison with wider integer type in loop condition which can cause\ninfinite loops\n- pointer dereference before null check",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26775",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naoe: avoid potential deadlock at set_capacity\n\nMove set_capacity() outside of the section procected by (\u0026d-\u003elock).\nTo avoid possible interrupt unsafe locking scenario:\n\n        CPU0                    CPU1\n        ----                    ----\n[1] lock(\u0026bdev-\u003ebd_size_lock);\n                                local_irq_disable();\n                            [2] lock(\u0026d-\u003elock);\n                            [3] lock(\u0026bdev-\u003ebd_size_lock);\n   \u003cInterrupt\u003e\n[4]  lock(\u0026d-\u003elock);\n\n  *** DEADLOCK ***\n\nWhere [1](\u0026bdev-\u003ebd_size_lock) hold by zram_add()-\u003eset_capacity().\n[2]lock(\u0026d-\u003elock) hold by aoeblk_gdalloc(). And aoeblk_gdalloc()\nis trying to acquire [3](\u0026bdev-\u003ebd_size_lock) at set_capacity() call.\nIn this situation an attempt to acquire [4]lock(\u0026d-\u003elock) from\naoecmd_cfg_rsp() will lead to deadlock.\n\nSo the simplest solution is breaking lock dependency\n[2](\u0026d-\u003elock) -\u003e [3](\u0026bdev-\u003ebd_size_lock) by moving set_capacity()\noutside.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26785",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Fix protection fault in iommufd_test_syz_conv_iova\n\nSyzkaller reported the following bug:\n\n  general protection fault, probably for non-canonical address 0xdffffc0000000038: 0000 [#1] SMP KASAN\n  KASAN: null-ptr-deref in range [0x00000000000001c0-0x00000000000001c7]\n  Call Trace:\n   lock_acquire\n   lock_acquire+0x1ce/0x4f0\n   down_read+0x93/0x4a0\n   iommufd_test_syz_conv_iova+0x56/0x1f0\n   iommufd_test_access_rw.isra.0+0x2ec/0x390\n   iommufd_test+0x1058/0x1e30\n   iommufd_fops_ioctl+0x381/0x510\n   vfs_ioctl\n   __do_sys_ioctl\n   __se_sys_ioctl\n   __x64_sys_ioctl+0x170/0x1e0\n   do_syscall_x64\n   do_syscall_64+0x71/0x140\n\nThis is because the new iommufd_access_change_ioas() sets access-\u003eioas to\nNULL during its process, so the lock might be gone in a concurrent racing\ncontext.\n\nFix this by doing the same access-\u003eioas sanity as iommufd_access_rw() and\niommufd_access_pin_pages() functions do.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Fix iopt_access_list_id overwrite bug\n\nSyzkaller reported the following WARN_ON:\n  WARNING: CPU: 1 PID: 4738 at drivers/iommu/iommufd/io_pagetable.c:1360\n\n  Call Trace:\n   iommufd_access_change_ioas+0x2fe/0x4e0\n   iommufd_access_destroy_object+0x50/0xb0\n   iommufd_object_remove+0x2a3/0x490\n   iommufd_object_destroy_user\n   iommufd_access_destroy+0x71/0xb0\n   iommufd_test_staccess_release+0x89/0xd0\n   __fput+0x272/0xb50\n   __fput_sync+0x4b/0x60\n   __do_sys_close\n   __se_sys_close\n   __x64_sys_close+0x8b/0x110\n   do_syscall_x64\n\nThe mismatch between the access pointer in the list and the passed-in\npointer is resulting from an overwrite of access-\u003eiopt_access_list_id, in\niopt_add_access(). Called from iommufd_access_change_ioas() when\nxa_alloc() succeeds but iopt_calculate_iova_alignment() fails.\n\nAdd a new_id in iopt_add_access() and only update iopt_access_list_id when\nreturning successfully.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: dev-replace: properly validate device names\n\nThere's a syzbot report that device name buffers passed to device\nreplace are not properly checked for string termination which could lead\nto a read out of bounds in getname_kernel().\n\nAdd a helper that validates both source and target device name buffers.\nFor devid as the source initialize the buffer to empty string in case\nsomething tries to read it later.\n\nThis was originally analyzed and fixed in a different way by Edward Adam\nDavis (see links).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix race between ordered extent completion and fiemap\n\nFor fiemap we recently stopped locking the target extent range for the\nwhole duration of the fiemap call, in order to avoid a deadlock in a\nscenario where the fiemap buffer happens to be a memory mapped range of\nthe same file. This use case is very unlikely to be useful in practice but\nit may be triggered by fuzz testing (syzbot, etc).\n\nHowever by not locking the target extent range for the whole duration of\nthe fiemap call we can race with an ordered extent. This happens like\nthis:\n\n1) The fiemap task finishes processing a file extent item that covers\n   the file range [512K, 1M[, and that file extent item is the last item\n   in the leaf currently being processed;\n\n2) And ordered extent for the file range [768K, 2M[, in COW mode,\n   completes (btrfs_finish_one_ordered()) and the file extent item\n   covering the range [512K, 1M[ is trimmed to cover the range\n   [512K, 768K[ and then a new file extent item for the range [768K, 2M[\n   is inserted in the inode's subvolume tree;\n\n3) The fiemap task calls fiemap_next_leaf_item(), which then calls\n   btrfs_next_leaf() to find the next leaf / item. This finds that the\n   the next key following the one we previously processed (its type is\n   BTRFS_EXTENT_DATA_KEY and its offset is 512K), is the key corresponding\n   to the new file extent item inserted by the ordered extent, which has\n   a type of BTRFS_EXTENT_DATA_KEY and an offset of 768K;\n\n4) Later the fiemap code ends up at emit_fiemap_extent() and triggers\n   the warning:\n\n      if (cache-\u003eoffset + cache-\u003elen \u003e offset) {\n               WARN_ON(1);\n               return -EINVAL;\n      }\n\n   Since we get 1M \u003e 768K, because the previously emitted entry for the\n   old extent covering the file range [512K, 1M[ ends at an offset that\n   is greater than the new extent's start offset (768K). This makes fiemap\n   fail with -EINVAL besides triggering the warning that produces a stack\n   trace like the following:\n\n     [1621.677651] ------------[ cut here ]------------\n     [1621.677656] WARNING: CPU: 1 PID: 204366 at fs/btrfs/extent_io.c:2492 emit_fiemap_extent+0x84/0x90 [btrfs]\n     [1621.677899] Modules linked in: btrfs blake2b_generic (...)\n     [1621.677951] CPU: 1 PID: 204366 Comm: pool Not tainted 6.8.0-rc5-btrfs-next-151+ #1\n     [1621.677954] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-0-gea1b7a073390-prebuilt.qemu.org 04/01/2014\n     [1621.677956] RIP: 0010:emit_fiemap_extent+0x84/0x90 [btrfs]\n     [1621.678033] Code: 2b 4c 89 63 (...)\n     [1621.678035] RSP: 0018:ffffab16089ffd20 EFLAGS: 00010206\n     [1621.678037] RAX: 00000000004fa000 RBX: ffffab16089ffe08 RCX: 0000000000009000\n     [1621.678039] RDX: 00000000004f9000 RSI: 00000000004f1000 RDI: ffffab16089ffe90\n     [1621.678040] RBP: 00000000004f9000 R08: 0000000000001000 R09: 0000000000000000\n     [1621.678041] R10: 0000000000000000 R11: 0000000000001000 R12: 0000000041d78000\n     [1621.678043] R13: 0000000000001000 R14: 0000000000000000 R15: ffff9434f0b17850\n     [1621.678044] FS:  00007fa6e20006c0(0000) GS:ffff943bdfa40000(0000) knlGS:0000000000000000\n     [1621.678046] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n     [1621.678048] CR2: 00007fa6b0801000 CR3: 000000012d404002 CR4: 0000000000370ef0\n     [1621.678053] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n     [1621.678055] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n     [1621.678056] Call Trace:\n     [1621.678074]  \u003cTASK\u003e\n     [1621.678076]  ? __warn+0x80/0x130\n     [1621.678082]  ? emit_fiemap_extent+0x84/0x90 [btrfs]\n     [1621.678159]  ? report_bug+0x1f4/0x200\n     [1621.678164]  ? handle_bug+0x42/0x70\n     [1621.678167]  ? exc_invalid_op+0x14/0x70\n     [1621.678170]  ? asm_exc_invalid_op+0x16/0x20\n     [1621.678178]  ? emit_fiemap_extent+0x84/0x90 [btrfs]\n     [1621.678253]  extent_fiemap+0x766\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/platform: Create persistent IRQ handlers\n\nThe vfio-platform SET_IRQS ioctl currently allows loopback triggering of\nan interrupt before a signaling eventfd has been configured by the user,\nwhich thereby allows a NULL pointer dereference.\n\nRather than register the IRQ relative to a valid trigger, register all\nIRQs in a disabled state in the device open path.  This allows mask\noperations on the IRQ to nest within the overall enable state governed\nby a valid eventfd signal.  This decouples @masked, protected by the\n@locked spinlock from @trigger, protected via the @igate mutex.\n\nIn doing so, it's guaranteed that changes to @trigger cannot race the\nIRQ handlers because the IRQ handler is synchronously disabled before\nmodifying the trigger, and loopback triggering of the IRQ via ioctl is\nsafe due to serialization with trigger changes via igate.\n\nFor compatibility, request_irq() failures are maintained to be local to\nthe SET_IRQS ioctl rather than a fatal error in the open device path.\nThis allows, for example, a userspace driver with polling mode support\nto continue to work regardless of moving the request_irq() call site.\nThis necessarily blocks all SET_IRQS access to the failed index.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/fsl-mc: Block calling interrupt handler without trigger\n\nThe eventfd_ctx trigger pointer of the vfio_fsl_mc_irq object is\ninitially NULL and may become NULL if the user sets the trigger\neventfd to -1.  The interrupt handler itself is guaranteed that\ntrigger is always valid between request_irq() and free_irq(), but\nthe loopback testing mechanisms to invoke the handler function\nneed to test the trigger.  The triggering and setting ioctl paths\nboth make use of igate and are therefore mutually exclusive.\n\nThe vfio-fsl-mc driver does not make use of irqfds, nor does it\nsupport any sort of masking operations, therefore unlike vfio-pci\nand vfio-platform, the flow can remain essentially unchanged.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: set correct id, uid and cruid for multiuser automounts\n\nWhen uid, gid and cruid are not specified, we need to dynamically\nset them into the filesystem context used for automounting otherwise\nthey'll end up reusing the values from the parent mount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26826",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix data re-injection from stale subflow\n\nWhen the MPTCP PM detects that a subflow is stale, all the packet\nscheduler must re-inject all the mptcp-level unacked data. To avoid\nacquiring unneeded locks, it first try to check if any unacked data\nis present at all in the RTX queue, but such check is currently\nbroken, as it uses TCP-specific helper on an MPTCP socket.\n\nFunnily enough fuzzers and static checkers are happy, as the accessed\nmemory still belongs to the mptcp_sock struct, and even from a\nfunctional perspective the recovery completed successfully, as\nthe short-cut test always failed.\n\nA recent unrelated TCP change - commit d5fed5addb2b (\"tcp: reorganize\ntcp_sock fast path variables\") - exposed the issue, as the tcp field\nreorganization makes the mptcp code always skip the re-inection.\n\nFix the issue dropping the bogus call: we are on a slow path, the early\noptimization proved once again to be evil.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26828",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26845",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: core: Add TMF to tmr_list handling\n\nAn abort that is responded to by iSCSI itself is added to tmr_list but does\nnot go to target core. A LUN_RESET that goes through tmr_list takes a\nrefcounter on the abort and waits for completion. However, the abort will\nbe never complete because it was not started in target core.\n\n Unable to locate ITT: 0x05000000 on CID: 0\n Unable to locate RefTaskTag: 0x05000000 on CID: 0.\n wait_for_tasks: Stopping tmf LUN_RESET with tag 0x0 ref_task_tag 0x0 i_state 34 t_state ISTATE_PROCESSING refcnt 2 transport_state active,stop,fabric_stop\n wait for tasks: tmf LUN_RESET with tag 0x0 ref_task_tag 0x0 i_state 34 t_state ISTATE_PROCESSING refcnt 2 transport_state active,stop,fabric_stop\n...\n INFO: task kworker/0:2:49 blocked for more than 491 seconds.\n task:kworker/0:2     state:D stack:    0 pid:   49 ppid:     2 flags:0x00000800\n Workqueue: events target_tmr_work [target_core_mod]\nCall Trace:\n __switch_to+0x2c4/0x470\n _schedule+0x314/0x1730\n schedule+0x64/0x130\n schedule_timeout+0x168/0x430\n wait_for_completion+0x140/0x270\n target_put_cmd_and_wait+0x64/0xb0 [target_core_mod]\n core_tmr_lun_reset+0x30/0xa0 [target_core_mod]\n target_tmr_work+0xc8/0x1b0 [target_core_mod]\n process_one_work+0x2d4/0x5d0\n worker_thread+0x78/0x6c0\n\nTo fix this, only add abort to tmr_list if it will be handled by target\ncore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26846",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fc: do not wait in vain when unloading module\n\nThe module exit path has race between deleting all controllers and\nfreeing 'left over IDs'. To prevent double free a synchronization\nbetween nvme_delete_ctrl and ida_destroy has been added by the initial\ncommit.\n\nThere is some logic around trying to prevent from hanging forever in\nwait_for_completion, though it does not handling all cases. E.g.\nblktests is able to reproduce the situation where the module unload\nhangs forever.\n\nIf we completely rely on the cleanup code executed from the\nnvme_delete_ctrl path, all IDs will be freed eventually. This makes\ncalling ida_destroy unnecessary. We only have to ensure that all\nnvme_delete_ctrl code has been executed before we leave\nnvme_fc_exit_module. This is done by flushing the nvme_delete_wq\nworkqueue.\n\nWhile at it, remove the unused nvme_fc_wq workqueue too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigc: avoid returning frame twice in XDP_REDIRECT\n\nWhen a frame can not be transmitted in XDP_REDIRECT\n(e.g. due to a full queue), it is necessary to free\nit by calling xdp_return_frame_rx_napi.\n\nHowever, this is the responsibility of the caller of\nthe ndo_xdp_xmit (see for example bq_xmit_all in\nkernel/bpf/devmap.c) and thus calling it inside\nigc_xdp_xmit (which is the ndo_xdp_xmit of the igc\ndriver) as well will lead to memory corruption.\n\nIn fact, bq_xmit_all expects that it can return all\nframes after the last successfully transmitted one.\nTherefore, break for the first not transmitted frame,\nbut do not call xdp_return_frame_rx_napi in igc_xdp_xmit.\nThis is equally implemented in other Intel drivers\nsuch as the igb.\n\nThere are two alternatives to this that were rejected:\n1. Return num_frames as all the frames would have been\n   transmitted and release them inside igc_xdp_xmit.\n   While it might work technically, it is not what\n   the return value is meant to represent (i.e. the\n   number of SUCCESSFULLY transmitted packets).\n2. Rework kernel/bpf/devmap.c and all drivers to\n   support non-consecutively dropped packets.\n   Besides being complex, it likely has a negative\n   performance impact without a significant gain\n   since it is anyway unlikely that the next frame\n   can be transmitted if the previous one was dropped.\n\nThe memory corruption can be reproduced with\nthe following script which leads to a kernel panic\nafter a few seconds.  It basically generates more\ntraffic than a i225 NIC can transmit and pushes it\nvia XDP_REDIRECT from a virtual interface to the\nphysical interface where frames get dropped.\n\n   #!/bin/bash\n   INTERFACE=enp4s0\n   INTERFACE_IDX=`cat /sys/class/net/$INTERFACE/ifindex`\n\n   sudo ip link add dev veth1 type veth peer name veth2\n   sudo ip link set up $INTERFACE\n   sudo ip link set up veth1\n   sudo ip link set up veth2\n\n   cat \u003c\u003c EOF \u003e redirect.bpf.c\n\n   SEC(\"prog\")\n   int redirect(struct xdp_md *ctx)\n   {\n       return bpf_redirect($INTERFACE_IDX, 0);\n   }\n\n   char _license[] SEC(\"license\") = \"GPL\";\n   EOF\n   clang -O2 -g -Wall -target bpf -c redirect.bpf.c -o redirect.bpf.o\n   sudo ip link set veth2 xdp obj redirect.bpf.o\n\n   cat \u003c\u003c EOF \u003e pass.bpf.c\n\n   SEC(\"prog\")\n   int pass(struct xdp_md *ctx)\n   {\n       return XDP_PASS;\n   }\n\n   char _license[] SEC(\"license\") = \"GPL\";\n   EOF\n   clang -O2 -g -Wall -target bpf -c pass.bpf.c -o pass.bpf.o\n   sudo ip link set $INTERFACE xdp obj pass.bpf.o\n\n   cat \u003c\u003c EOF \u003e trafgen.cfg\n\n   {\n     /* Ethernet Header */\n     0xe8, 0x6a, 0x64, 0x41, 0xbf, 0x46,\n     0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\n     const16(ETH_P_IP),\n\n     /* IPv4 Header */\n     0b01000101, 0,   # IPv4 version, IHL, TOS\n     const16(1028),   # IPv4 total length (UDP length + 20 bytes (IP header))\n     const16(2),      # IPv4 ident\n     0b01000000, 0,   # IPv4 flags, fragmentation off\n     64,              # IPv4 TTL\n     17,              # Protocol UDP\n     csumip(14, 33),  # IPv4 checksum\n\n     /* UDP Header */\n     10,  0, 1, 1,    # IP Src - adapt as needed\n     10,  0, 1, 2,    # IP Dest - adapt as needed\n     const16(6666),   # UDP Src Port\n     const16(6666),   # UDP Dest Port\n     const16(1008),   # UDP length (UDP header 8 bytes + payload length)\n     csumudp(14, 34), # UDP checksum\n\n     /* Payload */\n     fill('W', 1000),\n   }\n   EOF\n\n   sudo trafgen -i trafgen.cfg -b3000MB -o veth1 --cpp",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix uninitialized dplls mutex usage\n\nThe pf-\u003edplls.lock mutex is initialized too late, after its first use.\nMove it to the top of ice_dpll_init.\nNote that the \"err_exit\" error path destroys the mutex. And the mutex is\nthe last thing destroyed in ice_dpll_deinit.\nThis fixes the following warning with CONFIG_DEBUG_MUTEXES:\n\n ice 0000:10:00.0: The DDP package was successfully loaded: ICE OS Default Package version 1.3.36.0\n ice 0000:10:00.0: 252.048 Gb/s available PCIe bandwidth (16.0 GT/s PCIe x16 link)\n ice 0000:10:00.0: PTP init successful\n ------------[ cut here ]------------\n DEBUG_LOCKS_WARN_ON(lock-\u003emagic != lock)\n WARNING: CPU: 0 PID: 410 at kernel/locking/mutex.c:587 __mutex_lock+0x773/0xd40\n Modules linked in: crct10dif_pclmul crc32_pclmul crc32c_intel polyval_clmulni polyval_generic ice(+) nvme nvme_c\u003e\n CPU: 0 PID: 410 Comm: kworker/0:4 Not tainted 6.8.0-rc5+ #3\n Hardware name: HPE ProLiant DL110 Gen10 Plus/ProLiant DL110 Gen10 Plus, BIOS U56 10/19/2023\n Workqueue: events work_for_cpu_fn\n RIP: 0010:__mutex_lock+0x773/0xd40\n Code: c0 0f 84 1d f9 ff ff 44 8b 35 0d 9c 69 01 45 85 f6 0f 85 0d f9 ff ff 48 c7 c6 12 a2 a9 85 48 c7 c7 12 f1 a\u003e\n RSP: 0018:ff7eb1a3417a7ae0 EFLAGS: 00010286\n RAX: 0000000000000000 RBX: 0000000000000002 RCX: 0000000000000000\n RDX: 0000000000000002 RSI: ffffffff85ac2bff RDI: 00000000ffffffff\n RBP: ff7eb1a3417a7b80 R08: 0000000000000000 R09: 00000000ffffbfff\n R10: ff7eb1a3417a7978 R11: ff32b80f7fd2e568 R12: 0000000000000000\n R13: 0000000000000000 R14: 0000000000000000 R15: ff32b7f02c50e0d8\n FS:  0000000000000000(0000) GS:ff32b80efe800000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000055b5852cc000 CR3: 000000003c43a004 CR4: 0000000000771ef0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n  \u003cTASK\u003e\n  ? __warn+0x84/0x170\n  ? __mutex_lock+0x773/0xd40\n  ? report_bug+0x1c7/0x1d0\n  ? prb_read_valid+0x1b/0x30\n  ? handle_bug+0x42/0x70\n  ? exc_invalid_op+0x18/0x70\n  ? asm_exc_invalid_op+0x1a/0x20\n  ? __mutex_lock+0x773/0xd40\n  ? rcu_is_watching+0x11/0x50\n  ? __kmalloc_node_track_caller+0x346/0x490\n  ? ice_dpll_lock_status_get+0x28/0x50 [ice]\n  ? __pfx_ice_dpll_lock_status_get+0x10/0x10 [ice]\n  ? ice_dpll_lock_status_get+0x28/0x50 [ice]\n  ice_dpll_lock_status_get+0x28/0x50 [ice]\n  dpll_device_get_one+0x14f/0x2e0\n  dpll_device_event_send+0x7d/0x150\n  dpll_device_register+0x124/0x180\n  ice_dpll_init_dpll+0x7b/0xd0 [ice]\n  ice_dpll_init+0x224/0xa40 [ice]\n  ? _dev_info+0x70/0x90\n  ice_load+0x468/0x690 [ice]\n  ice_probe+0x75b/0xa10 [ice]\n  ? _raw_spin_unlock_irqrestore+0x4f/0x80\n  ? process_one_work+0x1a3/0x500\n  local_pci_probe+0x47/0xa0\n  work_for_cpu_fn+0x17/0x30\n  process_one_work+0x20d/0x500\n  worker_thread+0x1df/0x3e0\n  ? __pfx_worker_thread+0x10/0x10\n  kthread+0x103/0x140\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x31/0x50\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork_asm+0x1b/0x30\n  \u003c/TASK\u003e\n irq event stamp: 125197\n hardirqs last  enabled at (125197): [\u003cffffffff8416409d\u003e] finish_task_switch.isra.0+0x12d/0x3d0\n hardirqs last disabled at (125196): [\u003cffffffff85134044\u003e] __schedule+0xea4/0x19f0\n softirqs last  enabled at (105334): [\u003cffffffff84e1e65a\u003e] napi_get_frags_check+0x1a/0x60\n softirqs last disabled at (105332): [\u003cffffffff84e1e65a\u003e] napi_get_frags_check+0x1a/0x60\n ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26855",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ice: Fix potential NULL pointer dereference in ice_bridge_setlink()\n\nThe function ice_bridge_setlink() may encounter a NULL pointer dereference\nif nlmsg_find_attr() returns NULL and br_spec is dereferenced subsequently\nin nla_for_each_nested(). To address this issue, add a check to ensure that\nbr_spec is not NULL before proceeding with the nested attribute iteration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26856",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sparx5: Fix use after free inside sparx5_del_mact_entry\n\nBased on the static analyzis of the code it looks like when an entry\nfrom the MAC table was removed, the entry was still used after being\nfreed. More precise the vid of the mac_entry was used after calling\ndevm_kfree on the mac_entry.\nThe fix consists in first using the vid of the mac_entry to delete the\nentry from the HW and after that to free it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: make sure to pull inner header in geneve_rx()\n\nsyzbot triggered a bug in geneve_rx() [1]\n\nIssue is similar to the one I fixed in commit 8d975c15c0cd\n(\"ip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\")\n\nWe have to save skb-\u003enetwork_header in a temporary variable\nin order to be able to recompute the network_header pointer\nafter a pskb_inet_may_pull() call.\n\npskb_inet_may_pull() makes sure the needed headers are in skb-\u003ehead.\n\n[1]\nBUG: KMSAN: uninit-value in IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]\n BUG: KMSAN: uninit-value in geneve_rx drivers/net/geneve.c:279 [inline]\n BUG: KMSAN: uninit-value in geneve_udp_encap_recv+0x36f9/0x3c10 drivers/net/geneve.c:391\n  IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]\n  geneve_rx drivers/net/geneve.c:279 [inline]\n  geneve_udp_encap_recv+0x36f9/0x3c10 drivers/net/geneve.c:391\n  udp_queue_rcv_one_skb+0x1d39/0x1f20 net/ipv4/udp.c:2108\n  udp_queue_rcv_skb+0x6ae/0x6e0 net/ipv4/udp.c:2186\n  udp_unicast_rcv_skb+0x184/0x4b0 net/ipv4/udp.c:2346\n  __udp4_lib_rcv+0x1c6b/0x3010 net/ipv4/udp.c:2422\n  udp_rcv+0x7d/0xa0 net/ipv4/udp.c:2604\n  ip_protocol_deliver_rcu+0x264/0x1300 net/ipv4/ip_input.c:205\n  ip_local_deliver_finish+0x2b8/0x440 net/ipv4/ip_input.c:233\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip_local_deliver+0x21f/0x490 net/ipv4/ip_input.c:254\n  dst_input include/net/dst.h:461 [inline]\n  ip_rcv_finish net/ipv4/ip_input.c:449 [inline]\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip_rcv+0x46f/0x760 net/ipv4/ip_input.c:569\n  __netif_receive_skb_one_core net/core/dev.c:5534 [inline]\n  __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5648\n  process_backlog+0x480/0x8b0 net/core/dev.c:5976\n  __napi_poll+0xe3/0x980 net/core/dev.c:6576\n  napi_poll net/core/dev.c:6645 [inline]\n  net_rx_action+0x8b8/0x1870 net/core/dev.c:6778\n  __do_softirq+0x1b7/0x7c5 kernel/softirq.c:553\n  do_softirq+0x9a/0xf0 kernel/softirq.c:454\n  __local_bh_enable_ip+0x9b/0xa0 kernel/softirq.c:381\n  local_bh_enable include/linux/bottom_half.h:33 [inline]\n  rcu_read_unlock_bh include/linux/rcupdate.h:820 [inline]\n  __dev_queue_xmit+0x2768/0x51c0 net/core/dev.c:4378\n  dev_queue_xmit include/linux/netdevice.h:3171 [inline]\n  packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8aef/0x9f10 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  __sys_sendto+0x735/0xa10 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:3819 [inline]\n  slab_alloc_node mm/slub.c:3860 [inline]\n  kmem_cache_alloc_node+0x5cb/0xbc0 mm/slub.c:3903\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n  __alloc_skb+0x352/0x790 net/core/skbuff.c:651\n  alloc_skb include/linux/skbuff.h:1296 [inline]\n  alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6394\n  sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2783\n  packet_alloc_skb net/packet/af_packet.c:2930 [inline]\n  packet_snd net/packet/af_packet.c:3024 [inline]\n  packet_sendmsg+0x70c2/0x9f10 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  __sys_sendto+0x735/0xa10 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26858",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Use a memory barrier to enforce PTP WQ xmit submission tracking occurs after populating the metadata_map\n\nJust simply reordering the functions mlx5e_ptp_metadata_map_put and\nmlx5e_ptpsq_track_metadata in the mlx5e_txwqe_complete context is not good\nenough since both the compiler and CPU are free to reorder these two\nfunctions. If reordering does occur, the issue that was supposedly fixed by\n7e3f3ba97e6c (\"net/mlx5e: Track xmit submission to PTP WQ after populating\nmetadata map\") will be seen. This will lead to NULL pointer dereferences in\nmlx5e_ptpsq_mark_ts_cqes_undelivered in the NAPI polling context due to the\ntracking list being populated before the metadata map.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-integrity: fix a memory leak when rechecking the data\n\nMemory for the \"checksums\" pointer will leak if the data is rechecked\nafter checksum failure (because the associated kfree won't happen due\nto 'goto skip_io').\n\nFix this by freeing the checksums memory before recheck, and just use\nthe \"checksum_onstack\" memory for storing checksum during recheck.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwireguard: receive: annotate data-race around receiving_counter.counter\n\nSyzkaller with KCSAN identified a data-race issue when accessing\nkeypair-\u003ereceiving_counter.counter. Use READ_ONCE() and WRITE_ONCE()\nannotations to mark the data race as intentional.\n\n    BUG: KCSAN: data-race in wg_packet_decrypt_worker / wg_packet_rx_poll\n\n    write to 0xffff888107765888 of 8 bytes by interrupt on cpu 0:\n     counter_validate drivers/net/wireguard/receive.c:321 [inline]\n     wg_packet_rx_poll+0x3ac/0xf00 drivers/net/wireguard/receive.c:461\n     __napi_poll+0x60/0x3b0 net/core/dev.c:6536\n     napi_poll net/core/dev.c:6605 [inline]\n     net_rx_action+0x32b/0x750 net/core/dev.c:6738\n     __do_softirq+0xc4/0x279 kernel/softirq.c:553\n     do_softirq+0x5e/0x90 kernel/softirq.c:454\n     __local_bh_enable_ip+0x64/0x70 kernel/softirq.c:381\n     __raw_spin_unlock_bh include/linux/spinlock_api_smp.h:167 [inline]\n     _raw_spin_unlock_bh+0x36/0x40 kernel/locking/spinlock.c:210\n     spin_unlock_bh include/linux/spinlock.h:396 [inline]\n     ptr_ring_consume_bh include/linux/ptr_ring.h:367 [inline]\n     wg_packet_decrypt_worker+0x6c5/0x700 drivers/net/wireguard/receive.c:499\n     process_one_work kernel/workqueue.c:2633 [inline]\n     ...\n\n    read to 0xffff888107765888 of 8 bytes by task 3196 on cpu 1:\n     decrypt_packet drivers/net/wireguard/receive.c:252 [inline]\n     wg_packet_decrypt_worker+0x220/0x700 drivers/net/wireguard/receive.c:501\n     process_one_work kernel/workqueue.c:2633 [inline]\n     process_scheduled_works+0x5b8/0xa30 kernel/workqueue.c:2706\n     worker_thread+0x525/0x730 kernel/workqueue.c:2787\n     ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26862",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npacket: annotate data-races around ignore_outgoing\n\nignore_outgoing is read locklessly from dev_queue_xmit_nit()\nand packet_getsockopt()\n\nAdd appropriate READ_ONCE()/WRITE_ONCE() annotations.\n\nsyzbot reported:\n\nBUG: KCSAN: data-race in dev_queue_xmit_nit / packet_setsockopt\n\nwrite to 0xffff888107804542 of 1 bytes by task 22618 on cpu 0:\n packet_setsockopt+0xd83/0xfd0 net/packet/af_packet.c:4003\n do_sock_setsockopt net/socket.c:2311 [inline]\n __sys_setsockopt+0x1d8/0x250 net/socket.c:2334\n __do_sys_setsockopt net/socket.c:2343 [inline]\n __se_sys_setsockopt net/socket.c:2340 [inline]\n __x64_sys_setsockopt+0x66/0x80 net/socket.c:2340\n do_syscall_64+0xd3/0x1d0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nread to 0xffff888107804542 of 1 bytes by task 27 on cpu 1:\n dev_queue_xmit_nit+0x82/0x620 net/core/dev.c:2248\n xmit_one net/core/dev.c:3527 [inline]\n dev_hard_start_xmit+0xcc/0x3f0 net/core/dev.c:3547\n __dev_queue_xmit+0xf24/0x1dd0 net/core/dev.c:4335\n dev_queue_xmit include/linux/netdevice.h:3091 [inline]\n batadv_send_skb_packet+0x264/0x300 net/batman-adv/send.c:108\n batadv_send_broadcast_skb+0x24/0x30 net/batman-adv/send.c:127\n batadv_iv_ogm_send_to_if net/batman-adv/bat_iv_ogm.c:392 [inline]\n batadv_iv_ogm_emit net/batman-adv/bat_iv_ogm.c:420 [inline]\n batadv_iv_send_outstanding_bat_ogm_packet+0x3f0/0x4b0 net/batman-adv/bat_iv_ogm.c:1700\n process_one_work kernel/workqueue.c:3254 [inline]\n process_scheduled_works+0x465/0x990 kernel/workqueue.c:3335\n worker_thread+0x526/0x730 kernel/workqueue.c:3416\n kthread+0x1d1/0x210 kernel/kthread.c:388\n ret_from_fork+0x4b/0x60 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:243\n\nvalue changed: 0x00 -\u003e 0x01\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 1 PID: 27 Comm: kworker/u8:1 Tainted: G        W          6.8.0-syzkaller-08073-g480e035fc4c7 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024\nWorkqueue: bat_events batadv_iv_send_outstanding_bat_ogm_packet",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhsr: Fix uninit-value access in hsr_get_node()\n\nKMSAN reported the following uninit-value access issue [1]:\n\n=====================================================\nBUG: KMSAN: uninit-value in hsr_get_node+0xa2e/0xa40 net/hsr/hsr_framereg.c:246\n hsr_get_node+0xa2e/0xa40 net/hsr/hsr_framereg.c:246\n fill_frame_info net/hsr/hsr_forward.c:577 [inline]\n hsr_forward_skb+0xe12/0x30e0 net/hsr/hsr_forward.c:615\n hsr_dev_xmit+0x1a1/0x270 net/hsr/hsr_device.c:223\n __netdev_start_xmit include/linux/netdevice.h:4940 [inline]\n netdev_start_xmit include/linux/netdevice.h:4954 [inline]\n xmit_one net/core/dev.c:3548 [inline]\n dev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n __dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\n dev_queue_xmit include/linux/netdevice.h:3134 [inline]\n packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276\n packet_snd net/packet/af_packet.c:3087 [inline]\n packet_sendmsg+0x8b1d/0x9f30 net/packet/af_packet.c:3119\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n __sys_sendto+0x735/0xa10 net/socket.c:2191\n __do_sys_sendto net/socket.c:2203 [inline]\n __se_sys_sendto net/socket.c:2199 [inline]\n __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\n slab_alloc_node mm/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x5e9/0xb10 mm/slub.c:3523\n kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n __alloc_skb+0x318/0x740 net/core/skbuff.c:651\n alloc_skb include/linux/skbuff.h:1286 [inline]\n alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6334\n sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2787\n packet_alloc_skb net/packet/af_packet.c:2936 [inline]\n packet_snd net/packet/af_packet.c:3030 [inline]\n packet_sendmsg+0x70e8/0x9f30 net/packet/af_packet.c:3119\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n __sys_sendto+0x735/0xa10 net/socket.c:2191\n __do_sys_sendto net/socket.c:2203 [inline]\n __se_sys_sendto net/socket.c:2199 [inline]\n __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nCPU: 1 PID: 5033 Comm: syz-executor334 Not tainted 6.7.0-syzkaller-00562-g9f8413c4a66f #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\n=====================================================\n\nIf the packet type ID field in the Ethernet header is either ETH_P_PRP or\nETH_P_HSR, but it is not followed by an HSR tag, hsr_get_skb_sequence_nr()\nreads an invalid value as a sequence number. This causes the above issue.\n\nThis patch fixes the issue by returning NULL if the Ethernet header is not\nfollowed by an HSR tag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrds: tcp: Fix use-after-free of net in reqsk_timer_handler().\n\nsyzkaller reported a warning of netns tracker [0] followed by KASAN\nsplat [1] and another ref tracker warning [1].\n\nsyzkaller could not find a repro, but in the log, the only suspicious\nsequence was as follows:\n\n  18:26:22 executing program 1:\n  r0 = socket$inet6_mptcp(0xa, 0x1, 0x106)\n  ...\n  connect$inet6(r0, \u0026(0x7f0000000080)={0xa, 0x4001, 0x0, @loopback}, 0x1c) (async)\n\nThe notable thing here is 0x4001 in connect(), which is RDS_TCP_PORT.\n\nSo, the scenario would be:\n\n  1. unshare(CLONE_NEWNET) creates a per netns tcp listener in\n      rds_tcp_listen_init().\n  2. syz-executor connect()s to it and creates a reqsk.\n  3. syz-executor exit()s immediately.\n  4. netns is dismantled.  [0]\n  5. reqsk timer is fired, and UAF happens while freeing reqsk.  [1]\n  6. listener is freed after RCU grace period.  [2]\n\nBasically, reqsk assumes that the listener guarantees netns safety\nuntil all reqsk timers are expired by holding the listener's refcount.\nHowever, this was not the case for kernel sockets.\n\nCommit 740ea3c4a0b2 (\"tcp: Clean up kernel listener's reqsk in\ninet_twsk_purge()\") fixed this issue only for per-netns ehash.\n\nLet's apply the same fix for the global ehash.\n\n[0]:\nref_tracker: net notrefcnt@0000000065449cc3 has 1/1 users at\n     sk_alloc (./include/net/net_namespace.h:337 net/core/sock.c:2146)\n     inet6_create (net/ipv6/af_inet6.c:192 net/ipv6/af_inet6.c:119)\n     __sock_create (net/socket.c:1572)\n     rds_tcp_listen_init (net/rds/tcp_listen.c:279)\n     rds_tcp_init_net (net/rds/tcp.c:577)\n     ops_init (net/core/net_namespace.c:137)\n     setup_net (net/core/net_namespace.c:340)\n     copy_net_ns (net/core/net_namespace.c:497)\n     create_new_namespaces (kernel/nsproxy.c:110)\n     unshare_nsproxy_namespaces (kernel/nsproxy.c:228 (discriminator 4))\n     ksys_unshare (kernel/fork.c:3429)\n     __x64_sys_unshare (kernel/fork.c:3496)\n     do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)\n     entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)\n...\nWARNING: CPU: 0 PID: 27 at lib/ref_tracker.c:179 ref_tracker_dir_exit (lib/ref_tracker.c:179)\n\n[1]:\nBUG: KASAN: slab-use-after-free in inet_csk_reqsk_queue_drop (./include/net/inet_hashtables.h:180 net/ipv4/inet_connection_sock.c:952 net/ipv4/inet_connection_sock.c:966)\nRead of size 8 at addr ffff88801b370400 by task swapper/0/0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cIRQ\u003e\n dump_stack_lvl (lib/dump_stack.c:107 (discriminator 1))\n print_report (mm/kasan/report.c:378 mm/kasan/report.c:488)\n kasan_report (mm/kasan/report.c:603)\n inet_csk_reqsk_queue_drop (./include/net/inet_hashtables.h:180 net/ipv4/inet_connection_sock.c:952 net/ipv4/inet_connection_sock.c:966)\n reqsk_timer_handler (net/ipv4/inet_connection_sock.c:979 net/ipv4/inet_connection_sock.c:1092)\n call_timer_fn (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:207 ./include/trace/events/timer.h:127 kernel/time/timer.c:1701)\n __run_timers.part.0 (kernel/time/timer.c:1752 kernel/time/timer.c:2038)\n run_timer_softirq (kernel/time/timer.c:2053)\n __do_softirq (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:207 ./include/trace/events/irq.h:142 kernel/softirq.c:554)\n irq_exit_rcu (kernel/softirq.c:427 kernel/softirq.c:632 kernel/softirq.c:644)\n sysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1076 (discriminator 14))\n \u003c/IRQ\u003e\n\nAllocated by task 258 on cpu 0 at 83.612050s:\n kasan_save_stack (mm/kasan/common.c:48)\n kasan_save_track (mm/kasan/common.c:68)\n __kasan_slab_alloc (mm/kasan/common.c:343)\n kmem_cache_alloc (mm/slub.c:3813 mm/slub.c:3860 mm/slub.c:3867)\n copy_net_ns (./include/linux/slab.h:701 net/core/net_namespace.c:421 net/core/net_namespace.c:480)\n create_new_namespaces (kernel/nsproxy.c:110)\n unshare_nsproxy_name\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26866",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: lpspi: Avoid potential use-after-free in probe()\n\nfsl_lpspi_probe() is allocating/disposing memory manually with\nspi_alloc_host()/spi_alloc_target(), but uses\ndevm_spi_register_controller(). In case of error after the latter call the\nmemory will be explicitly freed in the probe function by\nspi_controller_put() call, but used afterwards by \"devm\" management outside\nprobe() (spi_unregister_controller() \u003c- devm_spi_unregister() below).\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000070\n...\nCall trace:\n kernfs_find_ns\n kernfs_find_and_get_ns\n sysfs_remove_group\n sysfs_remove_groups\n device_remove_attrs\n device_del\n spi_unregister_controller\n devm_spi_unregister\n release_nodes\n devres_release_all\n really_probe\n driver_probe_device\n __device_attach_driver\n bus_for_each_drv\n __device_attach\n device_initial_probe\n bus_probe_device\n deferred_probe_work_func\n process_one_work\n worker_thread\n kthread\n ret_from_fork",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: fix panic when nfs4_ff_layout_prepare_ds() fails\n\nWe've been seeing the following panic in production\n\nBUG: kernel NULL pointer dereference, address: 0000000000000065\nPGD 2f485f067 P4D 2f485f067 PUD 2cc5d8067 PMD 0\nRIP: 0010:ff_layout_cancel_io+0x3a/0x90 [nfs_layout_flexfiles]\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x78/0xc0\n ? page_fault_oops+0x286/0x380\n ? __rpc_execute+0x2c3/0x470 [sunrpc]\n ? rpc_new_task+0x42/0x1c0 [sunrpc]\n ? exc_page_fault+0x5d/0x110\n ? asm_exc_page_fault+0x22/0x30\n ? ff_layout_free_layoutreturn+0x110/0x110 [nfs_layout_flexfiles]\n ? ff_layout_cancel_io+0x3a/0x90 [nfs_layout_flexfiles]\n ? ff_layout_cancel_io+0x6f/0x90 [nfs_layout_flexfiles]\n pnfs_mark_matching_lsegs_return+0x1b0/0x360 [nfsv4]\n pnfs_error_mark_layout_for_return+0x9e/0x110 [nfsv4]\n ? ff_layout_send_layouterror+0x50/0x160 [nfs_layout_flexfiles]\n nfs4_ff_layout_prepare_ds+0x11f/0x290 [nfs_layout_flexfiles]\n ff_layout_pg_init_write+0xf0/0x1f0 [nfs_layout_flexfiles]\n __nfs_pageio_add_request+0x154/0x6c0 [nfs]\n nfs_pageio_add_request+0x26b/0x380 [nfs]\n nfs_do_writepage+0x111/0x1e0 [nfs]\n nfs_writepages_callback+0xf/0x30 [nfs]\n write_cache_pages+0x17f/0x380\n ? nfs_pageio_init_write+0x50/0x50 [nfs]\n ? nfs_writepages+0x6d/0x210 [nfs]\n ? nfs_writepages+0x6d/0x210 [nfs]\n nfs_writepages+0x125/0x210 [nfs]\n do_writepages+0x67/0x220\n ? generic_perform_write+0x14b/0x210\n filemap_fdatawrite_wbc+0x5b/0x80\n file_write_and_wait_range+0x6d/0xc0\n nfs_file_fsync+0x81/0x170 [nfs]\n ? nfs_file_mmap+0x60/0x60 [nfs]\n __x64_sys_fsync+0x53/0x90\n do_syscall_64+0x3d/0x90\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nInspecting the core with drgn I was able to pull this\n\n  \u003e\u003e\u003e prog.crashed_thread().stack_trace()[0]\n  #0 at 0xffffffffa079657a (ff_layout_cancel_io+0x3a/0x84) in ff_layout_cancel_io at fs/nfs/flexfilelayout/flexfilelayout.c:2021:27\n  \u003e\u003e\u003e prog.crashed_thread().stack_trace()[0]['idx']\n  (u32)1\n  \u003e\u003e\u003e prog.crashed_thread().stack_trace()[0]['flseg'].mirror_array[1].mirror_ds\n  (struct nfs4_ff_layout_ds *)0xffffffffffffffed\n\nThis is clear from the stack trace, we call nfs4_ff_layout_prepare_ds()\nwhich could error out initializing the mirror_ds, and then we go to\nclean it all up and our check is only for if (!mirror-\u003emirror_ds).  This\nis inconsistent with the rest of the users of mirror_ds, which have\n\n  if (IS_ERR_OR_NULL(mirror_ds))\n\nto keep from tripping over this exact scenario.  Fix this up in\nff_layout_cancel_io() to make sure we don't panic when we get an error.\nI also spot checked all the other instances of checking mirror_ds and we\nappear to be doing the correct checks everywhere, only unconditionally\ndereferencing mirror_ds when we know it would be valid.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4.2: fix nfs4_listxattr kernel BUG at mm/usercopy.c:102\n\nA call to listxattr() with a buffer size = 0 returns the actual\nsize of the buffer needed for a subsequent call. When size \u003e 0,\nnfs4_listxattr() does not return an error because either\ngeneric_listxattr() or nfs4_listxattr_nfs4_label() consumes\nexactly all the bytes then size is 0 when calling\nnfs4_listxattr_nfs4_user() which then triggers the following\nkernel BUG:\n\n  [   99.403778] kernel BUG at mm/usercopy.c:102!\n  [   99.404063] Internal error: Oops - BUG: 00000000f2000800 [#1] SMP\n  [   99.408463] CPU: 0 PID: 3310 Comm: python3 Not tainted 6.6.0-61.fc40.aarch64 #1\n  [   99.415827] Call trace:\n  [   99.415985]  usercopy_abort+0x70/0xa0\n  [   99.416227]  __check_heap_object+0x134/0x158\n  [   99.416505]  check_heap_object+0x150/0x188\n  [   99.416696]  __check_object_size.part.0+0x78/0x168\n  [   99.416886]  __check_object_size+0x28/0x40\n  [   99.417078]  listxattr+0x8c/0x120\n  [   99.417252]  path_listxattr+0x78/0xe0\n  [   99.417476]  __arm64_sys_listxattr+0x28/0x40\n  [   99.417723]  invoke_syscall+0x78/0x100\n  [   99.417929]  el0_svc_common.constprop.0+0x48/0xf0\n  [   99.418186]  do_el0_svc+0x24/0x38\n  [   99.418376]  el0_svc+0x3c/0x110\n  [   99.418554]  el0t_64_sync_handler+0x120/0x130\n  [   99.418788]  el0t_64_sync+0x194/0x198\n  [   99.418994] Code: aa0003e3 d000a3e0 91310000 97f49bdb (d4210000)\n\nIssue is reproduced when generic_listxattr() returns 'system.nfs4_acl',\nthus calling lisxattr() with size = 16 will trigger the bug.\n\nAdd check on nfs4_listxattr() to return ERANGE error when it is\ncalled with size \u003e 0 and the return value is greater than size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix kernel crash when 1588 is received on HIP08 devices\n\nThe HIP08 devices does not register the ptp devices, so the\nhdev-\u003eptp is NULL, but the hardware can receive 1588 messages,\nand set the HNS3_RXD_TS_VLD_B bit, so, if match this case, the\naccess of hdev-\u003eptp-\u003eflags will cause a kernel crash:\n\n[ 5888.946472] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000018\n[ 5888.946475] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000018\n...\n[ 5889.266118] pc : hclge_ptp_get_rx_hwts+0x40/0x170 [hclge]\n[ 5889.272612] lr : hclge_ptp_get_rx_hwts+0x34/0x170 [hclge]\n[ 5889.279101] sp : ffff800012c3bc50\n[ 5889.283516] x29: ffff800012c3bc50 x28: ffff2040002be040\n[ 5889.289927] x27: ffff800009116484 x26: 0000000080007500\n[ 5889.296333] x25: 0000000000000000 x24: ffff204001c6f000\n[ 5889.302738] x23: ffff204144f53c00 x22: 0000000000000000\n[ 5889.309134] x21: 0000000000000000 x20: ffff204004220080\n[ 5889.315520] x19: ffff204144f53c00 x18: 0000000000000000\n[ 5889.321897] x17: 0000000000000000 x16: 0000000000000000\n[ 5889.328263] x15: 0000004000140ec8 x14: 0000000000000000\n[ 5889.334617] x13: 0000000000000000 x12: 00000000010011df\n[ 5889.340965] x11: bbfeff4d22000000 x10: 0000000000000000\n[ 5889.347303] x9 : ffff800009402124 x8 : 0200f78811dfbb4d\n[ 5889.353637] x7 : 2200000000191b01 x6 : ffff208002a7d480\n[ 5889.359959] x5 : 0000000000000000 x4 : 0000000000000000\n[ 5889.366271] x3 : 0000000000000000 x2 : 0000000000000000\n[ 5889.372567] x1 : 0000000000000000 x0 : ffff20400095c080\n[ 5889.378857] Call trace:\n[ 5889.382285] hclge_ptp_get_rx_hwts+0x40/0x170 [hclge]\n[ 5889.388304] hns3_handle_bdinfo+0x324/0x410 [hns3]\n[ 5889.394055] hns3_handle_rx_bd+0x60/0x150 [hns3]\n[ 5889.399624] hns3_clean_rx_ring+0x84/0x170 [hns3]\n[ 5889.405270] hns3_nic_common_poll+0xa8/0x220 [hns3]\n[ 5889.411084] napi_poll+0xcc/0x264\n[ 5889.415329] net_rx_action+0xd4/0x21c\n[ 5889.419911] __do_softirq+0x130/0x358\n[ 5889.424484] irq_exit+0x134/0x154\n[ 5889.428700] __handle_domain_irq+0x88/0xf0\n[ 5889.433684] gic_handle_irq+0x78/0x2c0\n[ 5889.438319] el1_irq+0xb8/0x140\n[ 5889.442354] arch_cpu_idle+0x18/0x40\n[ 5889.446816] default_idle_call+0x5c/0x1c0\n[ 5889.451714] cpuidle_idle_call+0x174/0x1b0\n[ 5889.456692] do_idle+0xc8/0x160\n[ 5889.460717] cpu_startup_entry+0x30/0xfc\n[ 5889.465523] secondary_start_kernel+0x158/0x1ec\n[ 5889.470936] Code: 97ffab78 f9411c14 91408294 f9457284 (f9400c80)\n[ 5889.477950] SMP: stopping secondary CPUs\n[ 5890.514626] SMP: failed to stop secondary CPUs 0-69,71-95\n[ 5890.522951] Starting crashdump kernel...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26889",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_core: Fix possible buffer overflow\n\nstruct hci_dev_info has a fixed size name[8] field so in the event that\nhdev-\u003ename is bigger than that strcpy would attempt to write past its\nsize, so this fixes this problem by switching to use strscpy.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix kmemleak of rdev-\u003eserial\n\nIf kobject_add() is fail in bind_rdev_to_array(), 'rdev-\u003eserial' will be\nalloc not be freed, and kmemleak occurs.\n\nunreferenced object 0xffff88815a350000 (size 49152):\n  comm \"mdadm\", pid 789, jiffies 4294716910\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc f773277a):\n    [\u003c0000000058b0a453\u003e] kmemleak_alloc+0x61/0xe0\n    [\u003c00000000366adf14\u003e] __kmalloc_large_node+0x15e/0x270\n    [\u003c000000002e82961b\u003e] __kmalloc_node.cold+0x11/0x7f\n    [\u003c00000000f206d60a\u003e] kvmalloc_node+0x74/0x150\n    [\u003c0000000034bf3363\u003e] rdev_init_serial+0x67/0x170\n    [\u003c0000000010e08fe9\u003e] mddev_create_serial_pool+0x62/0x220\n    [\u003c00000000c3837bf0\u003e] bind_rdev_to_array+0x2af/0x630\n    [\u003c0000000073c28560\u003e] md_add_new_disk+0x400/0x9f0\n    [\u003c00000000770e30ff\u003e] md_ioctl+0x15bf/0x1c10\n    [\u003c000000006cfab718\u003e] blkdev_ioctl+0x191/0x3f0\n    [\u003c0000000085086a11\u003e] vfs_ioctl+0x22/0x60\n    [\u003c0000000018b656fe\u003e] __x64_sys_ioctl+0xba/0xe0\n    [\u003c00000000e54e675e\u003e] do_syscall_64+0x71/0x150\n    [\u003c000000008b0ad622\u003e] entry_SYSCALL_64_after_hwframe+0x6c/0x74",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: ulpi: Fix debugfs directory leak\n\nThe ULPI per-device debugfs root is named after the ulpi device's\nparent, but ulpi_unregister_interface tries to remove a debugfs\ndirectory named after the ulpi device itself. This results in the\ndirectory sticking around and preventing subsequent (deferred) probes\nfrom succeeding. Change the directory name to match the ulpi device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/trigger: Fix to return error if failed to alloc snapshot\n\nFix register_snapshot_trigger() to return error code if it failed to\nallocate a snapshot instead of 0 (success). Unless that, it will register\nsnapshot trigger without an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet: inet_defrag: prevent sk release while still in use\n\nip_local_out() and other functions can pass skb-\u003esk as function argument.\n\nIf the skb is a fragment and reassembly happens before such function call\nreturns, the sk must not be released.\n\nThis affects skb fragments reassembled via netfilter or similar\nmodules, e.g. openvswitch or ct_act.c, when run as part of tx pipeline.\n\nEric Dumazet made an initial analysis of this bug.  Quoting Eric:\n  Calling ip_defrag() in output path is also implying skb_orphan(),\n  which is buggy because output path relies on sk not disappearing.\n\n  A relevant old patch about the issue was :\n  8282f27449bf (\"inet: frag: Always orphan skbs inside ip_defrag()\")\n\n  [..]\n\n  net/ipv4/ip_output.c depends on skb-\u003esk being set, and probably to an\n  inet socket, not an arbitrary one.\n\n  If we orphan the packet in ipvlan, then downstream things like FQ\n  packet scheduler will not work properly.\n\n  We need to change ip_defrag() to only use skb_orphan() when really\n  needed, ie whenever frag_list is going to be used.\n\nEric suggested to stash sk in fragment queue and made an initial patch.\nHowever there is a problem with this:\n\nIf skb is refragmented again right after, ip_do_fragment() will copy\nhead-\u003esk to the new fragments, and sets up destructor to sock_wfree.\nIOW, we have no choice but to fix up sk_wmem accouting to reflect the\nfully reassembled skb, else wmem will underflow.\n\nThis change moves the orphan down into the core, to last possible moment.\nAs ip_defrag_offset is aliased with sk_buff-\u003esk member, we must move the\noffset into the FRAG_CB, else skb-\u003esk gets clobbered.\n\nThis allows to delay the orphaning long enough to learn if the skb has\nto be queued or if the skb is completing the reasm queue.\n\nIn the former case, things work as before, skb is orphaned.  This is\nsafe because skb gets queued/stolen and won't continue past reasm engine.\n\nIn the latter case, we will steal the skb-\u003esk reference, reattach it to\nthe head skb, and fix up wmem accouting when inet_frag inflates truesize.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: validate the parameters of bo mapping operations more clearly\n\nVerify the parameters of\namdgpu_vm_bo_(map/replace_map/clearing_mappings) in one common place.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix garbage collector racing against connect()\n\nGarbage collector does not take into account the risk of embryo getting\nenqueued during the garbage collection. If such embryo has a peer that\ncarries SCM_RIGHTS, two consecutive passes of scan_children() may see a\ndifferent set of children. Leading to an incorrectly elevated inflight\ncount, and then a dangling pointer within the gc_inflight_list.\n\nsockets are AF_UNIX/SOCK_STREAM\nS is an unconnected socket\nL is a listening in-flight socket bound to addr, not in fdtable\nV's fd will be passed via sendmsg(), gets inflight count bumped\n\nconnect(S, addr)\tsendmsg(S, [V]); close(V)\t__unix_gc()\n----------------\t-------------------------\t-----------\n\nNS = unix_create1()\nskb1 = sock_wmalloc(NS)\nL = unix_find_other(addr)\nunix_state_lock(L)\nunix_peer(S) = NS\n\t\t\t// V count=1 inflight=0\n\n \t\t\tNS = unix_peer(S)\n \t\t\tskb2 = sock_alloc()\n\t\t\tskb_queue_tail(NS, skb2[V])\n\n\t\t\t// V became in-flight\n\t\t\t// V count=2 inflight=1\n\n\t\t\tclose(V)\n\n\t\t\t// V count=1 inflight=1\n\t\t\t// GC candidate condition met\n\n\t\t\t\t\t\tfor u in gc_inflight_list:\n\t\t\t\t\t\t  if (total_refs == inflight_refs)\n\t\t\t\t\t\t    add u to gc_candidates\n\n\t\t\t\t\t\t// gc_candidates={L, V}\n\n\t\t\t\t\t\tfor u in gc_candidates:\n\t\t\t\t\t\t  scan_children(u, dec_inflight)\n\n\t\t\t\t\t\t// embryo (skb1) was not\n\t\t\t\t\t\t// reachable from L yet, so V's\n\t\t\t\t\t\t// inflight remains unchanged\n__skb_queue_tail(L, skb1)\nunix_state_unlock(L)\n\t\t\t\t\t\tfor u in gc_candidates:\n\t\t\t\t\t\t  if (u.inflight)\n\t\t\t\t\t\t    scan_children(u, inc_inflight_move_tail)\n\n\t\t\t\t\t\t// V count=1 inflight=2 (!)\n\nIf there is a GC-candidate listening socket, lock/unlock its state. This\nmakes GC wait until the end of any ongoing connect() to that socket. After\nflipping the lock, a possibly SCM-laden embryo is already enqueued. And if\nthere is another embryo coming, it can not possibly carry SCM_RIGHTS. At\nthis point, unix_inflight() can not happen because unix_gc_lock is already\ntaken. Inflight graph remains unaffected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: release mutex after nft_gc_seq_end from abort path\n\nThe commit mutex should not be released during the critical section\nbetween nft_gc_seq_begin() and nft_gc_seq_end(), otherwise, async GC\nworker could collect expired objects and get the released commit lock\nwithin the same GC sequence.\n\nnf_tables_module_autoload() temporarily releases the mutex to load\nmodule dependencies, then it goes back to replay the transaction again.\nMove it at the end of the abort phase after nft_gc_seq_end() is called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_debug_files_proc_show()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26929",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix double free of the ha-\u003evp_map pointer\n\nCoverity scan reported potential risk of double free of the pointer\nha-\u003evp_map.  ha-\u003evp_map was freed in qla2x00_mem_alloc(), and again freed\nin function qla2x00_mem_free(ha).\n\nAssign NULL to vp_map and kfree take care of NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix command flush on cable pull\n\nSystem crash due to command failed to flush back to SCSI layer.\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000000\n PGD 0 P4D 0\n Oops: 0000 [#1] SMP NOPTI\n CPU: 27 PID: 793455 Comm: kworker/u130:6 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-372.9.1.el8.x86_64 #1\n Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021\n Workqueue: nvme-wq nvme_fc_connect_ctrl_work [nvme_fc]\n RIP: 0010:__wake_up_common+0x4c/0x190\n Code: 24 10 4d 85 c9 74 0a 41 f6 01 04 0f 85 9d 00 00 00 48 8b 43 08 48 83 c3 08 4c 8d 48 e8 49 8d 41 18 48 39 c3 0f 84 f0 00 00 00 \u003c49\u003e 8b 41 18 89 54 24 08 31 ed 4c 8d 70 e8 45 8b 29 41 f6 c5 04 75\n RSP: 0018:ffff95f3e0cb7cd0 EFLAGS: 00010086\n RAX: 0000000000000000 RBX: ffff8b08d3b26328 RCX: 0000000000000000\n RDX: 0000000000000001 RSI: 0000000000000003 RDI: ffff8b08d3b26320\n RBP: 0000000000000001 R08: 0000000000000000 R09: ffffffffffffffe8\n R10: 0000000000000000 R11: ffff95f3e0cb7a60 R12: ffff95f3e0cb7d20\n R13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000\n FS:  0000000000000000(0000) GS:ffff8b2fdf6c0000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000002f1e410002 CR4: 00000000007706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n  __wake_up_common_lock+0x7c/0xc0\n  qla_nvme_ls_req+0x355/0x4c0 [qla2xxx]\n qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae1407ca000 from port 21:32:00:02:ac:07:ee:b8 loop_id 0x02 s_id 01:02:00 logout 1 keep 0 els_logo 0\n ? __nvme_fc_send_ls_req+0x260/0x380 [nvme_fc]\n qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:00:02:ac:07:ee:b8 state transitioned from ONLINE to LOST - portid=010200.\n  ? nvme_fc_send_ls_req.constprop.42+0x1a/0x45 [nvme_fc]\n qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320002ac07eeb8. rport ffff8ae598122000 roles 1\n ? nvme_fc_connect_ctrl_work.cold.63+0x1e3/0xa7d [nvme_fc]\n qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae14801e000 from port 21:32:01:02:ad:f7:ee:b8 loop_id 0x04 s_id 01:02:01 logout 1 keep 0 els_logo 0\n  ? __switch_to+0x10c/0x450\n ? process_one_work+0x1a7/0x360\n qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:01:02:ad:f7:ee:b8 state transitioned from ONLINE to LOST - portid=010201.\n  ? worker_thread+0x1ce/0x390\n  ? create_worker+0x1a0/0x1a0\n qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320102adf7eeb8. rport ffff8ae3b2312800 roles 70\n  ? kthread+0x10a/0x120\n qla2xxx [0000:12:00.1]-2112:3: qla_nvme_unregister_remote_port: unregister remoteport on ffff8ae14801e000 21320102adf7eeb8\n  ? set_kthread_struct+0x40/0x40\n qla2xxx [0000:12:00.1]-2110:3: remoteport_delete of ffff8ae14801e000 21320102adf7eeb8 completed.\n  ? ret_from_fork+0x1f/0x40\n qla2xxx [0000:12:00.1]-f086:3: qlt_free_session_done: waiting for sess ffff8ae14801e000 logout\n\nThe system was under memory stress where driver was not able to allocate an\nSRB to carry out error recovery of cable pull.  The failure to flush causes\nupper layer to start modifying scsi_cmnd.  When the system frees up some\nmemory, the subsequent cable pull trigger another command flush. At this\npoint the driver access a null pointer when attempting to DMA unmap the\nSGL.\n\nAdd a check to make sure commands are flush back on session tear down to\nprevent the null pointer access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: fix double-free issue in tcpm_port_unregister_pd()\n\nWhen unregister pd capabilitie in tcpm, KASAN will capture below double\n-free issue. The root cause is the same capabilitiy will be kfreed twice,\nthe first time is kfreed by pd_capabilities_release() and the second time\nis explicitly kfreed by tcpm_port_unregister_pd().\n\n[    3.988059] BUG: KASAN: double-free in tcpm_port_unregister_pd+0x1a4/0x3dc\n[    3.995001] Free of addr ffff0008164d3000 by task kworker/u16:0/10\n[    4.001206]\n[    4.002712] CPU: 2 PID: 10 Comm: kworker/u16:0 Not tainted 6.8.0-rc5-next-20240220-05616-g52728c567a55 #53\n[    4.012402] Hardware name: Freescale i.MX8QXP MEK (DT)\n[    4.017569] Workqueue: events_unbound deferred_probe_work_func\n[    4.023456] Call trace:\n[    4.025920]  dump_backtrace+0x94/0xec\n[    4.029629]  show_stack+0x18/0x24\n[    4.032974]  dump_stack_lvl+0x78/0x90\n[    4.036675]  print_report+0xfc/0x5c0\n[    4.040289]  kasan_report_invalid_free+0xa0/0xc0\n[    4.044937]  __kasan_slab_free+0x124/0x154\n[    4.049072]  kfree+0xb4/0x1e8\n[    4.052069]  tcpm_port_unregister_pd+0x1a4/0x3dc\n[    4.056725]  tcpm_register_port+0x1dd0/0x2558\n[    4.061121]  tcpci_register_port+0x420/0x71c\n[    4.065430]  tcpci_probe+0x118/0x2e0\n\nTo fix the issue, this will remove kree() from tcpm_port_unregister_pd().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix deadlock in port \"disable\" sysfs attribute\n\nThe show and store callback routines for the \"disable\" sysfs attribute\nfile in port.c acquire the device lock for the port's parent hub\ndevice.  This can cause problems if another process has locked the hub\nto remove it or change its configuration:\n\n\tRemoving the hub or changing its configuration requires the\n\thub interface to be removed, which requires the port device\n\tto be removed, and device_del() waits until all outstanding\n\tsysfs attribute callbacks for the ports have returned.  The\n\tlock can't be released until then.\n\n\tBut the disable_show() or disable_store() routine can't return\n\tuntil after it has acquired the lock.\n\nThe resulting deadlock can be avoided by calling\nsysfs_break_active_protection().  This will cause the sysfs core not\nto wait for the attribute's callback routine to return, allowing the\nremoval to proceed.  The disadvantage is that after making this call,\nthere is no guarantee that the hub structure won't be deallocated at\nany moment.  To prevent this, we have to acquire a reference to it\nfirst by calling hub_get().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix deadlock in usb_deauthorize_interface()\n\nAmong the attribute file callback routines in\ndrivers/usb/core/sysfs.c, the interface_authorized_store() function is\nthe only one which acquires a device lock on an ancestor device: It\ncalls usb_deauthorize_interface(), which locks the interface's parent\nUSB device.\n\nThe will lead to deadlock if another process already owns that lock\nand tries to remove the interface, whether through a configuration\nchange or because the device has been disconnected.  As part of the\nremoval procedure, device_del() waits for all ongoing sysfs attribute\ncallbacks to complete.  But usb_deauthorize_interface() can't complete\nuntil the device lock has been released, and the lock won't be\nreleased until the removal has finished.\n\nThe mechanism provided by sysfs to prevent this kind of deadlock is\nto use the sysfs_break_active_protection() function, which tells sysfs\nnot to wait for the attribute callback.\n\nReported-and-tested by: Yue Sun \u003csamsun1006219@gmail.com\u003e\nReported by: xingwei lee \u003cxrivendell7@gmail.com\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix unremoved procfs host directory regression\n\nCommit fc663711b944 (\"scsi: core: Remove the /proc/scsi/${proc_name}\ndirectory earlier\") fixed a bug related to modules loading/unloading, by\nadding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led\nto a potential duplicate call to the hostdir_rm() routine, since it's also\ncalled from scsi_host_dev_release(). That triggered a regression report,\nwhich was then fixed by commit be03df3d4bfe (\"scsi: core: Fix a procfs host\ndirectory removal regression\"). The fix just dropped the hostdir_rm() call\nfrom dev_release().\n\nBut it happens that this proc directory is created on scsi_host_alloc(),\nand that function \"pairs\" with scsi_host_dev_release(), while\nscsi_remove_host() pairs with scsi_add_host(). In other words, it seems the\nreason for removing the proc directory on dev_release() was meant to cover\ncases in which a SCSI host structure was allocated, but the call to\nscsi_add_host() didn't happen. And that pattern happens to exist in some\nerror paths, for example.\n\nSyzkaller causes that by using USB raw gadget device, error'ing on\nusb-storage driver, at usb_stor_probe2(). By checking that path, we can see\nthat the BadDevice label leads to a scsi_host_put() after a SCSI host\nallocation, but there's no call to scsi_add_host() in such path. That leads\nto messages like this in dmesg (and a leak of the SCSI host proc\nstructure):\n\nusb-storage 4-1:87.51: USB Mass Storage device detected\nproc_dir_entry 'scsi/usb-storage' already registered\nWARNING: CPU: 1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0 fs/proc/generic.c:376\n\nThe proper fix seems to still call scsi_proc_hostdir_rm() on dev_release(),\nbut guard that with the state check for SHOST_CREATED; there is even a\ncomment in scsi_host_dev_release() detailing that: such conditional is\nmeant for cases where the SCSI host was allocated but there was no calls to\n{add,remove}_host(), like the usb-storage case.\n\nThis is what we propose here and with that, the error path of usb-storage\ndoes not trigger the warning anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gt: Reset queue_priority_hint on parking\n\nOriginally, with strict in order execution, we could complete execution\nonly when the queue was empty. Preempt-to-busy allows replacement of an\nactive request that may complete before the preemption is processed by\nHW. If that happens, the request is retired from the queue, but the\nqueue_priority_hint remains set, preventing direct submission until\nafter the next CS interrupt is processed.\n\nThis preempt-to-busy race can be triggered by the heartbeat, which will\nalso act as the power-management barrier and upon completion allow us to\nidle the HW. We may process the completion of the heartbeat, and begin\nparking the engine before the CS event that restores the\nqueue_priority_hint, causing us to fail the assertion that it is MIN.\n\n\u003c3\u003e[  166.210729] __engine_park:283 GEM_BUG_ON(engine-\u003esched_engine-\u003equeue_priority_hint != (-((int)(~0U \u003e\u003e 1)) - 1))\n\u003c0\u003e[  166.210781] Dumping ftrace buffer:\n\u003c0\u003e[  166.210795] ---------------------------------\n...\n\u003c0\u003e[  167.302811] drm_fdin-1097      2..s1. 165741070us : trace_ports: 0000:00:02.0 rcs0: promote { ccid:20 1217:2 prio 0 }\n\u003c0\u003e[  167.302861] drm_fdin-1097      2d.s2. 165741072us : execlists_submission_tasklet: 0000:00:02.0 rcs0: preempting last=1217:2, prio=0, hint=2147483646\n\u003c0\u003e[  167.302928] drm_fdin-1097      2d.s2. 165741072us : __i915_request_unsubmit: 0000:00:02.0 rcs0: fence 1217:2, current 0\n\u003c0\u003e[  167.302992] drm_fdin-1097      2d.s2. 165741073us : __i915_request_submit: 0000:00:02.0 rcs0: fence 3:4660, current 4659\n\u003c0\u003e[  167.303044] drm_fdin-1097      2d.s1. 165741076us : execlists_submission_tasklet: 0000:00:02.0 rcs0: context:3 schedule-in, ccid:40\n\u003c0\u003e[  167.303095] drm_fdin-1097      2d.s1. 165741077us : trace_ports: 0000:00:02.0 rcs0: submit { ccid:40 3:4660* prio 2147483646 }\n\u003c0\u003e[  167.303159] kworker/-89       11..... 165741139us : i915_request_retire.part.0: 0000:00:02.0 rcs0: fence c90:2, current 2\n\u003c0\u003e[  167.303208] kworker/-89       11..... 165741148us : __intel_context_do_unpin: 0000:00:02.0 rcs0: context:c90 unpin\n\u003c0\u003e[  167.303272] kworker/-89       11..... 165741159us : i915_request_retire.part.0: 0000:00:02.0 rcs0: fence 1217:2, current 2\n\u003c0\u003e[  167.303321] kworker/-89       11..... 165741166us : __intel_context_do_unpin: 0000:00:02.0 rcs0: context:1217 unpin\n\u003c0\u003e[  167.303384] kworker/-89       11..... 165741170us : i915_request_retire.part.0: 0000:00:02.0 rcs0: fence 3:4660, current 4660\n\u003c0\u003e[  167.303434] kworker/-89       11d..1. 165741172us : __intel_context_retire: 0000:00:02.0 rcs0: context:1216 retire runtime: { total:56028ns, avg:56028ns }\n\u003c0\u003e[  167.303484] kworker/-89       11..... 165741198us : __engine_park: 0000:00:02.0 rcs0: parked\n\u003c0\u003e[  167.303534]   \u003cidle\u003e-0         5d.H3. 165741207us : execlists_irq_handler: 0000:00:02.0 rcs0: semaphore yield: 00000040\n\u003c0\u003e[  167.303583] kworker/-89       11..... 165741397us : __intel_context_retire: 0000:00:02.0 rcs0: context:1217 retire runtime: { total:325575ns, avg:0ns }\n\u003c0\u003e[  167.303756] kworker/-89       11..... 165741777us : __intel_context_retire: 0000:00:02.0 rcs0: context:c90 retire runtime: { total:0ns, avg:0ns }\n\u003c0\u003e[  167.303806] kworker/-89       11..... 165742017us : __engine_park: __engine_park:283 GEM_BUG_ON(engine-\u003esched_engine-\u003equeue_priority_hint != (-((int)(~0U \u003e\u003e 1)) - 1))\n\u003c0\u003e[  167.303811] ---------------------------------\n\u003c4\u003e[  167.304722] ------------[ cut here ]------------\n\u003c2\u003e[  167.304725] kernel BUG at drivers/gpu/drm/i915/gt/intel_engine_pm.c:283!\n\u003c4\u003e[  167.304731] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n\u003c4\u003e[  167.304734] CPU: 11 PID: 89 Comm: kworker/11:1 Tainted: G        W          6.8.0-rc2-CI_DRM_14193-gc655e0fd2804+ #1\n\u003c4\u003e[  167.304736] Hardware name: Intel Corporation Rocket Lake Client Platform/RocketLake S UDIMM 6L RVP, BIOS RKLSFWI1.R00.3173.A03.2204210138 04/21/2022\n\u003c4\u003e[  167.304738] Workqueue: i915-unordered retire_work_handler [i915]\n\u003c4\u003e[  16\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/bios: Tolerate devdata==NULL in intel_bios_encoder_supports_dp_dual_mode()\n\nIf we have no VBT, or the VBT didn't declare the encoder\nin question, we won't have the 'devdata' for the encoder.\nInstead of oopsing just bail early.\n\nWe won't be able to tell whether the port is DP++ or not,\nbut so be it.\n\n(cherry picked from commit 26410896206342c8a80d2b027923e9ee7d33b733)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26939",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/vma: Fix UAF on destroy against retire race\n\nObject debugging tools were sporadically reporting illegal attempts to\nfree a still active i915 VMA object when parking a GT believed to be idle.\n\n[161.359441] ODEBUG: free active (active state 0) object: ffff88811643b958 object type: i915_active hint: __i915_vma_active+0x0/0x50 [i915]\n[161.360082] WARNING: CPU: 5 PID: 276 at lib/debugobjects.c:514 debug_print_object+0x80/0xb0\n...\n[161.360304] CPU: 5 PID: 276 Comm: kworker/5:2 Not tainted 6.5.0-rc1-CI_DRM_13375-g003f860e5577+ #1\n[161.360314] Hardware name: Intel Corporation Rocket Lake Client Platform/RocketLake S UDIMM 6L RVP, BIOS RKLSFWI1.R00.3173.A03.2204210138 04/21/2022\n[161.360322] Workqueue: i915-unordered __intel_wakeref_put_work [i915]\n[161.360592] RIP: 0010:debug_print_object+0x80/0xb0\n...\n[161.361347] debug_object_free+0xeb/0x110\n[161.361362] i915_active_fini+0x14/0x130 [i915]\n[161.361866] release_references+0xfe/0x1f0 [i915]\n[161.362543] i915_vma_parked+0x1db/0x380 [i915]\n[161.363129] __gt_park+0x121/0x230 [i915]\n[161.363515] ____intel_wakeref_put_last+0x1f/0x70 [i915]\n\nThat has been tracked down to be happening when another thread is\ndeactivating the VMA inside __active_retire() helper, after the VMA's\nactive counter has been already decremented to 0, but before deactivation\nof the VMA's object is reported to the object debugging tool.\n\nWe could prevent from that race by serializing i915_active_fini() with\n__active_retire() via ref-\u003etree_lock, but that wouldn't stop the VMA from\nbeing used, e.g. from __i915_vma_retire() called at the end of\n__active_retire(), after that VMA has been already freed by a concurrent\ni915_vma_destroy() on return from the i915_active_fini().  Then, we should\nrather fix the issue at the VMA level, not in i915_active.\n\nSince __i915_vma_parked() is called from __gt_park() on last put of the\nGT's wakeref, the issue could be addressed by holding the GT wakeref long\nenough for __active_retire() to complete before that wakeref is released\nand the GT parked.\n\nI believe the issue was introduced by commit d93939730347 (\"drm/i915:\nRemove the vma refcount\") which moved a call to i915_active_fini() from\na dropped i915_vma_release(), called on last put of the removed VMA kref,\nto i915_vma_parked() processing path called on last put of a GT wakeref.\nHowever, its visibility to the object debugging tool was suppressed by a\nbug in i915_active that was fixed two weeks later with commit e92eb246feb9\n(\"drm/i915/active: Fix missing debug object activation\").\n\nA VMA associated with a request doesn't acquire a GT wakeref by itself.\nInstead, it depends on a wakeref held directly by the request's active\nintel_context for a GT associated with its VM, and indirectly on that\nintel_context's engine wakeref if the engine belongs to the same GT as the\nVMA's VM.  Those wakerefs are released asynchronously to VMA deactivation.\n\nFix the issue by getting a wakeref for the VMA's GT when activating it,\nand putting that wakeref only after the VMA is deactivated.  However,\nexclude global GTT from that processing path, otherwise the GPU never goes\nidle.  Since __i915_vma_retire() may be called from atomic contexts, use\nasync variant of wakeref put.  Also, to avoid circular locking dependency,\ntake care of acquiring the wakeref before VM mutex when both are needed.\n\nv7: Add inline comments with justifications for:\n    - using untracked variants of intel_gt_pm_get/put() (Nirmoy),\n    - using async variant of _put(),\n    - not getting the wakeref in case of a global GTT,\n    - always getting the first wakeref outside vm-\u003emutex.\nv6: Since __i915_vma_active/retire() callbacks are not serialized, storing\n    a wakeref tracking handle inside struct i915_vma is not safe, and\n    there is no other good place for that.  Use untracked variants of\n    intel_gt_pm_get/put_async().\nv5: Replace \"tile\" with \"GT\" across commit description (Rodrigo),\n  - \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26940",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Create debugfs ttm_resource_manager entry only if needed\n\nThe driver creates /sys/kernel/debug/dri/0/mob_ttm even when the\ncorresponding ttm_resource_manager is not allocated.\nThis leads to a crash when trying to read from this file.\n\nAdd a check to create mob_ttm, system_mob_ttm, and gmr_ttm debug file\nonly when the corresponding ttm_resource_manager is allocated.\n\ncrash\u003e bt\nPID: 3133409  TASK: ffff8fe4834a5000  CPU: 3    COMMAND: \"grep\"\n #0 [ffffb954506b3b20] machine_kexec at ffffffffb2a6bec3\n #1 [ffffb954506b3b78] __crash_kexec at ffffffffb2bb598a\n #2 [ffffb954506b3c38] crash_kexec at ffffffffb2bb68c1\n #3 [ffffb954506b3c50] oops_end at ffffffffb2a2a9b1\n #4 [ffffb954506b3c70] no_context at ffffffffb2a7e913\n #5 [ffffb954506b3cc8] __bad_area_nosemaphore at ffffffffb2a7ec8c\n #6 [ffffb954506b3d10] do_page_fault at ffffffffb2a7f887\n #7 [ffffb954506b3d40] page_fault at ffffffffb360116e\n    [exception RIP: ttm_resource_manager_debug+0x11]\n    RIP: ffffffffc04afd11  RSP: ffffb954506b3df0  RFLAGS: 00010246\n    RAX: ffff8fe41a6d1200  RBX: 0000000000000000  RCX: 0000000000000940\n    RDX: 0000000000000000  RSI: ffffffffc04b4338  RDI: 0000000000000000\n    RBP: ffffb954506b3e08   R8: ffff8fee3ffad000   R9: 0000000000000000\n    R10: ffff8fe41a76a000  R11: 0000000000000001  R12: 00000000ffffffff\n    R13: 0000000000000001  R14: ffff8fe5bb6f3900  R15: ffff8fe41a6d1200\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #8 [ffffb954506b3e00] ttm_resource_manager_show at ffffffffc04afde7 [ttm]\n #9 [ffffb954506b3e30] seq_read at ffffffffb2d8f9f3\n    RIP: 00007f4c4eda8985  RSP: 00007ffdbba9e9f8  RFLAGS: 00000246\n    RAX: ffffffffffffffda  RBX: 000000000037e000  RCX: 00007f4c4eda8985\n    RDX: 000000000037e000  RSI: 00007f4c41573000  RDI: 0000000000000003\n    RBP: 000000000037e000   R8: 0000000000000000   R9: 000000000037fe30\n    R10: 0000000000000000  R11: 0000000000000246  R12: 00007f4c41573000\n    R13: 0000000000000003  R14: 00007f4c41572010  R15: 0000000000000003\n    ORIG_RAX: 0000000000000000  CS: 0033  SS: 002b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau/dmem: handle kcalloc() allocation failure\n\nThe kcalloc() in nouveau_dmem_evict_chunk() will return null if\nthe physical memory has run out. As a result, if we dereference\nsrc_pfns, dst_pfns or dma_addrs, the null pointer dereference bugs\nwill happen.\n\nMoreover, the GPU is going away. If the kcalloc() fails, we could not\nevict all pages mapping a chunk. So this patch adds a __GFP_NOFAIL\nflag in kcalloc().\n\nFinally, as there is no need to have physically contiguous memory,\nthis patch switches kcalloc() to kvcalloc() in order to avoid\nfailing allocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26944",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: fix use-after-free in do_zone_finish()\n\nShinichiro reported the following use-after-free triggered by the device\nreplace operation in fstests btrfs/070.\n\n BTRFS info (device nullb1): scrub: finished on devid 1 with status: 0\n ==================================================================\n BUG: KASAN: slab-use-after-free in do_zone_finish+0x91a/0xb90 [btrfs]\n Read of size 8 at addr ffff8881543c8060 by task btrfs-cleaner/3494007\n\n CPU: 0 PID: 3494007 Comm: btrfs-cleaner Tainted: G        W          6.8.0-rc5-kts #1\n Hardware name: Supermicro Super Server/X11SPi-TF, BIOS 3.3 02/21/2020\n Call Trace:\n  \u003cTASK\u003e\n  dump_stack_lvl+0x5b/0x90\n  print_report+0xcf/0x670\n  ? __virt_addr_valid+0x200/0x3e0\n  kasan_report+0xd8/0x110\n  ? do_zone_finish+0x91a/0xb90 [btrfs]\n  ? do_zone_finish+0x91a/0xb90 [btrfs]\n  do_zone_finish+0x91a/0xb90 [btrfs]\n  btrfs_delete_unused_bgs+0x5e1/0x1750 [btrfs]\n  ? __pfx_btrfs_delete_unused_bgs+0x10/0x10 [btrfs]\n  ? btrfs_put_root+0x2d/0x220 [btrfs]\n  ? btrfs_clean_one_deleted_snapshot+0x299/0x430 [btrfs]\n  cleaner_kthread+0x21e/0x380 [btrfs]\n  ? __pfx_cleaner_kthread+0x10/0x10 [btrfs]\n  kthread+0x2e3/0x3c0\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x31/0x70\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork_asm+0x1b/0x30\n  \u003c/TASK\u003e\n\n Allocated by task 3493983:\n  kasan_save_stack+0x33/0x60\n  kasan_save_track+0x14/0x30\n  __kasan_kmalloc+0xaa/0xb0\n  btrfs_alloc_device+0xb3/0x4e0 [btrfs]\n  device_list_add.constprop.0+0x993/0x1630 [btrfs]\n  btrfs_scan_one_device+0x219/0x3d0 [btrfs]\n  btrfs_control_ioctl+0x26e/0x310 [btrfs]\n  __x64_sys_ioctl+0x134/0x1b0\n  do_syscall_64+0x99/0x190\n  entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\n Freed by task 3494056:\n  kasan_save_stack+0x33/0x60\n  kasan_save_track+0x14/0x30\n  kasan_save_free_info+0x3f/0x60\n  poison_slab_object+0x102/0x170\n  __kasan_slab_free+0x32/0x70\n  kfree+0x11b/0x320\n  btrfs_rm_dev_replace_free_srcdev+0xca/0x280 [btrfs]\n  btrfs_dev_replace_finishing+0xd7e/0x14f0 [btrfs]\n  btrfs_dev_replace_by_ioctl+0x1286/0x25a0 [btrfs]\n  btrfs_ioctl+0xb27/0x57d0 [btrfs]\n  __x64_sys_ioctl+0x134/0x1b0\n  do_syscall_64+0x99/0x190\n  entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\n The buggy address belongs to the object at ffff8881543c8000\n  which belongs to the cache kmalloc-1k of size 1024\n The buggy address is located 96 bytes inside of\n  freed 1024-byte region [ffff8881543c8000, ffff8881543c8400)\n\n The buggy address belongs to the physical page:\n page:00000000fe2c1285 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1543c8\n head:00000000fe2c1285 order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0\n flags: 0x17ffffc0000840(slab|head|node=0|zone=2|lastcpupid=0x1fffff)\n page_type: 0xffffffff()\n raw: 0017ffffc0000840 ffff888100042dc0 ffffea0019e8f200 dead000000000002\n raw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000\n page dumped because: kasan: bad access detected\n\n Memory state around the buggy address:\n  ffff8881543c7f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  ffff8881543c7f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n \u003effff8881543c8000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                                        ^\n  ffff8881543c8080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n  ffff8881543c8100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\nThis UAF happens because we're accessing stale zone information of a\nalready removed btrfs_device in do_zone_finish().\n\nThe sequence of events is as follows:\n\nbtrfs_dev_replace_start\n  btrfs_scrub_dev\n   btrfs_dev_replace_finishing\n    btrfs_dev_replace_update_device_in_mapping_tree \u003c-- devices replaced\n    btrfs_rm_dev_replace_free_srcdev\n     btrfs_free_device                              \u003c-- device freed\n\ncleaner_kthread\n btrfs_delete_unused_bgs\n  btrfs_zone_finish\n   do_zone_finish              \u003c-- refers the freed device\n\nThe reason for this is that we're using a\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: iaa - Fix nr_cpus \u003c nr_iaa case\n\nIf nr_cpus \u003c nr_iaa, the calculated cpus_per_iaa will be 0, which\ncauses a divide-by-0 in rebalance_wq_table().\n\nMake sure cpus_per_iaa is 1 in that case, and also in the nr_iaa == 0\ncase, even though cpus_per_iaa is never used if nr_iaa == 0, for\nparanoia.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes/x86: Use copy_from_kernel_nofault() to read from unsafe address\n\nRead from an unsafe address with copy_from_kernel_nofault() in\narch_adjust_kprobe_addr() because this function is used before checking\nthe address is in text or not. Syzcaller bot found a bug and reported\nthe case if user specifies inaccessible data area,\narch_adjust_kprobe_addr() will cause a kernel panic.\n\n[ mingo: Clarified the comment. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add a dc_state NULL check in dc_state_release\n\n[How]\nCheck wheather state is NULL before releasing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26949",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/pm: Fix NULL pointer dereference when get power limit\n\nBecause powerplay_table initialization is skipped under\nsriov case, We check and set default lower and upper OD\nvalue if powerplay_table is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwireguard: netlink: access device through ctx instead of peer\n\nThe previous commit fixed a bug that led to a NULL peer-\u003edevice being\ndereferenced. It's actually easier and faster performance-wise to\ninstead get the device from ctx-\u003ewg. This semantically makes more sense\ntoo, since ctx-\u003ewg-\u003epeer_allowedips.seq is compared with\nctx-\u003eallowedips_seq, basing them both in ctx. This also acts as a\ndefence in depth provision against freed peers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26951",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwireguard: netlink: check for dangling peer via is_dead instead of empty list\n\nIf all peers are removed via wg_peer_remove_all(), rather than setting\npeer_list to empty, the peer is added to a temporary list with a head on\nthe stack of wg_peer_remove_all(). If a netlink dump is resumed and the\ncursored peer is one that has been removed via wg_peer_remove_all(), it\nwill iterate from that peer and then attempt to dump freed peers.\n\nFix this by instead checking peer-\u003eis_dead, which was explictly created\nfor this purpose. Also move up the device_update_lock lockdep assertion,\nsince reading is_dead relies on that.\n\nIt can be reproduced by a small script like:\n\n    echo \"Setting config...\"\n    ip link add dev wg0 type wireguard\n    wg setconf wg0 /big-config\n    (\n            while true; do\n                    echo \"Showing config...\"\n                    wg showconf wg0 \u003e /dev/null\n            done\n    ) \u0026\n    sleep 4\n    wg setconf wg0 \u003c(printf \"[Peer]\\nPublicKey=$(wg genkey)\\n\")\n\nResulting in:\n\n    BUG: KASAN: slab-use-after-free in __lock_acquire+0x182a/0x1b20\n    Read of size 8 at addr ffff88811956ec70 by task wg/59\n    CPU: 2 PID: 59 Comm: wg Not tainted 6.8.0-rc2-debug+ #5\n    Call Trace:\n     \u003cTASK\u003e\n     dump_stack_lvl+0x47/0x70\n     print_address_description.constprop.0+0x2c/0x380\n     print_report+0xab/0x250\n     kasan_report+0xba/0xf0\n     __lock_acquire+0x182a/0x1b20\n     lock_acquire+0x191/0x4b0\n     down_read+0x80/0x440\n     get_peer+0x140/0xcb0\n     wg_get_device_dump+0x471/0x1130",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26955",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: prevent kernel bug at submit_bh_wbc()\n\nFix a bug where nilfs_get_block() returns a successful status when\nsearching and inserting the specified block both fail inconsistently.  If\nthis inconsistent behavior is not due to a previously fixed bug, then an\nunexpected race is occurring, so return a temporary error -EAGAIN instead.\n\nThis prevents callers such as __block_write_begin_int() from requesting a\nread into a buffer that is not mapped, which would cause the BUG_ON check\nfor the BH_Mapped flag in submit_bh_wbc() to fail.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26956",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix failure to detect DAT corruption in btree and direct mappings\n\nPatch series \"nilfs2: fix kernel bug at submit_bh_wbc()\".\n\nThis resolves a kernel BUG reported by syzbot.  Since there are two\nflaws involved, I've made each one a separate patch.\n\nThe first patch alone resolves the syzbot-reported bug, but I think\nboth fixes should be sent to stable, so I've tagged them as such.\n\n\nThis patch (of 2):\n\nSyzbot has reported a kernel bug in submit_bh_wbc() when writing file data\nto a nilfs2 file system whose metadata is corrupted.\n\nThere are two flaws involved in this issue.\n\nThe first flaw is that when nilfs_get_block() locates a data block using\nbtree or direct mapping, if the disk address translation routine\nnilfs_dat_translate() fails with internal code -ENOENT due to DAT metadata\ncorruption, it can be passed back to nilfs_get_block().  This causes\nnilfs_get_block() to misidentify an existing block as non-existent,\ncausing both data block lookup and insertion to fail inconsistently.\n\nThe second flaw is that nilfs_get_block() returns a successful status in\nthis inconsistent state.  This causes the caller __block_write_begin_int()\nor others to request a read even though the buffer is not mapped,\nresulting in a BUG_ON check for the BH_Mapped flag in submit_bh_wbc()\nfailing.\n\nThis fixes the first issue by changing the return value to code -EINVAL\nwhen a conversion using DAT fails with code -ENOENT, avoiding the\nconflicting condition that leads to the kernel bug described above.  Here,\ncode -EINVAL indicates that metadata corruption was detected during the\nblock lookup, which will be properly handled as a file system error and\nconverted to -EIO when passing through the nilfs2 bmap layer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26957",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/zcrypt: fix reference counting on zcrypt card objects\n\nTests with hot-plugging crytpo cards on KVM guests with debug\nkernel build revealed an use after free for the load field of\nthe struct zcrypt_card. The reason was an incorrect reference\nhandling of the zcrypt card object which could lead to a free\nof the zcrypt card object while it was still in use.\n\nThis is an example of the slab message:\n\n    kernel: 0x00000000885a7512-0x00000000885a7513 @offset=1298. First byte 0x68 instead of 0x6b\n    kernel: Allocated in zcrypt_card_alloc+0x36/0x70 [zcrypt] age=18046 cpu=3 pid=43\n    kernel:  kmalloc_trace+0x3f2/0x470\n    kernel:  zcrypt_card_alloc+0x36/0x70 [zcrypt]\n    kernel:  zcrypt_cex4_card_probe+0x26/0x380 [zcrypt_cex4]\n    kernel:  ap_device_probe+0x15c/0x290\n    kernel:  really_probe+0xd2/0x468\n    kernel:  driver_probe_device+0x40/0xf0\n    kernel:  __device_attach_driver+0xc0/0x140\n    kernel:  bus_for_each_drv+0x8c/0xd0\n    kernel:  __device_attach+0x114/0x198\n    kernel:  bus_probe_device+0xb4/0xc8\n    kernel:  device_add+0x4d2/0x6e0\n    kernel:  ap_scan_adapter+0x3d0/0x7c0\n    kernel:  ap_scan_bus+0x5a/0x3b0\n    kernel:  ap_scan_bus_wq_callback+0x40/0x60\n    kernel:  process_one_work+0x26e/0x620\n    kernel:  worker_thread+0x21c/0x440\n    kernel: Freed in zcrypt_card_put+0x54/0x80 [zcrypt] age=9024 cpu=3 pid=43\n    kernel:  kfree+0x37e/0x418\n    kernel:  zcrypt_card_put+0x54/0x80 [zcrypt]\n    kernel:  ap_device_remove+0x4c/0xe0\n    kernel:  device_release_driver_internal+0x1c4/0x270\n    kernel:  bus_remove_device+0x100/0x188\n    kernel:  device_del+0x164/0x3c0\n    kernel:  device_unregister+0x30/0x90\n    kernel:  ap_scan_adapter+0xc8/0x7c0\n    kernel:  ap_scan_bus+0x5a/0x3b0\n    kernel:  ap_scan_bus_wq_callback+0x40/0x60\n    kernel:  process_one_work+0x26e/0x620\n    kernel:  worker_thread+0x21c/0x440\n    kernel:  kthread+0x150/0x168\n    kernel:  __ret_from_fork+0x3c/0x58\n    kernel:  ret_from_fork+0xa/0x30\n    kernel: Slab 0x00000372022169c0 objects=20 used=18 fp=0x00000000885a7c88 flags=0x3ffff00000000a00(workingset|slab|node=0|zone=1|lastcpupid=0x1ffff)\n    kernel: Object 0x00000000885a74b8 @offset=1208 fp=0x00000000885a7c88\n    kernel: Redzone  00000000885a74b0: bb bb bb bb bb bb bb bb                          ........\n    kernel: Object   00000000885a74b8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74c8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74d8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74e8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74f8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a7508: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 68 4b 6b 6b 6b a5  kkkkkkkkkkhKkkk.\n    kernel: Redzone  00000000885a7518: bb bb bb bb bb bb bb bb                          ........\n    kernel: Padding  00000000885a756c: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a              ZZZZZZZZZZZZ\n    kernel: CPU: 0 PID: 387 Comm: systemd-udevd Not tainted 6.8.0-HF #2\n    kernel: Hardware name: IBM 3931 A01 704 (KVM/Linux)\n    kernel: Call Trace:\n    kernel:  [\u003c00000000ca5ab5b8\u003e] dump_stack_lvl+0x90/0x120\n    kernel:  [\u003c00000000c99d78bc\u003e] check_bytes_and_report+0x114/0x140\n    kernel:  [\u003c00000000c99d53cc\u003e] check_object+0x334/0x3f8\n    kernel:  [\u003c00000000c99d820c\u003e] alloc_debug_processing+0xc4/0x1f8\n    kernel:  [\u003c00000000c99d852e\u003e] get_partial_node.part.0+0x1ee/0x3e0\n    kernel:  [\u003c00000000c99d94ec\u003e] ___slab_alloc+0xaf4/0x13c8\n    kernel:  [\u003c00000000c99d9e38\u003e] __slab_alloc.constprop.0+0x78/0xb8\n    kernel:  [\u003c00000000c99dc8dc\u003e] __kmalloc+0x434/0x590\n    kernel:  [\u003c00000000c9b4c0ce\u003e] ext4_htree_store_dirent+0x4e/0x1c0\n    kernel:  [\u003c00000000c9b908a2\u003e] htree_dirblock_to_tree+0x17a/0x3f0\n    kernel: \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: fix UAF in direct writes\n\nIn production we have been hitting the following warning consistently\n\n------------[ cut here ]------------\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 17 PID: 1800359 at lib/refcount.c:28 refcount_warn_saturate+0x9c/0xe0\nWorkqueue: nfsiod nfs_direct_write_schedule_work [nfs]\nRIP: 0010:refcount_warn_saturate+0x9c/0xe0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __warn+0x9f/0x130\n ? refcount_warn_saturate+0x9c/0xe0\n ? report_bug+0xcc/0x150\n ? handle_bug+0x3d/0x70\n ? exc_invalid_op+0x16/0x40\n ? asm_exc_invalid_op+0x16/0x20\n ? refcount_warn_saturate+0x9c/0xe0\n nfs_direct_write_schedule_work+0x237/0x250 [nfs]\n process_one_work+0x12f/0x4a0\n worker_thread+0x14e/0x3b0\n ? ZSTD_getCParams_internal+0x220/0x220\n kthread+0xdc/0x120\n ? __btf_name_valid+0xa0/0xa0\n ret_from_fork+0x1f/0x30\n\nThis is because we're completing the nfs_direct_request twice in a row.\n\nThe source of this is when we have our commit requests to submit, we\nprocess them and send them off, and then in the completion path for the\ncommit requests we have\n\nif (nfs_commit_end(cinfo.mds))\n\tnfs_direct_write_complete(dreq);\n\nHowever since we're submitting asynchronous requests we sometimes have\none that completes before we submit the next one, so we end up calling\ncomplete on the nfs_direct_request twice.\n\nThe only other place we use nfs_generic_commit_list() is in\n__nfs_commit_inode, which wraps this call in a\n\nnfs_commit_begin();\nnfs_commit_end();\n\nWhich is a common pattern for this style of completion handling, one\nthat is also repeated in the direct code with get_dreq()/put_dreq()\ncalls around where we process events as well as in the completion paths.\n\nFix this by using the same pattern for the commit requests.\n\nBefore with my 200 node rocksdb stress running this warning would pop\nevery 10ish minutes.  With my patch the stress test has been running for\nseveral hours without popping.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btnxpuart: Fix btnxpuart_close\n\nFix scheduling while atomic BUG in btnxpuart_close(), properly\npurge the transmit queue and free the receive skb.\n\n[   10.973809] BUG: scheduling while atomic: kworker/u9:0/80/0x00000002\n...\n[   10.980740] CPU: 3 PID: 80 Comm: kworker/u9:0 Not tainted 6.8.0-rc7-0.0.0-devel-00005-g61fdfceacf09 #1\n[   10.980751] Hardware name: Toradex Verdin AM62 WB on Dahlia Board (DT)\n[   10.980760] Workqueue: hci0 hci_power_off [bluetooth]\n[   10.981169] Call trace:\n...\n[   10.981363]  uart_update_mctrl+0x58/0x78\n[   10.981373]  uart_dtr_rts+0x104/0x114\n[   10.981381]  tty_port_shutdown+0xd4/0xdc\n[   10.981396]  tty_port_close+0x40/0xbc\n[   10.981407]  uart_close+0x34/0x9c\n[   10.981414]  ttyport_close+0x50/0x94\n[   10.981430]  serdev_device_close+0x40/0x50\n[   10.981442]  btnxpuart_close+0x24/0x98 [btnxpuart]\n[   10.981469]  hci_dev_close_sync+0x2d8/0x718 [bluetooth]\n[   10.981728]  hci_dev_do_close+0x2c/0x70 [bluetooth]\n[   10.981862]  hci_power_off+0x20/0x64 [bluetooth]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: swap: fix race between free_swap_and_cache() and swapoff()\n\nThere was previously a theoretical window where swapoff() could run and\nteardown a swap_info_struct while a call to free_swap_and_cache() was\nrunning in another thread.  This could cause, amongst other bad\npossibilities, swap_page_trans_huge_swapped() (called by\nfree_swap_and_cache()) to access the freed memory for swap_map.\n\nThis is a theoretical problem and I haven't been able to provoke it from a\ntest case.  But there has been agreement based on code review that this is\npossible (see link below).\n\nFix it by using get_swap_device()/put_swap_device(), which will stall\nswapoff().  There was an extra check in _swap_info_get() to confirm that\nthe swap entry was not free.  This isn't present in get_swap_device()\nbecause it doesn't make sense in general due to the race between getting\nthe reference and swapoff.  So I've added an equivalent check directly in\nfree_swap_and_cache().\n\nDetails of how to provoke one possible issue (thanks to David Hildenbrand\nfor deriving this):\n\n--8\u003c-----\n\n__swap_entry_free() might be the last user and result in\n\"count == SWAP_HAS_CACHE\".\n\nswapoff-\u003etry_to_unuse() will stop as soon as soon as si-\u003einuse_pages==0.\n\nSo the question is: could someone reclaim the folio and turn\nsi-\u003einuse_pages==0, before we completed swap_page_trans_huge_swapped().\n\nImagine the following: 2 MiB folio in the swapcache. Only 2 subpages are\nstill references by swap entries.\n\nProcess 1 still references subpage 0 via swap entry.\nProcess 2 still references subpage 1 via swap entry.\n\nProcess 1 quits. Calls free_swap_and_cache().\n-\u003e count == SWAP_HAS_CACHE\n[then, preempted in the hypervisor etc.]\n\nProcess 2 quits. Calls free_swap_and_cache().\n-\u003e count == SWAP_HAS_CACHE\n\nProcess 2 goes ahead, passes swap_page_trans_huge_swapped(), and calls\n__try_to_reclaim_swap().\n\n__try_to_reclaim_swap()-\u003efolio_free_swap()-\u003edelete_from_swap_cache()-\u003e\nput_swap_folio()-\u003efree_swap_slot()-\u003eswapcache_free_entries()-\u003e\nswap_entry_free()-\u003eswap_range_free()-\u003e\n...\nWRITE_ONCE(si-\u003einuse_pages, si-\u003einuse_pages - nr_entries);\n\nWhat stops swapoff to succeed after process 2 reclaimed the swap cache\nbut before process1 finished its call to swap_page_trans_huge_swapped()?\n\n--8\u003c-----",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26961",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac802154: fix llsec key resources release in mac802154_llsec_key_del\n\nmac802154_llsec_key_del() can free resources of a key directly without\nfollowing the RCU rules for waiting before the end of a grace period. This\nmay lead to use-after-free in case llsec_lookup_key() is traversing the\nlist of keys in parallel with a key deletion:\n\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 4 PID: 16000 at lib/refcount.c:25 refcount_warn_saturate+0x162/0x2a0\nModules linked in:\nCPU: 4 PID: 16000 Comm: wpan-ping Not tainted 6.7.0 #19\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014\nRIP: 0010:refcount_warn_saturate+0x162/0x2a0\nCall Trace:\n \u003cTASK\u003e\n llsec_lookup_key.isra.0+0x890/0x9e0\n mac802154_llsec_encrypt+0x30c/0x9c0\n ieee802154_subif_start_xmit+0x24/0x1e0\n dev_hard_start_xmit+0x13e/0x690\n sch_direct_xmit+0x2ae/0xbc0\n __dev_queue_xmit+0x11dd/0x3c20\n dgram_sendmsg+0x90b/0xd60\n __sys_sendto+0x466/0x4c0\n __x64_sys_sendto+0xe0/0x1c0\n do_syscall_64+0x45/0xf0\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nAlso, ieee802154_llsec_key_entry structures are not freed by\nmac802154_llsec_key_del():\n\nunreferenced object 0xffff8880613b6980 (size 64):\n  comm \"iwpan\", pid 2176, jiffies 4294761134 (age 60.475s)\n  hex dump (first 32 bytes):\n    78 0d 8f 18 80 88 ff ff 22 01 00 00 00 00 ad de  x.......\".......\n    00 00 00 00 00 00 00 00 03 00 cd ab 00 00 00 00  ................\n  backtrace:\n    [\u003cffffffff81dcfa62\u003e] __kmem_cache_alloc_node+0x1e2/0x2d0\n    [\u003cffffffff81c43865\u003e] kmalloc_trace+0x25/0xc0\n    [\u003cffffffff88968b09\u003e] mac802154_llsec_key_add+0xac9/0xcf0\n    [\u003cffffffff8896e41a\u003e] ieee802154_add_llsec_key+0x5a/0x80\n    [\u003cffffffff8892adc6\u003e] nl802154_add_llsec_key+0x426/0x5b0\n    [\u003cffffffff86ff293e\u003e] genl_family_rcv_msg_doit+0x1fe/0x2f0\n    [\u003cffffffff86ff46d1\u003e] genl_rcv_msg+0x531/0x7d0\n    [\u003cffffffff86fee7a9\u003e] netlink_rcv_skb+0x169/0x440\n    [\u003cffffffff86ff1d88\u003e] genl_rcv+0x28/0x40\n    [\u003cffffffff86fec15c\u003e] netlink_unicast+0x53c/0x820\n    [\u003cffffffff86fecd8b\u003e] netlink_sendmsg+0x93b/0xe60\n    [\u003cffffffff86b91b35\u003e] ____sys_sendmsg+0xac5/0xca0\n    [\u003cffffffff86b9c3dd\u003e] ___sys_sendmsg+0x11d/0x1c0\n    [\u003cffffffff86b9c65a\u003e] __sys_sendmsg+0xfa/0x1d0\n    [\u003cffffffff88eadbf5\u003e] do_syscall_64+0x45/0xf0\n    [\u003cffffffff890000ea\u003e] entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nHandle the proper resource release in the RCU callback function\nmac802154_llsec_key_del_rcu().\n\nNote that if llsec_lookup_key() finds a key, it gets a refcount via\nllsec_key_get() and locally copies key id from key_entry (which is a\nlist element). So it's safe to call llsec_key_put() and free the list\nentry after the RCU grace period elapses.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26962",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-raid456, md/raid456: fix a deadlock for dm-raid456 while io concurrent with reshape\n\nFor raid456, if reshape is still in progress, then IO across reshape\nposition will wait for reshape to make progress. However, for dm-raid,\nin following cases reshape will never make progress hence IO will hang:\n\n1) the array is read-only;\n2) MD_RECOVERY_WAIT is set;\n3) MD_RECOVERY_FROZEN is set;\n\nAfter commit c467e97f079f (\"md/raid6: use valid sector values to determine\nif an I/O should wait on the reshape\") fix the problem that IO across\nreshape position doesn't wait for reshape, the dm-raid test\nshell/lvconvert-raid-reshape.sh start to hang:\n\n[root@fedora ~]# cat /proc/979/stack\n[\u003c0\u003e] wait_woken+0x7d/0x90\n[\u003c0\u003e] raid5_make_request+0x929/0x1d70 [raid456]\n[\u003c0\u003e] md_handle_request+0xc2/0x3b0 [md_mod]\n[\u003c0\u003e] raid_map+0x2c/0x50 [dm_raid]\n[\u003c0\u003e] __map_bio+0x251/0x380 [dm_mod]\n[\u003c0\u003e] dm_submit_bio+0x1f0/0x760 [dm_mod]\n[\u003c0\u003e] __submit_bio+0xc2/0x1c0\n[\u003c0\u003e] submit_bio_noacct_nocheck+0x17f/0x450\n[\u003c0\u003e] submit_bio_noacct+0x2bc/0x780\n[\u003c0\u003e] submit_bio+0x70/0xc0\n[\u003c0\u003e] mpage_readahead+0x169/0x1f0\n[\u003c0\u003e] blkdev_readahead+0x18/0x30\n[\u003c0\u003e] read_pages+0x7c/0x3b0\n[\u003c0\u003e] page_cache_ra_unbounded+0x1ab/0x280\n[\u003c0\u003e] force_page_cache_ra+0x9e/0x130\n[\u003c0\u003e] page_cache_sync_ra+0x3b/0x110\n[\u003c0\u003e] filemap_get_pages+0x143/0xa30\n[\u003c0\u003e] filemap_read+0xdc/0x4b0\n[\u003c0\u003e] blkdev_read_iter+0x75/0x200\n[\u003c0\u003e] vfs_read+0x272/0x460\n[\u003c0\u003e] ksys_read+0x7a/0x170\n[\u003c0\u003e] __x64_sys_read+0x1c/0x30\n[\u003c0\u003e] do_syscall_64+0xc6/0x230\n[\u003c0\u003e] entry_SYSCALL_64_after_hwframe+0x6c/0x74\n\nThis is because reshape can't make progress.\n\nFor md/raid, the problem doesn't exist because register new sync_thread\ndoesn't rely on the IO to be done any more:\n\n1) If array is read-only, it can switch to read-write by ioctl/sysfs;\n2) md/raid never set MD_RECOVERY_WAIT;\n3) If MD_RECOVERY_FROZEN is set, mddev_suspend() doesn't hold\n   'reconfig_mutex', hence it can be cleared and reshape can continue by\n   sysfs api 'sync_action'.\n\nHowever, I'm not sure yet how to avoid the problem in dm-raid yet. This\npatch on the one hand make sure raid_message() can't change\nsync_thread() through raid_message() after presuspend(), on the other\nhand detect the above 3 cases before wait for IO do be done in\ndm_suspend(), and let dm-raid requeue those IO.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3-am62: fix module unload/reload behavior\n\nAs runtime PM is enabled, the module can be runtime\nsuspended when .remove() is called.\n\nDo a pm_runtime_get_sync() to make sure module is active\nbefore doing any register operations.\n\nDoing a pm_runtime_put_sync() should disable the refclk\nso no need to disable it again.\n\nFixes the below warning at module removel.\n\n[   39.705310] ------------[ cut here ]------------\n[   39.710004] clk:162:3 already disabled\n[   39.713941] WARNING: CPU: 0 PID: 921 at drivers/clk/clk.c:1090 clk_core_disable+0xb0/0xb8\n\nWe called of_platform_populate() in .probe() so call the\ncleanup function of_platform_depopulate() in .remove().\nGet rid of the now unnnecessary dwc3_ti_remove_core().\nWithout this, module re-load doesn't work properly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Add error handling in xhci_map_urb_for_dma\n\nCurrently xhci_map_urb_for_dma() creates a temporary buffer and copies\nthe SG list to the new linear buffer. But if the kzalloc_node() fails,\nthen the following sg_pcopy_to_buffer() can lead to crash since it\ntries to memcpy to NULL pointer.\n\nSo return -ENOMEM if kzalloc returns null pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26965",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: mmcc-msm8974: fix terminating of frequency table arrays\n\nThe frequency table arrays are supposed to be terminated with an\nempty element. Add such entry to the end of the arrays where it\nis missing in order to avoid possible out-of-bound access when\nthe table is traversed by functions like qcom_find_freq() or\nqcom_find_freq_floor().\n\nOnly compile tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: mmcc-apq8084: fix terminating of frequency table arrays\n\nThe frequency table arrays are supposed to be terminated with an\nempty element. Add such entry to the end of the arrays where it\nis missing in order to avoid possible out-of-bound access when\nthe table is traversed by functions like qcom_find_freq() or\nqcom_find_freq_floor().\n\nOnly compile tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26968",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: gcc-ipq9574: fix terminating of frequency table arrays\n\nThe frequency table arrays are supposed to be terminated with an\nempty element. Add such entry to the end of the arrays where it\nis missing in order to avoid possible out-of-bound access when\nthe table is traversed by functions like qcom_find_freq() or\nqcom_find_freq_floor().\n\nOnly compile tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: gcc-ipq8074: fix terminating of frequency table arrays\n\nThe frequency table arrays are supposed to be terminated with an\nempty element. Add such entry to the end of the arrays where it\nis missing in order to avoid possible out-of-bound access when\nthe table is traversed by functions like qcom_find_freq() or\nqcom_find_freq_floor().\n\nOnly compile tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26970",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: gcc-ipq6018: fix terminating of frequency table arrays\n\nThe frequency table arrays are supposed to be terminated with an\nempty element. Add such entry to the end of the arrays where it\nis missing in order to avoid possible out-of-bound access when\nthe table is traversed by functions like qcom_find_freq() or\nqcom_find_freq_floor().\n\nOnly compile tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfat: fix uninitialized field in nostale filehandles\n\nWhen fat_encode_fh_nostale() encodes file handle without a parent it\nstores only first 10 bytes of the file handle. However the length of the\nfile handle must be a multiple of 4 so the file handle is actually 12\nbytes long and the last two bytes remain uninitialized. This is not\ngreat at we potentially leak uninitialized information with the handle\nto userspace. Properly initialize the full handle length.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26974",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - resolve race condition during AER recovery\n\nDuring the PCI AER system's error recovery process, the kernel driver\nmay encounter a race condition with freeing the reset_data structure's\nmemory. If the device restart will take more than 10 seconds the function\nscheduling that restart will exit due to a timeout, and the reset_data\nstructure will be freed. However, this data structure is used for\ncompletion notification after the restart is completed, which leads\nto a UAF bug.\n\nThis results in a KFENCE bug notice.\n\n  BUG: KFENCE: use-after-free read in adf_device_reset_worker+0x38/0xa0 [intel_qat]\n  Use-after-free read at 0x00000000bc56fddf (in kfence-#142):\n  adf_device_reset_worker+0x38/0xa0 [intel_qat]\n  process_one_work+0x173/0x340\n\nTo resolve this race condition, the memory associated to the container\nof the work_struct is freed on the worker if the timeout expired,\notherwise on the function that schedules the worker.\nThe timeout detection can be done by checking if the caller is\nstill waiting for completion or not by using completion_done() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26975",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowercap: intel_rapl: Fix a NULL pointer dereference\n\nA NULL pointer dereference is triggered when probing the MMIO RAPL\ndriver on platforms with CPU ID not listed in intel_rapl_common CPU\nmodel list.\n\nThis is because the intel_rapl_common module still probes on such\nplatforms even if 'defaults_msr' is not set after commit 1488ac990ac8\n(\"powercap: intel_rapl: Allow probing without CPUID match\"). Thus the\nMMIO RAPL rp-\u003epriv-\u003edefaults is NULL when registering to RAPL framework.\n\nFix the problem by adding sanity check to ensure rp-\u003epriv-\u003erapl_defaults\nis always valid.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26977",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npci_iounmap(): Fix MMIO mapping leak\n\nThe #ifdef ARCH_HAS_GENERIC_IOPORT_MAP accidentally also guards iounmap(),\nwhich means MMIO mappings are leaked.\n\nMove the guard so we call iounmap() for MMIO mappings.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26979",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26983",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbootconfig: use memblock_free_late to free xbc memory to buddy\n\nOn the time to free xbc memory in xbc_exit(), memblock may has handed\nover memory to buddy allocator. So it doesn't make sense to free memory\nback to memblock. memblock_free() called by xbc_exit() even causes UAF bugs\non architectures with CONFIG_ARCH_KEEP_MEMBLOCK disabled like x86.\nFollowing KASAN logs shows this case.\n\nThis patch fixes the xbc memory free problem by calling memblock_free()\nin early xbc init error rewind path and calling memblock_free_late() in\nxbc exit path to free memory to buddy allocator.\n\n[    9.410890] ==================================================================\n[    9.418962] BUG: KASAN: use-after-free in memblock_isolate_range+0x12d/0x260\n[    9.426850] Read of size 8 at addr ffff88845dd30000 by task swapper/0/1\n\n[    9.435901] CPU: 9 PID: 1 Comm: swapper/0 Tainted: G     U             6.9.0-rc3-00208-g586b5dfb51b9 #5\n[    9.446403] Hardware name: Intel Corporation RPLP LP5 (CPU:RaptorLake)/RPLP LP5 (ID:13), BIOS IRPPN02.01.01.00.00.19.015.D-00000000 Dec 28 2023\n[    9.460789] Call Trace:\n[    9.463518]  \u003cTASK\u003e\n[    9.465859]  dump_stack_lvl+0x53/0x70\n[    9.469949]  print_report+0xce/0x610\n[    9.473944]  ? __virt_addr_valid+0xf5/0x1b0\n[    9.478619]  ? memblock_isolate_range+0x12d/0x260\n[    9.483877]  kasan_report+0xc6/0x100\n[    9.487870]  ? memblock_isolate_range+0x12d/0x260\n[    9.493125]  memblock_isolate_range+0x12d/0x260\n[    9.498187]  memblock_phys_free+0xb4/0x160\n[    9.502762]  ? __pfx_memblock_phys_free+0x10/0x10\n[    9.508021]  ? mutex_unlock+0x7e/0xd0\n[    9.512111]  ? __pfx_mutex_unlock+0x10/0x10\n[    9.516786]  ? kernel_init_freeable+0x2d4/0x430\n[    9.521850]  ? __pfx_kernel_init+0x10/0x10\n[    9.526426]  xbc_exit+0x17/0x70\n[    9.529935]  kernel_init+0x38/0x1e0\n[    9.533829]  ? _raw_spin_unlock_irq+0xd/0x30\n[    9.538601]  ret_from_fork+0x2c/0x50\n[    9.542596]  ? __pfx_kernel_init+0x10/0x10\n[    9.547170]  ret_from_fork_asm+0x1a/0x30\n[    9.551552]  \u003c/TASK\u003e\n\n[    9.555649] The buggy address belongs to the physical page:\n[    9.561875] page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x1 pfn:0x45dd30\n[    9.570821] flags: 0x200000000000000(node=0|zone=2)\n[    9.576271] page_type: 0xffffffff()\n[    9.580167] raw: 0200000000000000 ffffea0011774c48 ffffea0012ba1848 0000000000000000\n[    9.588823] raw: 0000000000000001 0000000000000000 00000000ffffffff 0000000000000000\n[    9.597476] page dumped because: kasan: bad access detected\n\n[    9.605362] Memory state around the buggy address:\n[    9.610714]  ffff88845dd2ff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    9.618786]  ffff88845dd2ff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    9.626857] \u003effff88845dd30000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[    9.634930]                    ^\n[    9.638534]  ffff88845dd30080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[    9.646605]  ffff88845dd30100: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[    9.654675] ==================================================================",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau: fix instmem race condition around ptr stores\n\nRunning a lot of VK CTS in parallel against nouveau, once every\nfew hours you might see something like this crash.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nPGD 8000000114e6e067 P4D 8000000114e6e067 PUD 109046067 PMD 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 7 PID: 53891 Comm: deqp-vk Not tainted 6.8.0-rc6+ #27\nHardware name: Gigabyte Technology Co., Ltd. Z390 I AORUS PRO WIFI/Z390 I AORUS PRO WIFI-CF, BIOS F8 11/05/2021\nRIP: 0010:gp100_vmm_pgt_mem+0xe3/0x180 [nouveau]\nCode: c7 48 01 c8 49 89 45 58 85 d2 0f 84 95 00 00 00 41 0f b7 46 12 49 8b 7e 08 89 da 42 8d 2c f8 48 8b 47 08 41 83 c7 01 48 89 ee \u003c48\u003e 8b 40 08 ff d0 0f 1f 00 49 8b 7e 08 48 89 d9 48 8d 75 04 48 c1\nRSP: 0000:ffffac20c5857838 EFLAGS: 00010202\nRAX: 0000000000000000 RBX: 00000000004d8001 RCX: 0000000000000001\nRDX: 00000000004d8001 RSI: 00000000000006d8 RDI: ffffa07afe332180\nRBP: 00000000000006d8 R08: ffffac20c5857ad0 R09: 0000000000ffff10\nR10: 0000000000000001 R11: ffffa07af27e2de0 R12: 000000000000001c\nR13: ffffac20c5857ad0 R14: ffffa07a96fe9040 R15: 000000000000001c\nFS:  00007fe395eed7c0(0000) GS:ffffa07e2c980000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 000000011febe001 CR4: 00000000003706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\n...\n\n ? gp100_vmm_pgt_mem+0xe3/0x180 [nouveau]\n ? gp100_vmm_pgt_mem+0x37/0x180 [nouveau]\n nvkm_vmm_iter+0x351/0xa20 [nouveau]\n ? __pfx_nvkm_vmm_ref_ptes+0x10/0x10 [nouveau]\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n ? __lock_acquire+0x3ed/0x2170\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n nvkm_vmm_ptes_get_map+0xc2/0x100 [nouveau]\n ? __pfx_nvkm_vmm_ref_ptes+0x10/0x10 [nouveau]\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n nvkm_vmm_map_locked+0x224/0x3a0 [nouveau]\n\nAdding any sort of useful debug usually makes it go away, so I hand\nwrote the function in a line, and debugged the asm.\n\nEvery so often pt-\u003ememory-\u003eptrs is NULL. This ptrs ptr is set in\nthe nv50_instobj_acquire called from nvkm_kmap.\n\nIf Thread A and Thread B both get to nv50_instobj_acquire around\nthe same time, and Thread A hits the refcount_set line, and in\nlockstep thread B succeeds at refcount_inc_not_zero, there is a\nchance the ptrs value won't have been stored since refcount_set\nis unordered. Force a memory barrier here, I picked smp_mb, since\nwe want it on all CPUs and it's write followed by a read.\n\nv2: use paired smp_rmb/smp_wmb.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26986",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix memory leak in create_process failure\n\nFix memory leak due to a leaked mmget reference on an error handling\ncode path that is triggered when attempting to create KFD processes\nwhile a GPU reset is in progress.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26988",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninit/main.c: Fix potential static_command_line memory overflow\n\nWe allocate memory of size 'xlen + strlen(boot_command_line) + 1' for\nstatic_command_line, but the strings copied into static_command_line are\nextra_command_line and command_line, rather than extra_command_line and\nboot_command_line.\n\nWhen strlen(command_line) \u003e strlen(boot_command_line), static_command_line\nwill overflow.\n\nThis patch just recovers strlen(command_line) which was miss-consolidated\nwith strlen(boot_command_line) in the commit f5c7310ac73e (\"init/main: add\nchecks for the return value of memblock_alloc*()\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26989",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: hibernate: Fix level3 translation fault in swsusp_save()\n\nOn arm64 machines, swsusp_save() faults if it attempts to access\nMEMBLOCK_NOMAP memory ranges. This can be reproduced in QEMU using UEFI\nwhen booting with rodata=off debug_pagealloc=off and CONFIG_KFENCE=n:\n\n  Unable to handle kernel paging request at virtual address ffffff8000000000\n  Mem abort info:\n    ESR = 0x0000000096000007\n    EC = 0x25: DABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x07: level 3 translation fault\n  Data abort info:\n    ISV = 0, ISS = 0x00000007, ISS2 = 0x00000000\n    CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n    GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n  swapper pgtable: 4k pages, 39-bit VAs, pgdp=00000000eeb0b000\n  [ffffff8000000000] pgd=180000217fff9803, p4d=180000217fff9803, pud=180000217fff9803, pmd=180000217fff8803, pte=0000000000000000\n  Internal error: Oops: 0000000096000007 [#1] SMP\n  Internal error: Oops: 0000000096000007 [#1] SMP\n  Modules linked in: xt_multiport ipt_REJECT nf_reject_ipv4 xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c iptable_filter bpfilter rfkill at803x snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg dwmac_generic stmmac_platform snd_hda_codec stmmac joydev pcs_xpcs snd_hda_core phylink ppdev lp parport ramoops reed_solomon ip_tables x_tables nls_iso8859_1 vfat multipath linear amdgpu amdxcp drm_exec gpu_sched drm_buddy hid_generic usbhid hid radeon video drm_suballoc_helper drm_ttm_helper ttm i2c_algo_bit drm_display_helper cec drm_kms_helper drm\n  CPU: 0 PID: 3663 Comm: systemd-sleep Not tainted 6.6.2+ #76\n  Source Version: 4e22ed63a0a48e7a7cff9b98b7806d8d4add7dc0\n  Hardware name: Greatwall GW-XXXXXX-XXX/GW-XXXXXX-XXX, BIOS KunLun BIOS V4.0 01/19/2021\n  pstate: 600003c5 (nZCv DAIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : swsusp_save+0x280/0x538\n  lr : swsusp_save+0x280/0x538\n  sp : ffffffa034a3fa40\n  x29: ffffffa034a3fa40 x28: ffffff8000001000 x27: 0000000000000000\n  x26: ffffff8001400000 x25: ffffffc08113e248 x24: 0000000000000000\n  x23: 0000000000080000 x22: ffffffc08113e280 x21: 00000000000c69f2\n  x20: ffffff8000000000 x19: ffffffc081ae2500 x18: 0000000000000000\n  x17: 6666662074736420 x16: 3030303030303030 x15: 3038666666666666\n  x14: 0000000000000b69 x13: ffffff9f89088530 x12: 00000000ffffffea\n  x11: 00000000ffff7fff x10: 00000000ffff7fff x9 : ffffffc08193f0d0\n  x8 : 00000000000bffe8 x7 : c0000000ffff7fff x6 : 0000000000000001\n  x5 : ffffffa0fff09dc8 x4 : 0000000000000000 x3 : 0000000000000027\n  x2 : 0000000000000000 x1 : 0000000000000000 x0 : 000000000000004e\n  Call trace:\n   swsusp_save+0x280/0x538\n   swsusp_arch_suspend+0x148/0x190\n   hibernation_snapshot+0x240/0x39c\n   hibernate+0xc4/0x378\n   state_store+0xf0/0x10c\n   kobj_attr_store+0x14/0x24\n\nThe reason is swsusp_save() -\u003e copy_data_pages() -\u003e page_is_saveable()\n-\u003e kernel_page_present() assuming that a page is always present when\ncan_set_direct_map() is false (all of rodata_full,\ndebug_pagealloc_enabled() and arm64_kfence_can_set_direct_map() false),\nirrespective of the MEMBLOCK_NOMAP ranges. Such MEMBLOCK_NOMAP regions\nshould not be saved during hibernation.\n\nThis problem was introduced by changes to the pfn_valid() logic in\ncommit a7d9f306ba70 (\"arm64: drop pfn_valid_within() and simplify\npfn_valid()\").\n\nSimilar to other architectures, drop the !can_set_direct_map() check in\nkernel_page_present() so that page_is_savable() skips such pages.\n\n[catalin.marinas@arm.com: rework commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: Write-protect L2 SPTEs in TDP MMU when clearing dirty status\n\nCheck kvm_mmu_page_ad_need_write_protect() when deciding whether to\nwrite-protect or clear D-bits on TDP MMU SPTEs, so that the TDP MMU\naccounts for any role-specific reasons for disabling D-bit dirty logging.\n\nSpecifically, TDP MMU SPTEs must be write-protected when the TDP MMU is\nbeing used to run an L2 (i.e. L1 has disabled EPT) and PML is enabled.\nKVM always disables PML when running L2, even when L1 and L2 GPAs are in\nthe some domain, so failing to write-protect TDP MMU SPTEs will cause\nwrites made by L2 to not be reflected in the dirty log.\n\n[sean: massage shortlog and changelog, tweak ternary op formatting]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26991",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: x86: Don't overflow lpage_info when checking attributes\n\nFix KVM_SET_MEMORY_ATTRIBUTES to not overflow lpage_info array and trigger\nKASAN splat, as seen in the private_mem_conversions_test selftest.\n\nWhen memory attributes are set on a GFN range, that range will have\nspecific properties applied to the TDP. A huge page cannot be used when\nthe attributes are inconsistent, so they are disabled for those the\nspecific huge pages. For internal KVM reasons, huge pages are also not\nallowed to span adjacent memslots regardless of whether the backing memory\ncould be mapped as huge.\n\nWhat GFNs support which huge page sizes is tracked by an array of arrays\n'lpage_info' on the memslot, of 'kvm_lpage_info' structs. Each index of\nlpage_info contains a vmalloc allocated array of these for a specific\nsupported page size. The kvm_lpage_info denotes whether a specific huge\npage (GFN and page size) on the memslot is supported. These arrays include\nindices for unaligned head and tail huge pages.\n\nPreventing huge pages from spanning adjacent memslot is covered by\nincrementing the count in head and tail kvm_lpage_info when the memslot is\nallocated, but disallowing huge pages for memory that has mixed attributes\nhas to be done in a more complicated way. During the\nKVM_SET_MEMORY_ATTRIBUTES ioctl KVM updates lpage_info for each memslot in\nthe range that has mismatched attributes. KVM does this a memslot at a\ntime, and marks a special bit, KVM_LPAGE_MIXED_FLAG, in the kvm_lpage_info\nfor any huge page. This bit is essentially a permanently elevated count.\nSo huge pages will not be mapped for the GFN at that page size if the\ncount is elevated in either case: a huge head or tail page unaligned to\nthe memslot or if KVM_LPAGE_MIXED_FLAG is set because it has mixed\nattributes.\n\nTo determine whether a huge page has consistent attributes, the\nKVM_SET_MEMORY_ATTRIBUTES operation checks an xarray to make sure it\nconsistently has the incoming attribute. Since level - 1 huge pages are\naligned to level huge pages, it employs an optimization. As long as the\nlevel - 1 huge pages are checked first, it can just check these and assume\nthat if each level - 1 huge page contained within the level sized huge\npage is not mixed, then the level size huge page is not mixed. This\noptimization happens in the helper hugepage_has_attrs().\n\nUnfortunately, although the kvm_lpage_info array representing page size\n'level' will contain an entry for an unaligned tail page of size level,\nthe array for level - 1  will not contain an entry for each GFN at page\nsize level. The level - 1 array will only contain an index for any\nunaligned region covered by level - 1 huge page size, which can be a\nsmaller region. So this causes the optimization to overflow the level - 1\nkvm_lpage_info and perform a vmalloc out of bounds read.\n\nIn some cases of head and tail pages where an overflow could happen,\ncallers skip the operation completely as KVM_LPAGE_MIXED_FLAG is not\nrequired to prevent huge pages as discussed earlier. But for memslots that\nare smaller than the 1GB page size, it does call hugepage_has_attrs(). In\nthis case the huge page is both the head and tail page. The issue can be\nobserved simply by compiling the kernel with CONFIG_KASAN_VMALLOC and\nrunning the selftest \"private_mem_conversions_test\", which produces the\noutput like the following:\n\nBUG: KASAN: vmalloc-out-of-bounds in hugepage_has_attrs+0x7e/0x110\nRead of size 4 at addr ffffc900000a3008 by task private_mem_con/169\nCall Trace:\n  dump_stack_lvl\n  print_report\n  ? __virt_addr_valid\n  ? hugepage_has_attrs\n  ? hugepage_has_attrs\n  kasan_report\n  ? hugepage_has_attrs\n  hugepage_has_attrs\n  kvm_arch_post_set_memory_attributes\n  kvm_vm_ioctl\n\nIt is a little ambiguous whether the unaligned head page (in the bug case\nalso the tail page) should be expected to have KVM_LPAGE_MIXED_FLAG set.\nIt is not functionally required, as the unal\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26992",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/pmu: Disable support for adaptive PEBS\n\nDrop support for virtualizing adaptive PEBS, as KVM's implementation is\narchitecturally broken without an obvious/easy path forward, and because\nexposing adaptive PEBS can leak host LBRs to the guest, i.e. can leak\nhost kernel addresses to the guest.\n\nBug #1 is that KVM doesn't account for the upper 32 bits of\nIA32_FIXED_CTR_CTRL when (re)programming fixed counters, e.g\nfixed_ctrl_field() drops the upper bits, reprogram_fixed_counters()\nstores local variables as u8s and truncates the upper bits too, etc.\n\nBug #2 is that, because KVM _always_ sets precise_ip to a non-zero value\nfor PEBS events, perf will _always_ generate an adaptive record, even if\nthe guest requested a basic record.  Note, KVM will also enable adaptive\nPEBS in individual *counter*, even if adaptive PEBS isn't exposed to the\nguest, but this is benign as MSR_PEBS_DATA_CFG is guaranteed to be zero,\ni.e. the guest will only ever see Basic records.\n\nBug #3 is in perf.  intel_pmu_disable_fixed() doesn't clear the upper\nbits either, i.e. leaves ICL_FIXED_0_ADAPTIVE set, and\nintel_pmu_enable_fixed() effectively doesn't clear ICL_FIXED_0_ADAPTIVE\neither.  I.e. perf _always_ enables ADAPTIVE counters, regardless of what\nKVM requests.\n\nBug #4 is that adaptive PEBS *might* effectively bypass event filters set\nby the host, as \"Updated Memory Access Info Group\" records information\nthat might be disallowed by userspace via KVM_SET_PMU_EVENT_FILTER.\n\nBug #5 is that KVM doesn't ensure LBR MSRs hold guest values (or at least\nzeros) when entering a vCPU with adaptive PEBS, which allows the guest\nto read host LBRs, i.e. host RIPs/addresses, by enabling \"LBR Entries\"\nrecords.\n\nDisable adaptive PEBS support as an immediate fix due to the severity of\nthe LBR leak in particular, and because fixing all of the bugs will be\nnon-trivial, e.g. not suitable for backporting to stable kernels.\n\nNote!  This will break live migration, but trying to make KVM play nice\nwith live migration would be quite complicated, wouldn't be guaranteed to\nwork (i.e. KVM might still kill/confuse the guest), and it's not clear\nthat there are any publicly available VMMs that support adaptive PEBS,\nlet alone live migrate VMs that support adaptive PEBS, e.g. QEMU doesn't\nsupport PEBS in any capacity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26993",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: sysfs: Fix reference leak in sysfs_break_active_protection()\n\nThe sysfs_break_active_protection() routine has an obvious reference\nleak in its error path.  If the call to kernfs_find_and_get() fails then\nkn will be NULL, so the companion sysfs_unbreak_active_protection()\nroutine won't get called (and would only cause an access violation by\ntrying to dereference kn-\u003eparent if it was called).  As a result, the\nreference to kobj acquired at the start of the function will never be\nreleased.\n\nFix the leak by adding an explicit kobject_put() call when kn is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26994",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspeakup: Avoid crash on very long word\n\nIn case a console is set up really large and contains a really long word\n(\u003e 256 characters), we have to stop before the length of the word buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: Correct the PDO counting in pd_set\n\nOff-by-one errors happen because nr_snk_pdo and nr_src_pdo are\nincorrectly added one. The index of the loop is equal to the number of\nPDOs to be updated when leaving the loop and it doesn't need to be added\none.\n\nWhen doing the power negotiation, TCPM relies on the \"nr_snk_pdo\" as\nthe size of the local sink PDO array to match the Source capabilities\nof the partner port. If the off-by-one overflow occurs, a wrong RDO\nmight be sent and unexpected power transfer might happen such as over\nvoltage or over current (than expected).\n\n\"nr_src_pdo\" is used to set the Rp level when the port is in Source\nrole. It is also the array size of the local Source capabilities when\nfilling up the buffer which will be sent as the Source PDOs (such as\nin Power Negotiation). If the off-by-one overflow occurs, a wrong Rp\nlevel might be set and wrong Source PDOs will be sent to the partner\nport. This could potentially cause over current or port resets.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26996",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb ep transport error\n\nWhen ncm function is working and then stop usb0 interface for link down,\neth_stop() is called. At this piont, accidentally if usb transport error\nshould happen in usb_ep_enable(), 'in_ep' and/or 'out_ep' may not be enabled.\n\nAfter that, ncm_disable() is called to disable for ncm unbind\nbut gether_disconnect() is never called since 'in_ep' is not enabled.\n\nAs the result, ncm object is released in ncm unbind\nbut 'dev-\u003eport_usb' associated to 'ncm-\u003eport' is not NULL.\n\nAnd when ncm bind again to recover netdev, ncm object is reallocated\nbut usb0 interface is already associated to previous released ncm object.\n\nTherefore, once usb0 interface is up and eth_start_xmit() is called,\nreleased ncm object is dereferrenced and it might cause use-after-free memory.\n\n[function unlink via configfs]\n  usb0: eth_stop dev-\u003eport_usb=ffffff9b179c3200\n  --\u003e error happens in usb_ep_enable().\n  NCM: ncm_disable: ncm=ffffff9b179c3200\n  --\u003e no gether_disconnect() since ncm-\u003eport.in_ep-\u003eenabled is false.\n  NCM: ncm_unbind: ncm unbind ncm=ffffff9b179c3200\n  NCM: ncm_free: ncm free ncm=ffffff9b179c3200   \u003c-- released ncm\n\n[function link via configfs]\n  NCM: ncm_alloc: ncm alloc ncm=ffffff9ac4f8a000\n  NCM: ncm_bind: ncm bind ncm=ffffff9ac4f8a000\n  NCM: ncm_set_alt: ncm=ffffff9ac4f8a000 alt=0\n  usb0: eth_open dev-\u003eport_usb=ffffff9b179c3200  \u003c-- previous released ncm\n  usb0: eth_start dev-\u003eport_usb=ffffff9b179c3200 \u003c--\n  eth_start_xmit()\n  --\u003e dev-\u003ewrap()\n  Unable to handle kernel paging request at virtual address dead00000000014f\n\nThis patch addresses the issue by checking if 'ncm-\u003enetdev' is not NULL at\nncm_disable() to call gether_disconnect() to deassociate 'dev-\u003eport_usb'.\nIt's more reasonable to check 'ncm-\u003enetdev' to call gether_connect/disconnect\nrather than check 'ncm-\u003eport.in_ep-\u003eenabled' since it might not be enabled\nbut the gether connection might be established.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: host: Fix dereference issue in DDMA completion flow.\n\nFixed variable dereference issue in DDMA completion flow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial/pmac_zilog: Remove flawed mitigation for rx irq flood\n\nThe mitigation was intended to stop the irq completely. That may be\nbetter than a hard lock-up but it turns out that you get a crash anyway\nif you're using pmac_zilog as a serial console:\n\nttyPZ0: pmz: rx irq flood !\nBUG: spinlock recursion on CPU#0, swapper/0\n\nThat's because the pr_err() call in pmz_receive_chars() results in\npmz_console_write() attempting to lock a spinlock already locked in\npmz_interrupt(). With CONFIG_DEBUG_SPINLOCK=y, this produces a fatal\nBUG splat. The spinlock in question is the one in struct uart_port.\n\nEven when it's not fatal, the serial port rx function ceases to work.\nAlso, the iteration limit doesn't play nicely with QEMU, as can be\nseen in the bug report linked below.\n\nA web search for other reports of the error message \"pmz: rx irq flood\"\ndidn't produce anything. So I don't think this code is needed any more.\nRemove it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27000",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mxs-auart: add spinlock around changing cts state\n\nThe uart_handle_cts_change() function in serial_core expects the caller\nto hold uport-\u003elock. For example, I have seen the below kernel splat,\nwhen the Bluetooth driver is loaded on an i.MX28 board.\n\n    [   85.119255] ------------[ cut here ]------------\n    [   85.124413] WARNING: CPU: 0 PID: 27 at /drivers/tty/serial/serial_core.c:3453 uart_handle_cts_change+0xb4/0xec\n    [   85.134694] Modules linked in: hci_uart bluetooth ecdh_generic ecc wlcore_sdio configfs\n    [   85.143314] CPU: 0 PID: 27 Comm: kworker/u3:0 Not tainted 6.6.3-00021-gd62a2f068f92 #1\n    [   85.151396] Hardware name: Freescale MXS (Device Tree)\n    [   85.156679] Workqueue: hci0 hci_power_on [bluetooth]\n    (...)\n    [   85.191765]  uart_handle_cts_change from mxs_auart_irq_handle+0x380/0x3f4\n    [   85.198787]  mxs_auart_irq_handle from __handle_irq_event_percpu+0x88/0x210\n    (...)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27001",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: vmk80xx: fix incomplete endpoint checking\n\nWhile vmk80xx does have endpoint checking implemented, some things\ncan fall through the cracks. Depending on the hardware model,\nURBs can have either bulk or interrupt type, and current version\nof vmk80xx_find_usb_endpoints() function does not take that fully\ninto account. While this warning does not seem to be too harmful,\nat the very least it will crash systems with 'panic_on_warn' set on\nthem.\n\nFix the issue found by Syzkaller [1] by somewhat simplifying the\nendpoint checking process with usb_find_common_endpoints() and\nensuring that only expected endpoint types are present.\n\nThis patch has not been tested on real hardware.\n\n[1] Syzkaller report:\nusb 1-1: BOGUS urb xfer, pipe 1 != type 3\nWARNING: CPU: 0 PID: 781 at drivers/usb/core/urb.c:504 usb_submit_urb+0xc4e/0x18c0 drivers/usb/core/urb.c:503\n...\nCall Trace:\n \u003cTASK\u003e\n usb_start_wait_urb+0x113/0x520 drivers/usb/core/message.c:59\n vmk80xx_reset_device drivers/comedi/drivers/vmk80xx.c:227 [inline]\n vmk80xx_auto_attach+0xa1c/0x1a40 drivers/comedi/drivers/vmk80xx.c:818\n comedi_auto_config+0x238/0x380 drivers/comedi/drivers.c:1067\n usb_probe_interface+0x5cd/0xb00 drivers/usb/core/driver.c:399\n...\n\nSimilar issue also found by Syzkaller:",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27002",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: Do a runtime PM get on controllers during probe\n\nmt8183-mfgcfg has a mutual dependency with genpd during the probing\nstage, which leads to a deadlock in the following call stack:\n\nCPU0:  genpd_lock --\u003e clk_prepare_lock\ngenpd_power_off_work_fn()\n genpd_lock()\n generic_pm_domain::power_off()\n    clk_unprepare()\n      clk_prepare_lock()\n\nCPU1: clk_prepare_lock --\u003e genpd_lock\nclk_register()\n  __clk_core_init()\n    clk_prepare_lock()\n    clk_pm_runtime_get()\n      genpd_lock()\n\nDo a runtime PM get at the probe function to make sure clk_register()\nwon't acquire the genpd lock. Instead of only modifying mt8183-mfgcfg,\ndo this on all mediatek clock controller probings because we don't\nbelieve this would cause any regression.\n\nVerified on MT8183 and MT8192 Chromebooks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Get runtime PM before walking tree for clk_summary\n\nSimilar to the previous commit, we should make sure that all devices are\nruntime resumed before printing the clk_summary through debugfs. Failure\nto do so would result in a deadlock if the thread is resuming a device\nto print clk state and that device is also runtime resuming in another\nthread, e.g the screen is turning on and the display driver is starting\nup. We remove the calls to clk_pm_runtime_{get,put}() in this path\nbecause they're superfluous now that we know the devices are runtime\nresumed. This also squashes a bug where the return value of\nclk_pm_runtime_get() wasn't checked, leading to an RPM count underflow\non error paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27004",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Get runtime PM before walking tree during disable_unused\n\nDoug reported [1] the following hung task:\n\n INFO: task swapper/0:1 blocked for more than 122 seconds.\n       Not tainted 5.15.149-21875-gf795ebc40eb8 #1\n \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n task:swapper/0       state:D stack:    0 pid:    1 ppid:     0 flags:0x00000008\n Call trace:\n  __switch_to+0xf4/0x1f4\n  __schedule+0x418/0xb80\n  schedule+0x5c/0x10c\n  rpm_resume+0xe0/0x52c\n  rpm_resume+0x178/0x52c\n  __pm_runtime_resume+0x58/0x98\n  clk_pm_runtime_get+0x30/0xb0\n  clk_disable_unused_subtree+0x58/0x208\n  clk_disable_unused_subtree+0x38/0x208\n  clk_disable_unused_subtree+0x38/0x208\n  clk_disable_unused_subtree+0x38/0x208\n  clk_disable_unused_subtree+0x38/0x208\n  clk_disable_unused+0x4c/0xe4\n  do_one_initcall+0xcc/0x2d8\n  do_initcall_level+0xa4/0x148\n  do_initcalls+0x5c/0x9c\n  do_basic_setup+0x24/0x30\n  kernel_init_freeable+0xec/0x164\n  kernel_init+0x28/0x120\n  ret_from_fork+0x10/0x20\n INFO: task kworker/u16:0:9 blocked for more than 122 seconds.\n       Not tainted 5.15.149-21875-gf795ebc40eb8 #1\n \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n task:kworker/u16:0   state:D stack:    0 pid:    9 ppid:     2 flags:0x00000008\n Workqueue: events_unbound deferred_probe_work_func\n Call trace:\n  __switch_to+0xf4/0x1f4\n  __schedule+0x418/0xb80\n  schedule+0x5c/0x10c\n  schedule_preempt_disabled+0x2c/0x48\n  __mutex_lock+0x238/0x488\n  __mutex_lock_slowpath+0x1c/0x28\n  mutex_lock+0x50/0x74\n  clk_prepare_lock+0x7c/0x9c\n  clk_core_prepare_lock+0x20/0x44\n  clk_prepare+0x24/0x30\n  clk_bulk_prepare+0x40/0xb0\n  mdss_runtime_resume+0x54/0x1c8\n  pm_generic_runtime_resume+0x30/0x44\n  __genpd_runtime_resume+0x68/0x7c\n  genpd_runtime_resume+0x108/0x1f4\n  __rpm_callback+0x84/0x144\n  rpm_callback+0x30/0x88\n  rpm_resume+0x1f4/0x52c\n  rpm_resume+0x178/0x52c\n  __pm_runtime_resume+0x58/0x98\n  __device_attach+0xe0/0x170\n  device_initial_probe+0x1c/0x28\n  bus_probe_device+0x3c/0x9c\n  device_add+0x644/0x814\n  mipi_dsi_device_register_full+0xe4/0x170\n  devm_mipi_dsi_device_register_full+0x28/0x70\n  ti_sn_bridge_probe+0x1dc/0x2c0\n  auxiliary_bus_probe+0x4c/0x94\n  really_probe+0xcc/0x2c8\n  __driver_probe_device+0xa8/0x130\n  driver_probe_device+0x48/0x110\n  __device_attach_driver+0xa4/0xcc\n  bus_for_each_drv+0x8c/0xd8\n  __device_attach+0xf8/0x170\n  device_initial_probe+0x1c/0x28\n  bus_probe_device+0x3c/0x9c\n  deferred_probe_work_func+0x9c/0xd8\n  process_one_work+0x148/0x518\n  worker_thread+0x138/0x350\n  kthread+0x138/0x1e0\n  ret_from_fork+0x10/0x20\n\nThe first thread is walking the clk tree and calling\nclk_pm_runtime_get() to power on devices required to read the clk\nhardware via struct clk_ops::is_enabled(). This thread holds the clk\nprepare_lock, and is trying to runtime PM resume a device, when it finds\nthat the device is in the process of resuming so the thread schedule()s\naway waiting for the device to finish resuming before continuing. The\nsecond thread is runtime PM resuming the same device, but the runtime\nresume callback is calling clk_prepare(), trying to grab the\nprepare_lock waiting on the first thread.\n\nThis is a classic ABBA deadlock. To properly fix the deadlock, we must\nnever runtime PM resume or suspend a device with the clk prepare_lock\nheld. Actually doing that is near impossible today because the global\nprepare_lock would have to be dropped in the middle of the tree, the\ndevice runtime PM resumed/suspended, and then the prepare_lock grabbed\nagain to ensure consistency of the clk tree topology. If anything\nchanges with the clk tree in the meantime, we've lost and will need to\nstart the operation all over again.\n\nLuckily, most of the time we're simply incrementing or decrementing the\nruntime PM count on an active device, so we don't have the chance to\nschedule away with the prepare_lock held. Let's fix this immediate\nproblem that can be\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27008",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: nv04: Fix out of bounds access\n\nWhen Output Resource (dcb-\u003eor) value is assigned in\nfabricate_dcb_output(), there may be out of bounds access to\ndac_users array in case dcb-\u003eor is zero because ffs(dcb-\u003eor) is\nused as index there.\nThe 'or' argument of fabricate_dcb_output() must be interpreted as a\nnumber of bit to set, not value.\n\nUtilize macros from 'enum nouveau_or' in calls instead of hardcoding.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27009",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: fix race condition during online processing\n\nA race condition exists in ccw_device_set_online() that can cause the\nonline process to fail, leaving the affected device in an inconsistent\nstate. As a result, subsequent attempts to set that device online fail\nwith return code ENODEV.\n\nThe problem occurs when a path verification request arrives after\na wait for final device state completed, but before the result state\nis evaluated.\n\nFix this by ensuring that the CCW-device lock is held between\ndetermining final state and checking result state.\n\nNote that since:\n\ncommit 2297791c92d0 (\"s390/cio: dont unregister subchannel from child-drivers\")\n\npath verification requests are much more likely to occur during boot,\nresulting in an increased chance of this race condition occurring.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27012",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: restore set elements when delete set fails\n\nFrom abort path, nft_mapelem_activate() needs to restore refcounters to\nthe original state. Currently, it uses the set-\u003eops-\u003ewalk() to iterate\nover these set elements. The existing set iterator skips inactive\nelements in the next generation, this does not work from the abort path\nto restore the original state since it has to skip active elements\ninstead (not inactive ones).\n\nThis patch moves the check for inactive elements to the set iterator\ncallback, then it reverses the logic for the .activate case which\nneeds to skip active elements.\n\nToggle next generation bit for elements when delete set command is\ninvoked and call nft_clear() from .activate (abort) path to restore the\nnext generation bit.\n\nThe splat below shows an object in mappings memleak:\n\n[43929.457523] ------------[ cut here ]------------\n[43929.457532] WARNING: CPU: 0 PID: 1139 at include/net/netfilter/nf_tables.h:1237 nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[...]\n[43929.458014] RIP: 0010:nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458076] Code: 83 f8 01 77 ab 49 8d 7c 24 08 e8 37 5e d0 de 49 8b 6c 24 08 48 8d 7d 50 e8 e9 5c d0 de 8b 45 50 8d 50 ff 89 55 50 85 c0 75 86 \u003c0f\u003e 0b eb 82 0f 0b eb b3 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90\n[43929.458081] RSP: 0018:ffff888140f9f4b0 EFLAGS: 00010246\n[43929.458086] RAX: 0000000000000000 RBX: ffff8881434f5288 RCX: dffffc0000000000\n[43929.458090] RDX: 00000000ffffffff RSI: ffffffffa26d28a7 RDI: ffff88810ecc9550\n[43929.458093] RBP: ffff88810ecc9500 R08: 0000000000000001 R09: ffffed10281f3e8f\n[43929.458096] R10: 0000000000000003 R11: ffff0000ffff0000 R12: ffff8881434f52a0\n[43929.458100] R13: ffff888140f9f5f4 R14: ffff888151c7a800 R15: 0000000000000002\n[43929.458103] FS:  00007f0c687c4740(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[43929.458107] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[43929.458111] CR2: 00007f58dbe5b008 CR3: 0000000123602005 CR4: 00000000001706f0\n[43929.458114] Call Trace:\n[43929.458118]  \u003cTASK\u003e\n[43929.458121]  ? __warn+0x9f/0x1a0\n[43929.458127]  ? nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458188]  ? report_bug+0x1b1/0x1e0\n[43929.458196]  ? handle_bug+0x3c/0x70\n[43929.458200]  ? exc_invalid_op+0x17/0x40\n[43929.458211]  ? nft_setelem_data_deactivate+0xd7/0xf0 [nf_tables]\n[43929.458271]  ? nft_setelem_data_deactivate+0xe4/0xf0 [nf_tables]\n[43929.458332]  nft_mapelem_deactivate+0x24/0x30 [nf_tables]\n[43929.458392]  nft_rhash_walk+0xdd/0x180 [nf_tables]\n[43929.458453]  ? __pfx_nft_rhash_walk+0x10/0x10 [nf_tables]\n[43929.458512]  ? rb_insert_color+0x2e/0x280\n[43929.458520]  nft_map_deactivate+0xdc/0x1e0 [nf_tables]\n[43929.458582]  ? __pfx_nft_map_deactivate+0x10/0x10 [nf_tables]\n[43929.458642]  ? __pfx_nft_mapelem_deactivate+0x10/0x10 [nf_tables]\n[43929.458701]  ? __rcu_read_unlock+0x46/0x70\n[43929.458709]  nft_delset+0xff/0x110 [nf_tables]\n[43929.458769]  nft_flush_table+0x16f/0x460 [nf_tables]\n[43929.458830]  nf_tables_deltable+0x501/0x580 [nf_tables]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntun: limit printing rate when illegal packet received by tun dev\n\nvhost_worker will call tun call backs to receive packets. If too many\nillegal packets arrives, tun_do_read will keep dumping packet contents.\nWhen console is enabled, it will costs much more cpu time to dump\npacket and soft lockup will be detected.\n\nnet_ratelimit mechanism can be used to limit the dumping rate.\n\nPID: 33036    TASK: ffff949da6f20000  CPU: 23   COMMAND: \"vhost-32980\"\n #0 [fffffe00003fce50] crash_nmi_callback at ffffffff89249253\n #1 [fffffe00003fce58] nmi_handle at ffffffff89225fa3\n #2 [fffffe00003fceb0] default_do_nmi at ffffffff8922642e\n #3 [fffffe00003fced0] do_nmi at ffffffff8922660d\n #4 [fffffe00003fcef0] end_repeat_nmi at ffffffff89c01663\n    [exception RIP: io_serial_in+20]\n    RIP: ffffffff89792594  RSP: ffffa655314979e8  RFLAGS: 00000002\n    RAX: ffffffff89792500  RBX: ffffffff8af428a0  RCX: 0000000000000000\n    RDX: 00000000000003fd  RSI: 0000000000000005  RDI: ffffffff8af428a0\n    RBP: 0000000000002710   R8: 0000000000000004   R9: 000000000000000f\n    R10: 0000000000000000  R11: ffffffff8acbf64f  R12: 0000000000000020\n    R13: ffffffff8acbf698  R14: 0000000000000058  R15: 0000000000000000\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #5 [ffffa655314979e8] io_serial_in at ffffffff89792594\n #6 [ffffa655314979e8] wait_for_xmitr at ffffffff89793470\n #7 [ffffa65531497a08] serial8250_console_putchar at ffffffff897934f6\n #8 [ffffa65531497a20] uart_console_write at ffffffff8978b605\n #9 [ffffa65531497a48] serial8250_console_write at ffffffff89796558\n #10 [ffffa65531497ac8] console_unlock at ffffffff89316124\n #11 [ffffa65531497b10] vprintk_emit at ffffffff89317c07\n #12 [ffffa65531497b68] printk at ffffffff89318306\n #13 [ffffa65531497bc8] print_hex_dump at ffffffff89650765\n #14 [ffffa65531497ca8] tun_do_read at ffffffffc0b06c27 [tun]\n #15 [ffffa65531497d38] tun_recvmsg at ffffffffc0b06e34 [tun]\n #16 [ffffa65531497d68] handle_rx at ffffffffc0c5d682 [vhost_net]\n #17 [ffffa65531497ed0] vhost_worker at ffffffffc0c644dc [vhost]\n #18 [ffffa65531497f10] kthread at ffffffff892d2e72\n #19 [ffffa65531497f50] ret_from_fork at ffffffff89c0022f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Prevent deadlock while disabling aRFS\n\nWhen disabling aRFS under the `priv-\u003estate_lock`, any scheduled\naRFS works are canceled using the `cancel_work_sync` function,\nwhich waits for the work to end if it has already started.\nHowever, while waiting for the work handler, the handler will\ntry to acquire the `state_lock` which is already acquired.\n\nThe worker acquires the lock to delete the rules if the state\nis down, which is not the worker's responsibility since\ndisabling aRFS deletes the rules.\n\nAdd an aRFS state variable, which indicates whether the aRFS is\nenabled and prevent adding rules when the aRFS is disabled.\n\nKernel log:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.7.0-rc4_net_next_mlx5_5483eb2 #1 Tainted: G          I\n------------------------------------------------------\nethtool/386089 is trying to acquire lock:\nffff88810f21ce68 ((work_completion)(\u0026rule-\u003earfs_work)){+.+.}-{0:0}, at: __flush_work+0x74/0x4e0\n\nbut task is already holding lock:\nffff8884a1808cc0 (\u0026priv-\u003estate_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-\u003e #1 (\u0026priv-\u003estate_lock){+.+.}-{3:3}:\n       __mutex_lock+0x80/0xc90\n       arfs_handle_work+0x4b/0x3b0 [mlx5_core]\n       process_one_work+0x1dc/0x4a0\n       worker_thread+0x1bf/0x3c0\n       kthread+0xd7/0x100\n       ret_from_fork+0x2d/0x50\n       ret_from_fork_asm+0x11/0x20\n\n-\u003e #0 ((work_completion)(\u0026rule-\u003earfs_work)){+.+.}-{0:0}:\n       __lock_acquire+0x17b4/0x2c80\n       lock_acquire+0xd0/0x2b0\n       __flush_work+0x7a/0x4e0\n       __cancel_work_timer+0x131/0x1c0\n       arfs_del_rules+0x143/0x1e0 [mlx5_core]\n       mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n       mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n       ethnl_set_channels+0x28f/0x3b0\n       ethnl_default_set_doit+0xec/0x240\n       genl_family_rcv_msg_doit+0xd0/0x120\n       genl_rcv_msg+0x188/0x2c0\n       netlink_rcv_skb+0x54/0x100\n       genl_rcv+0x24/0x40\n       netlink_unicast+0x1a1/0x270\n       netlink_sendmsg+0x214/0x460\n       __sock_sendmsg+0x38/0x60\n       __sys_sendto+0x113/0x170\n       __x64_sys_sendto+0x20/0x30\n       do_syscall_64+0x40/0xe0\n       entry_SYSCALL_64_after_hwframe+0x46/0x4e\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(\u0026priv-\u003estate_lock);\n                               lock((work_completion)(\u0026rule-\u003earfs_work));\n                               lock(\u0026priv-\u003estate_lock);\n  lock((work_completion)(\u0026rule-\u003earfs_work));\n\n *** DEADLOCK ***\n\n3 locks held by ethtool/386089:\n #0: ffffffff82ea7210 (cb_lock){++++}-{3:3}, at: genl_rcv+0x15/0x40\n #1: ffffffff82e94c88 (rtnl_mutex){+.+.}-{3:3}, at: ethnl_default_set_doit+0xd3/0x240\n #2: ffff8884a1808cc0 (\u0026priv-\u003estate_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nstack backtrace:\nCPU: 15 PID: 386089 Comm: ethtool Tainted: G          I        6.7.0-rc4_net_next_mlx5_5483eb2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x60/0xa0\n check_noncircular+0x144/0x160\n __lock_acquire+0x17b4/0x2c80\n lock_acquire+0xd0/0x2b0\n ? __flush_work+0x74/0x4e0\n ? save_trace+0x3e/0x360\n ? __flush_work+0x74/0x4e0\n __flush_work+0x7a/0x4e0\n ? __flush_work+0x74/0x4e0\n ? __lock_acquire+0xa78/0x2c80\n ? lock_acquire+0xd0/0x2b0\n ? mark_held_locks+0x49/0x70\n __cancel_work_timer+0x131/0x1c0\n ? mark_held_locks+0x49/0x70\n arfs_del_rules+0x143/0x1e0 [mlx5_core]\n mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n ethnl_set_channels+0x28f/0x3b0\n ethnl_default_set_doit+0xec/0x240\n genl_family_rcv_msg_doit+0xd0/0x120\n genl_rcv_msg+0x188/0x2c0\n ? ethn\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable: incorrect pppoe tuple\n\npppoe traffic reaching ingress path does not match the flowtable entry\nbecause the pppoe header is expected to be at the network header offset.\nThis bug causes a mismatch in the flow table lookup, so pppoe packets\nenter the classical forwarding path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable: validate pppoe header\n\nEnsure there is sufficient room to access the protocol field of the\nPPPoe header. Validate it once before the flowtable lookup, then use a\nhelper function to access protocol field.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27019",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_obj_type_get()\n\nnft_unregister_obj() can concurrent with __nft_obj_type_get(),\nand there is not any protection when iterate over nf_tables_objects\nlist in __nft_obj_type_get(). Therefore, there is potential data-race\nof nf_tables_objects list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_objects\nlist in __nft_obj_type_get(), and use rcu_read_lock() in the caller\nnft_obj_type_get() to protect the entire type query process.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_expr_type_get()\n\nnft_unregister_expr() can concurrent with __nft_expr_type_get(),\nand there is not any protection when iterate over nf_tables_expressions\nlist in __nft_expr_type_get(). Therefore, there is potential data-race\nof nf_tables_expressions list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_expressions\nlist in __nft_expr_type_get(), and use rcu_read_lock() in the caller\nnft_expr_type_get() to protect the entire type query process.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27022",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfork: defer linking file vma until vma is fully initialized\n\nThorvald reported a WARNING [1]. And the root cause is below race:\n\n CPU 1\t\t\t\t\tCPU 2\n fork\t\t\t\t\thugetlbfs_fallocate\n  dup_mmap\t\t\t\t hugetlbfs_punch_hole\n   i_mmap_lock_write(mapping);\n   vma_interval_tree_insert_after -- Child vma is visible through i_mmap tree.\n   i_mmap_unlock_write(mapping);\n   hugetlb_dup_vma_private -- Clear vma_lock outside i_mmap_rwsem!\n\t\t\t\t\t i_mmap_lock_write(mapping);\n   \t\t\t\t\t hugetlb_vmdelete_list\n\t\t\t\t\t  vma_interval_tree_foreach\n\t\t\t\t\t   hugetlb_vma_trylock_write -- Vma_lock is cleared.\n   tmp-\u003evm_ops-\u003eopen -- Alloc new vma_lock outside i_mmap_rwsem!\n\t\t\t\t\t   hugetlb_vma_unlock_write -- Vma_lock is assigned!!!\n\t\t\t\t\t i_mmap_unlock_write(mapping);\n\nhugetlb_dup_vma_private() and hugetlb_vm_op_open() are called outside\ni_mmap_rwsem lock while vma lock can be used in the same time.  Fix this\nby deferring linking file vma until vma is fully initialized.  Those vmas\nshould be initialized first before they can be used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27023",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: Fix missing release of 'active_io' for flush\n\nsubmit_flushes\n atomic_set(\u0026mddev-\u003eflush_pending, 1);\n rdev_for_each_rcu(rdev, mddev)\n  atomic_inc(\u0026mddev-\u003eflush_pending);\n  bi-\u003ebi_end_io = md_end_flush\n  submit_bio(bi);\n                        /* flush io is done first */\n                        md_end_flush\n                         if (atomic_dec_and_test(\u0026mddev-\u003eflush_pending))\n                          percpu_ref_put(\u0026mddev-\u003eactive_io)\n                          -\u003e active_io is not released\n\n if (atomic_dec_and_test(\u0026mddev-\u003eflush_pending))\n  -\u003e missing release of active_io\n\nFor consequence, mddev_suspend() will wait for 'active_io' to be zero\nforever.\n\nFix this problem by releasing 'active_io' in submit_flushes() if\n'flush_pending' is decreased to zero.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27025",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: null check for nla_nest_start\n\nnla_nest_start() may fail and return NULL. Insert a check and set errno\nbased on other call sites within the same source code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27027",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix dpll_xa_ref_*_del() for multiple registrations\n\nCurrently, if there are multiple registrations of the same pin on the\nsame dpll device, following warnings are observed:\nWARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:143 dpll_xa_ref_pin_del.isra.0+0x21e/0x230\nWARNING: CPU: 5 PID: 2212 at drivers/dpll/dpll_core.c:223 __dpll_pin_unregister+0x2b3/0x2c0\n\nThe problem is, that in both dpll_xa_ref_dpll_del() and\ndpll_xa_ref_pin_del() registration is only removed from list in case the\nreference count drops to zero. That is wrong, the registration has to\nbe removed always.\n\nTo fix this, remove the registration from the list and free\nit unconditionally, instead of doing it only when the ref reference\ncounter reaches zero.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27028",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-mt65xx: Fix NULL pointer access in interrupt handler\n\nThe TX buffer in spi_transfer can be a NULL pointer, so the interrupt\nhandler may end up writing to the invalid memory and cause crashes.\n\nAdd a check to trans-\u003etx_buf before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27029",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix mmhub client id out-of-bounds access\n\nProperly handle cid 0x140.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27030",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-af: Use separate handlers for interrupts\n\nFor PF to AF interrupt vector and VF to AF vector same\ninterrupt handler is registered which is causing race condition.\nWhen two interrupts are raised to two CPUs at same time\nthen two cores serve same event corrupting the data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27031",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix nfs_netfs_issue_read() xarray locking for writeback interrupt\n\nThe loop inside nfs_netfs_issue_read() currently does not disable\ninterrupts while iterating through pages in the xarray to submit\nfor NFS read.  This is not safe though since after taking xa_lock,\nanother page in the mapping could be processed for writeback inside\nan interrupt, and deadlock can occur.  The fix is simple and clean\nif we use xa_for_each_range(), which handles the iteration with RCU\nwhile reducing code complexity.\n\nThe problem is easily reproduced with the following test:\n mount -o vers=3,fsc 127.0.0.1:/export /mnt/nfs\n dd if=/dev/zero of=/mnt/nfs/file1.bin bs=4096 count=1\n echo 3 \u003e /proc/sys/vm/drop_caches\n dd if=/mnt/nfs/file1.bin of=/dev/null\n umount /mnt/nfs\n\nOn the console with a lockdep-enabled kernel a message similar to\nthe following will be seen:\n\n ================================\n WARNING: inconsistent lock state\n 6.7.0-lockdbg+ #10 Not tainted\n --------------------------------\n inconsistent {IN-SOFTIRQ-W} -\u003e {SOFTIRQ-ON-W} usage.\n test5/1708 [HC0[0]:SC0[0]:HE1:SE1] takes:\n ffff888127baa598 (\u0026xa-\u003exa_lock#4){+.?.}-{3:3}, at:\nnfs_netfs_issue_read+0x1b2/0x4b0 [nfs]\n {IN-SOFTIRQ-W} state was registered at:\n   lock_acquire+0x144/0x380\n   _raw_spin_lock_irqsave+0x4e/0xa0\n   __folio_end_writeback+0x17e/0x5c0\n   folio_end_writeback+0x93/0x1b0\n   iomap_finish_ioend+0xeb/0x6a0\n   blk_update_request+0x204/0x7f0\n   blk_mq_end_request+0x30/0x1c0\n   blk_complete_reqs+0x7e/0xa0\n   __do_softirq+0x113/0x544\n   __irq_exit_rcu+0xfe/0x120\n   irq_exit_rcu+0xe/0x20\n   sysvec_call_function_single+0x6f/0x90\n   asm_sysvec_call_function_single+0x1a/0x20\n   pv_native_safe_halt+0xf/0x20\n   default_idle+0x9/0x20\n   default_idle_call+0x67/0xa0\n   do_idle+0x2b5/0x300\n   cpu_startup_entry+0x34/0x40\n   start_secondary+0x19d/0x1c0\n   secondary_startup_64_no_verify+0x18f/0x19b\n irq event stamp: 176891\n hardirqs last  enabled at (176891): [\u003cffffffffa67a0be4\u003e]\n_raw_spin_unlock_irqrestore+0x44/0x60\n hardirqs last disabled at (176890): [\u003cffffffffa67a0899\u003e]\n_raw_spin_lock_irqsave+0x79/0xa0\n softirqs last  enabled at (176646): [\u003cffffffffa515d91e\u003e]\n__irq_exit_rcu+0xfe/0x120\n softirqs last disabled at (176633): [\u003cffffffffa515d91e\u003e]\n__irq_exit_rcu+0xfe/0x120\n\n other info that might help us debug this:\n  Possible unsafe locking scenario:\n\n        CPU0\n        ----\n   lock(\u0026xa-\u003exa_lock#4);\n   \u003cInterrupt\u003e\n     lock(\u0026xa-\u003exa_lock#4);\n\n  *** DEADLOCK ***\n\n 2 locks held by test5/1708:\n  #0: ffff888127baa498 (\u0026sb-\u003es_type-\u003ei_mutex_key#22){++++}-{4:4}, at:\n      nfs_start_io_read+0x28/0x90 [nfs]\n  #1: ffff888127baa650 (mapping.invalidate_lock#3){.+.+}-{4:4}, at:\n      page_cache_ra_unbounded+0xa4/0x280\n\n stack backtrace:\n CPU: 6 PID: 1708 Comm: test5 Kdump: loaded Not tainted 6.7.0-lockdbg+\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39\n04/01/2014\n Call Trace:\n  dump_stack_lvl+0x5b/0x90\n  mark_lock+0xb3f/0xd20\n  __lock_acquire+0x77b/0x3360\n  _raw_spin_lock+0x34/0x80\n  nfs_netfs_issue_read+0x1b2/0x4b0 [nfs]\n  netfs_begin_read+0x77f/0x980 [netfs]\n  nfs_netfs_readahead+0x45/0x60 [nfs]\n  nfs_readahead+0x323/0x5a0 [nfs]\n  read_pages+0xf3/0x5c0\n  page_cache_ra_unbounded+0x1c8/0x280\n  filemap_get_pages+0x38c/0xae0\n  filemap_read+0x206/0x5e0\n  nfs_file_read+0xb7/0x140 [nfs]\n  vfs_read+0x2a9/0x460\n  ksys_read+0xb7/0x140",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27036",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix writeback data corruption\n\ncifs writeback doesn't correctly handle the case where\ncifs_extend_writeback() hits a point where it is considering an additional\nfolio, but this would overrun the wsize - at which point it drops out of\nthe xarray scanning loop and calls xas_pause().  The problem is that\nxas_pause() advances the loop counter - thereby skipping that page.\n\nWhat needs to happen is for xas_reset() to be called any time we decide we\ndon't want to process the page we're looking at, but rather send the\nrequest we are building and start a new one.\n\nFix this by copying and adapting the netfslib writepages code as a\ntemporary measure, with cifs writeback intending to be offloaded to\nnetfslib in the near future.\n\nThis also fixes the issue with the use of filemap_get_folios_tag() causing\nretry of a bunch of pages which the extender already dealt with.\n\nThis can be tested by creating, say, a 64K file somewhere not on cifs\n(otherwise copy-offload may get underfoot), mounting a cifs share with a\nwsize of 64000, copying the file to it and then comparing the original file\nand the copy:\n\n        dd if=/dev/urandom of=/tmp/64K bs=64k count=1\n        mount //192.168.6.1/test /mnt -o user=...,pass=...,wsize=64000\n        cp /tmp/64K /mnt/64K\n        cmp /tmp/64K /mnt/64K\n\nWithout the fix, the cmp fails at position 64000 (or shortly thereafter).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27037",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: zynq: Prevent null pointer dereference caused by kmalloc failure\n\nThe kmalloc() in zynq_clk_setup() will return null if the\nphysical memory has run out. As a result, if we use snprintf()\nto write data to the null address, the null pointer dereference\nbug will happen.\n\nThis patch uses a stack variable to replace the kmalloc().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27038",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Fix clk_core_get NULL dereference\n\nIt is possible for clk_core_get to dereference a NULL in the following\nsequence:\n\nclk_core_get()\n    of_clk_get_hw_from_clkspec()\n        __of_clk_get_hw_from_provider()\n            __clk_get_hw()\n\n__clk_get_hw() can return NULL which is dereferenced by clk_core_get() at\nhw-\u003ecore.\n\nPrior to commit dde4eff47c82 (\"clk: Look for parents with clkdev based\nclk_lookups\") the check IS_ERR_OR_NULL() was performed which would have\ncaught the NULL.\n\nReading the description of this function it talks about returning NULL but\nthat cannot be so at the moment.\n\nUpdate the function to check for hw before dereferencing it and return NULL\nif hw is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27039",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: hisilicon: hi3559a: Fix an erroneous devm_kfree()\n\n'p_clk' is an array allocated just before the for loop for all clk that\nneed to be registered.\nIt is incremented at each loop iteration.\n\nIf a clk_register() call fails, 'p_clk' may point to something different\nfrom what should be freed.\n\nThe best we can do, is to avoid this wrong release of memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27040",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add 'replay' NULL check in 'edp_set_replay_allow_active()'\n\nIn the first if statement, we're checking if 'replay' is NULL. But in\nthe second if statement, we're not checking if 'replay' is NULL again\nbefore calling replay-\u003efuncs-\u003ereplay_set_power_opt().\n\nif (replay == NULL \u0026\u0026 force_static)\n    return false;\n\n...\n\nif (link-\u003ereplay_settings.replay_feature_enabled \u0026\u0026\n    replay-\u003efuncs-\u003ereplay_set_power_opt) {\n\treplay-\u003efuncs-\u003ereplay_set_power_opt(replay, *power_opts, panel_inst);\n\tlink-\u003ereplay_settings.replay_power_opt_active = *power_opts;\n}\n\nIf 'replay' is NULL, this will cause a null pointer dereference.\n\nFixes the below found by smatch:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/link/protocols/link_edp_panel_control.c:895 edp_set_replay_allow_active() error: we previously assumed 'replay' could be null (see line 887)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27041",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: fix NULL checks for adev-\u003edm.dc in amdgpu_dm_fini()\n\nSince 'adev-\u003edm.dc' in amdgpu_dm_fini() might turn out to be NULL\nbefore the call to dc_enable_dmub_notifications(), check\nbeforehand to ensure there will not be a possible NULL-ptr-deref\nthere.\n\nAlso, since commit 1e88eb1b2c25 (\"drm/amd/display: Drop\nCONFIG_DRM_AMD_DC_HDCP\") there are two separate checks for NULL in\n'adev-\u003edm.dc' before dc_deinit_callbacks() and dc_dmub_srv_destroy().\nClean up by combining them all under one 'if'.\n\nFound by Linux Verification Center (linuxtesting.org) with static\nanalysis tool SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27042",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix potential out-of-bounds access in 'amdgpu_discovery_reg_base_init()'\n\nThe issue arises when the array 'adev-\u003evcn.vcn_config' is accessed\nbefore checking if the index 'adev-\u003evcn.num_vcn_inst' is within the\nbounds of the array.\n\nThe fix involves moving the bounds check before the array access. This\nensures that 'adev-\u003evcn.num_vcn_inst' is within the bounds of the array\nbefore it is used as an index.\n\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c:1289 amdgpu_discovery_reg_base_init() error: testing array offset 'adev-\u003evcn.num_vcn_inst' after use.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: edia: dvbdev: fix a use-after-free\n\nIn dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed\nin several error-handling paths. However, *pdvbdev is not set to NULL\nafter dvbdev's deallocation, causing use-after-frees in many places,\nfor example, in the following call chain:\n\nbudget_register\n  |-\u003e dvb_dmxdev_init\n        |-\u003e dvb_register_device\n  |-\u003e dvb_dmxdev_release\n        |-\u003e dvb_unregister_device\n              |-\u003e dvb_remove_device\n                    |-\u003e dvb_device_put\n                          |-\u003e kref_put\n\nWhen calling dvb_unregister_device, dmxdev-\u003edvbdev (i.e. *pdvbdev in\ndvb_register_device) could point to memory that had been freed in\ndvb_register_device. Thereafter, this pointer is transferred to\nkref_put and triggering a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27044",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix potential NULL pointer dereferences in 'dcn10_set_output_transfer_func()'\n\nThe 'stream' pointer is used in dcn10_set_output_transfer_func() before\nthe check if 'stream' is NULL.\n\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn10/dcn10_hwseq.c:1892 dcn10_set_output_transfer_func() warn: variable dereferenced before check 'stream' (see line 1875)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix a potential buffer overflow in 'dp_dsc_clock_en_read()'\n\nTell snprintf() to store at most 10 bytes in the output buffer\ninstead of 30.\n\nFixes the below:\ndrivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_debugfs.c:1508 dp_dsc_clock_en_read() error: snprintf() is printing too much 30 vs 10",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27046",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfp: flower: handle acti_netdevs allocation failure\n\nThe kmalloc_array() in nfp_fl_lag_do_work() will return null, if\nthe physical memory has run out. As a result, if we dereference\nthe acti_netdevs, the null pointer dereference bugs will happen.\n\nThis patch adds a check to judge whether allocation failure occurs.\nIf it happens, the delayed work will be rescheduled and try again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27047",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: fix phy_get_internal_delay accessing an empty array\n\nThe phy_get_internal_delay function could try to access to an empty\narray in the case that the driver is calling phy_get_internal_delay\nwithout defining delay_values and rx-internal-delay-ps or\ntx-internal-delay-ps is defined to 0 in the device-tree.\nThis will lead to \"unable to handle kernel NULL pointer dereference at\nvirtual address 0\". To avoid this kernel oops, the test should be delay\n\u003e= 0. As there is already delay \u003c 0 test just before, the test could\nonly be size == 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27048",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcm80211: handle pmk_op allocation failure\n\nThe kzalloc() in brcmf_pmksa_v3_op() will return null if the\nphysical memory has run out. As a result, if we dereference\nthe null value, the null pointer dereference bug will happen.\n\nReturn -ENOMEM from brcmf_pmksa_v3_op() if kzalloc() fails\nfor pmk_op.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27051",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: brcmstb-avs-cpufreq: add check for cpufreq_cpu_get's return value\n\ncpufreq_cpu_get may return NULL. To avoid NULL-dereference check it\nand return 0 in case of error.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27052",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtl8xxxu: add cancel_work_sync() for c2hcmd_work\n\nThe workqueue might still be running, when the driver is stopped. To\navoid a use-after-free, call cancel_work_sync() in rtl8xxxu_stop().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: fix RCU usage in connect path\n\nWith lockdep enabled, calls to the connect function from cfg802.11 layer\nlead to the following warning:\n\n=============================\nWARNING: suspicious RCU usage\n6.7.0-rc1-wt+ #333 Not tainted\n-----------------------------\ndrivers/net/wireless/microchip/wilc1000/hif.c:386\nsuspicious rcu_dereference_check() usage!\n[...]\nstack backtrace:\nCPU: 0 PID: 100 Comm: wpa_supplicant Not tainted 6.7.0-rc1-wt+ #333\nHardware name: Atmel SAMA5\n unwind_backtrace from show_stack+0x18/0x1c\n show_stack from dump_stack_lvl+0x34/0x48\n dump_stack_lvl from wilc_parse_join_bss_param+0x7dc/0x7f4\n wilc_parse_join_bss_param from connect+0x2c4/0x648\n connect from cfg80211_connect+0x30c/0xb74\n cfg80211_connect from nl80211_connect+0x860/0xa94\n nl80211_connect from genl_rcv_msg+0x3fc/0x59c\n genl_rcv_msg from netlink_rcv_skb+0xd0/0x1f8\n netlink_rcv_skb from genl_rcv+0x2c/0x3c\n genl_rcv from netlink_unicast+0x3b0/0x550\n netlink_unicast from netlink_sendmsg+0x368/0x688\n netlink_sendmsg from ____sys_sendmsg+0x190/0x430\n ____sys_sendmsg from ___sys_sendmsg+0x110/0x158\n ___sys_sendmsg from sys_sendmsg+0xe8/0x150\n sys_sendmsg from ret_fast_syscall+0x0/0x1c\n\nThis warning is emitted because in the connect path, when trying to parse\ntarget BSS parameters, we dereference a RCU pointer whithout being in RCU\ncritical section.\nFix RCU dereference usage by moving it to a RCU read critical section. To\navoid wrapping the whole wilc_parse_join_bss_param under the critical\nsection, just use the critical section to copy ies data",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27054",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: fix double module refcount decrement\n\nOnce the discipline is associated with the device, deleting the device\ntakes care of decrementing the module's refcount.  Doing it manually on\nthis error path causes refcount to artificially decrease on each error\nwhile it should just stay the same.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27056",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: ensure offloading TID queue exists\n\nThe resume code path assumes that the TX queue for the offloading TID\nhas been configured. At resume time it then tries to sync the write\npointer as it may have been updated by the firmware.\n\nIn the unusual event that no packets have been send on TID 0, the queue\nwill not have been allocated and this causes a crash. Fix this by\nensuring the queue exist at suspend time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27057",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: ipc4-pcm: Workaround for crashed firmware on system suspend\n\nWhen the system is suspended while audio is active, the\nsof_ipc4_pcm_hw_free() is invoked to reset the pipelines since during\nsuspend the DSP is turned off, streams will be re-started after resume.\n\nIf the firmware crashes during while audio is running (or when we reset\nthe stream before suspend) then the sof_ipc4_set_multi_pipeline_state()\nwill fail with IPC error and the state change is interrupted.\nThis will cause misalignment between the kernel and firmware state on next\nDSP boot resulting errors returned by firmware for IPC messages, eventually\nfailing the audio resume.\nOn stream close the errors are ignored so the kernel state will be\ncorrected on the next DSP boot, so the second boot after the DSP panic.\n\nIf sof_ipc4_trigger_pipelines() is called from sof_ipc4_pcm_hw_free() then\nstate parameter is SOF_IPC4_PIPE_RESET and only in this case.\n\nTreat a forced pipeline reset similarly to how we treat a pcm_free by\nignoring error on state sending to allow the kernel's state to be\nconsistent with the state the firmware will have after the next boot.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: usb-storage: Prevent divide-by-0 error in isd200_ata_command\n\nThe isd200 sub-driver in usb-storage uses the HEADS and SECTORS values\nin the ATA ID information to calculate cylinder and head values when\ncreating a CDB for READ or WRITE commands.  The calculation involves\ndivision and modulus operations, which will cause a crash if either of\nthese values is 0.  While this never happens with a genuine device, it\ncould happen with a flawed or subversive emulation, as reported by the\nsyzbot fuzzer.\n\nProtect against this possibility by refusing to bind to the device if\neither the ATA_ID_HEADS or ATA_ID_SECTORS value in the device's ID\ninformation is 0.  This requires isd200_Initialization() to return a\nnegative error code when initialization fails; currently it always\nreturns 0 (even when there is an error).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Fix NULL pointer dereference in tb_port_update_credits()\n\nOlliver reported that his system crashes when plugging in Thunderbolt 1\ndevice:\n\n BUG: kernel NULL pointer dereference, address: 0000000000000020\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP NOPTI\n RIP: 0010:tb_port_do_update_credits+0x1b/0x130 [thunderbolt]\n Call Trace:\n  \u003cTASK\u003e\n  ? __die+0x23/0x70\n  ? page_fault_oops+0x171/0x4e0\n  ? exc_page_fault+0x7f/0x180\n  ? asm_exc_page_fault+0x26/0x30\n  ? tb_port_do_update_credits+0x1b/0x130\n  ? tb_switch_update_link_attributes+0x83/0xd0\n  tb_switch_add+0x7a2/0xfe0\n  tb_scan_port+0x236/0x6f0\n  tb_handle_hotplug+0x6db/0x900\n  process_one_work+0x171/0x340\n  worker_thread+0x27b/0x3a0\n  ? __pfx_worker_thread+0x10/0x10\n  kthread+0xe5/0x120\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x31/0x50\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork_asm+0x1b/0x30\n  \u003c/TASK\u003e\n\nThis is due the fact that some Thunderbolt 1 devices only have one lane\nadapter. Fix this by checking for the lane 1 before we read its credits.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau: lock the client object tree.\n\nIt appears the client object tree has no locking unless I've missed\nsomething else. Fix races around adding/removing client objects,\nmostly vram bar mappings.\n\n 4562.099306] general protection fault, probably for non-canonical address 0x6677ed422bceb80c: 0000 [#1] PREEMPT SMP PTI\n[ 4562.099314] CPU: 2 PID: 23171 Comm: deqp-vk Not tainted 6.8.0-rc6+ #27\n[ 4562.099324] Hardware name: Gigabyte Technology Co., Ltd. Z390 I AORUS PRO WIFI/Z390 I AORUS PRO WIFI-CF, BIOS F8 11/05/2021\n[ 4562.099330] RIP: 0010:nvkm_object_search+0x1d/0x70 [nouveau]\n[ 4562.099503] Code: 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 48 89 f8 48 85 f6 74 39 48 8b 87 a0 00 00 00 48 85 c0 74 12 \u003c48\u003e 8b 48 f8 48 39 ce 73 15 48 8b 40 10 48 85 c0 75 ee 48 c7 c0 fe\n[ 4562.099506] RSP: 0000:ffffa94cc420bbf8 EFLAGS: 00010206\n[ 4562.099512] RAX: 6677ed422bceb814 RBX: ffff98108791f400 RCX: ffff9810f26b8f58\n[ 4562.099517] RDX: 0000000000000000 RSI: ffff9810f26b9158 RDI: ffff98108791f400\n[ 4562.099519] RBP: ffff9810f26b9158 R08: 0000000000000000 R09: 0000000000000000\n[ 4562.099521] R10: ffffa94cc420bc48 R11: 0000000000000001 R12: ffff9810f02a7cc0\n[ 4562.099526] R13: 0000000000000000 R14: 00000000000000ff R15: 0000000000000007\n[ 4562.099528] FS:  00007f629c5017c0(0000) GS:ffff98142c700000(0000) knlGS:0000000000000000\n[ 4562.099534] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 4562.099536] CR2: 00007f629a882000 CR3: 000000017019e004 CR4: 00000000003706f0\n[ 4562.099541] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 4562.099542] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 4562.099544] Call Trace:\n[ 4562.099555]  \u003cTASK\u003e\n[ 4562.099573]  ? die_addr+0x36/0x90\n[ 4562.099583]  ? exc_general_protection+0x246/0x4a0\n[ 4562.099593]  ? asm_exc_general_protection+0x26/0x30\n[ 4562.099600]  ? nvkm_object_search+0x1d/0x70 [nouveau]\n[ 4562.099730]  nvkm_ioctl+0xa1/0x250 [nouveau]\n[ 4562.099861]  nvif_object_map_handle+0xc8/0x180 [nouveau]\n[ 4562.099986]  nouveau_ttm_io_mem_reserve+0x122/0x270 [nouveau]\n[ 4562.100156]  ? dma_resv_test_signaled+0x26/0xb0\n[ 4562.100163]  ttm_bo_vm_fault_reserved+0x97/0x3c0 [ttm]\n[ 4562.100182]  ? __mutex_unlock_slowpath+0x2a/0x270\n[ 4562.100189]  nouveau_ttm_fault+0x69/0xb0 [nouveau]\n[ 4562.100356]  __do_fault+0x32/0x150\n[ 4562.100362]  do_fault+0x7c/0x560\n[ 4562.100369]  __handle_mm_fault+0x800/0xc10\n[ 4562.100382]  handle_mm_fault+0x17c/0x3e0\n[ 4562.100388]  do_user_addr_fault+0x208/0x860\n[ 4562.100395]  exc_page_fault+0x7f/0x200\n[ 4562.100402]  asm_exc_page_fault+0x26/0x30\n[ 4562.100412] RIP: 0033:0x9b9870\n[ 4562.100419] Code: 85 a8 f7 ff ff 8b 8d 80 f7 ff ff 89 08 e9 18 f2 ff ff 0f 1f 84 00 00 00 00 00 44 89 32 e9 90 fa ff ff 0f 1f 84 00 00 00 00 00 \u003c44\u003e 89 32 e9 f8 f1 ff ff 0f 1f 84 00 00 00 00 00 66 44 89 32 e9 e7\n[ 4562.100422] RSP: 002b:00007fff9ba2dc70 EFLAGS: 00010246\n[ 4562.100426] RAX: 0000000000000004 RBX: 000000000dd65e10 RCX: 000000fff0000000\n[ 4562.100428] RDX: 00007f629a882000 RSI: 00007f629a882000 RDI: 0000000000000066\n[ 4562.100432] RBP: 00007fff9ba2e570 R08: 0000000000000000 R09: 0000000123ddf000\n[ 4562.100434] R10: 0000000000000001 R11: 0000000000000246 R12: 000000007fffffff\n[ 4562.100436] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n[ 4562.100446]  \u003c/TASK\u003e\n[ 4562.100448] Modules linked in: nf_conntrack_netbios_ns nf_conntrack_broadcast nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables libcrc32c nfnetlink cmac bnep sunrpc iwlmvm intel_rapl_msr intel_rapl_common snd_sof_pci_intel_cnl x86_pkg_temp_thermal intel_powerclamp snd_sof_intel_hda_common mac80211 coretemp snd_soc_acpi_intel_match kvm_intel snd_soc_acpi snd_soc_hdac_hda snd_sof_pci snd_sof_xtensa_dsp snd_sof_intel_hda_mlink \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27064",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix a memory leak in nf_tables_updchain\n\nIf nft_netdev_register_hooks() fails, the memory associated with\nnft_stats is not freed, causing a memory leak.\n\nThis patch fixes it by moving nft_stats_alloc() down after\nnft_netdev_register_hooks() succeeds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27065",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: do not compare internal table flags on updates\n\nRestore skipping transaction if table update does not modify flags.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27067",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/evtchn: avoid WARN() when unbinding an event channel\n\nWhen unbinding a user event channel, the related handler might be\ncalled a last time in case the kernel was built with\nCONFIG_DEBUG_SHIRQ. This might cause a WARN() in the handler.\n\nAvoid that by adding an \"unbinding\" flag to struct user_event which\nwill short circuit the handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal/drivers/mediatek/lvts_thermal: Fix a memory leak in an error handling path\n\nIf devm_krealloc() fails, then 'efuse' is leaking.\nSo free it to avoid a leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27071",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbacklight: hx8357: Fix potential NULL pointer dereference\n\nThe \"im\" pins are optional. Add missing check in the hx8357_probe().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: usbtv: Remove useless locks in usbtv_video_free()\n\nRemove locks calls in usbtv_video_free() because\nare useless and may led to a deadlock as reported here:\nhttps://syzkaller.appspot.com/x/bisect.txt?x=166dc872180000\nAlso remove usbtv_stop() call since it will be called when\nunregistering the device.\n\nBefore 'c838530d230b' this issue would only be noticed if you\ndisconnect while streaming and now it is noticeable even when\ndisconnecting while not streaming.\n\n\n[hverkuil: fix minor spelling mistake in log message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ttpci: fix two memleaks in budget_av_attach\n\nWhen saa7146_register_device and saa7146_vv_init fails, budget_av_attach\nshould free the resources it allocates, like the error-handling of\nttpci_budget_init does. Besides, there are two fixme comment refers to\nsuch deallocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27074",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: go7007: fix a memleak in go7007_load_encoder\n\nIn go7007_load_encoder, bounce(i.e. go-\u003eboot_fw), is allocated without\na deallocation thereafter. After the following call chain:\n\nsaa7134_go7007_init\n  |-\u003e go7007_boot_encoder\n        |-\u003e go7007_load_encoder\n  |-\u003e kfree(go)\n\ngo is freed and thus bounce is leaked.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27075",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvb-frontends: avoid stack overflow warnings with clang\n\nA previous patch worked around a KASAN issue in stv0367, now a similar\nproblem showed up with clang:\n\ndrivers/media/dvb-frontends/stv0367.c:1222:12: error: stack frame size (3624) exceeds limit (2048) in 'stv0367ter_set_frontend' [-Werror,-Wframe-larger-than]\n 1214 | static int stv0367ter_set_frontend(struct dvb_frontend *fe)\n\nRework the stv0367_writereg() function to be simpler and mark both\nregister access functions as noinline_for_stack so the temporary\ni2c_msg structures do not get duplicated on the stack when KASAN_STACK\nis enabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27076",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx: csc/scaler: fix v4l2_ctrl_handler memory leak\n\nFree the memory allocated in v4l2_ctrl_handler_init on release.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-mem2mem: fix a memleak in v4l2_m2m_register_entity\n\nThe entity-\u003ename (i.e. name) is allocated in v4l2_m2m_register_entity\nbut isn't freed in its following error-handling paths. This patch\nadds such deallocation to prevent memleak of entity-\u003ename.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-tpg: fix some memleaks in tpg_alloc\n\nIn tpg_alloc, resources should be deallocated in each and every\nerror-handling paths, since they are allocated in for statements.\nOtherwise there would be memleaks because tpg_free is called only when\ntpg_alloc return 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27080",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix race when detecting delalloc ranges during fiemap\n\nFor fiemap we recently stopped locking the target extent range for the\nwhole duration of the fiemap call, in order to avoid a deadlock in a\nscenario where the fiemap buffer happens to be a memory mapped range of\nthe same file. This use case is very unlikely to be useful in practice but\nit may be triggered by fuzz testing (syzbot, etc).\n\nThis however introduced a race that makes us miss delalloc ranges for\nfile regions that are currently holes, so the caller of fiemap will not\nbe aware that there's data for some file regions. This can be quite\nserious for some use cases - for example in coreutils versions before 9.0,\nthe cp program used fiemap to detect holes and data in the source file,\ncopying only regions with data (extents or delalloc) from the source file\nto the destination file in order to preserve holes (see the documentation\nfor its --sparse command line option). This means that if cp was used\nwith a source file that had delalloc in a hole, the destination file could\nend up without that data, which is effectively a data loss issue, if it\nhappened to hit the race described below.\n\nThe race happens like this:\n\n1) Fiemap is called, without the FIEMAP_FLAG_SYNC flag, for a file that\n   has delalloc in the file range [64M, 65M[, which is currently a hole;\n\n2) Fiemap locks the inode in shared mode, then starts iterating the\n   inode's subvolume tree searching for file extent items, without having\n   the whole fiemap target range locked in the inode's io tree - the\n   change introduced recently by commit b0ad381fa769 (\"btrfs: fix\n   deadlock with fiemap and extent locking\"). It only locks ranges in\n   the io tree when it finds a hole or prealloc extent since that\n   commit;\n\n3) Note that fiemap clones each leaf before using it, and this is to\n   avoid deadlocks when locking a file range in the inode's io tree and\n   the fiemap buffer is memory mapped to some file, because writing\n   to the page with btrfs_page_mkwrite() will wait on any ordered extent\n   for the page's range and the ordered extent needs to lock the range\n   and may need to modify the same leaf, therefore leading to a deadlock\n   on the leaf;\n\n4) While iterating the file extent items in the cloned leaf before\n   finding the hole in the range [64M, 65M[, the delalloc in that range\n   is flushed and its ordered extent completes - meaning the corresponding\n   file extent item is in the inode's subvolume tree, but not present in\n   the cloned leaf that fiemap is iterating over;\n\n5) When fiemap finds the hole in the [64M, 65M[ range by seeing the gap in\n   the cloned leaf (or a file extent item with disk_bytenr == 0 in case\n   the NO_HOLES feature is not enabled), it will lock that file range in\n   the inode's io tree and then search for delalloc by checking for the\n   EXTENT_DELALLOC bit in the io tree for that range and ordered extents\n   (with btrfs_find_delalloc_in_range()). But it finds nothing since the\n   delalloc in that range was already flushed and the ordered extent\n   completed and is gone - as a result fiemap will not report that there's\n   delalloc or an extent for the range [64M, 65M[, so user space will be\n   mislead into thinking that there's a hole in that range.\n\nThis could actually be sporadically triggered with test case generic/094\nfrom fstests, which reports a missing extent/delalloc range like this:\n\n  generic/094 2s ... - output mismatch (see /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad)\n      --- tests/generic/094.out\t2020-06-10 19:29:03.830519425 +0100\n      +++ /home/fdmanana/git/hub/xfstests/results//generic/094.out.bad\t2024-02-28 11:00:00.381071525 +0000\n      @@ -1,3 +1,9 @@\n       QA output created by 094\n       fiemap run with sync\n       fiemap run without sync\n      +ERROR: couldn't find extent at 7\n      +map is 'HHDDHPPDPHPH'\n      +logical: [       5..       6] phys:\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27388",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: fix some memleaks in gssx_dec_option_array\n\nThe creds and oa-\u003edata need to be freed in the error-handling paths after\ntheir allocation. So this patch add these deallocations in the\ncorresponding paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27389",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npstore: inode: Only d_invalidate() is needed\n\nUnloading a modular pstore backend with records in pstorefs would\ntrigger the dput() double-drop warning:\n\n  WARNING: CPU: 0 PID: 2569 at fs/dcache.c:762 dput.part.0+0x3f3/0x410\n\nUsing the combo of d_drop()/dput() (as mentioned in\nDocumentation/filesystems/vfs.rst) isn't the right approach here, and\nleads to the reference counting problem seen above. Use d_invalidate()\nand update the code to not bother checking for error codes that can\nnever happen.\n\n---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27391",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: do not realloc workqueue everytime an interface is added\n\nCommit 09ed8bfc5215 (\"wilc1000: Rename workqueue from \"WILC_wq\" to\n\"NETDEV-wq\"\") moved workqueue creation in wilc_netdev_ifc_init in order to\nset the interface name in the workqueue name. However, while the driver\nneeds only one workqueue, the wilc_netdev_ifc_init is called each time we\nadd an interface over a phy, which in turns overwrite the workqueue with a\nnew one. This can be observed with the following commands:\n\nfor i in $(seq 0 10)\ndo\n  iw phy phy0 interface add wlan1 type managed\n  iw dev wlan1 del\ndone\nps -eo pid,comm|grep wlan\n\n 39 kworker/R-wlan0\n 98 kworker/R-wlan1\n102 kworker/R-wlan1\n105 kworker/R-wlan1\n108 kworker/R-wlan1\n111 kworker/R-wlan1\n114 kworker/R-wlan1\n117 kworker/R-wlan1\n120 kworker/R-wlan1\n123 kworker/R-wlan1\n126 kworker/R-wlan1\n129 kworker/R-wlan1\n\nFix this leakage by putting back hif_workqueue allocation in\nwilc_cfg80211_init. Regarding the workqueue name, it is indeed relevant to\nset it lowercase, however it is not  attached to a specific netdev, so\nenforcing netdev name in the name is not so relevant. Still, enrich the\nname with the wiphy name to make it clear which phy is using the workqueue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27393",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen-netfront: Add missing skb_mark_for_recycle\n\nNotice that skb_mark_for_recycle() is introduced later than fixes tag in\ncommit 6a5bcd84e886 (\"page_pool: Allow drivers to hint on SKB recycling\").\n\nIt is believed that fixes tag were missing a call to page_pool_release_page()\nbetween v5.9 to v5.14, after which is should have used skb_mark_for_recycle().\nSince v6.6 the call page_pool_release_page() were removed (in\ncommit 535b9c61bdef (\"net: page_pool: hide page_pool_release_page()\")\nand remaining callers converted (in commit 6bfef2ec0172 (\"Merge branch\n'net-page_pool-remove-page_pool_release_page'\")).\n\nThis leak became visible in v6.8 via commit dba1b8a7ab68 (\"mm/page_pool: catch\npage_pool memory leaks\").",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27395",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: Fix Use-After-Free in ovs_ct_exit\n\nSince kfree_rcu, which is called in the hlist_for_each_entry_rcu traversal\nof ovs_ct_limit_exit, is not part of the RCU read critical section, it\nis possible that the RCU grace period will pass during the traversal and\nthe key will be free.\n\nTo prevent this, it should be changed to hlist_for_each_entry_safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27396",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: gtp: Fix Use-After-Free in gtp_dellink\n\nSince call_rcu, which is called in the hlist_for_each_entry_rcu traversal\nof gtp_dellink, is not part of the RCU read critical section, it\nis possible that the RCU grace period will pass during the traversal and\nthe key will be free.\n\nTo prevent this, it should be changed to hlist_for_each_entry_safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27398",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix use-after-free bugs caused by sco_sock_timeout\n\nWhen the sco connection is established and then, the sco socket\nis releasing, timeout_work will be scheduled to judge whether\nthe sco disconnection is timeout. The sock will be deallocated\nlater, but it is dereferenced again in sco_sock_timeout. As a\nresult, the use-after-free bugs will happen. The root cause is\nshown below:\n\n    Cleanup Thread               |      Worker Thread\nsco_sock_release                 |\n  sco_sock_close                 |\n    __sco_sock_close             |\n      sco_sock_set_timer         |\n        schedule_delayed_work    |\n  sco_sock_kill                  |    (wait a time)\n    sock_put(sk) //FREE          |  sco_sock_timeout\n                                 |    sock_hold(sk) //USE\n\nThe KASAN report triggered by POC is shown below:\n\n[   95.890016] ==================================================================\n[   95.890496] BUG: KASAN: slab-use-after-free in sco_sock_timeout+0x5e/0x1c0\n[   95.890755] Write of size 4 at addr ffff88800c388080 by task kworker/0:0/7\n...\n[   95.890755] Workqueue: events sco_sock_timeout\n[   95.890755] Call Trace:\n[   95.890755]  \u003cTASK\u003e\n[   95.890755]  dump_stack_lvl+0x45/0x110\n[   95.890755]  print_address_description+0x78/0x390\n[   95.890755]  print_report+0x11b/0x250\n[   95.890755]  ? __virt_addr_valid+0xbe/0xf0\n[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  kasan_report+0x139/0x170\n[   95.890755]  ? update_load_avg+0xe5/0x9f0\n[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  kasan_check_range+0x2c3/0x2e0\n[   95.890755]  sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  process_one_work+0x561/0xc50\n[   95.890755]  worker_thread+0xab2/0x13c0\n[   95.890755]  ? pr_cont_work+0x490/0x490\n[   95.890755]  kthread+0x279/0x300\n[   95.890755]  ? pr_cont_work+0x490/0x490\n[   95.890755]  ? kthread_blkcg+0xa0/0xa0\n[   95.890755]  ret_from_fork+0x34/0x60\n[   95.890755]  ? kthread_blkcg+0xa0/0xa0\n[   95.890755]  ret_from_fork_asm+0x11/0x20\n[   95.890755]  \u003c/TASK\u003e\n[   95.890755]\n[   95.890755] Allocated by task 506:\n[   95.890755]  kasan_save_track+0x3f/0x70\n[   95.890755]  __kasan_kmalloc+0x86/0x90\n[   95.890755]  __kmalloc+0x17f/0x360\n[   95.890755]  sk_prot_alloc+0xe1/0x1a0\n[   95.890755]  sk_alloc+0x31/0x4e0\n[   95.890755]  bt_sock_alloc+0x2b/0x2a0\n[   95.890755]  sco_sock_create+0xad/0x320\n[   95.890755]  bt_sock_create+0x145/0x320\n[   95.890755]  __sock_create+0x2e1/0x650\n[   95.890755]  __sys_socket+0xd0/0x280\n[   95.890755]  __x64_sys_socket+0x75/0x80\n[   95.890755]  do_syscall_64+0xc4/0x1b0\n[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   95.890755]\n[   95.890755] Freed by task 506:\n[   95.890755]  kasan_save_track+0x3f/0x70\n[   95.890755]  kasan_save_free_info+0x40/0x50\n[   95.890755]  poison_slab_object+0x118/0x180\n[   95.890755]  __kasan_slab_free+0x12/0x30\n[   95.890755]  kfree+0xb2/0x240\n[   95.890755]  __sk_destruct+0x317/0x410\n[   95.890755]  sco_sock_release+0x232/0x280\n[   95.890755]  sock_close+0xb2/0x210\n[   95.890755]  __fput+0x37f/0x770\n[   95.890755]  task_work_run+0x1ae/0x210\n[   95.890755]  get_signal+0xe17/0xf70\n[   95.890755]  arch_do_signal_or_restart+0x3f/0x520\n[   95.890755]  syscall_exit_to_user_mode+0x55/0x120\n[   95.890755]  do_syscall_64+0xd1/0x1b0\n[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   95.890755]\n[   95.890755] The buggy address belongs to the object at ffff88800c388000\n[   95.890755]  which belongs to the cache kmalloc-1k of size 1024\n[   95.890755] The buggy address is located 128 bytes inside of\n[   95.890755]  freed 1024-byte region [ffff88800c388000, ffff88800c388400)\n[   95.890755]\n[   95.890755] The buggy address belongs to the physical page:\n[   95.890755] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88800c38a800 pfn:0xc388\n[   95.890755] head: order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0\n[   95.890755] ano\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27399",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: l2cap: fix null-ptr-deref in l2cap_chan_timeout\n\nThere is a race condition between l2cap_chan_timeout() and\nl2cap_chan_del(). When we use l2cap_chan_del() to delete the\nchannel, the chan-\u003econn will be set to null. But the conn could\nbe dereferenced again in the mutex_lock() of l2cap_chan_timeout().\nAs a result the null pointer dereference bug will happen. The\nKASAN report triggered by POC is shown below:\n\n[  472.074580] ==================================================================\n[  472.075284] BUG: KASAN: null-ptr-deref in mutex_lock+0x68/0xc0\n[  472.075308] Write of size 8 at addr 0000000000000158 by task kworker/0:0/7\n[  472.075308]\n[  472.075308] CPU: 0 PID: 7 Comm: kworker/0:0 Not tainted 6.9.0-rc5-00356-g78c0094a146b #36\n[  472.075308] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu4\n[  472.075308] Workqueue: events l2cap_chan_timeout\n[  472.075308] Call Trace:\n[  472.075308]  \u003cTASK\u003e\n[  472.075308]  dump_stack_lvl+0x137/0x1a0\n[  472.075308]  print_report+0x101/0x250\n[  472.075308]  ? __virt_addr_valid+0x77/0x160\n[  472.075308]  ? mutex_lock+0x68/0xc0\n[  472.075308]  kasan_report+0x139/0x170\n[  472.075308]  ? mutex_lock+0x68/0xc0\n[  472.075308]  kasan_check_range+0x2c3/0x2e0\n[  472.075308]  mutex_lock+0x68/0xc0\n[  472.075308]  l2cap_chan_timeout+0x181/0x300\n[  472.075308]  process_one_work+0x5d2/0xe00\n[  472.075308]  worker_thread+0xe1d/0x1660\n[  472.075308]  ? pr_cont_work+0x5e0/0x5e0\n[  472.075308]  kthread+0x2b7/0x350\n[  472.075308]  ? pr_cont_work+0x5e0/0x5e0\n[  472.075308]  ? kthread_blkcg+0xd0/0xd0\n[  472.075308]  ret_from_fork+0x4d/0x80\n[  472.075308]  ? kthread_blkcg+0xd0/0xd0\n[  472.075308]  ret_from_fork_asm+0x11/0x20\n[  472.075308]  \u003c/TASK\u003e\n[  472.075308] ==================================================================\n[  472.094860] Disabling lock debugging due to kernel taint\n[  472.096136] BUG: kernel NULL pointer dereference, address: 0000000000000158\n[  472.096136] #PF: supervisor write access in kernel mode\n[  472.096136] #PF: error_code(0x0002) - not-present page\n[  472.096136] PGD 0 P4D 0\n[  472.096136] Oops: 0002 [#1] PREEMPT SMP KASAN NOPTI\n[  472.096136] CPU: 0 PID: 7 Comm: kworker/0:0 Tainted: G    B              6.9.0-rc5-00356-g78c0094a146b #36\n[  472.096136] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu4\n[  472.096136] Workqueue: events l2cap_chan_timeout\n[  472.096136] RIP: 0010:mutex_lock+0x88/0xc0\n[  472.096136] Code: be 08 00 00 00 e8 f8 23 1f fd 4c 89 f7 be 08 00 00 00 e8 eb 23 1f fd 42 80 3c 23 00 74 08 48 88\n[  472.096136] RSP: 0018:ffff88800744fc78 EFLAGS: 00000246\n[  472.096136] RAX: 0000000000000000 RBX: 1ffff11000e89f8f RCX: ffffffff8457c865\n[  472.096136] RDX: 0000000000000001 RSI: 0000000000000008 RDI: ffff88800744fc78\n[  472.096136] RBP: 0000000000000158 R08: ffff88800744fc7f R09: 1ffff11000e89f8f\n[  472.096136] R10: dffffc0000000000 R11: ffffed1000e89f90 R12: dffffc0000000000\n[  472.096136] R13: 0000000000000158 R14: ffff88800744fc78 R15: ffff888007405a00\n[  472.096136] FS:  0000000000000000(0000) GS:ffff88806d200000(0000) knlGS:0000000000000000\n[  472.096136] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  472.096136] CR2: 0000000000000158 CR3: 000000000da32000 CR4: 00000000000006f0\n[  472.096136] Call Trace:\n[  472.096136]  \u003cTASK\u003e\n[  472.096136]  ? __die_body+0x8d/0xe0\n[  472.096136]  ? page_fault_oops+0x6b8/0x9a0\n[  472.096136]  ? kernelmode_fixup_or_oops+0x20c/0x2a0\n[  472.096136]  ? do_user_addr_fault+0x1027/0x1340\n[  472.096136]  ? _printk+0x7a/0xa0\n[  472.096136]  ? mutex_lock+0x68/0xc0\n[  472.096136]  ? add_taint+0x42/0xd0\n[  472.096136]  ? exc_page_fault+0x6a/0x1b0\n[  472.096136]  ? asm_exc_page_fault+0x26/0x30\n[  472.096136]  ? mutex_lock+0x75/0xc0\n[  472.096136]  ? mutex_lock+0x88/0xc0\n[  472.096136]  ? mutex_lock+0x75/0xc0\n[  472.096136]  l2cap_chan_timeo\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27400",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: once more fix the call oder in amdgpu_ttm_move() v2\n\nThis reverts drm/amdgpu: fix ftrace event amdgpu_bo_move always move\non same heap. The basic problem here is that after the move the old\nlocation is simply not available any more.\n\nSome fixes were suggested, but essentially we should call the move\nnotification before actually moving things because only this way we have\nthe correct order for DMA-buf and VM move notifications as well.\n\nAlso rework the statistic handling so that we don't update the eviction\ncounter before the move.\n\nv2: add missing NULL check",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27401",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirewire: nosy: ensure user_length is taken into account when fetching packet contents\n\nEnsure that packet_buffer_get respects the user_length provided. If\nthe length of the head packet exceeds the user_length, packet_buffer_get\nwill now return 0 to signify to the user that no data were read\nand a larger buffer size is required. Helps prevent user space overflows.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27402",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphonet/pep: fix racy skb_queue_empty() use\n\nThe receive queues are protected by their respective spin-lock, not\nthe socket lock. This could lead to skb_peek() unexpectedly\nreturning NULL or a pointer to an already dequeued socket buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27404",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix data races on remote_id\n\nSimilar to the previous patch, address the data race on\nremote_id, adding the suitable ONCE annotations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27405",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: ncm: Avoid dropping datagrams of properly parsed NTBs\n\nIt is observed sometimes when tethering is used over NCM with Windows 11\nas host, at some instances, the gadget_giveback has one byte appended at\nthe end of a proper NTB. When the NTB is parsed, unwrap call looks for\nany leftover bytes in SKB provided by u_ether and if there are any pending\nbytes, it treats them as a separate NTB and parses it. But in case the\nsecond NTB (as per unwrap call) is faulty/corrupt, all the datagrams that\nwere parsed properly in the first NTB and saved in rx_list are dropped.\n\nAdding a few custom traces showed the following:\n[002] d..1  7828.532866: dwc3_gadget_giveback: ep1out:\nreq 000000003868811a length 1025/16384 zsI ==\u003e 0\n[002] d..1  7828.532867: ncm_unwrap_ntb: K: ncm_unwrap_ntb toprocess: 1025\n[002] d..1  7828.532867: ncm_unwrap_ntb: K: ncm_unwrap_ntb nth: 1751999342\n[002] d..1  7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb seq: 0xce67\n[002] d..1  7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb blk_len: 0x400\n[002] d..1  7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb ndp_len: 0x10\n[002] d..1  7828.532869: ncm_unwrap_ntb: K: Parsed NTB with 1 frames\n\nIn this case, the giveback is of 1025 bytes and block length is 1024.\nThe rest 1 byte (which is 0x00) won't be parsed resulting in drop of\nall datagrams in rx_list.\n\nSame is case with packets of size 2048:\n[002] d..1  7828.557948: dwc3_gadget_giveback: ep1out:\nreq 0000000011dfd96e length 2049/16384 zsI ==\u003e 0\n[002] d..1  7828.557949: ncm_unwrap_ntb: K: ncm_unwrap_ntb nth: 1751999342\n[002] d..1  7828.557950: ncm_unwrap_ntb: K: ncm_unwrap_ntb blk_len: 0x800\n\nLecroy shows one byte coming in extra confirming that the byte is coming\nin from PC:\n\n Transfer 2959 - Bytes Transferred(1025)  Timestamp((18.524 843 590)\n - Transaction 8391 - Data(1025 bytes) Timestamp(18.524 843 590)\n --- Packet 4063861\n       Data(1024 bytes)\n       Duration(2.117us) Idle(14.700ns) Timestamp(18.524 843 590)\n --- Packet 4063863\n       Data(1 byte)\n       Duration(66.160ns) Time(282.000ns) Timestamp(18.524 845 722)\n\nAccording to Windows driver, no ZLP is needed if wBlockLength is non-zero,\nbecause the non-zero wBlockLength has already told the function side the\nsize of transfer to be expected. However, there are in-market NCM devices\nthat rely on ZLP as long as the wBlockLength is multiple of wMaxPacketSize.\nTo deal with such devices, it pads an extra 0 at end so the transfer is no\nlonger multiple of wMaxPacketSize.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27408",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: dw-edma: eDMA: Add sync read before starting the DMA transfer in remote setup\n\nThe Linked list element and pointer are not stored in the same memory as\nthe eDMA controller register. If the doorbell register is toggled before\nthe full write of the linked list a race condition error will occur.\nIn remote setup we can only use a readl to the memory to assure the full\nwrite has occurred.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27410",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: reject iftype change with mesh ID change\n\nIt's currently possible to change the mesh ID when the\ninterface isn't yet in mesh mode, at the same time as\nchanging it into mesh mode. This leads to an overwrite\nof data in the wdev-\u003eu union for the interface type it\ncurrently has, causing cfg80211_change_iface() to do\nwrong things when switching.\n\nWe could probably allow setting an interface to mesh\nwhile setting the mesh ID at the same time by doing a\ndifferent order of operations here, but realistically\nthere's no userspace that's going to do this, so just\ndisallow changes in iftype when setting mesh ID.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27411",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: keep DMA buffers required for suspend/resume\n\nNouveau deallocates a few buffers post GPU init which are required for GPU suspend/resume to function correctly.\nThis is likely not as big an issue on systems where the NVGPU is the only GPU, but on multi-GPU set ups it leads to a regression where the kernel module errors and results in a system-wide rendering freeze.\n\nThis commit addresses that regression by moving the two buffers required for suspend and resume to be deallocated at driver unload instead of post init.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27412",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npower: supply: bq27xxx-i2c: Do not free non existing IRQ\n\nThe bq27xxx i2c-client may not have an IRQ, in which case\nclient-\u003eirq will be 0. bq27xxx_battery_i2c_probe() already has\nan if (client-\u003eirq) check wrapping the request_threaded_irq().\n\nBut bq27xxx_battery_i2c_remove() unconditionally calls\nfree_irq(client-\u003eirq) leading to:\n\n[  190.310742] ------------[ cut here ]------------\n[  190.310843] Trying to free already-free IRQ 0\n[  190.310861] WARNING: CPU: 2 PID: 1304 at kernel/irq/manage.c:1893 free_irq+0x1b8/0x310\n\nFollowed by a backtrace when unbinding the driver. Add\nan if (client-\u003eirq) to bq27xxx_battery_i2c_remove() mirroring\nprobe() to fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27413",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi/capsule-loader: fix incorrect allocation size\n\ngcc-14 notices that the allocation with sizeof(void) on 32-bit architectures\nis not enough for a 64-bit phys_addr_t:\n\ndrivers/firmware/efi/capsule-loader.c: In function 'efi_capsule_open':\ndrivers/firmware/efi/capsule-loader.c:295:24: error: allocation of insufficient size '4' for type 'phys_addr_t' {aka 'long long unsigned int'} with size '8' [-Werror=alloc-size]\n  295 |         cap_info-\u003ephys = kzalloc(sizeof(void *), GFP_KERNEL);\n      |                        ^\n\nUse the correct type instead here.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27414",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: fix error logic of IFLA_BRIDGE_FLAGS writing back\n\nIn the commit d73ef2d69c0d (\"rtnetlink: let rtnl_bridge_setlink checks\nIFLA_BRIDGE_MODE length\"), an adjustment was made to the old loop logic\nin the function `rtnl_bridge_setlink` to enable the loop to also check\nthe length of the IFLA_BRIDGE_MODE attribute. However, this adjustment\nremoved the `break` statement and led to an error logic of the flags\nwriting back at the end of this function.\n\nif (have_flags)\n    memcpy(nla_data(attr), \u0026flags, sizeof(flags));\n    // attr should point to IFLA_BRIDGE_FLAGS NLA !!!\n\nBefore the mentioned commit, the `attr` is granted to be IFLA_BRIDGE_FLAGS.\nHowever, this is not necessarily true fow now as the updated loop will let\nthe attr point to the last NLA, even an invalid NLA which could cause\noverflow writes.\n\nThis patch introduces a new variable `br_flag` to save the NLA pointer\nthat points to IFLA_BRIDGE_FLAGS and uses it to resolve the mentioned\nerror logic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27416",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_event: Fix handling of HCI_EV_IO_CAPA_REQUEST\n\nIf we received HCI_EV_IO_CAPA_REQUEST while\nHCI_OP_READ_REMOTE_EXT_FEATURES is yet to be responded assume the remote\ndoes support SSP since otherwise this event shouldn't be generated.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27417",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix potential \"struct net\" leak in inet6_rtm_getaddr()\n\nIt seems that if userspace provides a correct IFA_TARGET_NETNSID value\nbut no IFA_ADDRESS and IFA_LOCAL attributes, inet6_rtm_getaddr()\nreturns -EINVAL with an elevated \"struct net\" refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27418",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mctp: take ownership of skb in mctp_local_output\n\nCurrently, mctp_local_output only takes ownership of skb on success, and\nwe may leak an skb if mctp_local_output fails in specific states; the\nskb ownership isn't transferred until the actual output routing occurs.\n\nInstead, make mctp_local_output free the skb on all error paths up to\nthe route action, so it always consumes the passed skb.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27419",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix data-races around sysctl_net_busy_read\n\nWe need to protect the reader reading the sysctl value because the\nvalue can be changed concurrently.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27431",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpumap: Zero-initialise xdp_rxq_info struct before running XDP program\n\nWhen running an XDP program that is attached to a cpumap entry, we don't\ninitialise the xdp_rxq_info data structure being used in the xdp_buff\nthat backs the XDP program invocation. Tobias noticed that this leads to\nrandom values being returned as the xdp_md-\u003erx_queue_index value for XDP\nprograms running in a cpumap.\n\nThis means we're basically returning the contents of the uninitialised\nmemory, which is bad. Fix this by zero-initialising the rxq data\nstructure before running the XDP program.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27432",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: mtk_eth_soc: fix PPE hanging issue\n\nA patch to resolve an issue was found in MediaTek's GPL-licensed SDK:\nIn the mtk_ppe_stop() function, the PPE scan mode is not disabled before\ndisabling the PPE. This can potentially lead to a hang during the process\nof disabling the PPE.\n\nWithout this patch, the PPE may experience a hang during the reboot test.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27434",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: don't set the MFP flag for the GTK\n\nThe firmware doesn't need the MFP flag for the GTK, it can even make the\nfirmware crash. in case the AP is configured with: group cipher TKIP and\nMFPC. We would send the GTK with cipher = TKIP and MFP which is of course\nnot possible.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27435",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: fix reconnection fail due to reserved tag allocation\n\nWe found a issue on production environment while using NVMe over RDMA,\nadmin_q reconnect failed forever while remote target and network is ok.\nAfter dig into it, we found it may caused by a ABBA deadlock due to tag\nallocation. In my case, the tag was hold by a keep alive request\nwaiting inside admin_q, as we quiesced admin_q while reset ctrl, so the\nrequest maked as idle and will not process before reset success. As\nfabric_q shares tagset with admin_q, while reconnect remote target, we\nneed a tag for connect command, but the only one reserved tag was held\nby keep alive command which waiting inside admin_q. As a result, we\nfailed to reconnect admin_q forever. In order to fix this issue, I\nthink we should keep two reserved tags for admin queue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27436",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Stop parsing channels bits when all channels are found.\n\nIf a usb audio device sets more bits than the amount of channels\nit could write outside of the map array.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28182",
      "Description": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28757",
      "Description": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28834",
      "Description": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28835",
      "Description": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2961",
      "Description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32487",
      "Description": "less through 653 allows OS command execution via a newline character in the name of a file, because quoting is mishandled in filename.c. Exploitation typically requires use with attacker-controlled file names, such as the files extracted from an untrusted archive. Exploitation also requires the LESSOPEN environment variable, but this is set by default in many common cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33599",
      "Description": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33600",
      "Description": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33601",
      "Description": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33602",
      "Description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33619",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi: libstub: only free priv.runtime_map when allocated\n\npriv.runtime_map is only allocated when efi_novamap is not set.\nOtherwise, it is an uninitialized value.  In the error path, it is freed\nunconditionally.  Avoid passing an uninitialized value to free_pool.\nFree priv.runtime_map only when it was allocated.\n\nThis bug was discovered and resolved using Coverity Static Analysis\nSecurity Testing (SAST) by Synopsys, Inc.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34397",
      "Description": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34459",
      "Description": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-mapping: benchmark: fix node id validation\n\nWhile validating node ids in map_benchmark_ioctl(), node_possible() may\nbe provided with invalid argument outside of [0,MAX_NUMNODES-1] range\nleading to:\n\nBUG: KASAN: wild-memory-access in map_benchmark_ioctl (kernel/dma/map_benchmark.c:214)\nRead of size 8 at addr 1fffffff8ccb6398 by task dma_map_benchma/971\nCPU: 7 PID: 971 Comm: dma_map_benchma Not tainted 6.9.0-rc6 #37\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nCall Trace:\n \u003cTASK\u003e\ndump_stack_lvl (lib/dump_stack.c:117)\nkasan_report (mm/kasan/report.c:603)\nkasan_check_range (mm/kasan/generic.c:189)\nvariable_test_bit (arch/x86/include/asm/bitops.h:227) [inline]\narch_test_bit (arch/x86/include/asm/bitops.h:239) [inline]\n_test_bit at (include/asm-generic/bitops/instrumented-non-atomic.h:142) [inline]\nnode_state (include/linux/nodemask.h:423) [inline]\nmap_benchmark_ioctl (kernel/dma/map_benchmark.c:214)\nfull_proxy_unlocked_ioctl (fs/debugfs/file.c:333)\n__x64_sys_ioctl (fs/ioctl.c:890)\ndo_syscall_64 (arch/x86/entry/common.c:83)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nCompare node ids with sane bounds first. NUMA_NO_NODE is considered a\nspecial valid case meaning that benchmarking kthreads won't be bound to a\ncpuset of a given node.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35195",
      "Description": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35247",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: region: add owner module and take its refcount\n\nThe current implementation of the fpga region assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the region\nduring programming if the parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_region\nstruct and use it to take the module's refcount. Modify the functions for\nregistering a region to take an additional owner module parameter and\nrename them to avoid conflicts. Use the old function names for helper\nmacros that automatically set the module that registers the region as the\nowner. This ensures compatibility with existing low-level control modules\nand reduces the chances of registering a region without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35784",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix deadlock with fiemap and extent locking\n\nWhile working on the patchset to remove extent locking I got a lockdep\nsplat with fiemap and pagefaulting with my new extent lock replacement\nlock.\n\nThis deadlock exists with our normal code, we just don't have lockdep\nannotations with the extent locking so we've never noticed it.\n\nSince we're copying the fiemap extent to user space on every iteration\nwe have the chance of pagefaulting.  Because we hold the extent lock for\nthe entire range we could mkwrite into a range in the file that we have\nmmap'ed.  This would deadlock with the following stack trace\n\n[\u003c0\u003e] lock_extent+0x28d/0x2f0\n[\u003c0\u003e] btrfs_page_mkwrite+0x273/0x8a0\n[\u003c0\u003e] do_page_mkwrite+0x50/0xb0\n[\u003c0\u003e] do_fault+0xc1/0x7b0\n[\u003c0\u003e] __handle_mm_fault+0x2fa/0x460\n[\u003c0\u003e] handle_mm_fault+0xa4/0x330\n[\u003c0\u003e] do_user_addr_fault+0x1f4/0x800\n[\u003c0\u003e] exc_page_fault+0x7c/0x1e0\n[\u003c0\u003e] asm_exc_page_fault+0x26/0x30\n[\u003c0\u003e] rep_movs_alternative+0x33/0x70\n[\u003c0\u003e] _copy_to_user+0x49/0x70\n[\u003c0\u003e] fiemap_fill_next_extent+0xc8/0x120\n[\u003c0\u003e] emit_fiemap_extent+0x4d/0xa0\n[\u003c0\u003e] extent_fiemap+0x7f8/0xad0\n[\u003c0\u003e] btrfs_fiemap+0x49/0x80\n[\u003c0\u003e] __x64_sys_ioctl+0x3e1/0xb50\n[\u003c0\u003e] do_syscall_64+0x94/0x1a0\n[\u003c0\u003e] entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nI wrote an fstest to reproduce this deadlock without my replacement lock\nand verified that the deadlock exists with our existing locking.\n\nTo fix this simply don't take the extent lock for the entire duration of\nthe fiemap.  This is safe in general because we keep track of where we\nare when we're searching the tree, so if an ordered extent updates in\nthe middle of our fiemap call we'll still emit the correct extents\nbecause we know what offset we were on before.\n\nThe only place we maintain the lock is searching delalloc.  Since the\ndelalloc stuff can change during writeback we want to lock the extent\nrange so we have a consistent view of delalloc at the time we're\nchecking to see if we need to set the delalloc flag.\n\nWith this patch applied we no longer deadlock with my testcase.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: fix stale locked mutex in nouveau_gem_ioctl_pushbuf\n\nIf VM_BIND is enabled on the client the legacy submission ioctl can't be\nused, however if a client tries to do so regardless it will return an\nerror. In this case the clients mutex remained unlocked leading to a\ndeadlock inside nouveau_drm_postclose or any other nouveau ioctl call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35788",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix bounds check for dcn35 DcfClocks\n\n[Why]\nNumFclkLevelsEnabled is used for DcfClocks bounds check\ninstead of designated NumDcfClkLevelsEnabled.\nThat can cause array index out-of-bounds access.\n\n[How]\nUse designated variable for dcn35 DcfClocks bounds check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: check/clear fast rx for non-4addr sta VLAN changes\n\nWhen moving a station out of a VLAN and deleting the VLAN afterwards, the\nfast_rx entry still holds a pointer to the VLAN's netdev, which can cause\nuse-after-free bugs. Fix this by immediately calling ieee80211_check_fast_rx\nafter the VLAN change.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35790",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: altmodes/displayport: create sysfs nodes as driver's default device attribute group\n\nThe DisplayPort driver's sysfs nodes may be present to the userspace before\ntypec_altmode_set_drvdata() completes in dp_altmode_probe. This means that\na sysfs read can trigger a NULL pointer error by deferencing dp-\u003ehpd in\nhpd_show or dp-\u003elock in pin_assignment_show, as dev_get_drvdata() returns\nNULL in those cases.\n\nRemove manual sysfs node creation in favor of adding attribute group as\ndefault for devices bound to the driver. The ATTRIBUTE_GROUPS() macro is\nnot used here otherwise the path to the sysfs nodes is no longer compliant\nwith the ABI.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: Flush pages under kvm-\u003elock to fix UAF in svm_register_enc_region()\n\nDo the cache flush of converted pages in svm_register_enc_region() before\ndropping kvm-\u003elock to fix use-after-free issues where region and/or its\narray of pages could be freed by a different task, e.g. if userspace has\n__unregister_enc_region_locked() already queued up for the region.\n\nNote, the \"obvious\" alternative of using local variables doesn't fully\nresolve the bug, as region-\u003epages is also dynamically allocated.  I.e. the\nregion structure itself would be fine, but region-\u003epages could be freed.\n\nFlushing multiple pages under kvm-\u003elock is unfortunate, but the entire\nflow is a rare slow path, and the manual flush is only needed on CPUs that\nlack coherency for encrypted memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-raid: really frozen sync_thread during suspend\n\n1) commit f52f5c71f3d4 (\"md: fix stopping sync thread\") remove\n   MD_RECOVERY_FROZEN from __md_stop_writes() and doesn't realize that\n   dm-raid relies on __md_stop_writes() to frozen sync_thread\n   indirectly. Fix this problem by adding MD_RECOVERY_FROZEN in\n   md_stop_writes(), and since stop_sync_thread() is only used for\n   dm-raid in this case, also move stop_sync_thread() to\n   md_stop_writes().\n2) The flag MD_RECOVERY_FROZEN doesn't mean that sync thread is frozen,\n   it only prevent new sync_thread to start, and it can't stop the\n   running sync thread; In order to frozen sync_thread, after seting the\n   flag, stop_sync_thread() should be used.\n3) The flag MD_RECOVERY_FROZEN doesn't mean that writes are stopped, use\n   it as condition for md_stop_writes() in raid_postsuspend() doesn't\n   look correct. Consider that reentrant stop_sync_thread() do nothing,\n   always call md_stop_writes() in raid_postsuspend().\n4) raid_message can set/clear the flag MD_RECOVERY_FROZEN at anytime,\n   and if MD_RECOVERY_FROZEN is cleared while the array is suspended,\n   new sync_thread can start unexpected. Fix this by disallow\n   raid_message() to change sync_thread status during suspend.\n\nNote that after commit f52f5c71f3d4 (\"md: fix stopping sync thread\"), the\ntest shell/lvconvert-raid-reshape.sh start to hang in stop_sync_thread(),\nand with previous fixes, the test won't hang there anymore, however, the\ntest will still fail and complain that ext4 is corrupted. And with this\npatch, the test won't hang due to stop_sync_thread() or fail due to ext4\nis corrupted anymore. However, there is still a deadlock related to\ndm-raid456 that will be fixed in following patches.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35795",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix deadlock while reading mqd from debugfs\n\nAn errant disk backup on my desktop got into debugfs and triggered the\nfollowing deadlock scenario in the amdgpu debugfs files. The machine\nalso hard-resets immediately after those lines are printed (although I\nwasn't able to reproduce that part when reading by hand):\n\n[ 1318.016074][ T1082] ======================================================\n[ 1318.016607][ T1082] WARNING: possible circular locking dependency detected\n[ 1318.017107][ T1082] 6.8.0-rc7-00015-ge0c8221b72c0 #17 Not tainted\n[ 1318.017598][ T1082] ------------------------------------------------------\n[ 1318.018096][ T1082] tar/1082 is trying to acquire lock:\n[ 1318.018585][ T1082] ffff98c44175d6a0 (\u0026mm-\u003emmap_lock){++++}-{3:3}, at: __might_fault+0x40/0x80\n[ 1318.019084][ T1082]\n[ 1318.019084][ T1082] but task is already holding lock:\n[ 1318.020052][ T1082] ffff98c4c13f55f8 (reservation_ww_class_mutex){+.+.}-{3:3}, at: amdgpu_debugfs_mqd_read+0x6a/0x250 [amdgpu]\n[ 1318.020607][ T1082]\n[ 1318.020607][ T1082] which lock already depends on the new lock.\n[ 1318.020607][ T1082]\n[ 1318.022081][ T1082]\n[ 1318.022081][ T1082] the existing dependency chain (in reverse order) is:\n[ 1318.023083][ T1082]\n[ 1318.023083][ T1082] -\u003e #2 (reservation_ww_class_mutex){+.+.}-{3:3}:\n[ 1318.024114][ T1082]        __ww_mutex_lock.constprop.0+0xe0/0x12f0\n[ 1318.024639][ T1082]        ww_mutex_lock+0x32/0x90\n[ 1318.025161][ T1082]        dma_resv_lockdep+0x18a/0x330\n[ 1318.025683][ T1082]        do_one_initcall+0x6a/0x350\n[ 1318.026210][ T1082]        kernel_init_freeable+0x1a3/0x310\n[ 1318.026728][ T1082]        kernel_init+0x15/0x1a0\n[ 1318.027242][ T1082]        ret_from_fork+0x2c/0x40\n[ 1318.027759][ T1082]        ret_from_fork_asm+0x11/0x20\n[ 1318.028281][ T1082]\n[ 1318.028281][ T1082] -\u003e #1 (reservation_ww_class_acquire){+.+.}-{0:0}:\n[ 1318.029297][ T1082]        dma_resv_lockdep+0x16c/0x330\n[ 1318.029790][ T1082]        do_one_initcall+0x6a/0x350\n[ 1318.030263][ T1082]        kernel_init_freeable+0x1a3/0x310\n[ 1318.030722][ T1082]        kernel_init+0x15/0x1a0\n[ 1318.031168][ T1082]        ret_from_fork+0x2c/0x40\n[ 1318.031598][ T1082]        ret_from_fork_asm+0x11/0x20\n[ 1318.032011][ T1082]\n[ 1318.032011][ T1082] -\u003e #0 (\u0026mm-\u003emmap_lock){++++}-{3:3}:\n[ 1318.032778][ T1082]        __lock_acquire+0x14bf/0x2680\n[ 1318.033141][ T1082]        lock_acquire+0xcd/0x2c0\n[ 1318.033487][ T1082]        __might_fault+0x58/0x80\n[ 1318.033814][ T1082]        amdgpu_debugfs_mqd_read+0x103/0x250 [amdgpu]\n[ 1318.034181][ T1082]        full_proxy_read+0x55/0x80\n[ 1318.034487][ T1082]        vfs_read+0xa7/0x360\n[ 1318.034788][ T1082]        ksys_read+0x70/0xf0\n[ 1318.035085][ T1082]        do_syscall_64+0x94/0x180\n[ 1318.035375][ T1082]        entry_SYSCALL_64_after_hwframe+0x46/0x4e\n[ 1318.035664][ T1082]\n[ 1318.035664][ T1082] other info that might help us debug this:\n[ 1318.035664][ T1082]\n[ 1318.036487][ T1082] Chain exists of:\n[ 1318.036487][ T1082]   \u0026mm-\u003emmap_lock --\u003e reservation_ww_class_acquire --\u003e reservation_ww_class_mutex\n[ 1318.036487][ T1082]\n[ 1318.037310][ T1082]  Possible unsafe locking scenario:\n[ 1318.037310][ T1082]\n[ 1318.037838][ T1082]        CPU0                    CPU1\n[ 1318.038101][ T1082]        ----                    ----\n[ 1318.038350][ T1082]   lock(reservation_ww_class_mutex);\n[ 1318.038590][ T1082]                                lock(reservation_ww_class_acquire);\n[ 1318.038839][ T1082]                                lock(reservation_ww_class_mutex);\n[ 1318.039083][ T1082]   rlock(\u0026mm-\u003emmap_lock);\n[ 1318.039328][ T1082]\n[ 1318.039328][ T1082]  *** DEADLOCK ***\n[ 1318.039328][ T1082]\n[ 1318.040029][ T1082] 1 lock held by tar/1082:\n[ 1318.040259][ T1082]  #0: ffff98c4c13f55f8 (reservation_ww_class_mutex){+.+.}-{3:3}, at: amdgpu_debugfs_mqd_read+0x6a/0x250 [amdgpu]\n[ 1318.040560][ T1082]\n[ 1318.040560][ T1082] stack backtrace:\n[\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35796",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ll_temac: platform_get_resource replaced by wrong function\n\nThe function platform_get_resource was replaced with\ndevm_platform_ioremap_resource_byname and is called using 0 as name.\n\nThis eventually ends up in platform_get_resource_byname in the call\nstack, where it causes a null pointer in strcmp.\n\n\tif (type == resource_type(r) \u0026\u0026 !strcmp(r-\u003ename, name))\n\nIt should have been replaced with devm_platform_ioremap_resource.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35799",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Prevent crash when disable stream\n\n[Why]\nDisabling stream encoder invokes a function that no longer exists.\n\n[How]\nCheck if the function declaration is NULL in disable stream encoder.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi: fix panic in kdump kernel\n\nCheck if get_next_variable() is actually valid pointer before\ncalling it. In kdump kernel this method is set to NULL that causes\npanic during the kexec-ed kernel boot.\n\nTested with QEMU and OVMF firmware.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35801",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Keep xfd_state in sync with MSR_IA32_XFD\n\nCommit 672365477ae8 (\"x86/fpu: Update XFD state where required\") and\ncommit 8bf26758ca96 (\"x86/fpu: Add XFD state to fpstate\") introduced a\nper CPU variable xfd_state to keep the MSR_IA32_XFD value cached, in\norder to avoid unnecessary writes to the MSR.\n\nOn CPU hotplug MSR_IA32_XFD is reset to the init_fpstate.xfd, which\nwipes out any stale state. But the per CPU cached xfd value is not\nreset, which brings them out of sync.\n\nAs a consequence a subsequent xfd_update_state() might fail to update\nthe MSR which in turn can result in XRSTOR raising a #NM in kernel\nspace, which crashes the kernel.\n\nTo fix this, introduce xfd_set_state() to write xfd_state together\nwith MSR_IA32_XFD, and use it in all places that set MSR_IA32_XFD.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35803",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/efistub: Call mixed mode boot services on the firmware's stack\n\nNormally, the EFI stub calls into the EFI boot services using the stack\nthat was live when the stub was entered. According to the UEFI spec,\nthis stack needs to be at least 128k in size - this might seem large but\nall asynchronous processing and event handling in EFI runs from the same\nstack and so quite a lot of space may be used in practice.\n\nIn mixed mode, the situation is a bit different: the bootloader calls\nthe 32-bit EFI stub entry point, which calls the decompressor's 32-bit\nentry point, where the boot stack is set up, using a fixed allocation\nof 16k. This stack is still in use when the EFI stub is started in\n64-bit mode, and so all calls back into the EFI firmware will be using\nthe decompressor's limited boot stack.\n\nDue to the placement of the boot stack right after the boot heap, any\nstack overruns have gone unnoticed. However, commit\n\n  5c4feadb0011983b (\"x86/decompressor: Move global symbol references to C code\")\n\nmoved the definition of the boot heap into C code, and now the boot\nstack is placed right at the base of BSS, where any overruns will\ncorrupt the end of the .data section.\n\nWhile it would be possible to work around this by increasing the size of\nthe boot stack, doing so would affect all x86 systems, and mixed mode\nsystems are a tiny (and shrinking) fraction of the x86 installed base.\n\nSo instead, record the firmware stack pointer value when entering from\nthe 32-bit firmware, and switch to this stack every time a EFI boot\nservice call is made.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35804",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Mark target gfn of emulated atomic instruction as dirty\n\nWhen emulating an atomic access on behalf of the guest, mark the target\ngfn dirty if the CMPXCHG by KVM is attempted and doesn't fault.  This\nfixes a bug where KVM effectively corrupts guest memory during live\nmigration by writing to guest memory without informing userspace that the\npage is dirty.\n\nMarking the page dirty got unintentionally dropped when KVM's emulated\nCMPXCHG was converted to do a user access.  Before that, KVM explicitly\nmapped the guest page into kernel memory, and marked the page dirty during\nthe unmap phase.\n\nMark the page dirty even if the CMPXCHG fails, as the old data is written\nback on failure, i.e. the page is still written.  The value written is\nguaranteed to be the same because the operation is atomic, but KVM's ABI\nis that all writes are dirty logged regardless of the value written.  And\nmore importantly, that's what KVM did before the buggy commit.\n\nHuge kudos to the folks on the Cc list (and many others), who did all the\nactual work of triaging and debugging.\n\nbase-commit: 6769ea8da8a93ed4630f1ce64df6aafcaabfce64",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm snapshot: fix lockup in dm_exception_table_exit\n\nThere was reported lockup when we exit a snapshot with many exceptions.\nFix this by adding \"cond_resched\" to the loop that frees the exceptions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35806",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: fsl: qbman: Always disable interrupts when taking cgr_lock\n\nsmp_call_function_single disables IRQs when executing the callback. To\nprevent deadlocks, we must disable IRQs when taking cgr_lock elsewhere.\nThis is already done by qman_update_cgr and qman_delete_cgr; fix the\nother lockers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35807",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix corruption during on-line resize\n\nWe observed a corruption during on-line resize of a file system that is\nlarger than 16 TiB with 4k block size. With having more then 2^32 blocks\nresize_inode is turned off by default by mke2fs. The issue can be\nreproduced on a smaller file system for convenience by explicitly\nturning off resize_inode. An on-line resize across an 8 GiB boundary (the\nsize of a meta block group in this setup) then leads to a corruption:\n\n  dev=/dev/\u003csome_dev\u003e # should be \u003e= 16 GiB\n  mkdir -p /corruption\n  /sbin/mke2fs -t ext4 -b 4096 -O ^resize_inode $dev $((2 * 2**21 - 2**15))\n  mount -t ext4 $dev /corruption\n\n  dd if=/dev/zero bs=4096 of=/corruption/test count=$((2*2**21 - 4*2**15))\n  sha1sum /corruption/test\n  # 79d2658b39dcfd77274e435b0934028adafaab11  /corruption/test\n\n  /sbin/resize2fs $dev $((2*2**21))\n  # drop page cache to force reload the block from disk\n  echo 1 \u003e /proc/sys/vm/drop_caches\n\n  sha1sum /corruption/test\n  # 3c2abc63cbf1a94c9e6977e0fbd72cd832c4d5c3  /corruption/test\n\n2^21 = 2^15*2^6 equals 8 GiB whereof 2^15 is the number of blocks per\nblock group and 2^6 are the number of block groups that make a meta\nblock group.\n\nThe last checksum might be different depending on how the file is laid\nout across the physical blocks. The actual corruption occurs at physical\nblock 63*2^15 = 2064384 which would be the location of the backup of the\nmeta block group's block descriptor. During the on-line resize the file\nsystem will be converted to meta_bg starting at s_first_meta_bg which is\n2 in the example - meaning all block groups after 16 GiB. However, in\next4_flex_group_add we might add block groups that are not part of the\nfirst meta block group yet. In the reproducer we achieved this by\nsubstracting the size of a whole block group from the point where the\nmeta block group would start. This must be considered when updating the\nbackup block group descriptors to follow the non-meta_bg layout. The fix\nis to add a test whether the group to add is already part of the meta\nblock group or not.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35808",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/dm-raid: don't call md_reap_sync_thread() directly\n\nCurrently md_reap_sync_thread() is called from raid_message() directly\nwithout holding 'reconfig_mutex', this is definitely unsafe because\nmd_reap_sync_thread() can change many fields that is protected by\n'reconfig_mutex'.\n\nHowever, hold 'reconfig_mutex' here is still problematic because this\nwill cause deadlock, for example, commit 130443d60b1b (\"md: refactor\nidle/frozen_sync_thread() to fix deadlock\").\n\nFix this problem by using stop_sync_thread() to unregister sync_thread,\nlike md/raid did.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35809",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/PM: Drain runtime-idle callbacks before driver removal\n\nA race condition between the .runtime_idle() callback and the .remove()\ncallback in the rtsx_pcr PCI driver leads to a kernel crash due to an\nunhandled page fault [1].\n\nThe problem is that rtsx_pci_runtime_idle() is not expected to be running\nafter pm_runtime_get_sync() has been called, but the latter doesn't really\nguarantee that.  It only guarantees that the suspend and resume callbacks\nwill not be running when it returns.\n\nHowever, if a .runtime_idle() callback is already running when\npm_runtime_get_sync() is called, the latter will notice that the runtime PM\nstatus of the device is RPM_ACTIVE and it will return right away without\nwaiting for the former to complete.  In fact, it cannot wait for\n.runtime_idle() to complete because it may be called from that callback (it\narguably does not make much sense to do that, but it is not strictly\nprohibited).\n\nThus in general, whoever is providing a .runtime_idle() callback needs\nto protect it from running in parallel with whatever code runs after\npm_runtime_get_sync().  [Note that .runtime_idle() will not start after\npm_runtime_get_sync() has returned, but it may continue running then if it\nhas started earlier.]\n\nOne way to address that race condition is to call pm_runtime_barrier()\nafter pm_runtime_get_sync() (not before it, because a nonzero value of the\nruntime PM usage counter is necessary to prevent runtime PM callbacks from\nbeing invoked) to wait for the .runtime_idle() callback to complete should\nit be running at that point.  A suitable place for doing that is in\npci_device_remove() which calls pm_runtime_get_sync() before removing the\ndriver, so it may as well call pm_runtime_barrier() subsequently, which\nwill prevent the race in question from occurring, not just in the rtsx_pcr\ndriver, but in any PCI drivers providing .runtime_idle() callbacks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35810",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix the lifetime of the bo cursor memory\n\nThe cleanup can be dispatched while the atomic update is still active,\nwhich means that the memory acquired in the atomic update needs to\nnot be invalidated by the cleanup. The buffer objects in vmw_plane_state\ninstead of using the builtin map_and_cache were trying to handle\nthe lifetime of the mapped memory themselves, leading to crashes.\n\nUse the map_and_cache instead of trying to manage the lifetime of the\nbuffer objects held by the vmw_plane_state.\n\nFixes kernel oops'es in IGT's kms_cursor_legacy forked-bo.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35812",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: core: Avoid negative index with array access\n\nCommit 4d0c8d0aef63 (\"mmc: core: Use mrq.sbc in close-ended ffu\") assigns\nprev_idata = idatas[i - 1], but doesn't check that the iterator i is\ngreater than zero. Let's fix this by adding a check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nswiotlb: Fix double-allocation of slots due to broken alignment handling\n\nCommit bbb73a103fbb (\"swiotlb: fix a braino in the alignment check fix\"),\nwhich was a fix for commit 0eee5ae10256 (\"swiotlb: fix slot alignment\nchecks\"), causes a functional regression with vsock in a virtual machine\nusing bouncing via a restricted DMA SWIOTLB pool.\n\nWhen virtio allocates the virtqueues for the vsock device using\ndma_alloc_coherent(), the SWIOTLB search can return page-unaligned\nallocations if 'area-\u003eindex' was left unaligned by a previous allocation\nfrom the buffer:\n\n # Final address in brackets is the SWIOTLB address returned to the caller\n | virtio-pci 0000:00:07.0: orig_addr 0x0 alloc_size 0x2000, iotlb_align_mask 0x800 stride 0x2: got slot 1645-1649/7168 (0x98326800)\n | virtio-pci 0000:00:07.0: orig_addr 0x0 alloc_size 0x2000, iotlb_align_mask 0x800 stride 0x2: got slot 1649-1653/7168 (0x98328800)\n | virtio-pci 0000:00:07.0: orig_addr 0x0 alloc_size 0x2000, iotlb_align_mask 0x800 stride 0x2: got slot 1653-1657/7168 (0x9832a800)\n\nThis ends badly (typically buffer corruption and/or a hang) because\nswiotlb_alloc() is expecting a page-aligned allocation and so blindly\nreturns a pointer to the 'struct page' corresponding to the allocation,\ntherefore double-allocating the first half (2KiB slot) of the 4KiB page.\n\nFix the problem by treating the allocation alignment separately to any\nadditional alignment requirements from the device, using the maximum\nof the two as the stride to search the buffer slots and taking care\nto ensure a minimum of page-alignment for buffers larger than a page.\n\nThis also resolves swiotlb allocation failures occuring due to the\ninclusion of ~PAGE_MASK in 'iotlb_align_mask' for large allocations and\nresulting in alignment requirements exceeding swiotlb_max_mapping_size().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: amdgpu_ttm_gart_bind set gtt bound flag\n\nOtherwise after the GTT bo is released, the GTT and gart space is freed\nbut amdgpu_ttm_backend_unbind will not clear the gart page table entry\nand leave valid mapping entry pointing to the stale system page. Then\nif GPU access the gart address mistakely, it will read undefined value\ninstead page fault, harder to debug and reproduce the real issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: fsl: qbman: Use raw spinlock for cgr_lock\n\nsmp_call_function always runs its callback in hard IRQ context, even on\nPREEMPT_RT, where spinlocks can sleep. So we need to use a raw spinlock\nfor cgr_lock to ensure we aren't waiting on a sleeping task.\n\nAlthough this bug has existed for a while, it was not apparent until\ncommit ef2a8d5478b9 (\"net: dpaa: Adjust queue depth on rate change\")\nwhich invokes smp_call_function_single via qman_update_cgr_safe every\ntime a link goes up or down.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35821",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: Set page uptodate in the correct place\n\nPage cache reads are lockless, so setting the freshly allocated page\nuptodate before we've overwritten it with the data it's supposed to have\nin it will allow a simultaneous reader to see old data.  Move the call\nto SetPageUptodate into ubifs_write_end(), which is after we copied the\nnew data into the page.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: udc: remove warning when queue disabled ep\n\nIt is possible trigger below warning message from mass storage function,\n\nWARNING: CPU: 6 PID: 3839 at drivers/usb/gadget/udc/core.c:294 usb_ep_queue+0x7c/0x104\npc : usb_ep_queue+0x7c/0x104\nlr : fsg_main_thread+0x494/0x1b3c\n\nRoot cause is mass storage function try to queue request from main thread,\nbut other thread may already disable ep when function disable.\n\nAs there is no function failure in the driver, in order to avoid effort\nto fix warning, change WARN_ON_ONCE() in usb_ep_queue() to pr_debug().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35823",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt: fix unicode buffer corruption when deleting characters\n\nThis is the same issue that was fixed for the VGA text buffer in commit\n39cdb68c64d8 (\"vt: fix memory overlapping when deleting chars in the\nbuffer\"). The cure is also the same i.e. replace memcpy() with memmove()\ndue to the overlaping buffers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35824",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: lis3lv02d_i2c: Fix regulators getting en-/dis-abled twice on suspend/resume\n\nWhen not configured for wakeup lis3lv02d_i2c_suspend() will call\nlis3lv02d_poweroff() even if the device has already been turned off\nby the runtime-suspend handler and if configured for wakeup and\nthe device is runtime-suspended at this point then it is not turned\nback on to serve as a wakeup source.\n\nBefore commit b1b9f7a49440 (\"misc: lis3lv02d_i2c: Add missing setting\nof the reg_ctrl callback\"), lis3lv02d_poweroff() failed to disable\nthe regulators which as a side effect made calling poweroff() twice ok.\n\nNow that poweroff() correctly disables the regulators, doing this twice\ntriggers a WARN() in the regulator core:\n\nunbalanced disables for regulator-dummy\nWARNING: CPU: 1 PID: 92 at drivers/regulator/core.c:2999 _regulator_disable\n...\n\nFix lis3lv02d_i2c_suspend() to not call poweroff() a second time if\nalready runtime-suspended and add a poweron() call when necessary to\nmake wakeup work.\n\nlis3lv02d_i2c_resume() has similar issues, with an added weirness that\nit always powers on the device if it is runtime suspended, after which\nthe first runtime-resume will call poweron() again, causing the enabled\ncount for the regulator to increase by 1 every suspend/resume. These\nunbalanced regulator_enable() calls cause the regulator to never\nbe turned off and trigger the following WARN() on driver unbind:\n\nWARNING: CPU: 1 PID: 1724 at drivers/regulator/core.c:2396 _regulator_put\n\nFix this by making lis3lv02d_i2c_resume() mirror the new suspend().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35825",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: ncm: Fix handling of zero block length packets\n\nWhile connecting to a Linux host with CDC_NCM_NTB_DEF_SIZE_TX\nset to 65536, it has been observed that we receive short packets,\nwhich come at interval of 5-10 seconds sometimes and have block\nlength zero but still contain 1-2 valid datagrams present.\n\nAccording to the NCM spec:\n\n\"If wBlockLength = 0x0000, the block is terminated by a\nshort packet. In this case, the USB transfer must still\nbe shorter than dwNtbInMaxSize or dwNtbOutMaxSize. If\nexactly dwNtbInMaxSize or dwNtbOutMaxSize bytes are sent,\nand the size is a multiple of wMaxPacketSize for the\ngiven pipe, then no ZLP shall be sent.\n\nwBlockLength= 0x0000 must be used with extreme care, because\nof the possibility that the host and device may get out of\nsync, and because of test issues.\n\nwBlockLength = 0x0000 allows the sender to reduce latency by\nstarting to send a very large NTB, and then shortening it when\nthe sender discovers that there's not sufficient data to justify\nsending a large NTB\"\n\nHowever, there is a potential issue with the current implementation,\nas it checks for the occurrence of multiple NTBs in a single\ngiveback by verifying if the leftover bytes to be processed is zero\nor not. If the block length reads zero, we would process the same\nNTB infintely because the leftover bytes is never zero and it leads\nto a crash. Fix this by bailing out if block length reads zero.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35827",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/net: fix overflow check in io_recvmsg_mshot_prep()\n\nThe \"controllen\" variable is type size_t (unsigned long).  Casting it\nto int could lead to an integer underflow.\n\nThe check_add_overflow() function considers the type of the destination\nwhich is type int.  If we add two positive values and the result cannot\nfit in an integer then that's counted as an overflow.\n\nHowever, if we cast \"controllen\" to an int and it turns negative, then\nnegative values *can* fit into an int type so there is no overflow.\n\nGood: 100 + (unsigned long)-4 = 96  \u003c-- overflow\n Bad: 100 + (int)-4 = 96 \u003c-- no overflow\n\nI deleted the cast of the sizeof() as well.  That's not a bug but the\ncast is unnecessary.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35828",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: libertas: fix some memleaks in lbs_allocate_cmd_buffer()\n\nIn the for statement of lbs_allocate_cmd_buffer(), if the allocation of\ncmdarray[i].cmdbuf fails, both cmdarray and cmdarray[i].cmdbuf needs to\nbe freed. Otherwise, there will be memleaks in lbs_allocate_cmd_buffer().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35829",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/lima: fix a memleak in lima_heap_alloc\n\nWhen lima_vm_map_bo fails, the resources need to be deallocated, or\nthere will be memleaks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35830",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: tc358743: register v4l2 async device only after successful setup\n\nEnsure the device has been setup correctly before registering the v4l2\nasync device, thus allowing userspace to access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35831",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: Fix release of pinned pages when __io_uaddr_map fails\n\nLooking at the error path of __io_uaddr_map, if we fail after pinning\nthe pages for any reasons, ret will be set to -EINVAL and the error\nhandler won't properly release the pinned pages.\n\nI didn't manage to trigger it without forcing a failure, but it can\nhappen in real life when memory is heavily fragmented.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35833",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: fsl-qdma: Fix a memory leak related to the queue command DMA\n\nThis dma_alloc_coherent() is undone neither in the remove function, nor in\nthe error handling path of fsl_qdma_probe().\n\nSwitch to the managed version to fix both issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35835",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: fix a double-free in arfs_create_groups\n\nWhen `in` allocated by kvzalloc fails, arfs_create_groups will free\nft-\u003eg and return an error. However, arfs_create_table, the only caller of\narfs_create_groups, will hold this error and call to\nmlx5e_destroy_flow_table, in which the ft-\u003eg will be freed again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35836",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix pin dump crash for rebound module\n\nWhen a kernel module is unbound but the pin resources were not entirely\nfreed (other kernel module instance of the same PCI device have had kept\nthe reference to that pin), and kernel module is again bound, the pin\nproperties would not be updated (the properties are only assigned when\nmemory for the pin is allocated), prop pointer still points to the\nkernel module memory of the kernel module which was deallocated on the\nunbind.\n\nIf the pin dump is invoked in this state, the result is a kernel crash.\nPrevent the crash by storing persistent pin properties in dpll subsystem,\ncopy the content from the kernel module when pin is allocated, instead of\nusing memory of the kernel module.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35837",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvpp2: clear BM pool before initialization\n\nRegister value persist after booting the kernel using\nkexec which results in kernel panic. Thus clear the\nBM pool registers before initialisation to fix the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35838",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix potential sta-link leak\n\nWhen a station is allocated, links are added but not\nset to valid yet (e.g. during connection to an AP MLD),\nwe might remove the station without ever marking links\nvalid, and leak them. Fix that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35841",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tls, fix WARNIING in __sk_msg_free\n\nA splice with MSG_SPLICE_PAGES will cause tls code to use the\ntls_sw_sendmsg_splice path in the TLS sendmsg code to move the user\nprovided pages from the msg into the msg_pl. This will loop over the\nmsg until msg_pl is full, checked by sk_msg_full(msg_pl). The user\ncan also set the MORE flag to hint stack to delay sending until receiving\nmore pages and ideally a full buffer.\n\nIf the user adds more pages to the msg than can fit in the msg_pl\nscatterlist (MAX_MSG_FRAGS) we should ignore the MORE flag and send\nthe buffer anyways.\n\nWhat actually happens though is we abort the msg to msg_pl scatterlist\nsetup and then because we forget to set 'full record' indicating we\ncan no longer consume data without a send we fallthrough to the 'continue'\npath which will check if msg_data_left(msg) has more bytes to send and\nthen attempts to fit them in the already full msg_pl. Then next\niteration of sender doing send will encounter a full msg_pl and throw\nthe warning in the syzbot report.\n\nTo fix simply check if we have a full_record in splice code path and\nif not send the msg regardless of MORE flag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35842",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: sof-common: Add NULL check for normal_link string\n\nIt's not granted that all entries of struct sof_conn_stream declare\na `normal_link` (a non-SOF, direct link) string, and this is the case\nfor SoCs that support only SOF paths (hence do not support both direct\nand SOF usecases).\n\nFor example, in the case of MT8188 there is no normal_link string in\nany of the sof_conn_stream entries and there will be more drivers\ndoing that in the future.\n\nTo avoid possible NULL pointer KPs, add a NULL check for `normal_link`.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35843",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Use device rbtree in iopf reporting path\n\nThe existing I/O page fault handler currently locates the PCI device by\ncalling pci_get_domain_bus_and_slot(). This function searches the list\nof all PCI devices until the desired device is found. To improve lookup\nefficiency, replace it with device_rbtree_find() to search the device\nwithin the probed device rbtree.\n\nThe I/O page fault is initiated by the device, which does not have any\nsynchronization mechanism with the software to ensure that the device\nstays in the probed device tree. Theoretically, a device could be released\nby the IOMMU subsystem after device_rbtree_find() and before\niopf_get_dev_fault_param(), which would cause a use-after-free problem.\n\nAdd a mutex to synchronize the I/O page fault reporting path and the IOMMU\nrelease device path. This lock doesn't introduce any performance overhead,\nas the conflict between I/O page fault reporting and device releasing is\nvery rare.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35845",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: dbg-tlv: ensure NUL termination\n\nThe iwl_fw_ini_debug_info_tlv is used as a string, so we must\nensure the string is terminated correctly before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35847",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip/gic-v3-its: Prevent double free on error\n\nThe error handling path in its_vpe_irq_domain_alloc() causes a double free\nwhen its_vpe_init() fails after successfully allocating at least one\ninterrupt. This happens because its_vpe_irq_domain_free() frees the\ninterrupts along with the area bitmap and the vprop_page and\nits_vpe_irq_domain_alloc() subsequently frees the area bitmap and the\nvprop_page again.\n\nFix this by unconditionally invoking its_vpe_irq_domain_free() which\nhandles all cases correctly and by removing the bitmap/vprop_page freeing\nfrom its_vpe_irq_domain_alloc().\n\n[ tglx: Massaged change log ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35848",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neeprom: at24: fix memory corruption race condition\n\nIf the eeprom is not accessible, an nvmem device will be registered, the\nread will fail, and the device will be torn down. If another driver\naccesses the nvmem device after the teardown, it will reference\ninvalid memory.\n\nMove the failure point before registering the nvmem device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix information leak in btrfs_ioctl_logical_to_ino()\n\nSyzbot reported the following information leak for in\nbtrfs_ioctl_logical_to_ino():\n\n  BUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n  BUG: KMSAN: kernel-infoleak in _copy_to_user+0xbc/0x110 lib/usercopy.c:40\n   instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n   _copy_to_user+0xbc/0x110 lib/usercopy.c:40\n   copy_to_user include/linux/uaccess.h:191 [inline]\n   btrfs_ioctl_logical_to_ino+0x440/0x750 fs/btrfs/ioctl.c:3499\n   btrfs_ioctl+0x714/0x1260\n   vfs_ioctl fs/ioctl.c:51 [inline]\n   __do_sys_ioctl fs/ioctl.c:904 [inline]\n   __se_sys_ioctl+0x261/0x450 fs/ioctl.c:890\n   __x64_sys_ioctl+0x96/0xe0 fs/ioctl.c:890\n   x64_sys_call+0x1883/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:17\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n  Uninit was created at:\n   __kmalloc_large_node+0x231/0x370 mm/slub.c:3921\n   __do_kmalloc_node mm/slub.c:3954 [inline]\n   __kmalloc_node+0xb07/0x1060 mm/slub.c:3973\n   kmalloc_node include/linux/slab.h:648 [inline]\n   kvmalloc_node+0xc0/0x2d0 mm/util.c:634\n   kvmalloc include/linux/slab.h:766 [inline]\n   init_data_container+0x49/0x1e0 fs/btrfs/backref.c:2779\n   btrfs_ioctl_logical_to_ino+0x17c/0x750 fs/btrfs/ioctl.c:3480\n   btrfs_ioctl+0x714/0x1260\n   vfs_ioctl fs/ioctl.c:51 [inline]\n   __do_sys_ioctl fs/ioctl.c:904 [inline]\n   __se_sys_ioctl+0x261/0x450 fs/ioctl.c:890\n   __x64_sys_ioctl+0x96/0xe0 fs/ioctl.c:890\n   x64_sys_call+0x1883/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:17\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n  Bytes 40-65535 of 65536 are uninitialized\n  Memory access of size 65536 starts at ffff888045a40000\n\nThis happens, because we're copying a 'struct btrfs_data_container' back\nto user-space. This btrfs_data_container is allocated in\n'init_data_container()' via kvmalloc(), which does not zero-fill the\nmemory.\n\nFix this by using kvzalloc() which zeroes out the memory on allocation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35850",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: qca: fix NULL-deref on non-serdev setup\n\nQualcomm ROME controllers can be registered from the Bluetooth line\ndiscipline and in this case the HCI UART serdev pointer is NULL.\n\nAdd the missing sanity check to prevent a NULL-pointer dereference when\nsetup() is called for a non-serdev controller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35851",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: qca: fix NULL-deref on non-serdev suspend\n\nQualcomm ROME controllers can be registered from the Bluetooth line\ndiscipline and in this case the HCI UART serdev pointer is NULL.\n\nAdd the missing sanity check to prevent a NULL-pointer dereference when\nwakeup() is called for a non-serdev controller during suspend.\n\nJust return true for now to restore the original behaviour and address\nthe crash with pre-6.2 kernels, which do not have commit e9b3e5b8c657\n(\"Bluetooth: hci_qca: only assign wakeup with serial port support\") that\ncauses the crash to happen already at setup() time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35852",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix memory leak when canceling rehash work\n\nThe rehash delayed work is rescheduled with a delay if the number of\ncredits at end of the work is not negative as supposedly it means that\nthe migration ended. Otherwise, it is rescheduled immediately.\n\nAfter \"mlxsw: spectrum_acl_tcam: Fix possible use-after-free during\nrehash\" the above is no longer accurate as a non-negative number of\ncredits is no longer indicative of the migration being done. It can also\nhappen if the work encountered an error in which case the migration will\nresume the next time the work is scheduled.\n\nThe significance of the above is that it is possible for the work to be\npending and associated with hints that were allocated when the migration\nstarted. This leads to the hints being leaked [1] when the work is\ncanceled while pending as part of ACL region dismantle.\n\nFix by freeing the hints if hints are associated with a work that was\ncanceled while pending.\n\nBlame the original commit since the reliance on not having a pending\nwork associated with hints is fragile.\n\n[1]\nunreferenced object 0xffff88810e7c3000 (size 256):\n  comm \"kworker/0:16\", pid 176, jiffies 4295460353\n  hex dump (first 32 bytes):\n    00 30 95 11 81 88 ff ff 61 00 00 00 00 00 00 80  .0......a.......\n    00 00 61 00 40 00 00 00 00 00 00 00 04 00 00 00  ..a.@...........\n  backtrace (crc 2544ddb9):\n    [\u003c00000000cf8cfab3\u003e] kmalloc_trace+0x23f/0x2a0\n    [\u003c000000004d9a1ad9\u003e] objagg_hints_get+0x42/0x390\n    [\u003c000000000b143cf3\u003e] mlxsw_sp_acl_erp_rehash_hints_get+0xca/0x400\n    [\u003c0000000059bdb60a\u003e] mlxsw_sp_acl_tcam_vregion_rehash_work+0x868/0x1160\n    [\u003c00000000e81fd734\u003e] process_one_work+0x59c/0xf20\n    [\u003c00000000ceee9e81\u003e] worker_thread+0x799/0x12c0\n    [\u003c00000000bda6fe39\u003e] kthread+0x246/0x300\n    [\u003c0000000070056d23\u003e] ret_from_fork+0x34/0x70\n    [\u003c00000000dea2b93e\u003e] ret_from_fork_asm+0x1a/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix memory leak during rehash\n\nThe rehash delayed work migrates filters from one region to another.\nThis is done by iterating over all chunks (all the filters with the same\npriority) in the region and in each chunk iterating over all the\nfilters.\n\nIf the migration fails, the code tries to migrate the filters back to\nthe old region. However, the rollback itself can also fail in which case\nanother migration will be erroneously performed. Besides the fact that\nthis ping pong is not a very good idea, it also creates a problem.\n\nEach virtual chunk references two chunks: The currently used one\n('vchunk-\u003echunk') and a backup ('vchunk-\u003echunk2'). During migration the\nfirst holds the chunk we want to migrate filters to and the second holds\nthe chunk we are migrating filters from.\n\nThe code currently assumes - but does not verify - that the backup chunk\ndoes not exist (NULL) if the currently used chunk does not reference the\ntarget region. This assumption breaks when we are trying to rollback a\nrollback, resulting in the backup chunk being overwritten and leaked\n[1].\n\nFix by not rolling back a failed rollback and add a warning to avoid\nfuture cases.\n\n[1]\nWARNING: CPU: 5 PID: 1063 at lib/parman.c:291 parman_destroy+0x17/0x20\nModules linked in:\nCPU: 5 PID: 1063 Comm: kworker/5:11 Tainted: G        W          6.9.0-rc2-custom-00784-gc6a05c468a0b #14\nHardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:parman_destroy+0x17/0x20\n[...]\nCall Trace:\n \u003cTASK\u003e\n mlxsw_sp_acl_atcam_region_fini+0x19/0x60\n mlxsw_sp_acl_tcam_region_destroy+0x49/0xf0\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x1f1/0x470\n process_one_work+0x151/0x370\n worker_thread+0x2cb/0x3e0\n kthread+0xd0/0x100\n ret_from_fork+0x34/0x50\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix possible use-after-free during rehash\n\nThe rehash delayed work migrates filters from one region to another\naccording to the number of available credits.\n\nThe migrated from region is destroyed at the end of the work if the\nnumber of credits is non-negative as the assumption is that this is\nindicative of migration being complete. This assumption is incorrect as\na non-negative number of credits can also be the result of a failed\nmigration.\n\nThe destruction of a region that still has filters referencing it can\nresult in a use-after-free [1].\n\nFix by not destroying the region if migration failed.\n\n[1]\nBUG: KASAN: slab-use-after-free in mlxsw_sp_acl_ctcam_region_entry_remove+0x21d/0x230\nRead of size 8 at addr ffff8881735319e8 by task kworker/0:31/3858\n\nCPU: 0 PID: 3858 Comm: kworker/0:31 Tainted: G        W          6.9.0-rc2-custom-00782-gf2275c2157d8 #5\nHardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0xc6/0x120\n print_report+0xce/0x670\n kasan_report+0xd7/0x110\n mlxsw_sp_acl_ctcam_region_entry_remove+0x21d/0x230\n mlxsw_sp_acl_ctcam_entry_del+0x2e/0x70\n mlxsw_sp_acl_atcam_entry_del+0x81/0x210\n mlxsw_sp_acl_tcam_vchunk_migrate_all+0x3cd/0xb50\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x157/0x1300\n process_one_work+0x8eb/0x19b0\n worker_thread+0x6c9/0xf70\n kthread+0x2c9/0x3b0\n ret_from_fork+0x4d/0x80\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nAllocated by task 174:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n __kasan_kmalloc+0x8f/0xa0\n __kmalloc+0x19c/0x360\n mlxsw_sp_acl_tcam_region_create+0xdf/0x9c0\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x954/0x1300\n process_one_work+0x8eb/0x19b0\n worker_thread+0x6c9/0xf70\n kthread+0x2c9/0x3b0\n ret_from_fork+0x4d/0x80\n ret_from_fork_asm+0x1a/0x30\n\nFreed by task 7:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n poison_slab_object+0x102/0x170\n __kasan_slab_free+0x14/0x30\n kfree+0xc1/0x290\n mlxsw_sp_acl_tcam_region_destroy+0x272/0x310\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x731/0x1300\n process_one_work+0x8eb/0x19b0\n worker_thread+0x6c9/0xf70\n kthread+0x2c9/0x3b0\n ret_from_fork+0x4d/0x80\n ret_from_fork_asm+0x1a/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nicmp: prevent possible NULL dereferences from icmp_build_probe()\n\nFirst problem is a double call to __in_dev_get_rcu(), because\nthe second one could return NULL.\n\nif (__in_dev_get_rcu(dev) \u0026\u0026 __in_dev_get_rcu(dev)-\u003eifa_list)\n\nSecond problem is a read from dev-\u003eip6_ptr with no NULL check:\n\nif (!list_empty(\u0026rcu_dereference(dev-\u003eip6_ptr)-\u003eaddr_list))\n\nUse the correct RCU API to fix these.\n\nv2: add missing include \u003cnet/addrconf.h\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: support deferring bpf_link dealloc to after RCU grace period\n\nBPF link for some program types is passed as a \"context\" which can be\nused by those BPF programs to look up additional information. E.g., for\nmulti-kprobes and multi-uprobes, link is used to fetch BPF cookie values.\n\nBecause of this runtime dependency, when bpf_link refcnt drops to zero\nthere could still be active BPF programs running accessing link data.\n\nThis patch adds generic support to defer bpf_link dealloc callback to\nafter RCU GP, if requested. This is done by exposing two different\ndeallocation callbacks, one synchronous and one deferred. If deferred\none is provided, bpf_link_free() will schedule dealloc_deferred()\ncallback to happen after RCU GP.\n\nBPF is using two flavors of RCU: \"classic\" non-sleepable one and RCU\ntasks trace one. The latter is used when sleepable BPF programs are\nused. bpf_link_free() accommodates that by checking underlying BPF\nprogram's sleepable flag, and goes either through normal RCU GP only for\nnon-sleepable, or through RCU tasks trace GP *and* then normal RCU GP\n(taking into account rcu_trace_implies_rcu_gp() optimization), if BPF\nprogram is sleepable.\n\nWe use this for multi-kprobe and multi-uprobe links, which dereference\nlink during program run. We also preventively switch raw_tp link to use\ndeferred dealloc callback, as upcoming changes in bpf-next tree expose\nraw_tp link data (specifically, cookie value) to BPF program at runtime\nas well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_signal_cifsd_for_reconnect()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35862",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_network_name_deleted()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in is_valid_oplock_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35864",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_valid_lease_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_valid_oplock_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35866",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_dump_full_key()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_stats_proc_show()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_stats_proc_write()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35869",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: guarantee refcounted children from parent session\n\nAvoid potential use-after-free bugs when walking DFS referrals,\nmounting and performing DFS failover by ensuring that all children\nfrom parent @tcon-\u003eses are also refcounted.  They're all needed across\nthe entire DFS mount.  Get rid of @tcon-\u003edfs_ses_list while we're at\nit, too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in smb2_reconnect_server()\n\nThe UAF bug is due to smb2_reconnect_server() accessing a session that\nis already being teared down by another thread that is executing\n__cifs_put_smb_ses().  This can happen when (a) the client has\nconnection to the server but no session or (b) another thread ends up\nsetting @ses-\u003eses_status again to something different than\nSES_EXITING.\n\nTo fix this, we need to make sure to unconditionally set\n@ses-\u003eses_status to SES_EXITING and prevent any other threads from\nsetting a new status while we're still tearing it down.\n\nThe following can be reproduced by adding some delay to right after\nthe ipc is freed in __cifs_put_smb_ses() - which will give\nsmb2_reconnect_server() worker a chance to run and then accessing\n@ses-\u003eipc:\n\nkinit ...\nmount.cifs //srv/share /mnt/1 -o sec=krb5,nohandlecache,echo_interval=10\n[disconnect srv]\nls /mnt/1 \u0026\u003e/dev/null\nsleep 30\nkdestroy\n[reconnect srv]\nsleep 10\numount /mnt/1\n...\nCIFS: VFS: Verify user has a krb5 ticket and keyutils is installed\nCIFS: VFS: \\\\srv Send error in SessSetup = -126\nCIFS: VFS: Verify user has a krb5 ticket and keyutils is installed\nCIFS: VFS: \\\\srv Send error in SessSetup = -126\ngeneral protection fault, probably for non-canonical address\n0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 3 PID: 50 Comm: kworker/3:1 Not tainted 6.9.0-rc2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39\n04/01/2014\nWorkqueue: cifsiod smb2_reconnect_server [cifs]\nRIP: 0010:__list_del_entry_valid_or_report+0x33/0xf0\nCode: 4f 08 48 85 d2 74 42 48 85 c9 74 59 48 b8 00 01 00 00 00 00 ad\nde 48 39 c2 74 61 48 b8 22 01 00 00 00 00 74 69 \u003c48\u003e 8b 01 48 39 f8 75\n7b 48 8b 72 08 48 39 c6 0f 85 88 00 00 00 b8\nRSP: 0018:ffffc900001bfd70 EFLAGS: 00010a83\nRAX: dead000000000122 RBX: ffff88810da53838 RCX: 6b6b6b6b6b6b6b6b\nRDX: 6b6b6b6b6b6b6b6b RSI: ffffffffc02f6878 RDI: ffff88810da53800\nRBP: ffff88810da53800 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: ffff88810c064000\nR13: 0000000000000001 R14: ffff88810c064000 R15: ffff8881039cc000\nFS: 0000000000000000(0000) GS:ffff888157c00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fe3728b1000 CR3: 000000010caa4000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? die_addr+0x36/0x90\n ? exc_general_protection+0x1c1/0x3f0\n ? asm_exc_general_protection+0x26/0x30\n ? __list_del_entry_valid_or_report+0x33/0xf0\n __cifs_put_smb_ses+0x1ae/0x500 [cifs]\n smb2_reconnect_server+0x4ed/0x710 [cifs]\n process_one_work+0x205/0x6b0\n worker_thread+0x191/0x360\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe2/0x110\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35872",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/secretmem: fix GUP-fast succeeding on secretmem folios\n\nfolio_is_secretmem() currently relies on secretmem folios being LRU\nfolios, to save some cycles.\n\nHowever, folios might reside in a folio batch without the LRU flag set, or\ntemporarily have their LRU flag cleared.  Consequently, the LRU flag is\nunreliable for this purpose.\n\nIn particular, this is the case when secretmem_fault() allocates a fresh\npage and calls filemap_add_folio()-\u003efolio_add_lru().  The folio might be\nadded to the per-cpu folio batch and won't get the LRU flag set until the\nbatch was drained using e.g., lru_add_drain().\n\nConsequently, folio_is_secretmem() might not detect secretmem folios and\nGUP-fast can succeed in grabbing a secretmem folio, crashing the kernel\nwhen we would later try reading/writing to the folio, because the folio\nhas been unmapped from the directmap.\n\nFix it by removing that unreliable check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35875",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/coco: Require seeding RNG with RDRAND on CoCo systems\n\nThere are few uses of CoCo that don't rely on working cryptography and\nhence a working RNG. Unfortunately, the CoCo threat model means that the\nVM host cannot be trusted and may actively work against guests to\nextract secrets or manipulate computation. Since a malicious host can\nmodify or observe nearly all inputs to guests, the only remaining source\nof entropy for CoCo guests is RDRAND.\n\nIf RDRAND is broken -- due to CPU hardware fault -- the RNG as a whole\nis meant to gracefully continue on gathering entropy from other sources,\nbut since there aren't other sources on CoCo, this is catastrophic.\nThis is mostly a concern at boot time when initially seeding the RNG, as\nafter that the consequences of a broken RDRAND are much more\ntheoretical.\n\nSo, try at boot to seed the RNG using 256 bits of RDRAND output. If this\nfails, panic(). This will also trigger if the system is booted without\nRDRAND, as RDRAND is essential for a safe CoCo boot.\n\nAdd this deliberately to be \"just a CoCo x86 driver feature\" and not\npart of the RNG itself. Many device drivers and platforms have some\ndesire to contribute something to the RNG, and add_device_randomness()\nis specifically meant for this purpose.\n\nAny driver can call it with seed data of any quality, or even garbage\nquality, and it can only possibly make the quality of the RNG better or\nhave no effect, but can never make it worse.\n\nRather than trying to build something into the core of the RNG, consider\nthe particular CoCo issue just a CoCo issue, and therefore separate it\nall out into driver (well, arch/platform) code.\n\n  [ bp: Massage commit message. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35877",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm/pat: fix VM_PAT handling in COW mappings\n\nPAT handling won't do the right thing in COW mappings: the first PTE (or,\nin fact, all PTEs) can be replaced during write faults to point at anon\nfolios.  Reliably recovering the correct PFN and cachemode using\nfollow_phys() from PTEs will not work in COW mappings.\n\nUsing follow_phys(), we might just get the address+protection of the anon\nfolio (which is very wrong), or fail on swap/nonswap entries, failing\nfollow_phys() and triggering a WARN_ON_ONCE() in untrack_pfn() and\ntrack_pfn_copy(), not properly calling free_pfn_range().\n\nIn free_pfn_range(), we either wouldn't call memtype_free() or would call\nit with the wrong range, possibly leaking memory.\n\nTo fix that, let's update follow_phys() to refuse returning anon folios,\nand fallback to using the stored PFN inside vma-\u003evm_pgoff for COW mappings\nif we run into that.\n\nWe will now properly handle untrack_pfn() with COW mappings, where we\ndon't need the cachemode.  We'll have to fail fork()-\u003etrack_pfn_copy() if\nthe first page was replaced by an anon folio, though: we'd have to store\nthe cachemode in the VMA to make this work, likely growing the VMA size.\n\nFor now, lets keep it simple and let track_pfn_copy() just fail in that\ncase: it would have failed in the past with swap/nonswap entries already,\nand it would have done the wrong thing with anon folios.\n\nSimple reproducer to trigger the WARN_ON_ONCE() in untrack_pfn():\n\n\u003c--- C reproducer ---\u003e\n #include \u003cstdio.h\u003e\n #include \u003csys/mman.h\u003e\n #include \u003cunistd.h\u003e\n #include \u003cliburing.h\u003e\n\n int main(void)\n {\n         struct io_uring_params p = {};\n         int ring_fd;\n         size_t size;\n         char *map;\n\n         ring_fd = io_uring_setup(1, \u0026p);\n         if (ring_fd \u003c 0) {\n                 perror(\"io_uring_setup\");\n                 return 1;\n         }\n         size = p.sq_off.array + p.sq_entries * sizeof(unsigned);\n\n         /* Map the submission queue ring MAP_PRIVATE */\n         map = mmap(0, size, PROT_READ | PROT_WRITE, MAP_PRIVATE,\n                    ring_fd, IORING_OFF_SQ_RING);\n         if (map == MAP_FAILED) {\n                 perror(\"mmap\");\n                 return 1;\n         }\n\n         /* We have at least one page. Let's COW it. */\n         *map = 0;\n         pause();\n         return 0;\n }\n\u003c--- C reproducer ---\u003e\n\nOn a system with 16 GiB RAM and swap configured:\n # ./iouring \u0026\n # memhog 16G\n # killall iouring\n[  301.552930] ------------[ cut here ]------------\n[  301.553285] WARNING: CPU: 7 PID: 1402 at arch/x86/mm/pat/memtype.c:1060 untrack_pfn+0xf4/0x100\n[  301.553989] Modules linked in: binfmt_misc nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_g\n[  301.558232] CPU: 7 PID: 1402 Comm: iouring Not tainted 6.7.5-100.fc38.x86_64 #1\n[  301.558772] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebu4\n[  301.559569] RIP: 0010:untrack_pfn+0xf4/0x100\n[  301.559893] Code: 75 c4 eb cf 48 8b 43 10 8b a8 e8 00 00 00 3b 6b 28 74 b8 48 8b 7b 30 e8 ea 1a f7 000\n[  301.561189] RSP: 0018:ffffba2c0377fab8 EFLAGS: 00010282\n[  301.561590] RAX: 00000000ffffffea RBX: ffff9208c8ce9cc0 RCX: 000000010455e047\n[  301.562105] RDX: 07fffffff0eb1e0a RSI: 0000000000000000 RDI: ffff9208c391d200\n[  301.562628] RBP: 0000000000000000 R08: ffffba2c0377fab8 R09: 0000000000000000\n[  301.563145] R10: ffff9208d2292d50 R11: 0000000000000002 R12: 00007fea890e0000\n[  301.563669] R13: 0000000000000000 R14: ffffba2c0377fc08 R15: 0000000000000000\n[  301.564186] FS:  0000000000000000(0000) GS:ffff920c2fbc0000(0000) knlGS:0000000000000000\n[  301.564773] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  301.565197] CR2: 00007fea88ee8a20 CR3: 00000001033a8000 CR4: 0000000000750ef0\n[  301.565725] PKRU: 55555554\n[  301.565944] Call Trace:\n[  301.566148]  \u003cTASK\u003e\n[  301.566325]  ? untrack_pfn+0xf4/0x100\n[  301.566618]  ? __warn+0x81/0x130\n[  301.566876]  ? untrack_pfn+0xf4/0x100\n[  3\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35878",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: module: prevent NULL pointer dereference in vsnprintf()\n\nIn of_modalias(), we can get passed the str and len parameters which would\ncause a kernel oops in vsnprintf() since it only allows passing a NULL ptr\nwhen the length is also 0. Also, we need to filter out the negative values\nof the len parameter as these will result in a really huge buffer since\nsnprintf() takes size_t parameter while ours is ssize_t...\n\nFound by Linux Verification Center (linuxtesting.org) with the Svace static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35879",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: dynamic: Synchronize of_changeset_destroy() with the devlink removals\n\nIn the following sequence:\n  1) of_platform_depopulate()\n  2) of_overlay_remove()\n\nDuring the step 1, devices are destroyed and devlinks are removed.\nDuring the step 2, OF nodes are destroyed but\n__of_changeset_entry_destroy() can raise warnings related to missing\nof_node_put():\n  ERROR: memory leak, expected refcount 1 instead of 2 ...\n\nIndeed, during the devlink removals performed at step 1, the removal\nitself releasing the device (and the attached of_node) is done by a job\nqueued in a workqueue and so, it is done asynchronously with respect to\nfunction calls.\nWhen the warning is present, of_node_put() will be called but wrongly\ntoo late from the workqueue job.\n\nIn order to be sure that any ongoing devlink removals are done before\nthe of_node destruction, synchronize the of_changeset_destroy() with the\ndevlink removals.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/kbuf: hold io_buffer_list reference over mmap\n\nIf we look up the kbuf, ensure that it doesn't get unregistered until\nafter we're done with it. Since we're inside mmap, we cannot safely use\nthe io_uring lock. Rely on the fact that we can lookup the buffer list\nunder RCU now and grab a reference to it, preventing it from being\nunregistered until we're done with it. The lookup returns the\nio_buffer_list directly with it referenced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35883",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: mchp-pci1xxx: Fix a possible null pointer dereference in pci1xxx_spi_probe\n\nIn function pci1xxxx_spi_probe, there is a potential null pointer that\nmay be caused by a failed memory allocation by the function devm_kzalloc.\nHence, a null pointer check needs to be added to prevent null pointer\ndereferencing later in the code.\n\nTo fix this issue, spi_bus-\u003espi_int[iter] should be checked. The memory\nallocated by devm_kzalloc will be automatically released, so just directly\nreturn -ENOMEM without worrying about memory leaks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudp: do not accept non-tunnel GSO skbs landing in a tunnel\n\nWhen rx-udp-gro-forwarding is enabled UDP packets might be GROed when\nbeing forwarded. If such packets might land in a tunnel this can cause\nvarious issues and udp_gro_receive makes sure this isn't the case by\nlooking for a matching socket. This is performed in\nudp4/6_gro_lookup_skb but only in the current netns. This is an issue\nwith tunneled packets when the endpoint is in another netns. In such\ncases the packets will be GROed at the UDP level, which leads to various\nissues later on. The same thing can happen with rx-gro-list.\n\nWe saw this with geneve packets being GROed at the UDP level. In such\ncase gso_size is set; later the packet goes through the geneve rx path,\nthe geneve header is pulled, the offset are adjusted and frag_list skbs\nare not adjusted with regard to geneve. When those skbs hit\nskb_fragment, it will misbehave. Different outcomes are possible\ndepending on what the GROed skbs look like; from corrupted packets to\nkernel crashes.\n\nOne example is a BUG_ON[1] triggered in skb_segment while processing the\nfrag_list. Because gso_size is wrong (geneve header was pulled)\nskb_segment thinks there is \"geneve header size\" of data in frag_list,\nalthough it's in fact the next packet. The BUG_ON itself has nothing to\ndo with the issue. This is only one of the potential issues.\n\nLooking up for a matching socket in udp_gro_receive is fragile: the\nlookup could be extended to all netns (not speaking about performances)\nbut nothing prevents those packets from being modified in between and we\ncould still not find a matching socket. It's OK to keep the current\nlogic there as it should cover most cases but we also need to make sure\nwe handle tunnel packets being GROed too early.\n\nThis is done by extending the checks in udp_unexpected_gso: GSO packets\nlacking the SKB_GSO_UDP_TUNNEL/_CSUM bits and landing in a tunnel must\nbe segmented.\n\n[1] kernel BUG at net/core/skbuff.c:4408!\n    RIP: 0010:skb_segment+0xd2a/0xf70\n    __udp_gso_segment+0xaa/0x560",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35885",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxbf_gige: stop interface during shutdown\n\nThe mlxbf_gige driver intermittantly encounters a NULL pointer\nexception while the system is shutting down via \"reboot\" command.\nThe mlxbf_driver will experience an exception right after executing\nits shutdown() method.  One example of this exception is:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000070\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\nuser pgtable: 4k pages, 48-bit VAs, pgdp=000000011d373000\n[0000000000000070] pgd=0000000000000000, p4d=0000000000000000\nInternal error: Oops: 96000004 [#1] SMP\nCPU: 0 PID: 13 Comm: ksoftirqd/0 Tainted: G S         OE     5.15.0-bf.6.gef6992a #1\nHardware name: https://www.mellanox.com BlueField SoC/BlueField SoC, BIOS 4.0.2.12669 Apr 21 2023\npstate: 20400009 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : mlxbf_gige_handle_tx_complete+0xc8/0x170 [mlxbf_gige]\nlr : mlxbf_gige_poll+0x54/0x160 [mlxbf_gige]\nsp : ffff8000080d3c10\nx29: ffff8000080d3c10 x28: ffffcce72cbb7000 x27: ffff8000080d3d58\nx26: ffff0000814e7340 x25: ffff331cd1a05000 x24: ffffcce72c4ea008\nx23: ffff0000814e4b40 x22: ffff0000814e4d10 x21: ffff0000814e4128\nx20: 0000000000000000 x19: ffff0000814e4a80 x18: ffffffffffffffff\nx17: 000000000000001c x16: ffffcce72b4553f4 x15: ffff80008805b8a7\nx14: 0000000000000000 x13: 0000000000000030 x12: 0101010101010101\nx11: 7f7f7f7f7f7f7f7f x10: c2ac898b17576267 x9 : ffffcce720fa5404\nx8 : ffff000080812138 x7 : 0000000000002e9a x6 : 0000000000000080\nx5 : ffff00008de3b000 x4 : 0000000000000000 x3 : 0000000000000001\nx2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000\nCall trace:\n mlxbf_gige_handle_tx_complete+0xc8/0x170 [mlxbf_gige]\n mlxbf_gige_poll+0x54/0x160 [mlxbf_gige]\n __napi_poll+0x40/0x1c8\n net_rx_action+0x314/0x3a0\n __do_softirq+0x128/0x334\n run_ksoftirqd+0x54/0x6c\n smpboot_thread_fn+0x14c/0x190\n kthread+0x10c/0x110\n ret_from_fork+0x10/0x20\nCode: 8b070000 f9000ea0 f95056c0 f86178a1 (b9407002)\n---[ end trace 7cc3941aa0d8e6a4 ]---\nKernel panic - not syncing: Oops: Fatal exception in interrupt\nKernel Offset: 0x4ce722520000 from 0xffff800008000000\nPHYS_OFFSET: 0x80000000\nCPU features: 0x000005c1,a3330e5a\nMemory Limit: none\n---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---\n\nDuring system shutdown, the mlxbf_gige driver's shutdown() is always executed.\nHowever, the driver's stop() method will only execute if networking interface\nconfiguration logic within the Linux distribution has been setup to do so.\n\nIf shutdown() executes but stop() does not execute, NAPI remains enabled\nand this can lead to an exception if NAPI is scheduled while the hardware\ninterface has only been partially deinitialized.\n\nThe networking interface managed by the mlxbf_gige driver must be properly\nstopped during system shutdown so that IFF_UP is cleared, the hardware\ninterface is put into a clean state, and NAPI is fully deinitialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35886",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix infinite recursion in fib6_dump_done().\n\nsyzkaller reported infinite recursive calls of fib6_dump_done() during\nnetlink socket destruction.  [1]\n\nFrom the log, syzkaller sent an AF_UNSPEC RTM_GETROUTE message, and then\nthe response was generated.  The following recvmmsg() resumed the dump\nfor IPv6, but the first call of inet6_dump_fib() failed at kzalloc() due\nto the fault injection.  [0]\n\n  12:01:34 executing program 3:\n  r0 = socket$nl_route(0x10, 0x3, 0x0)\n  sendmsg$nl_route(r0, ... snip ...)\n  recvmmsg(r0, ... snip ...) (fail_nth: 8)\n\nHere, fib6_dump_done() was set to nlk_sk(sk)-\u003ecb.done, and the next call\nof inet6_dump_fib() set it to nlk_sk(sk)-\u003ecb.args[3].  syzkaller stopped\nreceiving the response halfway through, and finally netlink_sock_destruct()\ncalled nlk_sk(sk)-\u003ecb.done().\n\nfib6_dump_done() calls fib6_dump_end() and nlk_sk(sk)-\u003ecb.done() if it\nis still not NULL.  fib6_dump_end() rewrites nlk_sk(sk)-\u003ecb.done() by\nnlk_sk(sk)-\u003ecb.args[3], but it has the same function, not NULL, calling\nitself recursively and hitting the stack guard page.\n\nTo avoid the issue, let's set the destructor after kzalloc().\n\n[0]:\nFAULT_INJECTION: forcing a failure.\nname failslab, interval 1, probability 0, space 0, times 0\nCPU: 1 PID: 432110 Comm: syz-executor.3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl (lib/dump_stack.c:117)\n should_fail_ex (lib/fault-inject.c:52 lib/fault-inject.c:153)\n should_failslab (mm/slub.c:3733)\n kmalloc_trace (mm/slub.c:3748 mm/slub.c:3827 mm/slub.c:3992)\n inet6_dump_fib (./include/linux/slab.h:628 ./include/linux/slab.h:749 net/ipv6/ip6_fib.c:662)\n rtnl_dump_all (net/core/rtnetlink.c:4029)\n netlink_dump (net/netlink/af_netlink.c:2269)\n netlink_recvmsg (net/netlink/af_netlink.c:1988)\n ____sys_recvmsg (net/socket.c:1046 net/socket.c:2801)\n ___sys_recvmsg (net/socket.c:2846)\n do_recvmmsg (net/socket.c:2943)\n __x64_sys_recvmmsg (net/socket.c:3041 net/socket.c:3034 net/socket.c:3034)\n\n[1]:\nBUG: TASK stack guard page was hit at 00000000f2fa9af1 (stack is 00000000b7912430..000000009a436beb)\nstack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 223719 Comm: kworker/1:3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nWorkqueue: events netlink_sock_destruct_work\nRIP: 0010:fib6_dump_done (net/ipv6/ip6_fib.c:570)\nCode: 3c 24 e8 f3 e9 51 fd e9 28 fd ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 41 57 41 56 41 55 41 54 55 48 89 fd \u003c53\u003e 48 8d 5d 60 e8 b6 4d 07 fd 48 89 da 48 b8 00 00 00 00 00 fc ff\nRSP: 0018:ffffc9000d980000 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: ffffffff84405990 RCX: ffffffff844059d3\nRDX: ffff8881028e0000 RSI: ffffffff84405ac2 RDI: ffff88810c02f358\nRBP: ffff88810c02f358 R08: 0000000000000007 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000224 R12: 0000000000000000\nR13: ffff888007c82c78 R14: ffff888007c82c68 R15: ffff888007c82c68\nFS:  0000000000000000(0000) GS:ffff88811b100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffc9000d97fff8 CR3: 0000000102309002 CR4: 0000000000770ef0\nPKRU: 55555554\nCall Trace:\n \u003c#DF\u003e\n \u003c/#DF\u003e\n \u003cTASK\u003e\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n ...\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n netlink_sock_destruct (net/netlink/af_netlink.c:401)\n __sk_destruct (net/core/sock.c:2177 (discriminator 2))\n sk_destruct (net/core/sock.c:2224)\n __sk_free (net/core/sock.c:2235)\n sk_free (net/core/sock.c:2246)\n process_one_work (kernel/workqueue.c:3259)\n worker_thread (kernel/workqueue.c:3329 kernel/workqueue.\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35887",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: fix use-after-free bugs caused by ax25_ds_del_timer\n\nWhen the ax25 device is detaching, the ax25_dev_device_down()\ncalls ax25_ds_del_timer() to cleanup the slave_timer. When\nthe timer handler is running, the ax25_ds_del_timer() that\ncalls del_timer() in it will return directly. As a result,\nthe use-after-free bugs could happen, one of the scenarios\nis shown below:\n\n      (Thread 1)          |      (Thread 2)\n                          | ax25_ds_timeout()\nax25_dev_device_down()    |\n  ax25_ds_del_timer()     |\n    del_timer()           |\n  ax25_dev_put() //FREE   |\n                          |  ax25_dev-\u003e //USE\n\nIn order to mitigate bugs, when the device is detaching, use\ntimer_shutdown_sync() to stop the timer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35889",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix kernel panic on unknown packet types\n\nIn the very rare case where a packet type is unknown to the driver,\nidpf_rx_process_skb_fields would return early without calling\neth_type_trans to set the skb protocol / the network layer handler.\nThis is especially problematic if tcpdump is running when such a\npacket is received, i.e. it would cause a kernel panic.\n\nInstead, call eth_type_trans for every single packet, even when\nthe packet type is unknown.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngro: fix ownership transfer\n\nIf packets are GROed with fraglist they might be segmented later on and\ncontinue their journey in the stack. In skb_segment_list those skbs can\nbe reused as-is. This is an issue as their destructor was removed in\nskb_gro_receive_list but not the reference to their socket, and then\nthey can't be orphaned. Fix this by also removing the reference to the\nsocket.\n\nFor example this could be observed,\n\n  kernel BUG at include/linux/skbuff.h:3131!  (skb_orphan)\n  RIP: 0010:ip6_rcv_core+0x11bc/0x19a0\n  Call Trace:\n   ipv6_list_rcv+0x250/0x3f0\n   __netif_receive_skb_list_core+0x49d/0x8f0\n   netif_receive_skb_list_internal+0x634/0xd40\n   napi_complete_done+0x1d2/0x7d0\n   gro_cell_poll+0x118/0x1f0\n\nA similar construction is found in skb_gro_receive, apply the same\nchange there.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35891",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: micrel: Fix potential null pointer dereference\n\nIn lan8814_get_sig_rx() and lan8814_get_sig_tx() ptp_parse_header() may\nreturn NULL as ptp_header due to abnormal packet type or corrupted packet.\nFix this bug by adding ptp_header check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35892",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: fix lockdep splat in qdisc_tree_reduce_backlog()\n\nqdisc_tree_reduce_backlog() is called with the qdisc lock held,\nnot RTNL.\n\nWe must use qdisc_lookup_rcu() instead of qdisc_lookup()\n\nsyzbot reported:\n\nWARNING: suspicious RCU usage\n6.1.74-syzkaller #0 Not tainted\n-----------------------------\nnet/sched/sch_api.c:305 suspicious rcu_dereference_protected() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n3 locks held by udevd/1142:\n  #0: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_lock_acquire include/linux/rcupdate.h:306 [inline]\n  #0: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_read_lock include/linux/rcupdate.h:747 [inline]\n  #0: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: net_tx_action+0x64a/0x970 net/core/dev.c:5282\n  #1: ffff888171861108 (\u0026sch-\u003eq.lock){+.-.}-{2:2}, at: spin_lock include/linux/spinlock.h:350 [inline]\n  #1: ffff888171861108 (\u0026sch-\u003eq.lock){+.-.}-{2:2}, at: net_tx_action+0x754/0x970 net/core/dev.c:5297\n  #2: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_lock_acquire include/linux/rcupdate.h:306 [inline]\n  #2: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_read_lock include/linux/rcupdate.h:747 [inline]\n  #2: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: qdisc_tree_reduce_backlog+0x84/0x580 net/sched/sch_api.c:792\n\nstack backtrace:\nCPU: 1 PID: 1142 Comm: udevd Not tainted 6.1.74-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nCall Trace:\n \u003cTASK\u003e\n  [\u003cffffffff85b85f14\u003e] __dump_stack lib/dump_stack.c:88 [inline]\n  [\u003cffffffff85b85f14\u003e] dump_stack_lvl+0x1b1/0x28f lib/dump_stack.c:106\n  [\u003cffffffff85b86007\u003e] dump_stack+0x15/0x1e lib/dump_stack.c:113\n  [\u003cffffffff81802299\u003e] lockdep_rcu_suspicious+0x1b9/0x260 kernel/locking/lockdep.c:6592\n  [\u003cffffffff84f0054c\u003e] qdisc_lookup+0xac/0x6f0 net/sched/sch_api.c:305\n  [\u003cffffffff84f037c3\u003e] qdisc_tree_reduce_backlog+0x243/0x580 net/sched/sch_api.c:811\n  [\u003cffffffff84f5b78c\u003e] pfifo_tail_enqueue+0x32c/0x4b0 net/sched/sch_fifo.c:51\n  [\u003cffffffff84fbcf63\u003e] qdisc_enqueue include/net/sch_generic.h:833 [inline]\n  [\u003cffffffff84fbcf63\u003e] netem_dequeue+0xeb3/0x15d0 net/sched/sch_netem.c:723\n  [\u003cffffffff84eecab9\u003e] dequeue_skb net/sched/sch_generic.c:292 [inline]\n  [\u003cffffffff84eecab9\u003e] qdisc_restart net/sched/sch_generic.c:397 [inline]\n  [\u003cffffffff84eecab9\u003e] __qdisc_run+0x249/0x1e60 net/sched/sch_generic.c:415\n  [\u003cffffffff84d7aa96\u003e] qdisc_run+0xd6/0x260 include/net/pkt_sched.h:125\n  [\u003cffffffff84d85d29\u003e] net_tx_action+0x7c9/0x970 net/core/dev.c:5313\n  [\u003cffffffff85e002bd\u003e] __do_softirq+0x2bd/0x9bd kernel/softirq.c:616\n  [\u003cffffffff81568bca\u003e] invoke_softirq kernel/softirq.c:447 [inline]\n  [\u003cffffffff81568bca\u003e] __irq_exit_rcu+0xca/0x230 kernel/softirq.c:700\n  [\u003cffffffff81568ae9\u003e] irq_exit_rcu+0x9/0x20 kernel/softirq.c:712\n  [\u003cffffffff85b89f52\u003e] sysvec_apic_timer_interrupt+0x42/0x90 arch/x86/kernel/apic/apic.c:1107\n  [\u003cffffffff85c00ccb\u003e] asm_sysvec_apic_timer_interrupt+0x1b/0x20 arch/x86/include/asm/idtentry.h:656",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_skbmod: prevent kernel-infoleak\n\nsyzbot found that tcf_skbmod_dump() was copying four bytes\nfrom kernel stack to user space [1].\n\nThe issue here is that 'struct tc_skbmod' has a four bytes hole.\n\nWe need to clear the structure before filling fields.\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n BUG: KMSAN: kernel-infoleak in copy_to_user_iter lib/iov_iter.c:24 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_ubuf include/linux/iov_iter.h:29 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance include/linux/iov_iter.h:271 [inline]\n BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n  instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n  copy_to_user_iter lib/iov_iter.c:24 [inline]\n  iterate_ubuf include/linux/iov_iter.h:29 [inline]\n  iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n  iterate_and_advance include/linux/iov_iter.h:271 [inline]\n  _copy_to_iter+0x366/0x2520 lib/iov_iter.c:185\n  copy_to_iter include/linux/uio.h:196 [inline]\n  simple_copy_to_iter net/core/datagram.c:532 [inline]\n  __skb_datagram_iter+0x185/0x1000 net/core/datagram.c:420\n  skb_copy_datagram_iter+0x5c/0x200 net/core/datagram.c:546\n  skb_copy_datagram_msg include/linux/skbuff.h:4050 [inline]\n  netlink_recvmsg+0x432/0x1610 net/netlink/af_netlink.c:1962\n  sock_recvmsg_nosec net/socket.c:1046 [inline]\n  sock_recvmsg+0x2c4/0x340 net/socket.c:1068\n  __sys_recvfrom+0x35a/0x5f0 net/socket.c:2242\n  __do_sys_recvfrom net/socket.c:2260 [inline]\n  __se_sys_recvfrom net/socket.c:2256 [inline]\n  __x64_sys_recvfrom+0x126/0x1d0 net/socket.c:2256\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was stored to memory at:\n  pskb_expand_head+0x30f/0x19d0 net/core/skbuff.c:2253\n  netlink_trim+0x2c2/0x330 net/netlink/af_netlink.c:1317\n  netlink_unicast+0x9f/0x1260 net/netlink/af_netlink.c:1351\n  nlmsg_unicast include/net/netlink.h:1144 [inline]\n  nlmsg_notify+0x21d/0x2f0 net/netlink/af_netlink.c:2610\n  rtnetlink_send+0x73/0x90 net/core/rtnetlink.c:741\n  rtnetlink_maybe_send include/linux/rtnetlink.h:17 [inline]\n  tcf_add_notify net/sched/act_api.c:2048 [inline]\n  tcf_action_add net/sched/act_api.c:2071 [inline]\n  tc_ctl_action+0x146e/0x19d0 net/sched/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737/0x1900 net/core/rtnetlink.c:6595\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netlink.c:2559\n  rtnetlink_rcv+0x34/0x40 net/core/rtnetlink.c:6613\n  netlink_unicast_kernel net/netlink/af_netlink.c:1335 [inline]\n  netlink_unicast+0xf4c/0x1260 net/netlink/af_netlink.c:1361\n  netlink_sendmsg+0x10df/0x11f0 net/netlink/af_netlink.c:1905\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  ____sys_sendmsg+0x877/0xb60 net/socket.c:2584\n  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n  __sys_sendmsg net/socket.c:2667 [inline]\n  __do_sys_sendmsg net/socket.c:2676 [inline]\n  __se_sys_sendmsg net/socket.c:2674 [inline]\n  __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2674\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was stored to memory at:\n  __nla_put lib/nlattr.c:1041 [inline]\n  nla_put+0x1c6/0x230 lib/nlattr.c:1099\n  tcf_skbmod_dump+0x23f/0xc20 net/sched/act_skbmod.c:256\n  tcf_action_dump_old net/sched/act_api.c:1191 [inline]\n  tcf_action_dump_1+0x85e/0x970 net/sched/act_api.c:1227\n  tcf_action_dump+0x1fd/0x460 net/sched/act_api.c:1251\n  tca_get_fill+0x519/0x7a0 net/sched/act_api.c:1628\n  tcf_add_notify_msg net/sched/act_api.c:2023 [inline]\n  tcf_add_notify net/sched/act_api.c:2042 [inline]\n  tcf_action_add net/sched/act_api.c:2071 [inline]\n  tc_ctl_action+0x1365/0x19d0 net/sched/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737/0x1900 net/core/rtnetlink.c:6595\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netli\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35896",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: validate user input for expected length\n\nI got multiple syzbot reports showing old bugs exposed\nby BPF after commit 20f2505fb436 (\"bpf: Try to avoid kzalloc\nin cgroup/{s,g}etsockopt\")\n\nsetsockopt() @optlen argument should be taken into account\nbefore copying data.\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in do_replace net/ipv4/netfilter/ip_tables.c:1111 [inline]\n BUG: KASAN: slab-out-of-bounds in do_ipt_set_ctl+0x902/0x3dd0 net/ipv4/netfilter/ip_tables.c:1627\nRead of size 96 at addr ffff88802cd73da0 by task syz-executor.4/7238\n\nCPU: 1 PID: 7238 Comm: syz-executor.4 Not tainted 6.9.0-rc2-next-20240403-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  kasan_check_range+0x282/0x290 mm/kasan/generic.c:189\n  __asan_memcpy+0x29/0x70 mm/kasan/shadow.c:105\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  do_replace net/ipv4/netfilter/ip_tables.c:1111 [inline]\n  do_ipt_set_ctl+0x902/0x3dd0 net/ipv4/netfilter/ip_tables.c:1627\n  nf_setsockopt+0x295/0x2c0 net/netfilter/nf_sockopt.c:101\n  do_sock_setsockopt+0x3af/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x72/0x7a\nRIP: 0033:0x7fd22067dde9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fd21f9ff0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fd2207abf80 RCX: 00007fd22067dde9\nRDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000003\nRBP: 00007fd2206ca47a R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000020000880 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fd2207abf80 R15: 00007ffd2d0170d8\n \u003c/TASK\u003e\n\nAllocated by task 7238:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:370 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:4069 [inline]\n  __kmalloc_noprof+0x200/0x410 mm/slub.c:4082\n  kmalloc_noprof include/linux/slab.h:664 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd47/0x1050 kernel/bpf/cgroup.c:1869\n  do_sock_setsockopt+0x6b4/0x720 net/socket.c:2293\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x72/0x7a\n\nThe buggy address belongs to the object at ffff88802cd73da0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 0 bytes inside of\n allocated 1-byte region [ffff88802cd73da0, ffff88802cd73da1)\n\nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88802cd73020 pfn:0x2cd73\nflags: 0xfff80000000000(node=0|zone=1|lastcpupid=0xfff)\npage_type: 0xffffefff(slab)\nraw: 00fff80000000000 ffff888015041280 dead000000000100 dead000000000122\nraw: ffff88802cd73020 000000008080007f 00000001ffffefff 00\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_flowtable_type_get()\n\nnft_unregister_flowtable_type() within nf_flow_inet_module_exit() can\nconcurrent with __nft_flowtable_type_get() within nf_tables_newflowtable().\nAnd thhere is not any protection when iterate over nf_tables_flowtables\nlist in __nft_flowtable_type_get(). Therefore, there is pertential\ndata-race of nf_tables_flowtables list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_flowtables list\nin __nft_flowtable_type_get(), and use rcu_read_lock() in the caller\nnft_flowtable_type_get() to protect the entire type query process.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35899",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: flush pending destroy work before exit_net release\n\nSimilar to 2c9f0293280e (\"netfilter: nf_tables: flush pending destroy\nwork before netlink notifier\") to address a race between exit_net and\nthe destroy workqueue.\n\nThe trace below shows an element to be released via destroy workqueue\nwhile exit_net path (triggered via module removal) has already released\nthe set that is used in such transaction.\n\n[ 1360.547789] BUG: KASAN: slab-use-after-free in nf_tables_trans_destroy_work+0x3f5/0x590 [nf_tables]\n[ 1360.547861] Read of size 8 at addr ffff888140500cc0 by task kworker/4:1/152465\n[ 1360.547870] CPU: 4 PID: 152465 Comm: kworker/4:1 Not tainted 6.8.0+ #359\n[ 1360.547882] Workqueue: events nf_tables_trans_destroy_work [nf_tables]\n[ 1360.547984] Call Trace:\n[ 1360.547991]  \u003cTASK\u003e\n[ 1360.547998]  dump_stack_lvl+0x53/0x70\n[ 1360.548014]  print_report+0xc4/0x610\n[ 1360.548026]  ? __virt_addr_valid+0xba/0x160\n[ 1360.548040]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10\n[ 1360.548054]  ? nf_tables_trans_destroy_work+0x3f5/0x590 [nf_tables]\n[ 1360.548176]  kasan_report+0xae/0xe0\n[ 1360.548189]  ? nf_tables_trans_destroy_work+0x3f5/0x590 [nf_tables]\n[ 1360.548312]  nf_tables_trans_destroy_work+0x3f5/0x590 [nf_tables]\n[ 1360.548447]  ? __pfx_nf_tables_trans_destroy_work+0x10/0x10 [nf_tables]\n[ 1360.548577]  ? _raw_spin_unlock_irq+0x18/0x30\n[ 1360.548591]  process_one_work+0x2f1/0x670\n[ 1360.548610]  worker_thread+0x4d3/0x760\n[ 1360.548627]  ? __pfx_worker_thread+0x10/0x10\n[ 1360.548640]  kthread+0x16b/0x1b0\n[ 1360.548653]  ? __pfx_kthread+0x10/0x10\n[ 1360.548665]  ret_from_fork+0x2f/0x50\n[ 1360.548679]  ? __pfx_kthread+0x10/0x10\n[ 1360.548690]  ret_from_fork_asm+0x1a/0x30\n[ 1360.548707]  \u003c/TASK\u003e\n\n[ 1360.548719] Allocated by task 192061:\n[ 1360.548726]  kasan_save_stack+0x20/0x40\n[ 1360.548739]  kasan_save_track+0x14/0x30\n[ 1360.548750]  __kasan_kmalloc+0x8f/0xa0\n[ 1360.548760]  __kmalloc_node+0x1f1/0x450\n[ 1360.548771]  nf_tables_newset+0x10c7/0x1b50 [nf_tables]\n[ 1360.548883]  nfnetlink_rcv_batch+0xbc4/0xdc0 [nfnetlink]\n[ 1360.548909]  nfnetlink_rcv+0x1a8/0x1e0 [nfnetlink]\n[ 1360.548927]  netlink_unicast+0x367/0x4f0\n[ 1360.548935]  netlink_sendmsg+0x34b/0x610\n[ 1360.548944]  ____sys_sendmsg+0x4d4/0x510\n[ 1360.548953]  ___sys_sendmsg+0xc9/0x120\n[ 1360.548961]  __sys_sendmsg+0xbe/0x140\n[ 1360.548971]  do_syscall_64+0x55/0x120\n[ 1360.548982]  entry_SYSCALL_64_after_hwframe+0x55/0x5d\n\n[ 1360.548994] Freed by task 192222:\n[ 1360.548999]  kasan_save_stack+0x20/0x40\n[ 1360.549009]  kasan_save_track+0x14/0x30\n[ 1360.549019]  kasan_save_free_info+0x3b/0x60\n[ 1360.549028]  poison_slab_object+0x100/0x180\n[ 1360.549036]  __kasan_slab_free+0x14/0x30\n[ 1360.549042]  kfree+0xb6/0x260\n[ 1360.549049]  __nft_release_table+0x473/0x6a0 [nf_tables]\n[ 1360.549131]  nf_tables_exit_net+0x170/0x240 [nf_tables]\n[ 1360.549221]  ops_exit_list+0x50/0xa0\n[ 1360.549229]  free_exit_list+0x101/0x140\n[ 1360.549236]  unregister_pernet_operations+0x107/0x160\n[ 1360.549245]  unregister_pernet_subsys+0x1c/0x30\n[ 1360.549254]  nf_tables_module_exit+0x43/0x80 [nf_tables]\n[ 1360.549345]  __do_sys_delete_module+0x253/0x370\n[ 1360.549352]  do_syscall_64+0x55/0x120\n[ 1360.549360]  entry_SYSCALL_64_after_hwframe+0x55/0x5d\n\n(gdb) list *__nft_release_table+0x473\n0x1e033 is in __nft_release_table (net/netfilter/nf_tables_api.c:11354).\n11349           list_for_each_entry_safe(flowtable, nf, \u0026table-\u003eflowtables, list) {\n11350                   list_del(\u0026flowtable-\u003elist);\n11351                   nft_use_dec(\u0026table-\u003euse);\n11352                   nf_tables_flowtable_destroy(flowtable);\n11353           }\n11354           list_for_each_entry_safe(set, ns, \u0026table-\u003esets, list) {\n11355                   list_del(\u0026set-\u003elist);\n11356                   nft_use_dec(\u0026table-\u003euse);\n11357                   if (set-\u003eflags \u0026 (NFT_SET_MAP | NFT_SET_OBJECT))\n11358                           nft_map_deactivat\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: reject new basechain after table flag update\n\nWhen dormant flag is toggled, hooks are disabled in the commit phase by\niterating over current chains in table (existing and new).\n\nThe following configuration allows for an inconsistent state:\n\n  add table x\n  add chain x y { type filter hook input priority 0; }\n  add table x { flags dormant; }\n  add chain x w { type filter hook input priority 1; }\n\nwhich triggers the following warning when trying to unregister chain w\nwhich is already unregistered.\n\n[  127.322252] WARNING: CPU: 7 PID: 1211 at net/netfilter/core.c:50                                                                     1 __nf_unregister_net_hook+0x21a/0x260\n[...]\n[  127.322519] Call Trace:\n[  127.322521]  \u003cTASK\u003e\n[  127.322524]  ? __warn+0x9f/0x1a0\n[  127.322531]  ? __nf_unregister_net_hook+0x21a/0x260\n[  127.322537]  ? report_bug+0x1b1/0x1e0\n[  127.322545]  ? handle_bug+0x3c/0x70\n[  127.322552]  ? exc_invalid_op+0x17/0x40\n[  127.322556]  ? asm_exc_invalid_op+0x1a/0x20\n[  127.322563]  ? kasan_save_free_info+0x3b/0x60\n[  127.322570]  ? __nf_unregister_net_hook+0x6a/0x260\n[  127.322577]  ? __nf_unregister_net_hook+0x21a/0x260\n[  127.322583]  ? __nf_unregister_net_hook+0x6a/0x260\n[  127.322590]  ? __nf_tables_unregister_hook+0x8a/0xe0 [nf_tables]\n[  127.322655]  nft_table_disable+0x75/0xf0 [nf_tables]\n[  127.322717]  nf_tables_commit+0x2571/0x2620 [nf_tables]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix Rx DMA datasize and skb_over_panic\n\nmana_get_rxbuf_cfg() aligns the RX buffer's DMA datasize to be\nmultiple of 64. So a packet slightly bigger than mtu+14, say 1536,\ncan be received and cause skb_over_panic.\n\nSample dmesg:\n[ 5325.237162] skbuff: skb_over_panic: text:ffffffffc043277a len:1536 put:1536 head:ff1100018b517000 data:ff1100018b517100 tail:0x700 end:0x6ea dev:\u003cNULL\u003e\n[ 5325.243689] ------------[ cut here ]------------\n[ 5325.245748] kernel BUG at net/core/skbuff.c:192!\n[ 5325.247838] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[ 5325.258374] RIP: 0010:skb_panic+0x4f/0x60\n[ 5325.302941] Call Trace:\n[ 5325.304389]  \u003cIRQ\u003e\n[ 5325.315794]  ? skb_panic+0x4f/0x60\n[ 5325.317457]  ? asm_exc_invalid_op+0x1f/0x30\n[ 5325.319490]  ? skb_panic+0x4f/0x60\n[ 5325.321161]  skb_put+0x4e/0x50\n[ 5325.322670]  mana_poll+0x6fa/0xb50 [mana]\n[ 5325.324578]  __napi_poll+0x33/0x1e0\n[ 5325.326328]  net_rx_action+0x12e/0x280\n\nAs discussed internally, this alignment is not necessary. To fix\nthis bug, remove it from the code. So oversized packets will be\nmarked as CQE_RX_TRUNCATED by NIC, and dropped.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35903",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/bpf: Fix IP after emitting call depth accounting\n\nAdjust the IP passed to `emit_patch` so it calculates the correct offset\nfor the CALL instruction if `x86_call_depth_emit_accounting` emits code.\nOtherwise we will skip some instructions and most likely crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: avoid dereference of garbage after mount failure\n\nIn case kern_mount() fails and returns an error pointer return in the\nerror branch instead of continuing and dereferencing the error pointer.\n\nWhile on it drop the never read static variable selinuxfs_mount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Protect against int overflow for stack access size\n\nThis patch re-introduces protection against the size of access to stack\nmemory being negative; the access size can appear negative as a result\nof overflowing its signed int representation. This should not actually\nhappen, as there are other protections along the way, but we should\nprotect against it anyway. One code path was missing such protections\n(fixed in the previous patch in the series), causing out-of-bounds array\naccesses in check_stack_range_initialized(). This patch causes the\nverification of a program with such a non-sensical access size to fail.\n\nThis check used to exist in a more indirect way, but was inadvertendly\nremoved in a833a17aeac7.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxbf_gige: call request_irq() after NAPI initialized\n\nThe mlxbf_gige driver encounters a NULL pointer exception in\nmlxbf_gige_open() when kdump is enabled.  The sequence to reproduce\nthe exception is as follows:\na) enable kdump\nb) trigger kdump via \"echo c \u003e /proc/sysrq-trigger\"\nc) kdump kernel executes\nd) kdump kernel loads mlxbf_gige module\ne) the mlxbf_gige module runs its open() as the\n   the \"oob_net0\" interface is brought up\nf) mlxbf_gige module will experience an exception\n   during its open(), something like:\n\n     Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n     Mem abort info:\n       ESR = 0x0000000086000004\n       EC = 0x21: IABT (current EL), IL = 32 bits\n       SET = 0, FnV = 0\n       EA = 0, S1PTW = 0\n       FSC = 0x04: level 0 translation fault\n     user pgtable: 4k pages, 48-bit VAs, pgdp=00000000e29a4000\n     [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n     Internal error: Oops: 0000000086000004 [#1] SMP\n     CPU: 0 PID: 812 Comm: NetworkManager Tainted: G           OE     5.15.0-1035-bluefield #37-Ubuntu\n     Hardware name: https://www.mellanox.com BlueField-3 SmartNIC Main Card/BlueField-3 SmartNIC Main Card, BIOS 4.6.0.13024 Jan 19 2024\n     pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n     pc : 0x0\n     lr : __napi_poll+0x40/0x230\n     sp : ffff800008003e00\n     x29: ffff800008003e00 x28: 0000000000000000 x27: 00000000ffffffff\n     x26: ffff000066027238 x25: ffff00007cedec00 x24: ffff800008003ec8\n     x23: 000000000000012c x22: ffff800008003eb7 x21: 0000000000000000\n     x20: 0000000000000001 x19: ffff000066027238 x18: 0000000000000000\n     x17: ffff578fcb450000 x16: ffffa870b083c7c0 x15: 0000aaab010441d0\n     x14: 0000000000000001 x13: 00726f7272655f65 x12: 6769675f6662786c\n     x11: 0000000000000000 x10: 0000000000000000 x9 : ffffa870b0842398\n     x8 : 0000000000000004 x7 : fe5a48b9069706ea x6 : 17fdb11fc84ae0d2\n     x5 : d94a82549d594f35 x4 : 0000000000000000 x3 : 0000000000400100\n     x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000066027238\n     Call trace:\n      0x0\n      net_rx_action+0x178/0x360\n      __do_softirq+0x15c/0x428\n      __irq_exit_rcu+0xac/0xec\n      irq_exit+0x18/0x2c\n      handle_domain_irq+0x6c/0xa0\n      gic_handle_irq+0xec/0x1b0\n      call_on_irq_stack+0x20/0x2c\n      do_interrupt_handler+0x5c/0x70\n      el1_interrupt+0x30/0x50\n      el1h_64_irq_handler+0x18/0x2c\n      el1h_64_irq+0x7c/0x80\n      __setup_irq+0x4c0/0x950\n      request_threaded_irq+0xf4/0x1bc\n      mlxbf_gige_request_irqs+0x68/0x110 [mlxbf_gige]\n      mlxbf_gige_open+0x5c/0x170 [mlxbf_gige]\n      __dev_open+0x100/0x220\n      __dev_change_flags+0x16c/0x1f0\n      dev_change_flags+0x2c/0x70\n      do_setlink+0x220/0xa40\n      __rtnl_newlink+0x56c/0x8a0\n      rtnl_newlink+0x58/0x84\n      rtnetlink_rcv_msg+0x138/0x3c4\n      netlink_rcv_skb+0x64/0x130\n      rtnetlink_rcv+0x20/0x30\n      netlink_unicast+0x2ec/0x360\n      netlink_sendmsg+0x278/0x490\n      __sock_sendmsg+0x5c/0x6c\n      ____sys_sendmsg+0x290/0x2d4\n      ___sys_sendmsg+0x84/0xd0\n      __sys_sendmsg+0x70/0xd0\n      __arm64_sys_sendmsg+0x2c/0x40\n      invoke_syscall+0x78/0x100\n      el0_svc_common.constprop.0+0x54/0x184\n      do_el0_svc+0x30/0xac\n      el0_svc+0x48/0x160\n      el0t_64_sync_handler+0xa4/0x12c\n      el0t_64_sync+0x1a4/0x1a8\n     Code: bad PC value\n     ---[ end trace 7d1c3f3bf9d81885 ]---\n     Kernel panic - not syncing: Oops: Fatal exception in interrupt\n     Kernel Offset: 0x2870a7a00000 from 0xffff800008000000\n     PHYS_OFFSET: 0x80000000\n     CPU features: 0x0,000005c1,a3332a5a\n     Memory Limit: none\n     ---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---\n\nThe exception happens because there is a pending RX interrupt before the\ncall to request_irq(RX IRQ) executes.  Then, the RX IRQ handler fires\nimmediately after this request_irq() completes. The\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35908",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: get psock ref after taking rxlock to avoid leak\n\nAt the start of tls_sw_recvmsg, we take a reference on the psock, and\nthen call tls_rx_reader_lock. If that fails, we return directly\nwithout releasing the reference.\n\nInstead of adding a new label, just take the reference after locking\nhas succeeded, since we don't need it before.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: t7xx: Split 64bit accesses to fix alignment issues\n\nSome of the registers are aligned on a 32bit boundary, causing\nalignment faults on 64bit platforms.\n\n Unable to handle kernel paging request at virtual address ffffffc084a1d004\n Mem abort info:\n ESR = 0x0000000096000061\n EC = 0x25: DABT (current EL), IL = 32 bits\n SET = 0, FnV = 0\n EA = 0, S1PTW = 0\n FSC = 0x21: alignment fault\n Data abort info:\n ISV = 0, ISS = 0x00000061, ISS2 = 0x00000000\n CM = 0, WnR = 1, TnD = 0, TagAccess = 0\n GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000046ad6000\n [ffffffc084a1d004] pgd=100000013ffff003, p4d=100000013ffff003, pud=100000013ffff003, pmd=0068000020a00711\n Internal error: Oops: 0000000096000061 [#1] SMP\n Modules linked in: mtk_t7xx(+) qcserial pppoe ppp_async option nft_fib_inet nf_flow_table_inet mt7921u(O) mt7921s(O) mt7921e(O) mt7921_common(O) iwlmvm(O) iwldvm(O) usb_wwan rndis_host qmi_wwan pppox ppp_generic nft_reject_ipv6 nft_reject_ipv4 nft_reject_inet nft_reject nft_redir nft_quota nft_numgen nft_nat nft_masq nft_log nft_limit nft_hash nft_flow_offload nft_fib_ipv6 nft_fib_ipv4 nft_fib nft_ct nft_chain_nat nf_tables nf_nat nf_flow_table nf_conntrack mt7996e(O) mt792x_usb(O) mt792x_lib(O) mt7915e(O) mt76_usb(O) mt76_sdio(O) mt76_connac_lib(O) mt76(O) mac80211(O) iwlwifi(O) huawei_cdc_ncm cfg80211(O) cdc_ncm cdc_ether wwan usbserial usbnet slhc sfp rtc_pcf8563 nfnetlink nf_reject_ipv6 nf_reject_ipv4 nf_log_syslog nf_defrag_ipv6 nf_defrag_ipv4 mt6577_auxadc mdio_i2c libcrc32c compat(O) cdc_wdm cdc_acm at24 crypto_safexcel pwm_fan i2c_gpio i2c_smbus industrialio i2c_algo_bit i2c_mux_reg i2c_mux_pca954x i2c_mux_pca9541 i2c_mux_gpio i2c_mux dummy oid_registry tun sha512_arm64 sha1_ce sha1_generic seqiv\n md5 geniv des_generic libdes cbc authencesn authenc leds_gpio xhci_plat_hcd xhci_pci xhci_mtk_hcd xhci_hcd nvme nvme_core gpio_button_hotplug(O) dm_mirror dm_region_hash dm_log dm_crypt dm_mod dax usbcore usb_common ptp aquantia pps_core mii tpm encrypted_keys trusted\n CPU: 3 PID: 5266 Comm: kworker/u9:1 Tainted: G O 6.6.22 #0\n Hardware name: Bananapi BPI-R4 (DT)\n Workqueue: md_hk_wq t7xx_fsm_uninit [mtk_t7xx]\n pstate: 804000c5 (Nzcv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : t7xx_cldma_hw_set_start_addr+0x1c/0x3c [mtk_t7xx]\n lr : t7xx_cldma_start+0xac/0x13c [mtk_t7xx]\n sp : ffffffc085d63d30\n x29: ffffffc085d63d30 x28: 0000000000000000 x27: 0000000000000000\n x26: 0000000000000000 x25: ffffff80c804f2c0 x24: ffffff80ca196c05\n x23: 0000000000000000 x22: ffffff80c814b9b8 x21: ffffff80c814b128\n x20: 0000000000000001 x19: ffffff80c814b080 x18: 0000000000000014\n x17: 0000000055c9806b x16: 000000007c5296d0 x15: 000000000f6bca68\n x14: 00000000dbdbdce4 x13: 000000001aeaf72a x12: 0000000000000001\n x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\n x8 : ffffff80ca1ef6b4 x7 : ffffff80c814b818 x6 : 0000000000000018\n x5 : 0000000000000870 x4 : 0000000000000000 x3 : 0000000000000000\n x2 : 000000010a947000 x1 : ffffffc084a1d004 x0 : ffffffc084a1d004\n Call trace:\n t7xx_cldma_hw_set_start_addr+0x1c/0x3c [mtk_t7xx]\n t7xx_fsm_uninit+0x578/0x5ec [mtk_t7xx]\n process_one_work+0x154/0x2a0\n worker_thread+0x2ac/0x488\n kthread+0xe0/0xec\n ret_from_fork+0x10/0x20\n Code: f9400800 91001000 8b214001 d50332bf (f9000022)\n ---[ end trace 0000000000000000 ]---\n\nThe inclusion of io-64-nonatomic-lo-hi.h indicates that all 64bit\naccesses can be replaced by pairs of nonatomic 32bit access.  Fix\nalignment by forcing all accesses to be 32bit on 64bit platforms.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix memory corruption bug with suspend and rebuild\n\nThe ice driver would previously panic after suspend. This is caused\nfrom the driver *only* calling the ice_vsi_free_q_vectors() function by\nitself, when it is suspending. Since commit b3e7b3a6ee92 (\"ice: prevent\nNULL pointer deref during reload\") the driver has zeroed out\nnum_q_vectors, and only restored it in ice_vsi_cfg_def().\n\nThis further causes the ice_rebuild() function to allocate a zero length\nbuffer, after which num_q_vectors is updated, and then the new value of\nnum_q_vectors is used to index into the zero length buffer, which\ncorrupts memory.\n\nThe fix entails making sure all the code referencing num_q_vectors only\ndoes so after it has been reset via ice_vsi_cfg_def().\n\nI didn't perform a full bisect, but I was able to test against 6.1.77\nkernel and that ice driver works fine for suspend/resume with no panic,\nso sometime since then, this problem was introduced.\n\nAlso clean up an un-needed init of a local variable in the function\nbeing modified.\n\nPANIC from 6.8.0-rc1:\n\n[1026674.915596] PM: suspend exit\n[1026675.664697] ice 0000:17:00.1: PTP reset successful\n[1026675.664707] ice 0000:17:00.1: 2755 msecs passed between update to cached PHC time\n[1026675.667660] ice 0000:b1:00.0: PTP reset successful\n[1026675.675944] ice 0000:b1:00.0: 2832 msecs passed between update to cached PHC time\n[1026677.137733] ixgbe 0000:31:00.0 ens787: NIC Link is Up 1 Gbps, Flow Control: None\n[1026677.190201] BUG: kernel NULL pointer dereference, address: 0000000000000010\n[1026677.192753] ice 0000:17:00.0: PTP reset successful\n[1026677.192764] ice 0000:17:00.0: 4548 msecs passed between update to cached PHC time\n[1026677.197928] #PF: supervisor read access in kernel mode\n[1026677.197933] #PF: error_code(0x0000) - not-present page\n[1026677.197937] PGD 1557a7067 P4D 0\n[1026677.212133] ice 0000:b1:00.1: PTP reset successful\n[1026677.212143] ice 0000:b1:00.1: 4344 msecs passed between update to cached PHC time\n[1026677.212575]\n[1026677.243142] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[1026677.247918] CPU: 23 PID: 42790 Comm: kworker/23:0 Kdump: loaded Tainted: G        W          6.8.0-rc1+ #1\n[1026677.257989] Hardware name: Intel Corporation M50CYP2SBSTD/M50CYP2SBSTD, BIOS SE5C620.86B.01.01.0005.2202160810 02/16/2022\n[1026677.269367] Workqueue: ice ice_service_task [ice]\n[1026677.274592] RIP: 0010:ice_vsi_rebuild_set_coalesce+0x130/0x1e0 [ice]\n[1026677.281421] Code: 0f 84 3a ff ff ff 41 0f b7 74 ec 02 66 89 b0 22 02 00 00 81 e6 ff 1f 00 00 e8 ec fd ff ff e9 35 ff ff ff 48 8b 43 30 49 63 ed \u003c41\u003e 0f b7 34 24 41 83 c5 01 48 8b 3c e8 66 89 b7 aa 02 00 00 81 e6\n[1026677.300877] RSP: 0018:ff3be62a6399bcc0 EFLAGS: 00010202\n[1026677.306556] RAX: ff28691e28980828 RBX: ff28691e41099828 RCX: 0000000000188000\n[1026677.314148] RDX: 0000000000000000 RSI: 0000000000000010 RDI: ff28691e41099828\n[1026677.321730] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\n[1026677.329311] R10: 0000000000000007 R11: ffffffffffffffc0 R12: 0000000000000010\n[1026677.336896] R13: 0000000000000000 R14: 0000000000000000 R15: ff28691e0eaa81a0\n[1026677.344472] FS:  0000000000000000(0000) GS:ff28693cbffc0000(0000) knlGS:0000000000000000\n[1026677.353000] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[1026677.359195] CR2: 0000000000000010 CR3: 0000000128df4001 CR4: 0000000000771ef0\n[1026677.366779] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[1026677.374369] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[1026677.381952] PKRU: 55555554\n[1026677.385116] Call Trace:\n[1026677.388023]  \u003cTASK\u003e\n[1026677.390589]  ? __die+0x20/0x70\n[1026677.394105]  ? page_fault_oops+0x82/0x160\n[1026677.398576]  ? do_user_addr_fault+0x65/0x6a0\n[1026677.403307]  ? exc_page_fault+0x6a/0x150\n[1026677.407694]  ? asm_exc_page_fault+0x22/0x30\n[1026677.412349]  ? ice_vsi_rebuild_set_coalesce+0x130/0x1e0 [ice]\n[1026677.4186\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35912",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: rfi: fix potential response leaks\n\nIf the rx payload length check fails, or if kmemdup() fails,\nwe still need to free the command response. Fix that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_dev_up and nci_ntf_packet\n\nsyzbot reported the following uninit-value access issue [1][2]:\n\nnci_rx_work() parses and processes received packet. When the payload\nlength is zero, each message type handler reads uninitialized payload\nand KMSAN detects this issue. The receipt of a packet with a zero-size\npayload is considered unexpected, and therefore, such packets should be\nsilently discarded.\n\nThis patch resolved this issue by checking payload size before calling\neach message type handler codes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35916",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf: Fix NULL pointer dereference in sanitycheck()\n\nIf due to a memory allocation failure mock_chain() returns NULL, it is\npassed to dma_fence_enable_sw_signaling() resulting in NULL pointer\ndereference there.\n\nCall dma_fence_enable_sw_signaling() only if mock_chain() succeeds.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35917",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/bpf: Fix bpf_plt pointer arithmetic\n\nKui-Feng Lee reported a crash on s390x triggered by the\ndummy_st_ops/dummy_init_ptr_arg test [1]:\n\n  [\u003c0000000000000002\u003e] 0x2\n  [\u003c00000000009d5cde\u003e] bpf_struct_ops_test_run+0x156/0x250\n  [\u003c000000000033145a\u003e] __sys_bpf+0xa1a/0xd00\n  [\u003c00000000003319dc\u003e] __s390x_sys_bpf+0x44/0x50\n  [\u003c0000000000c4382c\u003e] __do_syscall+0x244/0x300\n  [\u003c0000000000c59a40\u003e] system_call+0x70/0x98\n\nThis is caused by GCC moving memcpy() after assignments in\nbpf_jit_plt(), resulting in NULL pointers being written instead of\nthe return and the target addresses.\n\nLooking at the GCC internals, the reordering is allowed because the\nalias analysis thinks that the memcpy() destination and the assignments'\nleft-hand-sides are based on different objects: new_plt and\nbpf_plt_ret/bpf_plt_target respectively, and therefore they cannot\nalias.\n\nThis is in turn due to a violation of the C standard:\n\n  When two pointers are subtracted, both shall point to elements of the\n  same array object, or one past the last element of the array object\n  ...\n\nFrom the C's perspective, bpf_plt_ret and bpf_plt are distinct objects\nand cannot be subtracted. In the practical terms, doing so confuses the\nGCC's alias analysis.\n\nThe code was written this way in order to let the C side know a few\noffsets defined in the assembly. While nice, this is by no means\nnecessary. Fix the noncompliance by hardcoding these offsets.\n\n[1] https://lore.kernel.org/bpf/c9923c1d-971d-4022-8dc8-1364e929d34c@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix oops when HEVC init fails\n\nThe stateless HEVC decoder saves the instance pointer in the context\nregardless if the initialization worked or not. This caused a use after\nfree, when the pointer is freed in case of a failure in the deinit\nfunction.\nOnly store the instance pointer when the initialization was successful,\nto solve this issue.\n\n Hardware name: Acer Tomato (rev3 - 4) board (DT)\n pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : vcodec_vpu_send_msg+0x4c/0x190 [mtk_vcodec_dec]\n lr : vcodec_send_ap_ipi+0x78/0x170 [mtk_vcodec_dec]\n sp : ffff80008750bc20\n x29: ffff80008750bc20 x28: ffff1299f6d70000 x27: 0000000000000000\n x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n x23: ffff80008750bc98 x22: 000000000000a003 x21: ffffd45c4cfae000\n x20: 0000000000000010 x19: ffff1299fd668310 x18: 000000000000001a\n x17: 000000040044ffff x16: ffffd45cb15dc648 x15: 0000000000000000\n x14: ffff1299c08da1c0 x13: ffffd45cb1f87a10 x12: ffffd45cb2f5fe80\n x11: 0000000000000001 x10: 0000000000001b30 x9 : ffffd45c4d12b488\n x8 : 1fffe25339380d81 x7 : 0000000000000001 x6 : ffff1299c9c06c00\n x5 : 0000000000000132 x4 : 0000000000000000 x3 : 0000000000000000\n x2 : 0000000000000010 x1 : ffff80008750bc98 x0 : 0000000000000000\n Call trace:\n  vcodec_vpu_send_msg+0x4c/0x190 [mtk_vcodec_dec]\n  vcodec_send_ap_ipi+0x78/0x170 [mtk_vcodec_dec]\n  vpu_dec_deinit+0x1c/0x30 [mtk_vcodec_dec]\n  vdec_hevc_slice_deinit+0x30/0x98 [mtk_vcodec_dec]\n  vdec_if_deinit+0x38/0x68 [mtk_vcodec_dec]\n  mtk_vcodec_dec_release+0x20/0x40 [mtk_vcodec_dec]\n  fops_vcodec_release+0x64/0x118 [mtk_vcodec_dec]\n  v4l2_release+0x7c/0x100\n  __fput+0x80/0x2d8\n  __fput_sync+0x58/0x70\n  __arm64_sys_close+0x40/0x90\n  invoke_syscall+0x50/0x128\n  el0_svc_common.constprop.0+0x48/0xf0\n  do_el0_svc+0x24/0x38\n  el0_svc+0x38/0xd8\n  el0t_64_sync_handler+0xc0/0xc8\n  el0t_64_sync+0x1a8/0x1b0\n Code: d503201f f9401660 b900127f b900227f (f9400400)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbmon: prevent division by zero in fb_videomode_from_videomode()\n\nThe expression htotal * vtotal can have a zero value on\noverflow. It is necessary to prevent division by zero like in\nfb_var_to_videomode().\n\nFound by Linux Verification Center (linuxtesting.org) with Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: ucsi: Limit read size on v1.2\n\nBetween UCSI 1.2 and UCSI 2.0, the size of the MESSAGE_IN region was\nincreased from 16 to 256. In order to avoid overflowing reads for older\nsystems, add a mechanism to use the read UCSI version to truncate read\nsizes on UCSI v1.2.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: prevent division by zero in blk_rq_stat_sum()\n\nThe expression dst-\u003enr_samples + src-\u003enr_samples may\nhave zero value on overflow. It is necessary to add\na check to avoid division by zero.\n\nFound by Linux Verification Center (linuxtesting.org) with Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35926",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: iaa - Fix async_disable descriptor leak\n\nThe disable_async paths of iaa_compress/decompress() don't free idxd\ndescriptors in the async_disable case. Currently this only happens in\nthe testcases where req-\u003edst is set to null. Add a test to free them\nin those paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Check output polling initialized before disabling\n\nIn drm_kms_helper_poll_disable() check if output polling\nsupport is initialized before disabling polling. If not flag\nthis as a warning.\nAdditionally in drm_mode_config_helper_suspend() and\ndrm_mode_config_helper_resume() calls, that re the callers of these\nfunctions, avoid invoking them if polling is not initialized.\nFor drivers like hyperv-drm, that do not initialize connector\npolling, if suspend is called without this check, it leads to\nsuspend failure with following stack\n[  770.719392] Freezing remaining freezable tasks ... (elapsed 0.001 seconds) done.\n[  770.720592] printk: Suspending console(s) (use no_console_suspend to debug)\n[  770.948823] ------------[ cut here ]------------\n[  770.948824] WARNING: CPU: 1 PID: 17197 at kernel/workqueue.c:3162 __flush_work.isra.0+0x212/0x230\n[  770.948831] Modules linked in: rfkill nft_counter xt_conntrack xt_owner udf nft_compat crc_itu_t nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables nfnetlink vfat fat mlx5_ib ib_uverbs ib_core mlx5_core intel_rapl_msr intel_rapl_common kvm_amd ccp mlxfw kvm psample hyperv_drm tls drm_shmem_helper drm_kms_helper irqbypass pcspkr syscopyarea sysfillrect sysimgblt hv_balloon hv_utils joydev drm fuse xfs libcrc32c pci_hyperv pci_hyperv_intf sr_mod sd_mod cdrom t10_pi sg hv_storvsc scsi_transport_fc hv_netvsc serio_raw hyperv_keyboard hid_hyperv crct10dif_pclmul crc32_pclmul crc32c_intel hv_vmbus ghash_clmulni_intel dm_mirror dm_region_hash dm_log dm_mod\n[  770.948863] CPU: 1 PID: 17197 Comm: systemd-sleep Not tainted 5.14.0-362.2.1.el9_3.x86_64 #1\n[  770.948865] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.1 05/09/2022\n[  770.948866] RIP: 0010:__flush_work.isra.0+0x212/0x230\n[  770.948869] Code: 8b 4d 00 4c 8b 45 08 89 ca 48 c1 e9 04 83 e2 08 83 e1 0f 83 ca 02 89 c8 48 0f ba 6d 00 03 e9 25 ff ff ff 0f 0b e9 4e ff ff ff \u003c0f\u003e 0b 45 31 ed e9 44 ff ff ff e8 8f 89 b2 00 66 66 2e 0f 1f 84 00\n[  770.948870] RSP: 0018:ffffaf4ac213fb10 EFLAGS: 00010246\n[  770.948871] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff8c992857\n[  770.948872] RDX: 0000000000000001 RSI: 0000000000000001 RDI: ffff9aad82b00330\n[  770.948873] RBP: ffff9aad82b00330 R08: 0000000000000000 R09: ffff9aad87ee3d10\n[  770.948874] R10: 0000000000000200 R11: 0000000000000000 R12: ffff9aad82b00330\n[  770.948874] R13: 0000000000000001 R14: 0000000000000000 R15: 0000000000000001\n[  770.948875] FS:  00007ff1b2f6bb40(0000) GS:ffff9aaf37d00000(0000) knlGS:0000000000000000\n[  770.948878] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  770.948878] CR2: 0000555f345cb666 CR3: 00000001462dc005 CR4: 0000000000370ee0\n[  770.948879] Call Trace:\n[  770.948880]  \u003cTASK\u003e\n[  770.948881]  ? show_trace_log_lvl+0x1c4/0x2df\n[  770.948884]  ? show_trace_log_lvl+0x1c4/0x2df\n[  770.948886]  ? __cancel_work_timer+0x103/0x190\n[  770.948887]  ? __flush_work.isra.0+0x212/0x230\n[  770.948889]  ? __warn+0x81/0x110\n[  770.948891]  ? __flush_work.isra.0+0x212/0x230\n[  770.948892]  ? report_bug+0x10a/0x140\n[  770.948895]  ? handle_bug+0x3c/0x70\n[  770.948898]  ? exc_invalid_op+0x14/0x70\n[  770.948899]  ? asm_exc_invalid_op+0x16/0x20\n[  770.948903]  ? __flush_work.isra.0+0x212/0x230\n[  770.948905]  __cancel_work_timer+0x103/0x190\n[  770.948907]  ? _raw_spin_unlock_irqrestore+0xa/0x30\n[  770.948910]  drm_kms_helper_poll_disable+0x1e/0x40 [drm_kms_helper]\n[  770.948923]  drm_mode_config_helper_suspend+0x1c/0x80 [drm_kms_helper]\n[  770.948933]  ? __pfx_vmbus_suspend+0x10/0x10 [hv_vmbus]\n[  770.948942]  hyperv_vmbus_suspend+0x17/0x40 [hyperv_drm]\n[  770.948944]  ? __pfx_vmbus_suspend+0x10/0x10 [hv_vmbus]\n[  770.948951]  dpm_run_callback+0x4c/0x140\n[  770.948954]  __device_suspend_noir\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35928",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix possible memory leak in lpfc_rcv_padisc()\n\nThe call to lpfc_sli4_resume_rpi() in lpfc_rcv_padisc() may return an\nunsuccessful status.  In such cases, the elsiocb is not issued, the\ncompletion is not called, and thus the elsiocb resource is leaked.\n\nCheck return value after calling lpfc_sli4_resume_rpi() and conditionally\nrelease the elsiocb resource.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Skip do PCI error slot reset during RAS recovery\n\nWhy:\n    The PCI error slot reset maybe triggered after inject ue to UMC multi times, this\n    caused system hang.\n    [  557.371857] amdgpu 0000:af:00.0: amdgpu: GPU reset succeeded, trying to resume\n    [  557.373718] [drm] PCIE GART of 512M enabled.\n    [  557.373722] [drm] PTB located at 0x0000031FED700000\n    [  557.373788] [drm] VRAM is lost due to GPU reset!\n    [  557.373789] [drm] PSP is resuming...\n    [  557.547012] mlx5_core 0000:55:00.0: mlx5_pci_err_detected Device state = 1 pci_status: 0. Exit, result = 3, need reset\n    [  557.547067] [drm] PCI error: detected callback, state(1)!!\n    [  557.547069] [drm] No support for XGMI hive yet...\n    [  557.548125] mlx5_core 0000:55:00.0: mlx5_pci_slot_reset Device state = 1 pci_status: 0. Enter\n    [  557.607763] mlx5_core 0000:55:00.0: wait vital counter value 0x16b5b after 1 iterations\n    [  557.607777] mlx5_core 0000:55:00.0: mlx5_pci_slot_reset Device state = 1 pci_status: 1. Exit, err = 0, result = 5, recovered\n    [  557.610492] [drm] PCI error: slot reset callback!!\n    ...\n    [  560.689382] amdgpu 0000:3f:00.0: amdgpu: GPU reset(2) succeeded!\n    [  560.689546] amdgpu 0000:5a:00.0: amdgpu: GPU reset(2) succeeded!\n    [  560.689562] general protection fault, probably for non-canonical address 0x5f080b54534f611f: 0000 [#1] SMP NOPTI\n    [  560.701008] CPU: 16 PID: 2361 Comm: kworker/u448:9 Tainted: G           OE     5.15.0-91-generic #101-Ubuntu\n    [  560.712057] Hardware name: Microsoft C278A/C278A, BIOS C2789.5.BS.1C11.AG.1 11/08/2023\n    [  560.720959] Workqueue: amdgpu-reset-hive amdgpu_ras_do_recovery [amdgpu]\n    [  560.728887] RIP: 0010:amdgpu_device_gpu_recover.cold+0xbf1/0xcf5 [amdgpu]\n    [  560.736891] Code: ff 41 89 c6 e9 1b ff ff ff 44 0f b6 45 b0 e9 4f ff ff ff be 01 00 00 00 4c 89 e7 e8 76 c9 8b ff 44 0f b6 45 b0 e9 3c fd ff ff \u003c48\u003e 83 ba 18 02 00 00 00 0f 84 6a f8 ff ff 48 8d 7a 78 be 01 00 00\n    [  560.757967] RSP: 0018:ffa0000032e53d80 EFLAGS: 00010202\n    [  560.763848] RAX: ffa00000001dfd10 RBX: ffa0000000197090 RCX: ffa0000032e53db0\n    [  560.771856] RDX: 5f080b54534f5f07 RSI: 0000000000000000 RDI: ff11000128100010\n    [  560.779867] RBP: ffa0000032e53df0 R08: 0000000000000000 R09: ffffffffffe77f08\n    [  560.787879] R10: 0000000000ffff0a R11: 0000000000000001 R12: 0000000000000000\n    [  560.795889] R13: ffa0000032e53e00 R14: 0000000000000000 R15: 0000000000000000\n    [  560.803889] FS:  0000000000000000(0000) GS:ff11007e7e800000(0000) knlGS:0000000000000000\n    [  560.812973] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    [  560.819422] CR2: 000055a04c118e68 CR3: 0000000007410005 CR4: 0000000000771ee0\n    [  560.827433] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    [  560.835433] DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400\n    [  560.843444] PKRU: 55555554\n    [  560.846480] Call Trace:\n    [  560.849225]  \u003cTASK\u003e\n    [  560.851580]  ? show_trace_log_lvl+0x1d6/0x2ea\n    [  560.856488]  ? show_trace_log_lvl+0x1d6/0x2ea\n    [  560.861379]  ? amdgpu_ras_do_recovery+0x1b2/0x210 [amdgpu]\n    [  560.867778]  ? show_regs.part.0+0x23/0x29\n    [  560.872293]  ? __die_body.cold+0x8/0xd\n    [  560.876502]  ? die_addr+0x3e/0x60\n    [  560.880238]  ? exc_general_protection+0x1c5/0x410\n    [  560.885532]  ? asm_exc_general_protection+0x27/0x30\n    [  560.891025]  ? amdgpu_device_gpu_recover.cold+0xbf1/0xcf5 [amdgpu]\n    [  560.898323]  amdgpu_ras_do_recovery+0x1b2/0x210 [amdgpu]\n    [  560.904520]  process_one_work+0x228/0x3d0\nHow:\n    In RAS recovery, mode-1 reset is issued from RAS fatal error handling and expected\n    all the nodes in a hive to be reset. no need to issue another mode-1 during this procedure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vc4: don't check if plane-\u003estate-\u003efb == state-\u003efb\n\nCurrently, when using non-blocking commits, we can see the following\nkernel warning:\n\n[  110.908514] ------------[ cut here ]------------\n[  110.908529] refcount_t: underflow; use-after-free.\n[  110.908620] WARNING: CPU: 0 PID: 1866 at lib/refcount.c:87 refcount_dec_not_one+0xb8/0xc0\n[  110.908664] Modules linked in: rfcomm snd_seq_dummy snd_hrtimer snd_seq snd_seq_device cmac algif_hash aes_arm64 aes_generic algif_skcipher af_alg bnep hid_logitech_hidpp vc4 brcmfmac hci_uart btbcm brcmutil bluetooth snd_soc_hdmi_codec cfg80211 cec drm_display_helper drm_dma_helper drm_kms_helper snd_soc_core snd_compress snd_pcm_dmaengine fb_sys_fops sysimgblt syscopyarea sysfillrect raspberrypi_hwmon ecdh_generic ecc rfkill libaes i2c_bcm2835 binfmt_misc joydev snd_bcm2835(C) bcm2835_codec(C) bcm2835_isp(C) v4l2_mem2mem videobuf2_dma_contig snd_pcm bcm2835_v4l2(C) raspberrypi_gpiomem bcm2835_mmal_vchiq(C) videobuf2_v4l2 snd_timer videobuf2_vmalloc videobuf2_memops videobuf2_common snd videodev vc_sm_cma(C) mc hid_logitech_dj uio_pdrv_genirq uio i2c_dev drm fuse dm_mod drm_panel_orientation_quirks backlight ip_tables x_tables ipv6\n[  110.909086] CPU: 0 PID: 1866 Comm: kodi.bin Tainted: G         C         6.1.66-v8+ #32\n[  110.909104] Hardware name: Raspberry Pi 3 Model B Rev 1.2 (DT)\n[  110.909114] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  110.909132] pc : refcount_dec_not_one+0xb8/0xc0\n[  110.909152] lr : refcount_dec_not_one+0xb4/0xc0\n[  110.909170] sp : ffffffc00913b9c0\n[  110.909177] x29: ffffffc00913b9c0 x28: 000000556969bbb0 x27: 000000556990df60\n[  110.909205] x26: 0000000000000002 x25: 0000000000000004 x24: ffffff8004448480\n[  110.909230] x23: ffffff800570b500 x22: ffffff802e03a7bc x21: ffffffecfca68c78\n[  110.909257] x20: ffffff8002b42000 x19: ffffff802e03a600 x18: 0000000000000000\n[  110.909283] x17: 0000000000000011 x16: ffffffffffffffff x15: 0000000000000004\n[  110.909308] x14: 0000000000000fff x13: ffffffed577e47e0 x12: 0000000000000003\n[  110.909333] x11: 0000000000000000 x10: 0000000000000027 x9 : c912d0d083728c00\n[  110.909359] x8 : c912d0d083728c00 x7 : 65646e75203a745f x6 : 746e756f63666572\n[  110.909384] x5 : ffffffed579f62ee x4 : ffffffed579eb01e x3 : 0000000000000000\n[  110.909409] x2 : 0000000000000000 x1 : ffffffc00913b750 x0 : 0000000000000001\n[  110.909434] Call trace:\n[  110.909441]  refcount_dec_not_one+0xb8/0xc0\n[  110.909461]  vc4_bo_dec_usecnt+0x4c/0x1b0 [vc4]\n[  110.909903]  vc4_cleanup_fb+0x44/0x50 [vc4]\n[  110.910315]  drm_atomic_helper_cleanup_planes+0x88/0xa4 [drm_kms_helper]\n[  110.910669]  vc4_atomic_commit_tail+0x390/0x9dc [vc4]\n[  110.911079]  commit_tail+0xb0/0x164 [drm_kms_helper]\n[  110.911397]  drm_atomic_helper_commit+0x1d0/0x1f0 [drm_kms_helper]\n[  110.911716]  drm_atomic_commit+0xb0/0xdc [drm]\n[  110.912569]  drm_mode_atomic_ioctl+0x348/0x4b8 [drm]\n[  110.913330]  drm_ioctl_kernel+0xec/0x15c [drm]\n[  110.914091]  drm_ioctl+0x24c/0x3b0 [drm]\n[  110.914850]  __arm64_sys_ioctl+0x9c/0xd4\n[  110.914873]  invoke_syscall+0x4c/0x114\n[  110.914897]  el0_svc_common+0xd0/0x118\n[  110.914917]  do_el0_svc+0x38/0xd0\n[  110.914936]  el0_svc+0x30/0x8c\n[  110.914958]  el0t_64_sync_handler+0x84/0xf0\n[  110.914979]  el0t_64_sync+0x18c/0x190\n[  110.914996] ---[ end trace 0000000000000000 ]---\n\nThis happens because, although `prepare_fb` and `cleanup_fb` are\nperfectly balanced, we cannot guarantee consistency in the check\nplane-\u003estate-\u003efb == state-\u003efb. This means that sometimes we can increase\nthe refcount in `prepare_fb` and don't decrease it in `cleanup_fb`. The\nopposite can also be true.\n\nIn fact, the struct drm_plane .state shouldn't be accessed directly\nbut instead, the `drm_atomic_get_new_plane_state()` helper function should\nbe used. So, we could stick to this check, but using\n`drm_atomic_get_new_plane_state()`. But actually, this check is not re\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btintel: Fix null ptr deref in btintel_read_version\n\nIf hci_cmd_sync_complete() is triggered and skb is NULL, then\nhdev-\u003ereq_skb is NULL, which will cause this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: reduce rtnl pressure in smc_pnet_create_pnetids_list()\n\nMany syzbot reports show extreme rtnl pressure, and many of them hint\nthat smc acquires rtnl in netns creation for no good reason [1]\n\nThis patch returns early from smc_pnet_net_init()\nif there is no netdevice yet.\n\nI am not even sure why smc_pnet_create_pnetids_list() even exists,\nbecause smc_pnet_netdev_event() is also calling\nsmc_pnet_add_base_pnetid() when handling NETDEV_UP event.\n\n[1] extract of typical syzbot reports\n\n2 locks held by syz-executor.3/12252:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.4/12253:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.1/12257:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.2/12261:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.0/12265:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.3/12268:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.4/12271:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.1/12274:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878\n2 locks held by syz-executor.2/12280:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7/0x7b0 net/core/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net/smc/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a/0x1e0 net/smc/smc_pnet.c:878",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: send: handle path ref underflow in header iterate_inode_ref()\n\nChange BUG_ON to proper error handling if building the path buffer\nfails. The pointers are not printed so we don't accidentally leak kernel\naddresses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: handle chunk tree lookup error in btrfs_relocate_sys_chunks()\n\nThe unhandled case in btrfs_relocate_sys_chunks() loop is a corruption,\nas it could be caused only by two impossible conditions:\n\n- at first the search key is set up to look for a chunk tree item, with\n  offset -1, this is an inexact search and the key-\u003eoffset will contain\n  the correct offset upon a successful search, a valid chunk tree item\n  cannot have an offset -1\n\n- after first successful search, the found_key corresponds to a chunk\n  item, the offset is decremented by 1 before the next loop, it's\n  impossible to find a chunk item there due to alignment and size\n  constraints",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: check A-MSDU format more carefully\n\nIf it looks like there's another subframe in the A-MSDU\nbut the header isn't fully there, we can end up reading\ndata out of bounds, only to discard later. Make this a\nbit more careful and check if the subframe header can\neven be present.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: decrease MHI channel buffer length to 8KB\n\nCurrently buf_len field of ath11k_mhi_config_qca6390 is assigned\nwith 0, making MHI use a default size, 64KB, to allocate channel\nbuffers. This is likely to fail in some scenarios where system\nmemory is highly fragmented and memory compaction or reclaim is\nnot allowed.\n\nThere is a fail report which is caused by it:\nkworker/u32:45: page allocation failure: order:4, mode:0x40c00(GFP_NOIO|__GFP_COMP), nodemask=(null),cpuset=/,mems_allowed=0\nCPU: 0 PID: 19318 Comm: kworker/u32:45 Not tainted 6.8.0-rc3-1.gae4495f-default #1 openSUSE Tumbleweed (unreleased) 493b6d5b382c603654d7a81fc3c144d59a1dfceb\nWorkqueue: events_unbound async_run_entry_fn\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x47/0x60\n warn_alloc+0x13a/0x1b0\n ? srso_alias_return_thunk+0x5/0xfbef5\n ? __alloc_pages_direct_compact+0xab/0x210\n __alloc_pages_slowpath.constprop.0+0xd3e/0xda0\n __alloc_pages+0x32d/0x350\n ? mhi_prepare_channel+0x127/0x2d0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n __kmalloc_large_node+0x72/0x110\n __kmalloc+0x37c/0x480\n ? mhi_map_single_no_bb+0x77/0xf0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n ? mhi_prepare_channel+0x127/0x2d0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n mhi_prepare_channel+0x127/0x2d0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n __mhi_prepare_for_transfer+0x44/0x80 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n ? __pfx_____mhi_prepare_for_transfer+0x10/0x10 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n device_for_each_child+0x5c/0xa0\n ? __pfx_pci_pm_resume+0x10/0x10\n ath11k_core_resume+0x65/0x100 [ath11k a5094e22d7223135c40d93c8f5321cf09fd85e4e]\n ? srso_alias_return_thunk+0x5/0xfbef5\n ath11k_pci_pm_resume+0x32/0x60 [ath11k_pci 830b7bfc3ea80ebef32e563cafe2cb55e9cc73ec]\n ? srso_alias_return_thunk+0x5/0xfbef5\n dpm_run_callback+0x8c/0x1e0\n device_resume+0x104/0x340\n ? __pfx_dpm_watchdog_handler+0x10/0x10\n async_resume+0x1d/0x30\n async_run_entry_fn+0x32/0x120\n process_one_work+0x168/0x330\n worker_thread+0x2f5/0x410\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe8/0x120\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n \u003c/TASK\u003e\n\nActually those buffers are used only by QMI target -\u003e host communication.\nAnd for WCN6855 and QCA6390, the largest packet size for that is less\nthan 6KB. So change buf_len field to 8KB, which results in order 1\nallocation if page size is 4KB. In this way, we can at least save some\nmemory, and as well as decrease the possibility of allocation failure\nin those scenarios.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35940",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npstore/zone: Add a null pointer check to the psz_kmsg_read\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35942",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npmdomain: imx8mp-blk-ctrl: imx8mp_blk: Add fdcc clock to hdmimix domain\n\nAccording to i.MX8MP RM and HDMI ADD, the fdcc clock is part of\nhdmi rx verification IP that should not enable for HDMI TX.\nBut actually if the clock is disabled before HDMI/LCDIF probe,\nLCDIF will not get pixel clock from HDMI PHY and print the error\nlogs:\n\n[CRTC:39:crtc-2] vblank wait timed out\nWARNING: CPU: 2 PID: 9 at drivers/gpu/drm/drm_atomic_helper.c:1634 drm_atomic_helper_wait_for_vblanks.part.0+0x23c/0x260\n\nAdd fdcc clock to LCDIF and HDMI TX power domains to fix the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npmdomain: ti: Add a null pointer check to the omap_prm_domain_init\n\ndevm_kasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35944",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nVMCI: Fix memcpy() run-time warning in dg_dispatch_as_host()\n\nSyzkaller hit 'WARNING in dg_dispatch_as_host' bug.\n\nmemcpy: detected field-spanning write (size 56) of single field \"\u0026dg_info-\u003emsg\"\nat drivers/misc/vmw_vmci/vmci_datagram.c:237 (size 24)\n\nWARNING: CPU: 0 PID: 1555 at drivers/misc/vmw_vmci/vmci_datagram.c:237\ndg_dispatch_as_host+0x88e/0xa60 drivers/misc/vmw_vmci/vmci_datagram.c:237\n\nSome code commentry, based on my understanding:\n\n544 #define VMCI_DG_SIZE(_dg) (VMCI_DG_HEADERSIZE + (size_t)(_dg)-\u003epayload_size)\n/// This is 24 + payload_size\n\nmemcpy(\u0026dg_info-\u003emsg, dg, dg_size);\n\tDestination = dg_info-\u003emsg ---\u003e this is a 24 byte\n\t\t\t\t\tstructure(struct vmci_datagram)\n\tSource = dg --\u003e this is a 24 byte structure (struct vmci_datagram)\n\tSize = dg_size = 24 + payload_size\n\n{payload_size = 56-24 =32} -- Syzkaller managed to set payload_size to 32.\n\n 35 struct delayed_datagram_info {\n 36         struct datagram_entry *entry;\n 37         struct work_struct work;\n 38         bool in_dg_host_queue;\n 39         /* msg and msg_payload must be together. */\n 40         struct vmci_datagram msg;\n 41         u8 msg_payload[];\n 42 };\n\nSo those extra bytes of payload are copied into msg_payload[], a run time\nwarning is seen while fuzzing with Syzkaller.\n\nOne possible way to fix the warning is to split the memcpy() into\ntwo parts -- one -- direct assignment of msg and second taking care of payload.\n\nGustavo quoted:\n\"Under FORTIFY_SOURCE we should not copy data across multiple members\nin a structure.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: phy_device: Prevent nullptr exceptions on ISR\n\nIf phydev-\u003eirq is set unconditionally, check\nfor valid interrupt handler or fall back to polling mode to prevent\nnullptr exceptions in interrupt service routine.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: fix null pointer access when abort scan\n\nDuring cancel scan we might use vif that weren't scanning.\nFix this by using the actual scanning vif.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndyndbg: fix old BUG_ON in \u003econtrol parser\n\nFix a BUG_ON from 2009.  Even if it looks \"unreachable\" (I didn't\nreally look), lets make sure by removing it, doing pr_err and return\n-EINVAL instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/client: Fully protect modes[] with dev-\u003emode_config.mutex\n\nThe modes[] array contains pointers to modes on the connectors'\nmode lists, which are protected by dev-\u003emode_config.mutex.\nThus we need to extend modes[] the same protection or by the\ntime we use it the elements may already be pointing to\nfreed/reused memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35951",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35952",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/ast: Fix soft lockup\n\nThere is a while-loop in ast_dp_set_on_off() that could lead to\ninfinite-loop. This is because the register, VGACRI-Dx, checked in\nthis API is a scratch register actually controlled by a MCU, named\nDPMCU, in BMC.\n\nThese scratch registers are protected by scu-lock. If suc-lock is not\noff, DPMCU can not update these registers and then host will have soft\nlockup due to never updated status.\n\nDPMCU is used to control DP and relative registers to handshake with\nhost's VGA driver. Even the most time-consuming task, DP's link\ntraining, is less than 100ms. 200ms should be enough.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35953",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naccel/ivpu: Fix deadlock in context_xa\n\nivpu_device-\u003econtext_xa is locked both in kernel thread and IRQ context.\nIt requires XA_FLAGS_LOCK_IRQ flag to be passed during initialization\notherwise the lock could be acquired from a thread and interrupted by\nan IRQ that locks it for the second time causing the deadlock.\n\nThis deadlock was reported by lockdep and observed in internal tests.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35954",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Avoid sg device teardown race\n\nsg_remove_sfp_usercontext() must not use sg_device_destroy() after calling\nscsi_device_put().\n\nsg_device_destroy() is accessing the parent scsi_device request_queue which\nwill already be set to NULL when the preceding call to scsi_device_put()\nremoved the last reference to the parent scsi_device.\n\nThe resulting NULL pointer exception will then crash the kernel.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35955",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE -\u003e\n MODULE_STATE_GOING -\u003e MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module-\u003estate becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module-\u003estate has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35956",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix qgroup prealloc rsv leak in subvolume operations\n\nCreate subvolume, create snapshot and delete subvolume all use\nbtrfs_subvolume_reserve_metadata() to reserve metadata for the changes\ndone to the parent subvolume's fs tree, which cannot be mediated in the\nnormal way via start_transaction. When quota groups (squota or qgroups)\nare enabled, this reserves qgroup metadata of type PREALLOC. Once the\noperation is associated to a transaction, we convert PREALLOC to\nPERTRANS, which gets cleared in bulk at the end of the transaction.\n\nHowever, the error paths of these three operations were not implementing\nthis lifecycle correctly. They unconditionally converted the PREALLOC to\nPERTRANS in a generic cleanup step regardless of errors or whether the\noperation was fully associated to a transaction or not. This resulted in\nerror paths occasionally converting this rsv to PERTRANS without calling\nrecord_root_in_trans successfully, which meant that unless that root got\nrecorded in the transaction by some other thread, the end of the\ntransaction would not free that root's PERTRANS, leaking it. Ultimately,\nthis resulted in hitting a WARN in CONFIG_BTRFS_DEBUG builds at unmount\nfor the leaked reservation.\n\nThe fix is to ensure that every qgroup PREALLOC reservation observes the\nfollowing properties:\n\n1. any failure before record_root_in_trans is called successfully\n   results in freeing the PREALLOC reservation.\n2. after record_root_in_trans, we convert to PERTRANS, and now the\n   transaction owns freeing the reservation.\n\nThis patch enforces those properties on the three operations. Without\nit, generic/269 with squotas enabled at mkfs time would fail in ~5-10\nruns on my system. With this patch, it ran successfully 1000 times in a\nrow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35957",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix WARN_ON in iommu probe path\n\nCommit 1a75cc710b95 (\"iommu/vt-d: Use rbtree to track iommu probed\ndevices\") adds all devices probed by the iommu driver in a rbtree\nindexed by the source ID of each device. It assumes that each device\nhas a unique source ID. This assumption is incorrect and the VT-d\nspec doesn't state this requirement either.\n\nThe reason for using a rbtree to track devices is to look up the device\nwith PCI bus and devfunc in the paths of handling ATS invalidation time\nout error and the PRI I/O page faults. Both are PCI ATS feature related.\n\nOnly track the devices that have PCI ATS capabilities in the rbtree to\navoid unnecessary WARN_ON in the iommu probe path. Otherwise, on some\nplatforms below kernel splat will be displayed and the iommu probe results\nin failure.\n\n WARNING: CPU: 3 PID: 166 at drivers/iommu/intel/iommu.c:158 intel_iommu_probe_device+0x319/0xd90\n Call Trace:\n  \u003cTASK\u003e\n  ? __warn+0x7e/0x180\n  ? intel_iommu_probe_device+0x319/0xd90\n  ? report_bug+0x1f8/0x200\n  ? handle_bug+0x3c/0x70\n  ? exc_invalid_op+0x18/0x70\n  ? asm_exc_invalid_op+0x1a/0x20\n  ? intel_iommu_probe_device+0x319/0xd90\n  ? debug_mutex_init+0x37/0x50\n  __iommu_probe_device+0xf2/0x4f0\n  iommu_probe_device+0x22/0x70\n  iommu_bus_notifier+0x1e/0x40\n  notifier_call_chain+0x46/0x150\n  blocking_notifier_call_chain+0x42/0x60\n  bus_notify+0x2f/0x50\n  device_add+0x5ed/0x7e0\n  platform_device_add+0xf5/0x240\n  mfd_add_devices+0x3f9/0x500\n  ? preempt_count_add+0x4c/0xa0\n  ? up_write+0xa2/0x1b0\n  ? __debugfs_create_file+0xe3/0x150\n  intel_lpss_probe+0x49f/0x5b0\n  ? pci_conf1_write+0xa3/0xf0\n  intel_lpss_pci_probe+0xcf/0x110 [intel_lpss_pci]\n  pci_device_probe+0x95/0x120\n  really_probe+0xd9/0x370\n  ? __pfx___driver_attach+0x10/0x10\n  __driver_probe_device+0x73/0x150\n  driver_probe_device+0x19/0xa0\n  __driver_attach+0xb6/0x180\n  ? __pfx___driver_attach+0x10/0x10\n  bus_for_each_dev+0x77/0xd0\n  bus_add_driver+0x114/0x210\n  driver_register+0x5b/0x110\n  ? __pfx_intel_lpss_pci_driver_init+0x10/0x10 [intel_lpss_pci]\n  do_one_initcall+0x57/0x2b0\n  ? kmalloc_trace+0x21e/0x280\n  ? do_init_module+0x1e/0x210\n  do_init_module+0x5f/0x210\n  load_module+0x1d37/0x1fc0\n  ? init_module_from_file+0x86/0xd0\n  init_module_from_file+0x86/0xd0\n  idempotent_init_module+0x17c/0x230\n  __x64_sys_finit_module+0x56/0xb0\n  do_syscall_64+0x6e/0x140\n  entry_SYSCALL_64_after_hwframe+0x71/0x79",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix incorrect descriptor free behavior\n\nENA has two types of TX queues:\n- queues which only process TX packets arriving from the network stack\n- queues which only process TX packets forwarded to it by XDP_REDIRECT\n  or XDP_TX instructions\n\nThe ena_free_tx_bufs() cycles through all descriptors in a TX queue\nand unmaps + frees every descriptor that hasn't been acknowledged yet\nby the device (uncompleted TX transactions).\nThe function assumes that the processed TX queue is necessarily from\nthe first category listed above and ends up using napi_consume_skb()\nfor descriptors belonging to an XDP specific queue.\n\nThis patch solves a bug in which, in case of a VF reset, the\ndescriptors aren't freed correctly, leading to crashes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix mlx5e_priv_init() cleanup flow\n\nWhen mlx5e_priv_init() fails, the cleanup flow calls mlx5e_selq_cleanup which\ncalls mlx5e_selq_apply() that assures that the `priv-\u003estate_lock` is held using\nlockdep_is_held().\n\nAcquire the state_lock in mlx5e_selq_cleanup().\n\nKernel log:\n=============================\nWARNING: suspicious RCU usage\n6.8.0-rc3_net_next_841a9b5 #1 Not tainted\n-----------------------------\ndrivers/net/ethernet/mellanox/mlx5/core/en/selq.c:124 suspicious rcu_dereference_protected() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n2 locks held by systemd-modules/293:\n #0: ffffffffa05067b0 (devices_rwsem){++++}-{3:3}, at: ib_register_client+0x109/0x1b0 [ib_core]\n #1: ffff8881096c65c0 (\u0026device-\u003eclient_data_rwsem){++++}-{3:3}, at: add_client_context+0x104/0x1c0 [ib_core]\n\nstack backtrace:\nCPU: 4 PID: 293 Comm: systemd-modules Not tainted 6.8.0-rc3_net_next_841a9b5 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x8a/0xa0\n lockdep_rcu_suspicious+0x154/0x1a0\n mlx5e_selq_apply+0x94/0xa0 [mlx5_core]\n mlx5e_selq_cleanup+0x3a/0x60 [mlx5_core]\n mlx5e_priv_init+0x2be/0x2f0 [mlx5_core]\n mlx5_rdma_setup_rn+0x7c/0x1a0 [mlx5_core]\n rdma_init_netdev+0x4e/0x80 [ib_core]\n ? mlx5_rdma_netdev_free+0x70/0x70 [mlx5_core]\n ipoib_intf_init+0x64/0x550 [ib_ipoib]\n ipoib_intf_alloc+0x4e/0xc0 [ib_ipoib]\n ipoib_add_one+0xb0/0x360 [ib_ipoib]\n add_client_context+0x112/0x1c0 [ib_core]\n ib_register_client+0x166/0x1b0 [ib_core]\n ? 0xffffffffa0573000\n ipoib_init_module+0xeb/0x1a0 [ib_ipoib]\n do_one_initcall+0x61/0x250\n do_init_module+0x8a/0x270\n init_module_from_file+0x8b/0xd0\n idempotent_init_module+0x17d/0x230\n __x64_sys_finit_module+0x61/0xb0\n do_syscall_64+0x71/0x140\n entry_SYSCALL_64_after_hwframe+0x46/0x4e\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Properly link new fs rules into the tree\n\nPreviously, add_rule_fg would only add newly created rules from the\nhandle into the tree when they had a refcount of 1. On the other hand,\ncreate_flow_handle tries hard to find and reference already existing\nidentical rules instead of creating new ones.\n\nThese two behaviors can result in a situation where create_flow_handle\n1) creates a new rule and references it, then\n2) in a subsequent step during the same handle creation references it\n   again,\nresulting in a rule with a refcount of 2 that is not linked into the\ntree, will have a NULL parent and root and will result in a crash when\nthe flow group is deleted because del_sw_hw_rule, invoked on rule\ndeletion, assumes node-\u003eparent is != NULL.\n\nThis happened in the wild, due to another bug related to incorrect\nhandling of duplicate pkt_reformat ids, which lead to the code in\ncreate_flow_handle incorrectly referencing a just-added rule in the same\nflow handle, resulting in the problem described above. Full details are\nat [1].\n\nThis patch changes add_rule_fg to add new rules without parents into\nthe tree, properly initializing them and avoiding the crash. This makes\nit more consistent with how rules are added to an FTE in\ncreate_flow_handle.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35961",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Register devlink first under devlink lock\n\nIn case device is having a non fatal FW error during probe, the\ndriver will report the error to user via devlink. This will trigger\na WARN_ON, since mlx5 is calling devlink_register() last.\nIn order to avoid the WARN_ON[1], change mlx5 to invoke devl_register()\nfirst under devlink lock.\n\n[1]\nWARNING: CPU: 5 PID: 227 at net/devlink/health.c:483 devlink_recover_notify.constprop.0+0xb8/0xc0\nCPU: 5 PID: 227 Comm: kworker/u16:3 Not tainted 6.4.0-rc5_for_upstream_min_debug_2023_06_12_12_38 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nWorkqueue: mlx5_health0000:08:00.0 mlx5_fw_reporter_err_work [mlx5_core]\nRIP: 0010:devlink_recover_notify.constprop.0+0xb8/0xc0\nCall Trace:\n \u003cTASK\u003e\n ? __warn+0x79/0x120\n ? devlink_recover_notify.constprop.0+0xb8/0xc0\n ? report_bug+0x17c/0x190\n ? handle_bug+0x3c/0x60\n ? exc_invalid_op+0x14/0x70\n ? asm_exc_invalid_op+0x16/0x20\n ? devlink_recover_notify.constprop.0+0xb8/0xc0\n devlink_health_report+0x4a/0x1c0\n mlx5_fw_reporter_err_work+0xa4/0xd0 [mlx5_core]\n process_one_work+0x1bb/0x3c0\n ? process_one_work+0x3c0/0x3c0\n worker_thread+0x4d/0x3c0\n ? process_one_work+0x3c0/0x3c0\n kthread+0xc6/0xf0\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_sock: Fix not validating setsockopt user input\n\nCheck user input length before copying data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: ISO: Fix not validating setsockopt user input\n\nCheck user input length before copying data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35965",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix not validating setsockopt user input\n\nCheck user input length before copying data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: Fix not validating setsockopt user input\n\nsyzbot reported rfcomm_sock_setsockopt_old() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude/linux/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude/linux/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old\nnet/bluetooth/rfcomm/sock.c:632 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893/0xa70\nnet/bluetooth/rfcomm/sock.c:673\nRead of size 4 at addr ffff8880209a8bc3 by task syz-executor632/5064",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35967",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: SCO: Fix not validating setsockopt user input\n\nsyzbot reported sco_sock_setsockopt() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude/linux/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude/linux/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in sco_sock_setsockopt+0xc0b/0xf90\nnet/bluetooth/sco.c:893\nRead of size 4 at addr ffff88805f7b15a3 by task syz-executor.5/12578",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n\nAlthough ipv6_get_ifaddr walks inet6_addr_lst under the RCU lock, it\nstill means hlist_for_each_entry_rcu can return an item that got removed\nfrom the list. The memory itself of such item is not freed thanks to RCU\nbut nothing guarantees the actual content of the memory is sane.\n\nIn particular, the reference count can be zero. This can happen if\nipv6_del_addr is called in parallel. ipv6_del_addr removes the entry\nfrom inet6_addr_lst (hlist_del_init_rcu(\u0026ifp-\u003eaddr_lst)) and drops all\nreferences (__in6_ifa_put(ifp) + in6_ifa_put(ifp)). With bad enough\ntiming, this can happen:\n\n1. In ipv6_get_ifaddr, hlist_for_each_entry_rcu returns an entry.\n\n2. Then, the whole ipv6_del_addr is executed for the given entry. The\n   reference count drops to zero and kfree_rcu is scheduled.\n\n3. ipv6_get_ifaddr continues and tries to increments the reference count\n   (in6_ifa_hold).\n\n4. The rcu is unlocked and the entry is freed.\n\n5. The freed entry is returned.\n\nPrevent increasing of the reference count in such case. The name\nin6_ifa_hold_safe is chosen to mimic the existing fib6_info_hold_safe.\n\n[   41.506330] refcount_t: addition on 0; use-after-free.\n[   41.506760] WARNING: CPU: 0 PID: 595 at lib/refcount.c:25 refcount_warn_saturate+0xa5/0x130\n[   41.507413] Modules linked in: veth bridge stp llc\n[   41.507821] CPU: 0 PID: 595 Comm: python3 Not tainted 6.9.0-rc2.main-00208-g49563be82afa #14\n[   41.508479] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n[   41.509163] RIP: 0010:refcount_warn_saturate+0xa5/0x130\n[   41.509586] Code: ad ff 90 0f 0b 90 90 c3 cc cc cc cc 80 3d c0 30 ad 01 00 75 a0 c6 05 b7 30 ad 01 01 90 48 c7 c7 38 cc 7a 8c e8 cc 18 ad ff 90 \u003c0f\u003e 0b 90 90 c3 cc cc cc cc 80 3d 98 30 ad 01 00 0f 85 75 ff ff ff\n[   41.510956] RSP: 0018:ffffbda3c026baf0 EFLAGS: 00010282\n[   41.511368] RAX: 0000000000000000 RBX: ffff9e9c46914800 RCX: 0000000000000000\n[   41.511910] RDX: ffff9e9c7ec29c00 RSI: ffff9e9c7ec1c900 RDI: ffff9e9c7ec1c900\n[   41.512445] RBP: ffff9e9c43660c9c R08: 0000000000009ffb R09: 00000000ffffdfff\n[   41.512998] R10: 00000000ffffdfff R11: ffffffff8ca58a40 R12: ffff9e9c4339a000\n[   41.513534] R13: 0000000000000001 R14: ffff9e9c438a0000 R15: ffffbda3c026bb48\n[   41.514086] FS:  00007fbc4cda1740(0000) GS:ffff9e9c7ec00000(0000) knlGS:0000000000000000\n[   41.514726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   41.515176] CR2: 000056233b337d88 CR3: 000000000376e006 CR4: 0000000000370ef0\n[   41.515713] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   41.516252] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   41.516799] Call Trace:\n[   41.517037]  \u003cTASK\u003e\n[   41.517249]  ? __warn+0x7b/0x120\n[   41.517535]  ? refcount_warn_saturate+0xa5/0x130\n[   41.517923]  ? report_bug+0x164/0x190\n[   41.518240]  ? handle_bug+0x3d/0x70\n[   41.518541]  ? exc_invalid_op+0x17/0x70\n[   41.520972]  ? asm_exc_invalid_op+0x1a/0x20\n[   41.521325]  ? refcount_warn_saturate+0xa5/0x130\n[   41.521708]  ipv6_get_ifaddr+0xda/0xe0\n[   41.522035]  inet6_rtm_getaddr+0x342/0x3f0\n[   41.522376]  ? __pfx_inet6_rtm_getaddr+0x10/0x10\n[   41.522758]  rtnetlink_rcv_msg+0x334/0x3d0\n[   41.523102]  ? netlink_unicast+0x30f/0x390\n[   41.523445]  ? __pfx_rtnetlink_rcv_msg+0x10/0x10\n[   41.523832]  netlink_rcv_skb+0x53/0x100\n[   41.524157]  netlink_unicast+0x23b/0x390\n[   41.524484]  netlink_sendmsg+0x1f2/0x440\n[   41.524826]  __sys_sendto+0x1d8/0x1f0\n[   41.525145]  __x64_sys_sendto+0x1f/0x30\n[   41.525467]  do_syscall_64+0xa5/0x1b0\n[   41.525794]  entry_SYSCALL_64_after_hwframe+0x72/0x7a\n[   41.526213] RIP: 0033:0x7fbc4cfcea9a\n[   41.526528] Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c0 75 15 b8 2c 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 7e c3 0f 1f 44 00 00 41 54 48 83 ec 30 44 89\n[   41.527942] RSP: 002b:00007f\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35971",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ks8851: Handle softirqs at the end of IRQ thread to fix hang\n\nThe ks8851_irq() thread may call ks8851_rx_pkts() in case there are\nany packets in the MAC FIFO, which calls netif_rx(). This netif_rx()\nimplementation is guarded by local_bh_disable() and local_bh_enable().\nThe local_bh_enable() may call do_softirq() to run softirqs in case\nany are pending. One of the softirqs is net_rx_action, which ultimately\nreaches the driver .start_xmit callback. If that happens, the system\nhangs. The entire call chain is below:\n\nks8851_start_xmit_par from netdev_start_xmit\nnetdev_start_xmit from dev_hard_start_xmit\ndev_hard_start_xmit from sch_direct_xmit\nsch_direct_xmit from __dev_queue_xmit\n__dev_queue_xmit from __neigh_update\n__neigh_update from neigh_update\nneigh_update from arp_process.constprop.0\narp_process.constprop.0 from __netif_receive_skb_one_core\n__netif_receive_skb_one_core from process_backlog\nprocess_backlog from __napi_poll.constprop.0\n__napi_poll.constprop.0 from net_rx_action\nnet_rx_action from __do_softirq\n__do_softirq from call_with_stack\ncall_with_stack from do_softirq\ndo_softirq from __local_bh_enable_ip\n__local_bh_enable_ip from netif_rx\nnetif_rx from ks8851_irq\nks8851_irq from irq_thread_fn\nirq_thread_fn from irq_thread\nirq_thread from kthread\nkthread from ret_from_fork\n\nThe hang happens because ks8851_irq() first locks a spinlock in\nks8851_par.c ks8851_lock_par() spin_lock_irqsave(\u0026ksp-\u003elock, ...)\nand with that spinlock locked, calls netif_rx(). Once the execution\nreaches ks8851_start_xmit_par(), it calls ks8851_lock_par() again\nwhich attempts to claim the already locked spinlock again, and the\nhang happens.\n\nMove the do_softirq() call outside of the spinlock protected section\nof ks8851_irq() by disabling BHs around the entire spinlock protected\nsection of ks8851_irq() handler. Place local_bh_enable() outside of\nthe spinlock protected section, so that it can trigger do_softirq()\nwithout the ks8851_par.c ks8851_lock_par() spinlock being held, and\nsafely call ks8851_start_xmit_par() without attempting to lock the\nalready locked spinlock.\n\nSince ks8851_irq() is protected by local_bh_disable()/local_bh_enable()\nnow, replace netif_rx() with __netif_rx() which is not duplicating the\nlocal_bh_disable()/local_bh_enable() calls.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35972",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible memory leak in bnxt_rdma_aux_device_init()\n\nIf ulp = kzalloc() fails, the allocated edev will leak because it is\nnot properly assigned and the cleanup path will not be able to free it.\nFix it by assigning it properly immediately after allocation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: fix header validation in geneve[6]_xmit_skb\n\nsyzbot is able to trigger an uninit-value in geneve_xmit() [1]\n\nProblem : While most ip tunnel helpers (like ip_tunnel_get_dsfield())\nuses skb_protocol(skb, true), pskb_inet_may_pull() is only using\nskb-\u003eprotocol.\n\nIf anything else than ETH_P_IPV6 or ETH_P_IP is found in skb-\u003eprotocol,\npskb_inet_may_pull() does nothing at all.\n\nIf a vlan tag was provided by the caller (af_packet in the syzbot case),\nthe network header might not point to the correct location, and skb\nlinear part could be smaller than expected.\n\nAdd skb_vlan_inet_prepare() to perform a complete mac validation.\n\nUse this in geneve for the moment, I suspect we need to adopt this\nmore broadly.\n\nv4 - Jakub reported v3 broke l2_tos_ttl_inherit.sh selftest\n   - Only call __vlan_get_protocol() for vlan types.\n\nv2,v3 - Addressed Sabrina comments on v1 and v2\n\n[1]\n\nBUG: KMSAN: uninit-value in geneve_xmit_skb drivers/net/geneve.c:910 [inline]\n BUG: KMSAN: uninit-value in geneve_xmit+0x302d/0x5420 drivers/net/geneve.c:1030\n  geneve_xmit_skb drivers/net/geneve.c:910 [inline]\n  geneve_xmit+0x302d/0x5420 drivers/net/geneve.c:1030\n  __netdev_start_xmit include/linux/netdevice.h:4903 [inline]\n  netdev_start_xmit include/linux/netdevice.h:4917 [inline]\n  xmit_one net/core/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547\n  __dev_queue_xmit+0x348d/0x52c0 net/core/dev.c:4335\n  dev_queue_xmit include/linux/netdevice.h:3091 [inline]\n  packet_xmit+0x9c/0x6c0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8bb0/0x9ef0 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2199\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:3804 [inline]\n  slab_alloc_node mm/slub.c:3845 [inline]\n  kmem_cache_alloc_node+0x613/0xc50 mm/slub.c:3888\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:577\n  __alloc_skb+0x35b/0x7a0 net/core/skbuff.c:668\n  alloc_skb include/linux/skbuff.h:1318 [inline]\n  alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6504\n  sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2795\n  packet_alloc_skb net/packet/af_packet.c:2930 [inline]\n  packet_snd net/packet/af_packet.c:3024 [inline]\n  packet_sendmsg+0x722d/0x9ef0 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:745\n  __sys_sendto+0x685/0x830 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2199\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nCPU: 0 PID: 5033 Comm: syz-executor346 Not tainted 6.9.0-rc1-syzkaller-00005-g928a87efa423 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35974",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix q-\u003eblkg_list corruption during disk rebind\n\nMultiple gendisk instances can allocated/added for single request queue\nin case of disk rebind. blkg may still stay in q-\u003eblkg_list when calling\nblkcg_init_disk() for rebind, then q-\u003eblkg_list becomes corrupted.\n\nFix the list corruption issue by:\n\n- add blkg_init_queue() to initialize q-\u003eblkg_list \u0026 q-\u003eblkcg_mutex only\n- move calling blkg_init_queue() into blk_alloc_queue()\n\nThe list corruption should be started since commit f1c006f1c685 (\"blk-cgroup:\nsynchronize pd_free_fn() from blkg_free_workfn() and blkcg_deactivate_policy()\")\nwhich delays removing blkg from q-\u003eblkg_list into blkg_free_workfn().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35975",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix transmit scheduler resource leak\n\nInorder to support shaping and scheduling, Upon class creation\nNetdev driver allocates trasmit schedulers.\n\nThe previous patch which added support for Round robin scheduling has\na bug due to which driver is not freeing transmit schedulers post\nclass deletion.\n\nThis patch fixes the same.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35976",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n\nsyzbot reported an illegal copy in xsk_setsockopt() [1]\n\nMake sure to validate setsockopt() @optlen parameter.\n\n[1]\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in xsk_setsockopt+0x909/0xa40 net/xdp/xsk.c:1420\nRead of size 4 at addr ffff888028c6cde3 by task syz-executor.0/7549\n\nCPU: 0 PID: 7549 Comm: syz-executor.0 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  xsk_setsockopt+0x909/0xa40 net/xdp/xsk.c:1420\n  do_sock_setsockopt+0x3af/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7fb40587de69\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb40665a0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fb4059abf80 RCX: 00007fb40587de69\nRDX: 0000000000000005 RSI: 000000000000011b RDI: 0000000000000006\nRBP: 00007fb4058ca47a R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020001980 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fb4059abf80 R15: 00007fff57ee4d08\n \u003c/TASK\u003e\n\nAllocated by task 7549:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:370 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:3966 [inline]\n  __kmalloc+0x233/0x4a0 mm/slub.c:3979\n  kmalloc include/linux/slab.h:632 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd2f/0x1040 kernel/bpf/cgroup.c:1869\n  do_sock_setsockopt+0x6b4/0x720 net/socket.c:2293\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nThe buggy address belongs to the object at ffff888028c6cde0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 1 bytes to the right of\n allocated 2-byte region [ffff888028c6cde0, ffff888028c6cde2)\n\nThe buggy address belongs to the physical page:\npage:ffffea0000a31b00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888028c6c9c0 pfn:0x28c6c\nanon flags: 0xfff00000000800(slab|node=0|zone=1|lastcpupid=0x7ff)\npage_type: 0xffffffff()\nraw: 00fff00000000800 ffff888014c41280 0000000000000000 dead000000000001\nraw: ffff888028c6c9c0 0000000080800057 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 6648, tgid 6644 (syz-executor.0), ts 133906047828, free_ts 133859922223\n  set_page_owner include/linux/page_owner.h:31 [inline]\n  post_alloc_hook+0x1ea/0x210 mm/page_alloc.c:1533\n  prep_new_page mm/page_alloc.c:\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35977",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/chrome: cros_ec_uart: properly fix race condition\n\nThe cros_ec_uart_probe() function calls devm_serdev_device_open() before\nit calls serdev_device_set_client_ops(). This can trigger a NULL pointer\ndereference:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    ...\n    Call Trace:\n     \u003cTASK\u003e\n     ...\n     ? ttyport_receive_buf\n\nA simplified version of crashing code is as follows:\n\n    static inline size_t serdev_controller_receive_buf(struct serdev_controller *ctrl,\n                                                      const u8 *data,\n                                                      size_t count)\n    {\n            struct serdev_device *serdev = ctrl-\u003eserdev;\n\n            if (!serdev || !serdev-\u003eops-\u003ereceive_buf) // CRASH!\n                return 0;\n\n            return serdev-\u003eops-\u003ereceive_buf(serdev, data, count);\n    }\n\nIt assumes that if SERPORT_ACTIVE is set and serdev exists, serdev-\u003eops\nwill also exist. This conflicts with the existing cros_ec_uart_probe()\nlogic, as it first calls devm_serdev_device_open() (which sets\nSERPORT_ACTIVE), and only later sets serdev-\u003eops via\nserdev_device_set_client_ops().\n\nCommit 01f95d42b8f4 (\"platform/chrome: cros_ec_uart: fix race\ncondition\") attempted to fix a similar race condition, but while doing\nso, made the window of error for this race condition to happen much\nwider.\n\nAttempt to fix the race condition again, making sure we fully setup\nbefore calling devm_serdev_device_open().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix memory leak in hci_req_sync_complete()\n\nIn 'hci_req_sync_complete()', always free the previous sync\nrequest state before assigning reference to a new one.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35979",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nraid1: fix use-after-free for original bio in raid1_write_request()\n\nr1_bio-\u003ebios[] is used to record new bios that will be issued to\nunderlying disks, however, in raid1_write_request(), r1_bio-\u003ebios[]\nwill set to the original bio temporarily. Meanwhile, if blocked rdev\nis set, free_r1bio() will be called causing that all r1_bio-\u003ebios[]\nto be freed:\n\nraid1_write_request()\n r1_bio = alloc_r1bio(mddev, bio); -\u003e r1_bio-\u003ebios[] is NULL\n for (i = 0;  i \u003c disks; i++) -\u003e for each rdev in conf\n  // first rdev is normal\n  r1_bio-\u003ebios[0] = bio; -\u003e set to original bio\n  // second rdev is blocked\n  if (test_bit(Blocked, \u0026rdev-\u003eflags))\n   break\n\n if (blocked_rdev)\n  free_r1bio()\n   put_all_bios()\n    bio_put(r1_bio-\u003ebios[0]) -\u003e original bio is freed\n\nTest scripts:\n\nmdadm -CR /dev/md0 -l1 -n4 /dev/sd[abcd] --assume-clean\nfio -filename=/dev/md0 -ioengine=libaio -rw=write -bs=4k -numjobs=1 \\\n    -iodepth=128 -name=test -direct=1\necho blocked \u003e /sys/block/md0/md/rd2/state\n\nTest result:\n\nBUG bio-264 (Not tainted): Object already free\n-----------------------------------------------------------------------------\n\nAllocated in mempool_alloc_slab+0x24/0x50 age=1 cpu=1 pid=869\n kmem_cache_alloc+0x324/0x480\n mempool_alloc_slab+0x24/0x50\n mempool_alloc+0x6e/0x220\n bio_alloc_bioset+0x1af/0x4d0\n blkdev_direct_IO+0x164/0x8a0\n blkdev_write_iter+0x309/0x440\n aio_write+0x139/0x2f0\n io_submit_one+0x5ca/0xb70\n __do_sys_io_submit+0x86/0x270\n __x64_sys_io_submit+0x22/0x30\n do_syscall_64+0xb1/0x210\n entry_SYSCALL_64_after_hwframe+0x6c/0x74\nFreed in mempool_free_slab+0x1f/0x30 age=1 cpu=1 pid=869\n kmem_cache_free+0x28c/0x550\n mempool_free_slab+0x1f/0x30\n mempool_free+0x40/0x100\n bio_free+0x59/0x80\n bio_put+0xf0/0x220\n free_r1bio+0x74/0xb0\n raid1_make_request+0xadf/0x1150\n md_handle_request+0xc7/0x3b0\n md_submit_bio+0x76/0x130\n __submit_bio+0xd8/0x1d0\n submit_bio_noacct_nocheck+0x1eb/0x5c0\n submit_bio_noacct+0x169/0xd40\n submit_bio+0xee/0x1d0\n blkdev_direct_IO+0x322/0x8a0\n blkdev_write_iter+0x309/0x440\n aio_write+0x139/0x2f0\n\nSince that bios for underlying disks are not allocated yet, fix this\nproblem by using mempool_free() directly to free the r1_bio.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35981",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: Do not send RSS key if it is not supported\n\nThere is a bug when setting the RSS options in virtio_net that can break\nthe whole machine, getting the kernel into an infinite loop.\n\nRunning the following command in any QEMU virtual machine with virtionet\nwill reproduce this problem:\n\n    # ethtool -X eth0  hfunc toeplitz\n\nThis is how the problem happens:\n\n1) ethtool_set_rxfh() calls virtnet_set_rxfh()\n\n2) virtnet_set_rxfh() calls virtnet_commit_rss_command()\n\n3) virtnet_commit_rss_command() populates 4 entries for the rss\nscatter-gather\n\n4) Since the command above does not have a key, then the last\nscatter-gatter entry will be zeroed, since rss_key_size == 0.\nsg_buf_size = vi-\u003erss_key_size;\n\n5) This buffer is passed to qemu, but qemu is not happy with a buffer\nwith zero length, and do the following in virtqueue_map_desc() (QEMU\nfunction):\n\n  if (!sz) {\n      virtio_error(vdev, \"virtio: zero sized buffers are not allowed\");\n\n6) virtio_error() (also QEMU function) set the device as broken\n\n    vdev-\u003ebroken = true;\n\n7) Qemu bails out, and do not repond this crazy kernel.\n\n8) The kernel is waiting for the response to come back (function\nvirtnet_send_command())\n\n9) The kernel is waiting doing the following :\n\n      while (!virtqueue_get_buf(vi-\u003ecvq, \u0026tmp) \u0026\u0026\n\t     !virtqueue_is_broken(vi-\u003ecvq))\n\t      cpu_relax();\n\n10) None of the following functions above is true, thus, the kernel\nloops here forever. Keeping in mind that virtqueue_is_broken() does\nnot look at the qemu `vdev-\u003ebroken`, so, it never realizes that the\nvitio is broken at QEMU side.\n\nFix it by not sending RSS commands if the feature is not available in\nthe device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: smbus: fix NULL function pointer dereference\n\nBaruch reported an OOPS when using the designware controller as target\nonly. Target-only modes break the assumption of one transfer function\nalways being available. Fix this by always checking the pointer in\n__i2c_transfer.\n\n[wsa: dropped the simplification in core-smbus to avoid theoretical regressions]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35986",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: tusb1210: Resolve charger-det crash if charger psy is unregistered\n\nThe power_supply frame-work is not really designed for there to be\nlong living in kernel references to power_supply devices.\n\nSpecifically unregistering a power_supply while some other code has\na reference to it triggers a WARN in power_supply_unregister():\n\n\tWARN_ON(atomic_dec_return(\u0026psy-\u003euse_cnt));\n\nFolllowed by the power_supply still getting removed and the\nbacking data freed anyway, leaving the tusb1210 charger-detect code\nwith a dangling reference, resulting in a crash the next time\ntusb1210_get_online() is called.\n\nFix this by only holding the reference in tusb1210_get_online()\nfreeing it at the end of the function. Note this still leaves\na theoretical race window, but it avoids the issue when manually\nrmmod-ing the charger chip driver during development.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35989",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Fix oops during rmmod on single-CPU platforms\n\nDuring the removal of the idxd driver, registered offline callback is\ninvoked as part of the clean up process. However, on systems with only\none CPU online, no valid target is available to migrate the\nperf context, resulting in a kernel oops:\n\n    BUG: unable to handle page fault for address: 000000000002a2b8\n    #PF: supervisor write access in kernel mode\n    #PF: error_code(0x0002) - not-present page\n    PGD 1470e1067 P4D 0\n    Oops: 0002 [#1] PREEMPT SMP NOPTI\n    CPU: 0 PID: 20 Comm: cpuhp/0 Not tainted 6.8.0-rc6-dsa+ #57\n    Hardware name: Intel Corporation AvenueCity/AvenueCity, BIOS BHSDCRB1.86B.2492.D03.2307181620 07/18/2023\n    RIP: 0010:mutex_lock+0x2e/0x50\n    ...\n    Call Trace:\n    \u003cTASK\u003e\n    __die+0x24/0x70\n    page_fault_oops+0x82/0x160\n    do_user_addr_fault+0x65/0x6b0\n    __pfx___rdmsr_safe_on_cpu+0x10/0x10\n    exc_page_fault+0x7d/0x170\n    asm_exc_page_fault+0x26/0x30\n    mutex_lock+0x2e/0x50\n    mutex_lock+0x1e/0x50\n    perf_pmu_migrate_context+0x87/0x1f0\n    perf_event_cpu_offline+0x76/0x90 [idxd]\n    cpuhp_invoke_callback+0xa2/0x4f0\n    __pfx_perf_event_cpu_offline+0x10/0x10 [idxd]\n    cpuhp_thread_fun+0x98/0x150\n    smpboot_thread_fn+0x27/0x260\n    smpboot_thread_fn+0x1af/0x260\n    __pfx_smpboot_thread_fn+0x10/0x10\n    kthread+0x103/0x140\n    __pfx_kthread+0x10/0x10\n    ret_from_fork+0x31/0x50\n    __pfx_kthread+0x10/0x10\n    ret_from_fork_asm+0x1b/0x30\n    \u003cTASK\u003e\n\nFix the issue by preventing the migration of the perf context to an\ninvalid target.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma: xilinx_dpdma: Fix locking\n\nThere are several places where either chan-\u003elock or chan-\u003evchan.lock was\nnot held. Add appropriate locking. This fixes lockdep warnings like\n\n[   31.077578] ------------[ cut here ]------------\n[   31.077831] WARNING: CPU: 2 PID: 40 at drivers/dma/xilinx/xilinx_dpdma.c:834 xilinx_dpdma_chan_queue_transfer+0x274/0x5e0\n[   31.077953] Modules linked in:\n[   31.078019] CPU: 2 PID: 40 Comm: kworker/u12:1 Not tainted 6.6.20+ #98\n[   31.078102] Hardware name: xlnx,zynqmp (DT)\n[   31.078169] Workqueue: events_unbound deferred_probe_work_func\n[   31.078272] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   31.078377] pc : xilinx_dpdma_chan_queue_transfer+0x274/0x5e0\n[   31.078473] lr : xilinx_dpdma_chan_queue_transfer+0x270/0x5e0\n[   31.078550] sp : ffffffc083bb2e10\n[   31.078590] x29: ffffffc083bb2e10 x28: 0000000000000000 x27: ffffff880165a168\n[   31.078754] x26: ffffff880164e920 x25: ffffff880164eab8 x24: ffffff880164d480\n[   31.078920] x23: ffffff880165a148 x22: ffffff880164e988 x21: 0000000000000000\n[   31.079132] x20: ffffffc082aa3000 x19: ffffff880164e880 x18: 0000000000000000\n[   31.079295] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[   31.079453] x14: 0000000000000000 x13: ffffff8802263dc0 x12: 0000000000000001\n[   31.079613] x11: 0001ffc083bb2e34 x10: 0001ff880164e98f x9 : 0001ffc082aa3def\n[   31.079824] x8 : 0001ffc082aa3dec x7 : 0000000000000000 x6 : 0000000000000516\n[   31.079982] x5 : ffffffc7f8d43000 x4 : ffffff88003c9c40 x3 : ffffffffffffffff\n[   31.080147] x2 : ffffffc7f8d43000 x1 : 00000000000000c0 x0 : 0000000000000000\n[   31.080307] Call trace:\n[   31.080340]  xilinx_dpdma_chan_queue_transfer+0x274/0x5e0\n[   31.080518]  xilinx_dpdma_issue_pending+0x11c/0x120\n[   31.080595]  zynqmp_disp_layer_update+0x180/0x3ac\n[   31.080712]  zynqmp_dpsub_plane_atomic_update+0x11c/0x21c\n[   31.080825]  drm_atomic_helper_commit_planes+0x20c/0x684\n[   31.080951]  drm_atomic_helper_commit_tail+0x5c/0xb0\n[   31.081139]  commit_tail+0x234/0x294\n[   31.081246]  drm_atomic_helper_commit+0x1f8/0x210\n[   31.081363]  drm_atomic_commit+0x100/0x140\n[   31.081477]  drm_client_modeset_commit_atomic+0x318/0x384\n[   31.081634]  drm_client_modeset_commit_locked+0x8c/0x24c\n[   31.081725]  drm_client_modeset_commit+0x34/0x5c\n[   31.081812]  __drm_fb_helper_restore_fbdev_mode_unlocked+0x104/0x168\n[   31.081899]  drm_fb_helper_set_par+0x50/0x70\n[   31.081971]  fbcon_init+0x538/0xc48\n[   31.082047]  visual_init+0x16c/0x23c\n[   31.082207]  do_bind_con_driver.isra.0+0x2d0/0x634\n[   31.082320]  do_take_over_console+0x24c/0x33c\n[   31.082429]  do_fbcon_takeover+0xbc/0x1b0\n[   31.082503]  fbcon_fb_registered+0x2d0/0x34c\n[   31.082663]  register_framebuffer+0x27c/0x38c\n[   31.082767]  __drm_fb_helper_initial_config_and_unlock+0x5c0/0x91c\n[   31.082939]  drm_fb_helper_initial_config+0x50/0x74\n[   31.083012]  drm_fbdev_dma_client_hotplug+0xb8/0x108\n[   31.083115]  drm_client_register+0xa0/0xf4\n[   31.083195]  drm_fbdev_dma_setup+0xb0/0x1cc\n[   31.083293]  zynqmp_dpsub_drm_init+0x45c/0x4e0\n[   31.083431]  zynqmp_dpsub_probe+0x444/0x5e0\n[   31.083616]  platform_probe+0x8c/0x13c\n[   31.083713]  really_probe+0x258/0x59c\n[   31.083793]  __driver_probe_device+0xc4/0x224\n[   31.083878]  driver_probe_device+0x70/0x1c0\n[   31.083961]  __device_attach_driver+0x108/0x1e0\n[   31.084052]  bus_for_each_drv+0x9c/0x100\n[   31.084125]  __device_attach+0x100/0x298\n[   31.084207]  device_initial_probe+0x14/0x20\n[   31.084292]  bus_probe_device+0xd8/0xdc\n[   31.084368]  deferred_probe_work_func+0x11c/0x180\n[   31.084451]  process_one_work+0x3ac/0x988\n[   31.084643]  worker_thread+0x398/0x694\n[   31.084752]  kthread+0x1bc/0x1c0\n[   31.084848]  ret_from_fork+0x10/0x20\n[   31.084932] irq event stamp: 64549\n[   31.084970] hardirqs last  enabled at (64548): [\u003cffffffc081adf35c\u003e] _raw_spin_unlock_irqrestore+0x80/0x90\n[   31.085157]\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35991",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Convert spinlock to mutex to lock evl workqueue\n\ndrain_workqueue() cannot be called safely in a spinlocked context due to\npossible task rescheduling. In the multi-task scenario, calling\nqueue_work() while drain_workqueue() will lead to a Call Trace as\npushing a work on a draining workqueue is not permitted in spinlocked\ncontext.\n    Call Trace:\n    \u003cTASK\u003e\n    ? __warn+0x7d/0x140\n    ? __queue_work+0x2b2/0x440\n    ? report_bug+0x1f8/0x200\n    ? handle_bug+0x3c/0x70\n    ? exc_invalid_op+0x18/0x70\n    ? asm_exc_invalid_op+0x1a/0x20\n    ? __queue_work+0x2b2/0x440\n    queue_work_on+0x28/0x30\n    idxd_misc_thread+0x303/0x5a0 [idxd]\n    ? __schedule+0x369/0xb40\n    ? __pfx_irq_thread_fn+0x10/0x10\n    ? irq_thread+0xbc/0x1b0\n    irq_thread_fn+0x21/0x70\n    irq_thread+0x102/0x1b0\n    ? preempt_count_add+0x74/0xa0\n    ? __pfx_irq_thread_dtor+0x10/0x10\n    ? __pfx_irq_thread+0x10/0x10\n    kthread+0x103/0x140\n    ? __pfx_kthread+0x10/0x10\n    ret_from_fork+0x31/0x50\n    ? __pfx_kthread+0x10/0x10\n    ret_from_fork_asm+0x1b/0x30\n    \u003c/TASK\u003e\n\nThe current implementation uses a spinlock to protect event log workqueue\nand will lead to the Call Trace due to potential task rescheduling.\n\nTo address the locking issue, convert the spinlock to mutex, allowing\nthe drain_workqueue() to be called in a safe mutex-locked context.\n\nThis change ensures proper synchronization when accessing the event log\nworkqueue, preventing potential Call Trace and improving the overall\nrobustness of the code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35992",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: marvell: a3700-comphy: Fix out of bounds read\n\nThere is an out of bounds read access of 'gbe_phy_init_fix[fix_idx].addr'\nevery iteration after 'fix_idx' reaches 'ARRAY_SIZE(gbe_phy_init_fix)'.\n\nMake sure 'gbe_phy_init[addr]' is used when all elements of\n'gbe_phy_init_fix' array are handled.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Use access_width over bit_width for system memory accesses\n\nTo align with ACPI 6.3+, since bit_width can be any 8-bit value, it\ncannot be depended on to be always on a clean 8b boundary. This was\nuncovered on the Cobalt 100 platform.\n\nSError Interrupt on CPU26, code 0xbe000011 -- SError\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted 5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n pstate: 62400009 (nZCv daif +PAN -UAO +TCO -DIT -SSBS BTYPE=--)\n pc : cppc_get_perf_caps+0xec/0x410\n lr : cppc_get_perf_caps+0xe8/0x410\n sp : ffff8000155ab730\n x29: ffff8000155ab730 x28: ffff0080139d0038 x27: ffff0080139d0078\n x26: 0000000000000000 x25: ffff0080139d0058 x24: 00000000ffffffff\n x23: ffff0080139d0298 x22: ffff0080139d0278 x21: 0000000000000000\n x20: ffff00802b251910 x19: ffff0080139d0000 x18: ffffffffffffffff\n x17: 0000000000000000 x16: ffffdc7e111bad04 x15: ffff00802b251008\n x14: ffffffffffffffff x13: ffff013f1fd63300 x12: 0000000000000006\n x11: ffffdc7e128f4420 x10: 0000000000000000 x9 : ffffdc7e111badec\n x8 : ffff00802b251980 x7 : 0000000000000000 x6 : ffff0080139d0028\n x5 : 0000000000000000 x4 : ffff0080139d0018 x3 : 00000000ffffffff\n x2 : 0000000000000008 x1 : ffff8000155ab7a0 x0 : 0000000000000000\n Kernel panic - not syncing: Asynchronous SError Interrupt\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted\n5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n Call trace:\n  dump_backtrace+0x0/0x1e0\n  show_stack+0x24/0x30\n  dump_stack_lvl+0x8c/0xb8\n  dump_stack+0x18/0x34\n  panic+0x16c/0x384\n  add_taint+0x0/0xc0\n  arm64_serror_panic+0x7c/0x90\n  arm64_is_fatal_ras_serror+0x34/0xa4\n  do_serror+0x50/0x6c\n  el1h_64_error_handler+0x40/0x74\n  el1h_64_error+0x7c/0x80\n  cppc_get_perf_caps+0xec/0x410\n  cppc_cpufreq_cpu_init+0x74/0x400 [cppc_cpufreq]\n  cpufreq_online+0x2dc/0xa30\n  cpufreq_add_dev+0xc0/0xd4\n  subsys_interface_register+0x134/0x14c\n  cpufreq_register_driver+0x1b0/0x354\n  cppc_cpufreq_init+0x1a8/0x1000 [cppc_cpufreq]\n  do_one_initcall+0x50/0x250\n  do_init_module+0x60/0x27c\n  load_module+0x2300/0x2570\n  __do_sys_finit_module+0xa8/0x114\n  __arm64_sys_finit_module+0x2c/0x3c\n  invoke_syscall+0x78/0x100\n  el0_svc_common.constprop.0+0x180/0x1a0\n  do_el0_svc+0x84/0xa0\n  el0_svc+0x2c/0xc0\n  el0t_64_sync_handler+0xa4/0x12c\n  el0t_64_sync+0x1a4/0x1a8\n\nInstead, use access_width to determine the size and use the offset and\nwidth to shift and mask the bits to read/write out. Make sure to add a\ncheck for system memory since pcc redefines the access_width to\nsubspace id.\n\nIf access_width is not set, then fall back to using bit_width.\n\n[ rjw: Subject and changelog edits, comment adjustments ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent lock-up\n\nThe flag I2C_HID_READ_PENDING is used to serialize I2C operations.\nHowever, this is not necessary, because I2C core already has its own\nlocking for that.\n\nMore importantly, this flag can cause a lock-up: if the flag is set in\ni2c_hid_xfer() and an interrupt happens, the interrupt handler\n(i2c_hid_irq) will check this flag and return immediately without doing\nanything, then the interrupt handler will be invoked again in an\ninfinite loop.\n\nSince interrupt handler is an RT task, it takes over the CPU and the\nflag-clearing task never gets scheduled, thus we have a lock-up.\n\nDelete this unnecessary flag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix lock ordering potential deadlock in cifs_sync_mid_result\n\nCoverity spotted that the cifs_sync_mid_result function could deadlock\n\n\"Thread deadlock (ORDER_REVERSAL) lock_order: Calling spin_lock acquires\nlock TCP_Server_Info.srv_lock while holding lock TCP_Server_Info.mid_lock\"\n\nAddresses-Coverity: 1590401 (\"Thread deadlock (ORDER_REVERSAL)\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: missing lock when picking channel\n\nCoverity spotted a place where we should have been holding the\nchannel lock when accessing the ses channel index.\n\nAddresses-Coverity: 1582039 (\"Data race condition (MISSING_LOCK)\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix LAG and VF lock dependency in ice_reset_vf()\n\n9f74a3dfcf83 (\"ice: Fix VF Reset paths when interface in a failed over\naggregate\"), the ice driver has acquired the LAG mutex in ice_reset_vf().\nThe commit placed this lock acquisition just prior to the acquisition of\nthe VF configuration lock.\n\nIf ice_reset_vf() acquires the configuration lock via the ICE_VF_RESET_LOCK\nflag, this could deadlock with ice_vc_cfg_qs_msg() because it always\nacquires the locks in the order of the VF configuration lock and then the\nLAG mutex.\n\nLockdep reports this violation almost immediately on creating and then\nremoving 2 VF:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-rc6 #54 Tainted: G        W  O\n------------------------------------------------------\nkworker/60:3/6771 is trying to acquire lock:\nff40d43e099380a0 (\u0026vf-\u003ecfg_lock){+.+.}-{3:3}, at: ice_reset_vf+0x22f/0x4d0 [ice]\n\nbut task is already holding lock:\nff40d43ea1961210 (\u0026pf-\u003elag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7/0x4d0 [ice]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-\u003e #1 (\u0026pf-\u003elag_mutex){+.+.}-{3:3}:\n       __lock_acquire+0x4f8/0xb40\n       lock_acquire+0xd4/0x2d0\n       __mutex_lock+0x9b/0xbf0\n       ice_vc_cfg_qs_msg+0x45/0x690 [ice]\n       ice_vc_process_vf_msg+0x4f5/0x870 [ice]\n       __ice_clean_ctrlq+0x2b5/0x600 [ice]\n       ice_service_task+0x2c9/0x480 [ice]\n       process_one_work+0x1e9/0x4d0\n       worker_thread+0x1e1/0x3d0\n       kthread+0x104/0x140\n       ret_from_fork+0x31/0x50\n       ret_from_fork_asm+0x1b/0x30\n\n-\u003e #0 (\u0026vf-\u003ecfg_lock){+.+.}-{3:3}:\n       check_prev_add+0xe2/0xc50\n       validate_chain+0x558/0x800\n       __lock_acquire+0x4f8/0xb40\n       lock_acquire+0xd4/0x2d0\n       __mutex_lock+0x9b/0xbf0\n       ice_reset_vf+0x22f/0x4d0 [ice]\n       ice_process_vflr_event+0x98/0xd0 [ice]\n       ice_service_task+0x1cc/0x480 [ice]\n       process_one_work+0x1e9/0x4d0\n       worker_thread+0x1e1/0x3d0\n       kthread+0x104/0x140\n       ret_from_fork+0x31/0x50\n       ret_from_fork_asm+0x1b/0x30\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n       CPU0                    CPU1\n       ----                    ----\n  lock(\u0026pf-\u003elag_mutex);\n                               lock(\u0026vf-\u003ecfg_lock);\n                               lock(\u0026pf-\u003elag_mutex);\n  lock(\u0026vf-\u003ecfg_lock);\n\n *** DEADLOCK ***\n4 locks held by kworker/60:3/6771:\n #0: ff40d43e05428b38 ((wq_completion)ice){+.+.}-{0:0}, at: process_one_work+0x176/0x4d0\n #1: ff50d06e05197e58 ((work_completion)(\u0026pf-\u003eserv_task)){+.+.}-{0:0}, at: process_one_work+0x176/0x4d0\n #2: ff40d43ea1960e50 (\u0026pf-\u003evfs.table_lock){+.+.}-{3:3}, at: ice_process_vflr_event+0x48/0xd0 [ice]\n #3: ff40d43ea1961210 (\u0026pf-\u003elag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7/0x4d0 [ice]\n\nstack backtrace:\nCPU: 60 PID: 6771 Comm: kworker/60:3 Tainted: G        W  O       6.8.0-rc6 #54\nHardware name:\nWorkqueue: ice ice_service_task [ice]\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x4a/0x80\n check_noncircular+0x12d/0x150\n check_prev_add+0xe2/0xc50\n ? save_trace+0x59/0x230\n ? add_chain_cache+0x109/0x450\n validate_chain+0x558/0x800\n __lock_acquire+0x4f8/0xb40\n ? lockdep_hardirqs_on+0x7d/0x100\n lock_acquire+0xd4/0x2d0\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ? lock_is_held_type+0xc7/0x120\n __mutex_lock+0x9b/0xbf0\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ? rcu_is_watching+0x11/0x50\n ? ice_reset_vf+0x22f/0x4d0 [ice]\n ice_reset_vf+0x22f/0x4d0 [ice]\n ? process_one_work+0x176/0x4d0\n ice_process_vflr_event+0x98/0xd0 [ice]\n ice_service_task+0x1cc/0x480 [ice]\n process_one_work+0x1e9/0x4d0\n worker_thread+0x1e1/0x3d0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0x104/0x140\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x31/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n \u003c/TASK\u003e\n\nTo avoid deadlock, we must acquire the LAG \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36004",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nIssue reported by customer during SRIOV testing, call trace:\nWhen both i40e and the i40iw driver are loaded, a warning\nin check_flush_dependency is being triggered. This seems\nto be because of the i40e driver workqueue is allocated with\nthe WQ_MEM_RECLAIM flag, and the i40iw one is not.\n\nSimilar error was encountered on ice too and it was fixed by\nremoving the flag. Do the same for i40e too.\n\n[Feb 9 09:08] ------------[ cut here ]------------\n[  +0.000004] workqueue: WQ_MEM_RECLAIM i40e:i40e_service_task [i40e] is\nflushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000060] WARNING: CPU: 0 PID: 937 at kernel/workqueue.c:2966\ncheck_flush_dependency+0x10b/0x120\n[  +0.000007] Modules linked in: snd_seq_dummy snd_hrtimer snd_seq\nsnd_timer snd_seq_device snd soundcore nls_utf8 cifs cifs_arc4\nnls_ucs2_utils rdma_cm iw_cm ib_cm cifs_md4 dns_resolver netfs qrtr\nrfkill sunrpc vfat fat intel_rapl_msr intel_rapl_common irdma\nintel_uncore_frequency intel_uncore_frequency_common ice ipmi_ssif\nisst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal\nintel_powerclamp gnss coretemp ib_uverbs rapl intel_cstate ib_core\niTCO_wdt iTCO_vendor_support acpi_ipmi mei_me ipmi_si intel_uncore\nioatdma i2c_i801 joydev pcspkr mei ipmi_devintf lpc_ich\nintel_pch_thermal i2c_smbus ipmi_msghandler acpi_power_meter acpi_pad\nxfs libcrc32c ast sd_mod drm_shmem_helper t10_pi drm_kms_helper sg ixgbe\ndrm i40e ahci crct10dif_pclmul libahci crc32_pclmul igb crc32c_intel\nlibata ghash_clmulni_intel i2c_algo_bit mdio dca wmi dm_mirror\ndm_region_hash dm_log dm_mod fuse\n[  +0.000050] CPU: 0 PID: 937 Comm: kworker/0:3 Kdump: loaded Not\ntainted 6.8.0-rc2-Feb-net_dev-Qiueue-00279-gbd43c5687e05 #1\n[  +0.000003] Hardware name: Intel Corporation S2600BPB/S2600BPB, BIOS\nSE5C620.86B.02.01.0013.121520200651 12/15/2020\n[  +0.000001] Workqueue: i40e i40e_service_task [i40e]\n[  +0.000024] RIP: 0010:check_flush_dependency+0x10b/0x120\n[  +0.000003] Code: ff 49 8b 54 24 18 48 8d 8b b0 00 00 00 49 89 e8 48\n81 c6 b0 00 00 00 48 c7 c7 b0 97 fa 9f c6 05 8a cc 1f 02 01 e8 35 b3 fd\nff \u003c0f\u003e 0b e9 10 ff ff ff 80 3d 78 cc 1f 02 00 75 94 e9 46 ff ff ff 90\n[  +0.000002] RSP: 0018:ffffbd294976bcf8 EFLAGS: 00010282\n[  +0.000002] RAX: 0000000000000000 RBX: ffff94d4c483c000 RCX:\n0000000000000027\n[  +0.000001] RDX: ffff94d47f620bc8 RSI: 0000000000000001 RDI:\nffff94d47f620bc0\n[  +0.000001] RBP: 0000000000000000 R08: 0000000000000000 R09:\n00000000ffff7fff\n[  +0.000001] R10: ffffbd294976bb98 R11: ffffffffa0be65e8 R12:\nffff94c5451ea180\n[  +0.000001] R13: ffff94c5ab5e8000 R14: ffff94c5c20b6e05 R15:\nffff94c5f1330ab0\n[  +0.000001] FS:  0000000000000000(0000) GS:ffff94d47f600000(0000)\nknlGS:0000000000000000\n[  +0.000002] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000001] CR2: 00007f9e6f1fca70 CR3: 0000000038e20004 CR4:\n00000000007706f0\n[  +0.000000] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[  +0.000001] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[  +0.000001] PKRU: 55555554\n[  +0.000001] Call Trace:\n[  +0.000001]  \u003cTASK\u003e\n[  +0.000002]  ? __warn+0x80/0x130\n[  +0.000003]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  ? report_bug+0x195/0x1a0\n[  +0.000005]  ? handle_bug+0x3c/0x70\n[  +0.000003]  ? exc_invalid_op+0x14/0x70\n[  +0.000002]  ? asm_exc_invalid_op+0x16/0x20\n[  +0.000006]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  ? check_flush_dependency+0x10b/0x120\n[  +0.000002]  __flush_workqueue+0x126/0x3f0\n[  +0.000015]  ib_cache_cleanup_one+0x1c/0xe0 [ib_core]\n[  +0.000056]  __ib_unregister_device+0x6a/0xb0 [ib_core]\n[  +0.000023]  ib_unregister_device_and_put+0x34/0x50 [ib_core]\n[  +0.000020]  i40iw_close+0x4b/0x90 [irdma]\n[  +0.000022]  i40e_notify_client_of_netdev_close+0x54/0xc0 [i40e]\n[  +0.000035]  i40e_service_task+0x126/0x190 [i40e]\n[  +0.000024]  process_one_work+0x174/0x340\n[  +0.000003]  worker_th\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36005",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: honor table dormant flag from netdev release event path\n\nCheck for table dormant flag otherwise netdev release event path tries\nto unregister an already unregistered hook.\n\n[524854.857999] ------------[ cut here ]------------\n[524854.858010] WARNING: CPU: 0 PID: 3386599 at net/netfilter/core.c:501 __nf_unregister_net_hook+0x21a/0x260\n[...]\n[524854.858848] CPU: 0 PID: 3386599 Comm: kworker/u32:2 Not tainted 6.9.0-rc3+ #365\n[524854.858869] Workqueue: netns cleanup_net\n[524854.858886] RIP: 0010:__nf_unregister_net_hook+0x21a/0x260\n[524854.858903] Code: 24 e8 aa 73 83 ff 48 63 43 1c 83 f8 01 0f 85 3d ff ff ff e8 98 d1 f0 ff 48 8b 3c 24 e8 8f 73 83 ff 48 63 43 1c e9 26 ff ff ff \u003c0f\u003e 0b 48 83 c4 18 48 c7 c7 00 68 e9 82 5b 5d 41 5c 41 5d 41 5e 41\n[524854.858914] RSP: 0018:ffff8881e36d79e0 EFLAGS: 00010246\n[524854.858926] RAX: 0000000000000000 RBX: ffff8881339ae790 RCX: ffffffff81ba524a\n[524854.858936] RDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881c8a16438\n[524854.858945] RBP: ffff8881c8a16438 R08: 0000000000000001 R09: ffffed103c6daf34\n[524854.858954] R10: ffff8881e36d79a7 R11: 0000000000000000 R12: 0000000000000005\n[524854.858962] R13: ffff8881c8a16000 R14: 0000000000000000 R15: ffff8881351b5a00\n[524854.858971] FS:  0000000000000000(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[524854.858982] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[524854.858991] CR2: 00007fc9be0f16f4 CR3: 00000001437cc004 CR4: 00000000001706f0\n[524854.859000] Call Trace:\n[524854.859006]  \u003cTASK\u003e\n[524854.859013]  ? __warn+0x9f/0x1a0\n[524854.859027]  ? __nf_unregister_net_hook+0x21a/0x260\n[524854.859044]  ? report_bug+0x1b1/0x1e0\n[524854.859060]  ? handle_bug+0x3c/0x70\n[524854.859071]  ? exc_invalid_op+0x17/0x40\n[524854.859083]  ? asm_exc_invalid_op+0x1a/0x20\n[524854.859100]  ? __nf_unregister_net_hook+0x6a/0x260\n[524854.859116]  ? __nf_unregister_net_hook+0x21a/0x260\n[524854.859135]  nf_tables_netdev_event+0x337/0x390 [nf_tables]\n[524854.859304]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]\n[524854.859461]  ? packet_notifier+0xb3/0x360\n[524854.859476]  ? _raw_spin_unlock_irqrestore+0x11/0x40\n[524854.859489]  ? dcbnl_netdevice_event+0x35/0x140\n[524854.859507]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]\n[524854.859661]  notifier_call_chain+0x7d/0x140\n[524854.859677]  unregister_netdevice_many_notify+0x5e1/0xae0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36006",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix incorrect list API usage\n\nBoth the function that migrates all the chunks within a region and the\nfunction that migrates all the entries within a chunk call\nlist_first_entry() on the respective lists without checking that the\nlists are not empty. This is incorrect usage of the API, which leads to\nthe following warning [1].\n\nFix by returning if the lists are empty as there is nothing to migrate\nin this case.\n\n[1]\nWARNING: CPU: 0 PID: 6437 at drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:1266 mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1/0\u003e\nModules linked in:\nCPU: 0 PID: 6437 Comm: kworker/0:37 Not tainted 6.9.0-rc3-custom-00883-g94a65f079ef6 #39\nHardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1/0x2c0\n[...]\nCall Trace:\n \u003cTASK\u003e\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c/0x4a0\n process_one_work+0x151/0x370\n worker_thread+0x2cb/0x3e0\n kthread+0xd0/0x100\n ret_from_fork+0x34/0x50\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36007",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix warning during rehash\n\nAs previously explained, the rehash delayed work migrates filters from\none region to another. This is done by iterating over all chunks (all\nthe filters with the same priority) in the region and in each chunk\niterating over all the filters.\n\nWhen the work runs out of credits it stores the current chunk and entry\nas markers in the per-work context so that it would know where to resume\nthe migration from the next time the work is scheduled.\n\nUpon error, the chunk marker is reset to NULL, but without resetting the\nentry markers despite being relative to it. This can result in migration\nbeing resumed from an entry that does not belong to the chunk being\nmigrated. In turn, this will eventually lead to a chunk being iterated\nover as if it is an entry. Because of how the two structures happen to\nbe defined, this does not lead to KASAN splats, but to warnings such as\n[1].\n\nFix by creating a helper that resets all the markers and call it from\nall the places the currently only reset the chunk marker. For good\nmeasures also call it when starting a completely new rehash. Add a\nwarning to avoid future cases.\n\n[1]\nWARNING: CPU: 7 PID: 1076 at drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.c:407 mlxsw_afk_encode+0x242/0x2f0\nModules linked in:\nCPU: 7 PID: 1076 Comm: kworker/7:24 Tainted: G        W          6.9.0-rc3-custom-00880-g29e61d91b77b #29\nHardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_afk_encode+0x242/0x2f0\n[...]\nCall Trace:\n \u003cTASK\u003e\n mlxsw_sp_acl_atcam_entry_add+0xd9/0x3c0\n mlxsw_sp_acl_tcam_entry_create+0x5e/0xa0\n mlxsw_sp_acl_tcam_vchunk_migrate_all+0x109/0x290\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c/0x470\n process_one_work+0x151/0x370\n worker_thread+0x2cb/0x3e0\n kthread+0xd0/0x100\n ret_from_fork+0x34/0x50\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36008",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: check for NULL idev in ip_route_use_hint()\n\nsyzbot was able to trigger a NULL deref in fib_validate_source()\nin an old tree [1].\n\nIt appears the bug exists in latest trees.\n\nAll calls to __in_dev_get_rcu() must be checked for a NULL result.\n\n[1]\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 2 PID: 3257 Comm: syz-executor.3 Not tainted 5.10.0-syzkaller #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\n RIP: 0010:fib_validate_source+0xbf/0x15a0 net/ipv4/fib_frontend.c:425\nCode: 18 f2 f2 f2 f2 42 c7 44 20 23 f3 f3 f3 f3 48 89 44 24 78 42 c6 44 20 27 f3 e8 5d 88 48 fc 4c 89 e8 48 c1 e8 03 48 89 44 24 18 \u003c42\u003e 80 3c 20 00 74 08 4c 89 ef e8 d2 15 98 fc 48 89 5c 24 10 41 bf\nRSP: 0018:ffffc900015fee40 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88800f7a4000 RCX: ffff88800f4f90c0\nRDX: 0000000000000000 RSI: 0000000004001eac RDI: ffff8880160c64c0\nRBP: ffffc900015ff060 R08: 0000000000000000 R09: ffff88800f7a4000\nR10: 0000000000000002 R11: ffff88800f4f90c0 R12: dffffc0000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: ffff88800f7a4000\nFS:  00007f938acfe6c0(0000) GS:ffff888058c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f938acddd58 CR3: 000000001248e000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  ip_route_use_hint+0x410/0x9b0 net/ipv4/route.c:2231\n  ip_rcv_finish_core+0x2c4/0x1a30 net/ipv4/ip_input.c:327\n  ip_list_rcv_finish net/ipv4/ip_input.c:612 [inline]\n  ip_sublist_rcv+0x3ed/0xe50 net/ipv4/ip_input.c:638\n  ip_list_rcv+0x422/0x470 net/ipv4/ip_input.c:673\n  __netif_receive_skb_list_ptype net/core/dev.c:5572 [inline]\n  __netif_receive_skb_list_core+0x6b1/0x890 net/core/dev.c:5620\n  __netif_receive_skb_list net/core/dev.c:5672 [inline]\n  netif_receive_skb_list_internal+0x9f9/0xdc0 net/core/dev.c:5764\n  netif_receive_skb_list+0x55/0x3e0 net/core/dev.c:5816\n  xdp_recv_frames net/bpf/test_run.c:257 [inline]\n  xdp_test_run_batch net/bpf/test_run.c:335 [inline]\n  bpf_test_run_xdp_live+0x1818/0x1d00 net/bpf/test_run.c:363\n  bpf_prog_test_run_xdp+0x81f/0x1170 net/bpf/test_run.c:1376\n  bpf_prog_test_run+0x349/0x3c0 kernel/bpf/syscall.c:3736\n  __sys_bpf+0x45c/0x710 kernel/bpf/syscall.c:5115\n  __do_sys_bpf kernel/bpf/syscall.c:5201 [inline]\n  __se_sys_bpf kernel/bpf/syscall.c:5199 [inline]\n  __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5199",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36009",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix netdev refcount issue\n\nThe dev_tracker is added to ax25_cb in ax25_bind(). When the\nax25 device is detaching, the dev_tracker of ax25_cb should be\ndeallocated in ax25_kill_by_device() instead of the dev_tracker\nof ax25_dev. The log reported by ref_tracker is shown below:\n\n[   80.884935] ref_tracker: reference already released.\n[   80.885150] ref_tracker: allocated in:\n[   80.885349]  ax25_dev_device_up+0x105/0x540\n[   80.885730]  ax25_device_event+0xa4/0x420\n[   80.885730]  notifier_call_chain+0xc9/0x1e0\n[   80.885730]  __dev_notify_flags+0x138/0x280\n[   80.885730]  dev_change_flags+0xd7/0x180\n[   80.885730]  dev_ifsioc+0x6a9/0xa30\n[   80.885730]  dev_ioctl+0x4d8/0xd90\n[   80.885730]  sock_do_ioctl+0x1c2/0x2d0\n[   80.885730]  sock_ioctl+0x38b/0x4f0\n[   80.885730]  __se_sys_ioctl+0xad/0xf0\n[   80.885730]  do_syscall_64+0xc4/0x1b0\n[   80.885730]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   80.885730] ref_tracker: freed in:\n[   80.885730]  ax25_device_event+0x272/0x420\n[   80.885730]  notifier_call_chain+0xc9/0x1e0\n[   80.885730]  dev_close_many+0x272/0x370\n[   80.885730]  unregister_netdevice_many_notify+0x3b5/0x1180\n[   80.885730]  unregister_netdev+0xcf/0x120\n[   80.885730]  sixpack_close+0x11f/0x1b0\n[   80.885730]  tty_ldisc_kill+0xcb/0x190\n[   80.885730]  tty_ldisc_hangup+0x338/0x3d0\n[   80.885730]  __tty_hangup+0x504/0x740\n[   80.885730]  tty_release+0x46e/0xd80\n[   80.885730]  __fput+0x37f/0x770\n[   80.885730]  __x64_sys_close+0x7b/0xb0\n[   80.885730]  do_syscall_64+0xc4/0x1b0\n[   80.885730]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   80.893739] ------------[ cut here ]------------\n[   80.894030] WARNING: CPU: 2 PID: 140 at lib/ref_tracker.c:255 ref_tracker_free+0x47b/0x6b0\n[   80.894297] Modules linked in:\n[   80.894929] CPU: 2 PID: 140 Comm: ax25_conn_rel_6 Not tainted 6.9.0-rc4-g8cd26fd90c1a #11\n[   80.895190] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qem4\n[   80.895514] RIP: 0010:ref_tracker_free+0x47b/0x6b0\n[   80.895808] Code: 83 c5 18 4c 89 eb 48 c1 eb 03 8a 04 13 84 c0 0f 85 df 01 00 00 41 83 7d 00 00 75 4b 4c 89 ff 9\n[   80.896171] RSP: 0018:ffff888009edf8c0 EFLAGS: 00000286\n[   80.896339] RAX: 1ffff1100141ac00 RBX: 1ffff1100149463b RCX: dffffc0000000000\n[   80.896502] RDX: 0000000000000001 RSI: 0000000000000246 RDI: ffff88800a0d6518\n[   80.896925] RBP: ffff888009edf9b0 R08: ffff88806d3288d3 R09: 1ffff1100da6511a\n[   80.897212] R10: dffffc0000000000 R11: ffffed100da6511b R12: ffff88800a4a31d4\n[   80.897859] R13: ffff88800a4a31d8 R14: dffffc0000000000 R15: ffff88800a0d6518\n[   80.898279] FS:  00007fd88b7fe700(0000) GS:ffff88806d300000(0000) knlGS:0000000000000000\n[   80.899436] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   80.900181] CR2: 00007fd88c001d48 CR3: 000000000993e000 CR4: 00000000000006f0\n...\n[   80.935774] ref_tracker: sp%d@000000000bb9df3d has 1/1 users at\n[   80.935774]      ax25_bind+0x424/0x4e0\n[   80.935774]      __sys_bind+0x1d9/0x270\n[   80.935774]      __x64_sys_bind+0x75/0x80\n[   80.935774]      do_syscall_64+0xc4/0x1b0\n[   80.935774]      entry_SYSCALL_64_after_hwframe+0x67/0x6f\n\nChange ax25_dev-\u003edev_tracker to the dev_tracker of ax25_cb\nin order to mitigate the bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36010",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Fix string truncation warnings in igb_set_fw_version\n\nCommit 1978d3ead82c (\"intel: fix string truncation warnings\")\nfixes '-Wformat-truncation=' warnings in igb_main.c by using kasprintf.\n\ndrivers/net/ethernet/intel/igb/igb_main.c:3092:53: warning:'%d' directive output may be truncated writing between 1 and 5 bytes into a region of size between 1 and 13 [-Wformat-truncation=]\n 3092 |                                  \"%d.%d, 0x%08x, %d.%d.%d\",\n      |                                                     ^~\ndrivers/net/ethernet/intel/igb/igb_main.c:3092:34: note:directive argument in the range [0, 65535]\n 3092 |                                  \"%d.%d, 0x%08x, %d.%d.%d\",\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~\ndrivers/net/ethernet/intel/igb/igb_main.c:3092:34: note:directive argument in the range [0, 65535]\ndrivers/net/ethernet/intel/igb/igb_main.c:3090:25: note:'snprintf' output between 23 and 43 bytes into a destination of size 32\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.\n\nFix this warning by using a larger space for adapter-\u003efw_version,\nand then fall back and continue to use snprintf.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: HCI: Fix potential null-ptr-deref\n\nFix potential null-ptr-deref in hci_le_big_sync_established_evt().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36012",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: msft: fix slab-use-after-free in msft_do_close()\n\nTying the msft-\u003edata lifetime to hdev by freeing it in\nhci_release_dev() to fix the following case:\n\n[use]\nmsft_do_close()\n  msft = hdev-\u003emsft_data;\n  if (!msft)                      ...(1) \u003c- passed.\n    return;\n  mutex_lock(\u0026msft-\u003efilter_lock); ...(4) \u003c- used after freed.\n\n[free]\nmsft_unregister()\n  msft = hdev-\u003emsft_data;\n  hdev-\u003emsft_data = NULL;         ...(2)\n  kfree(msft);                    ...(3) \u003c- msft is freed.\n\n==================================================================\nBUG: KASAN: slab-use-after-free in __mutex_lock_common\nkernel/locking/mutex.c:587 [inline]\nBUG: KASAN: slab-use-after-free in __mutex_lock+0x8f/0xc30\nkernel/locking/mutex.c:752\nRead of size 8 at addr ffff888106cbbca8 by task kworker/u5:2/309",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()\n\nExtend a critical section to prevent chan from early freeing.\nAlso make the l2cap_connect() return type void. Nothing is using the\nreturned value but it is ugly to return a potentially freed pointer.\nMaking it void will help with backports because earlier kernels did use\nthe return value. Now the compile will break for kernels where this\npatch is not a complete fix.\n\nCall stack summary:\n\n[use]\nl2cap_bredr_sig_cmd\n  l2cap_connect\n    mutex_lock(\u0026conn-\u003echan_lock);\n  | chan = pchan-\u003eops-\u003enew_connection(pchan); \u003c- alloc chan\n  | __l2cap_chan_add(conn, chan);\n  |   l2cap_chan_hold(chan);\n  |   list_add(\u0026chan-\u003elist, \u0026conn-\u003echan_l);   ... (1)\n    mutex_unlock(\u0026conn-\u003echan_lock);\n    chan-\u003econf_state              ... (4) \u003c- use after free\n\n[free]\nl2cap_conn_del\n  mutex_lock(\u0026conn-\u003echan_lock);\n| foreach chan in conn-\u003echan_l:            ... (2)\n|   l2cap_chan_put(chan);\n|     l2cap_chan_destroy\n|       kfree(chan)               ... (3) \u003c- chan freed\n  mutex_unlock(\u0026conn-\u003echan_lock);\n\n==================================================================\nBUG: KASAN: slab-use-after-free in instrument_atomic_read\ninclude/linux/instrumented.h:68 [inline]\nBUG: KASAN: slab-use-after-free in _test_bit\ninclude/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]\nBUG: KASAN: slab-use-after-free in l2cap_connect+0xa67/0x11a0\nnet/bluetooth/l2cap_core.c:4260\nRead of size 8 at addr ffff88810bf040a0 by task kworker/u3:1/311",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/arm/malidp: fix a possible null pointer dereference\n\nIn malidp_mw_connector_reset, new memory is allocated with kzalloc, but\nno check is performed. In order to prevent null pointer dereferencing,\nensure that mw_state is checked before calling\n__drm_atomic_helper_connector_reset.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nppdev: Add an error check in register_device\n\nIn register_device, the return value of ida_simple_get is unchecked,\nin witch ida_simple_get will use an invalid index value.\n\nTo address this issue, index should be checked after ida_simple_get. When\nthe index value is abnormal, a warning message should be printed, the port\nshould be dropped, and the value should be recorded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix possible out-of-bounds in gsm0_receive()\n\nAssuming the following:\n- side A configures the n_gsm in basic option mode\n- side B sends the header of a basic option mode frame with data length 1\n- side A switches to advanced option mode\n- side B sends 2 data bytes which exceeds gsm-\u003elen\n  Reason: gsm-\u003elen is not used in advanced option mode.\n- side A switches to basic option mode\n- side B keeps sending until gsm0_receive() writes past gsm-\u003ebuf\n  Reason: Neither gsm-\u003estate nor gsm-\u003elen have been reset after\n  reconfiguration.\n\nFix this by changing gsm-\u003ecount to gsm-\u003elen comparison from equal to less\nthan. Also add upper limit checks against the constant MAX_MRU in\ngsm0_receive() and gsm1_receive() to harden against memory corruption of\ngsm-\u003elen and gsm-\u003emru.\n\nAll other checks remain as we still need to limit the data according to the\nuser configuration and actual payload size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36017",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: Correct nested IFLA_VF_VLAN_LIST attribute validation\n\nEach attribute inside a nested IFLA_VF_VLAN_LIST is assumed to be a\nstruct ifla_vf_vlan_info so the size of such attribute needs to be at least\nof sizeof(struct ifla_vf_vlan_info) which is 14 bytes.\nThe current size validation in do_setvfinfo is against NLA_HDRLEN (4 bytes)\nwhich is less than sizeof(struct ifla_vf_vlan_info) so this validation\nis not enough and a too small attribute might be cast to a\nstruct ifla_vf_vlan_info, this might result in an out of bands\nread access when accessing the saved (casted) entry in ivvl.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36018",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau/uvmm: fix addr/range calcs for remap operations\n\ndEQP-VK.sparse_resources.image_rebind.2d_array.r64i.128_128_8\nwas causing a remap operation like the below.\n\nop_remap: prev: 0000003fffed0000 00000000000f0000 00000000a5abd18a 0000000000000000\nop_remap: next:\nop_remap: unmap: 0000003fffed0000 0000000000100000 0\nop_map: map: 0000003ffffc0000 0000000000010000 000000005b1ba33c 00000000000e0000\n\nThis was resulting in an unmap operation from 0x3fffed0000+0xf0000, 0x100000\nwhich was corrupting the pagetables and oopsing the kernel.\n\nFixes the prev + unmap range calcs to use start/end and map back to addr/range.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36019",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregmap: maple: Fix cache corruption in regcache_maple_drop()\n\nWhen keeping the upper end of a cache block entry, the entry[] array\nmust be indexed by the offset from the base register of the block,\ni.e. max - mas.index.\n\nThe code was indexing entry[] by only the register address, leading\nto an out-of-bounds access that copied some part of the kernel\nmemory over the cache contents.\n\nThis bug was not detected by the regmap KUnit test because it only\ntests with a block of registers starting at 0, so mas.index == 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: fix vf may be used uninitialized in this function warning\n\nTo fix the regression introduced by commit 52424f974bc5, which causes\nservers hang in very hard to reproduce conditions with resets races.\nUsing two sources for the information is the root cause.\nIn this function before the fix bumping v didn't mean bumping vf\npointer. But the code used this variables interchangeably, so stale vf\ncould point to different/not intended vf.\n\nRemove redundant \"v\" variable and iterate via single VF pointer across\nwhole function instead to guarantee VF pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix kernel crash when devlink reload during pf initialization\n\nThe devlink reload process will access the hardware resources,\nbut the register operation is done before the hardware is initialized.\nSo, processing the devlink reload during initialization may lead to kernel\ncrash. This patch fixes this by taking devl_lock during initialization.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Disable idle reallow as part of command/gpint execution\n\n[Why]\nWorkaroud for a race condition where DMCUB is in the process of\ncommitting to IPS1 during the handshake causing us to miss the\ntransition into IPS2 and touch the INBOX1 RPTR causing a HW hang.\n\n[How]\nDisable the reallow to ensure that we have enough of a gap between entry\nand exit and we're not seeing back-to-back wake_and_executes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36025",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix off by one in qla_edif_app_getstats()\n\nThe app_reply-\u003eelem[] array is allocated earlier in this function and it\nhas app_req.num_ports elements.  Thus this \u003e comparison needs to be \u003e= to\nprevent memory corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36026",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: fixes a random hang in S4 for SMU v13.0.4/11\n\nWhile doing multiple S4 stress tests, GC/RLC/PMFW get into\nan invalid state resulting into hard hangs.\n\nAdding a GFX reset as workaround just before sending the\nMP1_UNLOAD message avoids this failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36029",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdhci-msm: pervent access to suspended controller\n\nGeneric sdhci code registers LED device and uses host-\u003eruntime_suspended\nflag to protect access to it. The sdhci-msm driver doesn't set this flag,\nwhich causes a crash when LED is accessed while controller is runtime\nsuspended. Fix this by setting the flag correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36030",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-af: fix the double free in rvu_npc_freemem()\n\nClang static checker(scan-build) warning:\ndrivers/net/ethernet/marvell/octeontx2/af/rvu_npc.c:line 2184, column 2\nAttempt to free released memory.\n\nnpc_mcam_rsrcs_deinit() has released 'mcam-\u003ecounters.bmap'. Deleted this\nredundant kfree() to fix this double free problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36032",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: qca: fix info leak when fetching fw build id\n\nAdd the missing sanity checks and move the 255-byte build-id buffer off\nthe stack to avoid leaking stack data through debugfs in case the\nbuild-info reply is malformed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36281",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Use mlx5_ipsec_rx_status_destroy to correctly delete status rules\n\nrx_create no longer allocates a modify_hdr instance that needs to be\ncleaned up. The mlx5_modify_header_dealloc call will lead to a NULL pointer\ndereference. A leak in the rules also previously occurred since there are\nnow two rules populated related to status.\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000000\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 109907067 P4D 109907067 PUD 116890067 PMD 0\n  Oops: 0000 [#1] SMP\n  CPU: 1 PID: 484 Comm: ip Not tainted 6.9.0-rc2-rrameshbabu+ #254\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS Arch Linux 1.16.3-1-1 04/01/2014\n  RIP: 0010:mlx5_modify_header_dealloc+0xd/0x70\n  \u003csnip\u003e\n  Call Trace:\n   \u003cTASK\u003e\n   ? show_regs+0x60/0x70\n   ? __die+0x24/0x70\n   ? page_fault_oops+0x15f/0x430\n   ? free_to_partial_list.constprop.0+0x79/0x150\n   ? do_user_addr_fault+0x2c9/0x5c0\n   ? exc_page_fault+0x63/0x110\n   ? asm_exc_page_fault+0x27/0x30\n   ? mlx5_modify_header_dealloc+0xd/0x70\n   rx_create+0x374/0x590\n   rx_add_rule+0x3ad/0x500\n   ? rx_add_rule+0x3ad/0x500\n   ? mlx5_cmd_exec+0x2c/0x40\n   ? mlx5_create_ipsec_obj+0xd6/0x200\n   mlx5e_accel_ipsec_fs_add_rule+0x31/0xf0\n   mlx5e_xfrm_add_state+0x426/0xc00\n  \u003csnip\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36477",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntpm_tis_spi: Account for SPI header when allocating TPM SPI xfer buffer\n\nThe TPM SPI transfer mechanism uses MAX_SPI_FRAMESIZE for computing the\nmaximum transfer length and the size of the transfer buffer. As such, it\ndoes not account for the 4 bytes of header that prepends the SPI data\nframe. This can result in out-of-bounds accesses and was confirmed with\nKASAN.\n\nIntroduce SPI_HDRSIZE to account for the header and use to allocate the\ntransfer buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36478",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnull_blk: fix null-ptr-dereference while configuring 'power' and 'submit_queues'\n\nWriting 'power' and 'submit_queues' concurrently will trigger kernel\npanic:\n\nTest script:\n\nmodprobe null_blk nr_devices=0\nmkdir -p /sys/kernel/config/nullb/nullb0\nwhile true; do echo 1 \u003e submit_queues; echo 4 \u003e submit_queues; done \u0026\nwhile true; do echo 1 \u003e power; echo 0 \u003e power; done\n\nTest result:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000148\nOops: 0000 [#1] PREEMPT SMP\nRIP: 0010:__lock_acquire+0x41d/0x28f0\nCall Trace:\n \u003cTASK\u003e\n lock_acquire+0x121/0x450\n down_write+0x5f/0x1d0\n simple_recursive_removal+0x12f/0x5c0\n blk_mq_debugfs_unregister_hctxs+0x7c/0x100\n blk_mq_update_nr_hw_queues+0x4a3/0x720\n nullb_update_nr_hw_queues+0x71/0xf0 [null_blk]\n nullb_device_submit_queues_store+0x79/0xf0 [null_blk]\n configfs_write_iter+0x119/0x1e0\n vfs_write+0x326/0x730\n ksys_write+0x74/0x150\n\nThis is because del_gendisk() can concurrent with\nblk_mq_update_nr_hw_queues():\n\nnullb_device_power_store\tnullb_apply_submit_queues\n null_del_dev\n del_gendisk\n\t\t\t\t nullb_update_nr_hw_queues\n\t\t\t\t  if (!dev-\u003enullb)\n\t\t\t\t  // still set while gendisk is deleted\n\t\t\t\t   return 0\n\t\t\t\t  blk_mq_update_nr_hw_queues\n dev-\u003enullb = NULL\n\nFix this problem by resuing the global mutex to protect\nnullb_device_power_store() and nullb_update_nr_hw_queues() from configfs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36479",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: bridge: add owner module and take its refcount\n\nThe current implementation of the fpga bridge assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the bridge if\nthe parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_bridge\nstruct and use it to take the module's refcount. Modify the function for\nregistering a bridge to take an additional owner module parameter and\nrename it to avoid conflicts. Use the old function name for a helper macro\nthat automatically sets the module that registers the bridge as the owner.\nThis ensures compatibility with existing low-level control modules and\nreduces the chances of registering a bridge without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga bridge.\n\nOther changes: opportunistically move put_device() from __fpga_bridge_get()\nto fpga_bridge_get() and of_fpga_bridge_get() to improve code clarity since\nthe bridge device is taken in these functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: qca: add missing firmware sanity checks\n\nAdd the missing sanity checks when parsing the firmware files before\ndownloading them to avoid accessing and corrupting memory beyond the\nvmalloced buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36882",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: use memalloc_nofs_save() in page_cache_ra_order()\n\nSee commit f2c817bed58d (\"mm: use memalloc_nofs_save in readahead path\"),\nensure that page_cache_ra_order() do not attempt to reclaim file-backed\npages too, or it leads to a deadlock, found issue when test ext4 large\nfolio.\n\n INFO: task DataXceiver for:7494 blocked for more than 120 seconds.\n \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n task:DataXceiver for state:D stack:0     pid:7494  ppid:1      flags:0x00000200\n Call trace:\n  __switch_to+0x14c/0x240\n  __schedule+0x82c/0xdd0\n  schedule+0x58/0xf0\n  io_schedule+0x24/0xa0\n  __folio_lock+0x130/0x300\n  migrate_pages_batch+0x378/0x918\n  migrate_pages+0x350/0x700\n  compact_zone+0x63c/0xb38\n  compact_zone_order+0xc0/0x118\n  try_to_compact_pages+0xb0/0x280\n  __alloc_pages_direct_compact+0x98/0x248\n  __alloc_pages+0x510/0x1110\n  alloc_pages+0x9c/0x130\n  folio_alloc+0x20/0x78\n  filemap_alloc_folio+0x8c/0x1b0\n  page_cache_ra_order+0x174/0x308\n  ondemand_readahead+0x1c8/0x2b8\n  page_cache_async_ra+0x68/0xb8\n  filemap_readahead.isra.0+0x64/0xa8\n  filemap_get_pages+0x3fc/0x5b0\n  filemap_splice_read+0xf4/0x280\n  ext4_file_splice_read+0x2c/0x48 [ext4]\n  vfs_splice_read.part.0+0xa8/0x118\n  splice_direct_to_actor+0xbc/0x288\n  do_splice_direct+0x9c/0x108\n  do_sendfile+0x328/0x468\n  __arm64_sys_sendfile64+0x8c/0x148\n  invoke_syscall+0x4c/0x118\n  el0_svc_common.constprop.0+0xc8/0xf0\n  do_el0_svc+0x24/0x38\n  el0_svc+0x4c/0x1f8\n  el0t_64_sync_handler+0xc0/0xc8\n  el0t_64_sync+0x188/0x190",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36885",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36889",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: ensure snd_nxt is properly initialized on connect\n\nChristoph reported a splat hinting at a corrupted snd_una:\n\n  WARNING: CPU: 1 PID: 38 at net/mptcp/protocol.c:1005 __mptcp_clean_una+0x4b3/0x620 net/mptcp/protocol.c:1005\n  Modules linked in:\n  CPU: 1 PID: 38 Comm: kworker/1:1 Not tainted 6.9.0-rc1-gbbeac67456c9 #59\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014\n  Workqueue: events mptcp_worker\n  RIP: 0010:__mptcp_clean_una+0x4b3/0x620 net/mptcp/protocol.c:1005\n  Code: be 06 01 00 00 bf 06 01 00 00 e8 a8 12 e7 fe e9 00 fe ff ff e8\n  \t8e 1a e7 fe 0f b7 ab 3e 02 00 00 e9 d3 fd ff ff e8 7d 1a e7 fe\n  \t\u003c0f\u003e 0b 4c 8b bb e0 05 00 00 e9 74 fc ff ff e8 6a 1a e7 fe 0f 0b e9\n  RSP: 0018:ffffc9000013fd48 EFLAGS: 00010293\n  RAX: 0000000000000000 RBX: ffff8881029bd280 RCX: ffffffff82382fe4\n  RDX: ffff8881003cbd00 RSI: ffffffff823833c3 RDI: 0000000000000001\n  RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000\n  R10: 0000000000000000 R11: fefefefefefefeff R12: ffff888138ba8000\n  R13: 0000000000000106 R14: ffff8881029bd908 R15: ffff888126560000\n  FS:  0000000000000000(0000) GS:ffff88813bd00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f604a5dae38 CR3: 0000000101dac002 CR4: 0000000000170ef0\n  Call Trace:\n   \u003cTASK\u003e\n   __mptcp_clean_una_wakeup net/mptcp/protocol.c:1055 [inline]\n   mptcp_clean_una_wakeup net/mptcp/protocol.c:1062 [inline]\n   __mptcp_retrans+0x7f/0x7e0 net/mptcp/protocol.c:2615\n   mptcp_worker+0x434/0x740 net/mptcp/protocol.c:2767\n   process_one_work+0x1e0/0x560 kernel/workqueue.c:3254\n   process_scheduled_works kernel/workqueue.c:3335 [inline]\n   worker_thread+0x3c7/0x640 kernel/workqueue.c:3416\n   kthread+0x121/0x170 kernel/kthread.c:388\n   ret_from_fork+0x44/0x50 arch/x86/kernel/process.c:147\n   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:243\n   \u003c/TASK\u003e\n\nWhen fallback to TCP happens early on a client socket, snd_nxt\nis not yet initialized and any incoming ack will copy such value\ninto snd_una. If the mptcp worker (dumbly) tries mptcp-level\nre-injection after such ack, that would unconditionally trigger a send\nbuffer cleanup using 'bad' snd_una values.\n\nWe could easily disable re-injection for fallback sockets, but such\ndumb behavior already helped catching a few subtle issues and a very\nlow to zero impact in practice.\n\nInstead address the issue always initializing snd_nxt (and write_seq,\nfor consistency) at connect time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/slab: make __free(kfree) accept error pointers\n\nCurrently, if an automatically freed allocation is an error pointer that\nwill lead to a crash.  An example of this is in wm831x_gpio_dbg_show().\n\n   171\tchar *label __free(kfree) = gpiochip_dup_line_label(chip, i);\n   172\tif (IS_ERR(label)) {\n   173\t\tdev_err(wm831x-\u003edev, \"Failed to duplicate label\\n\");\n   174\t\tcontinue;\n   175  }\n\nThe auto clean up function should check for error pointers as well,\notherwise we're going to keep hitting issues like this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36891",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmaple_tree: fix mas_empty_area_rev() null pointer dereference\n\nCurrently the code calls mas_start() followed by mas_data_end() if the\nmaple state is MA_START, but mas_start() may return with the maple state\nnode == NULL.  This will lead to a null pointer dereference when checking\ninformation in the NULL node, which is done in mas_data_end().\n\nAvoid setting the offset if there is no node by waiting until after the\nmaple state is checked for an empty or single entry state.\n\nA user could trigger the events to cause a kernel oops by unmapping all\nvmas to produce an empty maple tree, then mapping a vma that would cause\nthe scenario described above.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: Check for port partner validity before consuming it\n\ntypec_register_partner() does not guarantee partner registration\nto always succeed. In the event of failure, port-\u003epartner is set\nto the error value or NULL. Given that port-\u003epartner validity is\nnot checked, this results in the following crash:\n\nUnable to handle kernel NULL pointer dereference at virtual address xx\n pc : run_state_machine+0x1bc8/0x1c08\n lr : run_state_machine+0x1b90/0x1c08\n..\n Call trace:\n   run_state_machine+0x1bc8/0x1c08\n   tcpm_state_machine_work+0x94/0xe4\n   kthread_worker_fn+0x118/0x328\n   kthread+0x1d0/0x23c\n   ret_from_fork+0x10/0x20\n\nTo prevent the crash, check for port-\u003epartner validity before\nderefencing it in all the call sites.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36894",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_fs: Fix race between aio_cancel() and AIO request complete\n\nFFS based applications can utilize the aio_cancel() callback to dequeue\npending USB requests submitted to the UDC.  There is a scenario where the\nFFS application issues an AIO cancel call, while the UDC is handling a\nsoft disconnect.  For a DWC3 based implementation, the callstack looks\nlike the following:\n\n    DWC3 Gadget                               FFS Application\ndwc3_gadget_soft_disconnect()              ...\n  --\u003e dwc3_stop_active_transfers()\n    --\u003e dwc3_gadget_giveback(-ESHUTDOWN)\n      --\u003e ffs_epfile_async_io_complete()   ffs_aio_cancel()\n        --\u003e usb_ep_free_request()            --\u003e usb_ep_dequeue()\n\nThere is currently no locking implemented between the AIO completion\nhandler and AIO cancel, so the issue occurs if the completion routine is\nrunning in parallel to an AIO cancel call coming from the FFS application.\nAs the completion call frees the USB request (io_data-\u003ereq) the FFS\napplication is also referencing it for the usb_ep_dequeue() call.  This can\nlead to accessing a stale/hanging pointer.\n\ncommit b566d38857fc (\"usb: gadget: f_fs: use io_data-\u003estatus consistently\")\nrelocated the usb_ep_free_request() into ffs_epfile_async_io_complete().\nHowever, in order to properly implement locking to mitigate this issue, the\nspinlock can't be added to ffs_epfile_async_io_complete(), as\nusb_ep_dequeue() (if successfully dequeuing a USB request) will call the\nfunction driver's completion handler in the same context.  Hence, leading\ninto a deadlock.\n\nFix this issue by moving the usb_ep_free_request() back to\nffs_user_copy_worker(), and ensuring that it explicitly sets io_data-\u003ereq\nto NULL after freeing it within the ffs-\u003eeps_lock.  This resolves the race\ncondition above, as the ffs_aio_cancel() routine will not continue\nattempting to dequeue a request that has already been freed, or the\nffs_user_copy_work() not freeing the USB request until the AIO cancel is\ndone referencing it.\n\nThis fix depends on\n  commit b566d38857fc (\"usb: gadget: f_fs: use io_data-\u003estatus\n  consistently\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36895",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: uvc: use correct buffer size when parsing configfs lists\n\nThis commit fixes uvc gadget support on 32-bit platforms.\n\nCommit 0df28607c5cb (\"usb: gadget: uvc: Generalise helper functions for\nreuse\") introduced a helper function __uvcg_iter_item_entries() to aid\nwith parsing lists of items on configfs attributes stores. This function\nis a generalization of another very similar function, which used a\nstack-allocated temporary buffer of fixed size for each item in the list\nand used the sizeof() operator to check for potential buffer overruns.\nThe new function was changed to allocate the now variably sized temp\nbuffer on heap, but wasn't properly updated to also check for max buffer\nsize using the computed size instead of sizeof() operator.\n\nAs a result, the maximum item size was 7 (plus null terminator) on\n64-bit platforms, and 3 on 32-bit ones. While 7 is accidentally just\nbarely enough, 3 is definitely too small for some of UVC configfs\nattributes. For example, dwFrameInteval, specified in 100ns units,\nusually has 6-digit item values, e.g. 166666 for 60fps.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36896",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix access violation during port device removal\n\nTesting with KASAN and syzkaller revealed a bug in port.c:disable_store():\nusb_hub_to_struct_hub() can return NULL if the hub that the port belongs to\nis concurrently removed, but the function does not check for this\npossibility before dereferencing the returned value.\n\nIt turns out that the first dereference is unnecessary, since hub-\u003eintfdev\nis the parent of the port device, so it can be changed easily.  Adding a\ncheck for hub == NULL prevents further problems.\n\nThe same bug exists in the disable_show() routine, and it can be fixed the\nsame way.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36897",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Atom Integrated System Info v2_2 for DCN35\n\nNew request from KMD/VBIOS in order to support new UMA carveout\nmodel. This fixes a null dereference from accessing\nCtx-\u003edc_bios-\u003eintegrated_info while it was NULL.\n\nDAL parses through the BIOS and extracts the necessary\nintegrated_info but was missing a case for the new BIOS\nversion 2.3.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: cdev: fix uninitialised kfifo\n\nIf a line is requested with debounce, and that results in debouncing\nin software, and the line is subsequently reconfigured to enable edge\ndetection then the allocation of the kfifo to contain edge events is\noverlooked.  This results in events being written to and read from an\nuninitialised kfifo.  Read events are returned to userspace.\n\nInitialise the kfifo in the case where the software debounce is\nalready active.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36899",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: cdev: Fix use after free in lineinfo_changed_notify\n\nThe use-after-free issue occurs as follows: when the GPIO chip device file\nis being closed by invoking gpio_chrdev_release(), watched_lines is freed\nby bitmap_free(), but the unregistration of lineinfo_changed_nb notifier\nchain failed due to waiting write rwsem. Additionally, one of the GPIO\nchip's lines is also in the release process and holds the notifier chain's\nread rwsem. Consequently, a race condition leads to the use-after-free of\nwatched_lines.\n\nHere is the typical stack when issue happened:\n\n[free]\ngpio_chrdev_release()\n  --\u003e bitmap_free(cdev-\u003ewatched_lines)                  \u003c-- freed\n  --\u003e blocking_notifier_chain_unregister()\n    --\u003e down_write(\u0026nh-\u003erwsem)                          \u003c-- waiting rwsem\n          --\u003e __down_write_common()\n            --\u003e rwsem_down_write_slowpath()\n                  --\u003e schedule_preempt_disabled()\n                    --\u003e schedule()\n\n[use]\nst54spi_gpio_dev_release()\n  --\u003e gpio_free()\n    --\u003e gpiod_free()\n      --\u003e gpiod_free_commit()\n        --\u003e gpiod_line_state_notify()\n          --\u003e blocking_notifier_call_chain()\n            --\u003e down_read(\u0026nh-\u003erwsem);                  \u003c-- held rwsem\n            --\u003e notifier_call_chain()\n              --\u003e lineinfo_changed_notify()\n                --\u003e test_bit(xxxx, cdev-\u003ewatched_lines) \u003c-- use after free\n\nThe side effect of the use-after-free issue is that a GPIO line event is\nbeing generated for userspace where it shouldn't. However, since the chrdev\nis being closed, userspace won't have the chance to read that event anyway.\n\nTo fix the issue, call the bitmap_free() function after the unregistration\nof lineinfo_changed_nb notifier chain.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix kernel crash when devlink reload during initialization\n\nThe devlink reload process will access the hardware resources,\nbut the register operation is done before the hardware is initialized.\nSo, processing the devlink reload during initialization may lead to kernel\ncrash.\n\nThis patch fixes this by registering the devlink after\nhardware initialization.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: prevent NULL dereference in ip6_output()\n\nAccording to syzbot, there is a chance that ip6_dst_idev()\nreturns NULL in ip6_output(). Most places in IPv6 stack\ndeal with a NULL idev just fine, but not here.\n\nsyzbot reported:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc00000000bc: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x00000000000005e0-0x00000000000005e7]\nCPU: 0 PID: 9775 Comm: syz-executor.4 Not tainted 6.9.0-rc5-syzkaller-00157-g6a30653b604a #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n RIP: 0010:ip6_output+0x231/0x3f0 net/ipv6/ip6_output.c:237\nCode: 3c 1e 00 49 89 df 74 08 4c 89 ef e8 19 58 db f7 48 8b 44 24 20 49 89 45 00 49 89 c5 48 8d 9d e0 05 00 00 48 89 d8 48 c1 e8 03 \u003c42\u003e 0f b6 04 38 84 c0 4c 8b 74 24 28 0f 85 61 01 00 00 8b 1b 31 ff\nRSP: 0018:ffffc9000927f0d8 EFLAGS: 00010202\nRAX: 00000000000000bc RBX: 00000000000005e0 RCX: 0000000000040000\nRDX: ffffc900131f9000 RSI: 0000000000004f47 RDI: 0000000000004f48\nRBP: 0000000000000000 R08: ffffffff8a1f0b9a R09: 1ffffffff1f51fad\nR10: dffffc0000000000 R11: fffffbfff1f51fae R12: ffff8880293ec8c0\nR13: ffff88805d7fc000 R14: 1ffff1100527d91a R15: dffffc0000000000\nFS:  00007f135c6856c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000080 CR3: 0000000064096000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip6_xmit+0xefe/0x17f0 net/ipv6/ip6_output.c:358\n  sctp_v6_xmit+0x9f2/0x13f0 net/sctp/ipv6.c:248\n  sctp_packet_transmit+0x26ad/0x2ca0 net/sctp/output.c:653\n  sctp_packet_singleton+0x22c/0x320 net/sctp/outqueue.c:783\n  sctp_outq_flush_ctrl net/sctp/outqueue.c:914 [inline]\n  sctp_outq_flush+0x6d5/0x3e20 net/sctp/outqueue.c:1212\n  sctp_side_effects net/sctp/sm_sideeffect.c:1198 [inline]\n  sctp_do_sm+0x59cc/0x60c0 net/sctp/sm_sideeffect.c:1169\n  sctp_primitive_ASSOCIATE+0x95/0xc0 net/sctp/primitive.c:73\n  __sctp_connect+0x9cd/0xe30 net/sctp/socket.c:1234\n  sctp_connect net/sctp/socket.c:4819 [inline]\n  sctp_inet_connect+0x149/0x1f0 net/sctp/socket.c:4834\n  __sys_connect_file net/socket.c:2048 [inline]\n  __sys_connect+0x2df/0x310 net/socket.c:2065\n  __do_sys_connect net/socket.c:2075 [inline]\n  __se_sys_connect net/socket.c:2072 [inline]\n  __x64_sys_connect+0x7a/0x90 net/socket.c:2072\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36902",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fib6_rules: avoid possible NULL dereference in fib6_rule_action()\n\nsyzbot is able to trigger the following crash [1],\ncaused by unsafe ip6_dst_idev() use.\n\nIndeed ip6_dst_idev() can return NULL, and must always be checked.\n\n[1]\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 0 PID: 31648 Comm: syz-executor.0 Not tainted 6.9.0-rc4-next-20240417-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\n RIP: 0010:__fib6_rule_action net/ipv6/fib6_rules.c:237 [inline]\n RIP: 0010:fib6_rule_action+0x241/0x7b0 net/ipv6/fib6_rules.c:267\nCode: 02 00 00 49 8d 9f d8 00 00 00 48 89 d8 48 c1 e8 03 42 80 3c 20 00 74 08 48 89 df e8 f9 32 bf f7 48 8b 1b 48 89 d8 48 c1 e8 03 \u003c42\u003e 80 3c 20 00 74 08 48 89 df e8 e0 32 bf f7 4c 8b 03 48 89 ef 4c\nRSP: 0018:ffffc9000fc1f2f0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 1a772f98c8186700\nRDX: 0000000000000003 RSI: ffffffff8bcac4e0 RDI: ffffffff8c1f9760\nRBP: ffff8880673fb980 R08: ffffffff8fac15ef R09: 1ffffffff1f582bd\nR10: dffffc0000000000 R11: fffffbfff1f582be R12: dffffc0000000000\nR13: 0000000000000080 R14: ffff888076509000 R15: ffff88807a029a00\nFS:  00007f55e82ca6c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b31d23000 CR3: 0000000022b66000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  fib_rules_lookup+0x62c/0xdb0 net/core/fib_rules.c:317\n  fib6_rule_lookup+0x1fd/0x790 net/ipv6/fib6_rules.c:108\n  ip6_route_output_flags_noref net/ipv6/route.c:2637 [inline]\n  ip6_route_output_flags+0x38e/0x610 net/ipv6/route.c:2649\n  ip6_route_output include/net/ip6_route.h:93 [inline]\n  ip6_dst_lookup_tail+0x189/0x11a0 net/ipv6/ip6_output.c:1120\n  ip6_dst_lookup_flow+0xb9/0x180 net/ipv6/ip6_output.c:1250\n  sctp_v6_get_dst+0x792/0x1e20 net/sctp/ipv6.c:326\n  sctp_transport_route+0x12c/0x2e0 net/sctp/transport.c:455\n  sctp_assoc_add_peer+0x614/0x15c0 net/sctp/associola.c:662\n  sctp_connect_new_asoc+0x31d/0x6c0 net/sctp/socket.c:1099\n  __sctp_connect+0x66d/0xe30 net/sctp/socket.c:1197\n  sctp_connect net/sctp/socket.c:4819 [inline]\n  sctp_inet_connect+0x149/0x1f0 net/sctp/socket.c:4834\n  __sys_connect_file net/socket.c:2048 [inline]\n  __sys_connect+0x2df/0x310 net/socket.c:2065\n  __do_sys_connect net/socket.c:2075 [inline]\n  __se_sys_connect net/socket.c:2072 [inline]\n  __x64_sys_connect+0x7a/0x90 net/socket.c:2072\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36903",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix potential uninit-value access in __ip6_make_skb()\n\nAs it was done in commit fc1092f51567 (\"ipv4: Fix uninit-value access in\n__ip_make_skb()\") for IPv4, check FLOWI_FLAG_KNOWN_NH on fl6-\u003eflowi6_flags\ninstead of testing HDRINCL on the socket to avoid a race condition which\ncauses uninit-value access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Use refcount_inc_not_zero() in tcp_twsk_unique().\n\nAnderson Nascimento reported a use-after-free splat in tcp_twsk_unique()\nwith nice analysis.\n\nSince commit ec94c2696f0b (\"tcp/dccp: avoid one atomic operation for\ntimewait hashdance\"), inet_twsk_hashdance() sets TIME-WAIT socket's\nsk_refcnt after putting it into ehash and releasing the bucket lock.\n\nThus, there is a small race window where other threads could try to\nreuse the port during connect() and call sock_hold() in tcp_twsk_unique()\nfor the TIME-WAIT socket with zero refcnt.\n\nIf that happens, the refcnt taken by tcp_twsk_unique() is overwritten\nand sock_put() will cause underflow, triggering a real use-after-free\nsomewhere else.\n\nTo avoid the use-after-free, we need to use refcount_inc_not_zero() in\ntcp_twsk_unique() and give up on reusing the port if it returns false.\n\n[0]:\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 0 PID: 1039313 at lib/refcount.c:25 refcount_warn_saturate+0xe5/0x110\nCPU: 0 PID: 1039313 Comm: trigger Not tainted 6.8.6-200.fc39.x86_64 #1\nHardware name: VMware, Inc. VMware20,1/440BX Desktop Reference Platform, BIOS VMW201.00V.21805430.B64.2305221830 05/22/2023\nRIP: 0010:refcount_warn_saturate+0xe5/0x110\nCode: 42 8e ff 0f 0b c3 cc cc cc cc 80 3d aa 13 ea 01 00 0f 85 5e ff ff ff 48 c7 c7 f8 8e b7 82 c6 05 96 13 ea 01 01 e8 7b 42 8e ff \u003c0f\u003e 0b c3 cc cc cc cc 48 c7 c7 50 8f b7 82 c6 05 7a 13 ea 01 01 e8\nRSP: 0018:ffffc90006b43b60 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffff888009bb3ef0 RCX: 0000000000000027\nRDX: ffff88807be218c8 RSI: 0000000000000001 RDI: ffff88807be218c0\nRBP: 0000000000069d70 R08: 0000000000000000 R09: ffffc90006b439f0\nR10: ffffc90006b439e8 R11: 0000000000000003 R12: ffff8880029ede84\nR13: 0000000000004e20 R14: ffffffff84356dc0 R15: ffff888009bb3ef0\nFS:  00007f62c10926c0(0000) GS:ffff88807be00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020ccb000 CR3: 000000004628c005 CR4: 0000000000f70ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? refcount_warn_saturate+0xe5/0x110\n ? __warn+0x81/0x130\n ? refcount_warn_saturate+0xe5/0x110\n ? report_bug+0x171/0x1a0\n ? refcount_warn_saturate+0xe5/0x110\n ? handle_bug+0x3c/0x80\n ? exc_invalid_op+0x17/0x70\n ? asm_exc_invalid_op+0x1a/0x20\n ? refcount_warn_saturate+0xe5/0x110\n tcp_twsk_unique+0x186/0x190\n __inet_check_established+0x176/0x2d0\n __inet_hash_connect+0x74/0x7d0\n ? __pfx___inet_check_established+0x10/0x10\n tcp_v4_connect+0x278/0x530\n __inet_stream_connect+0x10f/0x3d0\n inet_stream_connect+0x3a/0x60\n __sys_connect+0xa8/0xd0\n __x64_sys_connect+0x18/0x20\n do_syscall_64+0x83/0x170\n entry_SYSCALL_64_after_hwframe+0x78/0x80\nRIP: 0033:0x7f62c11a885d\nCode: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d a3 45 0c 00 f7 d8 64 89 01 48\nRSP: 002b:00007f62c1091e58 EFLAGS: 00000296 ORIG_RAX: 000000000000002a\nRAX: ffffffffffffffda RBX: 0000000020ccb004 RCX: 00007f62c11a885d\nRDX: 0000000000000010 RSI: 0000000020ccb000 RDI: 0000000000000003\nRBP: 00007f62c1091e90 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000296 R12: 00007f62c10926c0\nR13: ffffffffffffff88 R14: 0000000000000000 R15: 00007ffe237885b0\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36906",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9381/1: kasan: clear stale stack poison\n\nWe found below OOB crash:\n\n[   33.452494] ==================================================================\n[   33.453513] BUG: KASAN: stack-out-of-bounds in refresh_cpu_vm_stats.constprop.0+0xcc/0x2ec\n[   33.454660] Write of size 164 at addr c1d03d30 by task swapper/0/0\n[   33.455515]\n[   33.455767] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G           O       6.1.25-mainline #1\n[   33.456880] Hardware name: Generic DT based system\n[   33.457555]  unwind_backtrace from show_stack+0x18/0x1c\n[   33.458326]  show_stack from dump_stack_lvl+0x40/0x4c\n[   33.459072]  dump_stack_lvl from print_report+0x158/0x4a4\n[   33.459863]  print_report from kasan_report+0x9c/0x148\n[   33.460616]  kasan_report from kasan_check_range+0x94/0x1a0\n[   33.461424]  kasan_check_range from memset+0x20/0x3c\n[   33.462157]  memset from refresh_cpu_vm_stats.constprop.0+0xcc/0x2ec\n[   33.463064]  refresh_cpu_vm_stats.constprop.0 from tick_nohz_idle_stop_tick+0x180/0x53c\n[   33.464181]  tick_nohz_idle_stop_tick from do_idle+0x264/0x354\n[   33.465029]  do_idle from cpu_startup_entry+0x20/0x24\n[   33.465769]  cpu_startup_entry from rest_init+0xf0/0xf4\n[   33.466528]  rest_init from arch_post_acpi_subsys_init+0x0/0x18\n[   33.467397]\n[   33.467644] The buggy address belongs to stack of task swapper/0/0\n[   33.468493]  and is located at offset 112 in frame:\n[   33.469172]  refresh_cpu_vm_stats.constprop.0+0x0/0x2ec\n[   33.469917]\n[   33.470165] This frame has 2 objects:\n[   33.470696]  [32, 76) 'global_zone_diff'\n[   33.470729]  [112, 276) 'global_node_diff'\n[   33.471294]\n[   33.472095] The buggy address belongs to the physical page:\n[   33.472862] page:3cd72da8 refcount:1 mapcount:0 mapping:00000000 index:0x0 pfn:0x41d03\n[   33.473944] flags: 0x1000(reserved|zone=0)\n[   33.474565] raw: 00001000 ed741470 ed741470 00000000 00000000 00000000 ffffffff 00000001\n[   33.475656] raw: 00000000\n[   33.476050] page dumped because: kasan: bad access detected\n[   33.476816]\n[   33.477061] Memory state around the buggy address:\n[   33.477732]  c1d03c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   33.478630]  c1d03c80: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 00\n[   33.479526] \u003ec1d03d00: 00 04 f2 f2 f2 f2 00 00 00 00 00 00 f1 f1 f1 f1\n[   33.480415]                                                ^\n[   33.481195]  c1d03d80: 00 00 00 00 00 00 00 00 00 00 04 f3 f3 f3 f3 f3\n[   33.482088]  c1d03e00: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\n[   33.482978] ==================================================================\n\nWe find the root cause of this OOB is that arm does not clear stale stack\npoison in the case of cpuidle.\n\nThis patch refer to arch/arm64/kernel/sleep.S to resolve this issue.\n\nFrom cited commit [1] that explain the problem\n\nFunctions which the compiler has instrumented for KASAN place poison on\nthe stack shadow upon entry and remove this poison prior to returning.\n\nIn the case of cpuidle, CPUs exit the kernel a number of levels deep in\nC code.  Any instrumented functions on this critical path will leave\nportions of the stack shadow poisoned.\n\nIf CPUs lose context and return to the kernel via a cold path, we\nrestore a prior context saved in __cpu_suspend_enter are forgotten, and\nwe never remove the poison they placed in the stack shadow area by\nfunctions calls between this and the actual exit of the kernel.\n\nThus, (depending on stackframe layout) subsequent calls to instrumented\nfunctions may hit this stale poison, resulting in (spurious) KASAN\nsplats to the console.\n\nTo avoid this, clear any stale poison from the idle thread for a CPU\nprior to bringing a CPU online.\n\nFrom cited commit [2]\n\nExtend to check for CONFIG_KASAN_STACK\n\n[1] commit 0d97e6d8024c (\"arm64: kasan: clear stale stack poison\")\n[2] commit d56a9ef84bd0 (\"kasan, arm64: unpoison stack only with CONFIG_KASAN_STACK\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Don't free ring buffers that couldn't be re-encrypted\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_encrypted() or set_memory_decrypted() to fail such that an\nerror is returned and the resulting memory is shared. Callers need to\ntake care to handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional or security\nissues.\n\nThe VMBus ring buffer code could free decrypted/shared pages if\nset_memory_decrypted() fails. Check the decrypted field in the struct\nvmbus_gpadl for the ring buffers to decide whether to free the memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36910",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio_hv_generic: Don't free decrypted memory\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_encrypted() or set_memory_decrypted() to fail such that an\nerror is returned and the resulting memory is shared. Callers need to\ntake care to handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional or security\nissues.\n\nThe VMBus device UIO driver could free decrypted/shared pages if\nset_memory_decrypted() fails. Check the decrypted field in the gpadl\nto decide whether to free the memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhv_netvsc: Don't free decrypted memory\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_encrypted() or set_memory_decrypted() to fail such that an\nerror is returned and the resulting memory is shared. Callers need to\ntake care to handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional or security\nissues.\n\nThe netvsc driver could free decrypted/shared pages if\nset_memory_decrypted() fails. Check the decrypted field in the gpadl\nto decide whether to free the memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36912",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Track decrypted status in vmbus_gpadl\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_encrypted() or set_memory_decrypted() to fail such that an\nerror is returned and the resulting memory is shared. Callers need to\ntake care to handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional or security\nissues.\n\nIn order to make sure callers of vmbus_establish_gpadl() and\nvmbus_teardown_gpadl() don't return decrypted/shared pages to\nallocators, add a field in struct vmbus_gpadl to keep track of the\ndecryption status of the buffers. This will allow the callers to\nknow if they should free or leak the pages.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36913",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Leak pages if set_memory_encrypted() fails\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_encrypted() or set_memory_decrypted() to fail such that an\nerror is returned and the resulting memory is shared. Callers need to\ntake care to handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional or security\nissues.\n\nVMBus code could free decrypted pages if set_memory_encrypted()/decrypted()\nfails. Leak the pages if this happens.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36914",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Skip on writeback when it's not applicable\n\n[WHY]\ndynamic memory safety error detector (KASAN) catches and generates error\nmessages \"BUG: KASAN: slab-out-of-bounds\" as writeback connector does not\nsupport certain features which are not initialized.\n\n[HOW]\nSkip them when connector type is DRM_MODE_CONNECTOR_WRITEBACK.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: llcp: fix nfc_llcp_setsockopt() unsafe copies\n\nsyzbot reported unsafe calls to copy_from_sockptr() [1]\n\nUse copy_safe_from_sockptr() instead.\n\n[1]\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\nRead of size 4 at addr ffff88801caa1ec3 by task syz-executor459/5078\n\nCPU: 0 PID: 5078 Comm: syz-executor459 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\n  do_sock_setsockopt+0x3b1/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfd/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7f7fac07fd89\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff660eb788 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f7fac07fd89\nRDX: 0000000000000000 RSI: 0000000000000118 RDI: 0000000000000004\nRBP: 0000000000000000 R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020000a80 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36916",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-iocost: avoid out of bounds shift\n\nUBSAN catches undefined behavior in blk-iocost, where sometimes\niocg-\u003edelay is shifted right by a number that is too large,\nresulting in undefined behavior on some architectures.\n\n[  186.556576] ------------[ cut here ]------------\nUBSAN: shift-out-of-bounds in block/blk-iocost.c:1366:23\nshift exponent 64 is too large for 64-bit type 'u64' (aka 'unsigned long long')\nCPU: 16 PID: 0 Comm: swapper/16 Tainted: G S          E    N 6.9.0-0_fbk700_debug_rc2_kbuilder_0_gc85af715cac0 #1\nHardware name: Quanta Twin Lakes MP/Twin Lakes Passive MP, BIOS F09_3A23 12/08/2020\nCall Trace:\n \u003cIRQ\u003e\n dump_stack_lvl+0x8f/0xe0\n __ubsan_handle_shift_out_of_bounds+0x22c/0x280\n iocg_kick_delay+0x30b/0x310\n ioc_timer_fn+0x2fb/0x1f80\n __run_timer_base+0x1b6/0x250\n...\n\nAvoid that undefined behavior by simply taking the\n\"delay = 0\" branch if the shift is too large.\n\nI am not sure what the symptoms of an undefined value\ndelay will be, but I suspect it could be more than a\nlittle annoying to debug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36917",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix overflow in blk_ioctl_discard()\n\nThere is no check for overflow of 'start + len' in blk_ioctl_discard().\nHung task occurs if submit an discard ioctl with the following param:\n  start = 0x80000000000ff000, len = 0x8000000000fff000;\nAdd the overflow validation now.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Remove spin_lock_bh while releasing resources after upload\n\nThe session resources are used by FW and driver when session is offloaded,\nonce session is uploaded these resources are not used. The lock is not\nrequired as these fields won't be used any longer. The offload and upload\ncalls are sequential, hence lock is not required.\n\nThis will suppress following BUG_ON():\n\n[  449.843143] ------------[ cut here ]------------\n[  449.848302] kernel BUG at mm/vmalloc.c:2727!\n[  449.853072] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[  449.858712] CPU: 5 PID: 1996 Comm: kworker/u24:2 Not tainted 5.14.0-118.el9.x86_64 #1\nRebooting.\n[  449.867454] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.3.4 11/08/2016\n[  449.876966] Workqueue: fc_rport_eq fc_rport_work [libfc]\n[  449.882910] RIP: 0010:vunmap+0x2e/0x30\n[  449.887098] Code: 00 65 8b 05 14 a2 f0 4a a9 00 ff ff 00 75 1b 55 48 89 fd e8 34 36 79 00 48 85 ed 74 0b 48 89 ef 31 f6 5d e9 14 fc ff ff 5d c3 \u003c0f\u003e 0b 0f 1f 44 00 00 41 57 41 56 49 89 ce 41 55 49 89 fd 41 54 41\n[  449.908054] RSP: 0018:ffffb83d878b3d68 EFLAGS: 00010206\n[  449.913887] RAX: 0000000080000201 RBX: ffff8f4355133550 RCX: 000000000d400005\n[  449.921843] RDX: 0000000000000001 RSI: 0000000000001000 RDI: ffffb83da53f5000\n[  449.929808] RBP: ffff8f4ac6675800 R08: ffffb83d878b3d30 R09: 00000000000efbdf\n[  449.937774] R10: 0000000000000003 R11: ffff8f434573e000 R12: 0000000000001000\n[  449.945736] R13: 0000000000001000 R14: ffffb83da53f5000 R15: ffff8f43d4ea3ae0\n[  449.953701] FS:  0000000000000000(0000) GS:ffff8f529fc80000(0000) knlGS:0000000000000000\n[  449.962732] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  449.969138] CR2: 00007f8cf993e150 CR3: 0000000efbe10003 CR4: 00000000003706e0\n[  449.977102] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  449.985065] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  449.993028] Call Trace:\n[  449.995756]  __iommu_dma_free+0x96/0x100\n[  450.000139]  bnx2fc_free_session_resc+0x67/0x240 [bnx2fc]\n[  450.006171]  bnx2fc_upload_session+0xce/0x100 [bnx2fc]\n[  450.011910]  bnx2fc_rport_event_handler+0x9f/0x240 [bnx2fc]\n[  450.018136]  fc_rport_work+0x103/0x5b0 [libfc]\n[  450.023103]  process_one_work+0x1e8/0x3c0\n[  450.027581]  worker_thread+0x50/0x3b0\n[  450.031669]  ? rescuer_thread+0x370/0x370\n[  450.036143]  kthread+0x149/0x170\n[  450.039744]  ? set_kthread_struct+0x40/0x40\n[  450.044411]  ret_from_fork+0x22/0x30\n[  450.048404] Modules linked in: vfat msdos fat xfs nfs_layout_nfsv41_files rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver dm_service_time qedf qed crc8 bnx2fc libfcoe libfc scsi_transport_fc intel_rapl_msr intel_rapl_common x86_pkg_temp_thermal intel_powerclamp dcdbas rapl intel_cstate intel_uncore mei_me pcspkr mei ipmi_ssif lpc_ich ipmi_si fuse zram ext4 mbcache jbd2 loop nfsv3 nfs_acl nfs lockd grace fscache netfs irdma ice sd_mod t10_pi sg ib_uverbs ib_core 8021q garp mrp stp llc mgag200 i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt mxm_wmi fb_sys_fops cec crct10dif_pclmul ahci crc32_pclmul bnx2x drm ghash_clmulni_intel libahci rfkill i40e libata megaraid_sas mdio wmi sunrpc lrw dm_crypt dm_round_robin dm_multipath dm_snapshot dm_bufio dm_mirror dm_region_hash dm_log dm_zero dm_mod linear raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid6_pq libcrc32c crc32c_intel raid1 raid0 iscsi_ibft squashfs be2iscsi bnx2i cnic uio cxgb4i cxgb4 tls\n[  450.048497]  libcxgbi libcxgb qla4xxx iscsi_boot_sysfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi edd ipmi_devintf ipmi_msghandler\n[  450.159753] ---[ end trace 712de2c57c64abc8 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: guard against invalid STA ID on removal\n\nGuard against invalid station IDs in iwl_mvm_mld_rm_sta_id as that would\nresult in out-of-bounds array accesses. This prevents issues should the\ndriver get into a bad state during error handling.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: read txq-\u003eread_ptr under lock\n\nIf we read txq-\u003eread_ptr without lock, we can read the same\nvalue twice, then obtain the lock, and reclaim from there\nto two different places, but crucially reclaim the same\nentry twice, resulting in the WARN_ONCE() a little later.\nFix that by reading txq-\u003eread_ptr under lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/9p: fix uninitialized values during inode evict\n\nIf an iget fails due to not being able to retrieve information\nfrom the server then the inode structure is only partially\ninitialized.  When the inode gets evicted, references to\nuninitialized structures (like fscache cookies) were being\nmade.\n\nThis patch checks for a bad_inode before doing anything other\nthan clearing the inode from the cache.  Since the inode is\nbad, it shouldn't have any state associated with it that needs\nto be written back (and there really isn't a way to complete\nthose anyways).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Release hbalock before calling lpfc_worker_wake_up()\n\nlpfc_worker_wake_up() calls the lpfc_work_done() routine, which takes the\nhbalock.  Thus, lpfc_worker_wake_up() should not be called while holding the\nhbalock to avoid potential deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36926",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/iommu: LPAR panics during boot up with a frozen PE\n\nAt the time of LPAR boot up, partition firmware provides Open Firmware\nproperty ibm,dma-window for the PE. This property is provided on the PCI\nbus the PE is attached to.\n\nThere are execptions where the partition firmware might not provide this\nproperty for the PE at the time of LPAR boot up. One of the scenario is\nwhere the firmware has frozen the PE due to some error condition. This\nPE is frozen for 24 hours or unless the whole system is reinitialized.\n\nWithin this time frame, if the LPAR is booted, the frozen PE will be\npresented to the LPAR but ibm,dma-window property could be missing.\n\nToday, under these circumstances, the LPAR oopses with NULL pointer\ndereference, when configuring the PCI bus the PE is attached to.\n\n  BUG: Kernel NULL pointer dereference on read at 0x000000c8\n  Faulting instruction address: 0xc0000000001024c0\n  Oops: Kernel access of bad area, sig: 7 [#1]\n  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\n  Modules linked in:\n  Supported: Yes\n  CPU: 0 PID: 1 Comm: swapper/0 Not tainted 6.4.0-150600.9-default #1\n  Hardware name: IBM,9043-MRX POWER10 (raw) 0x800200 0xf000006 of:IBM,FW1060.00 (NM1060_023) hv:phyp pSeries\n  NIP:  c0000000001024c0 LR: c0000000001024b0 CTR: c000000000102450\n  REGS: c0000000037db5c0 TRAP: 0300   Not tainted  (6.4.0-150600.9-default)\n  MSR:  8000000002009033 \u003cSF,VEC,EE,ME,IR,DR,RI,LE\u003e  CR: 28000822  XER: 00000000\n  CFAR: c00000000010254c DAR: 00000000000000c8 DSISR: 00080000 IRQMASK: 0\n  ...\n  NIP [c0000000001024c0] pci_dma_bus_setup_pSeriesLP+0x70/0x2a0\n  LR [c0000000001024b0] pci_dma_bus_setup_pSeriesLP+0x60/0x2a0\n  Call Trace:\n    pci_dma_bus_setup_pSeriesLP+0x60/0x2a0 (unreliable)\n    pcibios_setup_bus_self+0x1c0/0x370\n    __of_scan_bus+0x2f8/0x330\n    pcibios_scan_phb+0x280/0x3d0\n    pcibios_init+0x88/0x12c\n    do_one_initcall+0x60/0x320\n    kernel_init_freeable+0x344/0x3e4\n    kernel_init+0x34/0x1d0\n    ret_from_kernel_user_thread+0x14/0x1c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/qeth: Fix kernel panic after setting hsuid\n\nSymptom:\nWhen the hsuid attribute is set for the first time on an IQD Layer3\ndevice while the corresponding network interface is already UP,\nthe kernel will try to execute a napi function pointer that is NULL.\n\nExample:\n---------------------------------------------------------------------------\n[ 2057.572696] illegal operation: 0001 ilc:1 [#1] SMP\n[ 2057.572702] Modules linked in: af_iucv qeth_l3 zfcp scsi_transport_fc sunrpc nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6\nnft_reject nft_ct nf_tables_set nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables libcrc32c nfnetlink ghash_s390 prng xts aes_s390 des_s390 de\ns_generic sha3_512_s390 sha3_256_s390 sha512_s390 vfio_ccw vfio_mdev mdev vfio_iommu_type1 eadm_sch vfio ext4 mbcache jbd2 qeth_l2 bridge stp llc dasd_eckd_mod qeth dasd_mod\n qdio ccwgroup pkey zcrypt\n[ 2057.572739] CPU: 6 PID: 60182 Comm: stress_client Kdump: loaded Not tainted 4.18.0-541.el8.s390x #1\n[ 2057.572742] Hardware name: IBM 3931 A01 704 (LPAR)\n[ 2057.572744] Krnl PSW : 0704f00180000000 0000000000000002 (0x2)\n[ 2057.572748]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:3 PM:0 RI:0 EA:3\n[ 2057.572751] Krnl GPRS: 0000000000000004 0000000000000000 00000000a3b008d8 0000000000000000\n[ 2057.572754]            00000000a3b008d8 cb923a29c779abc5 0000000000000000 00000000814cfd80\n[ 2057.572756]            000000000000012c 0000000000000000 00000000a3b008d8 00000000a3b008d8\n[ 2057.572758]            00000000bab6d500 00000000814cfd80 0000000091317e46 00000000814cfc68\n[ 2057.572762] Krnl Code:#0000000000000000: 0000                illegal\n                         \u003e0000000000000002: 0000                illegal\n                          0000000000000004: 0000                illegal\n                          0000000000000006: 0000                illegal\n                          0000000000000008: 0000                illegal\n                          000000000000000a: 0000                illegal\n                          000000000000000c: 0000                illegal\n                          000000000000000e: 0000                illegal\n[ 2057.572800] Call Trace:\n[ 2057.572801] ([\u003c00000000ec639700\u003e] 0xec639700)\n[ 2057.572803]  [\u003c00000000913183e2\u003e] net_rx_action+0x2ba/0x398\n[ 2057.572809]  [\u003c0000000091515f76\u003e] __do_softirq+0x11e/0x3a0\n[ 2057.572813]  [\u003c0000000090ce160c\u003e] do_softirq_own_stack+0x3c/0x58\n[ 2057.572817] ([\u003c0000000090d2cbd6\u003e] do_softirq.part.1+0x56/0x60)\n[ 2057.572822]  [\u003c0000000090d2cc60\u003e] __local_bh_enable_ip+0x80/0x98\n[ 2057.572825]  [\u003c0000000091314706\u003e] __dev_queue_xmit+0x2be/0xd70\n[ 2057.572827]  [\u003c000003ff803dd6d6\u003e] afiucv_hs_send+0x24e/0x300 [af_iucv]\n[ 2057.572830]  [\u003c000003ff803dd88a\u003e] iucv_send_ctrl+0x102/0x138 [af_iucv]\n[ 2057.572833]  [\u003c000003ff803de72a\u003e] iucv_sock_connect+0x37a/0x468 [af_iucv]\n[ 2057.572835]  [\u003c00000000912e7e90\u003e] __sys_connect+0xa0/0xd8\n[ 2057.572839]  [\u003c00000000912e9580\u003e] sys_socketcall+0x228/0x348\n[ 2057.572841]  [\u003c0000000091514e1a\u003e] system_call+0x2a6/0x2c8\n[ 2057.572843] Last Breaking-Event-Address:\n[ 2057.572844]  [\u003c0000000091317e44\u003e] __napi_poll+0x4c/0x1d8\n[ 2057.572846]\n[ 2057.572847] Kernel panic - not syncing: Fatal exception in interrupt\n-------------------------------------------------------------------------------------------\n\nAnalysis:\nThere is one napi structure per out_q: card-\u003eqdio.out_qs[i].napi\nThe napi.poll functions are set during qeth_open().\n\nSince\ncommit 1cfef80d4c2b (\"s390/qeth: Don't call dev_close/dev_open (DOWN/UP)\")\nqeth_set_offline()/qeth_set_online() no longer call dev_close()/\ndev_open(). So if qeth_free_qdio_queues() cleared\ncard-\u003eqdio.out_qs[i].napi.poll while the network interface was UP and the\ncard was offline, they are not set again.\n\nReproduction:\nchzdev -e $devno layer2=0\nip link set dev $network_interface up\necho 0 \u003e /sys/bus/ccw\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: fix null pointer dereference within spi_sync\n\nIf spi_sync() is called with the non-empty queue and the same spi_message\nis then reused, the complete callback for the message remains set while\nthe context is cleared, leading to a null pointer dereference when the\ncallback is invoked from spi_finalize_current_message().\n\nWith function inlining disabled, the call stack might look like this:\n\n  _raw_spin_lock_irqsave from complete_with_flags+0x18/0x58\n  complete_with_flags from spi_complete+0x8/0xc\n  spi_complete from spi_finalize_current_message+0xec/0x184\n  spi_finalize_current_message from spi_transfer_one_message+0x2a8/0x474\n  spi_transfer_one_message from __spi_pump_transfer_message+0x104/0x230\n  __spi_pump_transfer_message from __spi_transfer_message_noqueue+0x30/0xc4\n  __spi_transfer_message_noqueue from __spi_sync+0x204/0x248\n  __spi_sync from spi_sync+0x24/0x3c\n  spi_sync from mcp251xfd_regmap_crc_read+0x124/0x28c [mcp251xfd]\n  mcp251xfd_regmap_crc_read [mcp251xfd] from _regmap_raw_read+0xf8/0x154\n  _regmap_raw_read from _regmap_bus_read+0x44/0x70\n  _regmap_bus_read from _regmap_read+0x60/0xd8\n  _regmap_read from regmap_read+0x3c/0x5c\n  regmap_read from mcp251xfd_alloc_can_err_skb+0x1c/0x54 [mcp251xfd]\n  mcp251xfd_alloc_can_err_skb [mcp251xfd] from mcp251xfd_irq+0x194/0xe70 [mcp251xfd]\n  mcp251xfd_irq [mcp251xfd] from irq_thread_fn+0x1c/0x78\n  irq_thread_fn from irq_thread+0x118/0x1f4\n  irq_thread from kthread+0xd8/0xf4\n  kthread from ret_from_fork+0x14/0x28\n\nFix this by also setting message-\u003ecomplete to NULL when the transfer is\ncomplete.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a lbuf-sized kernel buffer and copy lbuf from\nuserspace to that buffer. Later, we use scanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using scanf. Fix this issue by using memdup_user_nul instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbna: ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul\ninstead of memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: ensure the copied buf is NUL terminated\n\nCurrently, we allocate a count-sized kernel buffer and copy count bytes\nfrom userspace to that buffer. Later, we use sscanf on this buffer but we\ndon't ensure that the string is terminated inside the buffer, this can lead\nto OOB read when using sscanf. Fix this issue by using memdup_user_nul\ninstead of memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi/unaccepted: touch soft lockup during memory accept\n\nCommit 50e782a86c98 (\"efi/unaccepted: Fix soft lockups caused by\nparallel memory acceptance\") has released the spinlock so other CPUs can\ndo memory acceptance in parallel and not triggers softlockup on other\nCPUs.\n\nHowever the softlock up was intermittent shown up if the memory of the\nTD guest is large, and the timeout of softlockup is set to 1 second:\n\n RIP: 0010:_raw_spin_unlock_irqrestore\n Call Trace:\n ? __hrtimer_run_queues\n \u003cIRQ\u003e\n ? hrtimer_interrupt\n ? watchdog_timer_fn\n ? __sysvec_apic_timer_interrupt\n ? __pfx_watchdog_timer_fn\n ? sysvec_apic_timer_interrupt\n \u003c/IRQ\u003e\n ? __hrtimer_run_queues\n \u003cTASK\u003e\n ? hrtimer_interrupt\n ? asm_sysvec_apic_timer_interrupt\n ? _raw_spin_unlock_irqrestore\n ? __sysvec_apic_timer_interrupt\n ? sysvec_apic_timer_interrupt\n accept_memory\n try_to_accept_memory\n do_huge_pmd_anonymous_page\n get_page_from_freelist\n __handle_mm_fault\n __alloc_pages\n __folio_alloc\n ? __tdx_hypercall\n handle_mm_fault\n vma_alloc_folio\n do_user_addr_fault\n do_huge_pmd_anonymous_page\n exc_page_fault\n ? __do_huge_pmd_anonymous_page\n asm_exc_page_fault\n __handle_mm_fault\n\nWhen the local irq is enabled at the end of accept_memory(), the\nsoftlockup detects that the watchdog on single CPU has not been fed for\na while. That is to say, even other CPUs will not be blocked by\nspinlock, the current CPU might be stunk with local irq disabled for a\nwhile, which hurts not only nmi watchdog but also softlockup.\n\nChao Gao pointed out that the memory accept could be time costly and\nthere was similar report before. Thus to avoid any softlocup detection\nduring this stage, give the softlockup a flag to skip the timeout check\nat the end of accept_memory(), by invoking touch_softlockup_watchdog().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxdp: use flags field to disambiguate broadcast redirect\n\nWhen redirecting a packet using XDP, the bpf_redirect_map() helper will set\nup the redirect destination information in struct bpf_redirect_info (using\nthe __bpf_xdp_redirect_map() helper function), and the xdp_do_redirect()\nfunction will read this information after the XDP program returns and pass\nthe frame on to the right redirect destination.\n\nWhen using the BPF_F_BROADCAST flag to do multicast redirect to a whole\nmap, __bpf_xdp_redirect_map() sets the 'map' pointer in struct\nbpf_redirect_info to point to the destination map to be broadcast. And\nxdp_do_redirect() reacts to the value of this map pointer to decide whether\nit's dealing with a broadcast or a single-value redirect. However, if the\ndestination map is being destroyed before xdp_do_redirect() is called, the\nmap pointer will be cleared out (by bpf_clear_redirect_map()) without\nwaiting for any XDP programs to stop running. This causes xdp_do_redirect()\nto think that the redirect was to a single target, but the target pointer\nis also NULL (since broadcast redirects don't have a single target), so\nthis causes a crash when a NULL pointer is passed to dev_map_enqueue().\n\nTo fix this, change xdp_do_redirect() to react directly to the presence of\nthe BPF_F_BROADCAST flag in the 'flags' value in struct bpf_redirect_info\nto disambiguate between a single-target and a broadcast redirect. And only\nread the 'map' pointer if the broadcast flag is set, aborting if that has\nbeen cleared out in the meantime. This prevents the crash, while keeping\nthe atomic (cmpxchg-based) clearing of the map pointer itself, and without\nadding any more checks in the non-broadcast fast path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, skmsg: Fix NULL pointer dereference in sk_psock_skb_ingress_enqueue\n\nFix NULL pointer data-races in sk_psock_skb_ingress_enqueue() which\nsyzbot reported [1].\n\n[1]\nBUG: KCSAN: data-race in sk_psock_drop / sk_psock_skb_ingress_enqueue\n\nwrite to 0xffff88814b3278b8 of 8 bytes by task 10724 on cpu 1:\n sk_psock_stop_verdict net/core/skmsg.c:1257 [inline]\n sk_psock_drop+0x13e/0x1f0 net/core/skmsg.c:843\n sk_psock_put include/linux/skmsg.h:459 [inline]\n sock_map_close+0x1a7/0x260 net/core/sock_map.c:1648\n unix_release+0x4b/0x80 net/unix/af_unix.c:1048\n __sock_release net/socket.c:659 [inline]\n sock_close+0x68/0x150 net/socket.c:1421\n __fput+0x2c1/0x660 fs/file_table.c:422\n __fput_sync+0x44/0x60 fs/file_table.c:507\n __do_sys_close fs/open.c:1556 [inline]\n __se_sys_close+0x101/0x1b0 fs/open.c:1541\n __x64_sys_close+0x1f/0x30 fs/open.c:1541\n do_syscall_64+0xd3/0x1d0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nread to 0xffff88814b3278b8 of 8 bytes by task 10713 on cpu 0:\n sk_psock_data_ready include/linux/skmsg.h:464 [inline]\n sk_psock_skb_ingress_enqueue+0x32d/0x390 net/core/skmsg.c:555\n sk_psock_skb_ingress_self+0x185/0x1e0 net/core/skmsg.c:606\n sk_psock_verdict_apply net/core/skmsg.c:1008 [inline]\n sk_psock_verdict_recv+0x3e4/0x4a0 net/core/skmsg.c:1202\n unix_read_skb net/unix/af_unix.c:2546 [inline]\n unix_stream_read_skb+0x9e/0xf0 net/unix/af_unix.c:2682\n sk_psock_verdict_data_ready+0x77/0x220 net/core/skmsg.c:1223\n unix_stream_sendmsg+0x527/0x860 net/unix/af_unix.c:2339\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x140/0x180 net/socket.c:745\n ____sys_sendmsg+0x312/0x410 net/socket.c:2584\n ___sys_sendmsg net/socket.c:2638 [inline]\n __sys_sendmsg+0x1e9/0x280 net/socket.c:2667\n __do_sys_sendmsg net/socket.c:2676 [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x46/0x50 net/socket.c:2674\n do_syscall_64+0xd3/0x1d0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nvalue changed: 0xffffffff83d7feb0 -\u003e 0x0000000000000000\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 0 PID: 10713 Comm: syz-executor.4 Tainted: G        W          6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024\n\nPrior to this, commit 4cd12c6065df (\"bpf, sockmap: Fix NULL pointer\ndereference in sk_psock_verdict_data_ready()\") fixed one NULL pointer\nsimilarly due to no protection of saved_data_ready. Here is another\ndifferent caller causing the same issue because of the same reason. So\nwe should protect it with sk_callback_lock read lock because the writer\nside in the sk_psock_drop() uses \"write_lock_bh(\u0026sk-\u003esk_callback_lock);\".\n\nTo avoid errors that could happen in future, I move those two pairs of\nlock into the sk_psock_data_ready(), which is suggested by John Fastabend.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36940",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: core: delete incorrect free in pinctrl_enable()\n\nThe \"pctldev\" struct is allocated in devm_pinctrl_register_and_init().\nIt's a devm_ managed pointer that is freed by devm_pinctrl_dev_release(),\nso freeing it in pinctrl_enable() will lead to a double free.\n\nThe devm_pinctrl_dev_release() function frees the pindescs and destroys\nthe mutex as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36941",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: don't free NULL coalescing rule\n\nIf the parsing fails, we can dereference a NULL pointer here.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36942",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36944",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nReapply \"drm/qxl: simplify qxl_fence_wait\"\n\nThis reverts commit 07ed11afb68d94eadd4ffc082b97c2331307c5ea.\n\nStephen Rostedt reports:\n \"I went to run my tests on my VMs and the tests hung on boot up.\n  Unfortunately, the most I ever got out was:\n\n  [   93.607888] Testing event system initcall: OK\n  [   93.667730] Running tests on all trace events:\n  [   93.669757] Testing all events: OK\n  [   95.631064] ------------[ cut here ]------------\n  Timed out after 60 seconds\"\n\nand further debugging points to a possible circular locking dependency\nbetween the console_owner locking and the worker pool locking.\n\nReverting the commit allows Steve's VM to boot to completion again.\n\n[ This may obviously result in the \"[TTM] Buffer eviction failed\"\n  messages again, which was the reason for that original revert. But at\n  this point this seems preferable to a non-booting system... ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: fix neighbour and rtable leak in smc_ib_find_route()\n\nIn smc_ib_find_route(), the neighbour found by neigh_lookup() and rtable\nresolved by ip_route_output_flow() are not released or put before return.\nIt may cause the refcount leak, so fix it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphonet: fix rtm_phonet_notify() skb allocation\n\nfill_route() stores three components in the skb:\n\n- struct rtmsg\n- RTA_DST (u8)\n- RTA_OIF (u32)\n\nTherefore, rtm_phonet_notify() should use\n\nNLMSG_ALIGN(sizeof(struct rtmsg)) +\nnla_total_size(1) +\nnla_total_size(4)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nqibfs: fix dentry leak\n\nsimple_recursive_removal() drops the pinning references to all positives\nin subtree.  For the cases when its argument has been kept alive by\nthe pinning alone that's exactly the right thing to do, but here\nthe argument comes from dcache lookup, that needs to be balanced by\nexplicit dput().\n\nFucked-up-by: Al Viro \u003cviro@zeniv.linux.org.uk\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36949",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\namd/amdkfd: sync all devices to wait all processes being evicted\n\nIf there are more than one device doing reset in parallel, the first\ndevice will call kfd_suspend_all_processes() to evict all processes\non all devices, this call takes time to finish. other device will\nstart reset and recover without waiting. if the process has not been\nevicted before doing recover, it will be restored, then caused page\nfault.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirewire: ohci: mask bus reset interrupts between ISR and bottom half\n\nIn the FireWire OHCI interrupt handler, if a bus reset interrupt has\noccurred, mask bus reset interrupts until bus_reset_work has serviced and\ncleared the interrupt.\n\nNormally, we always leave bus reset interrupts masked. We infer the bus\nreset from the self-ID interrupt that happens shortly thereafter. A\nscenario where we unmask bus reset interrupts was introduced in 2008 in\na007bb857e0b26f5d8b73c2ff90782d9c0972620: If\nOHCI_PARAM_DEBUG_BUSRESETS (8) is set in the debug parameter bitmask, we\nwill unmask bus reset interrupts so we can log them.\n\nirq_handler logs the bus reset interrupt. However, we can't clear the bus\nreset event flag in irq_handler, because we won't service the event until\nlater. irq_handler exits with the event flag still set. If the\ncorresponding interrupt is still unmasked, the first bus reset will\nusually freeze the system due to irq_handler being called again each\ntime it exits. This freeze can be reproduced by loading firewire_ohci\nwith \"modprobe firewire_ohci debug=-1\" (to enable all debugging output).\nApparently there are also some cases where bus_reset_work will get called\nsoon enough to clear the event, and operation will continue normally.\n\nThis freeze was first reported a few months after a007bb85 was committed,\nbut until now it was never fixed. The debug level could safely be set\nto -1 through sysfs after the module was loaded, but this would be\nineffectual in logging bus reset interrupts since they were only\nunmasked during initialization.\n\nirq_handler will now leave the event flag set but mask bus reset\ninterrupts, so irq_handler won't be called again and there will be no\nfreeze. If OHCI_PARAM_DEBUG_BUSRESETS is enabled, bus_reset_work will\nunmask the interrupt after servicing the event, so future interrupts\nwill be caught as desired.\n\nAs a side effect to this change, OHCI_PARAM_DEBUG_BUSRESETS can now be\nenabled through sysfs in addition to during initial module loading.\nHowever, when enabled through sysfs, logging of bus reset interrupts will\nbe effective only starting with the second bus reset, after\nbus_reset_work has executed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36951",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: range check cp bad op exception interrupts\n\nDue to a CP interrupt bug, bad packet garbage exception codes are raised.\nDo a range check so that the debugger and runtime do not receive garbage\ncodes.\nUpdate the user api to guard exception code type checking as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36952",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Move NPIV's transport unregistration to after resource clean up\n\nThere are cases after NPIV deletion where the fabric switch still believes\nthe NPIV is logged into the fabric.  This occurs when a vport is\nunregistered before the Remove All DA_ID CT and LOGO ELS are sent to the\nfabric.\n\nCurrently fc_remove_host(), which calls dev_loss_tmo for all D_IDs including\nthe fabric D_ID, removes the last ndlp reference and frees the ndlp rport\nobject.  This sometimes causes the race condition where the final DA_ID and\nLOGO are skipped from being sent to the fabric switch.\n\nFix by moving the fc_remove_host() and scsi_remove_host() calls after DA_ID\nand LOGO are sent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36955",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: intel-sdw-acpi: fix usage of device_get_named_child_node()\n\nThe documentation for device_get_named_child_node() mentions this\nimportant point:\n\n\"\nThe caller is responsible for calling fwnode_handle_put() on the\nreturned fwnode pointer.\n\"\n\nAdd fwnode_handle_put() to avoid a leaked reference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36957",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-af: avoid off-by-one read from userspace\n\nWe try to access count + 1 byte from userspace with memdup_user(buffer,\ncount + 1). However, the userspace only provides buffer of count bytes and\nonly these count bytes are verified to be okay to access. To ensure the\ncopied buffer is NUL terminated, we use memdup_user_nul instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: devicetree: fix refcount leak in pinctrl_dt_to_map()\n\nIf we fail to allocate propname buffer, we need to drop the reference\ncount we just took. Because the pinctrl_dt_free_maps() includes the\ndroping operation, here we call it directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix invalid reads in fence signaled events\n\nCorrectly set the length of the drm_event to the size of the structure\nthat's actually used.\n\nThe length of the drm_event was set to the parent structure instead of\nto the drm_vmw_event_fence which is supposed to be read. drm_read\nuses the length parameter to copy the event to the user space thus\nresuling in oob reads.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36962",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ks8851: Queue RX packets in IRQ handler instead of disabling BHs\n\nCurrently the driver uses local_bh_disable()/local_bh_enable() in its\nIRQ handler to avoid triggering net_rx_action() softirq on exit from\nnetif_rx(). The net_rx_action() could trigger this driver .start_xmit\ncallback, which is protected by the same lock as the IRQ handler, so\ncalling the .start_xmit from netif_rx() from the IRQ handler critical\nsection protected by the lock could lead to an attempt to claim the\nalready claimed lock, and a hang.\n\nThe local_bh_disable()/local_bh_enable() approach works only in case\nthe IRQ handler is protected by a spinlock, but does not work if the\nIRQ handler is protected by mutex, i.e. this works for KS8851 with\nParallel bus interface, but not for KS8851 with SPI bus interface.\n\nRemove the BH manipulation and instead of calling netif_rx() inside\nthe IRQ handler code protected by the lock, queue all the received\nSKBs in the IRQ handler into a queue first, and once the IRQ handler\nexits the critical section protected by the lock, dequeue all the\nqueued SKBs and push them all into netif_rx(). At this point, it is\nsafe to trigger the net_rx_action() softirq, since the netif_rx()\ncall is outside of the lock that protects the IRQ handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/9p: only translate RWX permissions for plain 9P2000\n\nGarbage in plain 9P2000's perm bits is allowed through, which causes it\nto be able to set (among others) the suid bit. This was presumably not\nthe intent since the unix extended bits are handled explicitly and\nconditionally on .u.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36965",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: mediatek: Make sure IPI buffer fits in L2TCM\n\nThe IPI buffer location is read from the firmware that we load to the\nSystem Companion Processor, and it's not granted that both the SRAM\n(L2TCM) size that is defined in the devicetree node is large enough\nfor that, and while this is especially true for multi-core SCP, it's\nstill useful to check on single-core variants as well.\n\nFailing to perform this check may make this driver perform R/W\noperations out of the L2TCM boundary, resulting (at best) in a\nkernel panic.\n\nTo fix that, check that the IPI buffer fits, otherwise return a\nfailure and refuse to boot the relevant SCP core (or the SCP at\nall, if this is single core).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36967",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKEYS: trusted: Fix memory leak in tpm2_key_encode()\n\n'scratch' is never freed. Fix this by calling kfree() in the success, and\nin the error case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix division by zero in setup_dsc_config\n\nWhen slice_height is 0, the division by slice_height in the calculation\nof the number of slices will cause a division by zero driver crash. This\nleaves the kernel in a state that requires a reboot. This patch adds a\ncheck to avoid the division by zero.\n\nThe stack trace below is for the 6.8.4 Kernel. I reproduced the issue on\na Z16 Gen 2 Lenovo Thinkpad with a Apple Studio Display monitor\nconnected via Thunderbolt. The amdgpu driver crashed with this exception\nwhen I rebooted the system with the monitor connected.\n\nkernel: ? die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434 arch/x86/kernel/dumpstack.c:447)\nkernel: ? do_trap (arch/x86/kernel/traps.c:113 arch/x86/kernel/traps.c:154)\nkernel: ? setup_dsc_config (drivers/gpu/drm/amd/amdgpu/../display/dc/dsc/dc_dsc.c:1053) amdgpu\nkernel: ? do_error_trap (./arch/x86/include/asm/traps.h:58 arch/x86/kernel/traps.c:175)\nkernel: ? setup_dsc_config (drivers/gpu/drm/amd/amdgpu/../display/dc/dsc/dc_dsc.c:1053) amdgpu\nkernel: ? exc_divide_error (arch/x86/kernel/traps.c:194 (discriminator 2))\nkernel: ? setup_dsc_config (drivers/gpu/drm/amd/amdgpu/../display/dc/dsc/dc_dsc.c:1053) amdgpu\nkernel: ? asm_exc_divide_error (./arch/x86/include/asm/idtentry.h:548)\nkernel: ? setup_dsc_config (drivers/gpu/drm/amd/amdgpu/../display/dc/dsc/dc_dsc.c:1053) amdgpu\nkernel: dc_dsc_compute_config (drivers/gpu/drm/amd/amdgpu/../display/dc/dsc/dc_dsc.c:1109) amdgpu\n\nAfter applying this patch, the driver no longer crashes when the monitor\nis connected and the system is rebooted. I believe this is the same\nissue reported for 3113.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36971",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix __dst_negative_advice() race\n\n__dst_negative_advice() does not enforce proper RCU rules when\nsk-\u003edst_cache must be cleared, leading to possible UAF.\n\nRCU rules are that we must first clear sk-\u003esk_dst_cache,\nthen call dst_release(old_dst).\n\nNote that sk_dst_reset(sk) is implementing this protocol correctly,\nwhile __dst_negative_advice() uses the wrong order.\n\nGiven that ip6_negative_advice() has special logic\nagainst RTF_CACHE, this means each of the three -\u003enegative_advice()\nexisting methods must perform the sk_dst_reset() themselves.\n\nNote the check against NULL dst is centralized in\n__dst_negative_advice(), there is no need to duplicate\nit in various callbacks.\n\nMany thanks to Clement Lecigne for tracking this issue.\n\nThis old bug became visible after the blamed commit, using UDP sockets.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: microchip: pci1xxxx: fix double free in the error handling of gp_aux_bus_probe()\n\nWhen auxiliary_device_add() returns error and then calls\nauxiliary_device_uninit(), callback function\ngp_auxiliary_device_release() calls ida_free() and\nkfree(aux_device_wrapper) to free memory. We should't\ncall them again in the error handling path.\n\nFix this by skipping the redundant cleanup functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36974",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: taprio: always validate TCA_TAPRIO_ATTR_PRIOMAP\n\nIf one TCA_TAPRIO_ATTR_PRIOMAP attribute has been provided,\ntaprio_parse_mqprio_opt() must validate it, or userspace\ncan inject arbitrary data to the kernel, the second time\ntaprio_change() is called.\n\nFirst call (with valid attributes) sets dev-\u003enum_tc\nto a non zero value.\n\nSecond call (with arbitrary mqprio attributes)\nreturns early from taprio_parse_mqprio_opt()\nand bad things can happen.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36975",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKEYS: trusted: Do not use WARN when encode fails\n\nWhen asn1_encode_sequence() fails, WARN is not the correct solution.\n\n1. asn1_encode_sequence() is not an internal function (located\n   in lib/asn1_encode.c).\n2. Location is known, which makes the stack trace useless.\n3. Results a crash if panic_on_warn is set.\n\nIt is also noteworthy that the use of WARN is undocumented, and it\nshould be avoided unless there is a carefully considered rationale to\nuse it.\n\nReplace WARN with pr_err, and print the return value instead, which is\nonly useful piece of information.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36977",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: Wait unconditionally after issuing EndXfer command\n\nCurrently all controller IP/revisions except DWC3_usb3 \u003e= 310a\nwait 1ms unconditionally for ENDXFER completion when IOC is not\nset. This is because DWC_usb3 controller revisions \u003e= 3.10a\nsupports GUCTL2[14: Rst_actbitlater] bit which allows polling\nCMDACT bit to know whether ENDXFER command is completed.\n\nConsider a case where an IN request was queued, and parallelly\nsoft_disconnect was called (due to ffs_epfile_release). This\neventually calls stop_active_transfer with IOC cleared, hence\nsend_gadget_ep_cmd() skips waiting for CMDACT cleared during\nEndXfer. For DWC3 controllers with revisions \u003e= 310a, we don't\nforcefully wait for 1ms either, and we proceed by unmapping the\nrequests. If ENDXFER didn't complete by this time, it leads to\nSMMU faults since the controller would still be accessing those\nrequests.\n\nFix this by ensuring ENDXFER completion by adding 1ms delay in\n__dwc3_stop_active_transfer() unconditionally.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: sch_multiq: fix possible OOB write in multiq_tune()\n\nq-\u003ebands will be assigned to qopt-\u003ebands to execute subsequent code logic\nafter kmalloc. So the old q-\u003ebands should not be used in kmalloc.\nOtherwise, an out-of-bounds write will occur.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: manager: add owner module and take its refcount\n\nThe current implementation of the fpga manager assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the manager if\nthe parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_manager\nstruct and use it to take the module's refcount. Modify the functions for\nregistering the manager to take an additional owner module parameter and\nrename them to avoid conflicts. Use the old function names for helper\nmacros that automatically set the module that registers the manager as the\nowner. This ensures compatibility with existing low-level control modules\nand reduces the chances of registering a manager without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga manager.\n\nOther changes: opportunistically move put_device() from __fpga_mgr_get() to\nfpga_mgr_get() and of_fpga_mgr_get() to improve code clarity since the\nmanager device is taken in these functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential kernel bug due to lack of writeback flag waiting\n\nDestructive writes to a block device on which nilfs2 is mounted can cause\na kernel bug in the folio/page writeback start routine or writeback end\nroutine (__folio_start_writeback in the log below):\n\n kernel BUG at mm/page-writeback.c:3070!\n Oops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\n ...\n RIP: 0010:__folio_start_writeback+0xbaa/0x10e0\n Code: 25 ff 0f 00 00 0f 84 18 01 00 00 e8 40 ca c6 ff e9 17 f6 ff ff\n  e8 36 ca c6 ff 4c 89 f7 48 c7 c6 80 c0 12 84 e8 e7 b3 0f 00 90 \u003c0f\u003e\n  0b e8 1f ca c6 ff 4c 89 f7 48 c7 c6 a0 c6 12 84 e8 d0 b3 0f 00\n ...\n Call Trace:\n  \u003cTASK\u003e\n  nilfs_segctor_do_construct+0x4654/0x69d0 [nilfs2]\n  nilfs_segctor_construct+0x181/0x6b0 [nilfs2]\n  nilfs_segctor_thread+0x548/0x11c0 [nilfs2]\n  kthread+0x2f0/0x390\n  ret_from_fork+0x4b/0x80\n  ret_from_fork_asm+0x1a/0x30\n  \u003c/TASK\u003e\n\nThis is because when the log writer starts a writeback for segment summary\nblocks or a super root block that use the backing device's page cache, it\ndoes not wait for the ongoing folio/page writeback, resulting in an\ninconsistent writeback state.\n\nFix this issue by waiting for ongoing writebacks when putting\nfolios/pages on the backing device into writeback state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37353",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37354",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix crash on racing fsync and size-extending write into prealloc\n\nWe have been seeing crashes on duplicate keys in\nbtrfs_set_item_key_safe():\n\n  BTRFS critical (device vdb): slot 4 key (450 108 8192) new key (450 108 8192)\n  ------------[ cut here ]------------\n  kernel BUG at fs/btrfs/ctree.c:2620!\n  invalid opcode: 0000 [#1] PREEMPT SMP PTI\n  CPU: 0 PID: 3139 Comm: xfs_io Kdump: loaded Not tainted 6.9.0 #6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\n  RIP: 0010:btrfs_set_item_key_safe+0x11f/0x290 [btrfs]\n\nWith the following stack trace:\n\n  #0  btrfs_set_item_key_safe (fs/btrfs/ctree.c:2620:4)\n  #1  btrfs_drop_extents (fs/btrfs/file.c:411:4)\n  #2  log_one_extent (fs/btrfs/tree-log.c:4732:9)\n  #3  btrfs_log_changed_extents (fs/btrfs/tree-log.c:4955:9)\n  #4  btrfs_log_inode (fs/btrfs/tree-log.c:6626:9)\n  #5  btrfs_log_inode_parent (fs/btrfs/tree-log.c:7070:8)\n  #6  btrfs_log_dentry_safe (fs/btrfs/tree-log.c:7171:8)\n  #7  btrfs_sync_file (fs/btrfs/file.c:1933:8)\n  #8  vfs_fsync_range (fs/sync.c:188:9)\n  #9  vfs_fsync (fs/sync.c:202:9)\n  #10 do_fsync (fs/sync.c:212:9)\n  #11 __do_sys_fdatasync (fs/sync.c:225:9)\n  #12 __se_sys_fdatasync (fs/sync.c:223:1)\n  #13 __x64_sys_fdatasync (fs/sync.c:223:1)\n  #14 do_syscall_x64 (arch/x86/entry/common.c:52:14)\n  #15 do_syscall_64 (arch/x86/entry/common.c:83:7)\n  #16 entry_SYSCALL_64+0xaf/0x14c (arch/x86/entry/entry_64.S:121)\n\nSo we're logging a changed extent from fsync, which is splitting an\nextent in the log tree. But this split part already exists in the tree,\ntriggering the BUG().\n\nThis is the state of the log tree at the time of the crash, dumped with\ndrgn (https://github.com/osandov/drgn/blob/main/contrib/btrfs_tree.py)\nto get more details than btrfs_print_leaf() gives us:\n\n  \u003e\u003e\u003e print_extent_buffer(prog.crashed_thread().stack_trace()[0][\"eb\"])\n  leaf 33439744 level 0 items 72 generation 9 owner 18446744073709551610\n  leaf 33439744 flags 0x100000000000000\n  fs uuid e5bd3946-400c-4223-8923-190ef1f18677\n  chunk uuid d58cb17e-6d02-494a-829a-18b7d8a399da\n          item 0 key (450 INODE_ITEM 0) itemoff 16123 itemsize 160\n                  generation 7 transid 9 size 8192 nbytes 8473563889606862198\n                  block group 0 mode 100600 links 1 uid 0 gid 0 rdev 0\n                  sequence 204 flags 0x10(PREALLOC)\n                  atime 1716417703.220000000 (2024-05-22 15:41:43)\n                  ctime 1716417704.983333333 (2024-05-22 15:41:44)\n                  mtime 1716417704.983333333 (2024-05-22 15:41:44)\n                  otime 17592186044416.000000000 (559444-03-08 01:40:16)\n          item 1 key (450 INODE_REF 256) itemoff 16110 itemsize 13\n                  index 195 namelen 3 name: 193\n          item 2 key (450 XATTR_ITEM 1640047104) itemoff 16073 itemsize 37\n                  location key (0 UNKNOWN.0 0) type XATTR\n                  transid 7 data_len 1 name_len 6\n                  name: user.a\n                  data a\n          item 3 key (450 EXTENT_DATA 0) itemoff 16020 itemsize 53\n                  generation 9 type 1 (regular)\n                  extent data disk byte 303144960 nr 12288\n                  extent data offset 0 nr 4096 ram 12288\n                  extent compression 0 (none)\n          item 4 key (450 EXTENT_DATA 4096) itemoff 15967 itemsize 53\n                  generation 9 type 2 (prealloc)\n                  prealloc data disk byte 303144960 nr 12288\n                  prealloc data offset 4096 nr 8192\n          item 5 key (450 EXTENT_DATA 8192) itemoff 15914 itemsize 53\n                  generation 9 type 2 (prealloc)\n                  prealloc data disk byte 303144960 nr 12288\n                  prealloc data offset 8192 nr 4096\n  ...\n\nSo the real problem happened earlier: notice that items 4 (4k-12k) and 5\n(8k-12k) overlap. Both are prealloc extents. Item 4 straddles i_size and\nitem 5 starts at i_size.\n\nHere is the state of \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37891",
      "Description": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38381",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_rx_work\n\nsyzbot reported the following uninit-value access issue [1]\n\nnci_rx_work() parses received packet from ndev-\u003erx_q. It should be\nvalidated header size, payload size and total packet size before\nprocessing the packet. If an invalid packet is detected, it should be\nsilently discarded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38384",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: fix list corruption from reorder of WRITE -\u003elqueued\n\n__blkcg_rstat_flush() can be run anytime, especially when blk_cgroup_bio_start\nis being executed.\n\nIf WRITE of `-\u003elqueued` is re-ordered with READ of 'bisc-\u003elnode.next' in\nthe loop of __blkcg_rstat_flush(), `next_bisc` can be assigned with one\nstat instance being added in blk_cgroup_bio_start(), then the local\nlist in __blkcg_rstat_flush() could be corrupted.\n\nFix the issue by adding one barrier.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38385",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngenirq/irqdesc: Prevent use-after-free in irq_find_at_or_after()\n\nirq_find_at_or_after() dereferences the interrupt descriptor which is\nreturned by mt_find() while neither holding sparse_irq_lock nor RCU read\nlock, which means the descriptor can be freed between mt_find() and the\ndereference:\n\n    CPU0                            CPU1\n    desc = mt_find()\n                                    delayed_free_desc(desc)\n    irq_desc_get_irq(desc)\n\nThe use-after-free is reported by KASAN:\n\n    Call trace:\n     irq_get_next_irq+0x58/0x84\n     show_stat+0x638/0x824\n     seq_read_iter+0x158/0x4ec\n     proc_reg_read_iter+0x94/0x12c\n     vfs_read+0x1e0/0x2c8\n\n    Freed by task 4471:\n     slab_free_freelist_hook+0x174/0x1e0\n     __kmem_cache_free+0xa4/0x1dc\n     kfree+0x64/0x128\n     irq_kobj_release+0x28/0x3c\n     kobject_put+0xcc/0x1e0\n     delayed_free_desc+0x14/0x2c\n     rcu_do_batch+0x214/0x720\n\nGuard the access with a RCU read lock section.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38388",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda/cs_dsp_ctl: Use private_free for control cleanup\n\nUse the control private_free callback to free the associated data\nblock. This ensures that the memory won't leak, whatever way the\ncontrol gets destroyed.\n\nThe original implementation didn't actually remove the ALSA\ncontrols in hda_cs_dsp_control_remove(). It only freed the internal\ntracking structure. This meant it was possible to remove/unload the\namp driver while leaving its ALSA controls still present in the\nsoundcard. Obviously attempting to access them could cause segfaults\nor at least dereferencing stale pointers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38390",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/a6xx: Avoid a nullptr dereference when speedbin setting fails\n\nCalling a6xx_destroy() before adreno_gpu_init() leads to a null pointer\ndereference on:\n\nmsm_gpu_cleanup() : platform_set_drvdata(gpu-\u003epdev, NULL);\n\nas gpu-\u003epdev is only assigned in:\n\na6xx_gpu_init()\n|_ adreno_gpu_init\n    |_ msm_gpu_init()\n\nInstead of relying on handwavy null checks down the cleanup chain,\nexplicitly de-allocate the LLC data and free a6xx_gpu instead.\n\nPatchwork: https://patchwork.freedesktop.org/patch/588919/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38391",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38539",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Fix kmemleak in rdma_core observed during blktests nvme/rdma use siw\n\nWhen running blktests nvme/rdma, the following kmemleak issue will appear.\n\nkmemleak: Kernel memory leak detector initialized (mempool available:36041)\nkmemleak: Automatic memory scanning thread started\nkmemleak: 2 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\nkmemleak: 8 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\nkmemleak: 17 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\nkmemleak: 4 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n\nunreferenced object 0xffff88855da53400 (size 192):\n  comm \"rdma\", pid 10630, jiffies 4296575922\n  hex dump (first 32 bytes):\n    37 00 00 00 00 00 00 00 c0 ff ff ff 1f 00 00 00  7...............\n    10 34 a5 5d 85 88 ff ff 10 34 a5 5d 85 88 ff ff  .4.].....4.]....\n  backtrace (crc 47f66721):\n    [\u003cffffffff911251bd\u003e] kmalloc_trace+0x30d/0x3b0\n    [\u003cffffffffc2640ff7\u003e] alloc_gid_entry+0x47/0x380 [ib_core]\n    [\u003cffffffffc2642206\u003e] add_modify_gid+0x166/0x930 [ib_core]\n    [\u003cffffffffc2643468\u003e] ib_cache_update.part.0+0x6d8/0x910 [ib_core]\n    [\u003cffffffffc2644e1a\u003e] ib_cache_setup_one+0x24a/0x350 [ib_core]\n    [\u003cffffffffc263949e\u003e] ib_register_device+0x9e/0x3a0 [ib_core]\n    [\u003cffffffffc2a3d389\u003e] 0xffffffffc2a3d389\n    [\u003cffffffffc2688cd8\u003e] nldev_newlink+0x2b8/0x520 [ib_core]\n    [\u003cffffffffc2645fe3\u003e] rdma_nl_rcv_msg+0x2c3/0x520 [ib_core]\n    [\u003cffffffffc264648c\u003e]\nrdma_nl_rcv_skb.constprop.0.isra.0+0x23c/0x3a0 [ib_core]\n    [\u003cffffffff9270e7b5\u003e] netlink_unicast+0x445/0x710\n    [\u003cffffffff9270f1f1\u003e] netlink_sendmsg+0x761/0xc40\n    [\u003cffffffff9249db29\u003e] __sys_sendto+0x3a9/0x420\n    [\u003cffffffff9249dc8c\u003e] __x64_sys_sendto+0xdc/0x1b0\n    [\u003cffffffff92db0ad3\u003e] do_syscall_64+0x93/0x180\n    [\u003cffffffff92e00126\u003e] entry_SYSCALL_64_after_hwframe+0x71/0x79\n\nThe root cause: rdma_put_gid_attr is not called when sgid_attr is set\nto ERR_PTR(-ENODEV).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38540",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_re: avoid shift undefined behavior in bnxt_qplib_alloc_init_hwq\n\nUndefined behavior is triggered when bnxt_qplib_alloc_init_hwq is called\nwith hwq_attr-\u003eaux_depth != 0 and hwq_attr-\u003eaux_stride == 0.\nIn that case, \"roundup_pow_of_two(hwq_attr-\u003eaux_stride)\" gets called.\nroundup_pow_of_two is documented as undefined for 0.\n\nFix it in the one caller that had this combination.\n\nThe undefined behavior was detected by UBSAN:\n  UBSAN: shift-out-of-bounds in ./include/linux/log2.h:57:13\n  shift exponent 64 is too large for 64-bit type 'long unsigned int'\n  CPU: 24 PID: 1075 Comm: (udev-worker) Not tainted 6.9.0-rc6+ #4\n  Hardware name: Abacus electric, s.r.o. - servis@abacus.cz Super Server/H12SSW-iN, BIOS 2.7 10/25/2023\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x5d/0x80\n   ubsan_epilogue+0x5/0x30\n   __ubsan_handle_shift_out_of_bounds.cold+0x61/0xec\n   __roundup_pow_of_two+0x25/0x35 [bnxt_re]\n   bnxt_qplib_alloc_init_hwq+0xa1/0x470 [bnxt_re]\n   bnxt_qplib_create_qp+0x19e/0x840 [bnxt_re]\n   bnxt_re_create_qp+0x9b1/0xcd0 [bnxt_re]\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? __kmalloc+0x1b6/0x4f0\n   ? create_qp.part.0+0x128/0x1c0 [ib_core]\n   ? __pfx_bnxt_re_create_qp+0x10/0x10 [bnxt_re]\n   create_qp.part.0+0x128/0x1c0 [ib_core]\n   ib_create_qp_kernel+0x50/0xd0 [ib_core]\n   create_mad_qp+0x8e/0xe0 [ib_core]\n   ? __pfx_qp_event_handler+0x10/0x10 [ib_core]\n   ib_mad_init_device+0x2be/0x680 [ib_core]\n   add_client_context+0x10d/0x1a0 [ib_core]\n   enable_device_and_get+0xe0/0x1d0 [ib_core]\n   ib_register_device+0x53c/0x630 [ib_core]\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   bnxt_re_probe+0xbd8/0xe50 [bnxt_re]\n   ? __pfx_bnxt_re_probe+0x10/0x10 [bnxt_re]\n   auxiliary_bus_probe+0x49/0x80\n   ? driver_sysfs_add+0x57/0xc0\n   really_probe+0xde/0x340\n   ? pm_runtime_barrier+0x54/0x90\n   ? __pfx___driver_attach+0x10/0x10\n   __driver_probe_device+0x78/0x110\n   driver_probe_device+0x1f/0xa0\n   __driver_attach+0xba/0x1c0\n   bus_for_each_dev+0x8f/0xe0\n   bus_add_driver+0x146/0x220\n   driver_register+0x72/0xd0\n   __auxiliary_driver_register+0x6e/0xd0\n   ? __pfx_bnxt_re_mod_init+0x10/0x10 [bnxt_re]\n   bnxt_re_mod_init+0x3e/0xff0 [bnxt_re]\n   ? __pfx_bnxt_re_mod_init+0x10/0x10 [bnxt_re]\n   do_one_initcall+0x5b/0x310\n   do_init_module+0x90/0x250\n   init_module_from_file+0x86/0xc0\n   idempotent_init_module+0x121/0x2b0\n   __x64_sys_finit_module+0x5e/0xb0\n   do_syscall_64+0x82/0x160\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? syscall_exit_to_user_mode_prepare+0x149/0x170\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? syscall_exit_to_user_mode+0x75/0x230\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? do_syscall_64+0x8e/0x160\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? __count_memcg_events+0x69/0x100\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? count_memcg_events.constprop.0+0x1a/0x30\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? handle_mm_fault+0x1f0/0x300\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? do_user_addr_fault+0x34e/0x640\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   ? srso_alias_return_thunk+0x5/0xfbef5\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n  RIP: 0033:0x7f4e5132821d\n  Code: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d e3 db 0c 00 f7 d8 64 89 01 48\n  RSP: 002b:00007ffca9c906a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\n  RAX: ffffffffffffffda RBX: 0000563ec8a8f130 RCX: 00007f4e5132821d\n  RDX: 0000000000000000 RSI: 00007f4e518fa07d RDI: 000000000000003b\n  RBP: 00007ffca9c90760 R08: 00007f4e513f6b20 R09: 00007ffca9c906f0\n  R10: 0000563ec8a8faa0 R11: 0000000000000246 R12: 00007f4e518fa07d\n  R13: 0000000000020000 R14: 0000563ec8409e90 R15: 0000563ec8a8fa60\n   \u003c/TASK\u003e\n  ---[ end trace ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38541",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: module: add buffer overflow check in of_modalias()\n\nIn of_modalias(), if the buffer happens to be too small even for the 1st\nsnprintf() call, the len parameter will become negative and str parameter\n(if not NULL initially) will point beyond the buffer's end. Add the buffer\noverflow check after the 1st snprintf() call and fix such check after the\nstrlen() call (accounting for the terminating NUL char).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38543",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlib/test_hmm.c: handle src_pfns and dst_pfns allocation failure\n\nThe kcalloc() in dmirror_device_evict_chunk() will return null if the\nphysical memory has run out.  As a result, if src_pfns or dst_pfns is\ndereferenced, the null pointer dereference bug will happen.\n\nMoreover, the device is going away.  If the kcalloc() fails, the pages\nmapping a chunk could not be evicted.  So add a __GFP_NOFAIL flag in\nkcalloc().\n\nFinally, as there is no need to have physically contiguous memory, Switch\nkcalloc() to kvcalloc() in order to avoid failing allocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38544",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Fix seg fault in rxe_comp_queue_pkt\n\nIn rxe_comp_queue_pkt() an incoming response packet skb is enqueued to the\nresp_pkts queue and then a decision is made whether to run the completer\ntask inline or schedule it. Finally the skb is dereferenced to bump a 'hw'\nperformance counter. This is wrong because if the completer task is\nalready running in a separate thread it may have already processed the skb\nand freed it which can cause a seg fault.  This has been observed\ninfrequently in testing at high scale.\n\nThis patch fixes this by changing the order of enqueuing the packet until\nafter the counter is accessed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38545",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Fix UAF for cq async event\n\nThe refcount of CQ is not protected by locks. When CQ asynchronous\nevents and CQ destruction are concurrent, CQ may have been released,\nwhich will cause UAF.\n\nUse the xa_lock() to protect the CQ refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38546",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: vc4: Fix possible null pointer dereference\n\nIn vc4_hdmi_audio_init() of_get_address() may return\nNULL which is later dereferenced. Fix this bug by adding NULL check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38547",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: atomisp: ssh_css: Fix a null-pointer dereference in load_video_binaries\n\nThe allocation failure of mycs-\u003eyuv_scaler_binary in load_video_binaries()\nis followed with a dereference of mycs-\u003eyuv_scaler_binary after the\nfollowing call chain:\n\nsh_css_pipe_load_binaries()\n  |-\u003e load_video_binaries(mycs-\u003eyuv_scaler_binary == NULL)\n  |\n  |-\u003e sh_css_pipe_unload_binaries()\n        |-\u003e unload_video_binaries()\n\nIn unload_video_binaries(), it calls to ia_css_binary_unload with argument\n\u0026pipe-\u003epipe_settings.video.yuv_scaler_binary[i], which refers to the\nsame memory slot as mycs-\u003eyuv_scaler_binary. Thus, a null-pointer\ndereference is triggered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38548",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge: cdns-mhdp8546: Fix possible null pointer dereference\n\nIn cdns_mhdp_atomic_enable(), the return value of drm_mode_duplicate() is\nassigned to mhdp_state-\u003ecurrent_mode, and there is a dereference of it in\ndrm_mode_set_name(), which will lead to a NULL pointer dereference on\nfailure of drm_mode_duplicate().\n\nFix this bug add a check of mhdp_state-\u003ecurrent_mode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38549",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Add 0 size check to mtk_drm_gem_obj\n\nAdd a check to mtk_drm_gem_init if we attempt to allocate a GEM object\nof 0 bytes. Currently, no such check exists and the kernel will panic if\na userspace application attempts to allocate a 0x0 GBM buffer.\n\nTested by attempting to allocate a 0x0 GBM buffer on an MT8188 and\nverifying that we now return EINVAL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38550",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: kirkwood: Fix potential NULL dereference\n\nIn kirkwood_dma_hw_params() mv_mbus_dram_info() returns NULL if\nCONFIG_PLAT_ORION macro is not defined.\nFix this bug by adding NULL check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38551",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: Assign dummy when codec not specified for a DAI link\n\nMediaTek sound card drivers are checking whether a DAI link is present\nand used on a board to assign the correct parameters and this is done\nby checking the codec DAI names at probe time.\n\nIf no real codec is present, assign the dummy codec to the DAI link\nto avoid NULL pointer during string comparison.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38552",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix potential index out of bounds in color transformation function\n\nFixes index out of bounds issue in the color transformation function.\nThe issue could occur when the index 'i' exceeds the number of transfer\nfunction points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, an error message is\nlogged and the function returns false to indicate an error.\n\nReported by smatch:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:405 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.red' 1025 \u003c= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:406 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.green' 1025 \u003c= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:407 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.blue' 1025 \u003c= s32max",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38553",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fec: remove .ndo_poll_controller to avoid deadlocks\n\nThere is a deadlock issue found in sungem driver, please refer to the\ncommit ac0a230f719b (\"eth: sungem: remove .ndo_poll_controller to avoid\ndeadlocks\"). The root cause of the issue is that netpoll is in atomic\ncontext and disable_irq() is called by .ndo_poll_controller interface\nof sungem driver, however, disable_irq() might sleep. After analyzing\nthe implementation of fec_poll_controller(), the fec driver should have\nthe same issue. Due to the fec driver uses NAPI for TX completions, the\n.ndo_poll_controller is unnecessary to be implemented in the fec driver,\nso fec_poll_controller() can be safely removed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38554",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix reference count leak issue of net_device\n\nThere is a reference count leak issue of the object \"net_device\" in\nax25_dev_device_down(). When the ax25 device is shutting down, the\nax25_dev_device_down() drops the reference count of net_device one\nor zero times depending on if we goto unlock_put or not, which will\ncause memory leak.\n\nIn order to solve the above issue, decrease the reference count of\nnet_device after dev-\u003eax25_ptr is set to null.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38555",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Discard command completions in internal error\n\nFix use after free when FW completion arrives while device is in\ninternal error state. Avoid calling completion handler in this case,\nsince the device will flush the command interface and trigger all\ncompletions manually.\n\nKernel log:\n------------[ cut here ]------------\nrefcount_t: underflow; use-after-free.\n...\nRIP: 0010:refcount_warn_saturate+0xd8/0xe0\n...\nCall Trace:\n\u003cIRQ\u003e\n? __warn+0x79/0x120\n? refcount_warn_saturate+0xd8/0xe0\n? report_bug+0x17c/0x190\n? handle_bug+0x3c/0x60\n? exc_invalid_op+0x14/0x70\n? asm_exc_invalid_op+0x16/0x20\n? refcount_warn_saturate+0xd8/0xe0\ncmd_ent_put+0x13b/0x160 [mlx5_core]\nmlx5_cmd_comp_handler+0x5f9/0x670 [mlx5_core]\ncmd_comp_notifier+0x1f/0x30 [mlx5_core]\nnotifier_call_chain+0x35/0xb0\natomic_notifier_call_chain+0x16/0x20\nmlx5_eq_async_int+0xf6/0x290 [mlx5_core]\nnotifier_call_chain+0x35/0xb0\natomic_notifier_call_chain+0x16/0x20\nirq_int_handler+0x19/0x30 [mlx5_core]\n__handle_irq_event_percpu+0x4b/0x160\nhandle_irq_event+0x2e/0x80\nhandle_edge_irq+0x98/0x230\n__common_interrupt+0x3b/0xa0\ncommon_interrupt+0x7b/0xa0\n\u003c/IRQ\u003e\n\u003cTASK\u003e\nasm_common_interrupt+0x22/0x40",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38556",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Add a timeout to acquire the command queue semaphore\n\nPrevent forced completion handling on an entry that has not yet been\nassigned an index, causing an out of bounds access on idx = -22.\nInstead of waiting indefinitely for the sem, blocking flow now waits for\nindex to be allocated or a sem acquisition timeout before beginning the\ntimer for FW completion.\n\nKernel log example:\nmlx5_core 0000:06:00.0: wait_func_handle_exec_timeout:1128:(pid 185911): cmd[-22]: CREATE_UCTX(0xa04) No done completion",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38557",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Reload only IB representors upon lag disable/enable\n\nOn lag disable, the bond IB device along with all of its\nrepresentors are destroyed, and then the slaves' representors get reloaded.\n\nIn case the slave IB representor load fails, the eswitch error flow\nunloads all representors, including ethernet representors, where the\nnetdevs get detached and removed from lag bond. Such flow is inaccurate\nas the lag driver is not responsible for loading/unloading ethernet\nrepresentors. Furthermore, the flow described above begins by holding\nlag lock to prevent bond changes during disable flow. However, when\nreaching the ethernet representors detachment from lag, the lag lock is\nrequired again, triggering the following deadlock:\n\nCall trace:\n__switch_to+0xf4/0x148\n__schedule+0x2c8/0x7d0\nschedule+0x50/0xe0\nschedule_preempt_disabled+0x18/0x28\n__mutex_lock.isra.13+0x2b8/0x570\n__mutex_lock_slowpath+0x1c/0x28\nmutex_lock+0x4c/0x68\nmlx5_lag_remove_netdev+0x3c/0x1a0 [mlx5_core]\nmlx5e_uplink_rep_disable+0x70/0xa0 [mlx5_core]\nmlx5e_detach_netdev+0x6c/0xb0 [mlx5_core]\nmlx5e_netdev_change_profile+0x44/0x138 [mlx5_core]\nmlx5e_netdev_attach_nic_profile+0x28/0x38 [mlx5_core]\nmlx5e_vport_rep_unload+0x184/0x1b8 [mlx5_core]\nmlx5_esw_offloads_rep_load+0xd8/0xe0 [mlx5_core]\nmlx5_eswitch_reload_reps+0x74/0xd0 [mlx5_core]\nmlx5_disable_lag+0x130/0x138 [mlx5_core]\nmlx5_lag_disable_change+0x6c/0x70 [mlx5_core] // hold ldev-\u003elock\nmlx5_devlink_eswitch_mode_set+0xc0/0x410 [mlx5_core]\ndevlink_nl_cmd_eswitch_set_doit+0xdc/0x180\ngenl_family_rcv_msg_doit.isra.17+0xe8/0x138\ngenl_rcv_msg+0xe4/0x220\nnetlink_rcv_skb+0x44/0x108\ngenl_rcv+0x40/0x58\nnetlink_unicast+0x198/0x268\nnetlink_sendmsg+0x1d4/0x418\nsock_sendmsg+0x54/0x60\n__sys_sendto+0xf4/0x120\n__arm64_sys_sendto+0x30/0x40\nel0_svc_common+0x8c/0x120\ndo_el0_svc+0x30/0xa0\nel0_svc+0x20/0x30\nel0_sync_handler+0x90/0xb8\nel0_sync+0x160/0x180\n\nThus, upon lag enable/disable, load and unload only the IB representors\nof the slaves preventing the deadlock mentioned above.\n\nWhile at it, refactor the mlx5_esw_offloads_rep_load() function to have\na static helper method for its internal logic, in symmetry with the\nrepresentor unload design.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38558",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix overwriting ct original tuple for ICMPv6\n\nOVS_PACKET_CMD_EXECUTE has 3 main attributes:\n - OVS_PACKET_ATTR_KEY - Packet metadata in a netlink format.\n - OVS_PACKET_ATTR_PACKET - Binary packet content.\n - OVS_PACKET_ATTR_ACTIONS - Actions to execute on the packet.\n\nOVS_PACKET_ATTR_KEY is parsed first to populate sw_flow_key structure\nwith the metadata like conntrack state, input port, recirculation id,\netc.  Then the packet itself gets parsed to populate the rest of the\nkeys from the packet headers.\n\nWhenever the packet parsing code starts parsing the ICMPv6 header, it\nfirst zeroes out fields in the key corresponding to Neighbor Discovery\ninformation even if it is not an ND packet.\n\nIt is an 'ipv6.nd' field.  However, the 'ipv6' is a union that shares\nthe space between 'nd' and 'ct_orig' that holds the original tuple\nconntrack metadata parsed from the OVS_PACKET_ATTR_KEY.\n\nND packets should not normally have conntrack state, so it's fine to\nshare the space, but normal ICMPv6 Echo packets or maybe other types of\nICMPv6 can have the state attached and it should not be overwritten.\n\nThe issue results in all but the last 4 bytes of the destination\naddress being wiped from the original conntrack tuple leading to\nincorrect packet matching and potentially executing wrong actions\nin case this packet recirculates within the datapath or goes back\nto userspace.\n\nND fields should not be accessed in non-ND packets, so not clearing\nthem should be fine.  Executing memset() only for actual ND packets to\navoid the issue.\n\nInitializing the whole thing before parsing is needed because ND packet\nmay not contain all the options.\n\nThe issue only affects the OVS_PACKET_CMD_EXECUTE path and doesn't\naffect packets entering OVS datapath from network interfaces, because\nin this case CT metadata is populated from skb after the packet is\nalready parsed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38559",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a count-sized kernel buffer and copy count from\nuserspace to that buffer. Later, we use kstrtouint on this buffer but we\ndon't ensure that the string is terminated inside the buffer, this can\nlead to OOB read when using kstrtouint. Fix this issue by using\nmemdup_user_nul instead of memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38560",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bfa: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul instead\nof memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38562",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: Avoid address calculations via out of bounds array indexing\n\nBefore request-\u003echannels[] can be used, request-\u003en_channels must be set.\nAdditionally, address calculations for memory after the \"channels\" array\nneed to be calculated from the allocation base (\"request\") rather than\nvia the first \"out of bounds\" index of \"channels\", otherwise run-time\nbounds checking will throw a warning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38564",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Add BPF_PROG_TYPE_CGROUP_SKB attach type enforcement in BPF_LINK_CREATE\n\nbpf_prog_attach uses attach_type_to_prog_type to enforce proper\nattach type for BPF_PROG_TYPE_CGROUP_SKB. link_create uses\nbpf_prog_get and relies on bpf_prog_attach_check_attach_type\nto properly verify prog_type \u003c\u003e attach_type association.\n\nAdd missing attach_type enforcement for the link_create case.\nOtherwise, it's currently possible to attach cgroup_skb prog\ntypes to other cgroup hooks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38565",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ar5523: enable proper endpoint verification\n\nSyzkaller reports [1] hitting a warning about an endpoint in use\nnot having an expected type to it.\n\nFix the issue by checking for the existence of all proper\nendpoints with their according types intact.\n\nSadly, this patch has not been tested on real hardware.\n\n[1] Syzkaller report:\n------------[ cut here ]------------\nusb 1-1: BOGUS urb xfer, pipe 3 != type 1\nWARNING: CPU: 0 PID: 3643 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n \u003cTASK\u003e\n ar5523_cmd+0x41b/0x780 drivers/net/wireless/ath/ar5523/ar5523.c:275\n ar5523_cmd_read drivers/net/wireless/ath/ar5523/ar5523.c:302 [inline]\n ar5523_host_available drivers/net/wireless/ath/ar5523/ar5523.c:1376 [inline]\n ar5523_probe+0x14b0/0x1d10 drivers/net/wireless/ath/ar5523/ar5523.c:1655\n usb_probe_interface+0x30f/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_set_configuration+0x101d/0x1900 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xbe/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd8/0x2c0 drivers/usb/core/driver.c:293\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_new_device.cold+0x685/0x10ad drivers/usb/core/hub.c:2573\n hub_port_connect drivers/usb/core/hub.c:5353 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5497 [inline]\n port_event drivers/usb/core/hub.c:5653 [inline]\n hub_event+0x26cb/0x45d0 drivers/usb/core/hub.c:5735\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38566",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix verifier assumptions about socket-\u003esk\n\nThe verifier assumes that 'sk' field in 'struct socket' is valid\nand non-NULL when 'socket' pointer itself is trusted and non-NULL.\nThat may not be the case when socket was just created and\npassed to LSM socket_accept hook.\nFix this verifier assumption and adjust tests.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38567",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: carl9170: add a proper sanity check for endpoints\n\nSyzkaller reports [1] hitting a warning which is caused by presence\nof a wrong endpoint type at the URB sumbitting stage. While there\nwas a check for a specific 4th endpoint, since it can switch types\nbetween bulk and interrupt, other endpoints are trusted implicitly.\nSimilar warning is triggered in a couple of other syzbot issues [2].\n\nFix the issue by doing a comprehensive check of all endpoints\ntaking into account difference between high- and full-speed\nconfiguration.\n\n[1] Syzkaller report:\n...\nWARNING: CPU: 0 PID: 4721 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n \u003cTASK\u003e\n carl9170_usb_send_rx_irq_urb+0x273/0x340 drivers/net/wireless/ath/carl9170/usb.c:504\n carl9170_usb_init_device drivers/net/wireless/ath/carl9170/usb.c:939 [inline]\n carl9170_usb_firmware_finish drivers/net/wireless/ath/carl9170/usb.c:999 [inline]\n carl9170_usb_firmware_step2+0x175/0x240 drivers/net/wireless/ath/carl9170/usb.c:1028\n request_firmware_work_func+0x130/0x240 drivers/base/firmware_loader/main.c:1107\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308\n \u003c/TASK\u003e\n\n[2] Related syzkaller crashes:",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38568",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/perf: hisi: hns3: Fix out-of-bound access when valid event group\n\nThe perf tool allows users to create event groups through following\ncmd [1], but the driver does not check whether the array index is out\nof bounds when writing data to the event_group array. If the number of\nevents in an event_group is greater than HNS3_PMU_MAX_HW_EVENTS, the\nmemory write overflow of event_group array occurs.\n\nAdd array index check to fix the possible array out of bounds violation,\nand return directly when write new events are written to array bounds.\n\nThere are 9 different events in an event_group.\n[1] perf stat -e '{pmu/event1/, ... ,pmu/event9/}",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38569",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/perf: hisi_pcie: Fix out-of-bound access when valid event group\n\nThe perf tool allows users to create event groups through following\ncmd [1], but the driver does not check whether the array index is out of\nbounds when writing data to the event_group array. If the number of events\nin an event_group is greater than HISI_PCIE_MAX_COUNTERS, the memory write\noverflow of event_group array occurs.\n\nAdd array index check to fix the possible array out of bounds violation,\nand return directly when write new events are written to array bounds.\n\nThere are 9 different events in an event_group.\n[1] perf stat -e '{pmu/event1/, ... ,pmu/event9/}'",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38570",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix potential glock use-after-free on unmount\n\nWhen a DLM lockspace is released and there ares still locks in that\nlockspace, DLM will unlock those locks automatically.  Commit\nfb6791d100d1b started exploiting this behavior to speed up filesystem\nunmount: gfs2 would simply free glocks it didn't want to unlock and then\nrelease the lockspace.  This didn't take the bast callbacks for\nasynchronous lock contention notifications into account, which remain\nactive until until a lock is unlocked or its lockspace is released.\n\nTo prevent those callbacks from accessing deallocated objects, put the\nglocks that should not be unlocked on the sd_dead_glocks list, release\nthe lockspace, and only then free those glocks.\n\nAs an additional measure, ignore unexpected ast and bast callbacks if\nthe receiving glock is dead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38571",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal/drivers/tsens: Fix null pointer dereference\n\ncompute_intercept_slope() is called from calibrate_8960() (in tsens-8960.c)\nas compute_intercept_slope(priv, p1, NULL, ONE_PT_CALIB) which lead to null\npointer dereference (if DEBUG or DYNAMIC_DEBUG set).\nFix this bug by adding null pointer check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38572",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix out-of-bound access of qmi_invoke_handler()\n\nCurrently, there is no terminator entry for ath12k_qmi_msg_handlers hence\nfacing below KASAN warning,\n\n ==================================================================\n BUG: KASAN: global-out-of-bounds in qmi_invoke_handler+0xa4/0x148\n Read of size 8 at addr ffffffd00a6428d8 by task kworker/u8:2/1273\n\n CPU: 0 PID: 1273 Comm: kworker/u8:2 Not tainted 5.4.213 #0\n Workqueue: qmi_msg_handler qmi_data_ready_work\n Call trace:\n  dump_backtrace+0x0/0x20c\n  show_stack+0x14/0x1c\n  dump_stack+0xe0/0x138\n  print_address_description.isra.5+0x30/0x330\n  __kasan_report+0x16c/0x1bc\n  kasan_report+0xc/0x14\n  __asan_load8+0xa8/0xb0\n  qmi_invoke_handler+0xa4/0x148\n  qmi_handle_message+0x18c/0x1bc\n  qmi_data_ready_work+0x4ec/0x528\n  process_one_work+0x2c0/0x440\n  worker_thread+0x324/0x4b8\n  kthread+0x210/0x228\n  ret_from_fork+0x10/0x18\n\n The address belongs to the variable:\n  ath12k_mac_mon_status_filter_default+0x4bd8/0xfffffffffffe2300 [ath12k]\n [...]\n ==================================================================\n\nAdd a dummy terminator entry at the end to assist the qmi_invoke_handler()\nin traversing up to the terminator entry without accessing an\nout-of-boundary index.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38573",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncppc_cpufreq: Fix possible null pointer dereference\n\ncppc_cpufreq_get_rate() and hisi_cppc_cpufreq_get_rate() can be called from\ndifferent places with various parameters. So cpufreq_cpu_get() can return\nnull as 'policy' in some circumstances.\nFix this bug by adding null return check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38575",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmfmac: pcie: handle randbuf allocation failure\n\nThe kzalloc() in brcmf_pcie_download_fw_nvram() will return null\nif the physical memory has run out. As a result, if we use\nget_random_bytes() to generate random bytes in the randbuf, the\nnull pointer dereference bug will happen.\n\nIn order to prevent allocation failure, this patch adds a separate\nfunction using buffer on kernel stack to generate random bytes in\nthe randbuf, which could prevent the kernel stack from overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38578",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\necryptfs: Fix buffer size for tag 66 packet\n\nThe 'TAG 66 Packet Format' description is missing the cipher code and\nchecksum fields that are packed into the message packet. As a result,\nthe buffer allocated for the packet is 3 bytes too small and\nwrite_tag_66_packet() will write up to 3 bytes past the end of the\nbuffer.\n\nFix this by increasing the size of the allocation so the whole packet\nwill always fit in the buffer.\n\nThis fixes the below kasan slab-out-of-bounds bug:\n\n  BUG: KASAN: slab-out-of-bounds in ecryptfs_generate_key_packet_set+0x7d6/0xde0\n  Write of size 1 at addr ffff88800afbb2a5 by task touch/181\n\n  CPU: 0 PID: 181 Comm: touch Not tainted 6.6.13-gnu #1 4c9534092be820851bb687b82d1f92a426598dc6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2/GNU Guix 04/01/2014\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x4c/0x70\n   print_report+0xc5/0x610\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   ? kasan_complete_mode_report_info+0x44/0x210\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   kasan_report+0xc2/0x110\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   __asan_store1+0x62/0x80\n   ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   ? __pfx_ecryptfs_generate_key_packet_set+0x10/0x10\n   ? __alloc_pages+0x2e2/0x540\n   ? __pfx_ovl_open+0x10/0x10 [overlay 30837f11141636a8e1793533a02e6e2e885dad1d]\n   ? dentry_open+0x8f/0xd0\n   ecryptfs_write_metadata+0x30a/0x550\n   ? __pfx_ecryptfs_write_metadata+0x10/0x10\n   ? ecryptfs_get_lower_file+0x6b/0x190\n   ecryptfs_initialize_file+0x77/0x150\n   ecryptfs_create+0x1c2/0x2f0\n   path_openat+0x17cf/0x1ba0\n   ? __pfx_path_openat+0x10/0x10\n   do_filp_open+0x15e/0x290\n   ? __pfx_do_filp_open+0x10/0x10\n   ? __kasan_check_write+0x18/0x30\n   ? _raw_spin_lock+0x86/0xf0\n   ? __pfx__raw_spin_lock+0x10/0x10\n   ? __kasan_check_write+0x18/0x30\n   ? alloc_fd+0xf4/0x330\n   do_sys_openat2+0x122/0x160\n   ? __pfx_do_sys_openat2+0x10/0x10\n   __x64_sys_openat+0xef/0x170\n   ? __pfx___x64_sys_openat+0x10/0x10\n   do_syscall_64+0x60/0xd0\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n  RIP: 0033:0x7f00a703fd67\n  Code: 25 00 00 41 00 3d 00 00 41 00 74 37 64 8b 04 25 18 00 00 00 85 c0 75 5b 44 89 e2 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 0f 87 85 00 00 00 48 83 c4 68 5d 41 5c c3 0f 1f\n  RSP: 002b:00007ffc088e30b0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101\n  RAX: ffffffffffffffda RBX: 00007ffc088e3368 RCX: 00007f00a703fd67\n  RDX: 0000000000000941 RSI: 00007ffc088e48d7 RDI: 00000000ffffff9c\n  RBP: 00007ffc088e48d7 R08: 0000000000000001 R09: 0000000000000000\n  R10: 00000000000001b6 R11: 0000000000000246 R12: 0000000000000941\n  R13: 0000000000000000 R14: 00007ffc088e48d7 R15: 00007f00a7180040\n   \u003c/TASK\u003e\n\n  Allocated by task 181:\n   kasan_save_stack+0x2f/0x60\n   kasan_set_track+0x29/0x40\n   kasan_save_alloc_info+0x25/0x40\n   __kasan_kmalloc+0xc5/0xd0\n   __kmalloc+0x66/0x160\n   ecryptfs_generate_key_packet_set+0x6d2/0xde0\n   ecryptfs_write_metadata+0x30a/0x550\n   ecryptfs_initialize_file+0x77/0x150\n   ecryptfs_create+0x1c2/0x2f0\n   path_openat+0x17cf/0x1ba0\n   do_filp_open+0x15e/0x290\n   do_sys_openat2+0x122/0x160\n   __x64_sys_openat+0xef/0x170\n   do_syscall_64+0x60/0xd0\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38579",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: bcm - Fix pointer arithmetic\n\nIn spu2_dump_omd() value of ptr is increased by ciph_key_len\ninstead of hash_iv_len which could lead to going beyond the\nbuffer boundaries.\nFix this bug by changing ciph_key_len to hash_iv_len.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38580",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nepoll: be better about file lifetimes\n\nepoll can call out to vfs_poll() with a file pointer that may race with\nthe last 'fput()'. That would make f_count go down to zero, and while\nthe ep-\u003emtx locking means that the resulting file pointer tear-down will\nbe blocked until the poll returns, it means that f_count is already\ndead, and any use of it won't actually get a reference to the file any\nmore: it's dead regardless.\n\nMake sure we have a valid ref on the file pointer before we call down to\nvfs_poll() from the epoll routines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38581",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu/mes: fix use-after-free issue\n\nDelete fence fallback timer to fix the ramdom\nuse-after-free issue.\n\nv2: move to amdgpu_mes.c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38582",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential hang in nilfs_detach_log_writer()\n\nSyzbot has reported a potential hang in nilfs_detach_log_writer() called\nduring nilfs2 unmount.\n\nAnalysis revealed that this is because nilfs_segctor_sync(), which\nsynchronizes with the log writer thread, can be called after\nnilfs_segctor_destroy() terminates that thread, as shown in the call trace\nbelow:\n\nnilfs_detach_log_writer\n  nilfs_segctor_destroy\n    nilfs_segctor_kill_thread  --\u003e Shut down log writer thread\n    flush_work\n      nilfs_iput_work_func\n        nilfs_dispose_list\n          iput\n            nilfs_evict_inode\n              nilfs_transaction_commit\n                nilfs_construct_segment (if inode needs sync)\n                  nilfs_segctor_sync  --\u003e Attempt to synchronize with\n                                          log writer thread\n                           *** DEADLOCK ***\n\nFix this issue by changing nilfs_segctor_sync() so that the log writer\nthread returns normally without synchronizing after it terminates, and by\nforcing tasks that are already waiting to complete once after the thread\nterminates.\n\nThe skipped inode metadata flushout will then be processed together in the\nsubsequent cleanup work in nilfs_segctor_destroy().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38583",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix use-after-free of timer for log writer thread\n\nPatch series \"nilfs2: fix log writer related issues\".\n\nThis bug fix series covers three nilfs2 log writer-related issues,\nincluding a timer use-after-free issue and potential deadlock issue on\nunmount, and a potential freeze issue in event synchronization found\nduring their analysis.  Details are described in each commit log.\n\n\nThis patch (of 3):\n\nA use-after-free issue has been reported regarding the timer sc_timer on\nthe nilfs_sc_info structure.\n\nThe problem is that even though it is used to wake up a sleeping log\nwriter thread, sc_timer is not shut down until the nilfs_sc_info structure\nis about to be freed, and is used regardless of the thread's lifetime.\n\nFix this issue by limiting the use of sc_timer only while the log writer\nthread is alive.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38586",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nr8169: Fix possible ring buffer corruption on fragmented Tx packets.\n\nAn issue was found on the RTL8125b when transmitting small fragmented\npackets, whereby invalid entries were inserted into the transmit ring\nbuffer, subsequently leading to calls to dma_unmap_single() with a null\naddress.\n\nThis was caused by rtl8169_start_xmit() not noticing changes to nr_frags\nwhich may occur when small packets are padded (to work around hardware\nquirks) in rtl8169_tso_csum_v2().\n\nTo fix this, postpone inspecting nr_frags until after any padding has been\napplied.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38587",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspeakup: Fix sizeof() vs ARRAY_SIZE() bug\n\nThe \"buf\" pointer is an array of u16 values.  This code should be\nusing ARRAY_SIZE() (which is 256) instead of sizeof() (which is 512),\notherwise it can the still got out of bounds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38588",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix possible use-after-free issue in ftrace_location()\n\nKASAN reports a bug:\n\n  BUG: KASAN: use-after-free in ftrace_location+0x90/0x120\n  Read of size 8 at addr ffff888141d40010 by task insmod/424\n  CPU: 8 PID: 424 Comm: insmod Tainted: G        W          6.9.0-rc2+\n  [...]\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x68/0xa0\n   print_report+0xcf/0x610\n   kasan_report+0xb5/0xe0\n   ftrace_location+0x90/0x120\n   register_kprobe+0x14b/0xa40\n   kprobe_init+0x2d/0xff0 [kprobe_example]\n   do_one_initcall+0x8f/0x2d0\n   do_init_module+0x13a/0x3c0\n   load_module+0x3082/0x33d0\n   init_module_from_file+0xd2/0x130\n   __x64_sys_finit_module+0x306/0x440\n   do_syscall_64+0x68/0x140\n   entry_SYSCALL_64_after_hwframe+0x71/0x79\n\nThe root cause is that, in lookup_rec(), ftrace record of some address\nis being searched in ftrace pages of some module, but those ftrace pages\nat the same time is being freed in ftrace_release_mod() as the\ncorresponding module is being deleted:\n\n           CPU1                       |      CPU2\n  register_kprobes() {                | delete_module() {\n    check_kprobe_address_safe() {     |\n      arch_check_ftrace_location() {  |\n        ftrace_location() {           |\n          lookup_rec() // USE!        |   ftrace_release_mod() // Free!\n\nTo fix this issue:\n  1. Hold rcu lock as accessing ftrace pages in ftrace_location_range();\n  2. Use ftrace_location_range() instead of lookup_rec() in\n     ftrace_location();\n  3. Call synchronize_rcu() before freeing any ftrace pages both in\n     ftrace_process_locs()/ftrace_release_mod()/ftrace_free_mem().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38590",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Modify the print level of CQE error\n\nToo much print may lead to a panic in kernel. Change ibdev_err() to\nibdev_err_ratelimited(), and change the printing level of cqe dump\nto debug level.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Fix deadlock on SRQ async events.\n\nxa_lock for SRQ table may be required in AEQ. Use xa_store_irq()/\nxa_erase_irq() to avoid deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38592",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Init `ddp_comp` with devm_kcalloc()\n\nIn the case where `conn_routes` is true we allocate an extra slot in\nthe `ddp_comp` array but mtk_drm_crtc_create() never seemed to\ninitialize it in the test case I ran. For me, this caused a later\ncrash when we looped through the array in mtk_drm_crtc_mode_valid().\nThis showed up for me when I booted with `slub_debug=FZPUA` which\npoisons the memory initially. Without `slub_debug` I couldn't\nreproduce, presumably because the later code handles the value being\nNULL and in most cases (not guaranteed in all cases) the memory the\nallocator returned started out as 0.\n\nIt really doesn't hurt to initialize the array with devm_kcalloc()\nsince the array is small and the overhead of initting a handful of\nelements to 0 is small. In general initting memory to zero is a safer\npractice and usually it's suggested to only use the non-initting alloc\nfunctions if you really need to.\n\nLet's switch the function to use an allocation function that zeros the\nmemory. For me, this avoids the crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38594",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: move the EST lock to struct stmmac_priv\n\nReinitialize the whole EST structure would also reset the mutex\nlock which is embedded in the EST structure, and then trigger\nthe following warning. To address this, move the lock to struct\nstmmac_priv. We also need to reacquire the mutex lock when doing\nthis initialization.\n\nDEBUG_LOCKS_WARN_ON(lock-\u003emagic != lock)\nWARNING: CPU: 3 PID: 505 at kernel/locking/mutex.c:587 __mutex_lock+0xd84/0x1068\n Modules linked in:\n CPU: 3 PID: 505 Comm: tc Not tainted 6.9.0-rc6-00053-g0106679839f7-dirty #29\n Hardware name: NXP i.MX8MPlus EVK board (DT)\n pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __mutex_lock+0xd84/0x1068\n lr : __mutex_lock+0xd84/0x1068\n sp : ffffffc0864e3570\n x29: ffffffc0864e3570 x28: ffffffc0817bdc78 x27: 0000000000000003\n x26: ffffff80c54f1808 x25: ffffff80c9164080 x24: ffffffc080d723ac\n x23: 0000000000000000 x22: 0000000000000002 x21: 0000000000000000\n x20: 0000000000000000 x19: ffffffc083bc3000 x18: ffffffffffffffff\n x17: ffffffc08117b080 x16: 0000000000000002 x15: ffffff80d2d40000\n x14: 00000000000002da x13: ffffff80d2d404b8 x12: ffffffc082b5a5c8\n x11: ffffffc082bca680 x10: ffffffc082bb2640 x9 : ffffffc082bb2698\n x8 : 0000000000017fe8 x7 : c0000000ffffefff x6 : 0000000000000001\n x5 : ffffff8178fe0d48 x4 : 0000000000000000 x3 : 0000000000000027\n x2 : ffffff8178fe0d50 x1 : 0000000000000000 x0 : 0000000000000000\n Call trace:\n  __mutex_lock+0xd84/0x1068\n  mutex_lock_nested+0x28/0x34\n  tc_setup_taprio+0x118/0x68c\n  stmmac_setup_tc+0x50/0xf0\n  taprio_change+0x868/0xc9c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix peer devlink set for SF representor devlink port\n\nThe cited patch change register devlink flow, and neglect to reflect\nthe changes for peer devlink set logic. Peer devlink set is\ntriggering a call trace if done after devl_register.[1]\n\nHence, align peer devlink set logic with register devlink flow.\n\n[1]\nWARNING: CPU: 4 PID: 3394 at net/devlink/core.c:155 devlink_rel_nested_in_add+0x177/0x180\nCPU: 4 PID: 3394 Comm: kworker/u40:1 Not tainted 6.9.0-rc4_for_linust_min_debug_2024_04_16_14_08 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nWorkqueue: mlx5_vhca_event0 mlx5_vhca_state_work_handler [mlx5_core]\nRIP: 0010:devlink_rel_nested_in_add+0x177/0x180\nCall Trace:\n \u003cTASK\u003e\n ? __warn+0x78/0x120\n ? devlink_rel_nested_in_add+0x177/0x180\n ? report_bug+0x16d/0x180\n ? handle_bug+0x3c/0x60\n ? exc_invalid_op+0x14/0x70\n ? asm_exc_invalid_op+0x16/0x20\n ? devlink_port_init+0x30/0x30\n ? devlink_port_type_clear+0x50/0x50\n ? devlink_rel_nested_in_add+0x177/0x180\n ? devlink_rel_nested_in_add+0xdd/0x180\n mlx5_sf_mdev_event+0x74/0xb0 [mlx5_core]\n notifier_call_chain+0x35/0xb0\n blocking_notifier_call_chain+0x3d/0x60\n mlx5_blocking_notifier_call_chain+0x22/0x30 [mlx5_core]\n mlx5_sf_dev_probe+0x185/0x3e0 [mlx5_core]\n auxiliary_bus_probe+0x38/0x80\n ? driver_sysfs_add+0x51/0x80\n really_probe+0xc5/0x3a0\n ? driver_probe_device+0x90/0x90\n __driver_probe_device+0x80/0x160\n driver_probe_device+0x1e/0x90\n __device_attach_driver+0x7d/0x100\n bus_for_each_drv+0x80/0xd0\n __device_attach+0xbc/0x1f0\n bus_probe_device+0x86/0xa0\n device_add+0x64f/0x860\n __auxiliary_device_add+0x3b/0xa0\n mlx5_sf_dev_add+0x139/0x330 [mlx5_core]\n mlx5_sf_dev_state_change_handler+0x1e4/0x250 [mlx5_core]\n notifier_call_chain+0x35/0xb0\n blocking_notifier_call_chain+0x3d/0x60\n mlx5_vhca_state_work_handler+0x151/0x200 [mlx5_core]\n process_one_work+0x13f/0x2e0\n worker_thread+0x2bd/0x3c0\n ? rescuer_thread+0x410/0x410\n kthread+0xc4/0xf0\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x2d/0x50\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork_asm+0x11/0x20\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38597",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neth: sungem: remove .ndo_poll_controller to avoid deadlocks\n\nErhard reports netpoll warnings from sungem:\n\n  netpoll_send_skb_on_dev(): eth0 enabled interrupts in poll (gem_start_xmit+0x0/0x398)\n  WARNING: CPU: 1 PID: 1 at net/core/netpoll.c:370 netpoll_send_skb+0x1fc/0x20c\n\ngem_poll_controller() disables interrupts, which may sleep.\nWe can't sleep in netpoll, it has interrupts disabled completely.\nStrangely, gem_poll_controller() doesn't even poll the completions,\nand instead acts as if an interrupt has fired so it just schedules\nNAPI and exits. None of this has been necessary for years, since\nnetpoll invokes NAPI directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n \u003cTASK\u003e\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev-\u003eresync_min\n while (j \u003c max_sectors)\n  sectors = raid10_sync_request(mddev, j, \u0026skipped)\n   if (!md_bitmap_start_sync(..., \u0026sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38599",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: prevent xattr node from overflowing the eraseblock\n\nAdd a check to make sure that the requested xattr node size is no larger\nthan the eraseblock minus the cleanmarker.\n\nUnlike the usual inode nodes, the xattr nodes aren't split into parts\nand spread across multiple eraseblocks, which means that a xattr node\nmust not occupy more than one eraseblock. If the requested xattr value is\ntoo large, the xattr node can spill onto the next eraseblock, overwriting\nthe nodes and causing errors such as:\n\njffs2: argh. node added in wrong place at 0x0000b050(2)\njffs2: nextblock 0x0000a000, expected at 0000b00c\njffs2: error: (823) do_verify_xattr_datum: node CRC failed at 0x01e050,\nread=0xfc892c93, calc=0x000000\njffs2: notice: (823) jffs2_get_inode_nodes: Node header CRC failed\nat 0x01e00c. {848f,2fc4,0fef511f,59a3d171}\njffs2: Node at 0x0000000c with length 0x00001044 would run over the\nend of the erase block\njffs2: Perhaps the file system was created with the wrong erase size?\njffs2: jffs2_scan_eraseblock(): Magic bitmask 0x1985 not found\nat 0x00000010: 0x1044 instead\n\nThis breaks the filesystem and can lead to KASAN crashes such as:\n\nBUG: KASAN: slab-out-of-bounds in jffs2_sum_add_kvec+0x125e/0x15d0\nRead of size 4 at addr ffff88802c31e914 by task repro/830\nCPU: 0 PID: 830 Comm: repro Not tainted 6.9.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS Arch Linux 1.16.3-1-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0xc6/0x120\n print_report+0xc4/0x620\n ? __virt_addr_valid+0x308/0x5b0\n kasan_report+0xc1/0xf0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_flash_direct_writev+0xa8/0xd0\n jffs2_flash_writev+0x9c9/0xef0\n ? __x64_sys_setxattr+0xc4/0x160\n ? do_syscall_64+0x69/0x140\n ? entry_SYSCALL_64_after_hwframe+0x76/0x7e\n [...]\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38600",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: Fix deadlocks with kctl removals at disconnection\n\nIn snd_card_disconnect(), we set card-\u003eshutdown flag at the beginning,\ncall callbacks and do sync for card-\u003epower_ref_sleep waiters at the\nend.  The callback may delete a kctl element, and this can lead to a\ndeadlock when the device was in the suspended state.  Namely:\n\n* A process waits for the power up at snd_power_ref_and_wait() in\n  snd_ctl_info() or read/write() inside card-\u003econtrols_rwsem.\n\n* The system gets disconnected meanwhile, and the driver tries to\n  delete a kctl via snd_ctl_remove*(); it tries to take\n  card-\u003econtrols_rwsem again, but this is already locked by the\n  above.  Since the sleeper isn't woken up, this deadlocks.\n\nAn easy fix is to wake up sleepers before processing the driver\ndisconnect callbacks but right after setting the card-\u003eshutdown flag.\nThen all sleepers will abort immediately, and the code flows again.\n\nSo, basically this patch moves the wait_event() call at the right\ntiming.  While we're at it, just to be sure, call wait_event_all()\ninstead of wait_event(), although we don't use exclusive events on\nthis queue for now.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38601",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Fix a race between readers and resize checks\n\nThe reader code in rb_get_reader_page() swaps a new reader page into the\nring buffer by doing cmpxchg on old-\u003elist.prev-\u003enext to point it to the\nnew page. Following that, if the operation is successful,\nold-\u003elist.next-\u003eprev gets updated too. This means the underlying\ndoubly-linked list is temporarily inconsistent, page-\u003eprev-\u003enext or\npage-\u003enext-\u003eprev might not be equal back to page for some page in the\nring buffer.\n\nThe resize operation in ring_buffer_resize() can be invoked in parallel.\nIt calls rb_check_pages() which can detect the described inconsistency\nand stop further tracing:\n\n[  190.271762] ------------[ cut here ]------------\n[  190.271771] WARNING: CPU: 1 PID: 6186 at kernel/trace/ring_buffer.c:1467 rb_check_pages.isra.0+0x6a/0xa0\n[  190.271789] Modules linked in: [...]\n[  190.271991] Unloaded tainted modules: intel_uncore_frequency(E):1 skx_edac(E):1\n[  190.272002] CPU: 1 PID: 6186 Comm: cmd.sh Kdump: loaded Tainted: G            E      6.9.0-rc6-default #5 158d3e1e6d0b091c34c3b96bfd99a1c58306d79f\n[  190.272011] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552c-rebuilt.opensuse.org 04/01/2014\n[  190.272015] RIP: 0010:rb_check_pages.isra.0+0x6a/0xa0\n[  190.272023] Code: [...]\n[  190.272028] RSP: 0018:ffff9c37463abb70 EFLAGS: 00010206\n[  190.272034] RAX: ffff8eba04b6cb80 RBX: 0000000000000007 RCX: ffff8eba01f13d80\n[  190.272038] RDX: ffff8eba01f130c0 RSI: ffff8eba04b6cd00 RDI: ffff8eba0004c700\n[  190.272042] RBP: ffff8eba0004c700 R08: 0000000000010002 R09: 0000000000000000\n[  190.272045] R10: 00000000ffff7f52 R11: ffff8eba7f600000 R12: ffff8eba0004c720\n[  190.272049] R13: ffff8eba00223a00 R14: 0000000000000008 R15: ffff8eba067a8000\n[  190.272053] FS:  00007f1bd64752c0(0000) GS:ffff8eba7f680000(0000) knlGS:0000000000000000\n[  190.272057] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  190.272061] CR2: 00007f1bd6662590 CR3: 000000010291e001 CR4: 0000000000370ef0\n[  190.272070] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  190.272073] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  190.272077] Call Trace:\n[  190.272098]  \u003cTASK\u003e\n[  190.272189]  ring_buffer_resize+0x2ab/0x460\n[  190.272199]  __tracing_resize_ring_buffer.part.0+0x23/0xa0\n[  190.272206]  tracing_resize_ring_buffer+0x65/0x90\n[  190.272216]  tracing_entries_write+0x74/0xc0\n[  190.272225]  vfs_write+0xf5/0x420\n[  190.272248]  ksys_write+0x67/0xe0\n[  190.272256]  do_syscall_64+0x82/0x170\n[  190.272363]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[  190.272373] RIP: 0033:0x7f1bd657d263\n[  190.272381] Code: [...]\n[  190.272385] RSP: 002b:00007ffe72b643f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[  190.272391] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f1bd657d263\n[  190.272395] RDX: 0000000000000002 RSI: 0000555a6eb538e0 RDI: 0000000000000001\n[  190.272398] RBP: 0000555a6eb538e0 R08: 000000000000000a R09: 0000000000000000\n[  190.272401] R10: 0000555a6eb55190 R11: 0000000000000246 R12: 00007f1bd6662500\n[  190.272404] R13: 0000000000000002 R14: 00007f1bd6667c00 R15: 0000000000000002\n[  190.272412]  \u003c/TASK\u003e\n[  190.272414] ---[ end trace 0000000000000000 ]---\n\nNote that ring_buffer_resize() calls rb_check_pages() only if the parent\ntrace_buffer has recording disabled. Recent commit d78ab792705c\n(\"tracing: Stop current tracer when resizing buffer\") causes that it is\nnow always the case which makes it more likely to experience this issue.\n\nThe window to hit this race is nonetheless very small. To help\nreproducing it, one can add a delay loop in rb_get_reader_page():\n\n ret = rb_head_page_replace(reader, cpu_buffer-\u003ereader_page);\n if (!ret)\n \tgoto spin;\n for (unsigned i = 0; i \u003c 1U \u003c\u003c 26; i++)  /* inserted delay loop */\n \t__asm__ __volatile__ (\"\" : : : \"memory\");\n rb_list_head(reader-\u003elist.next)-\u003eprev = \u0026cpu_buffer-\u003ereader_page-\u003elist;\n\n.. \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38602",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix reference count leak issues of ax25_dev\n\nThe ax25_addr_ax25dev() and ax25_dev_device_down() exist a reference\ncount leak issue of the object \"ax25_dev\".\n\nMemory leak issue in ax25_addr_ax25dev():\n\nThe reference count of the object \"ax25_dev\" can be increased multiple\ntimes in ax25_addr_ax25dev(). This will cause a memory leak.\n\nMemory leak issues in ax25_dev_device_down():\n\nThe reference count of ax25_dev is set to 1 in ax25_dev_device_up() and\nthen increase the reference count when ax25_dev is added to ax25_dev_list.\nAs a result, the reference count of ax25_dev is 2. But when the device is\nshutting down. The ax25_dev_device_down() drops the reference count once\nor twice depending on if we goto unlock_put or not, which will cause\nmemory leak.\n\nAs for the issue of ax25_addr_ax25dev(), it is impossible for one pointer\nto be on a list twice. So add a break in ax25_addr_ax25dev(). As for the\nissue of ax25_dev_device_down(), increase the reference count of ax25_dev\nonce in ax25_dev_device_up() and decrease the reference count of ax25_dev\nafter it is removed from the ax25_dev_list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38603",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/perf: hisi: hns3: Actually use devm_add_action_or_reset()\n\npci_alloc_irq_vectors() allocates an irq vector. When devm_add_action()\nfails, the irq vector is not freed, which leads to a memory leak.\n\nReplace the devm_add_action with devm_add_action_or_reset to ensure\nthe irq vector can be destroyed when it fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38604",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: refine the EOF check in blkdev_iomap_begin\n\nblkdev_iomap_begin rounds down the offset to the logical block size\nbefore stashing it in iomap-\u003eoffset and checking that it still is\ninside the inode size.\n\nCheck the i_size check to the raw pos value so that we don't try a\nzero size write if iter-\u003epos is unaligned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38605",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: core: Fix NULL module pointer assignment at card init\n\nThe commit 81033c6b584b (\"ALSA: core: Warn on empty module\")\nintroduced a WARN_ON() for a NULL module pointer passed at snd_card\nobject creation, and it also wraps the code around it with '#ifdef\nMODULE'.  This works in most cases, but the devils are always in\ndetails.  \"MODULE\" is defined when the target code (i.e. the sound\ncore) is built as a module; but this doesn't mean that the caller is\nalso built-in or not.  Namely, when only the sound core is built-in\n(CONFIG_SND=y) while the driver is a module (CONFIG_SND_USB_AUDIO=m),\nthe passed module pointer is ignored even if it's non-NULL, and\ncard-\u003emodule remains as NULL.  This would result in the missing module\nreference up/down at the device open/close, leading to a race with the\ncode execution after the module removal.\n\nFor addressing the bug, move the assignment of card-\u003emodule again out\nof ifdef.  The WARN_ON() is still wrapped with ifdef because the\nmodule can be really NULL when all sound drivers are built-in.\n\nNote that we keep 'ifdef MODULE' for WARN_ON(), otherwise it would\nlead to a false-positive NULL module check.  Admittedly it won't catch\nperfectly, i.e. no check is performed when CONFIG_SND=y.  But, it's no\nreal problem as it's only for debugging, and the condition is pretty\nrare.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38608",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix netif state handling\n\nmlx5e_suspend cleans resources only if netif_device_present() returns\ntrue. However, mlx5e_resume changes the state of netif, via\nmlx5e_nic_enable, only if reg_state == NETREG_REGISTERED.\nIn the below case, the above leads to NULL-ptr Oops[1] and memory\nleaks:\n\nmlx5e_probe\n _mlx5e_resume\n  mlx5e_attach_netdev\n   mlx5e_nic_enable  \u003c-- netdev not reg, not calling netif_device_attach()\n  register_netdev \u003c-- failed for some reason.\nERROR_FLOW:\n _mlx5e_suspend \u003c-- netif_device_present return false, resources aren't freed :(\n\nHence, clean resources in this case as well.\n\n[1]\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 0 P4D 0\nOops: 0010 [#1] SMP\nCPU: 2 PID: 9345 Comm: test-ovs-ct-gen Not tainted 6.5.0_for_upstream_min_debug_2023_09_05_16_01 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nRIP: 0010:0x0\nCode: Unable to access opcode bytes at0xffffffffffffffd6.\nRSP: 0018:ffff888178aaf758 EFLAGS: 00010246\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x20/0x60\n ? page_fault_oops+0x14c/0x3c0\n ? exc_page_fault+0x75/0x140\n ? asm_exc_page_fault+0x22/0x30\n notifier_call_chain+0x35/0xb0\n blocking_notifier_call_chain+0x3d/0x60\n mlx5_blocking_notifier_call_chain+0x22/0x30 [mlx5_core]\n mlx5_core_uplink_netdev_event_replay+0x3e/0x60 [mlx5_core]\n mlx5_mdev_netdev_track+0x53/0x60 [mlx5_ib]\n mlx5_ib_roce_init+0xc3/0x340 [mlx5_ib]\n __mlx5_ib_add+0x34/0xd0 [mlx5_ib]\n mlx5r_probe+0xe1/0x210 [mlx5_ib]\n ? auxiliary_match_id+0x6a/0x90\n auxiliary_bus_probe+0x38/0x80\n ? driver_sysfs_add+0x51/0x80\n really_probe+0xc9/0x3e0\n ? driver_probe_device+0x90/0x90\n __driver_probe_device+0x80/0x160\n driver_probe_device+0x1e/0x90\n __device_attach_driver+0x7d/0x100\n bus_for_each_drv+0x80/0xd0\n __device_attach+0xbc/0x1f0\n bus_probe_device+0x86/0xa0\n device_add+0x637/0x840\n __auxiliary_device_add+0x3b/0xa0\n add_adev+0xc9/0x140 [mlx5_core]\n mlx5_rescan_drivers_locked+0x22a/0x310 [mlx5_core]\n mlx5_register_device+0x53/0xa0 [mlx5_core]\n mlx5_init_one_devl_locked+0x5c4/0x9c0 [mlx5_core]\n mlx5_init_one+0x3b/0x60 [mlx5_core]\n probe_one+0x44c/0x730 [mlx5_core]\n local_pci_probe+0x3e/0x90\n pci_device_probe+0xbf/0x210\n ? kernfs_create_link+0x5d/0xa0\n ? sysfs_do_create_link_sd+0x60/0xc0\n really_probe+0xc9/0x3e0\n ? driver_probe_device+0x90/0x90\n __driver_probe_device+0x80/0x160\n driver_probe_device+0x1e/0x90\n __device_attach_driver+0x7d/0x100\n bus_for_each_drv+0x80/0xd0\n __device_attach+0xbc/0x1f0\n pci_bus_add_device+0x54/0x80\n pci_iov_add_virtfn+0x2e6/0x320\n sriov_enable+0x208/0x420\n mlx5_core_sriov_configure+0x9e/0x200 [mlx5_core]\n sriov_numvfs_store+0xae/0x1a0\n kernfs_fop_write_iter+0x10c/0x1a0\n vfs_write+0x291/0x3c0\n ksys_write+0x5f/0xe0\n do_syscall_64+0x3d/0x90\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n CR2: 0000000000000000\n ---[ end trace 0000000000000000  ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38610",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/virt/acrn: fix PFNMAP PTE checks in acrn_vm_ram_map()\n\nPatch series \"mm: follow_pte() improvements and acrn follow_pte() fixes\".\n\nPatch #1 fixes a bunch of issues I spotted in the acrn driver.  It\ncompiles, that's all I know.  I'll appreciate some review and testing from\nacrn folks.\n\nPatch #2+#3 improve follow_pte(), passing a VMA instead of the MM, adding\nmore sanity checks, and improving the documentation.  Gave it a quick test\non x86-64 using VM_PAT that ends up using follow_pte().\n\n\nThis patch (of 3):\n\nWe currently miss handling various cases, resulting in a dangerous\nfollow_pte() (previously follow_pfn()) usage.\n\n(1) We're not checking PTE write permissions.\n\nMaybe we should simply always require pte_write() like we do for\npin_user_pages_fast(FOLL_WRITE)? Hard to tell, so let's check for\nACRN_MEM_ACCESS_WRITE for now.\n\n(2) We're not rejecting refcounted pages.\n\nAs we are not using MMU notifiers, messing with refcounted pages is\ndangerous and can result in use-after-free. Let's make sure to reject them.\n\n(3) We are only looking at the first PTE of a bigger range.\n\nWe only lookup a single PTE, but memmap-\u003elen may span a larger area.\nLet's loop over all involved PTEs and make sure the PFN range is\nactually contiguous. Reject everything else: it couldn't have worked\neither way, and rather made use access PFNs we shouldn't be accessing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38611",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: i2c: et8ek8: Don't strip remove function when driver is builtin\n\nUsing __exit for the remove function results in the remove callback\nbeing discarded with CONFIG_VIDEO_ET8EK8=y. When such a device gets\nunbound (e.g. using sysfs or hotplug), the driver is just removed\nwithout the cleanup being performed. This results in resource leaks. Fix\nit by compiling in the remove callback unconditionally.\n\nThis also fixes a W=1 modpost warning:\n\n\tWARNING: modpost: drivers/media/i2c/et8ek8/et8ek8: section mismatch in reference: et8ek8_i2c_driver+0x10 (section: .data) -\u003e et8ek8_remove (section: .exit.text)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38615",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: exit() callback is optional\n\nThe exit() callback is optional and shouldn't be called without checking\na valid pointer first.\n\nAlso, we must clear freq_table pointer even if the exit() callback isn't\npresent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38616",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: carl9170: re-fix fortified-memset warning\n\nThe carl9170_tx_release() function sometimes triggers a fortified-memset\nwarning in my randconfig builds:\n\nIn file included from include/linux/string.h:254,\n                 from drivers/net/wireless/ath/carl9170/tx.c:40:\nIn function 'fortify_memset_chk',\n    inlined from 'carl9170_tx_release' at drivers/net/wireless/ath/carl9170/tx.c:283:2,\n    inlined from 'kref_put' at include/linux/kref.h:65:3,\n    inlined from 'carl9170_tx_put_skb' at drivers/net/wireless/ath/carl9170/tx.c:342:9:\ninclude/linux/fortify-string.h:493:25: error: call to '__write_overflow_field' declared with attribute warning: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror=attribute-warning]\n  493 |                         __write_overflow_field(p_size_field, size);\n\nKees previously tried to avoid this by using memset_after(), but it seems\nthis does not fully address the problem. I noticed that the memset_after()\nhere is done on a different part of the union (status) than the original\ncast was from (rate_driver_data), which may confuse the compiler.\n\nUnfortunately, the memset_after() trick does not work on driver_rates[]\nbecause that is part of an anonymous struct, and I could not get\nstruct_group() to do this either. Using two separate memset() calls\non the two members does address the warning though.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38617",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit/fortify: Fix mismatched kvalloc()/vfree() usage\n\nThe kv*() family of tests were accidentally freeing with vfree() instead\nof kvfree(). Use kvfree() instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38618",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: timer: Set lower bound of start tick time\n\nCurrently ALSA timer doesn't have the lower limit of the start tick\ntime, and it allows a very small size, e.g. 1 tick with 1ns resolution\nfor hrtimer.  Such a situation may lead to an unexpected RCU stall,\nwhere  the callback repeatedly queuing the expire update, as reported\nby fuzzer.\n\nThis patch introduces a sanity check of the timer start tick time, so\nthat the system returns an error when a too small start size is set.\nAs of this patch, the lower limit is hard-coded to 100us, which is\nsmall enough but can still work somehow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38619",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb-storage: alauda: Check whether the media is initialized\n\nThe member \"uzonesize\" of struct alauda_info will remain 0\nif alauda_init_media() fails, potentially causing divide errors\nin alauda_read_data() and alauda_write_lba().\n- Add a member \"media_initialized\" to struct alauda_info.\n- Change a condition in alauda_check_media() to ensure the\n  first initialization.\n- Add an error check for the return value of alauda_init_media().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38621",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: stk1160: fix bounds checking in stk1160_copy_video()\n\nThe subtract in this condition is reversed.  The -\u003elength is the length\nof the buffer.  The -\u003ebytesused is how many bytes we have copied thus\nfar.  When the condition is reversed that means the result of the\nsubtraction is always negative but since it's unsigned then the result\nis a very high positive value.  That means the overflow check is never\ntrue.\n\nAdditionally, the -\u003ebytesused doesn't actually work for this purpose\nbecause we're not writing to \"buf-\u003emem + buf-\u003ebytesused\".  Instead, the\nmath to calculate the destination where we are writing is a bit\ninvolved.  You calculate the number of full lines already written,\nmultiply by two, skip a line if necessary so that we start on an odd\nnumbered line, and add the offset into the line.\n\nTo fix this buffer overflow, just take the actual destination where we\nare writing, if the offset is already out of bounds print an error and\nreturn.  Otherwise, write up to buf-\u003elength bytes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38622",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/dpu: Add callback function pointer check before its call\n\nIn dpu_core_irq_callback_handler() callback function pointer is compared to NULL,\nbut then callback function is unconditionally called by this pointer.\nFix this bug by adding conditional return.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\nPatchwork: https://patchwork.freedesktop.org/patch/588237/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38627",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nstm class: Fix a double free in stm_register_device()\n\nThe put_device(\u0026stm-\u003edev) call will trigger stm_device_release() which\nfrees \"stm\" so the vfree(stm) on the next line is a double free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38628",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: u_audio: Fix race condition use of controls after free during gadget unbind.\n\nHang on to the control IDs instead of pointers since those are correctly\nhandled with locks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38629",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Avoid unnecessary destruction of file_ida\n\nfile_ida is allocated during cdev open and is freed accordingly\nduring cdev release. This sequence is guaranteed by driver file\noperations. Therefore, there is no need to destroy an already empty\nfile_ida when the WQ cdev is removed.\n\nWorse, ida_free() in cdev release may happen after destruction of\nfile_ida per WQ cdev. This can lead to accessing an id in file_ida\nafter it has been destroyed, resulting in a kernel panic.\n\nRemove ida_destroy(\u0026file_ida) to address these issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38630",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: cpu5wdt.c: Fix use-after-free bug caused by cpu5wdt_trigger\n\nWhen the cpu5wdt module is removing, the origin code uses del_timer() to\nde-activate the timer. If the timer handler is running, del_timer() could\nnot stop it and will return directly. If the port region is released by\nrelease_region() and then the timer handler cpu5wdt_trigger() calls outb()\nto write into the region that is released, the use-after-free bug will\nhappen.\n\nChange del_timer() to timer_shutdown_sync() in order that the timer handler\ncould be finished before the port region is released.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38633",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: max3100: Update uart_driver_registered on driver removal\n\nThe removal of the last MAX3100 device triggers the removal of\nthe driver. However, code doesn't update the respective global\nvariable and after insmod — rmmod — insmod cycle the kernel\noopses:\n\n  max3100 spi-PRP0001:01: max3100_probe: adding port 0\n  BUG: kernel NULL pointer dereference, address: 0000000000000408\n  ...\n  RIP: 0010:serial_core_register_port+0xa0/0x840\n  ...\n   max3100_probe+0x1b6/0x280 [max3100]\n   spi_probe+0x8d/0xb0\n\nUpdate the actual state so next time UART driver will be registered\nagain.\n\nHugo also noticed, that the error path in the probe also affected\nby having the variable set, and not cleared. Instead of clearing it\nmove the assignment after the successfull uart_register_driver() call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38634",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: max3100: Lock port-\u003elock when calling uart_handle_cts_change()\n\nuart_handle_cts_change() has to be called with port lock taken,\nSince we run it in a separate work, the lock may not be taken at\nthe time of running. Make sure that it's taken by explicitly doing\nthat. Without it we got a splat:\n\n  WARNING: CPU: 0 PID: 10 at drivers/tty/serial/serial_core.c:3491 uart_handle_cts_change+0xa6/0xb0\n  ...\n  Workqueue: max3100-0 max3100_work [max3100]\n  RIP: 0010:uart_handle_cts_change+0xa6/0xb0\n  ...\n   max3100_handlerx+0xc5/0x110 [max3100]\n   max3100_work+0x12a/0x340 [max3100]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38635",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoundwire: cadence: fix invalid PDI offset\n\nFor some reason, we add an offset to the PDI, presumably to skip the\nPDI0 and PDI1 which are reserved for BPT.\n\nThis code is however completely wrong and leads to an out-of-bounds\naccess. We were just lucky so far since we used only a couple of PDIs\nand remained within the PDI array bounds.\n\nA Fixes: tag is not provided since there are no known platforms where\nthe out-of-bounds would be accessed, and the initial code had problems\nas well.\n\nA follow-up patch completely removes this useless offset.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38636",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: multidev: fix to recognize valid zero block address\n\nAs reported by Yi Zhang in mailing list [1], kernel warning was catched\nduring zbd/010 test as below:\n\n./check zbd/010\nzbd/010 (test gap zone support with F2FS)                    [failed]\n    runtime    ...  3.752s\n    something found in dmesg:\n    [ 4378.146781] run blktests zbd/010 at 2024-02-18 11:31:13\n    [ 4378.192349] null_blk: module loaded\n    [ 4378.209860] null_blk: disk nullb0 created\n    [ 4378.413285] scsi_debug:sdebug_driver_probe: scsi_debug: trim\npoll_queues to 0. poll_q/nr_hw = (0/1)\n    [ 4378.422334] scsi host15: scsi_debug: version 0191 [20210520]\n                     dev_size_mb=1024, opts=0x0, submit_queues=1, statistics=0\n    [ 4378.434922] scsi 15:0:0:0: Direct-Access-ZBC Linux\nscsi_debug       0191 PQ: 0 ANSI: 7\n    [ 4378.443343] scsi 15:0:0:0: Power-on or device reset occurred\n    [ 4378.449371] sd 15:0:0:0: Attached scsi generic sg5 type 20\n    [ 4378.449418] sd 15:0:0:0: [sdf] Host-managed zoned block device\n    ...\n    (See '/mnt/tests/gitlab.com/api/v4/projects/19168116/repository/archive.zip/storage/blktests/blk/blktests/results/nodev/zbd/010.dmesg'\n\nWARNING: CPU: 22 PID: 44011 at fs/iomap/iter.c:51\nCPU: 22 PID: 44011 Comm: fio Not tainted 6.8.0-rc3+ #1\nRIP: 0010:iomap_iter+0x32b/0x350\nCall Trace:\n \u003cTASK\u003e\n __iomap_dio_rw+0x1df/0x830\n f2fs_file_read_iter+0x156/0x3d0 [f2fs]\n aio_read+0x138/0x210\n io_submit_one+0x188/0x8c0\n __x64_sys_io_submit+0x8c/0x1a0\n do_syscall_64+0x86/0x170\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nShinichiro Kawasaki helps to analyse this issue and proposes a potential\nfixing patch in [2].\n\nQuoted from reply of Shinichiro Kawasaki:\n\n\"I confirmed that the trigger commit is dbf8e63f48af as Yi reported. I took a\nlook in the commit, but it looks fine to me. So I thought the cause is not\nin the commit diff.\n\nI found the WARN is printed when the f2fs is set up with multiple devices,\nand read requests are mapped to the very first block of the second device in the\ndirect read path. In this case, f2fs_map_blocks() and f2fs_map_blocks_cached()\nmodify map-\u003em_pblk as the physical block address from each block device. It\nbecomes zero when it is mapped to the first block of the device. However,\nf2fs_iomap_begin() assumes that map-\u003em_pblk is the physical block address of the\nwhole f2fs, across the all block devices. It compares map-\u003em_pblk against\nNULL_ADDR == 0, then go into the unexpected branch and sets the invalid\niomap-\u003elength. The WARN catches the invalid iomap-\u003elength.\n\nThis WARN is printed even for non-zoned block devices, by following steps.\n\n - Create two (non-zoned) null_blk devices memory backed with 128MB size each:\n   nullb0 and nullb1.\n # mkfs.f2fs /dev/nullb0 -c /dev/nullb1\n # mount -t f2fs /dev/nullb0 \"${mount_dir}\"\n # dd if=/dev/zero of=\"${mount_dir}/test.dat\" bs=1M count=192\n # dd if=\"${mount_dir}/test.dat\" of=/dev/null bs=1M count=192 iflag=direct\n\n...\"\n\nSo, the root cause of this issue is: when multi-devices feature is on,\nf2fs_map_blocks() may return zero blkaddr in non-primary device, which is\na verified valid block address, however, f2fs_iomap_begin() treats it as\nan invalid block address, and then it triggers the warning in iomap\nframework code.\n\nFinally, as discussed, we decide to use a more simple and direct way that\nchecking (map.m_flags \u0026 F2FS_MAP_MAPPED) condition instead of\n(map.m_pblk != NULL_ADDR) to fix this issue.\n\nThanks a lot for the effort of Yi Zhang and Shinichiro Kawasaki on this\nissue.\n\n[1] https://lore.kernel.org/linux-f2fs-devel/CAHj4cs-kfojYC9i0G73PRkYzcxCTex=-vugRFeP40g_URGvnfQ@mail.gmail.com/\n[2] https://lore.kernel.org/linux-f2fs-devel/gngdj77k4picagsfdtiaa7gpgnup6fsgwzsltx6milmhegmjff@iax2n4wvrqye/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38659",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nenic: Validate length of nl attributes in enic_set_vf_port\n\nenic_set_vf_port assumes that the nl attribute IFLA_PORT_PROFILE\nis of length PORT_PROFILE_MAX and that the nl attributes\nIFLA_PORT_INSTANCE_UUID, IFLA_PORT_HOST_UUID are of length PORT_UUID_MAX.\nThese attributes are validated (in the function do_setlink in rtnetlink.c)\nusing the nla_policy ifla_port_policy. The policy defines IFLA_PORT_PROFILE\nas NLA_STRING, IFLA_PORT_INSTANCE_UUID as NLA_BINARY and\nIFLA_PORT_HOST_UUID as NLA_STRING. That means that the length validation\nusing the policy is for the max size of the attributes and not on exact\nsize so the length of these attributes might be less than the sizes that\nenic_set_vf_port expects. This might cause an out of bands\nread access in the memcpys of the data of these\nattributes in enic_set_vf_port.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38661",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/ap: Fix crash in AP internal function modify_bitmap()\n\nA system crash like this\n\n  Failing address: 200000cb7df6f000 TEID: 200000cb7df6f403\n  Fault in home space mode while using kernel ASCE.\n  AS:00000002d71bc007 R3:00000003fe5b8007 S:000000011a446000 P:000000015660c13d\n  Oops: 0038 ilc:3 [#1] PREEMPT SMP\n  Modules linked in: mlx5_ib ...\n  CPU: 8 PID: 7556 Comm: bash Not tainted 6.9.0-rc7 #8\n  Hardware name: IBM 3931 A01 704 (LPAR)\n  Krnl PSW : 0704e00180000000 0000014b75e7b606 (ap_parse_bitmap_str+0x10e/0x1f8)\n  R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3\n  Krnl GPRS: 0000000000000001 ffffffffffffffc0 0000000000000001 00000048f96b75d3\n  000000cb00000100 ffffffffffffffff ffffffffffffffff 000000cb7df6fce0\n  000000cb7df6fce0 00000000ffffffff 000000000000002b 00000048ffffffff\n  000003ff9b2dbc80 200000cb7df6fcd8 0000014bffffffc0 000000cb7df6fbc8\n  Krnl Code: 0000014b75e7b5fc: a7840047            brc     8,0000014b75e7b68a\n  0000014b75e7b600: 18b2                lr      %r11,%r2\n  #0000014b75e7b602: a7f4000a            brc     15,0000014b75e7b616\n  \u003e0000014b75e7b606: eb22d00000e6        laog    %r2,%r2,0(%r13)\n  0000014b75e7b60c: a7680001            lhi     %r6,1\n  0000014b75e7b610: 187b                lr      %r7,%r11\n  0000014b75e7b612: 84960021            brxh    %r9,%r6,0000014b75e7b654\n  0000014b75e7b616: 18e9                lr      %r14,%r9\n  Call Trace:\n  [\u003c0000014b75e7b606\u003e] ap_parse_bitmap_str+0x10e/0x1f8\n  ([\u003c0000014b75e7b5dc\u003e] ap_parse_bitmap_str+0xe4/0x1f8)\n  [\u003c0000014b75e7b758\u003e] apmask_store+0x68/0x140\n  [\u003c0000014b75679196\u003e] kernfs_fop_write_iter+0x14e/0x1e8\n  [\u003c0000014b75598524\u003e] vfs_write+0x1b4/0x448\n  [\u003c0000014b7559894c\u003e] ksys_write+0x74/0x100\n  [\u003c0000014b7618a440\u003e] __do_syscall+0x268/0x328\n  [\u003c0000014b761a3558\u003e] system_call+0x70/0x98\n  INFO: lockdep is turned off.\n  Last Breaking-Event-Address:\n  [\u003c0000014b75e7b636\u003e] ap_parse_bitmap_str+0x13e/0x1f8\n  Kernel panic - not syncing: Fatal exception: panic_on_oops\n\noccured when /sys/bus/ap/a[pq]mask was updated with a relative mask value\n(like +0x10-0x12,+60,-90) with one of the numeric values exceeding INT_MAX.\n\nThe fix is simple: use unsigned long values for the internal variables. The\ncorrect checks are already in place in the function but a simple int for\nthe internal variables was used with the possibility to overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38663",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: fix list corruption from resetting io stat\n\nSince commit 3b8cc6298724 (\"blk-cgroup: Optimize blkcg_rstat_flush()\"),\neach iostat instance is added to blkcg percpu list, so blkcg_reset_stats()\ncan't reset the stat instance by memset(), otherwise the llist may be\ncorrupted.\n\nFix the issue by only resetting the counter part.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38664",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: zynqmp_dpsub: Always register bridge\n\nWe must always register the DRM bridge, since zynqmp_dp_hpd_work_func\ncalls drm_bridge_hpd_notify, which in turn expects hpd_mutex to be\ninitialized. We do this before zynqmp_dpsub_drm_init since that calls\ndrm_bridge_attach. This fixes the following lockdep warning:\n\n[   19.217084] ------------[ cut here ]------------\n[   19.227530] DEBUG_LOCKS_WARN_ON(lock-\u003emagic != lock)\n[   19.227768] WARNING: CPU: 0 PID: 140 at kernel/locking/mutex.c:582 __mutex_lock+0x4bc/0x550\n[   19.241696] Modules linked in:\n[   19.244937] CPU: 0 PID: 140 Comm: kworker/0:4 Not tainted 6.6.20+ #96\n[   19.252046] Hardware name: xlnx,zynqmp (DT)\n[   19.256421] Workqueue: events zynqmp_dp_hpd_work_func\n[   19.261795] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   19.269104] pc : __mutex_lock+0x4bc/0x550\n[   19.273364] lr : __mutex_lock+0x4bc/0x550\n[   19.277592] sp : ffffffc085c5bbe0\n[   19.281066] x29: ffffffc085c5bbe0 x28: 0000000000000000 x27: ffffff88009417f8\n[   19.288624] x26: ffffff8800941788 x25: ffffff8800020008 x24: ffffffc082aa3000\n[   19.296227] x23: ffffffc080d90e3c x22: 0000000000000002 x21: 0000000000000000\n[   19.303744] x20: 0000000000000000 x19: ffffff88002f5210 x18: 0000000000000000\n[   19.311295] x17: 6c707369642e3030 x16: 3030613464662072 x15: 0720072007200720\n[   19.318922] x14: 0000000000000000 x13: 284e4f5f4e524157 x12: 0000000000000001\n[   19.326442] x11: 0001ffc085c5b940 x10: 0001ff88003f388b x9 : 0001ff88003f3888\n[   19.334003] x8 : 0001ff88003f3888 x7 : 0000000000000000 x6 : 0000000000000000\n[   19.341537] x5 : 0000000000000000 x4 : 0000000000001668 x3 : 0000000000000000\n[   19.349054] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffffff88003f3880\n[   19.356581] Call trace:\n[   19.359160]  __mutex_lock+0x4bc/0x550\n[   19.363032]  mutex_lock_nested+0x24/0x30\n[   19.367187]  drm_bridge_hpd_notify+0x2c/0x6c\n[   19.371698]  zynqmp_dp_hpd_work_func+0x44/0x54\n[   19.376364]  process_one_work+0x3ac/0x988\n[   19.380660]  worker_thread+0x398/0x694\n[   19.384736]  kthread+0x1bc/0x1c0\n[   19.388241]  ret_from_fork+0x10/0x20\n[   19.392031] irq event stamp: 183\n[   19.395450] hardirqs last  enabled at (183): [\u003cffffffc0800b9278\u003e] finish_task_switch.isra.0+0xa8/0x2d4\n[   19.405140] hardirqs last disabled at (182): [\u003cffffffc081ad3754\u003e] __schedule+0x714/0xd04\n[   19.413612] softirqs last  enabled at (114): [\u003cffffffc080133de8\u003e] srcu_invoke_callbacks+0x158/0x23c\n[   19.423128] softirqs last disabled at (110): [\u003cffffffc080133de8\u003e] srcu_invoke_callbacks+0x158/0x23c\n[   19.432614] ---[ end trace 0000000000000000 ]---\n\n(cherry picked from commit 61ba791c4a7a09a370c45b70a81b8c7d4cf6b2ae)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38780",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf/sw-sync: don't enable IRQ from sync_print_obj()\n\nSince commit a6aa8fca4d79 (\"dma-buf/sw-sync: Reduce irqsave/irqrestore from\nknown context\") by error replaced spin_unlock_irqrestore() with\nspin_unlock_irq() for both sync_debugfs_show() and sync_print_obj() despite\nsync_print_obj() is called from sync_debugfs_show(), lockdep complains\ninconsistent lock state warning.\n\nUse plain spin_{lock,unlock}() for sync_print_obj(), for\nsync_debugfs_show() is already using spin_{lock,unlock}_irq().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39276",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix mb_cache_entry's e_refcnt leak in ext4_xattr_block_cache_find()\n\nSyzbot reports a warning as follows:\n\n============================================\nWARNING: CPU: 0 PID: 5075 at fs/mbcache.c:419 mb_cache_destroy+0x224/0x290\nModules linked in:\nCPU: 0 PID: 5075 Comm: syz-executor199 Not tainted 6.9.0-rc6-gb947cc5bf6d7\nRIP: 0010:mb_cache_destroy+0x224/0x290 fs/mbcache.c:419\nCall Trace:\n \u003cTASK\u003e\n ext4_put_super+0x6d4/0xcd0 fs/ext4/super.c:1375\n generic_shutdown_super+0x136/0x2d0 fs/super.c:641\n kill_block_super+0x44/0x90 fs/super.c:1675\n ext4_kill_sb+0x68/0xa0 fs/ext4/super.c:7327\n[...]\n============================================\n\nThis is because when finding an entry in ext4_xattr_block_cache_find(), if\next4_sb_bread() returns -ENOMEM, the ce's e_refcnt, which has already grown\nin the __entry_find(), won't be put away, and eventually trigger the above\nissue in mb_cache_destroy() due to reference count leakage.\n\nSo call mb_cache_entry_put() on the -ENOMEM error branch as a quick fix.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39277",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-mapping: benchmark: handle NUMA_NO_NODE correctly\n\ncpumask_of_node() can be called for NUMA_NO_NODE inside do_map_benchmark()\nresulting in the following sanitizer report:\n\nUBSAN: array-index-out-of-bounds in ./arch/x86/include/asm/topology.h:72:28\nindex -1 is out of range for type 'cpumask [64][1]'\nCPU: 1 PID: 990 Comm: dma_map_benchma Not tainted 6.9.0-rc6 #29\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nCall Trace:\n \u003cTASK\u003e\ndump_stack_lvl (lib/dump_stack.c:117)\nubsan_epilogue (lib/ubsan.c:232)\n__ubsan_handle_out_of_bounds (lib/ubsan.c:429)\ncpumask_of_node (arch/x86/include/asm/topology.h:72) [inline]\ndo_map_benchmark (kernel/dma/map_benchmark.c:104)\nmap_benchmark_ioctl (kernel/dma/map_benchmark.c:246)\nfull_proxy_unlocked_ioctl (fs/debugfs/file.c:333)\n__x64_sys_ioctl (fs/ioctl.c:890)\ndo_syscall_64 (arch/x86/entry/common.c:83)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nUse cpumask_of_node() in place when binding a kernel thread to a cpuset\nof a particular node.\n\nNote that the provided node id is checked inside map_benchmark_ioctl().\nIt's just a NUMA_NO_NODE case which is not handled properly later.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39291",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix buffer size in gfx_v9_4_3_init_ cp_compute_microcode() and rlc_microcode()\n\nThe function gfx_v9_4_3_init_microcode in gfx_v9_4_3.c was generating\nabout potential truncation of output when using the snprintf function.\nThe issue was due to the size of the buffer 'ucode_prefix' being too\nsmall to accommodate the maximum possible length of the string being\nwritten into it.\n\nThe string being written is \"amdgpu/%s_mec.bin\" or \"amdgpu/%s_rlc.bin\",\nwhere %s is replaced by the value of 'chip_name'. The length of this\nstring without the %s is 16 characters. The warning message indicated\nthat 'chip_name' could be up to 29 characters long, resulting in a total\nof 45 characters, which exceeds the buffer size of 30 characters.\n\nTo resolve this issue, the size of the 'ucode_prefix' buffer has been\nreduced from 30 to 15. This ensures that the maximum possible length of\nthe string being written into the buffer will not exceed its size, thus\npreventing potential buffer overflow and truncation issues.\n\nFixes the below with gcc W=1:\ndrivers/gpu/drm/amd/amdgpu/gfx_v9_4_3.c: In function 'gfx_v9_4_3_early_init':\ndrivers/gpu/drm/amd/amdgpu/gfx_v9_4_3.c:379:52: warning: '%s' directive output may be truncated writing up to 29 bytes into a region of size 23 [-Wformat-truncation=]\n  379 |         snprintf(fw_name, sizeof(fw_name), \"amdgpu/%s_rlc.bin\", chip_name);\n      |                                                    ^~\n......\n  439 |         r = gfx_v9_4_3_init_rlc_microcode(adev, ucode_prefix);\n      |                                                 ~~~~~~~~~~~~\ndrivers/gpu/drm/amd/amdgpu/gfx_v9_4_3.c:379:9: note: 'snprintf' output between 16 and 45 bytes into a destination of size 30\n  379 |         snprintf(fw_name, sizeof(fw_name), \"amdgpu/%s_rlc.bin\", chip_name);\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ndrivers/gpu/drm/amd/amdgpu/gfx_v9_4_3.c:413:52: warning: '%s' directive output may be truncated writing up to 29 bytes into a region of size 23 [-Wformat-truncation=]\n  413 |         snprintf(fw_name, sizeof(fw_name), \"amdgpu/%s_mec.bin\", chip_name);\n      |                                                    ^~\n......\n  443 |         r = gfx_v9_4_3_init_cp_compute_microcode(adev, ucode_prefix);\n      |                                                        ~~~~~~~~~~~~\ndrivers/gpu/drm/amd/amdgpu/gfx_v9_4_3.c:413:9: note: 'snprintf' output between 16 and 45 bytes into a destination of size 30\n  413 |         snprintf(fw_name, sizeof(fw_name), \"amdgpu/%s_mec.bin\", chip_name);\n      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39296",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: fix oops during rmmod\n\n\"rmmod bonding\" causes an oops ever since commit cc317ea3d927 (\"bonding:\nremove redundant NULL check in debugfs function\").  Here are the relevant\nfunctions being called:\n\nbonding_exit()\n  bond_destroy_debugfs()\n    debugfs_remove_recursive(bonding_debug_root);\n    bonding_debug_root = NULL; \u003c--------- SET TO NULL HERE\n  bond_netlink_fini()\n    rtnl_link_unregister()\n      __rtnl_link_unregister()\n        unregister_netdevice_many_notify()\n          bond_uninit()\n            bond_debug_unregister()\n              (commit removed check for bonding_debug_root == NULL)\n              debugfs_remove()\n              simple_recursive_removal()\n                down_write() -\u003e OOPS\n\nHowever, reverting the bad commit does not solve the problem completely\nbecause the original code contains a race that could cause the same\noops, although it was much less likely to be triggered unintentionally:\n\nCPU1\n  rmmod bonding\n    bonding_exit()\n      bond_destroy_debugfs()\n        debugfs_remove_recursive(bonding_debug_root);\n\nCPU2\n  echo -bond0 \u003e /sys/class/net/bonding_masters\n    bond_uninit()\n      bond_debug_unregister()\n        if (!bonding_debug_root)\n\nCPU1\n        bonding_debug_root = NULL;\n\nSo do NOT revert the bad commit (since the removed checks were racy\nanyway), and instead change the order of actions taken during module\nremoval.  The same oops can also happen if there is an error during\nmodule init, so apply the same fix there.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39301",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/9p: fix uninit-value in p9_client_rpc()\n\nSyzbot with the help of KMSAN reported the following error:\n\nBUG: KMSAN: uninit-value in trace_9p_client_res include/trace/events/9p.h:146 [inline]\nBUG: KMSAN: uninit-value in p9_client_rpc+0x1314/0x1340 net/9p/client.c:754\n trace_9p_client_res include/trace/events/9p.h:146 [inline]\n p9_client_rpc+0x1314/0x1340 net/9p/client.c:754\n p9_client_create+0x1551/0x1ff0 net/9p/client.c:1031\n v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c:410\n v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c:122\n legacy_get_tree+0x114/0x290 fs/fs_context.c:662\n vfs_get_tree+0xa7/0x570 fs/super.c:1797\n do_new_mount+0x71f/0x15e0 fs/namespace.c:3352\n path_mount+0x742/0x1f20 fs/namespace.c:3679\n do_mount fs/namespace.c:3692 [inline]\n __do_sys_mount fs/namespace.c:3898 [inline]\n __se_sys_mount+0x725/0x810 fs/namespace.c:3875\n __x64_sys_mount+0xe4/0x150 fs/namespace.c:3875\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was created at:\n __alloc_pages+0x9d6/0xe70 mm/page_alloc.c:4598\n __alloc_pages_node include/linux/gfp.h:238 [inline]\n alloc_pages_node include/linux/gfp.h:261 [inline]\n alloc_slab_page mm/slub.c:2175 [inline]\n allocate_slab mm/slub.c:2338 [inline]\n new_slab+0x2de/0x1400 mm/slub.c:2391\n ___slab_alloc+0x1184/0x33d0 mm/slub.c:3525\n __slab_alloc mm/slub.c:3610 [inline]\n __slab_alloc_node mm/slub.c:3663 [inline]\n slab_alloc_node mm/slub.c:3835 [inline]\n kmem_cache_alloc+0x6d3/0xbe0 mm/slub.c:3852\n p9_tag_alloc net/9p/client.c:278 [inline]\n p9_client_prepare_req+0x20a/0x1770 net/9p/client.c:641\n p9_client_rpc+0x27e/0x1340 net/9p/client.c:688\n p9_client_create+0x1551/0x1ff0 net/9p/client.c:1031\n v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c:410\n v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c:122\n legacy_get_tree+0x114/0x290 fs/fs_context.c:662\n vfs_get_tree+0xa7/0x570 fs/super.c:1797\n do_new_mount+0x71f/0x15e0 fs/namespace.c:3352\n path_mount+0x742/0x1f20 fs/namespace.c:3679\n do_mount fs/namespace.c:3692 [inline]\n __do_sys_mount fs/namespace.c:3898 [inline]\n __se_sys_mount+0x725/0x810 fs/namespace.c:3875\n __x64_sys_mount+0xe4/0x150 fs/namespace.c:3875\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nIf p9_check_errors() fails early in p9_client_rpc(), req-\u003erc.tag\nwill not be properly initialized. However, trace_9p_client_res()\nends up trying to print it out anyway before p9_client_rpc()\nfinishes.\n\nFix this issue by assigning default values to p9_fcall fields\nsuch as 'tag' and (just in case KMSAN unearths something new) 'id'\nduring the tag allocation stage.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39362",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39371",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: check for non-NULL file pointer in io_file_can_poll()\n\nIn earlier kernels, it was possible to trigger a NULL pointer\ndereference off the forced async preparation path, if no file had\nbeen assigned. The trace leading to that looks as follows:\n\nBUG: kernel NULL pointer dereference, address: 00000000000000b0\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP\nCPU: 67 PID: 1633 Comm: buf-ring-invali Not tainted 6.8.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS unknown 2/2/2022\nRIP: 0010:io_buffer_select+0xc3/0x210\nCode: 00 00 48 39 d1 0f 82 ae 00 00 00 48 81 4b 48 00 00 01 00 48 89 73 70 0f b7 50 0c 66 89 53 42 85 ed 0f 85 d2 00 00 00 48 8b 13 \u003c48\u003e 8b 92 b0 00 00 00 48 83 7a 40 00 0f 84 21 01 00 00 4c 8b 20 5b\nRSP: 0018:ffffb7bec38c7d88 EFLAGS: 00010246\nRAX: ffff97af2be61000 RBX: ffff97af234f1700 RCX: 0000000000000040\nRDX: 0000000000000000 RSI: ffff97aecfb04820 RDI: ffff97af234f1700\nRBP: 0000000000000000 R08: 0000000000200030 R09: 0000000000000020\nR10: ffffb7bec38c7dc8 R11: 000000000000c000 R12: ffffb7bec38c7db8\nR13: ffff97aecfb05800 R14: ffff97aecfb05800 R15: ffff97af2be5e000\nFS:  00007f852f74b740(0000) GS:ffff97b1eeec0000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000000000b0 CR3: 000000016deab005 CR4: 0000000000370ef0\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x1f/0x60\n ? page_fault_oops+0x14d/0x420\n ? do_user_addr_fault+0x61/0x6a0\n ? exc_page_fault+0x6c/0x150\n ? asm_exc_page_fault+0x22/0x30\n ? io_buffer_select+0xc3/0x210\n __io_import_iovec+0xb5/0x120\n io_readv_prep_async+0x36/0x70\n io_queue_sqe_fallback+0x20/0x260\n io_submit_sqes+0x314/0x630\n __do_sys_io_uring_enter+0x339/0xbc0\n ? __do_sys_io_uring_register+0x11b/0xc50\n ? vm_mmap_pgoff+0xce/0x160\n do_syscall_64+0x5f/0x180\n entry_SYSCALL_64_after_hwframe+0x46/0x4e\nRIP: 0033:0x55e0a110a67e\nCode: ba cc 00 00 00 45 31 c0 44 0f b6 92 d0 00 00 00 31 d2 41 b9 08 00 00 00 41 83 e2 01 41 c1 e2 04 41 09 c2 b8 aa 01 00 00 0f 05 \u003cc3\u003e 90 89 30 eb a9 0f 1f 40 00 48 8b 42 20 8b 00 a8 06 75 af 85 f6\n\nbecause the request is marked forced ASYNC and has a bad file fd, and\nhence takes the forced async prep path.\n\nCurrent kernels with the request async prep cleaned up can no longer hit\nthis issue, but for ease of backporting, let's add this safety check in\nhere too as it really doesn't hurt. For both cases, this will inevitably\nend with a CQE posted with -EBADF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39463",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\n9p: add missing locking around taking dentry fid list\n\nFix a use-after-free on dentry's d_fsdata fid list when a thread\nlooks up a fid through dentry while another thread unlinks it:\n\nUAF thread:\nrefcount_t: addition on 0; use-after-free.\n p9_fid_get linux/./include/net/9p/client.h:262\n v9fs_fid_find+0x236/0x280 linux/fs/9p/fid.c:129\n v9fs_fid_lookup_with_uid linux/fs/9p/fid.c:181\n v9fs_fid_lookup+0xbf/0xc20 linux/fs/9p/fid.c:314\n v9fs_vfs_getattr_dotl+0xf9/0x360 linux/fs/9p/vfs_inode_dotl.c:400\n vfs_statx+0xdd/0x4d0 linux/fs/stat.c:248\n\nFreed by:\n p9_fid_destroy (inlined)\n p9_client_clunk+0xb0/0xe0 linux/net/9p/client.c:1456\n p9_fid_put linux/./include/net/9p/client.h:278\n v9fs_dentry_release+0xb5/0x140 linux/fs/9p/vfs_dentry.c:55\n v9fs_remove+0x38f/0x620 linux/fs/9p/vfs_inode.c:518\n vfs_unlink+0x29a/0x810 linux/fs/namei.c:4335\n\nThe problem is that d_fsdata was not accessed under d_lock, because\nd_release() normally is only called once the dentry is otherwise no\nlonger accessible but since we also call it explicitly in v9fs_remove\nthat lock is required:\nmove the hlist out of the dentry under lock then unref its fids once\nthey are no longer accessible.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39466",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal/drivers/qcom/lmh: Check for SCM availability at probe\n\nUp until now, the necessary scm availability check has not been\nperformed, leading to possible null pointer dereferences (which did\nhappen for me on RB1).\n\nFix that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39468",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix deadlock in smb2_find_smb_tcon()\n\nUnlock cifs_tcp_ses_lock before calling cifs_put_smb_ses() to avoid such\ndeadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39469",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix nilfs_empty_dir() misjudgment and long loop on I/O errors\n\nThe error handling in nilfs_empty_dir() when a directory folio/page read\nfails is incorrect, as in the old ext2 implementation, and if the\nfolio/page cannot be read or nilfs_check_folio() fails, it will falsely\ndetermine the directory as empty and corrupt the file system.\n\nIn addition, since nilfs_empty_dir() does not immediately return on a\nfailed folio/page read, but continues to loop, this can cause a long loop\nwith I/O if i_size of the directory's inode is also corrupted, causing the\nlog writer thread to wait and hang, as reported by syzbot.\n\nFix these issues by making nilfs_empty_dir() immediately return a false\nvalue (0) if it fails to get a directory folio/page.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39471",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: add error handle to avoid out-of-bounds\n\nif the sdma_v4_0_irq_id_to_seq return -EINVAL, the process should\nbe stop to avoid out-of-bounds read, so directly return -EINVAL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39472",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39473",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: ipc4-topology: Fix input format query of process modules without base extension\n\nIf a process module does not have base config extension then the same\nformat applies to all of it's inputs and the process-\u003ebase_config_ext is\nNULL, causing NULL dereference when specifically crafted topology and\nsequences used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39474",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/vmalloc: fix vmalloc which may return null if called with __GFP_NOFAIL\n\ncommit a421ef303008 (\"mm: allow !GFP_KERNEL allocations for kvmalloc\")\nincludes support for __GFP_NOFAIL, but it presents a conflict with commit\ndd544141b9eb (\"vmalloc: back off when the current task is OOM-killed\").  A\npossible scenario is as follows:\n\nprocess-a\n__vmalloc_node_range(GFP_KERNEL | __GFP_NOFAIL)\n    __vmalloc_area_node()\n        vm_area_alloc_pages()\n\t\t--\u003e oom-killer send SIGKILL to process-a\n        if (fatal_signal_pending(current)) break;\n--\u003e return NULL;\n\nTo fix this, do not check fatal_signal_pending() in vm_area_alloc_pages()\nif __GFP_NOFAIL set.\n\nThis issue occurred during OPLUS KASAN TEST. Below is part of the log\n-\u003e oom-killer sends signal to process\n[65731.222840] [ T1308] oom-kill:constraint=CONSTRAINT_NONE,nodemask=(null),cpuset=/,mems_allowed=0,global_oom,task_memcg=/apps/uid_10198,task=gs.intelligence,pid=32454,uid=10198\n\n[65731.259685] [T32454] Call trace:\n[65731.259698] [T32454]  dump_backtrace+0xf4/0x118\n[65731.259734] [T32454]  show_stack+0x18/0x24\n[65731.259756] [T32454]  dump_stack_lvl+0x60/0x7c\n[65731.259781] [T32454]  dump_stack+0x18/0x38\n[65731.259800] [T32454]  mrdump_common_die+0x250/0x39c [mrdump]\n[65731.259936] [T32454]  ipanic_die+0x20/0x34 [mrdump]\n[65731.260019] [T32454]  atomic_notifier_call_chain+0xb4/0xfc\n[65731.260047] [T32454]  notify_die+0x114/0x198\n[65731.260073] [T32454]  die+0xf4/0x5b4\n[65731.260098] [T32454]  die_kernel_fault+0x80/0x98\n[65731.260124] [T32454]  __do_kernel_fault+0x160/0x2a8\n[65731.260146] [T32454]  do_bad_area+0x68/0x148\n[65731.260174] [T32454]  do_mem_abort+0x151c/0x1b34\n[65731.260204] [T32454]  el1_abort+0x3c/0x5c\n[65731.260227] [T32454]  el1h_64_sync_handler+0x54/0x90\n[65731.260248] [T32454]  el1h_64_sync+0x68/0x6c\n\n[65731.260269] [T32454]  z_erofs_decompress_queue+0x7f0/0x2258\n--\u003e be-\u003edecompressed_pages = kvcalloc(be-\u003enr_pages, sizeof(struct page *), GFP_KERNEL | __GFP_NOFAIL);\n\tkernel panic by NULL pointer dereference.\n\terofs assume kvmalloc with __GFP_NOFAIL never return NULL.\n[65731.260293] [T32454]  z_erofs_runqueue+0xf30/0x104c\n[65731.260314] [T32454]  z_erofs_readahead+0x4f0/0x968\n[65731.260339] [T32454]  read_pages+0x170/0xadc\n[65731.260364] [T32454]  page_cache_ra_unbounded+0x874/0xf30\n[65731.260388] [T32454]  page_cache_ra_order+0x24c/0x714\n[65731.260411] [T32454]  filemap_fault+0xbf0/0x1a74\n[65731.260437] [T32454]  __do_fault+0xd0/0x33c\n[65731.260462] [T32454]  handle_mm_fault+0xf74/0x3fe0\n[65731.260486] [T32454]  do_mem_abort+0x54c/0x1b34\n[65731.260509] [T32454]  el0_da+0x44/0x94\n[65731.260531] [T32454]  el0t_64_sync_handler+0x98/0xb4\n[65731.260553] [T32454]  el0t_64_sync+0x198/0x19c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39475",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: savage: Handle err return when savagefb_check_var failed\n\nThe commit 04e5eac8f3ab(\"fbdev: savage: Error out if pixclock equals zero\")\nchecks the value of pixclock to avoid divide-by-zero error. However\nthe function savagefb_probe doesn't handle the error return of\nsavagefb_check_var. When pixclock is 0, it will cause divide-by-zero error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39479",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/hwmon: Get rid of devm\n\nWhen both hwmon and hwmon drvdata (on which hwmon depends) are device\nmanaged resources, the expectation, on device unbind, is that hwmon will be\nreleased before drvdata. However, in i915 there are two separate code\npaths, which both release either drvdata or hwmon and either can be\nreleased before the other. These code paths (for device unbind) are as\nfollows (see also the bug referenced below):\n\nCall Trace:\nrelease_nodes+0x11/0x70\ndevres_release_group+0xb2/0x110\ncomponent_unbind_all+0x8d/0xa0\ncomponent_del+0xa5/0x140\nintel_pxp_tee_component_fini+0x29/0x40 [i915]\nintel_pxp_fini+0x33/0x80 [i915]\ni915_driver_remove+0x4c/0x120 [i915]\ni915_pci_remove+0x19/0x30 [i915]\npci_device_remove+0x32/0xa0\ndevice_release_driver_internal+0x19c/0x200\nunbind_store+0x9c/0xb0\n\nand\n\nCall Trace:\nrelease_nodes+0x11/0x70\ndevres_release_all+0x8a/0xc0\ndevice_unbind_cleanup+0x9/0x70\ndevice_release_driver_internal+0x1c1/0x200\nunbind_store+0x9c/0xb0\n\nThis means that in i915, if use devm, we cannot gurantee that hwmon will\nalways be released before drvdata. Which means that we have a uaf if hwmon\nsysfs is accessed when drvdata has been released but hwmon hasn't.\n\nThe only way out of this seems to be do get rid of devm_ and release/free\neverything explicitly during device unbind.\n\nv2: Change commit message and other minor code changes\nv3: Cleanup from i915_hwmon_register on error (Armin Wolf)\nv4: Eliminate potential static analyzer warning (Rodrigo)\n    Eliminate fetch_and_zero (Jani)\nv5: Restore previous logic for ddat_gt-\u003ehwmon_dev error return (Andi)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39481",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mc: Fix graph walk in media_pipeline_start\n\nThe graph walk tries to follow all links, even if they are not between\npads. This causes a crash with, e.g. a MEDIA_LNK_FL_ANCILLARY_LINK link.\n\nFix this by allowing the walk to proceed only for MEDIA_LNK_FL_DATA_LINK\nlinks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39482",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: fix variable length array abuse in btree_iter\n\nbtree_iter is used in two ways: either allocated on the stack with a\nfixed size MAX_BSETS, or from a mempool with a dynamic size based on the\nspecific cache set. Previously, the struct had a fixed-length array of\nsize MAX_BSETS which was indexed out-of-bounds for the dynamically-sized\niterators, which causes UBSAN to complain.\n\nThis patch uses the same approach as in bcachefs's sort_iter and splits\nthe iterator into a btree_iter with a flexible array member and a\nbtree_iter_stack which embeds a btree_iter as well as a fixed-length\ndata array.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39487",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: Fix out-of-bounds read in bond_option_arp_ip_targets_set()\n\nIn function bond_option_arp_ip_targets_set(), if newval-\u003estring is an\nempty string, newval-\u003estring+1 will point to the byte after the\nstring, causing an out-of-bound read.\n\nBUG: KASAN: slab-out-of-bounds in strlen+0x7d/0xa0 lib/string.c:418\nRead of size 1 at addr ffff8881119c4781 by task syz-executor665/8107\nCPU: 1 PID: 8107 Comm: syz-executor665 Not tainted 6.7.0-rc7 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd9/0x150 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:364 [inline]\n print_report+0xc1/0x5e0 mm/kasan/report.c:475\n kasan_report+0xbe/0xf0 mm/kasan/report.c:588\n strlen+0x7d/0xa0 lib/string.c:418\n __fortify_strlen include/linux/fortify-string.h:210 [inline]\n in4_pton+0xa3/0x3f0 net/core/utils.c:130\n bond_option_arp_ip_targets_set+0xc2/0x910\ndrivers/net/bonding/bond_options.c:1201\n __bond_opt_set+0x2a4/0x1030 drivers/net/bonding/bond_options.c:767\n __bond_opt_set_notify+0x48/0x150 drivers/net/bonding/bond_options.c:792\n bond_opt_tryset_rtnl+0xda/0x160 drivers/net/bonding/bond_options.c:817\n bonding_sysfs_store_option+0xa1/0x120 drivers/net/bonding/bond_sysfs.c:156\n dev_attr_store+0x54/0x80 drivers/base/core.c:2366\n sysfs_kf_write+0x114/0x170 fs/sysfs/file.c:136\n kernfs_fop_write_iter+0x337/0x500 fs/kernfs/file.c:334\n call_write_iter include/linux/fs.h:2020 [inline]\n new_sync_write fs/read_write.c:491 [inline]\n vfs_write+0x96a/0xd80 fs/read_write.c:584\n ksys_write+0x122/0x250 fs/read_write.c:637\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x40/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n---[ end trace ]---\n\nFix it by adding a check of string length before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39490",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: sr: fix missing sk_buff release in seg6_input_core\n\nThe seg6_input() function is responsible for adding the SRH into a\npacket, delegating the operation to the seg6_input_core(). This function\nuses the skb_cow_head() to ensure that there is sufficient headroom in\nthe sk_buff for accommodating the link-layer header.\nIn the event that the skb_cow_header() function fails, the\nseg6_input_core() catches the error but it does not release the sk_buff,\nwhich will result in a memory leak.\n\nThis issue was introduced in commit af3b5158b89d (\"ipv6: sr: fix BUG due\nto headroom too small after SRH push\") and persists even after commit\n7a3f5b0de364 (\"netfilter: add netfilter hooks to SRv6 data plane\"),\nwhere the entire seg6_input() code was refactored to deal with netfilter\nhooks.\n\nThe proposed patch addresses the identified memory leak by requiring the\nseg6_input_core() function to release the sk_buff in the event that\nskb_cow_head() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39494",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nima: Fix use-after-free on a dentry's dname.name\n\n-\u003ed_name.name can change on rename and the earlier value can be freed;\nthere are conditions sufficient to stabilize it (-\u003ed_lock on dentry,\n-\u003ed_lock on its parent, -\u003ei_rwsem exclusive on the parent's inode,\nrename_lock), but none of those are met at any of the sites. Take a stable\nsnapshot of the name instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39496",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: fix use-after-free due to race with dev replace\n\nWhile loading a zone's info during creation of a block group, we can race\nwith a device replace operation and then trigger a use-after-free on the\ndevice that was just replaced (source device of the replace operation).\n\nThis happens because at btrfs_load_zone_info() we extract a device from\nthe chunk map into a local variable and then use the device while not\nunder the protection of the device replace rwsem. So if there's a device\nreplace operation happening when we extract the device and that device\nis the source of the replace operation, we will trigger a use-after-free\nif before we finish using the device the replace operation finishes and\nfrees the device.\n\nFix this by enlarging the critical section under the protection of the\ndevice replace rwsem so that all uses of the device are done inside the\ncritical section.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39498",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mst: Fix NULL pointer dereference at drm_dp_add_payload_part2\n\n[Why]\nCommit:\n- commit 5aa1dfcdf0a4 (\"drm/mst: Refactor the flow for payload allocation/removement\")\naccidently overwrite the commit\n- commit 54d217406afe (\"drm: use mgr-\u003edev in drm_dbg_kms in drm_dp_add_payload_part2\")\nwhich cause regression.\n\n[How]\nRecover the original NULL fix and remove the unnecessary input parameter 'state' for\ndrm_dp_add_payload_part2().\n\n(cherry picked from commit 4545614c1d8da603e57b60dd66224d81b6ffc305)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39502",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nionic: fix use after netif_napi_del()\n\nWhen queues are started, netif_napi_add() and napi_enable() are called.\nIf there are 4 queues and only 3 queues are used for the current\nconfiguration, only 3 queues' napi should be registered and enabled.\nThe ionic_qcq_enable() checks whether the .poll pointer is not NULL for\nenabling only the using queue' napi. Unused queues' napi will not be\nregistered by netif_napi_add(), so the .poll pointer indicates NULL.\nBut it couldn't distinguish whether the napi was unregistered or not\nbecause netif_napi_del() doesn't reset the .poll pointer to NULL.\nSo, ionic_qcq_enable() calls napi_enable() for the queue, which was\nunregistered by netif_napi_del().\n\nReproducer:\n   ethtool -L \u003cinterface name\u003e rx 1 tx 1 combined 0\n   ethtool -L \u003cinterface name\u003e rx 0 tx 0 combined 1\n   ethtool -L \u003cinterface name\u003e rx 0 tx 0 combined 4\n\nSplat looks like:\nkernel BUG at net/core/dev.c:6666!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 3 PID: 1057 Comm: kworker/3:3 Not tainted 6.10.0-rc2+ #16\nWorkqueue: events ionic_lif_deferred_work [ionic]\nRIP: 0010:napi_enable+0x3b/0x40\nCode: 48 89 c2 48 83 e2 f6 80 b9 61 09 00 00 00 74 0d 48 83 bf 60 01 00 00 00 74 03 80 ce 01 f0 4f\nRSP: 0018:ffffb6ed83227d48 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff97560cda0828 RCX: 0000000000000029\nRDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff97560cda0a28\nRBP: ffffb6ed83227d50 R08: 0000000000000400 R09: 0000000000000001\nR10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000000\nR13: ffff97560ce3c1a0 R14: 0000000000000000 R15: ffff975613ba0a20\nFS:  0000000000000000(0000) GS:ffff975d5f780000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f8f734ee200 CR3: 0000000103e50000 CR4: 00000000007506f0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? die+0x33/0x90\n ? do_trap+0xd9/0x100\n ? napi_enable+0x3b/0x40\n ? do_error_trap+0x83/0xb0\n ? napi_enable+0x3b/0x40\n ? napi_enable+0x3b/0x40\n ? exc_invalid_op+0x4e/0x70\n ? napi_enable+0x3b/0x40\n ? asm_exc_invalid_op+0x16/0x20\n ? napi_enable+0x3b/0x40\n ionic_qcq_enable+0xb7/0x180 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]\n ionic_start_queues+0xc4/0x290 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]\n ionic_link_status_check+0x11c/0x170 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]\n ionic_lif_deferred_work+0x129/0x280 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]\n process_one_work+0x145/0x360\n worker_thread+0x2bb/0x3d0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xcc/0x100\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x2d/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39504",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_inner: validate mandatory meta and payload\n\nCheck for mandatory netlink attributes in payload and meta expression\nwhen used embedded from the inner expression, otherwise NULL pointer\ndereference is possible from userspace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39507",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix kernel crash problem in concurrent scenario\n\nWhen link status change, the nic driver need to notify the roce\ndriver to handle this event, but at this time, the roce driver\nmay uninit, then cause kernel crash.\n\nTo fix the problem, when link status change, need to check\nwhether the roce registered, and when uninit, need to wait link\nupdate finish.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39894",
      "Description": "OpenSSH 9.5 through 9.7 before 9.8 sometimes allows timing attacks against echo-off password entry (e.g., for su and Sudo) because of an ObscureKeystrokeTiming logic error. Similarly, other timing attacks against keystroke entry could occur.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-4032",
      "Description": "The \"ipaddress\" module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \"globally reachable\" or \"private\". This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn't be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Avoid test/set_bit() operating in non-allocated memory\n\nThere is a potential out-of-bounds access when using test_bit() on a single\nword. The test_bit() and set_bit() functions operate on long values, and\nwhen testing or setting a single word, they can exceed the word\nboundary. KASAN detects this issue and produces a dump:\n\n\t BUG: KASAN: slab-out-of-bounds in _scsih_add_device.constprop.0 (./arch/x86/include/asm/bitops.h:60 ./include/asm-generic/bitops/instrumented-atomic.h:29 drivers/scsi/mpt3sas/mpt3sas_scsih.c:7331) mpt3sas\n\n\t Write of size 8 at addr ffff8881d26e3c60 by task kworker/u1536:2/2965\n\nFor full log, please look at [1].\n\nMake the allocation at least the size of sizeof(unsigned long) so that\nset_bit() and test_bit() have sufficient room for read/write operations\nwithout overwriting unallocated memory.\n\n[1] Link: https://lore.kernel.org/all/ZkNcALr3W3KGYYJG@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40906",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Always stop health timer during driver removal\n\nCurrently, if teardown_hca fails to execute during driver removal, mlx5\ndoes not stop the health timer. Afterwards, mlx5 continue with driver\nteardown. This may lead to a UAF bug, which results in page fault\nOops[1], since the health timer invokes after resources were freed.\n\nHence, stop the health monitor even if teardown_hca fails.\n\n[1]\nmlx5_core 0000:18:00.0: E-Switch: Unload vfs: mode(LEGACY), nvfs(0), necvfs(0), active vports(0)\nmlx5_core 0000:18:00.0: E-Switch: Disable: mode(LEGACY), nvfs(0), necvfs(0), active vports(0)\nmlx5_core 0000:18:00.0: E-Switch: Disable: mode(LEGACY), nvfs(0), necvfs(0), active vports(0)\nmlx5_core 0000:18:00.0: E-Switch: cleanup\nmlx5_core 0000:18:00.0: wait_func:1155:(pid 1967079): TEARDOWN_HCA(0x103) timeout. Will cause a leak of a command resource\nmlx5_core 0000:18:00.0: mlx5_function_close:1288:(pid 1967079): tear_down_hca failed, skip cleanup\nBUG: unable to handle page fault for address: ffffa26487064230\nPGD 100c00067 P4D 100c00067 PUD 100e5a067 PMD 105ed7067 PTE 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 0 PID: 0 Comm: swapper/0 Tainted: G           OE     -------  ---  6.7.0-68.fc38.x86_64 #1\nHardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0013.121520200651 12/15/2020\nRIP: 0010:ioread32be+0x34/0x60\nRSP: 0018:ffffa26480003e58 EFLAGS: 00010292\nRAX: ffffa26487064200 RBX: ffff9042d08161a0 RCX: ffff904c108222c0\nRDX: 000000010bbf1b80 RSI: ffffffffc055ddb0 RDI: ffffa26487064230\nRBP: ffff9042d08161a0 R08: 0000000000000022 R09: ffff904c108222e8\nR10: 0000000000000004 R11: 0000000000000441 R12: ffffffffc055ddb0\nR13: ffffa26487064200 R14: ffffa26480003f00 R15: ffff904c108222c0\nFS:  0000000000000000(0000) GS:ffff904c10800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffa26487064230 CR3: 00000002c4420006 CR4: 00000000007706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cIRQ\u003e\n ? __die+0x23/0x70\n ? page_fault_oops+0x171/0x4e0\n ? exc_page_fault+0x175/0x180\n ? asm_exc_page_fault+0x26/0x30\n ? __pfx_poll_health+0x10/0x10 [mlx5_core]\n ? __pfx_poll_health+0x10/0x10 [mlx5_core]\n ? ioread32be+0x34/0x60\n mlx5_health_check_fatal_sensors+0x20/0x100 [mlx5_core]\n ? __pfx_poll_health+0x10/0x10 [mlx5_core]\n poll_health+0x42/0x230 [mlx5_core]\n ? __next_timer_interrupt+0xbc/0x110\n ? __pfx_poll_health+0x10/0x10 [mlx5_core]\n call_timer_fn+0x21/0x130\n ? __pfx_poll_health+0x10/0x10 [mlx5_core]\n __run_timers+0x222/0x2c0\n run_timer_softirq+0x1d/0x40\n __do_softirq+0xc9/0x2c8\n __irq_exit_rcu+0xa6/0xc0\n sysvec_apic_timer_interrupt+0x72/0x90\n \u003c/IRQ\u003e\n \u003cTASK\u003e\n asm_sysvec_apic_timer_interrupt+0x1a/0x20\nRIP: 0010:cpuidle_enter_state+0xcc/0x440\n ? cpuidle_enter_state+0xbd/0x440\n cpuidle_enter+0x2d/0x40\n do_idle+0x20d/0x270\n cpu_startup_entry+0x2a/0x30\n rest_init+0xd0/0xd0\n arch_call_rest_init+0xe/0x30\n start_kernel+0x709/0xa90\n x86_64_start_reservations+0x18/0x30\n x86_64_start_kernel+0x96/0xa0\n secondary_startup_64_no_verify+0x18f/0x19b\n---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40908",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Set run context for rawtp test_run callback\n\nsyzbot reported crash when rawtp program executed through the\ntest_run interface calls bpf_get_attach_cookie helper or any\nother helper that touches task-\u003ebpf_ctx pointer.\n\nSetting the run context (task-\u003ebpf_ctx pointer) for test_run\ncallback.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Adjust logging of firmware messages in case of released token in __hwrm_send()\n\nIn case of token is released due to token-\u003estate == BNXT_HWRM_DEFERRED,\nreleased token (set to NULL) is used in log messages. This issue is\nexpected to be prevented by HWRM_ERR_CODE_PF_UNAVAILABLE error code. But\nthis error code is returned by recent firmware. So some firmware may not\nreturn it. This may lead to NULL pointer dereference.\nAdjust this issue by adding token pointer check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: disable rx data ring on dma allocation failure\n\nWhen vmxnet3_rq_create() fails to allocate memory for rq-\u003edata_ring.base,\nthe subsequent call to vmxnet3_rq_destroy_all_rxdataring does not reset\nrq-\u003edata_ring.desc_size for the data ring that failed, which presumably\ncauses the hypervisor to reference it on packet reception.\n\nTo fix this bug, rq-\u003edata_ring.desc_size needs to be set to 0 to tell\nthe hypervisor to disable this feature.\n\n[   95.436876] kernel BUG at net/core/skbuff.c:207!\n[   95.439074] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[   95.440411] CPU: 7 PID: 0 Comm: swapper/7 Not tainted 6.9.3-dirty #1\n[   95.441558] Hardware name: VMware, Inc. VMware Virtual\nPlatform/440BX Desktop Reference Platform, BIOS 6.00 12/12/2018\n[   95.443481] RIP: 0010:skb_panic+0x4d/0x4f\n[   95.444404] Code: 4f 70 50 8b 87 c0 00 00 00 50 8b 87 bc 00 00 00 50\nff b7 d0 00 00 00 4c 8b 8f c8 00 00 00 48 c7 c7 68 e8 be 9f e8 63 58 f9\nff \u003c0f\u003e 0b 48 8b 14 24 48 c7 c1 d0 73 65 9f e8 a1 ff ff ff 48 8b 14 24\n[   95.447684] RSP: 0018:ffffa13340274dd0 EFLAGS: 00010246\n[   95.448762] RAX: 0000000000000089 RBX: ffff8fbbc72b02d0 RCX: 000000000000083f\n[   95.450148] RDX: 0000000000000000 RSI: 00000000000000f6 RDI: 000000000000083f\n[   95.451520] RBP: 000000000000002d R08: 0000000000000000 R09: ffffa13340274c60\n[   95.452886] R10: ffffffffa04ed468 R11: 0000000000000002 R12: 0000000000000000\n[   95.454293] R13: ffff8fbbdab3c2d0 R14: ffff8fbbdbd829e0 R15: ffff8fbbdbd809e0\n[   95.455682] FS:  0000000000000000(0000) GS:ffff8fbeefd80000(0000) knlGS:0000000000000000\n[   95.457178] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   95.458340] CR2: 00007fd0d1f650c8 CR3: 0000000115f28000 CR4: 00000000000406f0\n[   95.459791] Call Trace:\n[   95.460515]  \u003cIRQ\u003e\n[   95.461180]  ? __die_body.cold+0x19/0x27\n[   95.462150]  ? die+0x2e/0x50\n[   95.462976]  ? do_trap+0xca/0x110\n[   95.463973]  ? do_error_trap+0x6a/0x90\n[   95.464966]  ? skb_panic+0x4d/0x4f\n[   95.465901]  ? exc_invalid_op+0x50/0x70\n[   95.466849]  ? skb_panic+0x4d/0x4f\n[   95.467718]  ? asm_exc_invalid_op+0x1a/0x20\n[   95.468758]  ? skb_panic+0x4d/0x4f\n[   95.469655]  skb_put.cold+0x10/0x10\n[   95.470573]  vmxnet3_rq_rx_complete+0x862/0x11e0 [vmxnet3]\n[   95.471853]  vmxnet3_poll_rx_only+0x36/0xb0 [vmxnet3]\n[   95.473185]  __napi_poll+0x2b/0x160\n[   95.474145]  net_rx_action+0x2c6/0x3b0\n[   95.475115]  handle_softirqs+0xe7/0x2a0\n[   95.476122]  __irq_exit_rcu+0x97/0xb0\n[   95.477109]  common_interrupt+0x85/0xa0\n[   95.478102]  \u003c/IRQ\u003e\n[   95.478846]  \u003cTASK\u003e\n[   95.479603]  asm_common_interrupt+0x26/0x40\n[   95.480657] RIP: 0010:pv_native_safe_halt+0xf/0x20\n[   95.481801] Code: 22 d7 e9 54 87 01 00 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa eb 07 0f 00 2d 93 ba 3b 00 fb f4 \u003ce9\u003e 2c 87 01 00 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90 90\n[   95.485563] RSP: 0018:ffffa133400ffe58 EFLAGS: 00000246\n[   95.486882] RAX: 0000000000004000 RBX: ffff8fbbc1d14064 RCX: 0000000000000000\n[   95.488477] RDX: ffff8fbeefd80000 RSI: ffff8fbbc1d14000 RDI: 0000000000000001\n[   95.490067] RBP: ffff8fbbc1d14064 R08: ffffffffa0652260 R09: 00000000000010d3\n[   95.491683] R10: 0000000000000018 R11: ffff8fbeefdb4764 R12: ffffffffa0652260\n[   95.493389] R13: ffffffffa06522e0 R14: 0000000000000001 R15: 0000000000000000\n[   95.495035]  acpi_safe_halt+0x14/0x20\n[   95.496127]  acpi_idle_do_entry+0x2f/0x50\n[   95.497221]  acpi_idle_enter+0x7f/0xd0\n[   95.498272]  cpuidle_enter_state+0x81/0x420\n[   95.499375]  cpuidle_enter+0x2d/0x40\n[   95.500400]  do_idle+0x1e5/0x240\n[   95.501385]  cpu_startup_entry+0x29/0x30\n[   95.502422]  start_secondary+0x11c/0x140\n[   95.503454]  common_startup_64+0x13e/0x141\n[   95.504466]  \u003c/TASK\u003e\n[   95.505197] Modules linked in: nft_fib_inet nft_fib_ipv4\nnft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6\nnft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ip\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix request.queuelist usage in flush\n\nFriedrich Weber reported a kernel crash problem and bisected to commit\n81ada09cc25e (\"blk-flush: reuse rq queuelist in flush state machine\").\n\nThe root cause is that we use \"list_move_tail(\u0026rq-\u003equeuelist, pending)\"\nin the PREFLUSH/POSTFLUSH sequences. But rq-\u003equeuelist.next == xxx since\nit's popped out from plug-\u003ecached_rq in __blk_mq_alloc_requests_batch().\nWe don't initialize its queuelist just for this first request, although\nthe queuelist of all later popped requests will be initialized.\n\nFix it by changing to use \"list_add_tail(\u0026rq-\u003equeuelist, pending)\" so\nrq-\u003equeuelist doesn't need to be initialized. It should be ok since rq\ncan't be on any list when PREFLUSH or POSTFLUSH, has no move actually.\n\nPlease note the commit 81ada09cc25e (\"blk-flush: reuse rq queuelist in\nflush state machine\") also has another requirement that no drivers would\ntouch rq-\u003equeuelist after blk_mq_end_request() since we will reuse it to\nadd rq to the post-flush pending list in POSTFLUSH. If this is not true,\nwe will have to revert that commit IMHO.\n\nThis updated version adds \"list_del_init(\u0026rq-\u003equeuelist)\" in flush rq\ncallback since the dm layer may submit request of a weird invalid format\n(REQ_FSEQ_PREFLUSH | REQ_FSEQ_POSTFLUSH), which causes double list_add\nif without this \"list_del_init(\u0026rq-\u003equeuelist)\". The weird invalid format\nproblem should be fixed in dm layer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethtool: fix the error condition in ethtool_get_phy_stats_ethtool()\n\nClang static checker (scan-build) warning:\nnet/ethtool/ioctl.c:line 2233, column 2\nCalled function pointer is null (null dereference).\n\nReturn '-EOPNOTSUPP' when 'ops-\u003eget_ethtool_phy_stats' is NULL to fix\nthis typo error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: ensure snd_una is properly initialized on connect\n\nThis is strictly related to commit fb7a0d334894 (\"mptcp: ensure snd_nxt\nis properly initialized on connect\"). It turns out that syzkaller can\ntrigger the retransmit after fallback and before processing any other\nincoming packet - so that snd_una is still left uninitialized.\n\nAddress the issue explicitly initializing snd_una together with snd_nxt\nand write_seq.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: flush all requests after setting CACHEFILES_DEAD\n\nIn ondemand mode, when the daemon is processing an open request, if the\nkernel flags the cache as CACHEFILES_DEAD, the cachefiles_daemon_write()\nwill always return -EIO, so the daemon can't pass the copen to the kernel.\nThen the kernel process that is waiting for the copen triggers a hung_task.\n\nSince the DEAD state is irreversible, it can only be exited by closing\n/dev/cachefiles. Therefore, after calling cachefiles_io_error() to mark\nthe cache as CACHEFILES_DEAD, if in ondemand mode, flush all requests to\navoid the above hungtask. We may still be able to read some of the cached\ndata before closing the fd of /dev/cachefiles.\n\nNote that this relies on the patch that adds reference counting to the req,\notherwise it may UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Clear napi-\u003eskb before dev_kfree_skb_any()\n\ngve_rx_free_skb incorrectly leaves napi-\u003eskb referencing an skb after it\nis freed with dev_kfree_skb_any(). This can result in a subsequent call\nto napi_get_frags returning a dangling pointer.\n\nFix this by clearing napi-\u003eskb before the skb is freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40940",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix tainted pointer delete is case of flow rules creation fail\n\nIn case of flow rule creation fail in mlx5_lag_create_port_sel_table(),\ninstead of previously created rules, the tainted pointer is deleted\ndeveral times.\nFix this bug by using correct flow rules pointers.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nima: Avoid blocking in RCU read-side critical section\n\nA panic happens in ima_match_policy:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000010\nPGD 42f873067 P4D 0\nOops: 0000 [#1] SMP NOPTI\nCPU: 5 PID: 1286325 Comm: kubeletmonit.sh\nKdump: loaded Tainted: P\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\n               BIOS 0.0.0 02/06/2015\nRIP: 0010:ima_match_policy+0x84/0x450\nCode: 49 89 fc 41 89 cf 31 ed 89 44 24 14 eb 1c 44 39\n      7b 18 74 26 41 83 ff 05 74 20 48 8b 1b 48 3b 1d\n      f2 b9 f4 00 0f 84 9c 01 00 00 \u003c44\u003e 85 73 10 74 ea\n      44 8b 6b 14 41 f6 c5 01 75 d4 41 f6 c5 02 74 0f\nRSP: 0018:ff71570009e07a80 EFLAGS: 00010207\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000200\nRDX: ffffffffad8dc7c0 RSI: 0000000024924925 RDI: ff3e27850dea2000\nRBP: 0000000000000000 R08: 0000000000000000 R09: ffffffffabfce739\nR10: ff3e27810cc42400 R11: 0000000000000000 R12: ff3e2781825ef970\nR13: 00000000ff3e2785 R14: 000000000000000c R15: 0000000000000001\nFS:  00007f5195b51740(0000)\nGS:ff3e278b12d40000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000010 CR3: 0000000626d24002 CR4: 0000000000361ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n ima_get_action+0x22/0x30\n process_measurement+0xb0/0x830\n ? page_add_file_rmap+0x15/0x170\n ? alloc_set_pte+0x269/0x4c0\n ? prep_new_page+0x81/0x140\n ? simple_xattr_get+0x75/0xa0\n ? selinux_file_open+0x9d/0xf0\n ima_file_check+0x64/0x90\n path_openat+0x571/0x1720\n do_filp_open+0x9b/0x110\n ? page_counter_try_charge+0x57/0xc0\n ? files_cgroup_alloc_fd+0x38/0x60\n ? __alloc_fd+0xd4/0x250\n ? do_sys_open+0x1bd/0x250\n do_sys_open+0x1bd/0x250\n do_syscall_64+0x5d/0x1d0\n entry_SYSCALL_64_after_hwframe+0x65/0xca\n\nCommit c7423dbdbc9e (\"ima: Handle -ESTALE returned by\nima_filter_rule_match()\") introduced call to ima_lsm_copy_rule within a\nRCU read-side critical section which contains kmalloc with GFP_KERNEL.\nThis implies a possible sleep and violates limitations of RCU read-side\ncritical sections on non-PREEMPT systems.\n\nSleeping within RCU read-side critical section might cause\nsynchronize_rcu() returning early and break RCU protection, allowing a\nUAF to happen.\n\nThe root cause of this issue could be described as follows:\n|\tThread A\t|\tThread B\t|\n|\t\t\t|ima_match_policy\t|\n|\t\t\t|  rcu_read_lock\t|\n|ima_lsm_update_rule\t|\t\t\t|\n|  synchronize_rcu\t|\t\t\t|\n|\t\t\t|    kmalloc(GFP_KERNEL)|\n|\t\t\t|      sleep\t\t|\n==\u003e synchronize_rcu returns early\n|  kfree(entry)\t\t|\t\t\t|\n|\t\t\t|    entry = entry-\u003enext|\n==\u003e UAF happens and entry now becomes NULL (or could be anything).\n|\t\t\t|    entry-\u003eaction\t|\n==\u003e Accessing entry might cause panic.\n\nTo fix this issue, we are converting all kmalloc that is called within\nRCU read-side critical section to use GFP_ATOMIC.\n\n[PM: fixed missing comment, long lines, !CONFIG_IMA_LSM_RULES case]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/page_table_check: fix crash on ZONE_DEVICE\n\nNot all pages may apply to pgtable check.  One example is ZONE_DEVICE\npages: they map PFNs directly, and they don't allocate page_ext at all\neven if there's struct page around.  One may reference\ndevm_memremap_pages().\n\nWhen both ZONE_DEVICE and page-table-check enabled, then try to map some\ndax memories, one can trigger kernel bug constantly now when the kernel\nwas trying to inject some pfn maps on the dax device:\n\n kernel BUG at mm/page_table_check.c:55!\n\nWhile it's pretty legal to use set_pxx_at() for ZONE_DEVICE pages for page\nfault resolutions, skip all the checks if page_ext doesn't even exist in\npgtable checker, which applies to ZONE_DEVICE but maybe more.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40953",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Fix a data race on last_boosted_vcpu in kvm_vcpu_on_spin()\n\nUse {READ,WRITE}_ONCE() to access kvm-\u003elast_boosted_vcpu to ensure the\nloads and stores are atomic.  In the extremely unlikely scenario the\ncompiler tears the stores, it's theoretically possible for KVM to attempt\nto get a vCPU using an out-of-bounds index, e.g. if the write is split\ninto multiple 8-bit stores, and is paired with a 32-bit load on a VM with\n257 vCPUs:\n\n  CPU0                              CPU1\n  last_boosted_vcpu = 0xff;\n\n                                    (last_boosted_vcpu = 0x100)\n                                    last_boosted_vcpu[15:8] = 0x01;\n  i = (last_boosted_vcpu = 0x1ff)\n                                    last_boosted_vcpu[7:0] = 0x00;\n\n  vcpu = kvm-\u003evcpu_array[0x1ff];\n\nAs detected by KCSAN:\n\n  BUG: KCSAN: data-race in kvm_vcpu_on_spin [kvm] / kvm_vcpu_on_spin [kvm]\n\n  write to 0xffffc90025a92344 of 4 bytes by task 4340 on cpu 16:\n  kvm_vcpu_on_spin (arch/x86/kvm/../../../virt/kvm/kvm_main.c:4112) kvm\n  handle_pause (arch/x86/kvm/vmx/vmx.c:5929) kvm_intel\n  vmx_handle_exit (arch/x86/kvm/vmx/vmx.c:?\n\t\t arch/x86/kvm/vmx/vmx.c:6606) kvm_intel\n  vcpu_run (arch/x86/kvm/x86.c:11107 arch/x86/kvm/x86.c:11211) kvm\n  kvm_arch_vcpu_ioctl_run (arch/x86/kvm/x86.c:?) kvm\n  kvm_vcpu_ioctl (arch/x86/kvm/../../../virt/kvm/kvm_main.c:?) kvm\n  __se_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:904 fs/ioctl.c:890)\n  __x64_sys_ioctl (fs/ioctl.c:890)\n  x64_sys_call (arch/x86/entry/syscall_64.c:33)\n  do_syscall_64 (arch/x86/entry/common.c:?)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n  read to 0xffffc90025a92344 of 4 bytes by task 4342 on cpu 4:\n  kvm_vcpu_on_spin (arch/x86/kvm/../../../virt/kvm/kvm_main.c:4069) kvm\n  handle_pause (arch/x86/kvm/vmx/vmx.c:5929) kvm_intel\n  vmx_handle_exit (arch/x86/kvm/vmx/vmx.c:?\n\t\t\tarch/x86/kvm/vmx/vmx.c:6606) kvm_intel\n  vcpu_run (arch/x86/kvm/x86.c:11107 arch/x86/kvm/x86.c:11211) kvm\n  kvm_arch_vcpu_ioctl_run (arch/x86/kvm/x86.c:?) kvm\n  kvm_vcpu_ioctl (arch/x86/kvm/../../../virt/kvm/kvm_main.c:?) kvm\n  __se_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:904 fs/ioctl.c:890)\n  __x64_sys_ioctl (fs/ioctl.c:890)\n  x64_sys_call (arch/x86/entry/syscall_64.c:33)\n  do_syscall_64 (arch/x86/entry/common.c:?)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\n  value changed: 0x00000012 -\u003e 0x00000000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: prevent possible NULL dereference in rt6_probe()\n\nsyzbot caught a NULL dereference in rt6_probe() [1]\n\nBail out if  __in6_dev_get() returns NULL.\n\n[1]\nOops: general protection fault, probably for non-canonical address 0xdffffc00000000cb: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000658-0x000000000000065f]\nCPU: 1 PID: 22444 Comm: syz-executor.0 Not tainted 6.10.0-rc2-syzkaller-00383-gb8481381d4e2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024\n RIP: 0010:rt6_probe net/ipv6/route.c:656 [inline]\n RIP: 0010:find_match+0x8c4/0xf50 net/ipv6/route.c:758\nCode: 14 fd f7 48 8b 85 38 ff ff ff 48 c7 45 b0 00 00 00 00 48 8d b8 5c 06 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c0f\u003e b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 19\nRSP: 0018:ffffc900034af070 EFLAGS: 00010203\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffc90004521000\nRDX: 00000000000000cb RSI: ffffffff8990d0cd RDI: 000000000000065c\nRBP: ffffc900034af150 R08: 0000000000000005 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000002 R12: 000000000000000a\nR13: 1ffff92000695e18 R14: ffff8880244a1d20 R15: 0000000000000000\nFS:  00007f4844a5a6c0(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b31b27000 CR3: 000000002d42c000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  rt6_nh_find_match+0xfa/0x1a0 net/ipv6/route.c:784\n  nexthop_for_each_fib6_nh+0x26d/0x4a0 net/ipv4/nexthop.c:1496\n  __find_rr_leaf+0x6e7/0xe00 net/ipv6/route.c:825\n  find_rr_leaf net/ipv6/route.c:853 [inline]\n  rt6_select net/ipv6/route.c:897 [inline]\n  fib6_table_lookup+0x57e/0xa30 net/ipv6/route.c:2195\n  ip6_pol_route+0x1cd/0x1150 net/ipv6/route.c:2231\n  pol_lookup_func include/net/ip6_fib.h:616 [inline]\n  fib6_rule_lookup+0x386/0x720 net/ipv6/fib6_rules.c:121\n  ip6_route_output_flags_noref net/ipv6/route.c:2639 [inline]\n  ip6_route_output_flags+0x1d0/0x640 net/ipv6/route.c:2651\n  ip6_dst_lookup_tail.constprop.0+0x961/0x1760 net/ipv6/ip6_output.c:1147\n  ip6_dst_lookup_flow+0x99/0x1d0 net/ipv6/ip6_output.c:1250\n  rawv6_sendmsg+0xdab/0x4340 net/ipv6/raw.c:898\n  inet_sendmsg+0x119/0x140 net/ipv4/af_inet.c:853\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  sock_write_iter+0x4b8/0x5c0 net/socket.c:1160\n  new_sync_write fs/read_write.c:497 [inline]\n  vfs_write+0x6b6/0x1140 fs/read_write.c:590\n  ksys_write+0x1f8/0x260 fs/read_write.c:643\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40961",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: prevent possible NULL deref in fib6_nh_init()\n\nsyzbot reminds us that in6_dev_get() can return NULL.\n\nfib6_nh_init()\n    ip6_validate_gw(  \u0026idev  )\n        ip6_route_check_nh(  idev  )\n            *idev = in6_dev_get(dev); // can be NULL\n\nOops: general protection fault, probably for non-canonical address 0xdffffc00000000bc: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x00000000000005e0-0x00000000000005e7]\nCPU: 0 PID: 11237 Comm: syz-executor.3 Not tainted 6.10.0-rc2-syzkaller-00249-gbe27b8965297 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/07/2024\n RIP: 0010:fib6_nh_init+0x640/0x2160 net/ipv6/route.c:3606\nCode: 00 00 fc ff df 4c 8b 64 24 58 48 8b 44 24 28 4c 8b 74 24 30 48 89 c1 48 89 44 24 28 48 8d 98 e0 05 00 00 48 89 d8 48 c1 e8 03 \u003c42\u003e 0f b6 04 38 84 c0 0f 85 b3 17 00 00 8b 1b 31 ff 89 de e8 b8 8b\nRSP: 0018:ffffc900032775a0 EFLAGS: 00010202\nRAX: 00000000000000bc RBX: 00000000000005e0 RCX: 0000000000000000\nRDX: 0000000000000010 RSI: ffffc90003277a54 RDI: ffff88802b3a08d8\nRBP: ffffc900032778b0 R08: 00000000000002fc R09: 0000000000000000\nR10: 00000000000002fc R11: 0000000000000000 R12: ffff88802b3a08b8\nR13: 1ffff9200064eec8 R14: ffffc90003277a00 R15: dffffc0000000000\nFS:  00007f940feb06c0(0000) GS:ffff8880b9400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 00000000245e8000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  ip6_route_info_create+0x99e/0x12b0 net/ipv6/route.c:3809\n  ip6_route_add+0x28/0x160 net/ipv6/route.c:3853\n  ipv6_route_ioctl+0x588/0x870 net/ipv6/route.c:4483\n  inet6_ioctl+0x21a/0x280 net/ipv6/af_inet6.c:579\n  sock_do_ioctl+0x158/0x460 net/socket.c:1222\n  sock_ioctl+0x629/0x8e0 net/socket.c:1341\n  vfs_ioctl fs/ioctl.c:51 [inline]\n  __do_sys_ioctl fs/ioctl.c:907 [inline]\n  __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:893\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f940f07cea9",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: add the option to have a tty reject a new ldisc\n\n... and use it to limit the virtual terminals to just N_TTY.  They are\nkind of special, and in particular, the \"con_write()\" routine violates\nthe \"writes cannot sleep\" rule that some ldiscs rely on.\n\nThis avoids the\n\n   BUG: sleeping function called from invalid context at kernel/printk/printk.c:2659\n\nwhen N_GSM has been attached to a virtual console, and gsmld_write()\ncalls con_write() while holding a spinlock, and con_write() then tries\nto get the console lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40970",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nAvoid hw_desc array overrun in dw-axi-dmac\n\nI have a use case where nr_buffers = 3 and in which each descriptor is composed by 3\nsegments, resulting in the DMA channel descs_allocated to be 9. Since axi_desc_put()\nhandles the hw_desc considering the descs_allocated, this scenario would result in a\nkernel panic (hw_desc array will be overrun).\n\nTo fix this, the proposal is to add a new member to the axi_dma_desc structure,\nwhere we keep the number of allocated hw_descs (axi_desc_alloc()) and use it in\naxi_desc_put() to handle the hw_desc array correctly.\n\nAdditionally I propose to remove the axi_chan_start_first_queued() call after completing\nthe transfer, since it was identified that unbalance can occur (started descriptors can\nbe interrupted and transfer ignored due to DMA channel not being enabled).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40972",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: do not create EA inode under buffer lock\n\next4_xattr_set_entry() creates new EA inodes while holding buffer lock\non the external xattr block. This is problematic as it nests all the\nallocation locking (which acquires locks on other buffers) under the\nbuffer lock. This can even deadlock when the filesystem is corrupted and\ne.g. quota file is setup to contain xattr block as data block. Move the\nallocation of EA inode out of ext4_xattr_set_entry() into the callers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40975",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: x86-android-tablets: Unregister devices in reverse order\n\nNot all subsystems support a device getting removed while there are\nstill consumers of the device with a reference to the device.\n\nOne example of this is the regulator subsystem. If a regulator gets\nunregistered while there are still drivers holding a reference\na WARN() at drivers/regulator/core.c:5829 triggers, e.g.:\n\n WARNING: CPU: 1 PID: 1587 at drivers/regulator/core.c:5829 regulator_unregister\n Hardware name: Intel Corp. VALLEYVIEW C0 PLATFORM/BYT-T FFD8, BIOS BLADE_21.X64.0005.R00.1504101516 FFD8_X64_R_2015_04_10_1516 04/10/2015\n RIP: 0010:regulator_unregister\n Call Trace:\n  \u003cTASK\u003e\n  regulator_unregister\n  devres_release_group\n  i2c_device_remove\n  device_release_driver_internal\n  bus_remove_device\n  device_del\n  device_unregister\n  x86_android_tablet_remove\n\nOn the Lenovo Yoga Tablet 2 series the bq24190 charger chip also provides\na 5V boost converter output for powering USB devices connected to the micro\nUSB port, the bq24190-charger driver exports this as a Vbus regulator.\n\nOn the 830 (8\") and 1050 (\"10\") models this regulator is controlled by\na platform_device and x86_android_tablet_remove() removes platform_device-s\nbefore i2c_clients so the consumer gets removed first.\n\nBut on the 1380 (13\") model there is a lc824206xa micro-USB switch\nconnected over I2C and the extcon driver for that controls the regulator.\nThe bq24190 i2c-client *must* be registered first, because that creates\nthe regulator with the lc824206xa listed as its consumer. If the regulator\nhas not been registered yet the lc824206xa driver will end up getting\na dummy regulator.\n\nSince in this case both the regulator provider and consumer are I2C\ndevices, the only way to ensure that the consumer is unregistered first\nis to unregister the I2C devices in reverse order of in which they were\ncreated.\n\nFor consistency and to avoid similar problems in the future change\nx86_android_tablet_remove() to unregister all device types in reverse\norder.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40979",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix kernel crash during resume\n\nCurrently during resume, QMI target memory is not properly handled, resulting\nin kernel crash in case DMA remap is not supported:\n\nBUG: Bad page state in process kworker/u16:54  pfn:36e80\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x36e80\npage dumped because: nonzero _refcount\nCall Trace:\n bad_page\n free_page_is_bad_report\n __free_pages_ok\n __free_pages\n dma_direct_free\n dma_free_attrs\n ath12k_qmi_free_target_mem_chunk\n ath12k_qmi_msg_mem_request_cb\n\nThe reason is:\nOnce ath12k module is loaded, firmware sends memory request to host. In case\nDMA remap not supported, ath12k refuses the first request due to failure in\nallocating with large segment size:\n\nath12k_pci 0000:04:00.0: qmi firmware request memory request\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 7077888\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 8454144\nath12k_pci 0000:04:00.0: qmi dma allocation failed (7077888 B type 1), will try later with small size\nath12k_pci 0000:04:00.0: qmi delays mem_request 2\nath12k_pci 0000:04:00.0: qmi firmware request memory request\n\nLater firmware comes back with more but small segments and allocation\nsucceeds:\n\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 262144\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 524288\nath12k_pci 0000:04:00.0: qmi mem seg type 4 size 65536\nath12k_pci 0000:04:00.0: qmi mem seg type 1 size 524288\n\nNow ath12k is working. If suspend is triggered, firmware will be reloaded\nduring resume. As same as before, firmware requests two large segments at\nfirst. In ath12k_qmi_msg_mem_request_cb() segment count and size are\nassigned:\n\n\tab-\u003eqmi.mem_seg_count == 2\n\tab-\u003eqmi.target_mem[0].size == 7077888\n\tab-\u003eqmi.target_mem[1].size == 8454144\n\nThen allocation failed like before and ath12k_qmi_free_target_mem_chunk()\nis called to free all allocated segments. Note the first segment is skipped\nbecause its v.addr is cleared due to allocation failure:\n\n\tchunk-\u003ev.addr = dma_alloc_coherent()\n\nAlso note that this leaks that segment because it has not been freed.\n\nWhile freeing the second segment, a size of 8454144 is passed to\ndma_free_coherent(). However remember that this segment is allocated at\nthe first time firmware is loaded, before suspend. So its real size is\n524288, much smaller than 8454144. As a result kernel found we are freeing\nsome memory which is in use and thus cras\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix uninitialized ratelimit_state-\u003elock access in __ext4_fill_super()\n\nIn the following concurrency we will access the uninitialized rs-\u003elock:\n\next4_fill_super\n  ext4_register_sysfs\n   // sysfs registered msg_ratelimit_interval_ms\n                             // Other processes modify rs-\u003einterval to\n                             // non-zero via msg_ratelimit_interval_ms\n  ext4_orphan_cleanup\n    ext4_msg(sb, KERN_INFO, \"Errors on filesystem, \"\n      __ext4_msg\n        ___ratelimit(\u0026(EXT4_SB(sb)-\u003es_msg_ratelimit_state)\n          if (!rs-\u003einterval)  // do nothing if interval is 0\n            return 1;\n          raw_spin_trylock_irqsave(\u0026rs-\u003elock, flags)\n            raw_spin_trylock(lock)\n              _raw_spin_trylock\n                __raw_spin_trylock\n                  spin_acquire(\u0026lock-\u003edep_map, 0, 1, _RET_IP_)\n                    lock_acquire\n                      __lock_acquire\n                        register_lock_class\n                          assign_lock_key\n                            dump_stack();\n  ratelimit_state_init(\u0026sbi-\u003es_msg_ratelimit_state, 5 * HZ, 10);\n    raw_spin_lock_init(\u0026rs-\u003elock);\n    // init rs-\u003elock here\n\nand get the following dump_stack:\n\n=========================================================\nINFO: trying to register non-static key.\nThe code is fine but needs lockdep annotation, or maybe\nyou didn't initialize this object before use?\nturning off the locking correctness validator.\nCPU: 12 PID: 753 Comm: mount Tainted: G E 6.7.0-rc6-next-20231222 #504\n[...]\nCall Trace:\n dump_stack_lvl+0xc5/0x170\n dump_stack+0x18/0x30\n register_lock_class+0x740/0x7c0\n __lock_acquire+0x69/0x13a0\n lock_acquire+0x120/0x450\n _raw_spin_trylock+0x98/0xd0\n ___ratelimit+0xf6/0x220\n __ext4_msg+0x7f/0x160 [ext4]\n ext4_orphan_cleanup+0x665/0x740 [ext4]\n __ext4_fill_super+0x21ea/0x2b10 [ext4]\n ext4_fill_super+0x14d/0x360 [ext4]\n[...]\n=========================================================\n\nNormally interval is 0 until s_msg_ratelimit_state is initialized, so\n___ratelimit() does nothing. But registering sysfs precedes initializing\nrs-\u003elock, so it is possible to change rs-\u003einterval to a non-zero value\nvia the msg_ratelimit_interval_ms interface of sysfs while rs-\u003elock is\nuninitialized, and then a call to ext4_msg triggers the problem by\naccessing an uninitialized rs-\u003elock. Therefore register sysfs after all\ninitializations are complete to avoid such problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Add validation for completion descriptors consistency\n\nValidate that `first` flag is set only for the first\ndescriptor in multi-buffer packets.\nIn case of an invalid descriptor, a reset will occur.\nA new reset reason for RX data corruption has been added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41006",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix a memory leak in nr_heartbeat_expiry()\n\nsyzbot reported a memory leak in nr_create() [0].\n\nCommit 409db27e3a2e (\"netrom: Fix use-after-free of a listening socket.\")\nadded sock_hold() to the nr_heartbeat_expiry() function, where\na) a socket has a SOCK_DESTROY flag or\nb) a listening socket has a SOCK_DEAD flag.\n\nBut in the case \"a,\" when the SOCK_DESTROY flag is set, the file descriptor\nhas already been closed and the nr_release() function has been called.\nSo it makes no sense to hold the reference count because no one will\ncall another nr_destroy_socket() and put it as in the case \"b.\"\n\nnr_connect\n  nr_establish_data_link\n    nr_start_heartbeat\n\nnr_release\n  switch (nr-\u003estate)\n  case NR_STATE_3\n    nr-\u003estate = NR_STATE_2\n    sock_set_flag(sk, SOCK_DESTROY);\n\n                        nr_rx_frame\n                          nr_process_rx_frame\n                            switch (nr-\u003estate)\n                            case NR_STATE_2\n                              nr_state2_machine()\n                                nr_disconnect()\n                                  nr_sk(sk)-\u003estate = NR_STATE_0\n                                  sock_set_flag(sk, SOCK_DEAD)\n\n                        nr_heartbeat_expiry\n                          switch (nr-\u003estate)\n                          case NR_STATE_0\n                            if (sock_flag(sk, SOCK_DESTROY) ||\n                               (sk-\u003esk_state == TCP_LISTEN\n                                 \u0026\u0026 sock_flag(sk, SOCK_DEAD)))\n                               sock_hold()  // ( !!! )\n                               nr_destroy_socket()\n\nTo fix the memory leak, let's call sock_hold() only for a listening socket.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller.\n\n[0]: https://syzkaller.appspot.com/bug?extid=d327a1f3b12e1e206c16",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: don't allow mapping the MMIO HDP page with large pages\n\nWe don't get the right offset in that case.  The GPU has\nan unused 4K area of the register BAR space into which you can\nremap registers.  We remap the HDP flush registers into this\nspace to allow userspace (CPU or GPU) to flush the HDP when it\nupdates VRAM.  However, on systems with \u003e4K pages, we end up\nexposing PAGE_SIZE of MMIO space.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: don't walk off the end of a directory data block\n\nThis adds sanity checks for xfs_dir2_data_unused and xfs_dir2_data_entry\nto make sure don't stray beyond valid memory region. Before patching, the\nloop simply checks that the start offset of the dup and dep is within the\nrange. So in a crafted image, if last entry is xfs_dir2_data_unused, we\ncan change dup-\u003elength to dup-\u003elength-1 and leave 1 byte of space. In the\nnext traversal, this space will be considered as dup or dep. We may\nencounter an out of bound read when accessing the fixed members.\n\nIn the patch, we make sure that the remaining bytes large enough to hold\nan unused entry before accessing xfs_dir2_data_unused and\nxfs_dir2_data_unused is XFS_DIR2_DATA_ALIGN byte aligned. We also make\nsure that the remaining bytes large enough to hold a dirent with a\nsingle-byte name before accessing xfs_dir2_data_entry.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: add bounds checking to xlog_recover_process_data\n\nThere is a lack of verification of the space occupied by fixed members\nof xlog_op_header in the xlog_recover_process_data.\n\nWe can create a crafted image to trigger an out of bounds read by\nfollowing these steps:\n    1) Mount an image of xfs, and do some file operations to leave records\n    2) Before umounting, copy the image for subsequent steps to simulate\n       abnormal exit. Because umount will ensure that tail_blk and\n       head_blk are the same, which will result in the inability to enter\n       xlog_recover_process_data\n    3) Write a tool to parse and modify the copied image in step 2\n    4) Make the end of the xlog_op_header entries only 1 byte away from\n       xlog_rec_header-\u003eh_size\n    5) xlog_rec_header-\u003eh_num_logops++\n    6) Modify xlog_rec_header-\u003eh_crc\n\nFix:\nAdd a check to make sure there is sufficient space to access fixed members\nof xlog_op_header.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41017",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: don't walk off the end of ealist\n\nAdd a check before visiting the members of ea to\nmake sure each ea stays within the ealist.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntap: add missing verification for short frame\n\nThe cited commit missed to check against the validity of the frame length\nin the tap_get_user_xdp() path, which could cause a corrupted skb to be\nsent downstack. Even before the skb is transmitted, the\ntap_get_user_xdp()--\u003eskb_set_network_header() may assume the size is more\nthan ETH_HLEN. Once transmitted, this could either cause out-of-bound\naccess beyond the actual length, or confuse the underlayer with incorrect\nor inconsistent header length in the skb metadata.\n\nIn the alternative path, tap_get_user() already prohibits short frame which\nhas the length less than Ethernet header size from being transmitted.\n\nThis is to drop any frame shorter than the Ethernet header size just like\nhow tap_get_user() does.\n\nCVE: CVE-2024-41090",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41091",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntun: add missing verification for short frame\n\nThe cited commit missed to check against the validity of the frame length\nin the tun_xdp_one() path, which could cause a corrupted skb to be sent\ndownstack. Even before the skb is transmitted, the\ntun_xdp_one--\u003eeth_type_trans() may access the Ethernet header although it\ncan be less than ETH_HLEN. Once transmitted, this could either cause\nout-of-bound access beyond the actual length, or confuse the underlayer\nwith incorrect or inconsistent header length in the skb metadata.\n\nIn the alternative path, tun_get_user() already prohibits short frame which\nhas the length less than Ethernet header size from being transmitted for\nIFF_TAP.\n\nThis is to drop any frame shorter than the Ethernet header size just like\nhow tun_get_user() does.\n\nCVE: CVE-2024-41091",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45490",
      "Description": "An issue was discovered in libexpat before 2.6.3. xmlparse.c does not reject a negative length for XML_ParseBuffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45491",
      "Description": "An issue was discovered in libexpat before 2.6.3. dtdCopy in xmlparse.c can have an integer overflow for nDefaultAtts on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45492",
      "Description": "An issue was discovered in libexpat before 2.6.3. nextScaffoldPart in xmlparse.c can have an integer overflow for m_groupSize on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6126",
      "Description": "A flaw was found in the cockpit package. This flaw allows an authenticated user to kill any process when enabling the pam_env's user_readenv option, which leads to a denial of service (DoS) attack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6197",
      "Description": "libcurl's ASN1 parser has this utf8asn1str() function used for parsing an ASN.1 UTF-8 string. Itcan detect an invalid field and return error. Unfortunately, when doing so it also invokes `free()` on a 4 byte localstack buffer.  Most modern malloc implementations detect this error and immediately abort. Some however accept the input pointer and add that memory to its list of available chunks. This leads to the overwriting of nearby stack memory. The content of the overwrite is decided by the `free()` implementation; likely to be memory pointers and a set of flags.  The most likely outcome of exploting this flaw is a crash, although it cannot be ruled out that more serious results can be had in special circumstances.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6387",
      "Description": "A security regression (CVE-2006-5051) was discovered in OpenSSH's server (sshd). There is a race condition which can lead sshd to handle some signals in an unsafe manner. An unauthenticated, remote attacker may be able to trigger it by failing to authenticate within a set time period.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6923",
      "Description": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe \nemail module didn't properly quote newlines for email headers when \nserializing an email message allowing for header injection when an email\n is serialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7264",
      "Description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}