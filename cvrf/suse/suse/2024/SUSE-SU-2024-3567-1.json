{
  "Title": "Security update for the Linux Kernel",
  "Tracking": {
    "ID": "SUSE-SU-2024:3567-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2024-10-09T09:46:04Z",
    "CurrentReleaseDate": "2024-10-09T09:46:04Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2024-10-09T09:46:04Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for the Linux Kernel",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "\nThe SUSE Linux Enterprise 15 SP3 RT kernel was updated to receive various security bugfixes.\n\n\nThe following security bugs were fixed:\n\n- CVE-2022-48945: media: vivid: fix compose size exceed boundary (bsc#1230398).\n- CVE-2022-48911: kabi: add __nf_queue_get_refs() for kabi compliance.  (bsc#1229633).\n- CVE-2024-44946: kcm: Serialise kcm_sendmsg() for the same socket (bsc#1230015).\n- CVE-2024-46695: selinux,smack: do not bypass permissions check in inode_setsecctx  hook (bsc#1230519).\n- CVE-2024-45021: memcg_write_event_control(): fix a user-triggerable oops (bsc#1230434).\n- CVE-2024-45003: Don't evict inode under the inode lru traversing context (bsc#1230245).\n\nThe following non-security bugs were fixed:\n\n- ext4: add check to prevent attempting to resize an fs with sparse_super2 (bsc#1230326).\n- ext4: add reserved GDT blocks check (bsc#1230326).\n- ext4: consolidate checks for resize of bigalloc into ext4_resize_begin (bsc#1230326).\n- ext4: fix bug_on ext4_mb_use_inode_pa (bsc#1230326).\n- kabi: add __nf_queue_get_refs() for kabi compliance.\n- No -rt specific changes this merge.\n- PKCS#7: Check codeSigning EKU of certificates in PKCS#7 (bsc#1226666).\n- Revert 'ext4: consolidate checks for resize of bigalloc into ext4_resize_begin' (bsc#1230326).\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-2024-3567,SUSE-SUSE-MicroOS-5.1-2024-3567,SUSE-SUSE-MicroOS-5.2-2024-3567",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "kernel-rt-5.3.18-150300.187.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-source-rt-5.3.18-150300.187.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-rt-5.3.18-150300.187.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.2",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-source-rt-5.3.18-150300.187.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.2",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2024/suse-su-20243567-1/",
      "Description": "Link for SUSE-SU-2024:3567-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2024-October/019577.html",
      "Description": "E-Mail link for SUSE-SU-2024:3567-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1226666",
      "Description": "SUSE Bug 1226666"
    },
    {
      "URL": "https://bugzilla.suse.com/1227487",
      "Description": "SUSE Bug 1227487"
    },
    {
      "URL": "https://bugzilla.suse.com/1229633",
      "Description": "SUSE Bug 1229633"
    },
    {
      "URL": "https://bugzilla.suse.com/1230015",
      "Description": "SUSE Bug 1230015"
    },
    {
      "URL": "https://bugzilla.suse.com/1230245",
      "Description": "SUSE Bug 1230245"
    },
    {
      "URL": "https://bugzilla.suse.com/1230326",
      "Description": "SUSE Bug 1230326"
    },
    {
      "URL": "https://bugzilla.suse.com/1230398",
      "Description": "SUSE Bug 1230398"
    },
    {
      "URL": "https://bugzilla.suse.com/1230434",
      "Description": "SUSE Bug 1230434"
    },
    {
      "URL": "https://bugzilla.suse.com/1230519",
      "Description": "SUSE Bug 1230519"
    },
    {
      "URL": "https://bugzilla.suse.com/1230767",
      "Description": "SUSE Bug 1230767"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-48911/",
      "Description": "SUSE CVE CVE-2022-48911 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-48945/",
      "Description": "SUSE CVE CVE-2022-48945 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-44946/",
      "Description": "SUSE CVE CVE-2024-44946 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-45003/",
      "Description": "SUSE CVE CVE-2024-45003 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-45021/",
      "Description": "SUSE CVE CVE-2024-45021 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-46695/",
      "Description": "SUSE CVE CVE-2024-46695 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-46774/",
      "Description": "SUSE CVE CVE-2024-46774 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2022-48911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_queue: fix possible use-after-free\n\nEric Dumazet says:\n  The sock_hold() side seems suspect, because there is no guarantee\n  that sk_refcnt is not already 0.\n\nOn failure, we cannot queue the packet and need to indicate an\nerror.  The packet will be dropped by the caller.\n\nv2: split skb prefetch hunk into separate change",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-48911.html",
          "Description": "CVE-2022-48911"
        },
        {
          "URL": "https://bugzilla.suse.com/1229633",
          "Description": "SUSE Bug 1229633"
        },
        {
          "URL": "https://bugzilla.suse.com/1229640",
          "Description": "SUSE Bug 1229640"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vivid: fix compose size exceed boundary\n\nsyzkaller found a bug:\n\n BUG: unable to handle page fault for address: ffffc9000a3b1000\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 100000067 P4D 100000067 PUD 10015f067 PMD 1121ca067 PTE 0\n Oops: 0002 [#1] PREEMPT SMP\n CPU: 0 PID: 23489 Comm: vivid-000-vid-c Not tainted 6.1.0-rc1+ #512\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n RIP: 0010:memcpy_erms+0x6/0x10\n[...]\n Call Trace:\n  \u003cTASK\u003e\n  ? tpg_fill_plane_buffer+0x856/0x15b0\n  vivid_fillbuff+0x8ac/0x1110\n  vivid_thread_vid_cap_tick+0x361/0xc90\n  vivid_thread_vid_cap+0x21a/0x3a0\n  kthread+0x143/0x180\n  ret_from_fork+0x1f/0x30\n  \u003c/TASK\u003e\n\nThis is because we forget to check boundary after adjust compose-\u003eheight\nint V4L2_SEL_TGT_CROP case. Add v4l2_rect_map_inside() to fix this problem\nfor this case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-48945.html",
          "Description": "CVE-2022-48945"
        },
        {
          "URL": "https://bugzilla.suse.com/1230398",
          "Description": "SUSE Bug 1230398"
        },
        {
          "URL": "https://bugzilla.suse.com/1235889",
          "Description": "SUSE Bug 1235889"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkcm: Serialise kcm_sendmsg() for the same socket.\n\nsyzkaller reported UAF in kcm_release(). [0]\n\nThe scenario is\n\n  1. Thread A builds a skb with MSG_MORE and sets kcm-\u003eseq_skb.\n\n  2. Thread A resumes building skb from kcm-\u003eseq_skb but is blocked\n     by sk_stream_wait_memory()\n\n  3. Thread B calls sendmsg() concurrently, finishes building kcm-\u003eseq_skb\n     and puts the skb to the write queue\n\n  4. Thread A faces an error and finally frees skb that is already in the\n     write queue\n\n  5. kcm_release() does double-free the skb in the write queue\n\nWhen a thread is building a MSG_MORE skb, another thread must not touch it.\n\nLet's add a per-sk mutex and serialise kcm_sendmsg().\n\n[0]:\nBUG: KASAN: slab-use-after-free in __skb_unlink include/linux/skbuff.h:2366 [inline]\nBUG: KASAN: slab-use-after-free in __skb_dequeue include/linux/skbuff.h:2385 [inline]\nBUG: KASAN: slab-use-after-free in __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]\nBUG: KASAN: slab-use-after-free in __skb_queue_purge include/linux/skbuff.h:3181 [inline]\nBUG: KASAN: slab-use-after-free in kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691\nRead of size 8 at addr ffff0000ced0fc80 by task syz-executor329/6167\n\nCPU: 1 PID: 6167 Comm: syz-executor329 Tainted: G    B              6.8.0-rc5-syzkaller-g9abbc24128bc #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nCall trace:\n dump_backtrace+0x1b8/0x1e4 arch/arm64/kernel/stacktrace.c:291\n show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:298\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd0/0x124 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:377 [inline]\n print_report+0x178/0x518 mm/kasan/report.c:488\n kasan_report+0xd8/0x138 mm/kasan/report.c:601\n __asan_report_load8_noabort+0x20/0x2c mm/kasan/report_generic.c:381\n __skb_unlink include/linux/skbuff.h:2366 [inline]\n __skb_dequeue include/linux/skbuff.h:2385 [inline]\n __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]\n __skb_queue_purge include/linux/skbuff.h:3181 [inline]\n kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691\n __sock_release net/socket.c:659 [inline]\n sock_close+0xa4/0x1e8 net/socket.c:1421\n __fput+0x30c/0x738 fs/file_table.c:376\n ____fput+0x20/0x30 fs/file_table.c:404\n task_work_run+0x230/0x2e0 kernel/task_work.c:180\n exit_task_work include/linux/task_work.h:38 [inline]\n do_exit+0x618/0x1f64 kernel/exit.c:871\n do_group_exit+0x194/0x22c kernel/exit.c:1020\n get_signal+0x1500/0x15ec kernel/signal.c:2893\n do_signal+0x23c/0x3b44 arch/arm64/kernel/signal.c:1249\n do_notify_resume+0x74/0x1f4 arch/arm64/kernel/entry-common.c:148\n exit_to_user_mode_prepare arch/arm64/kernel/entry-common.c:169 [inline]\n exit_to_user_mode arch/arm64/kernel/entry-common.c:178 [inline]\n el0_svc+0xac/0x168 arch/arm64/kernel/entry-common.c:713\n el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:730\n el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:598\n\nAllocated by task 6166:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x40/0x78 mm/kasan/common.c:68\n kasan_save_alloc_info+0x70/0x84 mm/kasan/generic.c:626\n unpoison_slab_object mm/kasan/common.c:314 [inline]\n __kasan_slab_alloc+0x74/0x8c mm/kasan/common.c:340\n kasan_slab_alloc include/linux/kasan.h:201 [inline]\n slab_post_alloc_hook mm/slub.c:3813 [inline]\n slab_alloc_node mm/slub.c:3860 [inline]\n kmem_cache_alloc_node+0x204/0x4c0 mm/slub.c:3903\n __alloc_skb+0x19c/0x3d8 net/core/skbuff.c:641\n alloc_skb include/linux/skbuff.h:1296 [inline]\n kcm_sendmsg+0x1d3c/0x2124 net/kcm/kcmsock.c:783\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n sock_sendmsg+0x220/0x2c0 net/socket.c:768\n splice_to_socket+0x7cc/0xd58 fs/splice.c:889\n do_splice_from fs/splice.c:941 [inline]\n direct_splice_actor+0xec/0x1d8 fs/splice.c:1164\n splice_direct_to_actor+0x438/0xa0c fs/splice.c:1108\n do_splice_direct_actor \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-44946.html",
          "Description": "CVE-2024-44946"
        },
        {
          "URL": "https://bugzilla.suse.com/1230015",
          "Description": "SUSE Bug 1230015"
        },
        {
          "URL": "https://bugzilla.suse.com/1230016",
          "Description": "SUSE Bug 1230016"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfs: Don't evict inode under the inode lru traversing context\n\nThe inode reclaiming process(See function prune_icache_sb) collects all\nreclaimable inodes and mark them with I_FREEING flag at first, at that\ntime, other processes will be stuck if they try getting these inodes\n(See function find_inode_fast), then the reclaiming process destroy the\ninodes by function dispose_list(). Some filesystems(eg. ext4 with\nea_inode feature, ubifs with xattr) may do inode lookup in the inode\nevicting callback function, if the inode lookup is operated under the\ninode lru traversing context, deadlock problems may happen.\n\nCase 1: In function ext4_evict_inode(), the ea inode lookup could happen\n        if ea_inode feature is enabled, the lookup process will be stuck\n\tunder the evicting context like this:\n\n 1. File A has inode i_reg and an ea inode i_ea\n 2. getfattr(A, xattr_buf) // i_ea is added into lru // lru-\u003ei_ea\n 3. Then, following three processes running like this:\n\n    PA                              PB\n echo 2 \u003e /proc/sys/vm/drop_caches\n  shrink_slab\n   prune_dcache_sb\n   // i_reg is added into lru, lru-\u003ei_ea-\u003ei_reg\n   prune_icache_sb\n    list_lru_walk_one\n     inode_lru_isolate\n      i_ea-\u003ei_state |= I_FREEING // set inode state\n     inode_lru_isolate\n      __iget(i_reg)\n      spin_unlock(\u0026i_reg-\u003ei_lock)\n      spin_unlock(lru_lock)\n                                     rm file A\n                                      i_reg-\u003enlink = 0\n      iput(i_reg) // i_reg-\u003enlink is 0, do evict\n       ext4_evict_inode\n        ext4_xattr_delete_inode\n         ext4_xattr_inode_dec_ref_all\n          ext4_xattr_inode_iget\n           ext4_iget(i_ea-\u003ei_ino)\n            iget_locked\n             find_inode_fast\n              __wait_on_freeing_inode(i_ea) ----→ AA deadlock\n    dispose_list // cannot be executed by prune_icache_sb\n     wake_up_bit(\u0026i_ea-\u003ei_state)\n\nCase 2: In deleted inode writing function ubifs_jnl_write_inode(), file\n        deleting process holds BASEHD's wbuf-\u003eio_mutex while getting the\n\txattr inode, which could race with inode reclaiming process(The\n        reclaiming process could try locking BASEHD's wbuf-\u003eio_mutex in\n\tinode evicting function), then an ABBA deadlock problem would\n\thappen as following:\n\n 1. File A has inode ia and a xattr(with inode ixa), regular file B has\n    inode ib and a xattr.\n 2. getfattr(A, xattr_buf) // ixa is added into lru // lru-\u003eixa\n 3. Then, following three processes running like this:\n\n        PA                PB                        PC\n                echo 2 \u003e /proc/sys/vm/drop_caches\n                 shrink_slab\n                  prune_dcache_sb\n                  // ib and ia are added into lru, lru-\u003eixa-\u003eib-\u003eia\n                  prune_icache_sb\n                   list_lru_walk_one\n                    inode_lru_isolate\n                     ixa-\u003ei_state |= I_FREEING // set inode state\n                    inode_lru_isolate\n                     __iget(ib)\n                     spin_unlock(\u0026ib-\u003ei_lock)\n                     spin_unlock(lru_lock)\n                                                   rm file B\n                                                    ib-\u003enlink = 0\n rm file A\n  iput(ia)\n   ubifs_evict_inode(ia)\n    ubifs_jnl_delete_inode(ia)\n     ubifs_jnl_write_inode(ia)\n      make_reservation(BASEHD) // Lock wbuf-\u003eio_mutex\n      ubifs_iget(ixa-\u003ei_ino)\n       iget_locked\n        find_inode_fast\n         __wait_on_freeing_inode(ixa)\n          |          iput(ib) // ib-\u003enlink is 0, do evict\n          |           ubifs_evict_inode\n          |            ubifs_jnl_delete_inode(ib)\n          ↓             ubifs_jnl_write_inode\n     ABBA deadlock ←-----make_reservation(BASEHD)\n                   dispose_list // cannot be executed by prune_icache_sb\n                    wake_up_bit(\u0026ixa-\u003ei_state)\n\nFix the possible deadlock by using new inode state flag I_LRU_ISOLATING\nto pin the inode in memory while inode_lru_isolate(\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-45003.html",
          "Description": "CVE-2024-45003"
        },
        {
          "URL": "https://bugzilla.suse.com/1230245",
          "Description": "SUSE Bug 1230245"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg_write_event_control(): fix a user-triggerable oops\n\nwe are *not* guaranteed that anything past the terminating NUL\nis mapped (let alone initialized with anything sane).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-45021.html",
          "Description": "CVE-2024-45021"
        },
        {
          "URL": "https://bugzilla.suse.com/1230434",
          "Description": "SUSE Bug 1230434"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46695",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux,smack: don't bypass permissions check in inode_setsecctx hook\n\nMarek Gresko reports that the root user on an NFS client is able to\nchange the security labels on files on an NFS filesystem that is\nexported with root squashing enabled.\n\nThe end of the kerneldoc comment for __vfs_setxattr_noperm() states:\n\n *  This function requires the caller to lock the inode's i_mutex before it\n *  is executed. It also assumes that the caller will make the appropriate\n *  permission checks.\n\nnfsd_setattr() does do permissions checking via fh_verify() and\nnfsd_permission(), but those don't do all the same permissions checks\nthat are done by security_inode_setxattr() and its related LSM hooks do.\n\nSince nfsd_setattr() is the only consumer of security_inode_setsecctx(),\nsimplest solution appears to be to replace the call to\n__vfs_setxattr_noperm() with a call to __vfs_setxattr_locked().  This\nfixes the above issue and has the added benefit of causing nfsd to\nrecall conflicting delegations on a file when a client tries to change\nits security label.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-46695.html",
          "Description": "CVE-2024-46695"
        },
        {
          "URL": "https://bugzilla.suse.com/1230519",
          "Description": "SUSE Bug 1230519"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46774",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/rtas: Prevent Spectre v1 gadget construction in sys_rtas()\n\nSmatch warns:\n\n  arch/powerpc/kernel/rtas.c:1932 __do_sys_rtas() warn: potential\n  spectre issue 'args.args' [r] (local cap)\n\nThe 'nargs' and 'nret' locals come directly from a user-supplied\nbuffer and are used as indexes into a small stack-based array and as\ninputs to copy_to_user() after they are subject to bounds checks.\n\nUse array_index_nospec() after the bounds checks to clamp these values\nfor speculative execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-46774.html",
          "Description": "CVE-2024-46774"
        },
        {
          "URL": "https://bugzilla.suse.com/1230767",
          "Description": "SUSE Bug 1230767"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.1:kernel-source-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-rt-5.3.18-150300.187.1",
            "SUSE Linux Enterprise Micro 5.2:kernel-source-rt-5.3.18-150300.187.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}