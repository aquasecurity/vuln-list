{
  "Title": "SUSE-IU-2024:504-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2024:504-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2024-06-09T01:00:00Z",
    "CurrentReleaseDate": "2024-06-09T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-02-04T12:50:09Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2024:504-1 / google/sles-12-sp5-v20240609-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-12-sp5-v20240609-x86-64 contains the following changes:\nPackage fdupes was updated:\n\n- Apply \u0026quot;toctou-race-allows-arbitrary-file-deletion.patch\u0026quot; to fix a  race condition that could be exploited to delete arbitrary files.\n  This patch is a back-ported and simplified version of the commit\n  https://github.com/adrianlopezroche/fdupes/commit/85680897148f1ac33b55418e00334116e419717f\n  introduced upstream in release 2.2.0. [bsc#1200381]\n\nPackage glib2 was updated:\n\n- Add patches to fix CVE-2024-34397 (boo#1224044):  glib2-CVE-2024-34397-add-ref-count-types.patch\n  glib2-allocate-SignalSubscriber-structs-individually.patch\n  glib2-CVE-2024-34397.patch (glgo#GNOME/glib#3268).\n  glib2-fix-ibus-regression.patch (glgo#GNOME/glib#3353)\n\nPackage shadow was updated:\n\n- bsc#1188307: Fix passwd segfault  Add shadow-bsc1188307-passwd-segfault.patch\n\nPackage python-pyOpenSSL was updated:\n\n- Add CVE-2018-1000807-8_use_after_free_X509.patch to fix  CVE-2018-1000807 (bsc#1111635) and CVE-2018-1000808 (bsc#1111634)\n    fix a memory leak and a potential UAF and also #722 (#723)\n    sanity check\n    bump cryptography minimum version, add changelog\n- Add skip_user_after_free_tests.patch to pass the test suite.\n- bsc#1021578 add move_cryptography_backend_import.patch to avoid bad\n  interaction with python-cryptography package.\n\nPackage libfastjson was updated:\n\n- fix CVE-2020-12762 integer overflow and out-of-bounds write via a  large JSON file (bsc#1171479)\n  add 0001-Fix-CVE-2020-12762.patch\n\nPackage openssl-1_0_0 was updated:\n\n- Security fix: [bsc#1219243, CVE-2024-0727]  * Add NULL checks where ContentInfo data can be NULL\n  * Add openssl-CVE-2024-0727.patch\n\nPackage google-guest-oslogin was updated:\n\n- Fix file permissions for google_authorized_principals binary (bsc#1222171)\n- Update to version 20240311.00 (bsc#1218548, bsc#1221900, bsc#1221901)\n  * pam: Bring back pam's account management implementation (#133)\n  * Change error messages when checking login policy (#129)\n  * Remove quintonamore from OWNERS (#128)\n\n- Add explicit versioned dependency on google-guest-agent (bsc#1219642)\n\n- Update to version 20231116.00\n  * build: Fix DESTDIR concatenation (#124)\n- from version 20231113.00\n  * build: Fix clang build (#122)\n- from version 20231103.00\n  * Update owners (#121)\n\n- Update to version 20231101.00 (bsc#1216548, bsc#1216750)\n  * Fix HTTP calls retry logic (#117)\n\n- Update to version 20231004\n  * packaging: Make the dependency explicit (#120)\n\n- update to 20230926.00:\n  * fix suse build\n  * selinux: fix selinux build (#114)\n  * test: align CXX Flags\n  * sshca: Make the implementation more C++ like\n  * sshca: Add a SysLog wrapper\n  * oslogin_utils: introduce AuthorizeUser() API\n  * sshca: move it out of pam dir\n  * pam: start disabling the use of oslogin_sshca\n  * sshca: consider sshca API to assume a cert only\n  * authorized principals: introduce the new command\n  * authorize keys: update to use new APIs\n  * pam modules: remove pam_*_admin and update pam_*_login\n  * cache_refresh: should be catching by reference.\n\n- Update to version 20230823.00\n  * selinux: Add sshd_key_t type enforcement to trusted user ca (#113)\n- from version 20230822.00\n  * sshca: Add tests with fingerprint and multiple extensions (#111)\n- from version 20230821.01\n  * sshca: Support method token and handle multi line (#109)\n- from version 20230821.00\n  * Update owners (#110)\n\n- Update to version 20230808.00\n  * byoid: extract and apply the ca fingerprint to policy call (#106)\n\n- Update to version 20230502.00\n  * Improve the URL in 2fa prompt (#104)\n- from version 20230406.02\n  * Check open files (#101)\n- from version 20230406.01\n  * Initialize variables (#100)\n  * Fix formatting (#102)\n- from version 20230406.00\n  * PAM cleanup: remove duplicates (#97)\n- from version 20230405.00\n  * NSS cleanup (#98)\n- from version 20230403.01\n  * Cleanup Makefiles (#95)\n- from version 20230403.00\n  * Add anandadalton to the owners list (#96)\n\n- Update to version 20230217.00\n  * Update OWNERS (#91)\n- from version 20230202.00\n  * Update owners file (#89)\n\n- Update to version 20220721.00 (bsc#1202100, bsc#1202101)\n  * prune outdated info from readme (#86)\n- from version 20220714.00\n  * strip json-c version symbol (#84)\n- from version 20220622.00\n  * pam login: split conditions for logging (#83)\n\n- use pam_moduledir (boo#1191036)\n  * Support UsrMerge project\n\n- Update to version 20220411.00\n  * pam login: split conditions for logging (#83)\n\nPackage ncurses was updated:\n\n- Add patch ncurses-5.9-bsc1220061.patch (bsc#1220061, CVE-2023-45918)  * Backport from ncurses-6.4-20230615.patch\n    improve checks in convert_string() for corrupt terminfo entry\n\nPackage runc was updated:\n\n- Add upstream patch \u0026lt;https://github.com/opencontainers/runc/pull/4219\u0026gt; to  properly fix -ENOSYS stub on ppc64le. bsc#1192051 bsc#1221050\n  + 0001-bsc1221050-libct-seccomp-patchbpf-rm-duplicated-code.patch\n  + 0002-bsc1221050-seccomp-patchbpf-rename-nativeArch-linuxA.patch\n  + 0003-bsc1221050-seccomp-patchbpf-always-include-native-ar.patch\n\nPackage shim was updated:\n\n- Update shim to 15.8-150300.4.20.2 from SLE15-SP3  + Version: 15.8, \u0026quot;Thu Apr 18 2024\u0026quot;\n  + Update the SLE signatures\n  + Include the fixes for (bsc#1215099,CVE-2023-40546),\n    (bsc#1215098,CVE-2023-40547), (bsc#1215103,CVE-2023-40551),\n    (bsc#1215102,CVE-2023-40550), (bsc#1215101,CVE-2023-40549),\n    (bsc#1215100,CVE-2023-40548), bsc#1205588, bsc#1202120, bsc#1201066,\n    (bsc#1198458, CVE-2022-28737), bsc#1198101, bsc#1193315, bsc#1193282\n\nPackage kernel-default was updated:\n\n- blacklist.conf: update blacklist- commit 7f77e9d\n\n- Fix backport of :  NFS: Fix error handling for O_DIRECT write\n  scheduling (bsc#1224785).\n- commit e968faa\n\n- ALSA: usb-audio: Fix an out-of-bounds bug in\n  __snd_usb_parse_audio_interface() (CVE-2022-48701 bsc#1223921).\n- commit 6f798e9\n\n- Update\n  patches.suse/SUNRPC-fix-some-memleaks-in-gssx_dec_option_array.patch\n  (git-fixes CVE-2024-27388 bsc#1223744).\n- Update\n  patches.suse/s390-Once-the-discipline-is-associated-with-the-device-de.patch\n  (bsc#1141539 git-fixes CVE-2024-27054 bsc#1223819).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-command-flush-on-cable-pull.patch\n  (bsc1221816 CVE-2024-26931 bsc#1223627).\n- Update patches.suse/scsi-qla2xxx-Fix-double-free-of-fcport.patch\n  (bsc1221816 CVE-2024-26929 bsc#1223715).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-double-free-of-the-ha-vp_map-pointe.patch\n  (bsc1221816 CVE-2024-26930 bsc#1223626).\n- commit daf9a87\n\n- Update\n  patches.suse/SUNRPC-fix-a-memleak-in-gss_import_v2_context.patch\n  (git-fixes CVE-2023-52653 bsc#1223712).\n- Update patches.suse/aio-fix-mremap-after-fork-null-deref.patch\n  (git-fixes CVE-2023-52646 bsc#1223432).\n- commit 793a07e\n\n- Update\n  patches.suse/i40e-Fix-kernel-crash-during-module-removal.patch\n  (git-fixes CVE-2022-48688 bsc#1223953).\n- Update\n  patches.suse/ipv6-sr-fix-out-of-bounds-read-when-setting-HMAC-dat.patch\n  (bsc#1211592 CVE-2023-2860 CVE-2022-48687 bsc#1223952).\n- Update\n  patches.suse/s390-dasd-fix-Oops-in-dasd_alias_get_start_dev-due-to-missing-pavgroup\n  (git-fixes CVE-2022-48636 bsc#1223512).\n- Update\n  patches.suse/scsi-mpt3sas-Fix-use-after-free-warning.patch\n  (git-fixes CVE-2022-48695 bsc#1223941).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-memory-leak-in-__qlt_24xx_handle_ab.patch\n  (bsc#1203935 CVE-2022-48650 bsc#1223509).\n- commit cc68904\n\n- Update\n  patches.suse/net-dsa-fix-a-crash-if-get_sset_count-fails.patch\n  (CVE-2021-47146 bsc#1221979 CVE-2021-47159 bsc#1221967).\n- Update\n  patches.suse/scsi-ufs-core-Improve-SCSI-abort-handling.patch\n  (bsc#11222671 CVE-2021-47188 bsc#1222671).\n- commit 5a613f4\n\n- Fix references of\n  patches.suse/net-dsa-fix-a-crash-if-get_sset_count-fails.patch\n  This fix actually refers to different CVE and bug report. Fix the error.\n- commit b797fc2\n\n- drm/tegra: dsi: Add missing check for of_find_device_by_node (CVE-2023-52650 bsc#1223770)\n- commit 52453b3\n\n- fs: sysfs: Fix reference leak in sysfs_break_active_protection() (CVE-2024-26993 bsc#1223693)\n- commit d5b445d\n\n- usb: dwc2: Fix memory leak in dwc2_hcd_init.\n- commit b68c644\n\n- Input: ipaq-micro-keys - add error handling for devm_kmemdup.\n- commit 8755dbb\n\n- Input: xpad - add PXN V900 support.\n- commit fbd5f3f\n\n- Input: adxl34x - do not hardcode interrupt trigger type\n  (git-fixes).\n- commit 926a03d\n\n- blacklist.conf: cleanup surpressing a warning\n- commit 922f659\n\n- Input: drv260x - sleep between polling GO bit (git-fixes).\n- commit e9e8d04\n\n- blacklist.conf: cleanup, not a fix, no code change\n- commit 9cb5758\n\n- blacklist.conf: driver not compiled\n- commit a3fa3df\n\n- blacklist.conf: driver not compiled\n- commit 9dfacec\n\n- blacklist.conf: driver not compiled\n- commit 1aef6fe\n\n- drm/amd/display: Add a dc_state NULL check in dc_state_release (CVE-2024-26948 bsc#1223664)\n- commit 04ae1fa\n\n- blacklist.conf: this patch enables features only\n- commit b3e7c52\n\n- blacklist.conf: false positive\n- commit 88b62ef\n\n- USB: core: Fix deadlock in usb_deauthorize_interface().\n- commit ab56ab9\n\n- USB: usb-storage: Prevent divide-by-0 error in\n  isd200_ata_command (git-fixes).\n- commit f114b54\n\n- usb: roles: don't get/set_role() when usb_role_switch is\n  unregistered.\n- commit d121124\n\n- usb: mon: Fix atomicity violation in mon_bin_vma_fault\n  (git-fixes).\n- commit 0605a2c\n\n- blacklist.conf: not enabled\n- commit 7aaa582\n\n- blacklist.conf: kABI\n- commit d241153\n\n- drivers: usb: host: Fix deadlock in oxu_bus_suspend()\n  (git-fixes).\n- commit 4bfa035\n\n- blacklist.conf: add two fuse commits from git-fixes\n- commit 57c7ed8\n\n- fuse: don't unhash root (bsc#1223954).\n- commit 4838661\n\n- tun: limit printing rate when illegal packet received by tun\n  dev (bsc#1223745 CVE-2024-27013).\n- net/mlx5e: Prevent deadlock while disabling aRFS (bsc#1223735\n  CVE-2024-27014).\n- nfp: flower: handle acti_netdevs allocation failure (bsc#1223827\n  CVE-2024-27046).\n- commit bb18705\n\n- tipc: fix a possible memleak in tipc_buf_append (bsc#1221977\n  CVE-2021-47162).\n- commit 503e448\n\n- media: usbtv: Remove useless locks in usbtv_video_free()\n  (CVE-2024-27072 bsc#1223837).\n- commit 784e536\n\n- media: dvb-frontends: avoid stack overflow warnings with clang\n  (CVE-2024-27075 bsc#1223842).\n- commit 134dc5e\n\n- media: ttpci: fix two memleaks in budget_av_attach\n  (CVE-2024-27073 bsc#1223843).\n- commit 13b28d2\n\n- media: go7007: fix a memleak in go7007_load_encoder\n  (CVE-2024-27074 bsc#1223844).\n- commit 54185dc\n\n- media: edia: dvbdev: fix a use-after-free (CVE-2024-27043\n  bsc#1223824).\n- commit 2732be2\n\n- s390/mm: Fix storage key clearing for guest huge pages\n  (git-fixes bsc#1223885).\n- commit cd536ee\n\n- s390/mm: Fix clearing storage keys for huge pages (git-fixes\n  bsc#1223883).\n- commit a8f7fd9\n\n- media: v4l2-tpg: fix some memleaks in tpg_alloc (CVE-2024-27078\n  bsc#1223781).\n- commit 9ec09ea\n\n- NTB: fix possible name leak in ntb_register_device()\n  (CVE-2023-52652 bsc#1223686).\n- commit ca5484d\n\n- scsi: ufs: core: Improve SCSI abort handling (bsc#11222671,\n  CVE-2021-47188).\n- blacklist.conf: remove 3ff1f6b\n- commit 9ba0cd1\n\n- kABI workaround for cec_adapter (CVE-2024-23848 bsc#1219104).\n- media: cec: core: avoid recursive cec_claim_log_addrs\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: core: avoid confusing \u0026quot;transmit timed out\u0026quot; message\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: cec-api: add locking in cec_release()\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: cec-adap: always cancel work in cec_transmit_msg_fh\n  (CVE-2024-23848 bsc#1219104).\n- commit 6debb18\n\n- media: cec: abort if the current transmit was canceled\n  (CVE-2024-23848 bsc#1219104).\n- commit 331f0d4\n\n- cachefiles: fix memory leak in cachefiles_add_cache()\n  (bsc#1222976 CVE-2024-26840).\n- commit 7ab2bde\n\n- net/bnx2x: Prevent access to a freed page in page_pool\n  (bsc#1223049 CVE-2024-26859).\n- commit d2c8d25\n\n- spi: spi-fsl-dspi: Fix a resource leak in an error handling path\n  (CVE-2021-47161 bsc#1221966).\n- commit 86c2723\n\n- amdkfd: use calloc instead of kzalloc to avoid integer overflow (CVE-2024-26817 bsc#1222812)\n- commit e67f0f8\n\n- blacklist.conf: Append 'drm/amdgpu: fix use-after-free bug'\n- commit f438d4d\n\n- Update\n  patches.suse/smb3-fix-temporary-data-corruption-in-insert-range.patch\n  (bsc#1190317 CVE-2022-48667 bsc#1223518).\n- commit 91d9162\n\n- Update\n  patches.suse/smb3-fix-temporary-data-corruption-in-collapse-range.patch\n  (bsc#1190317 CVE-2022-48668 bsc#1223516).\n- commit 10d5c12\n\n- net: fujitsu: fix potential null-ptr-deref (bsc#1221972\n  CVE-2021-47149).\n- commit 9abeb19\n\n- tipc: skb_linearize the head skb when reassembling msgs\n  (bsc#1221977 CVE-2021-47162).\n- commit ba440f6\n\n- net: dsa: fix a crash if -\u0026gt;get_sset_count() fails\n  (CVE-2021-47146 bsc#1221979).\n- commit 599796c\n\n- mld: fix panic in mld_newpack() (CVE-2021-47146 bsc#1221979).\n- commit e3d5602\n\n- netfilter: nf_tables: disallow timeout for anonymous sets\n  (CVE-2023-52620 bsc#1221825).\n- commit f690b72\n\n- net/ipv6: avoid possible UAF in ip6_route_mpath_notify()\n  (CVE-2024-26852 bsc#1223057)\n- commit 598df4c\n\n- Update\n  patches.suse/s390-Once-the-discipline-is-associated-with-the-device-de.patch\n  (bsc#1141539 git-fixes).\n- commit b8b94c0\n\n- quota: Fix potential NULL pointer dereference (bsc#1223060\n  CVE-2024-26878).\n- commit 983d363\n\n- do_sys_name_to_handle(): use kzalloc() to fix kernel-infoleak\n  (bsc#1223198 CVE-2024-26901).\n- commit 2f53016\n\n- blk-mq: fix IO hang from sbitmap wakeup race (bsc#1222357\n  CVE-2024-26671).\n- commit ecdc50b\n\n- ext4: avoid allocating blocks from corrupted group in\n  ext4_mb_find_by_goal() (bsc#1222613 CVE-2024-26772).\n- commit 3d3003a\n\n- PM / devfreq: Fix buffer overflow in trans_stat_show\n  (CVE-2023-52614 bsc#1221617).\n- commit ad2729f\n\n- net: ice: Fix potential NULL pointer dereference in\n  ice_bridge_setlink() (bsc#1223051 CVE-2024-26855).\n- geneve: make sure to pull inner header in geneve_rx()\n  (bsc#1223058 CVE-2024-26857).\n- ppp_async: limit MRU to 64K (bsc#1222379 CVE-2024-26675).\n- ipvlan: Fix out-of-bound bugs caused by unset skb-\u0026gt;mac_header\n  (bsc#1223513 CVE-2022-48651).\n- commit bc8fe89\n\n- RDMA/mlx5: Fix fortify source warning while accessing Eth segment (bsc#1223203 CVE-2024-26907)\n- commit 1c532b6\n\n- regmap: prevent noinc writes from clobbering cache (bsc#1221162\n  CVE-2023-52488).\n- regmap: fix page selection for noinc writes (bsc#1221162\n  CVE-2023-52488).\n- regmap: fix page selection for noinc reads (bsc#1221162\n  CVE-2023-52488).\n- commit dc5bde0\n\n- scripts/common-functions: cve2cvss fix CVE matching\n  CVE-2023-4244:\n  cvss:\n  - version: 3.1\n    score: 7\n    vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H\n  CVE-2023-42445:\n  cvss:\n  - version: 3.1\n    score: 6.8\n    vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:H\n  CVE-2023-4244 will mismatch. Thanks to Marcus for spotting!\n- commit 1e0c847\n\n- blacklist.conf: false positive\n- commit 17b05a2\n\n- usb: dwc2: check return value after calling\n  platform_get_resource() (git-fixes).\n- commit 831627d\n\n- usb: dwc3: gadget: Ignore EP queue requests during bus reset\n  (git-fixes).\n- commit 270950d\n\n- drm/amdgpu: validate the parameters of bo mapping operations more (CVE-2024-26922 bsc#1223315)\n- commit 1a7d0fd\n\n- i40e: Fix NULL ptr dereference on VSI filter sync (bsc#1222666\n  CVE-2021-47184).\n- commit 1ad3e1d\n\n- usb: gadget: Fix issue with config_ep_by_speed function\n  (git-fixes).\n- commit e3f4200\n\n- x86/boot: Ignore relocations in .notes sections in walk_relocs() too (bsc#1222624 CVE-2024-26816).\n- commit b878a00\n\n- x86, relocs: Ignore relocations in .notes section (bsc#1222624 CVE-2024-26816).\n- commit d091560\n\n- blacklist.conf: Add 246f80a0b17f8 (\u0026quot;sh: push-switch: Reorder cleanup operations to avoid use-after-free bug\u0026quot;)\n- commit 8e38656\n\n- PM / devfreq: Synchronize devfreq_monitor_[start/stop]\n  (CVE-2023-52635 bsc#1222294).\n- commit faf3604\n\n- Update\n  patches.suse/Bluetooth-rfcomm-Fix-null-ptr-deref-in-rfcomm_check_-2535b848.patch\n  (bsc#1219170 CVE-2024-22099 CVE-2024-26903 bsc#1223187).\n- Update\n  patches.suse/aoe-fix-the-potential-use-after-free-problem-in-aoec.patch\n  (bsc#1218562 CVE-2023-6270 CVE-2024-26898 bsc#1223016).\n- Update\n  patches.suse/net-sched-act_mirred-don-t-override-retval-if-we-alr.patch\n  (CVE-2024-26733 bsc#1222585 CVE-2024-26739 bsc#1222559).\n- Update\n  patches.suse/sr9800-Add-check-for-usbnet_get_endpoints.patch\n  (git-fixes CVE-2024-26651 bsc#1221337).\n- commit f0c3935\n\n- Update\n  patches.suse/msft-hv-2480-x86-hyperv-Fix-NULL-deref-in-set_hv_tscchange_cb-if-.patch\n  (git-fixes CVE-2021-47217 bsc#1222836).\n- Update\n  patches.suse/net-dpaa2-eth-fix-use-after-free-in-dpaa2_eth_remove.patch\n  (git-fixes CVE-2021-47204 bsc#1222787).\n- Update patches.suse/scsi-advansys-Fix-kernel-pointer-leak.patch\n  (git-fixes CVE-2021-47216 bsc#1222876).\n- Update\n  patches.suse/scsi-lpfc-Fix-use-after-free-in-lpfc_unreg_rpi-routi.patch\n  (bsc#1192145 CVE-2021-47198 bsc#1222883).\n- commit 1aa3f8e\n\n- scripts/check-kernel-fix: hide add references hint\n  We would like to handle reference updates in batches by mass-cve tooling\n  so prevent potential races when people add references manually. Still\n  show this in the verbose mode though.\n- commit 44b9e4b\n\n- scripts/install-git-hooks: Use --git-common-dir for $GIT_DIR\n  This option works better for the repo via git-worktree\n- commit 5ef3652\n\n- bpf: Fix stackmap overflow check on 32-bit arches (bsc#1223035\n  CVE-2024-26883).\n- bpf: Fix hashtab overflow check on 32-bit arches (bsc#1223189\n  CVE-2024-26884).\n- bpf: Check for integer overflow when using roundup_pow_of_two()\n  (bsc#1223035 CVE-2024-26883).\n- commit 4249641\n\n- scripts/check-kernel-fix: add -c CVE-XXXX-YYY support\n  Older CVEs are not tracked by VULNS_GIT so give those a chance to use\n  the same workflow by just giving the CVE number.\n- commit eac99ec\n\n- scripts/check-kernel-fix: integrate suse-get-maintainers\n- commit fd66b07\n\n- IB/hfi1: Fix a memleak in init_credit_return (CVE-2024-26839 bsc#1222975)\n- commit 1b9aeec\n\n- Refresh\n  patches.suse/NFS-add-atomic_open-for-NFSv3-to-handle-O_TRUNC-corr.patch.\n  Handle too-long file names.\n- commit d3b61d6\n\n- scripts/check-kernel-fix: improve branch output elimination\n  If the merge origin branch is only missing references then it doesn't\n  make sense to report missing patch or references in the target branch\n  as it will get all from the merge origin.\n- commit 5728eb5\n\n- scripts/check-kernel-fix: improve branch output elimination\n  ./scripts/check-kernel-fix CVE-2024-26805\n  661779e1fcaf (\u0026quot;netlink: Fix kernel-infoleak-after-free in __skb_datagram_iter\u0026quot;) merged v6.8-rc7~26^2~35\n  Fixes: 1853c9496460 (\u0026quot;netlink, mmap: transform mmap skb into full skb on taps\u0026quot;) merged v4.3-rc3~13^2~83\n  Security fix for CVE-2024-26805 bsc#1222630 with CVSS 5.5\n  ..............................\n  ACTION NEEDED!\n  SLE15-SP6-RT: MANUAL: backport 661779e1fcafe1b74b3f3fe8e980c1e207fea1fd (Fixes 1853c9496460)\n  ALP-current-RT: MANUAL: backport 661779e1fcafe1b74b3f3fe8e980c1e207fea1fd (Fixes 1853c9496460)\n  SLE15-SP5-RT: MANUAL: backport 661779e1fcafe1b74b3f3fe8e980c1e207fea1fd (Fixes 1853c9496460)\n  SLE12-SP3-TD: MANUAL: backport 661779e1fcafe1b74b3f3fe8e980c1e207fea1fd (Fixes 1853c9496460)\n  Note how *RT branches are printed even though SLE15-SP6 resp SLE15-SP5\n  already have the fix. The current elimination logic only drops branches\n  which are in the same state as their merge origin.\n  mb_line processing is incorrect when that state differs. Fix that by\n  looking up the state rather than play with sed and grep for identical\n  output.\n  With this patch applied\n  [...]\n  ACTION NEEDED!\n  SLE12-SP3-TD: MANUAL: backport 661779e1fcafe1b74b3f3fe8e980c1e207fea1fd (Fixes 1853c9496460)\n- commit 2e74804\n\n- wifi: b43: Stop/wake correct queue in DMA Tx path when QoS is\n  disabled (CVE-2023-52644 bsc#1222961).\n- commit 411fc96\n\n- clk: sunxi-ng: Unregister clocks/resets when unbinding\n  (CVE-2021-47205 bsc#1222888).\n- commit 67523b6\n\n- ALSA: usb-audio: fix null pointer dereference on pointer cs_desc\n  (CVE-2021-47211 bsc#1222869).\n- commit a86f817\n\n- Update\n  patches.suse/scsi-lpfc-Fix-list_add-corruption-in-lpfc_drain_txq.patch\n  (bsc#1190576 CVE-2021-47203 bsc#1222881).\n- commit 2cb2a3c\n\n- ALSA: gus: fix null pointer dereference on pointer block\n  (CVE-2021-47207 bsc#1222790).\n- commit 2c3256c\n\n- wifi: mac80211: fix race condition on enabling fast-xmit\n  (CVE-2024-26779 bsc#1222772).\n- commit 5e02fca\n\n- wifi: rt2x00: restart beacon queue when hardware reset\n  (CVE-2023-52595 bsc#1221046).\n- commit 671852b\n\n- ceph: prevent use-after-free in encode_cap_msg() (bsc#1222503\n  CVE-2024-26689).\n- commit 09813ff\n\n- blacklist.conf: Append 'drm/amdgpu: Fix variable 'mca_funcs' dereferenced before NULL check in 'amdgpu_mca_smu_get_mca_entry()''\n- commit cde121c\n\n- Update patches.suse/arp-Prevent-overflow-in-arp_req_get.patch\n- fix build warning\n- commit f10c34a\n\n- kABI: regmap: Add regmap_noinc_read/write API (bsc#1221162\n  CVE-2023-52488).\n- commit fb0c9d2\n\n- regmap: Add regmap_noinc_write API (bsc#1221162 CVE-2023-52488).\n- regmap: Add regmap_noinc_read API (bsc#1221162 CVE-2023-52488).\n- commit 60efad2\n\n- usb: roles: fix NULL pointer issue when put module's reference\n  (bsc#1222609 CVE-2024-26747).\n- commit 73af327\n\n- serial: sc16is7xx: convert from _raw_ to _noinc_ regmap\n  functions for FIFO (bsc#1221162 CVE-2023-52488).\n- commit a689f3e\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch (bsc#1222952)\n  Don't call set_cpu_caps when calling set_cpu_bug, this causes problems\n  with overlapping feature/bug ints. Directly call set_bit witht he\n  correct parameters.\n- commit 16e52e8\n\n- scripts/check-kernel-fix: allow explicit git fixes\n- scripts/common-functions:\n  change -f from flat mode to -f fixes and use -t for the flat mode.\n  It seems that the security team is not using the flat mode anyway so we\n  might drop it eventually. Let's keep it to play around, it is a trivial\n  code anyway.\n  - f \u0026quot;sha\u0026quot;  now allows to specify explicit Fixes commit shas which would\n  extend existing ones.\n- commit 468ac9c\n\n- md/raid5: fix atomicity violation in raid5_cache_count (bsc#1219169, CVE-2024-23307).\n- commit c0dbc35\n\n- ext4: avoid allocating blocks from corrupted group in\n  ext4_mb_try_best_found() (bsc#1222618 CVE-2024-26773).\n- commit 4110538\n\n- thermal: Fix NULL pointer dereferences in of_thermal_ functions (CVE-2021-47202 bsc#1222878)\n- commit 08cf92c\n\n- md/raid5: fix atomicity violation in raid5_cache_count\n  (bsc#1219169, CVE-2024-23307).\n- commit 391774d\n\n- fbdev: sis: Error out if pixclock equals zero (bsc#1222765 CVE-2024-26777)\n- commit 283e632\n\n- fbdev: savage: Error out if pixclock equals zero (bsc#1222770 CVE-2024-26778)\n- commit c2c54cf\n\n- drm: Don't unref the same fb many times by mistake due to deadlock handling (CVE-2023-52486 bsc#1221277).\n- commit 5843530\n\n- blacklist.conf: add one more PCI git-fixes\n- commit 7baca5d\n\n- IB/ipoib: Fix mcast list locking (CVE-2023-52587 bsc#1221082)\n- commit 94cde16\n\n- RDMA/IPoIB: Fix error code return in ipoib_mcast_join (bsc#1221082)\n- commit 348c98c\n\n- RDMA/srp: Do not call scsi_done() from srp_abort() (CVE-2023-52515 bsc#1221048)\n- commit d5d3a97\n\n- RDMA/qedr: Fix qedr_create_user_qp error flow (bsc#1222677 CVE-2024-26743)\n- commit c49697b\n\n- RDMA/srpt: Support specifying the srpt_service_guid parameter (bsc#1222449 CVE-2024-26744)\n- commit 00d0add\n\n- NFS: avoid spurious warning of lost lock that is being unlocked\n  (bsc#1221791).\n- commit 63a2e3f\n\n- Update\n  patches.suse/NFS-add-atomic_open-for-NFSv3-to-handle-O_TRUNC-corr.patch\n  (bsc#1219847 bsc#1221862).\n  Fix a NULL-pointer-deref bug.  Make the patch closer to the patch I sent\n  upstream.\n- commit 5f62723\n\n- dm-crypt: don't modify the data when using authenticated\n  encryption (bsc#1222720, CVE-2024-26763).\n- commit 3e74213\n\n- scsi: core: Fix scsi_mode_sense() buffer length handling\n  (bsc#1222662 CVE-2021-47182).\n- commit 09c6ab5\n\n- scripts/check-kernel-fix: Do not report missing references for EB branches\n  After discussion with Christian Hueller (EB branches maintainer) we have\n  concluded that updating references to CVE fixes which are already in EB\n  branches is not really adding any value so let's just not report them\n- commit 0fddb67\n\n- scripts/check-kernel-fix: require both bsc and cvss for security fixes\n  cve2bsc DB might be out of sync. This could be annoying when dealing\n  with freshly coming CVE bugs where the bsc# is known and proposed\n  references addition miss the bug number.\n  Enforce both bsc and CVSS data for security bugs and allow to\n  provide/override the bug number by -b bsc#NUMBER parameter.\n- commit cc2be7b\n\n- dmaengine: ti: edma: Add some null pointer checks to the edma_probe (CVE-2024-26771 bsc#1222610)\n- commit 01a7e9c\n\n- netlink: Fix kernel-infoleak-after-free in __skb_datagram_iter\n  (bsc#1222630 CVE-2024-26805).\n- commit ad84c88\n\n- Update\n  patches.suse/gtp-fix-use-after-free-and-null-ptr-deref-in-gtp_gen.patch\n  (bsc#1222428 CVE-2024-26793 CVE-2024-26754 bsc#1222632).\n- commit b4d8fa6\n\n- Update\n  patches.suse/btrfs-fix-memory-ordering-between-normal-and-ordered-work-functions.patch\n  (git-fixes CVE-2021-47189 bsc#1222706).\n- commit d1ad6f0\n\n- tty: tty_buffer: Fix the softlockup issue in flush_to_ldisc\n  (bsc#1222669 CVE-2021-47185).\n- commit 24cc88e\n\n- PCI: pciehp: Add pciehp_set_indicators() to set both indicators\n  (git-fixes).\n- commit deaddb6\n\n- PCI/ASPM: Reduce severity of common clock config message\n  (git-fixes).\n- commit 00c0986\n\n- PCI/ASPM: Don't warn if already in common clock mode\n  (git-fixes).\n- commit 231253b\n\n- PCI/ASPM: Factor out pcie_wait_for_retrain() (git-fixes).\n- PCI/ASPM: Return 0 or -ETIMEDOUT from  pcie_retrain_link()\n  (git-fixes).\n- PCI: Rework pcie_retrain_link() wait loop (git-fixes).\n- commit 4a0cd5a\n\n- scripts/check-kernel-fix: bail out without CVSS score\n  cve2cvss DB takes quite some time to sync and it is less confusing to\n  enfore cache refresh or provide manual scoring (via -s) as that tends to\n  be available in bugzilla most of the time.\n- commit bdee7f8\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n- commit 70aa480\n\n- Refresh patches.suse/x86-bhi-Add-BHI-mitigation-knob.patch.\n  Check for bug presence with cpu_has_bug rather than cpu_has so that\n  overlapping bug/feature bits are handled correctly\n- commit ec98c66\n\n- Update\n  patches.suse/scsi-lpfc-Fix-link-down-processing-to-address-NULL-p.patch\n  (bsc#1192145 CVE-2021-47183 bsc#1222664).\n- commit b599f2b\n\n- Update\n  patches.suse/usb-musb-tusb6010-check-return-value-after-calling-p.patch\n  (git-fixes CVE-2021-47181 bsc#1222660).\n- commit a0f1eaa\n\n- scripts/common-functions: cve2sha: fix multiline output from vulns DB\n  $ ./scripts/check-kernel-fix -s 5.5 CVE-2021-47181\n  failes with uknown sha for the given CVE because vulns.git cve_search\n  returns unexpected multi-line output\n  $ scripts/cve_search CVE-2021-47181\n  CVE-2021-47181 is assigned to git id 14651496a3de6807a17c310f63c894ea0c5d858e\n  f08adf5add9a071160c68bb2a61d697f39ab0758\n  Filter out the first line only to handle that\n- commit 970f746\n\n- tty: n_gsm: require CAP_NET_ADMIN to attach N_GSM0710 ldisc\n  (bsc#1222619).\n- commit 94fc6e9\n\n- PCI: Mark 3ware-9650SE Root Port Extended Tags as broken\n  (git-fixes).\n- PCI/DPC: Print all TLP Prefixes, not just the first (git-fixes).\n- PCI/MSI: Prevent MSI hardware interrupt number truncation\n  (git-fixes).\n- PCI/sysfs: Protect driver's D3cold preference from user space\n  (git-fixes).\n- PCI/ASPM: Use RMW accessors for changing LNKCTL (git-fixes).\n- PCI: pciehp: Use RMW accessors for changing LNKCTL (git-fixes).\n- PCI: Make link retraining use RMW accessors for changing LNKCTL\n  (git-fixes).\n- PCI: Add locking to RMW PCI Express Capability Register\n  accessors (git-fixes).\n- kABI: PCI: Add locking to RMW PCI Express Capability Register\n  accessors (kabi).\n- PCI: qcom: Use DWC helpers for modifying the read-only DBI\n  registers (git-fixes).\n- PCI: qcom: Disable write access to read only registers for IP\n  v2.3.3 (git-fixes).\n- PCI: Add function 1 DMA alias quirk for Marvell 88SE9235\n  (git-fixes).\n- PCI: pciehp: Cancel bringup sequence if card is not present\n  (git-fixes).\n- PCI/ASPM: Avoid link retraining race (git-fixes).\n- commit 5d813c6\n\n- arp: Prevent overflow in arp_req_get() (CVE-2024-26733\n  bsc#1222585).\n- commit 64afd8b\n\n- net/sched: act_mirred: don't override retval if we already\n  lost the skb (CVE-2024-26733 bsc#1222585).\n- commit ec837ad\n\n- blacklist.conf: update blacklist\n- commit f1ca6cb\n\n- PCI/ASPM: Disable ASPM on MFD function removal to avoid\n  use-after-free (git-fixes).\n- PCI: pciehp: Fix AB-BA deadlock between reset_lock and\n  device_lock (git-fixes).\n- PCI: switchtec: Return -EFAULT for copy_to_user() errors\n  (git-fixes).\n- PCI: Avoid FLR for AMD FCH AHCI adapters (git-fixes).\n- PCI/IOV: Enlarge virtfn sysfs name buffer (git-fixes).\n- PCI: hotplug: Allow marking devices as disconnected during\n  bind/unbind (git-fixes).\n- PCI: dwc: Add unroll iATU space support to dw_pcie_disable_atu()\n  (git-fixes).\n- PCI: Add ACS quirk for Broadcom BCM5750x NICs (git-fixes).\n- commit 60d94f2\n\n- PCI: endpoint: Don't stop controller when unbinding endpoint\n  function (git-fixes).\n- PCI: qcom: Fix unbalanced PHY init on probe errors (git-fixes).\n- PCI: Avoid pci_dev_lock() AB/BA deadlock with\n  sriov_numvfs_store() (git-fixes).\n- PCI/PM: Power up all devices during runtime resume (git-fixes).\n- PCI/AER: Clear MULTI_ERR_COR/UNCOR_RCV bits (git-fixes).\n- PCI: aardvark: Fix setting MSI address (git-fixes).\n- PCI: aardvark: Fix support for MSI interrupts (git-fixes).\n- commit fd2813d\n\n- Refresh\n  patches.suse/Bluetooth-btsdio-fix-use-after-free-bug-in-btsdio_re.patch.\n  Add alternate ID for stable\n- commit 38c4e25\n\n- Bluetooth: btqcomsmd: Fix command timeout after setting BD\n  address (git-fixes).\n- commit de57587\n\n- Bluetooth: hci_intel: Add check for platform_driver_register\n  (git-fixes).\n- commit 0e58b3a\n\n- Bluetooth: btqca: Introduce HCI_EV_VENDOR and use it\n  (git-fixes).\n- commit 7e74176\n\n- Bluetooth: btqca: Fixed a coding style error (git-fixes).\n- commit 0f83a52\n\n- blacklist.conf: false positive (introduced v5.14, not backported)\n- commit e867532\n\n- ext4: fix double-free of blocks due to wrong extents moved_len\n  (bsc#1222422 CVE-2024-26704).\n- commit da029ac\n\n- Refresh\n  patches.suse/bpf-sockmap-Prevent-lock-inversion-deadlock-in-map-d.patch.\n- commit 6490813\n\n- gtp: fix use-after-free and null-ptr-deref in gtp_newlink()\n  (bsc#1222428 CVE-2024-26793).\n- gtp: fix use-after-free and null-ptr-deref in\n  gtp_genl_dump_pdp() (bsc#1222428 CVE-2024-26793).\n- commit 9c6b7d6\n\n- scripts/git_sort/git_sort.py:\n  Add Len Brown's kernel subtree\n- commit 3e92416\n\n- nfsd: Fix error cleanup path in nfsd_rename() (bsc#1221044\n  CVE-2023-52591).\n- commit b8b869c\n\n- usb: musb: Modify the \u0026quot;HWVers\u0026quot; register address (git-fixes).\n- commit d99cd58\n\n- blacklist.conf: This is a feature, not a fix\n- commit f6334d7\n\n- sr9800: Add check for usbnet_get_endpoints (git-fixes).\n- commit 24ceaa4\n\n- blacklist.conf: add unneeded PCI git-fixes\n- commit beed85d\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n  Fix aliasing problems if we have an extended capability which aliases a\n  non-extended bug bit. The fix is to always ensure that bug bits related\n  functionality doesn't use the \u0026quot;generic\u0026quot; cap functionality.\n- commit c674af2\n\n- Update\n  patches.suse/KVM-s390-vsie-fix-race-during-shadow-creation.patch\n  (git-fixes bsc#1220613 CVE-2023-52639 bsc#1222300).\n- Update\n  patches.suse/netfilter-nftables-exthdr-fix-4-byte-stack-OOB-write.patch\n  (CVE-2023-4881 bsc#1215221 CVE-2023-52628 bsc#1222117).\n- commit 5564fa1\n\n- mass-cve: Case insensitive references detection\n  Only add reference when it is new (regardless of case).\n- commit 9944f70\n\n- scripts/check-kernel-fix: implement -s CVSS option\n- commit b759632\n\n- scripts/check-kernel-fix: clarify no CVSS assignment\n- commit 3d658ea\n\n- mass-cve: Fix path to git repos\n  Specifying only --git-dir ends up with checking out files to CWD and to\n  under $VULNS_GIT. `git -C` should fix all various setups (worktrees or\n  not).\n- commit ad32354\n\n- nfsd: Fix error cleanup path in nfsd_rename() (git-fixes).\n- commit c8d258d\n\n- scripts/check-kernel-fix: Handled unknown branches more gracefully\n- scripts/common-functions:\n  This doesn't happen often. Usually when branches.conf doesn't match the\n  kernel-source.git tree because of renaming. git fetch should fix those\n  so be more helpuful to poor users.\n- commit 7d296f5\n\n- scripts/common-functions: silenc errors when forcibly removing cache files\n- commit f76f1c4\n\n- x86/bhi: Mitigate KVM by default (bsc#1217339 CVE-2024-2201).\n- commit 7079142\n\n- scripts/common-functions: call out upstream patches with no Fixes tag\n- commit 4d33f71\n\n- x86/bhi: Add BHI mitigation knob (bsc#1217339 CVE-2024-2201).\n- Update config files.\n- commit 41d6371\n\n- x86/bhi: Enumerate Branch History Injection (BHI) bug (bsc#1217339 CVE-2024-2201).\n- commit 2432a6f\n\n- x86/bhi: Define SPEC_CTRL_BHI_DIS_S (bsc#1217339 CVE-2024-2201).\n- commit fe53768\n\n- x86/bhi: Add support for clearing branch history at syscall entry (bsc#1217339 CVE-2024-2201).\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n- commit 955ab56\n\n- Fixup NULL ptr dereference due to mistake in backporting in\n  patches.suse/ext2-Avoid-reading-renamed-directory-if-parent-does-.patch.\n- commit 55001e0\n\n- Delete\n  patches.suse/x86-bugs-Fix-the-SRSO-mitigation-on-Zen3-4.patch.\n  the kernel fails to boot on x86:\n  [    0.048461] MDS: Vulnerable: Clear CPU buffers attempted, no microcode\n  [    0.048698] MMIO Stale Data: Unknown: No mitigations\n  qemu-system-x86_64: terminating on signal 15 from pid 42034 (timeout)\n- commit 035c88f\n\n- x86/cpufeature: Add missing leaf enumeration (bsc#1217339 CVE-2024-2201).\n- commit 248bb60\n\n- Update references\n- commit 1bab65d\n\n- scsi: lpfc: Fix a possible data race in\n  lpfc_unregister_fcf_rescan() (bsc#1219618 CVE-2024-24855).\n- commit 6004b44\n\n- scripts/check-kernel-fix: document LINUX_GIT requirement\n- scripts/common-functions:\n- commit 4f88751\n\n- media: xc4000: Fix atomicity violation in xc4000_get_frequency\n  (git-fixes bsc#1219623 CVE-2024-24861).\n- commit ad0b314\n\n- scripts/check-kernel-fix: add flat mode\n  Talked to Robert Frohl from the security team and he exaplained that\n  they would appreciate a mode which doesn't do any filtering because\n  the team has to track even those products which are not required to\n  publish fixes. -f should achieve that\n- commit dfb0710\n\n- x86/bugs: Fix the SRSO mitigation on Zen3/4 (git-fixes).\n- commit 8032e89\n\n- mass-cve: Hide unimportant make messages\n  Hide data preprocessing messages, preserve messages that relate to git\n  operations.\n- commit d5ea4b9\n\n- bpf, sockmap: Prevent lock inversion deadlock in map delete elem\n  (bsc#1209657 CVE-2023-0160).\n- commit 40497a8\n\n- bpf, sockmap: Fix preempt_rt splat when using raw_spin_lock_t\n  (git-fixes).\n- commit 3c6384f\n\n- bnx2x: Fix enabling network interfaces without VFs (git-fixes).\n- commit b60bea3\n\n- ethernet: myri10ge: Fix missing error code in myri10ge_probe()\n  (git-fixes).\n- commit 71a7d56\n\n- bnx2x: Fix missing error code in bnx2x_iov_init_one()\n  (git-fixes).\n- commit 813cb9c\n\n- net: macb: ensure the device is available before accessing\n  GEMGXL control registers (git-fixes).\n- commit 1742349\n\n- net/qla3xxx: fix schedule while atomic in ql_sem_spinlock\n  (git-fixes).\n- commit 8e475cb\n\n- blacklist.conf: update blacklist\n- commit a7a5329\n\n- netfilter: nf_tables: disallow anonymous set with timeout flag\n  (CVE-2024-26642 bsc#1221830).\n- commit b3d18fd\n\n- netfilter: ctnetlink: fix possible refcount leak in\n  ctnetlink_create_conntrack() (CVE-2023-7192 bsc#1218479).\n- commit 0774a95\n\n- net: allwinner: Fix some resources leak in the error handling path of the probe and in the remove function (git-fixes).\n- commit d464181\n\n- ethernet: ucc_geth: fix definition and size of ucc_geth_tx_global_pram (git-fixes).\n- commit 6895e10\n\n- net/mlx5: Properly convey driver version to firmware (git-fixes).\n- commit 09bc4c8\n\n- net: stmmac: free tx skb buffer in stmmac_resume() (git-fixes).\n- commit 7769206\n\n- tun: honor IOCB_NOWAIT flag (git-fixes).\n- commit 1f0149b\n\n- atl1e: fix error return code in atl1e_probe() (git-fixes).\n- commit da6dd80\n\n- atl1c: fix error return code in atl1c_probe() (git-fixes).\n- commit 56e0459\n\n- net: atheros: switch from 'pci_' to 'dma_' API (git-fixes).\n- commit 47ce14b\n\n- blacklist.conf: update blacklist\n- commit dc2abcd\n\n- mass-cve: Fail nicely if env is not set\n- commit 7d0c68a\n\n- mass-cve: Invalidate cache when scanned branch is updated\n- commit cf71c00\n\n- README.BRANCH: Remove copy of branch name\n- commit 26f4895\n\n- usb: dwc3: core: Do not perform GCTL_CORE_SOFTRESET during\n  bootup (bsc#1220628 CVE-2021-46941).\n- commit ebce255\n\n- usb: dwc3: core: balance phy init and exit (bsc#1220628\n  CVE-2021-46941).\n- commit 8f693d2\n\n- USB: usbfs: Don't WARN about excessively large memory\n  allocations.\n- commit 8172f18\n\n- ipv6: init the accept_queue's spinlocks in inet6_create\n  (bsc#1221293 CVE-2024-26614).\n- commit 6bea6a5\n\n- tcp: make sure init the accept_queue's spinlocks once\n  (bsc#1221293 CVE-2024-26614).\n- commit 800aa0a\n\n- userfaultfd: release page in error path to avoid BUG_ON\n  (CVE-2021-46988 bsc#1220706).\n- commit bcafeec\n\n- powerpc/mm: Fix null-pointer dereference in pgtable_cache_add\n  (CVE-2023-52607 bsc#1221061).\n- commit af6f33a\n\n- mass-cve: Lazily pull from vulns DB git\n- commit cf62cc6\n\n- mass-cve: Allow calling make -f Makefile from anywhere\n- commit 96ccd46\n\n- mass-cve: Add README\n- commit d223050\n\n- Update\n  patches.suse/net-nfc-llcp-Add-lock-when-modifying-device-list.patch\n  (git-fixes CVE-2023-52524 bsc#1220927).\n- Update\n  patches.suse/net-usb-smsc75xx-Fix-uninit-value-access-in-__smsc75.patch\n  (git-fixes CVE-2023-52528 bsc#1220843).\n- Update\n  patches.suse/nvmet-tcp-Fix-a-kernel-panic-when-host-sends-an-inva.patch\n  (bsc#1217987 bsc#1217988 bsc#1217989 CVE-2023-6535 CVE-2023-6536\n  CVE-2023-6356 CVE-2023-52454 bsc#1220320).\n- Update\n  patches.suse/ocfs2-Avoid-touching-renamed-directory-if-parent-doe.patch\n  (bsc#1221044 CVE-2023-52591 CVE-2023-52590 bsc#1221088).\n- Update\n  patches.suse/ravb-Fix-use-after-free-issue-in-ravb_tx_timeout_wor.patch\n  (bsc#1212514 CVE-2023-35827 CVE-2023-52509 bsc#1220836).\n- Update\n  patches.suse/x86-srso-fix-sbpb-enablement-for-spec_rstack_overflow-off.patch\n  (git-fixes CVE-2023-52575 bsc#1220871).\n- commit 2258ead\n\n- Update patches.suse/mmc-moxart_remove-Fix-UAF.patch (bsc#1194516\n  CVE-2022-0487 CVE-2022-48626 bsc#1220366).\n- commit 10fc152\n\n- Update\n  patches.suse/0019-dm-rq-fix-double-free-of-blk_mq_tag_set-in-dev-remov.patch\n  (git fixes CVE-2021-46938 bsc#1220554).\n- Update\n  patches.suse/ACPI-custom_method-fix-potential-use-after-free-issu.patch\n  (git-fixes CVE-2021-46966 bsc#1220572).\n- Update\n  patches.suse/ARM-footbridge-fix-PCI-interrupt-mapping.patch\n  (git-fixes CVE-2021-46909 bsc#1220442).\n- Update\n  patches.suse/IB-qib-Fix-memory-leak-in-qib_user_sdma_queue_pkts.patch\n  (git-fixes CVE-2021-47104 bsc#1220960).\n- Update\n  patches.suse/NFC-nci-fix-memory-leak-in-nci_allocate_device.patch\n  (git-fixes CVE-2021-47180 bsc#1221999).\n- Update\n  patches.suse/NFS-Don-t-corrupt-the-value-of-pg_bytes_written-in-n.patch\n  (git-fixes CVE-2021-47166 bsc#1221998).\n- Update\n  patches.suse/NFS-Fix-an-Oopsable-condition-in-__nfs_pageio_add_re.patch\n  (git-fixes CVE-2021-47167 bsc#1221991).\n- Update\n  patches.suse/NFS-fix-an-incorrect-limit-in-filelayout_decode_layo.patch\n  (git-fixes CVE-2021-47168 bsc#1222002).\n- Update\n  patches.suse/NFSv4-Fix-a-NULL-pointer-dereference-in-pnfs_mark_ma.patch\n  (git-fixes CVE-2021-47179 bsc#1222001).\n- Update\n  patches.suse/asix-fix-uninit-value-in-asix_mdio_read.patch\n  (git-fixes CVE-2021-47101 bsc#1220987).\n- Update\n  patches.suse/bnxt_en-Fix-RX-consumer-index-logic-in-the-error-pat.patch\n  (git-fixes CVE-2021-47015 bsc#1220794).\n- Update\n  patches.suse/btrfs-fix-race-between-transaction-aborts-and-fsyncs.patch\n  (bsc#1186441 CVE-2021-46958 bsc#1220521).\n- Update\n  patches.suse/cifs-Return-correct-error-code-from-smb2_get_enc_key.patch\n  (git-fixes CVE-2021-46960 bsc#1220528).\n- Update\n  patches.suse/crypto-qat-ADF_STATUS_PF_RUNNING-should-be-set-after.patch\n  (git-fixes CVE-2021-47056 bsc#1220769).\n- Update\n  patches.suse/cxgb4-avoid-accessing-registers-when-clearing-filter.patch\n  (bsc#1136345 jsc#SLE-4681 CVE-2021-47138 bsc#1221934).\n- Update patches.suse/drm-amdgpu-Fix-a-use-after-free.patch\n  (git-fixes CVE-2021-47142 bsc#1221952).\n- Update\n  patches.suse/drm-meson-fix-shutdown-crash-when-component-not-prob.patch\n  (git-fixes CVE-2021-47165 bsc#1221965).\n- Update\n  patches.suse/ethernet-enic-Fix-a-use-after-free-bug-in-enic_hard_.patch\n  (bsc#1113431 CVE-2021-46998 bsc#1220625).\n- Update\n  patches.suse/ext4-fix-bug-on-in-ext4_es_cache_extent-as-ext4_spli.patch\n  (bsc#1187408 CVE-2021-47117 bsc#1221575).\n- Update\n  patches.suse/ext4-fix-memory-leak-in-ext4_fill_super.patch\n  (bsc#1187409 CVE-2021-47119 bsc#1221608).\n- Update\n  patches.suse/gve-Add-NULL-pointer-checks-when-freeing-irqs.patch\n  (bsc#1176940 CVE-2021-47141 bsc#1221949).\n- Update\n  patches.suse/i2c-i801-Don-t-generate-an-interrupt-on-bus-reset.patch\n  (git-fixes CVE-2021-47153 bsc#1221969).\n- Update patches.suse/iommu-vt-d-fix-sysfs-leak-in-alloc_iommu\n  (bsc#1189272 CVE-2021-47177 bsc#1221997).\n- Update\n  patches.suse/ipmi-Fix-UAF-when-uninstall-ipmi_si-and-ipmi_msghand.patch\n  (git-fixes CVE-2021-47100 bsc#1220985).\n- Update\n  patches.suse/kvm-destroy-i-o-bus-devices-on-unregister-failure-after_-sync-ing-srcu\n  (CVE-2020-36312 bsc#1184509 CVE-2021-47061 bsc#1220745).\n- Update\n  patches.suse/kvm-stop-looking-for-coalesced-mmio-zones-if-the-bus-is-destroyed\n  (CVE-2020-36312 bsc#1184509 CVE-2021-47060 bsc#1220742).\n- Update\n  patches.suse/md-raid1-properly-indicate-failure-when-ending-a-fai.patch\n  (bsc#1185680 CVE-2021-46950 bsc#1220662).\n- Update\n  patches.suse/misc-uss720-fix-memory-leak-in-uss720_probe.patch\n  (git-fixes CVE-2021-47173 bsc#1221993).\n- Update\n  patches.suse/msft-hv-2305-Drivers-hv-vmbus-Use-after-free-in-__vmbus_open.patch\n  (git-fixes CVE-2021-47049 bsc#1220692).\n- Update\n  patches.suse/msft-hv-2316-uio_hv_generic-Fix-a-memory-leak-in-error-handling-p.patch\n  (git-fixes CVE-2021-47071 bsc#1220846).\n- Update\n  patches.suse/msft-hv-2317-uio_hv_generic-Fix-another-memory-leak-in-error-hand.patch\n  (git-fixes CVE-2021-47070 bsc#1220829).\n- Update\n  patches.suse/mtd-require-write-permissions-for-locking-and-badblo.patch\n  (git-fixes CVE-2021-47055 bsc#1220768).\n- Update\n  patches.suse/nbd-Fix-NULL-pointer-in-flush_workqueue-79eb.patch\n  (git-fixes CVE-2021-46981 bsc#1220611).\n- Update\n  patches.suse/net-fec-fix-the-potential-memory-leak-in-fec_enet_in.patch\n  (git-fixes CVE-2021-47150 bsc#1221973).\n- Update\n  patches.suse/net-nfc-fix-use-after-free-llcp_sock_bind-connect.patch\n  (CVE-2021-23134 bsc#1186060 CVE-2021-47068 bsc#1220739).\n- Update\n  patches.suse/net-smc-remove-device-from-smcd_dev_list-after-failed-device_add\n  (git-fixes CVE-2021-47143 bsc#1221988).\n- Update\n  patches.suse/net-usb-fix-memory-leak-in-smsc75xx_bind.patch\n  (git-fixes CVE-2021-47171 bsc#1221994).\n- Update patches.suse/ocfs2-fix-data-corruption-by-fallocate.patch\n  (bsc#1187412 CVE-2021-47114 bsc#1221548).\n- Update\n  patches.suse/pid-take-a-reference-when-initializing-cad_pid.patch\n  (bsc#1114648 CVE-2021-47118 bsc#1221605).\n- Update\n  patches.suse/platform-x86-dell-smbios-wmi-Fix-oops-on-rmmod-dell_.patch\n  (git-fixes CVE-2021-47073 bsc#1220850).\n- Update\n  patches.suse/powerpc-64s-Fix-crashes-when-toggling-entry-flush-ba.patch\n  (bsc#1177666 git-fixes bsc#1186460 ltc#192531 CVE-2021-46990\n  bsc#1220743).\n- Update\n  patches.suse/powerpc-64s-Fix-pte-update-for-kernel-memory-on-radi.patch\n  (bsc#1055117 git-fixes CVE-2021-47034 bsc#1220687).\n- Update\n  patches.suse/scsi-lpfc-Fix-null-pointer-dereference-in-lpfc_prep_.patch\n  (bsc#1182574 CVE-2021-47045 bsc#1220640).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-crash-in-qla2xxx_mqueuecommand.patch\n  (bsc#1185491 CVE-2021-46963 bsc#1220536).\n- Update patches.suse/scsi-qla2xxx-Reserve-extra-IRQ-vectors.patch\n  (bsc#1185491 CVE-2021-46964 bsc#1220538).\n- Update\n  patches.suse/serial-rp2-use-request_firmware-instead-of-request_f.patch\n  (git-fixes CVE-2021-47169 bsc#1222000).\n- Update\n  patches.suse/tracing-Restructure-trace_clock_global-to-never-block.patch\n  (git-fixes CVE-2021-46939 bsc#1220580).\n- Update\n  patches.suse/vsock-virtio-free-queued-packets-when-closing-socket.patch\n  (git-fixes CVE-2021-47024 bsc#1220637).\n- Update\n  patches.suse/x86-kvm-Disable-kvmclock-on-all-CPUs-on-shutdown.patch\n  (bsc#1185308 CVE-2021-47110 bsc#1221532).\n- Update\n  patches.suse/x86-kvm-Teardown-PV-features-on-boot-CPU-as-well.patch\n  (bsc#1185308 CVE-2021-47112 bsc#1221541).\n- commit fa763cd\n\n- Update\n  patches.suse/netlabel-fix-out-of-bounds-memory-accesses.patch\n  (networking-stable-19_03_07 CVE-2019-25160 bsc#1220394).\n- commit cfd1daa\n\n- scripts/check-kernel-fix: print summary of the commit to check\n- commit b73a330\n\n- scripts/check-kernel-fix: be more conservative when proposing branches to backport to non CVE patches\n  If a kernel fix doesn't have any CVE assigned (e.g. a regular git-fixes\n  candidate) then do not propose branches that have higher bar to accept\n  changes (e.g. LTSS branches)\n- commit 5988064\n\n- scripts/common-functions: sha_in_upstream: do not assume origin/HEAD points to origin/master\n- commit ac1161f\n\n- scripts/cve_tools/cve2metadata.sh: clarify the error message\n- commit b222dc5\n\n- scripts/common-functions: sha_in_upstream refinements.\n- commit ef93b37\n\n- IB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests (bsc#1220445 CVE-2023-52474)\n- commit 71ecb14\n\n- scripts/common-functions: for_each_build_branch: do not consider stable and slowroll branches\n- commit da10c28\n\n- scripts/check-kernel-fix: Print RUN command with current references helper\n- commit 72f7f72\n\n- s390/vtime: fix average steal time calculation (git-fixes\n  bsc#1221953).\n- commit ccf7a1f\n\n- s390/ptrace: handle setting of fpc register correctly\n  (CVE-2023-52598 bsc#1221060 git-fixes).\n- commit 0d179a3\n\n- scripts/check-kernel-fix: refine the help message\n- commit 339f56a\n\n- scripts/check-kernel-fix: unify VULNS_GIT variable\n- scripts/common-functions:\n- commit 2d74673\n\n- mass-cve: Exclude partial commits\n  Commit references with various decorations like '(partial)' are treated\n  conservatively, i.e. do not assume we have a functional patch.\n- commit 0391bef\n\n- scripts/check-kernel-fix: add support for -r (metadata refresh)\n- scripts/common-functions:\n- commit c47714a\n\n- scripts/check-kernel-fix: drop -s mode (not really useful)\n- commit 837a2ae\n\n- scripts/check-kernel-fix: drop -c parameter and search cve branches by default\n- scripts/common-functions:\n- commit 5031df0\n\n- scripts/check-kernel-fix: improve help message\n- commit 426748a\n\n- scripts/check-kernel-fix: Make the check of CVSS affected branches more reliable\n  Make the check of branches ignoring lower CVSS score more reliable\n  by the checking matching also the dash.\n  Also rename the function to make more clear what success means.\n- commit 9a730a8\n\n- scripts/check-kernel-fix: Remove unused check_branch_references function\n  It did not provide any helpful information\n- commit 9be7356\n\n- wifi: ath10k: fix NULL pointer dereference in\n  ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev() (bsc#1218336\n  CVE-2023-7042).\n- commit 1463c4a\n\n- scripts/cve_tools/cve2metadata.sh: s@VULNS_GIT_PATH@VULNS_GIT@\n  to be more in line with git tree env vars\n- commit e3ddb5d\n\n- scripts/check-kernel-fix: add cvss based filtering\n  TODO GA kernels are not settled yet\n- commit 5ea28e0\n\n- scripts/common-functions: cope with redirects in fetch_cache\n- commit 0b72687\n\n- scripts/sequence-patch.sh: add missing template to find -exec\n  Recent fix for space handling lacks the '{}' template in find -exec command\n  so that this command fails and no chmod is executed.\n  Fixes: 622d2088f344 (\u0026quot;scripts/sequence-patch.sh: handle spaces in file names\u0026quot;)\n- commit 26808f8\n\n- x86/CPU/AMD: Update the Zenbleed microcode revisions (git-fixes).\n- commit 11a703b\n\n- kabi fix for pNFS: Fix the pnfs block driver's calculation of\n  layoutget size (git-fixes).\n- commit 188e451\n\n- pNFS: Fix the pnfs block driver's calculation of layoutget size\n  (git-fixes).\n- NFS: Fix O_DIRECT locking issues (git-fixes).\n- NFS: Fix direct WRITE throughput regression (git-fixes).\n- commit 53dafcd\n\n- NFS: Fix an off by one in root_nfs_cat() (git-fixes).\n- net: sunrpc: Fix an off by one in rpc_sockaddr2uaddr()\n  (git-fixes).\n- SUNRPC: fix a memleak in gss_import_v2_context (git-fixes).\n- NFS: More O_DIRECT accounting fixes for error paths (git-fixes).\n- NFS: Fix error handling for O_DIRECT write scheduling\n  (git-fixes).\n- nfs: only issue commit in DIO codepath if we have uncommitted\n  data (git-fixes).\n- NFS: Fix a request reference leak in\n  nfs_direct_write_clear_reqs() (git-fixes).\n- NFS: Fix O_DIRECT commit verifier handling (git-fixes).\n- NFS: commit errors should be fatal (git-fixes).\n- commit c3fe0ca\n\n- scripts/sequence-patch.sh: handle spaces in file names\n  The \u0026quot;find | xargs\u0026quot; pattern without -print0 and -0 does not handle file\n  names with spaces correctly. As there is no actual need for xargs, rewrite\n  the line to uses \u0026quot;find -exec\u0026quot; instead.\n- commit 622d208\n\n- scripts/check-kernel-fix: allow CVE argument\n- commit 9f07d91\n\n- scripts/check-kernel-fix: simplify to only get sha argument and resolve references automagically\n- commit c317a1e\n\n- scripts/common-functions: implement cve2sha and sha2cve\n- commit d016ea0\n\n- scripts/check-kernel-fix: Enhancements and cleanups\n  Allow to check which branches have a given reference without\n  passing a particular sha. Actions are not printed in this case.\n  Show actions when \u0026quot;sha\u0026quot; is passed by default.\n  Add [-q] option to do not show progress when checking\n  state of each branch.\n  Do not show action for a branch when the merge branch\n  already has the patch with all references.\n  Check each branch only once for the given sha and all references.\n  It allowed to reduce git grep calls. Also it removed the need\n  to merge branch states. It improved speed and simplified\n  the logic.\n- commit 0278113\n\n- Bluetooth: rfcomm: Fix null-ptr-deref in rfcomm_check_security\n  (bsc#1219170 CVE-2024-22099).\n- commit f6c10f5\n\n- scripts/patch-tag: remove bitkeeper format handling\n  Drop code that deals with bk-style comments and tags. The last branch to\n  include any patch exported from bk was SLE10-SP4, and it is not likely\n  that we will need to handle bk again in the future.\n- commit 1c94ff0\n\n- scsi: qla2xxx: Update version to 10.02.09.200-k (bsc1221816).\n- scsi: qla2xxx: Delay I/O Abort on PCI error (bsc1221816).\n- scsi: qla2xxx: Change debug message during driver unload\n  (bsc1221816).\n- scsi: qla2xxx: Fix double free of fcport (bsc1221816).\n- scsi: qla2xxx: Fix double free of the ha-\u0026gt;vp_map pointer\n  (bsc1221816).\n- scsi: qla2xxx: Fix command flush on cable pull (bsc1221816).\n- scsi: qla2xxx: NVME|FCP prefer flag not being honored\n  (bsc1221816).\n- scsi: qla2xxx: Update manufacturer detail (bsc1221816).\n- scsi: qla2xxx: Split FCE|EFT trace control (bsc1221816).\n- scsi: qla2xxx: Fix N2N stuck connection (bsc1221816).\n- scsi: qla2xxx: Prevent command send on chip reset (bsc1221816).\n- commit 61951e8\n\n- drm: bridge/panel: Cleanup connector on bridge detach (bsc#1220777, CVE-2021-47063)\n  Backporting changes:\n- add patch at the top of panel_bridge_detach()\n- commit 760a99d\n\n- aoe: fix the potential use-after-free problem in aoecmd_cfg_pkts\n  (bsc#1218562 CVE-2023-6270).\n- commit 4e659c8\n\n- scripts/common-functions:\n- scripts/cve_tools/cve2metadata.sh:\n  cve2cvss do not assume consumer and do not preformat the output\n- commit 8a1b4cc\n\n- scripts/cve_tools/cve2metadata.sh: resolve CVE or sha into metadata\n  Examples\n  $ ./scripts/cve_tools/cve2metadata.sh CVE-2021-46975\n  2671fa4dc0109d3fb581bc3078fdf17b5d9080f6 score: 3.2 CVE-2021-46975 bsc#1220505\n  ./scripts/cve_tools/cve2metadata.sh CVE-2021-46907\n  04c4f2ee3f68c9a4bf1653d15f1a9a435ae33f7a score: unknown CVE-2021-46907 bsc#1220422\n- commit 5e5b19b\n\n- scripts/common-functions: silence fetch_cache\n- commit dfd8093\n\n- scripts/common-functions: implement cve-\u0026gt;cvss\n- commit 4d69061\n\n- scripts/common-functions: implement cve -\u0026gt; bsc mapping\n- commit 2b5ac8e\n\n- scripts/common-functions: abstract CACHED_BRANCHES downloading\n  we will have more cached files to use\n- commit 3194c25\n\n- net: Fix features skip in for_each_netdev_feature() (git-fixes).\n- commit b1996ba\n\n- rename(): avoid a deadlock in the case of parents having no\n  common ancestor (bsc#1221044 CVE-2023-52591).\n- commit 16f9b33\n\n- kill lock_two_inodes() (bsc#1221044 CVE-2023-52591).\n- commit c8410b2\n\n- rename(): fix the locking of subdirectories (bsc#1221044\n  CVE-2023-52591).\n- commit b34d065\n\n- f2fs: Avoid reading renamed directory if parent does not change\n  (bsc#1221044 CVE-2023-52591).\n- commit 95ecb76\n\n- ext4: don't access the source subdirectory content on\n  same-directory rename (bsc#1221044 CVE-2023-52591).\n- commit e81c5d2\n\n- ext2: Avoid reading renamed directory if parent does not change\n  (bsc#1221044 CVE-2023-52591).\n- commit 47af51c\n\n- udf_rename(): only access the child content on cross-directory\n  rename (bsc#1221044 CVE-2023-52591).\n- commit 3e77e59\n\n- ocfs2: Avoid touching renamed directory if parent does not\n  change (bsc#1221044 CVE-2023-52591).\n- commit ef44829\n\n- reiserfs: Avoid touching renamed directory if parent does not\n  change (git-fixes bsc#1221044 CVE-2023-52591).\n  Refresh patches.suse/reiserfs-add-check-to-detect-corrupted-directory-entry.patch\n  Refresh patches.suse/reiserfs-don-t-panic-on-bad-directory-entries.patch\n- commit 304c6b9\n\n- fs: don't assume arguments are non-NULL (bsc#1221044\n  CVE-2023-52591).\n- commit 74a158f\n\n- fs: Restrict lock_two_nondirectories() to non-directory inodes\n  (bsc#1221044 CVE-2023-52591).\n- commit 2042147\n\n- fs: ocfs2: check status values (bsc#1221044 CVE-2023-52591).\n- commit 24568a1\n\n- fs: no need to check source (bsc#1221044 CVE-2023-52591).\n- commit 95711fd\n\n- fs: Lock moved directories (bsc#1221044 CVE-2023-52591).\n- commit 2b2136e\n\n- fs: Establish locking order for unrelated directories\n  (bsc#1221044 CVE-2023-52591).\n- commit c49cfde\n\n- fs: introduce lock_rename_child() helper (bsc#1221044\n  CVE-2023-52591).\n- commit 84b4b7d\n\n- dwc3: switch to a global mutex (bsc#1220628 CVE-2021-46941).\n- commit d93342d\n\n- usb: dwc3: core: Do core softreset when switch mode (bsc#1220628\n  CVE-2021-46941).\n- blacklist.conf: needed after all for a CVE\n- Refresh\n  patches.suse/USB-dwc3-fix-runtime-pm-imbalance-on-probe-errors.patch.\n- Refresh\n  patches.suse/usb-dwc3-Fix-race-between-dwc3_set_mode-and-__dwc3_s.patch.\n- commit 7ca4d31\n\n- Input: add bounds checking to input_set_capability()\n  (bsc#1218220 CVE-2022-48619).\n- commit f42351b\n\n- NFSD: Retransmit callbacks after client reconnects (git-fixes).\n- NFSD: Reset cb_seq_status after NFS4ERR_DELAY (git-fixes).\n- SUNRPC: fix some memleaks in gssx_dec_option_array (git-fixes).\n- NFSv4.1/pnfs: Ensure we handle the error NFS4ERR_RETURNCONFLICT\n  (git-fixes).\n- SUNRPC: Fix RPC client cleaned up the freed pipefs dentries\n  (git-fixes).\n- nfsd: lock_rename() needs both directories to live on the same\n  fs (git-fixes).\n- pNFS/flexfiles: Check the layout validity in\n  ff_layout_mirror_prepare_stats (git-fixes).\n- commit 311216b\n\n- mass-cve: Switch to cve2bugzilla database\n  The map cve2bugzilla is not unique, add only first bug to references\n- commit 8b6d26b\n\n- perf/x86/lbr: Filter vsyscall addresses (bsc#1220703,\n  CVE-2023-52476).\n- commit ff86f16\n\n- mass-cve: Add processing of all known history\n- commit 1e9ec1d\n\n- x86/mmio: Disable KVM mitigation when X86_FEATURE_CLEAR_CPU_BUF is set (bsc#1213456 CVE-2023-28746).\n- commit c5b2dec\n\n- Sort patches that are already upstream\n- Refresh\n  patches.suse/Documentation-hw-vuln-Add-documentation-for-RFDS.patch.\n- Refresh\n  patches.suse/KVM-x86-Export-RFDS_NO-and-RFDS_CLEAR-to-guests.patch.\n- Refresh\n  patches.suse/x86-rfds-Mitigate-Register-File-Data-Sampling-RFDS.patch.\n- commit 031146a\n\n- mass-cve: Parametrize with branch and do commit\n- mass-cve: Add add-missing-reference helper\n- commit aba83bd\n\n- mass-cve: Add bsc# resolution\n- commit 3cd075a\n\n- iommu/amd: Set DTE[IntTabLen] to represent 512 IRTEs\n  (git-fixes).\n- commit ea9ae09\n\n- iommu: Check if group is NULL before remove device (git-fixes).\n- commit a7b6fa2\n\n- iommu/amd: Silence warnings under memory pressure (git-fixes).\n- commit cdec216\n\n- iommu/amd: Increase interrupt remapping table limit to 512\n  entries (git-fixes).\n- commit c290a72\n\n- iommu/amd: Mark interrupt as managed (git-fixes).\n- commit 34b8fef\n\n- ARM: 9064/1: hw_breakpoint: Do not directly check the event's\n  overflow_handler hook (bsc#1220751 CVE-2021-47006).\n- commit 605e3a7\n\n- Refresh patches.kabi/team-Hide-new-member-header-ops.patch.\n  Fix for kABI workaround.\n- commit f1bcdf5\n\n- mass-cve: Add Makefile to process vulns.git database\n- commit 5a5d01b\n\n- scripts: Remove unused script gen-aseries\n- commit 03b8697\n\n- scripts: Remove unused patch-report\n- commit fa154b6\n\n- usb: typec: class: fix typec_altmode_put_partner to put plugs\n  (git-fixes).\n- commit 4350c0c\n\n- ceph: fix deadlock or deadcode of misusing dget() (bsc#1221058\n  CVE-2023-52583).\n- commit a413cb6\n\n- usb: hub: Guard against accesses to uninitialized BOS\n  descriptors (bsc#1220790 CVE-2023-52477).\n- commit bf5af19\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch. (bsc#1221287)\n  X86_FEATURE_LFENCE_RDTSC became an extended bit and was set via\n  cpu_set_cap as opposed to setup_force_cpu_cap. So extend the\n  infrastructure to also cover cpu_set_cap.\n- commit 3fcb500\n\n- net: lan78xx: fix runtime PM count underflow on link stop\n  (git-fixes).\n- commit 7281e3e\n\n- lan78xx: Fix race conditions in suspend/resume handling\n  (git-fixes).\n- commit 91c55e5\n\n- lan78xx: Fix partial packet errors on suspend/resume\n  (git-fixes).\n- commit 99adbef\n\n- lan78xx: Add missing return code checks (git-fixes).\n- Refresh\n  patches.suse/bsc1084332-0003-lan78xx-Enable-LEDs-and-auto-negotiation.patch.\n- Refresh\n  patches.suse/lan78xx-Fix-exception-on-link-speed-change.patch.\n- commit 5704b69\n\n- scripts: Add check-kernel-fix\n- commit 9ef3bf8\n\n- scripts: Add commond-functions\n- scripts: Support log2 --no-edit option\n  This allows \u0026quot;unattended\u0026quot; calls of scripts/log\n- commit 2516937\n\n- lan78xx: Fix exception on link speed change (git-fixes).\n- commit dbfd125\n\n- lan78xx: Fix white space and style issues (git-fixes).\n- commit eb3a9cf\n\n- net: usb: lan78xx: Remove lots of set but unused 'ret' variables\n  (git-fixes).\n- commit 378d7a7\n\n- net: lan78xx: remove set but not used variable 'event'\n  (git-fixes).\n- commit b7f01b9\n\n- net: lan78xx: Merge memcpy + lexx_to_cpus to get_unaligned_lexx\n  (git-fixes).\n- lan78xx: Do not access skb_queue_head list pointers directly\n  (git-fixes).\n- commit f2cbfb9\n\n- net: lan78xx: Make declaration style consistent (git-fixes).\n- commit be1816d\n\n- net:usb: Use ARRAY_SIZE instead of calculating the array size\n  (git-fixes).\n- commit 360121f\n\n- net: lan78xx: Allow for VLAN headers in timeout calcs\n  (git-fixes).\n- commit d43b68c\n\n- lan78xx: Modify error messages (git-fixes).\n- commit afd21b5\n\n- lan78xx: Add support to dump lan78xx registers (git-fixes).\n- commit c4b2e78\n\n- lan78xx: enable auto speed configuration for LAN7850 if no\n  EEPROM is detected (git-fixes).\n- commit 3edfed0\n\n- drm/radeon: check the alloc_workqueue return value in radeon_crtc_init() (bsc#1220413 CVE-2023-52470).\n- commit f1a2e90\n\n- drivers/amd/pm: fix a use-after-free in kv_parse_power_table (bsc#1220411 CVE-2023-52469).\n- commit 3357315\n\n- group-source-files.pl: Quote filenames (boo#1221077).\n  The kernel source now contains a file with a space in the name.\n  Add quotes in group-source-files.pl to avoid splitting the filename.\n  Also use -print0 / -0 when updating timestamps.\n- commit a005e42\n\n- blacklist.conf: update blacklist\n  The entries added in the commit are temporary ones so once\n  MU is done I'll revert the commit\n- commit 874c87d\n\n- Update\n  patches.suse/net-hso-fix-NULL-deref-on-disconnect-regression.patch\n  (bsc#1220416 bsc#1220418 CVE-2021-46905 CVE-2021-46904).\n  Added second CVE reference\n- commit f72c3a5\n\n- gve: Fix skb truesize underestimation (git-fixes).\n- commit 983edc4\n\n- Revert \u0026quot;md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d\u0026quot;\n  (git-fixes).\n- commit 3ea2575\n\n- phy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP (bsc#1220340,CVE-2024-26600)\n- commit 20e2c08\n\n- RDMA/rxe: Clear all QP fields if creation failed (bsc#1220863 CVE-2021-47078)\n- commit f8dcd39\n\n- RDMA/rxe: Return CQE error if invalid lkey was supplied (bsc#1220860 CVE-2021-47076)\n- commit 3f60a4e\n\n- ACPI: extlog: fix NULL pointer dereference check (bsc#1221039\n  CVE-2023-52605).\n- commit b0968bd\n\n- scripts/git_sort/git_sort.py: Add perf-tools and perf-tools-next repos\n- commit 32e922e\n\n- blacklist.conf: Add d4ccd54d28d3 exit: Put an upper limit on how often we can oops\n  and its dependant.\n- commit 64ce341\n\n- KVM: s390: fix setting of fpc register (bsc#1221040\n  CVE-2023-52597).\n- commit 0f89ca1\n\n- net: hso: fix NULL-deref on disconnect regression (bsc#1220416\n  CVE-2021-46904).\n- commit fe1eee0\n\n- net: hso: fix null-ptr-deref during tty device unregistration\n  (bsc#1220416 CVE-2021-46904).\n- commit d61504e\n\n- kernel-binary: Fix i386 build\n  Fixes: 89eaf4cdce05 (\u0026quot;rpm templates: Move macro definitions below buildrequires\u0026quot;)\n- commit f7c6351\n\n- net: usb: dm9601: fix wrong return value in dm9601_mdio_read\n  (git-fixes).\n- commit d69a5b8\n\n- net: nfc: llcp: Add lock when modifying device list (git-fixes).\n- commit b462198\n\n- igb: clean up in all error paths when enabling SR-IOV\n  (git-fixes).\n- commit 0f0e6a7\n\n- net/sched: tcindex: search key must be 16 bits (git-fixes).\n- commit 190e0f5\n\n- stmmac: fix potential division by 0 (git-fixes).\n- commit 40876e6\n\n- kcm: fix strp_init() order and cleanup (git-fixes).\n- commit b31a598\n\n- ipv6: fix typos in __ip6_finish_output() (git-fixes).\n- commit 54553b6\n\n- kabi: team: Hide new member header_ops (bsc#1220870\n  CVE-2023-52574).\n- commit 9fab77a\n\n- blacklist.conf: update blacklist\n- commit 9263a68\n\n- wcn36xx: fix RX BD rate mapping for 5GHz legacy rates\n  (git-fixes).\n- commit c4e8a82\n\n- wcn36xx: Fix discarded frames due to wrong sequence number\n  (git-fixes).\n- commit 8553436\n\n- x86/srso: Add SRSO mitigation for Hygon processors (bsc#1220735\n  CVE-2023-52482).\n- commit c7d3dd8\n\n- Revert \u0026quot;wcn36xx: Disable bmps when encryption is disabled\u0026quot;\n  (git-fixes).\n- commit e5924b8\n\n- vt: fix memory overlapping when deleting chars in the buffer\n  (bsc#1220845 CVE-2022-48627).\n- commit 6d7d615\n\n- wcn36xx: Fix (QoS) null data frame bitrate/modulation\n  (git-fixes).\n- commit 405ced7\n\n- ipv6: Fix handling of LLA with VRF and sockets bound to VRF\n  (git-fixes).\n- commit 519a8b2\n\n- kcm: Call strp_stop before strp_done in kcm_attach (git-fixes).\n- commit b01e9bb\n\n- blacklist.conf: update blacklist\n- commit 347e348\n\n- kernel-binary: vdso: fix filelist for non-usrmerged kernel\n  Fixes: a6ad8af207e6 (\u0026quot;rpm templates: Always define usrmerged\u0026quot;)\n- commit fb3f221\n\n- KVM: x86: Export RFDS_NO and RFDS_CLEAR to guests (bsc#1213456 CVE-2023-28746).\n- commit 789616b\n\n- x86/rfds: Mitigate Register File Data Sampling (RFDS) (bsc#1213456 CVE-2023-28746).\n- Update config files.\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n- commit 47b68f4\n\n- Documentation/hw-vuln: Add documentation for RFDS (bsc#1213456 CVE-2023-28746).\n- commit 959a93f\n\n- NFS: add atomic_open for NFSv3 to handle O_TRUNC correctly\n  (bsc#1219847).\n- commit 43a81fc\n\n- scsi: qedf: Add pointer checks in qedf_update_link_speed()\n  (bsc#1220861 CVE-2021-47077).\n- commit 499d19e\n\n- Refresh patches.suse/0001-powerpc-pseries-memhp-Fix-access-beyond-end-of-drmem.patch.\n  Refresh patch metadata and sort.\n- commit 15cb428\n\n- ravb: Fix use-after-free issue in ravb_tx_timeout_work()\n  (bsc#1212514 CVE-2023-35827).\n- team: fix null-ptr-deref when team device type is changed\n  (bsc#1220870 CVE-2023-52574).\n- commit 36ef587\n\n- net: mana: Fix TX CQE error handling (bsc#1220932\n  CVE-2023-52532).\n- commit d388327\n\n- Update reference of bpf-Fix-masking-negation-logic-upon-negative-dst-reg.patch\n  (bsc#1186484,CVE-2021-33200,bsc#1220700,CVE-2021-46974).\n- commit d334f65\n\n- nfsd: Do not refuse to serve out of cache (bsc#1220957).\n- commit 828470f\n\n- wifi: mac80211: fix potential key use-after-free (CVE-2023-52530\n  bsc#1220930).\n- wifi: iwlwifi: mvm: Fix a memory corruption issue\n  (CVE-2023-52531 bsc#1220931).\n- commit 4749167\n\n- USB: serial: option: add Fibocom L7xx modules (git-fixes).\n- commit 5053dd2\n\n- USB: serial: option: don't claim interface 4 for ZTE MF290\n  (git-fixes).\n- commit a0c4a2e\n\n- usb: storage: set 1.50 as the lower bcdDevice for older \u0026quot;Super\n  Top\u0026quot; compatibility (git-fixes).\n- commit 680e979\n\n- net: nfc: fix races in nfc_llcp_sock_get() and\n  nfc_llcp_sock_get_sn() (CVE-2023-52502 bsc#1220831).\n- commit d0dd97d\n\n- tls: fix race between tx work scheduling and socket close\n  (CVE-2024-26585 bsc#1220187).\n- commit 2d824be\n\n- kabi: restore return type of dst_ops::gc() callback\n  (CVE-2023-52340 bsc#1219295).\n- ipv6: remove max_size check inline with ipv4 (CVE-2023-52340\n  bsc#1219295).\n- commit dd00c24\n\n- netfilter: nf_tables: fix 64-bit load issue in\n  nft_byteorder_eval() (CVE-2024-0607 bsc#1218915).\n- netfilter: nf_tables: fix pointer math issue in\n  nft_byteorder_eval() (CVE-2024-0607 bsc#1218915).\n- commit b635ad7\n\n- Update patches.suse/sctp-use-call_rcu-to-free-endpoint.patch\n  (CVE-2022-20154 CVE-2021-46929 bsc#1200599 bsc#1220482).\n- commit 23c3231\n\n- tomoyo: fix UAF write bug in tomoyo_write_control() (bsc#1220825\n  CVE-2024-26622).\n- commit e934259\n\n- doc/README.SUSE: Update information about module support status\n  (jsc#PED-5759)\n  Following the code change in SLE15-SP6 to have externally supported\n  modules no longer taint the kernel, update the respective documentation\n  in README.SUSE:\n  * Describe that support status can be obtained at runtime for each\n  module from /sys/module/$MODULE/supported and for the entire system\n  from /sys/kernel/supported. This provides a way how to now check that\n  the kernel has any externally supported modules loaded.\n  * Remove a mention that externally supported modules taint the kernel,\n  but keep the information about bit 16 (X) and add a note that it is\n  still tracked per module and can be read from\n  /sys/module/$MODULE/taint. This per-module information also appears in\n  Oopses.\n- commit 9ed8107\n\n- Bluetooth: hci_ll: don't call kfree_skb() under\n  spin_lock_irqsave() (git-fixes).\n- commit 8e9750e\n\n- Bluetooth: hci_h5: don't call kfree_skb() under\n  spin_lock_irqsave() (git-fixes).\n- commit e3ec875\n\n- scripts/git-commit-msg: Detect renames (hides some references changes)\n  The following change\n  | --- a/patches.suse/drm-amd-Stop-evicting-resources-on-APUs-in-suspend.patch\n  | +++ b/patches.kernel.org/6.7.7-001-drm-amd-Stop-evicting-resources-on-APUs-in-susp.patch\n  | @@ -1,12 +1,14 @@\n  |  From: Mario Limonciello \u0026lt;mario.limonciello@amd.com\u0026gt;\n  |  Date: Wed, 7 Feb 2024 23:52:55 -0600\n  | -Subject: drm/amd: Stop evicting resources on APUs in suspend\n  | +Subject: [PATCH] drm/amd: Stop evicting resources on APUs in suspend\n  |  MIME-Version: 1.0\n  |  Content-Type: text/plain; charset=UTF-8\n  |  Content-Transfer-Encoding: 8bit\n  | +Patch-mainline: 6.7.7\n  | +References: bsc#1012628 https://gitlab.freedesktop.org/drm/amd/-/issues/3132\n  |  Git-commit: 3a9626c816db901def438dc2513622e281186d39\n  | -Patch-mainline: 6.8-rc5\n  | -References: https://gitlab.freedesktop.org/drm/amd/-/issues/3132\n  is detected as a rename by git and scripts/log would filter the added\n  reference. Therefore apply git's rename detection also in git-commit-msg\n  hook to avoid having the check more strict than the generator.\n  (After going through all of this, I realize script/log should be\n  actually implemented via prepare-commit-msg hook.)\n- commit 99e1385\n\n- scripts/git-commit-msg: Ignore empty message that cancels commit\n- commit 8bcca6f\n\n- locking/qrwlock: Fix ordering in queued_write_lock_slowpath()\n  (CVE-2021-46921 bsc#1220468 bsc#1185041).\n- commit 9f2e845\n\n- locking/barriers: Introduce smp_cond_load_relaxed() and\n  atomic_cond_read_relaxed() (bsc#1220468 bsc#1050549).\n- commit 76b2073\n\n- scripts/git-commit-msg: Count changed references globally, not per file\n  Per-file counting would be too strict in requirement on commit message\n  since it would miss source file of a possible rename.\n- commit 45a8c42\n\n- Bluetooth: hci_bcsp: don't call kfree_skb() under\n  spin_lock_irqsave() (git-fixes).\n- commit 3114978\n\n- Bluetooth: hci_qca: don't call kfree_skb() under\n  spin_lock_irqsave() (git-fixes).\n- commit 40c2728\n\n- Input: appletouch - initialize work before device registration\n  (CVE-2021-46932 bsc#1220444).\n- commit 02010d5\n\n- powerpc/pseries/memhp: Fix access beyond end of drmem array\n  (bsc#1220250,CVE-2023-52451).\n- commit 22d7587\n\n- ACPI: GTDT: Don't corrupt interrupt mappings on watchdow probe\n  failure (bsc#1220599 CVE-2021-46953).\n- commit 69d8de2\n\n- scripts/update-symvers: Fix reading symtypes after usrmerge\n  symytypes file is stored in /usr/lib/modules/* now.\n- commit cbf0ce3\n\n- mtd: Fix gluebi NULL pointer dereference caused by ftl notifier\n  (bsc#1220238 CVE-2023-52449).\n- commit a845e8b\n\n- Input: powermate - fix use-after-free in\n  powermate_config_complete (CVE-2023-52475 bsc#1220649).\n- HID: logitech-hidpp: Fix kernel crash on receiver USB disconnect\n  (CVE-2023-52478 bsc#1220796).\n- commit 6daf909\n\n- i2c: Fix a potential use after free (bsc#1220409\n  CVE-2019-25162).\n- commit 0be34df\n\n- i2c: cadence: fix reference leak when pm_runtime_get_sync fails\n  (bsc#1220570 CVE-2020-36784).\n- commit 8727379\n\n- bus: qcom: Put child node before return (CVE-2021-47054\n  bsc#1220767).\n- commit 0c0fa8d\n\n- NFC: st21nfca: Fix memory leak in device probe and remove\n  (CVE-2021-46924 bsc#1220459).\n- commit 01b7814\n\n- netfilter: nft_limit: avoid possible divide error in\n  nft_limit_init (CVE-2021-46915 bsc#1220436).\n- commit 9130a3d\n\n- HID: usbhid: fix info leak in hid_submit_ctrl (CVE-2021-46906\n  bsc#1220421).\n- commit 1d243b9\n\n- media: pvrusb2: fix use after free on context disconnection\n  (CVE-2023-52445 bsc#1220241).\n- commit f8f3542\n\n- media: dvbdev: Fix memory leak in dvb_media_device_free()\n  (CVE-2020-36777 bsc#1220526).\n- commit cd311ab\n\n- apparmor: avoid crash when parsed profile name is empty\n  (CVE-2023-52443 bsc#1220240).\n- commit 8387a56\n\n- nfc: nci: fix possible NULL pointer dereference in\n  send_acknowledge() (bsc#1219125 CVE-2023-46343).\n- commit 7ff1724\n\n- md: bypass block throttle for superblock update (git-fixes).\n- commit e6ba7c9\n\n- blacklist.conf: add non-backport md git-fixes commits.\n- commit d3c59de\n\n- tcp: fix tcp_mtup_probe_success vs wrong snd_cwnd (bsc#1218450).\n- commit 4a3997c\n\n- netfilter: nftables: avoid overflows in nft_hash_buckets()\n  (CVE-2021-46992 bsc#1220638).\n- commit c79b980\n\n- netfilter: nft_set_hash: add nft_hash_buckets() (CVE-2021-46992\n  bsc#1220638).\n- commit 5542c1b\n\n- net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\n  (CVE-2021-47013 bsc#1220641).\n- commit a848ac2\n\n- net: fec: Better handle pm_runtime_get() failing in .remove()\n  (git-fixes).\n- commit 60e6dbc\n\n- net: fec: fix use-after-free in fec_drv_remove (git-fixes).\n- commit 192ab42\n\n- i40e: Fix use-after-free in i40e_client_subtask()\n  (CVE-2021-46991 bsc#1220575).\n- commit 27d6f39\n\n- KVM: s390: vsie: fix race during shadow creation (git-fixes\n  bsc#1220613).\n- commit a2a5381\n\n- s390: use the correct count for __iowrite64_copy() (git-fixes\n  bsc#1220607).\n- commit 0823e37\n\n- mlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in\n  error path (bsc#1220344 CVE-2024-26595).\n- commit 71c942e\n\n- net: fec: fix clock count mis-match (git-fixes).\n- commit 90008dd\n\n- net: hns3: add compatible handling for MAC VLAN switch parameter\n  configuration (git-fixes).\n- commit 9cbe2e0\n\n- scripts/git-commit-msg: Skip References: check in merge commits\n  Merging a branch may bring many new references but we don't need them in\n  merge commit's message. Disable the check if it is triggered as part of\n  merge commit message creation.\n  Also make parsing more robust to references delimited with commas.\n- commit 5af4476\n\n- net: phy: initialise phydev speed and duplex sanely (git-fixes).\n- commit 5fc404a\n\n- bnx2x: Fix PF-VF communication over multi-cos queues\n  (git-fixes).\n- commit 58f28c6\n\n- ixgbe: protect TX timestamping from API misuse (git-fixes).\n- commit c740900\n\n- net: phy: dp83867: enable robust auto-mdix (git-fixes).\n- commit 51f918b\n\n- net: fec: add missed clk_disable_unprepare in remove\n  (git-fixes).\n- commit 26193da\n\n- e1000: fix memory leaks (git-fixes).\n- commit 63cea05\n\n- igb: Fix constant media auto sense switching when no cable is\n  connected (git-fixes).\n- commit ecbd46c\n\n- net: hisilicon: Fix usage of uninitialized variable in function\n  mdio_sc_cfg_reg_write() (git-fixes).\n- commit 467a700\n\n- net: hns3: not allow SSU loopback while execute ethtool -t dev\n  (git-fixes).\n- commit feac716\n\n- net/mlx5e: ethtool, Avoid setting speed to 56GBASE when autoneg\n  off (git-fixes).\n- commit 38e0f13\n\n- blacklist.conf: update blacklist\n- commit 803afb1\n\n- blacklist.conf: add ep93xx_eth\n  the config option is not enabled\n- commit aed74c8\n\n- blacklist.conf: add emac_rockchip\n  the config option is not enabled\n- commit 27c4413\n\n- Update metadata\n- commit fca1f53\n\n- net: openvswitch: limit the number of recursions from action\n  sets (bsc#1219835 CVE-2024-1151).\n- commit 9353f4f\n\n- EDAC/thunderx: Fix possible out-of-bounds string access (bsc#1220330, CVE-2023-52464)\n- commit a228c17\n\n- rpm templates: Always define usrmerged\n  usrmerged is now defined in kernel-spec-macros and not the distribution.\n  Only check if it's defined in kernel-spec-macros, not everywhere where\n  it's used.\n- commit a6ad8af\n\n- KVM: x86: work around QEMU issue with synthetic CPUID leaves (git-fixes).\n- commit 7dad6e2\n\n- blacklist.conf: Blacklist a clang fix\n- commit e954d52\n\n- net: lpc-enet: fix printk format strings (git-fixes).\n- commit dcd5e66\n\n- net: tundra: tsi108: use spin_lock_irqsave instead of\n  spin_lock_irq in IRQ context (git-fixes).\n- commit 3fddc2a\n\n- net: hisilicon: Fix dma_map_single failed on arm64 (git-fixes).\n- commit 65f9c53\n\n- net: hisilicon: fix hip04-xmit never return TX_BUSY (git-fixes).\n- commit b56984b\n\n- net: hisilicon: make hip04_tx_reclaim non-reentrant (git-fixes).\n- Refresh\n  patches.suse/net-hisilicon-Fix-ping-latency-when-deal-with-high-t.patch.\n- commit 1de9297\n\n- net: sfp: add mutex to prevent concurrent state checks\n  (git-fixes).\n- commit 4badb38\n\n- blacklist.conf: update blacklist\n- commit eb0a485\n\n- rpm templates: Move macro definitions below buildrequires\n  Many of the rpm macros defined in the kernel packages depend directly or\n  indirectly on script execution. OBS cannot execute scripts which means\n  values of these macros cannot be used in tags that are required for OBS\n  to see such as package name, buildrequires or buildarch.\n  Accumulate macro definitions that are not directly expanded by mkspec\n  below buildrequires and buildarch to make this distinction clear.\n- commit 89eaf4c\n\n- media: usb: dvd-usb: fix uninit-value bug in\n  dibusb_read_eeprom_byte() (git-fixes).\n- commit 4772961\n\n- media: uvcvideo: Set capability in s_param (git-fixes).\n- commit df9234c\n\n- media: dw2102: Fix use after free (git-fixes).\n- commit 6909f5e\n\n- media: dw2102: make dvb_usb_device_description structures const\n  (git-fixes).\n- Refresh\n  patches.suse/media-dw2102-Fix-memleak-on-sequence-of-probes.patch.\n- commit cfe8bf2\n\n- media: dvb-usb: Add memory free on error path in dw2102_probe()\n  (git-fixes).\n- Refresh\n  patches.suse/media-dw2102-Fix-memleak-on-sequence-of-probes.patch.\n- commit 60bfc4d\n\n- [media] media drivers: annotate fall-through (git-fixes).\n- commit 550adce\n\n- rpm/check-for-config-changes: add GCC_ASM_GOTO_OUTPUT_WORKAROUND to IGNORED_CONFIGS_RE\n  Introduced by commit 68fb3ca0e408 (\u0026quot;update workarounds for gcc \u0026quot;asm\n  goto\u0026quot; issue\u0026quot;).\n- commit be1bdab\n\n- media: rc: ir-rc6-decoder: enable toggle bit for Kathrein\n  RCU-676 remote (git-fixes).\n- commit 40a7cdd\n\n- media: rc: do not remove first bit if leader pulse is present\n  (git-fixes).\n- commit 055036d\n\n- blacklist.conf: feature fixed hasn't been backported\n- commit 299071b\n\n- media: coda: reuse coda_s_fmt_vid_cap to propagate format in\n  coda_s_fmt_vid_out (git-fixes).\n- commit 346be28\n\n- media: coda: set min_buffers_needed (git-fixes).\n- commit 9e4f67c\n\n- media: coda: constify platform_device_id (git-fixes).\n- commit da6a628\n\n- media: coda: reduce iram size to leave space for suspend to ram\n  (git-fixes).\n- commit 015f50d\n\n- media: coda: explicitly request exclusive reset control\n  (git-fixes).\n- commit 19dcce2\n\n- media: coda: wake up capture queue on encoder stop after output\n  streamoff (git-fixes).\n- Refresh\n  patches.suse/media-coda-fix-last-buffer-handling-in-V4L2_ENC_CMD_.patch.\n- commit 4fba70d\n\n- [media] coda: simplify optional reset handling (git-fixes).\n- commit bc3f552\n\n- [media] media: platform: coda: remove variable self assignment\n  (git-fixes).\n- commit 6d6901a\n\n- blacklist.conf: driver not backported\n- commit c5ae253\n\n- media: dvb-usb: dw2102: fix uninit-value in\n  su3000_read_mac_address (git-fixes).\n- commit abccca4\n\n- media: dvb-usb: m920x: Fix a potential memory leak in\n  m920x_i2c_xfer() (git-fixes).\n- commit 4716702\n\n- media: m920x: don't use stack on USB reads (git-fixes).\n- commit 45368d1\n\n- media: dw2102: Fix memleak on sequence of probes (git-fixes).\n- commit d5c69b6\n\n- blacklist.conf: false positive\n- commit 7722626\n\n- blacklist.conf: renames a module. direct breakage of user space\n- commit bf0df5d\n\n- usb: musb: dsps: Fix the probe error path (git-fixes).\n- commit 2f6dfb0\n\n- usb: musb: tusb6010: check return value after calling\n  platform_get_resource() (git-fixes).\n- commit 3b8e34e\n\n- usb: musb: musb_dsps: request_irq() after initializing musb\n  (git-fixes).\n- commit 9ef2688\n\n- usb: host: fotg210: fix the actual_length of an iso packet\n  (git-fixes).\n- commit bcd63df\n\n- usb: host: fotg210: fix the endpoint's transactional\n  opportunities calculation (git-fixes).\n- commit f16fc26\n\n- compute-PATCHVERSION: Do not produce output when awk fails\n  compute-PATCHVERSION uses awk to produce a shell script that is\n  subsequently executed to update shell variables which are then printed\n  as the patchversion.\n  Some versions of awk, most notably bysybox-gawk do not understand the\n  awk program and fail to run. This results in no script generated as\n  output, and printing the initial values of the shell variables as\n  the patchversion.\n  When the awk program fails to run produce 'exit 1' as the shell script\n  to run instead. That prevents printing the stale values, generates no\n  output, and generates invalid rpm spec file down the line. Then the\n  problem is flagged early and should be easier to diagnose.\n- commit 8ef8383\n\n- x86/cpu, kvm: Move X86_FEATURE_LFENCE_RDTSC to its native leaf (git-fixes).\n- commit 55e0925\n\n- KVM: x86: Move open-coded CPUID leaf 0x80000021 EAX bit propagation  code (git-fixes).\n- commit aebeb2d\n\n- KVM: x86: synthesize CPUID leaf 0x80000021h if useful (git-fixes).\n- commit 9c96097\n\n- KVM: x86: add support for CPUID leaf 0x80000021 (git-fixes).\n- commit 5a997a6\n\n- x86/asm: Add _ASM_RIP() macro for x86-64 (%rip) suffix (git-fixes).\n- commit 54b16df\n\n- KVM: VMX: Move VERW closer to VMentry for MDS mitigation (git-fixes).\n- KVM: VMX: Use BT+JNC, i.e. EFLAGS.CF to select VMRESUME vs. VMLAUNCH (git-fixes).\n- x86/bugs: Use ALTERNATIVE() instead of mds_user_clear static key (git-fixes).\n  Also add mds_user_clear to kABI severity as it's used purely for\n  mitigation so it's low risk.\n- x86/entry_32: Add VERW just before userspace transition (git-fixes).\n- x86/entry_64: Add VERW just before userspace transition (git-fixes).\n- x86/bugs: Add asm helpers for executing VERW (bsc#1213456).\n- commit 7cd11ce\n\n- net/rds: Fix UBSAN: array-index-out-of-bounds in rds_cmsg_recv\n  (bsc#1219127 CVE-2024-23849).\n- commit e941df3\n\n- USB: hub: check for alternate port before enabling\n  A_ALT_HNP_SUPPORT (bsc#1218527).\n- commit aaefb30\n\n- blacklist.conf: add macsonic ethernet driver\n- commit 1c0cfbf\n\n- kernel-binary: Move build script to the end\n  All other spec templates have the build script at the end, only\n  kernel-binary has it in the middle. Align with the other templates.\n- commit 98cbdd0\n\n- blacklist.conf: update blacklist\n- commit b541c7e\n\n- rpm templates: Aggregate subpackage descriptions\n  While in some cases the package tags, description, scriptlets and\n  filelist are located together in other cases they are all across the\n  spec file. Aggregate the information related to a subpackage in one\n  place.\n- commit 8eeb08c\n\n- net: bonding: debug: avoid printing debug logs when bond is\n  not notifying peers (git-fixes).\n- commit f58ad69\n\n- rpm templates: sort rpm tags\n  The rpm tags in kernel spec files are sorted at random.\n  Make the order of rpm tags somewhat more consistent across rpm spec\n  templates.\n- commit 8875c35\n\n- usb: typec: tcpci: clear the fault status bit (git-fixes).\n- commit fbeda7b\n\n- PCI: Prevent xHCI driver from claiming AMD VanGogh USB3 DRD\n  device (git-fixes).\n- commit 2012056\n\n- Update to add CVE-2024-23851 tag,\n  patches.suse/dm-limit-the-number-of-targets-and-parameter-size-ar.patch\n  (bsc#1219827, bsc#1219146, CVE-2023-52429, CVE-2024-23851).\n- commit 7dd5c42\n\n- blacklist.conf: cleanup of comments\n- commit d4049bd\n\n- blacklist.conf: documentation only\n- commit 3d84250\n\n- audit: fix possible soft lockup in __audit_inode_child()\n  (git-fixes).\n- commit a347e97\n\n- blacklist.conf: not a fix but a cleanup\n- commit a5da3c1\n\n- blacklist.conf: only comments cleanup\n- commit 2e15690\n\n- blacklist.conf: at this time kerneldocs no longer matter\n- commit ed23d03\n\n- ASN.1: Fix check for strdup() success (git-fixes).\n- commit 26b2327\n\n- blacklist.conf: attributed to wrong commit id in fixes tag\n- commit 652fa5d\n\n- dm: limit the number of targets and parameter size area\n  (bsc#1219827, bsc#1219146, CVE-2023-52429).\n- commit 3ddaf98\n\n- scripts/PMU: Add option to skip livepatch submission\n  Kernel resubmissions that don't involve livepatches can be done without\n  kgraft package(s) and channel updates.\n- commit 8373df8\n\nPackage libzypp was updated:\n\n- applydeltaprm: Create target directory if it does not exist  (bsc#1219442)\n- version 16.22.12 (0)\n\nPackage docker was updated:\n\n[NOTE: This update was only ever released in SLES and Leap.]- Update to Docker 25.0.5-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/25.0/#2505\u0026gt; bsc#1223409\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * cli-0001-docs-include-required-tools-in-source-tree.patch\n- Remove upstreamed patches:\n  - 0007-daemon-overlay2-remove-world-writable-permission-fro.patch\n- Update --add-runtime to point to correct binary path.\n\n[NOTE: This update was only ever released in SLES and Leap.]\n- Add patch to fix bsc#1220339\n  * 0007-daemon-overlay2-remove-world-writable-permission-fro.patch\n- rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * 0006-Vendor-in-latest-buildkit-v0.11-branch-including-CVE.patch\n\n- Allow to disable apparmor support (ALP supports only SELinux)\n\n- Update to Docker 25.0.3-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/25.0/#2503\u0026gt;\n- Fixes:\n  * bsc#1219267 - CVE-2024-23651\n  * bsc#1219268 - CVE-2024-23652\n  * bsc#1219438 - CVE-2024-23653\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * cli-0001-docs-include-required-tools-in-source-tree.patch\n- Remove upstreamed patches:\n  - 0006-Vendor-in-latest-buildkit-v0.11-branch-including-CVE.patch\n\nPackage systemd was updated:\n\n- Import commit 15ca9f01c18a8037bf26b1a85fee344c65944268  eedf77456d util: improve comments why we ignore EACCES and EPERM\n  2018a0d492 util: bind_remount_recursive_with_mountinfo(): ignore submounts which cannot be accessed\n  4c98cb57e2 namespace: don't fail on masked mounts (#3794) (bsc#1220285)\n  7dd5e84ab6 man: Document ranges for distributions config files and local config files\n  7282534592 Recommend drop-ins over modifications to the main config file\n  29e632c34a man: reword the description of \u0026quot;main conf file\u0026quot;\n  e903f529e8 man: rework section about configuration file precedence\n  4438e1be12 man: document paths under /usr/local in standard-conf.xml\n\nPackage nghttp2 was updated:\n\n- security update- added patches\n  fix CVE-2024-28182 [bsc#1221399], HTTP/2 CONTINUATION frames can be utilized for DoS attacks\n  + nghttp2-CVE-2024-28182-1.patch\n  fix CVE-2024-28182-2 [bsc#1221399], HTTP/2 CONTINUATION frames can be utilized for DoS attacks\n  + nghttp2-CVE-2024-28182-2.patch\n\nPackage krb5 was updated:\n\n- Fix warning executing %postun scriptlet; (bsc#1223122);\n- Fix memory leaks, add patch 0015-Fix-two-unlikely-memory-leaks.patch\n  * CVE-2024-26458, bsc#1220770\n  * CVE-2024-26461, bsc#1220771\n\n- Update to krb5 1.16.3 (jsc#PED-7884). Most relevant changes:\n  * Remove the triple-DES and RC4 encryption types from the default\n    value of supported_enctypes, which determines the default key\n    and salt types for new password-derived keys. By default, keys\n    will only created only for AES128 and AES256. This mitigates\n    some types of password guessing attacks.\n  * Add support for the AES-SHA2 enctypes, which allows sites to\n    conform to Suite B crypto requirements.\n- Removed patches, useless or upstreamed\n  * krb5-1.10-kpasswd_tcp.patch\n  * krb5-1.7-doublelog.patch\n  * krb5-1.9-kprop-mktemp.patch\n  * krb5-1.10-ksu-access.patch\n  * krb5-kvno-230379.patch\n  * krb5-1.12-doxygen.patch\n  * bnc#897874-CVE-2014-5351.diff\n  * krb5-1.13-work-around-replay-cache-creation-race.patch\n  * 0104-Verify-decoded-kadmin-C-strings-CVE-2015-8629.patch\n  * 0105-Fix-leaks-in-kadmin-server-stubs-CVE-2015-8631.patch\n  * 0106-Check-for-null-kadm5-policy-name-CVE-2015-8630.patch\n  * 0109-Preserve-GSS-context-on-init-accept-failure.patch\n  * 0115-Remove-incorrect-KDC-assertion.patch\n  * 0116-Implement-GSS_KRB5_CRED_NO_CI_FLAGS_X-cred-option.patch\n  * 0117-Add-tests-for-GSS_KRB5_CRED_NO_CI_FLAGS_X.patch\n  * 0118-Implement-GSS_KRB5_CRED_NO_CI_FLAGS_X-for-SPNEGO.patch\n  * 0119-Load-mechglue-config-files-from-etc-gss-mech.d.patch\n  * 0120-Document-etc-gss-mech.d-.conf.patch\n  * 0121-Fix-impersonate_name-to-work-with-interposers.patch\n  * 0122-Use-preauth-options-when-changing-password.patch\n  * 0123-Improve-extended-gic-option-support.patch\n  * 0124-Use-responder-for-non-preauth-AS-requests.patch\n- New patches:\n  * 0011-Fix-KDC-null-deref-on-bad-encrypted-challenge.patch\n  * Fix KDC null pointer dereference via a FAST inner body that\n    lacks a server field; (CVE-2021-37750); (bsc#1189929);\n    0012-Fix-KDC-null-deref-on-TGS-inner-body-null-server.patch\n- Renamed patches:\n  * Patch krb5-1.12-pam.patch -\u0026gt; 0001-krb5-1.12-pam.patch\n  * Patch krb5-1.9-manpaths.dif -\u0026gt; 0002-krb5-1.9-manpaths.patch\n  * Patch krb5-1.12-buildconf.patch -\u0026gt; 0003-krb5-1.12-buildconf.patch\n  * Patch krb5-1.6.3-gssapi_improve_errormessages.dif -\u0026gt;\n    0004-krb5-1.6.3-gssapi_improve_errormessages.patch\n  * Patch krb5-1.6.3-ktutil-manpage.dif -\u0026gt;\n    0005-krb5-1.6.3-ktutil-manpage.patch\n  * Patch krb5-1.12-api.patch -\u0026gt; 0006-krb5-1.12-api.patch\n  * Patch krb5-1.12-ksu-path.patch -\u0026gt; 0007-krb5-1.12-ksu-path.patch\n  * Patch krb5-1.12-selinux-label.patch -\u0026gt; 0008-krb5-1.12-selinux-label.patch\n  * Patch krb5-1.9-debuginfo.patch -\u0026gt; 0009-krb5-1.9-debuginfo.patch\n  * Patch 0125-Add-recursion-limit-for-ASN.1-indefinite-lengths.patch -\u0026gt;\n    0010-Add-recursion-limit-for-ASN.1-indefinite-lengths.patch\n  * Patch 0126-Fix-integer-overflows-in-PAC-parsing.patch -\u0026gt;\n    0013-Fix-integer-overflows-in-PAC-parsing.patch\n  * Patch 0127-Ensure-array-count-consistency-in-kadm5-RPC.patch -\u0026gt;\n    0014-Ensure-array-count-consistency-in-kadm5-RPC.patch\n\nPackage python36 was updated:\n\n- Add bpo38361-syslog-no-slash-ident.patch (bsc#1222109,  gh#python/cpython!16557) fixes syslog making default \u0026quot;ident\u0026quot;\n  from sys.argv[0].\n- Update CVE-2023-52425-libexpat-2.6.0-backport.patch so that\n  it uses features sniffing, not just comparing version number\n  (bsc#1220664, bsc#1219559, bsc#1221563, bsc#1222075).\n- Remove support-expat-CVE-2022-25236-patched.patch, which was\n  the previous name of this patch.\n- Add CVE-2023-52425-remove-reparse_deferral-tests.patch skipping\n  failing tests.\n- Refresh patches:\n  - CVE-2023-27043-email-parsing-errors.patch\n  - fix_configure_rst.patch\n  - skip_if_buildbot-extend.patch\n\n- bsc#1221854 (CVE-2024-0450) Add\n  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n- Add bh42369-thread-safety-zipfile-SharedFile.patch (from\n  gh#python/cpython!26974) required by the previous patch.\n- Add expat-260-test_xml_etree-reparse-deferral.patch to make the\n  interpreter work with patched libexpat in our distros.\n- Move all patches from locally sourced to the branch\n  opensuse-3.6 branch at GitHub repo, and move all metadata to\n  commits themselves (readable in the headers of each patch).\n- Add bpo-41675-modernize-siginterrupt.patch to make Python build\n  cleanly even on more recent SPs of SLE-15\n  (gh#python/cpython#85841).\n- Remove patches:\n  - bpo36263-Fix_hashlib_scrypt.patch - fix against bug in\n    OpenSSL fixed in 1.1.1c (gh#openssl/openssl!8483), so this\n    patch is redundant on all SUSE-supported distros\n  - python-3.3.0b1-test-posix_fadvise.patch - protection\n    against the kernel issues which has been fixed in\n    gh#torvalds/linux@3d3727cdb07f, which has been included in\n    all our kernels more recent than SLE-11.\n  - python-3.3.3-skip-distutils-test_sysconfig_module.patch -\n    skips a test, which should be relevant only for testing on\n    Mac OS X systems with universal builds. I have no valid\n    record, that this test would be ever problematic on Linux.\n  - bpo-36576-skip_tests_for_OpenSSL-111.patch, which was\n    included already in Python 3.5.\n\n- (bsc#1219666, CVE-2023-6597) Add\n  CVE-2023-6597-TempDir-cleaning-symlink.patch (patch from\n  gh#python/cpython!99930) fixing symlink bug in cleanup of\n  tempfile.TemporaryDirectory.\n- Merge together bpo-36576-skip_tests_for_OpenSSL-111.patch into\n  skip_SSL_tests.patch, and make them include all conditionals.\n\nPackage _product:sle-sdk-release was updated:\n\nPackage less was updated:\n\n- Fix CVE-2024-32487, mishandling of \\n character in paths when  LESSOPEN is set leads to OS command execution\n  (CVE-2024-32487, bsc#1222849)\n  * CVE-2024-32487.patch\n\n- Fix CVE-2022-48624, LESSCLOSE handling in less does not quote shell\n  metacharacters, bsc#1219901\n  * CVE-2022-48624.patch\n\nPackage python-base was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Switch to using the system libexpat (bsc#1219559,\n  CVE-2023-52425)\n- Make sure to remove all embedded versions of other packages\n  (including expat).\n- Add CVE-2023-52425-libexpat-2.6.0-remove-failing-tests.patch\n  removing failing test fixing bpo#3151, which we just not\n  support.\n- Remove patches over those embedded packages (cffi):\n  - python-2.7-libffi-aarch64.patch\n  - sparc_longdouble.patch\n\n- Modify CVE-2023-27043-email-parsing-errors.patch to fix the\n  unicode string handling in email.utils.parseaddr()\n  (bsc#1222537).\n- Revert CVE-2022-48560-after-free-heappushpop.patch, the fix was\n  unneeded.\n\n- Switch off tests. ONLY FOR FACTORY!!! (bsc#1219306)\n\n- Build with -std=gnu89 to build correctly with gcc14, bsc#1220970\n\nPackage python-typing was updated:\n\n- Update to 3.10.0.0  * Implement TypeGuard (PEP 649)\n  * backport ParamSpecArgs/Kwargs\n  * Fixed required/optional keys with old-style TypedDict\n  * Bring in protocolâs __init__ behaviour same like in python \u0026gt; 3.8\n  * Support PEP 612 in typing_extensions (Python 3)\n  * Also run python 3.9 in CI\n  * Add OrderedDict to typing_extensions\n  * Only allow installing this package for Python 2.7 and 3.4\n  * Document availability of Annotated\n  * Update test_typing_extensions.py\n  * Apply get_args fix from bpo-40398 to typing_extensions\n  * Fix tests failing with 3.10.0a2+\n  * Fix stray close paren\n  * Update README\n  * Disable 3.5.1 build -- can't install psutils needed by pytest-xdist\n  * Bump typing_extensions version to 3.7.4.3\n  * Remove extra 'use' in readme\n- from version 3.7.4.3\n  * Revert last two changes; bump version to 3.7.4.3\n- from version 3.7.4.2\n  * Disallow installation on 3.5+\n  * Add tox.ini for typing_extensions\n  * Add PEP 613 TypeAlias to typing_extensions\n  * Make tests for Annotated work with Python 3.9\n  * Remove Python 3.3 from tox.ini\n  * Fix flake8 failure by using Python 3.8\n  * Add SupportsIndex, added in Python 3.8\n  * Update package metadata\n  * Bump typing_extensions version to 3.7.4.2\n  * Fix ForwardRef hash and equality checks\n  * Fix required and optional keys inheritance for TypedDict\n  * Replace asyncio.coroutine with async-await\n  * Reuse stdlib PEP 593 implementation in typing_extensions if present\n  * Add .vscode and .egg-info to gitignore\n  * Backport get_origin() and get_args()\n  * Add clarification to package description\n  * Track optional TypdeDict keys\n  * Accept arbitrary keyword names in NamedTuple() and TypedDict()\n  * Bump typing_extensions version\n  * Add missing objects in typing_extensions/README.rst\n- from version 3.7.4.1\n  * Fix isinstance() with generic protocol subclasses after subscripting\n  * Try fixing Travis build\n    + fix tests for non-default interpreters\n  * Use environment marker to specify typing dependency\n  * Fix unions of protocols on Python 2\n  * Bump typing_extensions version and typing dependency version\n- from version 3.7.4\n  * Fix subclassing builtin protocols on older Python versions\n  * Move Protocol, runtime_checkable, Final, final, Literal, and TypedDict to typing\n  * Add support for Python 3.8 in typing_extensions\n  * Unify the implementation of annotated in src_py2 and src_py3\n  * Add Annotated in python2\n  * Pep 593 py3\n  * Drop support of Python 3.3\n  * [typing-extensions] Simple implementation for IntVar\n  * Add a python 3.7+ version of Annotated to typing_extensions\n  * Add SupportsIndex\n  * Add TypedDict to typing_extensions\n  * .travis.yml: The 'sudo' tag is now deprecated in Travis CI\n  * Add Final to the README\n  * Run the tests using the current Python executable\n  * Fix GeneralMeta.__instancecheck__() for old style classes\n  * Bump typing_extensions version\n  * Add Literal[...] types to typing_extensions\n  * Fix instance/subclass checks of functions against runtime protocols\n  * Bump typing_extension version\n  * Improve PyPI entry for typing_extensions\n  * Add Final to typing_extensions\n- from version 3.6.6\n  * Include license file for typing-extensions and in wheels\n  * Fix IO.closed to be property\n  * Backport Generic.__new__ fix\n  * Bump typing_extensions version before release\n  * Add missing 'NoReturn' to __all__ in typing.py\n  * Add annotations to NamedTuple children __new__ constructors\n  * Fix typing_extensions to support PEP 560\n  * Fix for issue #524\n  * Pass *args and **kwargs to superclass in Generic.__new__\n- Rename README.rst to README.md in %doc section\n\nPackage google-guest-configs was updated:\n\n- Update to version 20240307.00 (bsc#1221146, bsc#1221900, bsc#1221901)  * Support dot in NVMe device ids (#68)\n- from version 20240304.00\n  * google_set_hostname: Extract rsyslog service name\n    with a regexp for valid systemd unit names (#67)\n- from version 20240228.00\n  * Remove quintonamore from OWNERS (#64)\n- from version 20240119.00\n  * Setup smp affinity for IRQs and XPS on A3+ VMs (#63)\n\n- Update to version 20231214.00\n  * set multiqueue: A3 check set timeout the MDS call in 1s (#62)\n- from version 20231103.00\n  * Update owners (#61)\n  * Update owners (#58)\n\n- Update to version 20230929.00\n  * Update multinic filter to pick only pci devices (#59)\n\nPackage openssh was updated:\n\n- also remember the active state of the service, so openssh8.4  can pick it up. bsc#1220110\n- handle these when we do go from openssh8.4-server back to openssh\n\nPackage lifecycle-data-sle-module-toolchain was updated:\n\n- Added expiration data for GCC 12 yearly update for the Toolchain/Development modules.  (bsc#1221352)\n\nPackage util-linux-systemd was updated:\n\n- Properly neutralize escape sequences in wall  (util-linux-CVE-2024-28085.patch, bsc#1221831, CVE-2024-28085,\n  and its prerequisites: util-linux-fputs_careful1.patch,\n  util-linux-wall-migrate-to-memstream.patch\n  util-linux-fputs_careful2.patch).\n\nPackage cpio was updated:\n\n- Fix cpio not working after the fix in bsc#1218571, fixes bsc#1219238  * fix-bsc1219238.patch\n\nPackage nfs-utils was updated:\n\n- Add 0208-mountd-add-support-for-case-insensitive-file-names.patch  Fix for bsc#1221774 - support case-insensivtive file names\n\nPackage python3 was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Add CVE-2023-52425-libexpat-2.6.0-backport.patch fixing etree\n  XMLPullParser tests for Expat \u0026gt;=2.6.0 with reparse deferral\n  (fixing CVE-2023-52425 or bsc#1219559).\n\nPackage curl was updated:\n\n- Security fix: [bsc#1221665, CVE-2024-2004]  * Usage of disabled protocol\n  * Add curl-CVE-2024-2004.patch\n\n- Security fix: [bsc#1221667, CVE-2024-2398]\n  * curl: HTTP/2 push headers memory-leak\n  * Add curl-CVE-2024-2398.patch\n\nPackage google-guest-agent was updated:\n\n- Update to version 20240314.00 (bsc#1221900, bsc#1221901)  * NetworkManager: only set secondary interfaces as up (#378)\n  * address manager: make sure we check for oldMetadata (#375)\n  * network: early setup network (#374)\n  * NetworkManager: fix ipv6 and ipv4 mode attribute (#373)\n  * Network Manager: make sure we clean up ifcfg files (#371)\n  * metadata script runner: fix script download (#370)\n  * oslogin: avoid adding extra empty line at the end of /etc/security/group.conf (#369)\n  * Dynamic vlan (#361)\n  * Check for nil response (#366)\n  * Create NetworkManager implementation (#362)\n  * Skip interface manager on Windows (#363)\n  * network: remove ignore setup (#360)\n  * Create wicked network service implementation and its respective unit (#356)\n  * Update metadata script runner, add tests (#357)\n  * Refactor guest-agent to use common retry util (#355)\n  * Flush logs before exiting #358 (#359)\n- Refresh patches for new version\n  * dont_overwrite_ifcfg.patch\n\n- No need for double %setup.\n\n- Use %patch -P N instead of deprecated %patchN.\n\n- Update to version 20240213.00\n  * Create systemd-networkd unit tests (#354)\n- from version 20240209.00\n  * Update network manager unit tests (#351)\n- from version 20240207.02\n  * Implement retry util (#350)\n- from version 20240207.01\n  * Refactor utils package to not dump everything unrelated into one file (#352)\n- from version 20240207.00\n  * Set version on metadata script runner (#353)\n  * Implement cleanup of deprecated configuration directives (#348)\n  * Ignore DHCP offered routes only for secondary nics (#347)\n  * Deprecate DHClient in favor of systemd-networkd (#342)\n  * Generate windows and linux licenses (#346)\n- from version 20240122.00\n  * Remove quintonamore from OWNERS (#345)\n- from version 20240111.00\n  * Delete integration tests (#343)\n- from version 20240109.00\n  * Update licenses with dependencies of go-winio (#339)\n  * Add github.com/Microsoft/go-winio to third party licensing (#337)\n- Add explicit versioned dependency on google-guest-oslogin (bsc#1219642)\n- Refresh patches for new version\n  * dont_overwrite_ifcfg.patch\n\n- Update to version 20231214.00\n  * Fix snapshot test failure (#336)\n- from version 20231212.00\n  * Implement json-based command messaging system for guest-agent (#326)\n- from version 20231118.00\n  * sshca: Remove certificate caching (#334)\n- from version 20231115.00\n  * revert: 3ddd9d4a496f7a9c591ded58c3f541fd9cc7e317 (#333)\n  * Update script runner to use common cfg package (#331)\n\n- Update to version 20231110.00\n  * Update Google UEFI variable (#329)\n  * Update owners (#328)\n- from version 20231103.00\n  * Make config parsing order consistent (#327)\n\n- Update to version 20231031.01 (bsc#1216547, bsc#1216751)\n  * Add prefix to scheduler logs (#325)\n- from version 20231030.00\n  * Test configuration files are loaded in the documented\n    order. Fix initial integration test. (#324)\n  * Enable mTLS by default (#323)\n- from version 20231026.00\n  * Rotate MDS root certificate (#322)\n- from version 20231020.00\n  * Update response struct, add tests (#315)\n  * Don't try to schedule mTLS job twice (#317)\n- from version 20231019.00\n  * snapshot: Add context cancellation handling (#318)\n\n- Bump the golang compiler version to 1.21 (bsc#1216546)\n\n- Update to version 20231016.00\n  * instance setup: trust/rely on metadata package's retry (#316)\n- from version 20231013.01\n  * Update known cert dirs for updaters (#314)\n- from version 20231011.00\n  * Verify cert refresher is enabled before running (#312)\n- from version 20231009.00\n  * Add support for the SSH key options (#296)\n- from version 20231006.01\n  * Events interface improvement (#290)\n- from version 20231006.00\n  * Refactor script runner to use common metadata package (#311)\n  * Schedule MTLS job before notifying systemd (#310)\n  * Refactor authorized keys to use metadata package (#300)\n- from version 20231005.00\n  * docs update: add configuration and event manager's docs. (#309)\n- from version 20231004.01\n  * Fix license header (#301)\n  * packaging(deb): add epoch to oslogin dep declaration (#308)\n- from version 20231004.00\n  * packaging(deb): ignore suffix of version (#306)\n  * packaging: force epoch and ignore suffix of version (#305)\n- from version 20231003.01\n  * oslogin: declare explicitly dependency (#304)\n  * oslogin: remove Unstable.pamless_auth_stack feature flag (#303)\n- from version 20231003.00\n  * oslogin: resort ssh configuration keys (#299)\n- from version 20230925.00\n  * oslogin: introduce a feature flag to cert auth (#298)\n- from version 20230923.00\n  * gitignore: unify ignore in the root dir (#297)\n- from version 20230921.01\n  * managers: we accidentally disabled addressMgr, bring it back (#295)\n  * cfg: fix typos (#294)\n  * cfg: config typos (#293)\n  * cfg: introduce a configuration management package (#288)\n- from version 20230921.00\n  * mtls: bring it back (#292)\n- from version 20230920.01\n  * Fix permissions on file created by SaferWriteFile() (#291)\n- from version 20230920.00\n  * sshca: re-enable the event watcher \u0026amp; handler (#289)\n- from version 20230919.01\n  * oslogin: add PAMless Authorization Stack configuration (#285)\n- from version 20230919.00\n  * Preparing it for review (#287)\n  * sshca: make sure to restore SELinux context of the pipe (#286)\n  * remove deprecated usage, fix warnings (#282)\n  * Update system store (#278)\n  * Update workload certificate endpoints, use metadata package (#275)\n  * metadata: use url package to form metadata URLs (#284)\n- from version 20230913.00\n  * release prep: disable ssh trusted ca module (#281)\n- from version 20230912.00\n  * New Guest Agent Release (#280)\n- from version 20230909.00\n  * Revert \u0026quot;service: remove the use of the service library (#273)\u0026quot; (#276)\n  * service: remove the use of the service library (#273)\n- from version 20230906.01\n  * Store keys to machine keyset (#272)\n- from version 20230905.00\n  * restorecon: first try to determine if it's installed (#271)\n  * run: change all commands to use CommandContext (#268)\n  * Notify systemd after scheduling required jobs (#270)\n  * Store certs in ProgramData instead of Program Files (#269)\n  * metadata watcher: remove local retry \u0026amp; implement unit tests (#267)\n  * run: split command running utilities into its own package (#265)\n\n- Update to version 20230828.00\n  * snapshot: Use main context rather than create its own (#266)\n- from version 20230825.01\n  * Verify if cert was successfully added to certpool (#264)\n- from version 20230825.00\n  * Find previous cert for cleanup using one stored on disk (#263)\n- from version 20230823.00\n  * Revert \u0026quot;sshtrustedca: configure selinux context\n    for sshtrustedca pipe (#256)\u0026quot; (#262)\n  * Update credentials directory on Linux (#260)\n- from version 20230821.00\n  * Update owners (#261)\n- from version 20230819.00\n  * Revert \u0026quot;guest-agent: prepare for public release (#258)\u0026quot; (#259)\n- from version 20230817.00\n  * guest-agent: prepare for public release (#258)\n- from version 20230816.01\n  * Enable telemetry collection by default (#253)\n- from version 20230816.00\n  * Add pkcs12 license and update retry logic (#257)\n  * sshtrustedca: Configure selinux context for sshtrustedca pipe (#256)\n  * Store windows certs in certstore (#255)\n  * events: Multiplex event watchers (#250)\n  * Scheduler fixes (#254)\n  * Update license files (#251)\n  * Run telemetry every 24 hours, record pretty name on linux (#248)\n\n- Update to version 20230811.00\n  * sshca: move the event handler to its own package (#247)\n- from version 20230809.02\n  * Move scheduler package to google_guest_agent (#249)\n- from version 20230809.01\n  * Add scheduler utility to run jobs at interval (#244)\n- from version 20230809.00\n  * sshca: transform the format from json to openssh (#246)\n- from version 20230803.00\n  * Add support for reading UEFI variables on windows (#243)\n- from version 20230801.03\n  * sshtrustedca watcher: fix concurrency error (#242)\n- from version 20230801.02\n  * metadata: add a delta between http client timeout and hang (#241)\n- from version 20230801.00\n  * metadata: properly set request config (#240)\n  * main: bring back the mds client initialization (#239)\n  * metadata: don't try to use metadata before agentInit() is done (#238)\n  * Add (disabled) telemetry logic to GuestAgent (#219)\n  * metadata event handler: updates and bug fixes (#235)\n  * Verify client credentials are signed by root CA before writing on disk (#236)\n  * metadata: properly handle context cancelation (#234)\n  * metadata: fix context cancelation error check (#233)\n  * metadata: remove the sleep around metadata in instance setup (#232)\n  * metadata: implement backoff strategy (#231)\n  * Decrypt and store client credentials on disk (#230)\n  * Upgrade Go version 1.20 (#228)\n  * Fetch guest credentials and add MDS response proto (#226)\n  * metadata: pass main context to WriteGuestAttributes() (#227)\n  * Support for reading \u0026amp; writing Root CA cert from UEFI variable (#225)\n  * ssh_trusted_ca: enable the feature (#224)\n  * sshTrustedCA: add pipe event handler (#222)\n  * events: start using events layer (#223)\n- from version 20230726.00\n  * events: introducing a events handling subsystem (#221)\n- from version 20230725.00\n  * metadata: add metadata client interface (#220)\n- from version 20230711.00\n  * metadata: moving to its own package (#218)\n- from version 20230707.00\n  * snapshot: fix request handling error (#217)\n- Bump Go API version to 1.20\n\nPackage cloud-netconfig was updated:\n\n- Update to version 1.14  + Use '-s' instead of '--no-progress-meter' for curl (bsc#1221757)\n\n- Add version settings to Provides/Obsoletes\n\n- Update to version 1.12 (bsc#1221202)\n  + If token access succeeds using IPv4 do not use the IPv6 endpoint\n    only use the IPv6 IMDS endpoint if IPv4 access fails.\n\n- Add Provides/Obsoletes for dropped cloud-netconfig-nm\n- Install dispatcher script into /etc/NetworkManager/dispatcher.d\n  on older distributions\n- Add BuildReqires: NetworkManager to avoid owning dispatcher.d\n  parent directory\n\n- Update to version 1.11:\n  + Revert address metadata lookup in GCE to local lookup (bsc#1219454)\n  + Fix hang on warning log messages\n  + Check whether getting IPv4 addresses from metadata failed and abort\n    if true\n  + Only delete policy rules if they exist\n  + Skip adding/removing IPv4 ranges if metdata lookup failed\n  + Improve error handling and logging in Azure\n  + Set SCRIPTDIR when installing netconfig wrapper\n\n- Update to version 1.10:\n  + Drop cloud-netconfig-nm sub package and include NM dispatcher\n    script in main packages (bsc#1219007)\n  + Spec file cleanup\n\n- Update to version 1.9:\n  + Drop package dependency on sysconfig-netconfig\n  + Improve log level handling\n  + Support IPv6 IMDS endpoint in EC2 (bsc#1218069)\n\nPackage wicked was updated:\n\n- client: fix ifreload to pull UP ports/links again when the config  of their master/lower changed (bsc#1224100,gh#openSUSE/wicked#1014).\n  [+ 0001-ifreload-pull-UP-again-on-master-lower-changes-bsc1224100.patch]\n\n- Update to version 0.6.75:\n  - cleanup: fix ni_fsm_state_t enum-int-mismatch warnings\n  - cleanup: fix overflow warnings in a socket testcase on i586\n  - ifcheck: report new and deleted configs as changed (bsc#1218926)\n  - man: improve ARP configuration options in the wicked-config.5\n  - bond: add ports when master is UP to avoid port MTU revert (bsc#1219108)\n  - cleanup: fix interface dependencies and shutdown order (bsc#1205604)\n  - Remove port arrays from bond,team,bridge,ovs-bridge (redundant)\n    and consistently use config and state info attached to the port\n    interface as in rtnetlink(7).\n  - Cleanup ifcfg parsing, schema configuration and service properties\n  - Migrate ports in xml config and policies already applied in nanny\n  - Remove \u0026quot;missed config\u0026quot; generation from finite state machine, which\n    is completed while parsing the config or while xml config migration.\n  - Issue a warning when \u0026quot;lower\u0026quot; interface (e.g. eth0) config is missed\n    while parsing config depending on it (e.g. eth0.42 vlan).\n  - Resolve ovs master to the effective bridge in config and wickedd\n  - Implement netif-check-state require checks using system relations\n    from wickedd/kernel instead of config relations for ifdown and add\n    linkDown and deleteDevice checks to all master and lower references.\n  - Add a `wicked \u0026lt;ifup|ifdown|ifreload\u0026gt; --dry-run â¦` option to show the\n    system/config interface hierarchies as notice with +/- marked\n    interfaces to setup and/or shutdown.\n- Removed patches included in the source archive:\n  [- 0001-addrconf-fix-fallback-lease-drop-bsc-1220996.patch]\n  [- 0002-extensions-nbft-replace-nvme-show-nbft-with-nvme-nbf.patch]\n  [- 0003-move-all-attribute-definitions-to-compiler-h.patch]\n  [- 0004-hide-secrets-in-debug-log-bsc-1221194.patch]\n  [- 0005-client-do-to-not-convert-sec-to-msec-twice-bsc-1222105.patch]\n\n- client: do not convert sec to msec twice (bsc#1222105)\n  [+ 0005-client-do-to-not-convert-sec-to-msec-twice-bsc-1222105.patch]\n\n- addrconf: fix fallback-lease drop (bsc#1220996)\n  [+ 0001-addrconf-fix-fallback-lease-drop-bsc-1220996.patch]\n- extensions/nbft: use upstream `nvme nbft show` (bsc#1221358)\n  [+ 0002-extensions-nbft-replace-nvme-show-nbft-with-nvme-nbf.patch]\n- hide secrets in debug log (bsc#1221194)\n  [+ 0003-move-all-attribute-definitions-to-compiler-h.patch]\n  [+ 0004-hide-secrets-in-debug-log-bsc-1221194.patch]\n\n- update to version 0.6.74\n  + team: add new options like link_watch_policy (jsc#PED-7183)\n  + Fix memory leaks in dbus variant destroy and fsm free (gh#openSUSE/wicked#1001)\n  + xpath: allow underscore in node identifier (gh#openSUSE/wicked#999)\n  + vxlan: don't format unknown rtnl attrs (bsc#1219751)\n- removed patches included in the source archive:\n  [- 0009-ifreload-VLAN-changes-require-device-deletion-bsc-12.patch]\n  [- 0008-ifcheck-fix-config-changed-check-bsc-1218926.patch]\n  [- 0007-Fix-ifstatus-exit-code-for-NI_WICKED_ST_NO_CARRIER-s.patch]\n  [- 0006-dhcp6-omit-the-SO_REUSEPORT-option-bsc-1215692.patch]\n  [- 0005-duid-fix-comment-for-v6time.patch]\n  [- 0004-rtnl-parse-peer-address-on-non-ptp-interfaces.patch]\n  [- 0003-rtnl-pass-ifname-in-newaddr-parsing-and-logging.patch]\n  [- 0002-system-updater-Parse-updater-format-from-XML-configu.patch]\n  [- 0001-fix_arp_notify_loop_and_burst_sending.patch]\n\n- ifreload: VLAN changes require device deletion (bsc#1218927)\n  [+ 0009-ifreload-VLAN-changes-require-device-deletion-bsc-12.patch]\n- ifcheck: fix config changed check (bsc#1218926)\n  [+ 0008-ifcheck-fix-config-changed-check-bsc-1218926.patch]\n- client: fix exit code for no-carrier status (bsc#1219265)\n  [+ 0007-Fix-ifstatus-exit-code-for-NI_WICKED_ST_NO_CARRIER-s.patch]\n- dhcp6: omit the SO_REUSEPORT option (bsc#1215692)\n  [+ 0006-dhcp6-omit-the-SO_REUSEPORT-option-bsc-1215692.patch]\n- duid: fix comment for v6time\n  (https://github.com/openSUSE/wicked/pull/989)\n  [+ 0005-duid-fix-comment-for-v6time.patch]\n- rtnl: fix peer address parsing for non ptp-interfaces\n  (https://github.com/openSUSE/wicked/pull/987,\n  https://github.com/openSUSE/wicked/pull/988)\n  [+ 0003-rtnl-pass-ifname-in-newaddr-parsing-and-logging.patch]\n  [+ 0004-rtnl-parse-peer-address-on-non-ptp-interfaces.patch]\n- system-updater: Parse updater format from XML configuration to\n  ensure install calls can run.\n  (https://github.com/openSUSE/wicked/pull/985)\n  [+ 0002-system-updater-Parse-updater-format-from-XML-configu.patch]\n\nPackage _product:SLES-release was updated:\n\nPackage sudo was updated:\n\n- Fix NOPASSWD issue introduced by patches for CVE-2023-42465  [bsc#1221151, bsc#1221134]\n  * Update sudo-CVE-2023-42465-1of2.patch sudo-CVE-2023-42465-2of2.patch\n  * Enable running regression selftests during build time.\n\nPackage avahi was updated:\n\n- Add avahi-CVE-2023-38472.patch: Fix reachable assertion in  avahi_rdata_parse (bsc#1216853, CVE-2023-38472).\n\n- Add avahi-CVE-2023-38470.patch: Ensure each label is at least one\n  byte long (bsc#1215947, CVE-2023-38470).\n\n- Add avahi-CVE-2023-38471.patch: Extract host name usin\n  avahi_unescape_label (bsc#1216594, CVE-2023-38471).\n- Add avahi-CVE-2023-38469.patch: Reject overly long TXT resource\n  records (bsc#1216598, CVE-2023-38469).\n\nPackage python was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Switch to using the system libexpat (bsc#1219559,\n  CVE-2023-52425)\n- Make sure to remove all embedded versions of other packages\n  (including expat).\n- Add CVE-2023-52425-libexpat-2.6.0-remove-failing-tests.patch\n  removing failing test fixing bpo#3151, which we just not\n  support.\n- Remove patches over those embedded packages (cffi):\n  - python-2.7-libffi-aarch64.patch\n  - sparc_longdouble.patch\n\n- Modify CVE-2023-27043-email-parsing-errors.patch to fix the\n  unicode string handling in email.utils.parseaddr()\n  (bsc#1222537).\n- Revert CVE-2022-48560-after-free-heappushpop.patch, the fix was\n  unneeded.\n\n- Switch off tests. ONLY FOR FACTORY!!! (bsc#1219306)\n\n- Build with -std=gnu89 to build correctly with gcc14, bsc#1220970\n\nPackage regionServiceClientConfigGCE was updated:\n\n- Update to version 4.1.0  + Replace 162.222.182.90 and 35.187.193.56 (length 4096):\n    rgnsrv-gce-asia-northeast1 -\u0026gt; 162.222.182.90 expires in 9 years\n    rgnsrv-gce-us-central1 -\u0026gt; 35.187.193.56 expires in 10 years\n\nPackage bind was updated:\n\n- Security Fixes:  * Validating DNS messages containing a lot of DNSSEC signatures\n    could cause excessive CPU load, leading to a denial-of-service\n    condition. This has been fixed. (CVE-2023-50387)\n    [bsc#1219823, bind-CVE-2023-50387-CVE-2023-50868.patch]\n  * Preparing an NSEC3 closest encloser proof could cause excessiv\n    CPU load, leading to a denial-of-service condition. This has\n    been fixed. (CVE-2023-50868)\n    [bsc#1219826, bind-CVE-2023-50387-CVE-2023-50868.patch]\n  * Parsing DNS messages with many different names could cause\n    excessive CPU load. This has been fixed. (CVE-2023-4408)\n    [bsc#1219851, bind-CVE-2023-4408.patch]\n\nPackage google-osconfig-agent was updated:\n\n- Update to version 20240320.00 (bsc#1221900, bsc#1221901)  * Enable OSConfig agent to read GPG keys files with multiple entities (#537)\n- from version 20240314.00\n  * Update OWNERS file to replace mahmoudn GitHub\n    username by personal email GitHub username (#534)\n- from version 20240313.01\n  * Bump google.golang.org/protobuf from 1.30.0 to 1.33.0 in /e2e_tests (#535)\n- from version 20240313.00\n  * Adds a console and gcloud example policies (#533)\n- from version 20240228.00\n  * GuestPolicies e2e: Remove ed package if exist for zypper\n    startup_script in recipe-steps tests (#532)\n- from version 20240126.00\n  * Fix Enterprise Linux Recipe-Steps tests to install\n    info dependency package in the startup-script (#530)\n- from version 20240125.01\n  * Fix SUSE pkg-update and pkg-no-update e2e tests (#529)\n- from version 20240125.00\n  * Fix zypper patch info parser to consider conflicts-pkgs float versions (#528)\n- from version 20240123.01\n  * Fix SUSE package update e2e tests to use another existing package (#527)\n- from version 20240123.00\n  * Update cis-exclude-check-once-a-day.yaml (#526)\n\n- Update to version 20231219.00\n  * Bump golang.org/x/crypto from 0.14.0 to 0.17.0 (#524)\n- from version 20231207.01\n  * Some change to create an agent release (#523)\n- from version 20231207.00\n  * Some change to create an agent release (#522)\n- from version 20231205.00\n  * Some change to create an agent release (#521)\n- from version 20231130.02\n  * Merge pull request #519 from Gulio/just-release\n  * Merge branch 'master' into just-release\n  * Some change to create an agent release\n  * Some change to create an agent release\n- from version 20231130.00\n  * Some change to create an agent release (#518)\n- from version 20231129.00\n  * Fix parse yum updates to consider the packages under\n    installing-dependencies keyword (#502)\n  * Update feature names in the README file (#517)\n- from version 20231128.00\n  * Updating owners (#508)\n- from version 20231127.00\n  * Move OS policy CIS examples under the console folder (#514)\n- from version 20231123.01\n  * Adds three more OS Policy examples to CIS folder (#509)\n  * Added ekrementeskii and MahmoudNada0 to OWNERS (#505)\n- from version 20231123.00\n  * docs(osconfig):add OS policy examples for CIS scanning (#503)\n- from version 20231121.02\n  * Added SCODE to Windows error description (#504)\n- from version 20231121.01\n  * Update OWNERS (#501)\n  * Update go version to 1.21 (#507)\n- from version 20231121.00\n  * Call fqdn (#481)\n- from version 20231116.00\n  * Removing obsolete MS Windows 2019 images (#500)\n- from version 20231107.00\n  * Update owners. (#498)\n- from version 20231103.02\n  * Increasing test timeouts (#499)\n  * Update OWNERS (#497)\n- from version 20231103.01\n  * Bump google.golang.org/grpc from 1.53.0 to 1.56.3 in /e2e_tests (#493)\n  * Bump google.golang.org/grpc from 1.53.0 to 1.56.3 (#494)\n- from version 20231103.00\n  * Removing deprecated Win for containers OSs (#496)\n- from version 20231027.00\n  * Shortening the reported image names (#495)\n- from version 20231025.00\n  * Merge pull request #492 from GoogleCloudPlatform/michaljankowiak-patch-1\n  * Merge branch 'master' into michaljankowiak-patch-1\n  * Fixing name changes\n  * Fixing rename issue\n  * Fixed formatting\n  * Fixed formatting\n  * Fixing formatting\n  * Removing support for RHEL 6, adding RHEL 9\n  * Removing support for RHEL 6, adding for RHEL 9\n  * Removing support for RHEL 6 and adding for RHEL 9\n  * Removing step needed for RHEL 6\n  * Fixing build issues\n  * Removing nonexistent images and adding new ones\n- from version 20231024.00\n  * Removing obsolete OS images and adding new ones (#491)\n- from version 20231020.00\n  * Change debug messages when parsing zypper patch output (#490)\n- from version 20231013.00\n  * Bump golang.org/x/net from 0.7.0 to 0.17.0 (#489)\n- from version 20231010.00\n  * Revert \u0026quot;Added [main] section with gpgcheck to\n    the agent-managed repo file (#484)\u0026quot; (#488)\n- from version 20231003.00\n  * Bump google.golang.org/grpc from 1.42.0 to 1.53.0 in /e2e_tests (#478)\n- from version 20230920.00\n  * Update OWNERS (#485)\n- from version 20230912.00\n  * Added [main] section with gpgcheck to the agent-managed repo file (#484)\n  * Migrate empty interface to any (#483)\n\n- Bump the golang compiler version to 1.21 (bsc#1216546)\n\n- Update to version 20230829.00\n  * Added burov, dowgird, paulinakania and Gulio to OWNERS (#482)\n  \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; ./google-osconfig-agent.changes.new\n\nPackage perl-Bootloader was updated:\n\n- merge gh#openSUSE/perl-bootloader#166- log grub2-install errors correctly (bsc#1221470)\n- 0.947\n\n- merge gh#openSUSE/perl-bootloader#161\n- support old grub versions (\u0026lt;= 2.02) that used /usr/lib\n  (bsc#1218842)\n- create EFI boot fallback directory if necessary\n- 0.946\n\n- merge gh#openSUSE/perl-bootloader#157\n- bootloader_entry script can have an optional 'force-default'\n  argument (bsc#1215064)\n- skip warning about unsupported options when in compat mode\n- 0.945\n\nPackage openssl-1_1 was updated:\n\n- Security fix: [bsc#1219243, CVE-2024-0727]  * Add NULL checks where ContentInfo data can be NULL\n  * Add openssl-CVE-2024-0727.patch\n\nPackage suseconnect-ng was updated:\n\n- Update to version 1.9.0  * Fix certificate import for Yast when using a registration proxy with\n    self-signed SSL certificate (bsc#1223107)\n\n- Update to version 1.8.0\n  * Allow \u0026quot;--rollback\u0026quot; flag to run on readonly filesystem (bsc#1220679)\n\nPackage util-linux was updated:\n\n- Properly neutralize escape sequences in wall  (util-linux-CVE-2024-28085.patch, bsc#1221831, CVE-2024-28085,\n  and its prerequisites: util-linux-fputs_careful1.patch,\n  util-linux-wall-migrate-to-memstream.patch\n  util-linux-fputs_careful2.patch).\n\nPackage python-idna was updated:\n\n- Add CVE-2024-3651.patch, backported from upstream commit  gh#kjd/idna#172/commits/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\n  (bsc#1222842, CVE-2024-3651)\n\nPackage glibc was updated:\n\n- nscd-Fix-use-after-free-in-addgetnetgrentX.patch: nscd: Fix  use-after-free in addgetnetgrentX (BZ #23520)\n- glibc-CVE-2024-33599-nscd-Stack-based-buffer-overflow-in-n.patch:\n  nscd: Stack-based buffer overflow in netgroup cache\n  (CVE-2024-33599, bsc#1223423, BZ #31677)\n- glibc-CVE-2024-33600-nscd-Avoid-null-pointer-crashes-after.patch:\n  nscd: Avoid null pointer crashes after notfound response\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33600-nscd-Do-not-send-missing-not-found-re.patch:\n  nscd: Do not send missing not-found response in addgetnetgrentX\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33601-CVE-2024-33602-nscd-netgroup-Use-two.patch:\n  netgroup: Use two buffers in addgetnetgrentX (CVE-2024-33601,\n  CVE-2024-33602, bsc#1223425, BZ #31680)\n- nscd-netgroup-cache-timeout.patch: Use time_t for return type of\n  addgetnetgrentX (CVE-2024-33602, bsc#1223425)\n\n- elf-ifunc-subtests-nonpie.patch: elf: Disable some subtests of\n  ifuncmain1, ifuncmain5 for !PIE\n- iconv-iso-2022-cn-ext.patch: iconv: ISO-2022-CN-EXT: fix out-of-bound\n  writes when writing escape sequence (CVE-2024-2961, bsc#1222992)\n\nPackage vim was updated:\n\n- Updated to version 9.1 with patch level 0330, fixes the following problems  * Fixing bsc#1220763 - vim gets Segmentation fault after updating to version 9.1.0111-150500.20.9.1\n- refreshed vim-7.3-filetype_spec.patch\n- refreshed vim-7.3-filetype_ftl.patch\n- Update spec.skeleton to use autosetup in place of setup macro.\n- for the complete list of changes see\n  https://github.com/vim/vim/compare/v9.1.0111...v9.1.0330\n\nPackage python3-base was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Add CVE-2023-52425-libexpat-2.6.0-backport.patch fixing etree\n  XMLPullParser tests for Expat \u0026gt;=2.6.0 with reparse deferral\n  (fixing CVE-2023-52425 or bsc#1219559).\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "bind-utils-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-netconfig-gce-1.14-35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cpio-2.11-36.21.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.0.1-11.86.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-25.0.5_ce-98.112.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "fdupes-1.61-8.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-i18ndata-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-agent-20240314.00-1.38.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20240307.00-1.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-oslogin-20240311.00-1.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20240320.00-1.26.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-4.12.14-122.216.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-1.16.3-46.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-client-1.16.3-46.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "less-458-7.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-client3-0.6.32-32.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-common3-0.6.32-32.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libbind9-161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libblkid1-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.0.1-11.86.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libdns1110-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfastjson4-0.99.8-3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfdisk1-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libirs161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisc1107-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisccc161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisccfg163-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "liblwres161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libmount1-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libncurses5-5.9-88.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libncurses6-5.9-88.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libnghttp2-14-1.39.2-3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_0_0-1.0.2p-3.90.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1d-2.104.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython2_7-1_0-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_4m1_0-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-55.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsmartcols1-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsuseconnect-1.9.0-3.15.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsystemd0-228-157.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libudev1-228-157.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libuuid1-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-16.22.12-62.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "lifecycle-data-sle-module-toolchain-1-3.28.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ncurses-utils-5.9-88.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nfs-client-1.3.0-34.53.5",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nfs-kernel-server-1.3.0-34.53.5",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nscd-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-7.2p2-81.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-1_0_0-1.0.2p-3.90.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-Bootloader-0.947-3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-base-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-bind-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-xml-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-idna-2.5-3.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyOpenSSL-17.1.0-4.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-typing-3.10.0.0-3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python36-base-3.6.15-55.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "regionServiceClientConfigGCE-4.1.0-5.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "runc-1.1.12-16.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shadow-4.2.1-36.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shim-15.8-25.30.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sudo-1.8.27-4.48.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ng-1.9.0-3.15.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ruby-bindings-1.9.0-3.15.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-228-157.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-sysvinit-228-157.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sysuser-shadow-2.0-1.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "terminfo-5.9-88.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "terminfo-base-5.9-88.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "udev-228-157.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-systemd-2.33.2-4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.0330-17.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.0330-17.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-0.6.75-3.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-service-0.6.75-3.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-v20240609-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-12-sp5-v20240609-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2014-5351",
      "Description": "The kadm5_randkey_principal_3 function in lib/kadm5/srv/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13 sends old keys in a response to a -randkey -keepold request, which allows remote authenticated users to forge tickets by leveraging administrative access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:N/AC:H/Au:S/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2015-8629",
      "Description": "The xdr_nullstring function in lib/kadm5/kadm_rpc_xdr.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13.4 and 1.14.x before 1.14.1 does not verify whether '\\0' characters exist as expected, which allows remote authenticated users to obtain sensitive information or cause a denial of service (out-of-bounds read) via a crafted string.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:N/AC:H/Au:S/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2015-8630",
      "Description": "The (1) kadm5_create_principal_3 and (2) kadm5_modify_principal functions in lib/kadm5/srv/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) 1.12.x and 1.13.x before 1.13.4 and 1.14.x before 1.14.1 allow remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) by specifying KADM5_POLICY with a NULL policy name.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2015-8631",
      "Description": "Multiple memory leaks in kadmin/server/server_stubs.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13.4 and 1.14.x before 1.14.1 allow remote authenticated users to cause a denial of service (memory consumption) via a request specifying a NULL principal name.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2018-1000807",
      "Description": "Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python3-pyOpenSSL-17.1.0-4.26.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2019-25160",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetlabel: fix out-of-bounds memory accesses\n\nThere are two array out-of-bounds memory accesses, one in\ncipso_v4_map_lvl_valid(), the other in netlbl_bitmap_walk().  Both\nerrors are embarassingly simple, and the fixes are straightforward.\n\nAs a FYI for anyone backporting this patch to kernels prior to v4.8,\nyou'll want to apply the netlbl_bitmap_walk() patch to\ncipso_v4_bitmap_walk() as netlbl_bitmap_walk() doesn't exist before\nLinux v4.8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2019-25162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: Fix a potential use after free\n\nFree the adap structure only after we are done using it.\nThis patch just moves the put_device() down a bit to avoid the\nuse after free.\n\n[wsa: added comment to the code, added Fixes tag]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2020-12762",
      "Description": "json-c through 0.14 has an integer overflow and out-of-bounds write via a large JSON file, as demonstrated by printbuf_memappend.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libfastjson4-0.99.8-3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-36312",
      "Description": "An issue was discovered in the Linux kernel before 5.8.10. virt/kvm/kvm_main.c has a kvm_io_bus_unregister_dev memory leak upon a kmalloc failure, aka CID-f65886606c2d.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2020-36777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvbdev: Fix memory leak in dvb_media_device_free()\n\ndvb_media_device_free() is leaking memory. Free `dvbdev-\u003eadapter-\u003econn`\nbefore setting it to NULL, as documented in include/media/media-device.h:\n\"The media_entity instance itself must be freed explicitly by the driver\nif required.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2020-36784",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: cadence: fix reference leak when pm_runtime_get_sync fails\n\nThe PM reference count is not expected to be incremented on\nreturn in functions cdns_i2c_master_xfer and cdns_reg_slave.\n\nHowever, pm_runtime_get_sync will increment pm usage counter\neven failed. Forgetting to putting operation will result in a\nreference leak here.\n\nReplace it with pm_runtime_resume_and_get to keep usage\ncounter balanced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-23134",
      "Description": "Use After Free vulnerability in nfc sockets in the Linux Kernel before 5.12.4 allows local attackers to elevate their privileges. In typical configurations, the issue can only be triggered by a privileged local user with the CAP_NET_RAW capability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-33200",
      "Description": "kernel/bpf/verifier.c in the Linux kernel through 5.12.7 enforces incorrect limits for pointer arithmetic operations, aka CID-bb01a1bba579. This can be abused to perform out-of-bounds reads and writes in kernel memory, leading to local privilege escalation to root. In particular, there is a corner case where the off reg causes a masking direction change, which then results in an incorrect final aux-\u003ealu_limit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.2",
        "Vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2021-37750",
      "Description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4",
        "Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-46904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hso: fix null-ptr-deref during tty device unregistration\n\nMultiple ttys try to claim the same the minor number causing a double\nunregistration of the same device. The first unregistration succeeds\nbut the next one results in a null-ptr-deref.\n\nThe get_free_serial_index() function returns an available minor number\nbut doesn't assign it immediately. The assignment is done by the caller\nlater. But before this assignment, calls to get_free_serial_index()\nwould return the same minor number.\n\nFix this by modifying get_free_serial_index to assign the minor number\nimmediately after one is found to be and rename it to obtain_minor()\nto better reflect what it does. Similary, rename set_serial_by_index()\nto release_minor() and modify it to free up the minor number of the\ngiven hso_serial. Every obtain_minor() should have corresponding\nrelease_minor() call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hso: fix NULL-deref on disconnect regression\n\nCommit 8a12f8836145 (\"net: hso: fix null-ptr-deref during tty device\nunregistration\") fixed the racy minor allocation reported by syzbot, but\nintroduced an unconditional NULL-pointer dereference on every disconnect\ninstead.\n\nSpecifically, the serial device table must no longer be accessed after\nthe minor has been released by hso_serial_tty_unregister().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46906",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: usbhid: fix info leak in hid_submit_ctrl\n\nIn hid_submit_ctrl(), the way of calculating the report length doesn't\ntake into account that report-\u003esize can be zero. When running the\nsyzkaller reproducer, a report of size 0 causes hid_submit_ctrl) to\ncalculate transfer_buffer_length as 16384. When this urb is passed to\nthe usb core layer, KMSAN reports an info leak of 16384 bytes.\n\nTo fix this, first modify hid_report_len() to account for the zero\nreport size case by using DIV_ROUND_UP for the division. Then, call it\nfrom hid_submit_ctrl().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46907",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: footbridge: fix PCI interrupt mapping\n\nSince commit 30fdfb929e82 (\"PCI: Add a call to pci_assign_irq() in\npci_device_probe()\"), the PCI code will call the IRQ mapping function\nwhenever a PCI driver is probed. If these are marked as __init, this\ncauses an oops if a PCI driver is loaded or bound after the kernel has\ninitialised.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_limit: avoid possible divide error in nft_limit_init\n\ndiv_u64() divides u64 by u32.\n\nnft_limit_init() wants to divide u64 by u64, use the appropriate\nmath function (div64_u64)\n\ndivide error: 0000 [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 8390 Comm: syz-executor188 Not tainted 5.12.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:div_u64_rem include/linux/math64.h:28 [inline]\nRIP: 0010:div_u64 include/linux/math64.h:127 [inline]\nRIP: 0010:nft_limit_init+0x2a2/0x5e0 net/netfilter/nft_limit.c:85\nCode: ef 4c 01 eb 41 0f 92 c7 48 89 de e8 38 a5 22 fa 4d 85 ff 0f 85 97 02 00 00 e8 ea 9e 22 fa 4c 0f af f3 45 89 ed 31 d2 4c 89 f0 \u003c49\u003e f7 f5 49 89 c6 e8 d3 9e 22 fa 48 8d 7d 48 48 b8 00 00 00 00 00\nRSP: 0018:ffffc90009447198 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000200000000000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffffff875152e6 RDI: 0000000000000003\nRBP: ffff888020f80908 R08: 0000200000000000 R09: 0000000000000000\nR10: ffffffff875152d8 R11: 0000000000000000 R12: ffffc90009447270\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\nFS:  000000000097a300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000200001c4 CR3: 0000000026a52000 CR4: 00000000001506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n nf_tables_newexpr net/netfilter/nf_tables_api.c:2675 [inline]\n nft_expr_init+0x145/0x2d0 net/netfilter/nf_tables_api.c:2713\n nft_set_elem_expr_alloc+0x27/0x280 net/netfilter/nf_tables_api.c:5160\n nf_tables_newset+0x1997/0x3150 net/netfilter/nf_tables_api.c:4321\n nfnetlink_rcv_batch+0x85a/0x21b0 net/netfilter/nfnetlink.c:456\n nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:580 [inline]\n nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:598\n netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]\n netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338\n netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927\n sock_sendmsg_nosec net/socket.c:654 [inline]\n sock_sendmsg+0xcf/0x120 net/socket.c:674\n ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350\n ___sys_sendmsg+0xf3/0x170 net/socket.c:2404\n __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433\n do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlocking/qrwlock: Fix ordering in queued_write_lock_slowpath()\n\nWhile this code is executed with the wait_lock held, a reader can\nacquire the lock without holding wait_lock.  The writer side loops\nchecking the value with the atomic_cond_read_acquire(), but only truly\nacquires the lock when the compare-and-exchange is completed\nsuccessfully which isn't ordered. This exposes the window between the\nacquire and the cmpxchg to an A-B-A problem which allows reads\nfollowing the lock acquisition to observe values speculatively before\nthe write lock is truly acquired.\n\nWe've seen a problem in epoll where the reader does a xchg while\nholding the read lock, but the writer can see a value change out from\nunder it.\n\n  Writer                                | Reader\n  --------------------------------------------------------------------------------\n  ep_scan_ready_list()                  |\n  |- write_lock_irq()                   |\n      |- queued_write_lock_slowpath()   |\n\t|- atomic_cond_read_acquire()   |\n\t\t\t\t        | read_lock_irqsave(\u0026ep-\u003elock, flags);\n     --\u003e (observes value before unlock) |  chain_epi_lockless()\n     |                                  |    epi-\u003enext = xchg(\u0026ep-\u003eovflist, epi);\n     |                                  | read_unlock_irqrestore(\u0026ep-\u003elock, flags);\n     |                                  |\n     |     atomic_cmpxchg_relaxed()     |\n     |-- READ_ONCE(ep-\u003eovflist);        |\n\nA core can order the read of the ovflist ahead of the\natomic_cmpxchg_relaxed(). Switching the cmpxchg to use acquire\nsemantics addresses this issue at which point the atomic_cond_read can\nbe switched to use relaxed semantics.\n\n[peterz: use try_cmpxchg()]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: st21nfca: Fix memory leak in device probe and remove\n\n'phy-\u003epending_skb' is alloced when device probe, but forgot to free\nin the error handling path and remove path, this cause memory leak\nas follows:\n\nunreferenced object 0xffff88800bc06800 (size 512):\n  comm \"8\", pid 11775, jiffies 4295159829 (age 9.032s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c00000000d66c09ce\u003e] __kmalloc_node_track_caller+0x1ed/0x450\n    [\u003c00000000c93382b3\u003e] kmalloc_reserve+0x37/0xd0\n    [\u003c000000005fea522c\u003e] __alloc_skb+0x124/0x380\n    [\u003c0000000019f29f9a\u003e] st21nfca_hci_i2c_probe+0x170/0x8f2\n\nFix it by freeing 'pending_skb' in error and remove.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: appletouch - initialize work before device registration\n\nSyzbot has reported warning in __flush_work(). This warning is caused by\nwork-\u003efunc == NULL, which means missing work initialization.\n\nThis may happen, since input_dev-\u003eclose() calls\ncancel_work_sync(\u0026dev-\u003ework), but dev-\u003ework initalization happens _after_\ninput_register_device() call.\n\nSo this patch moves dev-\u003ework initialization before registering input\ndevice",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm rq: fix double free of blk_mq_tag_set in dev remove after table load fails\n\nWhen loading a device-mapper table for a request-based mapped device,\nand the allocation/initialization of the blk_mq_tag_set for the device\nfails, a following device remove will cause a double free.\n\nE.g. (dmesg):\n  device-mapper: core: Cannot initialize queue for request-based dm-mq mapped device\n  device-mapper: ioctl: unable to set up device queue for new table.\n  Unable to handle kernel pointer dereference in virtual kernel address space\n  Failing address: 0305e098835de000 TEID: 0305e098835de803\n  Fault in home space mode while using kernel ASCE.\n  AS:000000025efe0007 R3:0000000000000024\n  Oops: 0038 ilc:3 [#1] SMP\n  Modules linked in: ... lots of modules ...\n  Supported: Yes, External\n  CPU: 0 PID: 7348 Comm: multipathd Kdump: loaded Tainted: G        W      X    5.3.18-53-default #1 SLE15-SP3\n  Hardware name: IBM 8561 T01 7I2 (LPAR)\n  Krnl PSW : 0704e00180000000 000000025e368eca (kfree+0x42/0x330)\n             R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3\n  Krnl GPRS: 000000000000004a 000000025efe5230 c1773200d779968d 0000000000000000\n             000000025e520270 000000025e8d1b40 0000000000000003 00000007aae10000\n             000000025e5202a2 0000000000000001 c1773200d779968d 0305e098835de640\n             00000007a8170000 000003ff80138650 000000025e5202a2 000003e00396faa8\n  Krnl Code: 000000025e368eb8: c4180041e100       lgrl    %r1,25eba50b8\n             000000025e368ebe: ecba06b93a55       risbg   %r11,%r10,6,185,58\n            #000000025e368ec4: e3b010000008       ag      %r11,0(%r1)\n            \u003e000000025e368eca: e310b0080004       lg      %r1,8(%r11)\n             000000025e368ed0: a7110001           tmll    %r1,1\n             000000025e368ed4: a7740129           brc     7,25e369126\n             000000025e368ed8: e320b0080004       lg      %r2,8(%r11)\n             000000025e368ede: b904001b           lgr     %r1,%r11\n  Call Trace:\n   [\u003c000000025e368eca\u003e] kfree+0x42/0x330\n   [\u003c000000025e5202a2\u003e] blk_mq_free_tag_set+0x72/0xb8\n   [\u003c000003ff801316a8\u003e] dm_mq_cleanup_mapped_device+0x38/0x50 [dm_mod]\n   [\u003c000003ff80120082\u003e] free_dev+0x52/0xd0 [dm_mod]\n   [\u003c000003ff801233f0\u003e] __dm_destroy+0x150/0x1d0 [dm_mod]\n   [\u003c000003ff8012bb9a\u003e] dev_remove+0x162/0x1c0 [dm_mod]\n   [\u003c000003ff8012a988\u003e] ctl_ioctl+0x198/0x478 [dm_mod]\n   [\u003c000003ff8012ac8a\u003e] dm_ctl_ioctl+0x22/0x38 [dm_mod]\n   [\u003c000000025e3b11ee\u003e] ksys_ioctl+0xbe/0xe0\n   [\u003c000000025e3b127a\u003e] __s390x_sys_ioctl+0x2a/0x40\n   [\u003c000000025e8c15ac\u003e] system_call+0xd8/0x2c8\n  Last Breaking-Event-Address:\n   [\u003c000000025e52029c\u003e] blk_mq_free_tag_set+0x6c/0xb8\n  Kernel panic - not syncing: Fatal exception: panic_on_oops\n\nWhen allocation/initialization of the blk_mq_tag_set fails in\ndm_mq_init_request_queue(), it is uninitialized/freed, but the pointer\nis not reset to NULL; so when dev_remove() later gets into\ndm_mq_cleanup_mapped_device() it sees the pointer and tries to\nuninitialize and free it again.\n\nFix this by setting the pointer to NULL in dm_mq_init_request_queue()\nerror-handling. Also set it to NULL in dm_mq_cleanup_mapped_device().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46939",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Restructure trace_clock_global() to never block\n\nIt was reported that a fix to the ring buffer recursion detection would\ncause a hung machine when performing suspend / resume testing. The\nfollowing backtrace was extracted from debugging that case:\n\nCall Trace:\n trace_clock_global+0x91/0xa0\n __rb_reserve_next+0x237/0x460\n ring_buffer_lock_reserve+0x12a/0x3f0\n trace_buffer_lock_reserve+0x10/0x50\n __trace_graph_return+0x1f/0x80\n trace_graph_return+0xb7/0xf0\n ? trace_clock_global+0x91/0xa0\n ftrace_return_to_handler+0x8b/0xf0\n ? pv_hash+0xa0/0xa0\n return_to_handler+0x15/0x30\n ? ftrace_graph_caller+0xa0/0xa0\n ? trace_clock_global+0x91/0xa0\n ? __rb_reserve_next+0x237/0x460\n ? ring_buffer_lock_reserve+0x12a/0x3f0\n ? trace_event_buffer_lock_reserve+0x3c/0x120\n ? trace_event_buffer_reserve+0x6b/0xc0\n ? trace_event_raw_event_device_pm_callback_start+0x125/0x2d0\n ? dpm_run_callback+0x3b/0xc0\n ? pm_ops_is_empty+0x50/0x50\n ? platform_get_irq_byname_optional+0x90/0x90\n ? trace_device_pm_callback_start+0x82/0xd0\n ? dpm_run_callback+0x49/0xc0\n\nWith the following RIP:\n\nRIP: 0010:native_queued_spin_lock_slowpath+0x69/0x200\n\nSince the fix to the recursion detection would allow a single recursion to\nhappen while tracing, this lead to the trace_clock_global() taking a spin\nlock and then trying to take it again:\n\nring_buffer_lock_reserve() {\n  trace_clock_global() {\n    arch_spin_lock() {\n      queued_spin_lock_slowpath() {\n        /* lock taken */\n        (something else gets traced by function graph tracer)\n          ring_buffer_lock_reserve() {\n            trace_clock_global() {\n              arch_spin_lock() {\n                queued_spin_lock_slowpath() {\n                /* DEAD LOCK! */\n\nTracing should *never* block, as it can lead to strange lockups like the\nabove.\n\nRestructure the trace_clock_global() code to instead of simply taking a\nlock to update the recorded \"prev_time\" simply use it, as two events\nhappening on two different CPUs that calls this at the same time, really\ndoesn't matter which one goes first. Use a trylock to grab the lock for\nupdating the prev_time, and if it fails, simply try again the next time.\nIf it failed to be taken, that means something else is already updating\nit.\n\n\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=212761",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46941",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: Do core softreset when switch mode\n\n\nAccording to the programming guide, to switch mode for DRD controller,\nthe driver needs to do the following.\n\nTo switch from device to host:\n1. Reset controller with GCTL.CoreSoftReset\n2. Set GCTL.PrtCapDir(host mode)\n3. Reset the host with USBCMD.HCRESET\n4. Then follow up with the initializing host registers sequence\n\nTo switch from host to device:\n1. Reset controller with GCTL.CoreSoftReset\n2. Set GCTL.PrtCapDir(device mode)\n3. Reset the device with DCTL.CSftRst\n4. Then follow up with the initializing registers sequence\n\nCurrently we're missing step 1) to do GCTL.CoreSoftReset and step 3) of\nswitching from host to device. John Stult reported a lockup issue seen\nwith HiKey960 platform without these steps[1]. Similar issue is observed\nwith Ferry's testing platform[2].\n\nSo, apply the required steps along with some fixes to Yu Chen's and John\nStultz's version. The main fixes to their versions are the missing wait\nfor clocks synchronization before clearing GCTL.CoreSoftReset and only\napply DCTL.CSftRst when switching from host to device.\n\n[1] https://lore.kernel.org/linux-usb/20210108015115.27920-1-john.stultz@linaro.org/\n[2] https://lore.kernel.org/linux-usb/0ba7a6ba-e6a7-9cd4-0695-64fc927e01f1@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid1: properly indicate failure when ending a failed write request\n\nThis patch addresses a data corruption bug in raid1 arrays using bitmaps.\nWithout this fix, the bitmap bits for the failed I/O end up being cleared.\n\nSince we are in the failure leg of raid1_end_write_request, the request\neither needs to be retried (R1BIO_WriteError) or failed (R1BIO_Degraded).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46953",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: GTDT: Don't corrupt interrupt mappings on watchdow probe failure\n\nWhen failing the driver probe because of invalid firmware properties,\nthe GTDT driver unmaps the interrupt that it mapped earlier.\n\nHowever, it never checks whether the mapping of the interrupt actially\nsucceeded. Even more, should the firmware report an illegal interrupt\nnumber that overlaps with the GIC SGI range, this can result in an\nIPI being unmapped, and subsequent fireworks (as reported by Dann\nFrazier).\n\nRework the driver to have a slightly saner behaviour and actually\ncheck whether the interrupt has been mapped before unmapping things.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix race between transaction aborts and fsyncs leading to use-after-free\n\nThere is a race between a task aborting a transaction during a commit,\na task doing an fsync and the transaction kthread, which leads to an\nuse-after-free of the log root tree. When this happens, it results in a\nstack trace like the following:\n\n  BTRFS info (device dm-0): forced readonly\n  BTRFS warning (device dm-0): Skipping commit of aborted transaction.\n  BTRFS: error (device dm-0) in cleanup_transaction:1958: errno=-5 IO failure\n  BTRFS warning (device dm-0): lost page write due to IO error on /dev/mapper/error-test (-5)\n  BTRFS warning (device dm-0): Skipping commit of aborted transaction.\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0xa4e8 len 4096 err no 10\n  BTRFS error (device dm-0): error writing primary super block to device 1\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0x12e000 len 4096 err no 10\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0x12e008 len 4096 err no 10\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0x12e010 len 4096 err no 10\n  BTRFS: error (device dm-0) in write_all_supers:4110: errno=-5 IO failure (1 errors while writing supers)\n  BTRFS: error (device dm-0) in btrfs_sync_log:3308: errno=-5 IO failure\n  general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b68: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI\n  CPU: 2 PID: 2458471 Comm: fsstress Not tainted 5.12.0-rc5-btrfs-next-84 #1\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\n  RIP: 0010:__mutex_lock+0x139/0xa40\n  Code: c0 74 19 (...)\n  RSP: 0018:ffff9f18830d7b00 EFLAGS: 00010202\n  RAX: 6b6b6b6b6b6b6b68 RBX: 0000000000000001 RCX: 0000000000000002\n  RDX: ffffffffb9c54d13 RSI: 0000000000000000 RDI: 0000000000000000\n  RBP: ffff9f18830d7bc0 R08: 0000000000000000 R09: 0000000000000000\n  R10: ffff9f18830d7be0 R11: 0000000000000001 R12: ffff8c6cd199c040\n  R13: ffff8c6c95821358 R14: 00000000fffffffb R15: ffff8c6cbcf01358\n  FS:  00007fa9140c2b80(0000) GS:ffff8c6fac600000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fa913d52000 CR3: 000000013d2b4003 CR4: 0000000000370ee0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   ? __btrfs_handle_fs_error+0xde/0x146 [btrfs]\n   ? btrfs_sync_log+0x7c1/0xf20 [btrfs]\n   ? btrfs_sync_log+0x7c1/0xf20 [btrfs]\n   btrfs_sync_log+0x7c1/0xf20 [btrfs]\n   btrfs_sync_file+0x40c/0x580 [btrfs]\n   do_fsync+0x38/0x70\n   __x64_sys_fsync+0x10/0x20\n   do_syscall_64+0x33/0x80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n  RIP: 0033:0x7fa9142a55c3\n  Code: 8b 15 09 (...)\n  RSP: 002b:00007fff26278d48 EFLAGS: 00000246 ORIG_RAX: 000000000000004a\n  RAX: ffffffffffffffda RBX: 0000563c83cb4560 RCX: 00007fa9142a55c3\n  RDX: 00007fff26278cb0 RSI: 00007fff26278cb0 RDI: 0000000000000005\n  RBP: 0000000000000005 R08: 0000000000000001 R09: 00007fff26278d5c\n  R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000340\n  R13: 00007fff26278de0 R14: 00007fff26278d96 R15: 0000563c83ca57c0\n  Modules linked in: btrfs dm_zero dm_snapshot dm_thin_pool (...)\n  ---[ end trace ee2f1b19327d791d ]---\n\nThe steps that lead to this crash are the following:\n\n1) We are at transaction N;\n\n2) We have two tasks with a transaction handle attached to transaction N.\n   Task A and Task B. Task B is doing an fsync;\n\n3) Task B is at btrfs_sync_log(), and has saved fs_info-\u003elog_root_tree\n   into a local variable named 'log_root_tree' at the top of\n   btrfs_sync_log(). Task B is about to call write_all_supers(), but\n   before that...\n\n4) Task A calls btrfs_commit_transaction(), and after it sets the\n   transaction state to TRANS_STATE_COMMIT_START, an error happens before\n   it w\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Return correct error code from smb2_get_enc_key\n\nAvoid a warning if the error percolates back up:\n\n[440700.376476] CIFS VFS: \\\\otters.example.com crypt_message: Could not get encryption key\n[440700.386947] ------------[ cut here ]------------\n[440700.386948] err = 1\n[440700.386977] WARNING: CPU: 11 PID: 2733 at /build/linux-hwe-5.4-p6lk6L/linux-hwe-5.4-5.4.0/lib/errseq.c:74 errseq_set+0x5c/0x70\n...\n[440700.397304] CPU: 11 PID: 2733 Comm: tar Tainted: G           OE     5.4.0-70-generic #78~18.04.1-Ubuntu\n...\n[440700.397334] Call Trace:\n[440700.397346]  __filemap_set_wb_err+0x1a/0x70\n[440700.397419]  cifs_writepages+0x9c7/0xb30 [cifs]\n[440700.397426]  do_writepages+0x4b/0xe0\n[440700.397444]  __filemap_fdatawrite_range+0xcb/0x100\n[440700.397455]  filemap_write_and_wait+0x42/0xa0\n[440700.397486]  cifs_setattr+0x68b/0xf30 [cifs]\n[440700.397493]  notify_change+0x358/0x4a0\n[440700.397500]  utimes_common+0xe9/0x1c0\n[440700.397510]  do_utimes+0xc5/0x150\n[440700.397520]  __x64_sys_utimensat+0x88/0xd0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix crash in qla2xxx_mqueuecommand()\n\n    RIP: 0010:kmem_cache_free+0xfa/0x1b0\n    Call Trace:\n       qla2xxx_mqueuecommand+0x2b5/0x2c0 [qla2xxx]\n       scsi_queue_rq+0x5e2/0xa40\n       __blk_mq_try_issue_directly+0x128/0x1d0\n       blk_mq_request_issue_directly+0x4e/0xb0\n\nFix incorrect call to free srb in qla2xxx_mqueuecommand(), as srb is now\nallocated by upper layers. This fixes smatch warning of srb unintended\nfree.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Reserve extra IRQ vectors\n\nCommit a6dcfe08487e (\"scsi: qla2xxx: Limit interrupt vectors to number of\nCPUs\") lowers the number of allocated MSI-X vectors to the number of CPUs.\n\nThat breaks vector allocation assumptions in qla83xx_iospace_config(),\nqla24xx_enable_msix() and qla2x00_iospace_config(). Either of the functions\ncomputes maximum number of qpairs as:\n\n  ha-\u003emax_qpairs = ha-\u003emsix_count - 1 (MB interrupt) - 1 (default\n                   response queue) - 1 (ATIO, in dual or pure target mode)\n\nmax_qpairs is set to zero in case of two CPUs and initiator mode. The\nnumber is then used to allocate ha-\u003equeue_pair_map inside\nqla2x00_alloc_queues(). No allocation happens and ha-\u003equeue_pair_map is\nleft NULL but the driver thinks there are queue pairs available.\n\nqla2xxx_queuecommand() tries to find a qpair in the map and crashes:\n\n  if (ha-\u003emqenable) {\n          uint32_t tag;\n          uint16_t hwq;\n          struct qla_qpair *qpair = NULL;\n\n          tag = blk_mq_unique_tag(cmd-\u003erequest);\n          hwq = blk_mq_unique_tag_to_hwq(tag);\n          qpair = ha-\u003equeue_pair_map[hwq]; # \u003c- HERE\n\n          if (qpair)\n                  return qla2xxx_mqueuecommand(host, cmd, qpair);\n  }\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000000\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] SMP PTI\n  CPU: 0 PID: 72 Comm: kworker/u4:3 Tainted: G        W         5.10.0-rc1+ #25\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014\n  Workqueue: scsi_wq_7 fc_scsi_scan_rport [scsi_transport_fc]\n  RIP: 0010:qla2xxx_queuecommand+0x16b/0x3f0 [qla2xxx]\n  Call Trace:\n   scsi_queue_rq+0x58c/0xa60\n   blk_mq_dispatch_rq_list+0x2b7/0x6f0\n   ? __sbitmap_get_word+0x2a/0x80\n   __blk_mq_sched_dispatch_requests+0xb8/0x170\n   blk_mq_sched_dispatch_requests+0x2b/0x50\n   __blk_mq_run_hw_queue+0x49/0xb0\n   __blk_mq_delay_run_hw_queue+0xfb/0x150\n   blk_mq_sched_insert_request+0xbe/0x110\n   blk_execute_rq+0x45/0x70\n   __scsi_execute+0x10e/0x250\n   scsi_probe_and_add_lun+0x228/0xda0\n   __scsi_scan_target+0xf4/0x620\n   ? __pm_runtime_resume+0x4f/0x70\n   scsi_scan_target+0x100/0x110\n   fc_scsi_scan_rport+0xa1/0xb0 [scsi_transport_fc]\n   process_one_work+0x1ea/0x3b0\n   worker_thread+0x28/0x3b0\n   ? process_one_work+0x3b0/0x3b0\n   kthread+0x112/0x130\n   ? kthread_park+0x80/0x80\n   ret_from_fork+0x22/0x30\n\nThe driver should allocate enough vectors to provide every CPU it's own HW\nqueue and still handle reserved (MB, RSP, ATIO) interrupts.\n\nThe change fixes the crash on dual core VM and prevents unbalanced QP\nallocation where nr_hw_queues is two less than the number of CPUs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: custom_method: fix potential use-after-free issue\n\nIn cm_write(), buf is always freed when reaching the end of the\nfunction.  If the requested count is less than table.length, the\nallocated buffer will be freed but subsequent calls to cm_write() will\nstill try to access it.\n\nRemove the unconditional kfree(buf) at the end of the function and\nset the buf to NULL in the -EINVAL error path to match the rest of\nfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46975",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46981",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: Fix NULL pointer in flush_workqueue\n\nOpen /dev/nbdX first, the config_refs will be 1 and\nthe pointers in nbd_device are still null. Disconnect\n/dev/nbdX, then reference a null recv_workq. The\nprotection by config_refs in nbd_genl_disconnect is useless.\n\n[  656.366194] BUG: kernel NULL pointer dereference, address: 0000000000000020\n[  656.368943] #PF: supervisor write access in kernel mode\n[  656.369844] #PF: error_code(0x0002) - not-present page\n[  656.370717] PGD 10cc87067 P4D 10cc87067 PUD 1074b4067 PMD 0\n[  656.371693] Oops: 0002 [#1] SMP\n[  656.372242] CPU: 5 PID: 7977 Comm: nbd-client Not tainted 5.11.0-rc5-00040-g76c057c84d28 #1\n[  656.373661] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014\n[  656.375904] RIP: 0010:mutex_lock+0x29/0x60\n[  656.376627] Code: 00 0f 1f 44 00 00 55 48 89 fd 48 83 05 6f d7 fe 08 01 e8 7a c3 ff ff 48 83 05 6a d7 fe 08 01 31 c0 65 48 8b 14 25 00 6d 01 00 \u003cf0\u003e 48 0f b1 55 d\n[  656.378934] RSP: 0018:ffffc900005eb9b0 EFLAGS: 00010246\n[  656.379350] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n[  656.379915] RDX: ffff888104cf2600 RSI: ffffffffaae8f452 RDI: 0000000000000020\n[  656.380473] RBP: 0000000000000020 R08: 0000000000000000 R09: ffff88813bd6b318\n[  656.381039] R10: 00000000000000c7 R11: fefefefefefefeff R12: ffff888102710b40\n[  656.381599] R13: ffffc900005eb9e0 R14: ffffffffb2930680 R15: ffff88810770ef00\n[  656.382166] FS:  00007fdf117ebb40(0000) GS:ffff88813bd40000(0000) knlGS:0000000000000000\n[  656.382806] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  656.383261] CR2: 0000000000000020 CR3: 0000000100c84000 CR4: 00000000000006e0\n[  656.383819] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  656.384370] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  656.384927] Call Trace:\n[  656.385111]  flush_workqueue+0x92/0x6c0\n[  656.385395]  nbd_disconnect_and_put+0x81/0xd0\n[  656.385716]  nbd_genl_disconnect+0x125/0x2a0\n[  656.386034]  genl_family_rcv_msg_doit.isra.0+0x102/0x1b0\n[  656.386422]  genl_rcv_msg+0xfc/0x2b0\n[  656.386685]  ? nbd_ioctl+0x490/0x490\n[  656.386954]  ? genl_family_rcv_msg_doit.isra.0+0x1b0/0x1b0\n[  656.387354]  netlink_rcv_skb+0x62/0x180\n[  656.387638]  genl_rcv+0x34/0x60\n[  656.387874]  netlink_unicast+0x26d/0x590\n[  656.388162]  netlink_sendmsg+0x398/0x6c0\n[  656.388451]  ? netlink_rcv_skb+0x180/0x180\n[  656.388750]  ____sys_sendmsg+0x1da/0x320\n[  656.389038]  ? ____sys_recvmsg+0x130/0x220\n[  656.389334]  ___sys_sendmsg+0x8e/0xf0\n[  656.389605]  ? ___sys_recvmsg+0xa2/0xf0\n[  656.389889]  ? handle_mm_fault+0x1671/0x21d0\n[  656.390201]  __sys_sendmsg+0x6d/0xe0\n[  656.390464]  __x64_sys_sendmsg+0x23/0x30\n[  656.390751]  do_syscall_64+0x45/0x70\n[  656.391017]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nTo fix it, just add if (nbd-\u003erecv_workq) to nbd_disconnect_and_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46988",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: release page in error path to avoid BUG_ON\n\nConsider the following sequence of events:\n\n1. Userspace issues a UFFD ioctl, which ends up calling into\n   shmem_mfill_atomic_pte(). We successfully account the blocks, we\n   shmem_alloc_page(), but then the copy_from_user() fails. We return\n   -ENOENT. We don't release the page we allocated.\n2. Our caller detects this error code, tries the copy_from_user() after\n   dropping the mmap_lock, and retries, calling back into\n   shmem_mfill_atomic_pte().\n3. Meanwhile, let's say another process filled up the tmpfs being used.\n4. So shmem_mfill_atomic_pte() fails to account blocks this time, and\n   immediately returns - without releasing the page.\n\nThis triggers a BUG_ON in our caller, which asserts that the page\nshould always be consumed, unless -ENOENT is returned.\n\nTo fix this, detect if we have such a \"dangling\" page when accounting\nfails, and if so, release it before returning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/64s: Fix crashes when toggling entry flush barrier\n\nThe entry flush mitigation can be enabled/disabled at runtime via a\ndebugfs file (entry_flush), which causes the kernel to patch itself to\nenable/disable the relevant mitigations.\n\nHowever depending on which mitigation we're using, it may not be safe to\ndo that patching while other CPUs are active. For example the following\ncrash:\n\n  sleeper[15639]: segfault (11) at c000000000004c20 nip c000000000004c20 lr c000000000004c20\n\nShows that we returned to userspace with a corrupted LR that points into\nthe kernel, due to executing the partially patched call to the fallback\nentry flush (ie. we missed the LR restore).\n\nFix it by doing the patching under stop machine. The CPUs that aren't\ndoing the patching will be spinning in the core of the stop machine\nlogic. That is currently sufficient for our purposes, because none of\nthe patching we do is to that code or anywhere in the vicinity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46991",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix use-after-free in i40e_client_subtask()\n\nCurrently the call to i40e_client_del_instance frees the object\npf-\u003ecinst, however pf-\u003ecinst-\u003elan_info is being accessed after\nthe free. Fix this by adding the missing return.\n\nAddresses-Coverity: (\"Read from pointer after free\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46992",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nftables: avoid overflows in nft_hash_buckets()\n\nNumber of buckets being stored in 32bit variables, we have to\nensure that no overflows occur in nft_hash_buckets()\n\nsyzbot injected a size == 0x40000000 and reported:\n\nUBSAN: shift-out-of-bounds in ./include/linux/log2.h:57:13\nshift exponent 64 is too large for 64-bit type 'long unsigned int'\nCPU: 1 PID: 29539 Comm: syz-executor.4 Not tainted 5.12.0-rc7-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n __dump_stack lib/dump_stack.c:79 [inline]\n dump_stack+0x141/0x1d7 lib/dump_stack.c:120\n ubsan_epilogue+0xb/0x5a lib/ubsan.c:148\n __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327\n __roundup_pow_of_two include/linux/log2.h:57 [inline]\n nft_hash_buckets net/netfilter/nft_set_hash.c:411 [inline]\n nft_hash_estimate.cold+0x19/0x1e net/netfilter/nft_set_hash.c:652\n nft_select_set_ops net/netfilter/nf_tables_api.c:3586 [inline]\n nf_tables_newset+0xe62/0x3110 net/netfilter/nf_tables_api.c:4322\n nfnetlink_rcv_batch+0xa09/0x24b0 net/netfilter/nfnetlink.c:488\n nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:612 [inline]\n nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:630\n netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]\n netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338\n netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927\n sock_sendmsg_nosec net/socket.c:654 [inline]\n sock_sendmsg+0xcf/0x120 net/socket.c:674\n ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350\n ___sys_sendmsg+0xf3/0x170 net/socket.c:2404\n __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433\n do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethernet:enic: Fix a use after free bug in enic_hard_start_xmit\n\nIn enic_hard_start_xmit, it calls enic_queue_wq_skb(). Inside\nenic_queue_wq_skb, if some error happens, the skb will be freed\nby dev_kfree_skb(skb). But the freed skb is still used in\nskb_tx_timestamp(skb).\n\nMy patch makes enic_queue_wq_skb() return error and goto spin_unlock()\nincase of error. The solution is provided by Govind.\nSee https://lkml.org/lkml/2021/4/30/961.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47006",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9064/1: hw_breakpoint: Do not directly check the event's overflow_handler hook\n\nThe commit 1879445dfa7b (\"perf/core: Set event's default\n::overflow_handler()\") set a default event-\u003eoverflow_handler in\nperf_event_alloc(), and replace the check event-\u003eoverflow_handler with\nis_default_overflow_handler(), but one is missing.\n\nCurrently, the bp-\u003eoverflow_handler can not be NULL. As a result,\nenable_single_step() is always not invoked.\n\nComments from Zhen Lei:\n\n https://patchwork.kernel.org/project/linux-arm-kernel/patch/20210207105934.2001-1-thunder.leizhen@huawei.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send\n\nIn emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).\nIf some error happens in emac_tx_fill_tpd(), the skb will be freed via\ndev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().\nBut the freed skb is still used via skb-\u003elen by netdev_sent_queue(,skb-\u003elen).\n\nAs i observed that emac_tx_fill_tpd() haven't modified the value of skb-\u003elen,\nthus my patch assigns skb-\u003elen to 'len' before the possible free and\nuse 'len' instead of skb-\u003elen later.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix RX consumer index logic in the error path.\n\nIn bnxt_rx_pkt(), the RX buffers are expected to complete in order.\nIf the RX consumer index indicates an out of order buffer completion,\nit means we are hitting a hardware bug and the driver will abort all\nremaining RX packets and reset the RX ring.  The RX consumer index\nthat we pass to bnxt_discard_rx() is not correct.  We should be\npassing the current index (tmp_raw_cons) instead of the old index\n(raw_cons).  This bug can cause us to be at the wrong index when\ntrying to abort the next RX packet.  It can crash like this:\n\n #0 [ffff9bbcdf5c39a8] machine_kexec at ffffffff9b05e007\n #1 [ffff9bbcdf5c3a00] __crash_kexec at ffffffff9b111232\n #2 [ffff9bbcdf5c3ad0] panic at ffffffff9b07d61e\n #3 [ffff9bbcdf5c3b50] oops_end at ffffffff9b030978\n #4 [ffff9bbcdf5c3b78] no_context at ffffffff9b06aaf0\n #5 [ffff9bbcdf5c3bd8] __bad_area_nosemaphore at ffffffff9b06ae2e\n #6 [ffff9bbcdf5c3c28] bad_area_nosemaphore at ffffffff9b06af24\n #7 [ffff9bbcdf5c3c38] __do_page_fault at ffffffff9b06b67e\n #8 [ffff9bbcdf5c3cb0] do_page_fault at ffffffff9b06bb12\n #9 [ffff9bbcdf5c3ce0] page_fault at ffffffff9bc015c5\n    [exception RIP: bnxt_rx_pkt+237]\n    RIP: ffffffffc0259cdd  RSP: ffff9bbcdf5c3d98  RFLAGS: 00010213\n    RAX: 000000005dd8097f  RBX: ffff9ba4cb11b7e0  RCX: ffffa923cf6e9000\n    RDX: 0000000000000fff  RSI: 0000000000000627  RDI: 0000000000001000\n    RBP: ffff9bbcdf5c3e60   R8: 0000000000420003   R9: 000000000000020d\n    R10: ffffa923cf6ec138  R11: ffff9bbcdf5c3e83  R12: ffff9ba4d6f928c0\n    R13: ffff9ba4cac28080  R14: ffff9ba4cb11b7f0  R15: ffff9ba4d5a30000\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock/virtio: free queued packets when closing socket\n\nAs reported by syzbot [1], there is a memory leak while closing the\nsocket. We partially solved this issue with commit ac03046ece2b\n(\"vsock/virtio: free packets during the socket release\"), but we\nforgot to drain the RX queue when the socket is definitely closed by\nthe scheduled work.\n\nTo avoid future issues, let's use the new virtio_transport_remove_sock()\nto drain the RX queue before removing the socket from the af_vsock lists\ncalling vsock_remove_sock().\n\n[1] https://syzkaller.appspot.com/bug?extid=24452624fc4c571eedd9",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47034",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/64s: Fix pte update for kernel memory on radix\n\nWhen adding a PTE a ptesync is needed to order the update of the PTE\nwith subsequent accesses otherwise a spurious fault may be raised.\n\nradix__set_pte_at() does not do this for performance gains. For\nnon-kernel memory this is not an issue as any faults of this kind are\ncorrected by the page fault handler. For kernel memory these faults\nare not handled. The current solution is that there is a ptesync in\nflush_cache_vmap() which should be called when mapping from the\nvmalloc region.\n\nHowever, map_kernel_page() does not call flush_cache_vmap(). This is\ntroublesome in particular for code patching with Strict RWX on radix.\nIn do_patch_instruction() the page frame that contains the instruction\nto be patched is mapped and then immediately patched. With no ordering\nor synchronization between setting up the PTE and writing to the page\nit is possible for faults.\n\nAs the code patching is done using __put_user_asm_goto() the resulting\nfault is obscured - but using a normal store instead it can be seen:\n\n  BUG: Unable to handle kernel data access on write at 0xc008000008f24a3c\n  Faulting instruction address: 0xc00000000008bd74\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV\n  Modules linked in: nop_module(PO+) [last unloaded: nop_module]\n  CPU: 4 PID: 757 Comm: sh Tainted: P           O      5.10.0-rc5-01361-ge3c1b78c8440-dirty #43\n  NIP:  c00000000008bd74 LR: c00000000008bd50 CTR: c000000000025810\n  REGS: c000000016f634a0 TRAP: 0300   Tainted: P           O       (5.10.0-rc5-01361-ge3c1b78c8440-dirty)\n  MSR:  9000000000009033 \u003cSF,HV,EE,ME,IR,DR,RI,LE\u003e  CR: 44002884  XER: 00000000\n  CFAR: c00000000007c68c DAR: c008000008f24a3c DSISR: 42000000 IRQMASK: 1\n\nThis results in the kind of issue reported here:\n  https://lore.kernel.org/linuxppc-dev/15AC5B0E-A221-4B8C-9039-FA96B8EF7C88@lca.pw/\n\nChris Riedl suggested a reliable way to reproduce the issue:\n  $ mount -t debugfs none /sys/kernel/debug\n  $ (while true; do echo function \u003e /sys/kernel/debug/tracing/current_tracer ; echo nop \u003e /sys/kernel/debug/tracing/current_tracer ; done) \u0026\n\nTurning ftrace on and off does a large amount of code patching which\nin usually less then 5min will crash giving a trace like:\n\n   ftrace-powerpc: (____ptrval____): replaced (4b473b11) != old (60000000)\n   ------------[ ftrace bug ]------------\n   ftrace failed to modify\n   [\u003cc000000000bf8e5c\u003e] napi_busy_loop+0xc/0x390\n    actual:   11:3b:47:4b\n   Setting ftrace call site to call ftrace function\n   ftrace record flags: 80000001\n    (1)\n    expected tramp: c00000000006c96c\n   ------------[ cut here ]------------\n   WARNING: CPU: 4 PID: 809 at kernel/trace/ftrace.c:2065 ftrace_bug+0x28c/0x2e8\n   Modules linked in: nop_module(PO-) [last unloaded: nop_module]\n   CPU: 4 PID: 809 Comm: sh Tainted: P           O      5.10.0-rc5-01360-gf878ccaf250a #1\n   NIP:  c00000000024f334 LR: c00000000024f330 CTR: c0000000001a5af0\n   REGS: c000000004c8b760 TRAP: 0700   Tainted: P           O       (5.10.0-rc5-01360-gf878ccaf250a)\n   MSR:  900000000282b033 \u003cSF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE\u003e  CR: 28008848  XER: 20040000\n   CFAR: c0000000001a9c98 IRQMASK: 0\n   GPR00: c00000000024f330 c000000004c8b9f0 c000000002770600 0000000000000022\n   GPR04: 00000000ffff7fff c000000004c8b6d0 0000000000000027 c0000007fe9bcdd8\n   GPR08: 0000000000000023 ffffffffffffffd8 0000000000000027 c000000002613118\n   GPR12: 0000000000008000 c0000007fffdca00 0000000000000000 0000000000000000\n   GPR16: 0000000023ec37c5 0000000000000000 0000000000000000 0000000000000008\n   GPR20: c000000004c8bc90 c0000000027a2d20 c000000004c8bcd0 c000000002612fe8\n   GPR24: 0000000000000038 0000000000000030 0000000000000028 0000000000000020\n   GPR28: c000000000ff1b68 c000000000bf8e5c c00000000312f700 c000000000fbb9b0\n   NIP ftrace_bug+0x28c/0x2e8\n   LR  ftrace_bug+0x288/0x2e8\n   Call T\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix null pointer dereference in lpfc_prep_els_iocb()\n\nIt is possible to call lpfc_issue_els_plogi() passing a did for which no\nmatching ndlp is found. A call is then made to lpfc_prep_els_iocb() with a\nnull pointer to a lpfc_nodelist structure resulting in a null pointer\ndereference.\n\nFix by returning an error status if no valid ndlp is found. Fix up comments\nregarding ndlp reference counting.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47049",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Use after free in __vmbus_open()\n\nThe \"open_info\" variable is added to the \u0026vmbus_connection.chn_msg_list,\nbut the error handling frees \"open_info\" without removing it from the\nlist.  This will result in a use after free.  First remove it from the\nlist, and then free it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47054",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbus: qcom: Put child node before return\n\nPut child node before return to fix potential reference count leak.\nGenerally, the reference count of child is incremented and decremented\nautomatically in the macro for_each_available_child_of_node() and should\nbe decremented manually if the loop is broken in loop body.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47055",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: require write permissions for locking and badblock ioctls\n\nMEMLOCK, MEMUNLOCK and OTPLOCK modify protection bits. Thus require\nwrite permission. Depending on the hardware MEMLOCK might even be\nwrite-once, e.g. for SPI-NOR flashes with their WP# tied to GND. OTPLOCK\nis always write-once.\n\nMEMSETBADBLOCK modifies the bad block table.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47056",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - ADF_STATUS_PF_RUNNING should be set after adf_dev_init\n\nADF_STATUS_PF_RUNNING is (only) used and checked by adf_vf2pf_shutdown()\nbefore calling adf_iov_putmsg()-\u003emutex_lock(vf2pf_lock), however the\nvf2pf_lock is initialized in adf_dev_init(), which can fail and when it\nfail, the vf2pf_lock is either not initialized or destroyed, a subsequent\nuse of vf2pf_lock will cause issue.\nTo fix this issue, only set this flag if adf_dev_init() returns 0.\n\n[    7.178404] BUG: KASAN: user-memory-access in __mutex_lock.isra.0+0x1ac/0x7c0\n[    7.180345] Call Trace:\n[    7.182576]  mutex_lock+0xc9/0xd0\n[    7.183257]  adf_iov_putmsg+0x118/0x1a0 [intel_qat]\n[    7.183541]  adf_vf2pf_shutdown+0x4d/0x7b [intel_qat]\n[    7.183834]  adf_dev_shutdown+0x172/0x2b0 [intel_qat]\n[    7.184127]  adf_probe+0x5e9/0x600 [qat_dh895xccvf]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47063",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge/panel: Cleanup connector on bridge detach\n\nIf we don't call drm_connector_cleanup() manually in\npanel_bridge_detach(), the connector will be cleaned up with the other\nDRM objects in the call to drm_mode_config_cleanup(). However, since our\ndrm_connector is devm-allocated, by the time drm_mode_config_cleanup()\nwill be called, our connector will be long gone. Therefore, the\nconnector must be cleaned up when the bridge is detached to avoid\nuse-after-free conditions.\n\nv2: Cleanup connector only if it was created\n\nv3: Add FIXME\n\nv4: (Use connector-\u003edev) directly in if() block",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47070",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio_hv_generic: Fix another memory leak in error handling paths\n\nMemory allocated by 'vmbus_alloc_ring()' at the beginning of the probe\nfunction is never freed in the error handling path.\n\nAdd the missing 'vmbus_free_ring()' call.\n\nNote that it is already freed in the .remove function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47071",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio_hv_generic: Fix a memory leak in error handling paths\n\nIf 'vmbus_establish_gpadl()' fails, the (recv|send)_gpadl will not be\nupdated and 'hv_uio_cleanup()' in the error handling path will not be\nable to free the corresponding buffer.\n\nIn such a case, we need to free the buffer explicitly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell-smbios-wmi: Fix oops on rmmod dell_smbios\n\ninit_dell_smbios_wmi() only registers the dell_smbios_wmi_driver on systems\nwhere the Dell WMI interface is supported. While exit_dell_smbios_wmi()\nunregisters it unconditionally, this leads to the following oops:\n\n[  175.722921] ------------[ cut here ]------------\n[  175.722925] Unexpected driver unregister!\n[  175.722939] WARNING: CPU: 1 PID: 3630 at drivers/base/driver.c:194 driver_unregister+0x38/0x40\n...\n[  175.723089] Call Trace:\n[  175.723094]  cleanup_module+0x5/0xedd [dell_smbios]\n...\n[  175.723148] ---[ end trace 064c34e1ad49509d ]---\n\nMake the unregister happen on the same condition the register happens\nto fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47076",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Return CQE error if invalid lkey was supplied\n\nRXE is missing update of WQE status in LOCAL_WRITE failures.  This caused\nthe following kernel panic if someone sent an atomic operation with an\nexplicitly wrong lkey.\n\n[leonro@vm ~]$ mkt test\ntest_atomic_invalid_lkey (tests.test_atomic.AtomicTest) ...\n WARNING: CPU: 5 PID: 263 at drivers/infiniband/sw/rxe/rxe_comp.c:740 rxe_completer+0x1a6d/0x2e30 [rdma_rxe]\n Modules linked in: crc32_generic rdma_rxe ip6_udp_tunnel udp_tunnel rdma_ucm rdma_cm ib_umad ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core mlx5_core ptp pps_core\n CPU: 5 PID: 263 Comm: python3 Not tainted 5.13.0-rc1+ #2936\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n RIP: 0010:rxe_completer+0x1a6d/0x2e30 [rdma_rxe]\n Code: 03 0f 8e 65 0e 00 00 3b 93 10 06 00 00 0f 84 82 0a 00 00 4c 89 ff 4c 89 44 24 38 e8 2d 74 a9 e1 4c 8b 44 24 38 e9 1c f5 ff ff \u003c0f\u003e 0b e9 0c e8 ff ff b8 05 00 00 00 41 bf 05 00 00 00 e9 ab e7 ff\n RSP: 0018:ffff8880158af090 EFLAGS: 00010246\n RAX: 0000000000000000 RBX: ffff888016a78000 RCX: ffffffffa0cf1652\n RDX: 1ffff9200004b442 RSI: 0000000000000004 RDI: ffffc9000025a210\n RBP: dffffc0000000000 R08: 00000000ffffffea R09: ffff88801617740b\n R10: ffffed1002c2ee81 R11: 0000000000000007 R12: ffff88800f3b63e8\n R13: ffff888016a78008 R14: ffffc9000025a180 R15: 000000000000000c\n FS:  00007f88b622a740(0000) GS:ffff88806d540000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007f88b5a1fa10 CR3: 000000000d848004 CR4: 0000000000370ea0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  rxe_do_task+0x130/0x230 [rdma_rxe]\n  rxe_rcv+0xb11/0x1df0 [rdma_rxe]\n  rxe_loopback+0x157/0x1e0 [rdma_rxe]\n  rxe_responder+0x5532/0x7620 [rdma_rxe]\n  rxe_do_task+0x130/0x230 [rdma_rxe]\n  rxe_rcv+0x9c8/0x1df0 [rdma_rxe]\n  rxe_loopback+0x157/0x1e0 [rdma_rxe]\n  rxe_requester+0x1efd/0x58c0 [rdma_rxe]\n  rxe_do_task+0x130/0x230 [rdma_rxe]\n  rxe_post_send+0x998/0x1860 [rdma_rxe]\n  ib_uverbs_post_send+0xd5f/0x1220 [ib_uverbs]\n  ib_uverbs_write+0x847/0xc80 [ib_uverbs]\n  vfs_write+0x1c5/0x840\n  ksys_write+0x176/0x1d0\n  do_syscall_64+0x3f/0x80\n  entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Add pointer checks in qedf_update_link_speed()\n\nThe following trace was observed:\n\n [   14.042059] Call Trace:\n [   14.042061]  \u003cIRQ\u003e\n [   14.042068]  qedf_link_update+0x144/0x1f0 [qedf]\n [   14.042117]  qed_link_update+0x5c/0x80 [qed]\n [   14.042135]  qed_mcp_handle_link_change+0x2d2/0x410 [qed]\n [   14.042155]  ? qed_set_ptt+0x70/0x80 [qed]\n [   14.042170]  ? qed_set_ptt+0x70/0x80 [qed]\n [   14.042186]  ? qed_rd+0x13/0x40 [qed]\n [   14.042205]  qed_mcp_handle_events+0x437/0x690 [qed]\n [   14.042221]  ? qed_set_ptt+0x70/0x80 [qed]\n [   14.042239]  qed_int_sp_dpc+0x3a6/0x3e0 [qed]\n [   14.042245]  tasklet_action_common.isra.14+0x5a/0x100\n [   14.042250]  __do_softirq+0xe4/0x2f8\n [   14.042253]  irq_exit+0xf7/0x100\n [   14.042255]  do_IRQ+0x7f/0xd0\n [   14.042257]  common_interrupt+0xf/0xf\n [   14.042259]  \u003c/IRQ\u003e\n\nAPI qedf_link_update() is getting called from QED but by that time\nshost_data is not initialised. This results in a NULL pointer dereference\nwhen we try to dereference shost_data while updating supported_speeds.\n\nAdd a NULL pointer check before dereferencing shost_data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Clear all QP fields if creation failed\n\nrxe_qp_do_cleanup() relies on valid pointer values in QP for the properly\ncreated ones, but in case rxe_qp_from_init() failed it was filled with\ngarbage and caused tot the following error.\n\n  refcount_t: underflow; use-after-free.\n  WARNING: CPU: 1 PID: 12560 at lib/refcount.c:28 refcount_warn_saturate+0x1d1/0x1e0 lib/refcount.c:28\n  Modules linked in:\n  CPU: 1 PID: 12560 Comm: syz-executor.4 Not tainted 5.12.0-syzkaller #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\n  RIP: 0010:refcount_warn_saturate+0x1d1/0x1e0 lib/refcount.c:28\n  Code: e9 db fe ff ff 48 89 df e8 2c c2 ea fd e9 8a fe ff ff e8 72 6a a7 fd 48 c7 c7 e0 b2 c1 89 c6 05 dc 3a e6 09 01 e8 ee 74 fb 04 \u003c0f\u003e 0b e9 af fe ff ff 0f 1f 84 00 00 00 00 00 41 56 41 55 41 54 55\n  RSP: 0018:ffffc900097ceba8 EFLAGS: 00010286\n  RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n  RDX: 0000000000040000 RSI: ffffffff815bb075 RDI: fffff520012f9d67\n  RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000\n  R10: ffffffff815b4eae R11: 0000000000000000 R12: ffff8880322a4800\n  R13: ffff8880322a4940 R14: ffff888033044e00 R15: 0000000000000000\n  FS:  00007f6eb2be3700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fdbe5d41000 CR3: 000000001d181000 CR4: 00000000001506e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   __refcount_sub_and_test include/linux/refcount.h:283 [inline]\n   __refcount_dec_and_test include/linux/refcount.h:315 [inline]\n   refcount_dec_and_test include/linux/refcount.h:333 [inline]\n   kref_put include/linux/kref.h:64 [inline]\n   rxe_qp_do_cleanup+0x96f/0xaf0 drivers/infiniband/sw/rxe/rxe_qp.c:805\n   execute_in_process_context+0x37/0x150 kernel/workqueue.c:3327\n   rxe_elem_release+0x9f/0x180 drivers/infiniband/sw/rxe/rxe_pool.c:391\n   kref_put include/linux/kref.h:65 [inline]\n   rxe_create_qp+0x2cd/0x310 drivers/infiniband/sw/rxe/rxe_verbs.c:425\n   _ib_create_qp drivers/infiniband/core/core_priv.h:331 [inline]\n   ib_create_named_qp+0x2ad/0x1370 drivers/infiniband/core/verbs.c:1231\n   ib_create_qp include/rdma/ib_verbs.h:3644 [inline]\n   create_mad_qp+0x177/0x2d0 drivers/infiniband/core/mad.c:2920\n   ib_mad_port_open drivers/infiniband/core/mad.c:3001 [inline]\n   ib_mad_init_device+0xd6f/0x1400 drivers/infiniband/core/mad.c:3092\n   add_client_context+0x405/0x5e0 drivers/infiniband/core/device.c:717\n   enable_device_and_get+0x1cd/0x3b0 drivers/infiniband/core/device.c:1331\n   ib_register_device drivers/infiniband/core/device.c:1413 [inline]\n   ib_register_device+0x7c7/0xa50 drivers/infiniband/core/device.c:1365\n   rxe_register_device+0x3d5/0x4a0 drivers/infiniband/sw/rxe/rxe_verbs.c:1147\n   rxe_add+0x12fe/0x16d0 drivers/infiniband/sw/rxe/rxe.c:247\n   rxe_net_add+0x8c/0xe0 drivers/infiniband/sw/rxe/rxe_net.c:503\n   rxe_newlink drivers/infiniband/sw/rxe/rxe.c:269 [inline]\n   rxe_newlink+0xb7/0xe0 drivers/infiniband/sw/rxe/rxe.c:250\n   nldev_newlink+0x30e/0x550 drivers/infiniband/core/nldev.c:1555\n   rdma_nl_rcv_msg+0x36d/0x690 drivers/infiniband/core/netlink.c:195\n   rdma_nl_rcv_skb drivers/infiniband/core/netlink.c:239 [inline]\n   rdma_nl_rcv+0x2ee/0x430 drivers/infiniband/core/netlink.c:259\n   netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]\n   netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338\n   netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927\n   sock_sendmsg_nosec net/socket.c:654 [inline]\n   sock_sendmsg+0xcf/0x120 net/socket.c:674\n   ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350\n   ___sys_sendmsg+0xf3/0x170 net/socket.c:2404\n   __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433\n   do_syscall_64+0x3a/0xb0 arch/x86/entry/common.c:47\n   entry_SYSCALL_64_after_hwframe+0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipmi: Fix UAF when uninstall ipmi_si and ipmi_msghandler module\n\nHi,\n\nWhen testing install and uninstall of ipmi_si.ko and ipmi_msghandler.ko,\nthe system crashed.\n\nThe log as follows:\n[  141.087026] BUG: unable to handle kernel paging request at ffffffffc09b3a5a\n[  141.087241] PGD 8fe4c0d067 P4D 8fe4c0d067 PUD 8fe4c0f067 PMD 103ad89067 PTE 0\n[  141.087464] Oops: 0010 [#1] SMP NOPTI\n[  141.087580] CPU: 67 PID: 668 Comm: kworker/67:1 Kdump: loaded Not tainted 4.18.0.x86_64 #47\n[  141.088009] Workqueue: events 0xffffffffc09b3a40\n[  141.088009] RIP: 0010:0xffffffffc09b3a5a\n[  141.088009] Code: Bad RIP value.\n[  141.088009] RSP: 0018:ffffb9094e2c3e88 EFLAGS: 00010246\n[  141.088009] RAX: 0000000000000000 RBX: ffff9abfdb1f04a0 RCX: 0000000000000000\n[  141.088009] RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\n[  141.088009] RBP: 0000000000000000 R08: ffff9abfffee3cb8 R09: 00000000000002e1\n[  141.088009] R10: ffffb9094cb73d90 R11: 00000000000f4240 R12: ffff9abfffee8700\n[  141.088009] R13: 0000000000000000 R14: ffff9abfdb1f04a0 R15: ffff9abfdb1f04a8\n[  141.088009] FS:  0000000000000000(0000) GS:ffff9abfffec0000(0000) knlGS:0000000000000000\n[  141.088009] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  141.088009] CR2: ffffffffc09b3a30 CR3: 0000008fe4c0a001 CR4: 00000000007606e0\n[  141.088009] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  141.088009] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  141.088009] PKRU: 55555554\n[  141.088009] Call Trace:\n[  141.088009]  ? process_one_work+0x195/0x390\n[  141.088009]  ? worker_thread+0x30/0x390\n[  141.088009]  ? process_one_work+0x390/0x390\n[  141.088009]  ? kthread+0x10d/0x130\n[  141.088009]  ? kthread_flush_work_fn+0x10/0x10\n[  141.088009]  ? ret_from_fork+0x35/0x40] BUG: unable to handle kernel paging request at ffffffffc0b28a5a\n[  200.223240] PGD 97fe00d067 P4D 97fe00d067 PUD 97fe00f067 PMD a580cbf067 PTE 0\n[  200.223464] Oops: 0010 [#1] SMP NOPTI\n[  200.223579] CPU: 63 PID: 664 Comm: kworker/63:1 Kdump: loaded Not tainted 4.18.0.x86_64 #46\n[  200.224008] Workqueue: events 0xffffffffc0b28a40\n[  200.224008] RIP: 0010:0xffffffffc0b28a5a\n[  200.224008] Code: Bad RIP value.\n[  200.224008] RSP: 0018:ffffbf3c8e2a3e88 EFLAGS: 00010246\n[  200.224008] RAX: 0000000000000000 RBX: ffffa0799ad6bca0 RCX: 0000000000000000\n[  200.224008] RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\n[  200.224008] RBP: 0000000000000000 R08: ffff9fe43fde3cb8 R09: 00000000000000d5\n[  200.224008] R10: ffffbf3c8cb53d90 R11: 00000000000f4240 R12: ffff9fe43fde8700\n[  200.224008] R13: 0000000000000000 R14: ffffa0799ad6bca0 R15: ffffa0799ad6bca8\n[  200.224008] FS:  0000000000000000(0000) GS:ffff9fe43fdc0000(0000) knlGS:0000000000000000\n[  200.224008] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  200.224008] CR2: ffffffffc0b28a30 CR3: 00000097fe00a002 CR4: 00000000007606e0\n[  200.224008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  200.224008] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  200.224008] PKRU: 55555554\n[  200.224008] Call Trace:\n[  200.224008]  ? process_one_work+0x195/0x390\n[  200.224008]  ? worker_thread+0x30/0x390\n[  200.224008]  ? process_one_work+0x390/0x390\n[  200.224008]  ? kthread+0x10d/0x130\n[  200.224008]  ? kthread_flush_work_fn+0x10/0x10\n[  200.224008]  ? ret_from_fork+0x35/0x40\n[  200.224008] kernel fault(0x1) notification starting on CPU 63\n[  200.224008] kernel fault(0x1) notification finished on CPU 63\n[  200.224008] CR2: ffffffffc0b28a5a\n[  200.224008] ---[ end trace c82a412d93f57412 ]---\n\nThe reason is as follows:\nT1: rmmod ipmi_si.\n    -\u003eipmi_unregister_smi()\n        -\u003e ipmi_bmc_unregister()\n            -\u003e __ipmi_bmc_unregister()\n                -\u003e kref_put(\u0026bmc-\u003eusecount, cleanup_bmc_device);\n                    -\u003e schedule_work(\u0026bmc-\u003eremove_work);\n\nT2: rmmod ipmi_msghandl\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nasix: fix uninit-value in asix_mdio_read()\n\nasix_read_cmd() may read less than sizeof(smsr) bytes and in this case\nsmsr will be uninitialized.\n\nFail log:\nBUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]\nBUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497\nBUG: KMSAN: uninit-value in asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497\n asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]\n asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497\n asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/qib: Fix memory leak in qib_user_sdma_queue_pkts()\n\nThe wrong goto label was used for the error case and missed cleanup of the\npkt allocation.\n\nAddresses-Coverity-ID: 1493352 (\"Resource leak\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47110",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kvm: Disable kvmclock on all CPUs on shutdown\n\nCurrenly, we disable kvmclock from machine_shutdown() hook and this\nonly happens for boot CPU. We need to disable it for all CPUs to\nguard against memory corruption e.g. on restore from hibernate.\n\nNote, writing '0' to kvmclock MSR doesn't clear memory location, it\njust prevents hypervisor from updating the location so for the short\nwhile after write and while CPU is still alive, the clock remains usable\nand correct so we don't need to switch to some other clocksource.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47112",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kvm: Teardown PV features on boot CPU as well\n\nVarious PV features (Async PF, PV EOI, steal time) work through memory\nshared with hypervisor and when we restore from hibernation we must\nproperly teardown all these features to make sure hypervisor doesn't\nwrite to stale locations after we jump to the previously hibernated kernel\n(which can try to place anything there). For secondary CPUs the job is\nalready done by kvm_cpu_down_prepare(), register syscore ops to do\nthe same for boot CPU.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47114",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix data corruption by fallocate\n\nWhen fallocate punches holes out of inode size, if original isize is in\nthe middle of last cluster, then the part from isize to the end of the\ncluster will be zeroed with buffer write, at that time isize is not yet\nupdated to match the new size, if writeback is kicked in, it will invoke\nocfs2_writepage()-\u003eblock_write_full_page() where the pages out of inode\nsize will be dropped.  That will cause file corruption.  Fix this by\nzero out eof blocks when extending the inode size.\n\nRunning the following command with qemu-image 4.2.1 can get a corrupted\ncoverted image file easily.\n\n    qemu-img convert -p -t none -T none -f qcow2 $qcow_image \\\n             -O qcow2 -o compat=1.1 $qcow_image.conv\n\nThe usage of fallocate in qemu is like this, it first punches holes out\nof inode size, then extend the inode size.\n\n    fallocate(11, FALLOC_FL_KEEP_SIZE|FALLOC_FL_PUNCH_HOLE, 2276196352, 65536) = 0\n    fallocate(11, 0, 2276196352, 65536) = 0\n\nv1: https://www.spinics.net/lists/linux-fsdevel/msg193999.html\nv2: https://lore.kernel.org/linux-fsdevel/20210525093034.GB4112@quack2.suse.cz/T/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47117",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug on in ext4_es_cache_extent as ext4_split_extent_at failed\n\nWe got follow bug_on when run fsstress with injecting IO fault:\n[130747.323114] kernel BUG at fs/ext4/extents_status.c:762!\n[130747.323117] Internal error: Oops - BUG: 0 [#1] SMP\n......\n[130747.334329] Call trace:\n[130747.334553]  ext4_es_cache_extent+0x150/0x168 [ext4]\n[130747.334975]  ext4_cache_extents+0x64/0xe8 [ext4]\n[130747.335368]  ext4_find_extent+0x300/0x330 [ext4]\n[130747.335759]  ext4_ext_map_blocks+0x74/0x1178 [ext4]\n[130747.336179]  ext4_map_blocks+0x2f4/0x5f0 [ext4]\n[130747.336567]  ext4_mpage_readpages+0x4a8/0x7a8 [ext4]\n[130747.336995]  ext4_readpage+0x54/0x100 [ext4]\n[130747.337359]  generic_file_buffered_read+0x410/0xae8\n[130747.337767]  generic_file_read_iter+0x114/0x190\n[130747.338152]  ext4_file_read_iter+0x5c/0x140 [ext4]\n[130747.338556]  __vfs_read+0x11c/0x188\n[130747.338851]  vfs_read+0x94/0x150\n[130747.339110]  ksys_read+0x74/0xf0\n\nThis patch's modification is according to Jan Kara's suggestion in:\nhttps://patchwork.ozlabs.org/project/linux-ext4/patch/20210428085158.3728201-1-yebin10@huawei.com/\n\"I see. Now I understand your patch. Honestly, seeing how fragile is trying\nto fix extent tree after split has failed in the middle, I would probably\ngo even further and make sure we fix the tree properly in case of ENOSPC\nand EDQUOT (those are easily user triggerable).  Anything else indicates a\nHW problem or fs corruption so I'd rather leave the extent tree as is and\ndon't try to fix it (which also means we will not create overlapping\nextents).\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47118",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npid: take a reference when initializing `cad_pid`\n\nDuring boot, kernel_init_freeable() initializes `cad_pid` to the init\ntask's struct pid.  Later on, we may change `cad_pid` via a sysctl, and\nwhen this happens proc_do_cad_pid() will increment the refcount on the\nnew pid via get_pid(), and will decrement the refcount on the old pid\nvia put_pid().  As we never called get_pid() when we initialized\n`cad_pid`, we decrement a reference we never incremented, can therefore\nfree the init task's struct pid early.  As there can be dangling\nreferences to the struct pid, we can later encounter a use-after-free\n(e.g.  when delivering signals).\n\nThis was spotted when fuzzing v5.13-rc3 with Syzkaller, but seems to\nhave been around since the conversion of `cad_pid` to struct pid in\ncommit 9ec52099e4b8 (\"[PATCH] replace cad_pid by a struct pid\") from the\npre-KASAN stone age of v2.6.19.\n\nFix this by getting a reference to the init task's struct pid when we\nassign it to `cad_pid`.\n\nFull KASAN splat below.\n\n   ==================================================================\n   BUG: KASAN: use-after-free in ns_of_pid include/linux/pid.h:153 [inline]\n   BUG: KASAN: use-after-free in task_active_pid_ns+0xc0/0xc8 kernel/pid.c:509\n   Read of size 4 at addr ffff23794dda0004 by task syz-executor.0/273\n\n   CPU: 1 PID: 273 Comm: syz-executor.0 Not tainted 5.12.0-00001-g9aef892b2d15 #1\n   Hardware name: linux,dummy-virt (DT)\n   Call trace:\n    ns_of_pid include/linux/pid.h:153 [inline]\n    task_active_pid_ns+0xc0/0xc8 kernel/pid.c:509\n    do_notify_parent+0x308/0xe60 kernel/signal.c:1950\n    exit_notify kernel/exit.c:682 [inline]\n    do_exit+0x2334/0x2bd0 kernel/exit.c:845\n    do_group_exit+0x108/0x2c8 kernel/exit.c:922\n    get_signal+0x4e4/0x2a88 kernel/signal.c:2781\n    do_signal arch/arm64/kernel/signal.c:882 [inline]\n    do_notify_resume+0x300/0x970 arch/arm64/kernel/signal.c:936\n    work_pending+0xc/0x2dc\n\n   Allocated by task 0:\n    slab_post_alloc_hook+0x50/0x5c0 mm/slab.h:516\n    slab_alloc_node mm/slub.c:2907 [inline]\n    slab_alloc mm/slub.c:2915 [inline]\n    kmem_cache_alloc+0x1f4/0x4c0 mm/slub.c:2920\n    alloc_pid+0xdc/0xc00 kernel/pid.c:180\n    copy_process+0x2794/0x5e18 kernel/fork.c:2129\n    kernel_clone+0x194/0x13c8 kernel/fork.c:2500\n    kernel_thread+0xd4/0x110 kernel/fork.c:2552\n    rest_init+0x44/0x4a0 init/main.c:687\n    arch_call_rest_init+0x1c/0x28\n    start_kernel+0x520/0x554 init/main.c:1064\n    0x0\n\n   Freed by task 270:\n    slab_free_hook mm/slub.c:1562 [inline]\n    slab_free_freelist_hook+0x98/0x260 mm/slub.c:1600\n    slab_free mm/slub.c:3161 [inline]\n    kmem_cache_free+0x224/0x8e0 mm/slub.c:3177\n    put_pid.part.4+0xe0/0x1a8 kernel/pid.c:114\n    put_pid+0x30/0x48 kernel/pid.c:109\n    proc_do_cad_pid+0x190/0x1b0 kernel/sysctl.c:1401\n    proc_sys_call_handler+0x338/0x4b0 fs/proc/proc_sysctl.c:591\n    proc_sys_write+0x34/0x48 fs/proc/proc_sysctl.c:617\n    call_write_iter include/linux/fs.h:1977 [inline]\n    new_sync_write+0x3ac/0x510 fs/read_write.c:518\n    vfs_write fs/read_write.c:605 [inline]\n    vfs_write+0x9c4/0x1018 fs/read_write.c:585\n    ksys_write+0x124/0x240 fs/read_write.c:658\n    __do_sys_write fs/read_write.c:670 [inline]\n    __se_sys_write fs/read_write.c:667 [inline]\n    __arm64_sys_write+0x78/0xb0 fs/read_write.c:667\n    __invoke_syscall arch/arm64/kernel/syscall.c:37 [inline]\n    invoke_syscall arch/arm64/kernel/syscall.c:49 [inline]\n    el0_svc_common.constprop.1+0x16c/0x388 arch/arm64/kernel/syscall.c:129\n    do_el0_svc+0xf8/0x150 arch/arm64/kernel/syscall.c:168\n    el0_svc+0x28/0x38 arch/arm64/kernel/entry-common.c:416\n    el0_sync_handler+0x134/0x180 arch/arm64/kernel/entry-common.c:432\n    el0_sync+0x154/0x180 arch/arm64/kernel/entry.S:701\n\n   The buggy address belongs to the object at ffff23794dda0000\n    which belongs to the cache pid of size 224\n   The buggy address is located 4 bytes inside of\n    224-byte region [ff\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47119",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix memory leak in ext4_fill_super\n\nBuffer head references must be released before calling kill_bdev();\notherwise the buffer head (and its page referenced by b_data) will not\nbe freed by kill_bdev, and subsequently that bh will be leaked.\n\nIf blocksizes differ, sb_set_blocksize() will kill current buffers and\npage cache by using kill_bdev(). And then super block will be reread\nagain but using correct blocksize this time. sb_set_blocksize() didn't\nfully free superblock page and buffer head, and being busy, they were\nnot freed and instead leaked.\n\nThis can easily be reproduced by calling an infinite loop of:\n\n  systemctl start \u003cext4_on_lvm\u003e.mount, and\n  systemctl stop \u003cext4_on_lvm\u003e.mount\n\n... since systemd creates a cgroup for each slice which it mounts, and\nthe bh leak get amplified by a dying memory cgroup that also never\ngets freed, and memory consumption is much more easily noticed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxgb4: avoid accessing registers when clearing filters\n\nHardware register having the server TID base can contain\ninvalid values when adapter is in bad state (for example,\ndue to AER fatal error). Reading these invalid values in the\nregister can lead to out-of-bound memory access. So, fix\nby using the saved server TID base when clearing filters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Add NULL pointer checks when freeing irqs.\n\nWhen freeing notification blocks, we index priv-\u003emsix_vectors.\nIf we failed to allocate priv-\u003emsix_vectors (see abort_with_msix_vectors)\nthis could lead to a NULL pointer dereference if the driver is unloaded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix a use-after-free\n\nlooks like we forget to set ttm-\u003esg to NULL.\nHit panic below\n\n[ 1235.844104] general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b7b4b: 0000 [#1] SMP DEBUG_PAGEALLOC NOPTI\n[ 1235.989074] Call Trace:\n[ 1235.991751]  sg_free_table+0x17/0x20\n[ 1235.995667]  amdgpu_ttm_backend_unbind.cold+0x4d/0xf7 [amdgpu]\n[ 1236.002288]  amdgpu_ttm_backend_destroy+0x29/0x130 [amdgpu]\n[ 1236.008464]  ttm_tt_destroy+0x1e/0x30 [ttm]\n[ 1236.013066]  ttm_bo_cleanup_memtype_use+0x51/0xa0 [ttm]\n[ 1236.018783]  ttm_bo_release+0x262/0xa50 [ttm]\n[ 1236.023547]  ttm_bo_put+0x82/0xd0 [ttm]\n[ 1236.027766]  amdgpu_bo_unref+0x26/0x50 [amdgpu]\n[ 1236.032809]  amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu+0x7aa/0xd90 [amdgpu]\n[ 1236.040400]  kfd_ioctl_alloc_memory_of_gpu+0xe2/0x330 [amdgpu]\n[ 1236.046912]  kfd_ioctl+0x463/0x690 [amdgpu]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47143",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: remove device from smcd_dev_list after failed device_add()\n\nIf the device_add() for a smcd_dev fails, there's no cleanup step that\nrolls back the earlier list_add(). The device subsequently gets freed,\nand we end up with a corrupted list.\n\nAdd some error handling that removes the device from the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47146",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmld: fix panic in mld_newpack()\n\nmld_newpack() doesn't allow to allocate high order page,\nonly order-0 allocation is allowed.\nIf headroom size is too large, a kernel panic could occur in skb_put().\n\nTest commands:\n    ip netns del A\n    ip netns del B\n    ip netns add A\n    ip netns add B\n    ip link add veth0 type veth peer name veth1\n    ip link set veth0 netns A\n    ip link set veth1 netns B\n\n    ip netns exec A ip link set lo up\n    ip netns exec A ip link set veth0 up\n    ip netns exec A ip -6 a a 2001:db8:0::1/64 dev veth0\n    ip netns exec B ip link set lo up\n    ip netns exec B ip link set veth1 up\n    ip netns exec B ip -6 a a 2001:db8:0::2/64 dev veth1\n    for i in {1..99}\n    do\n        let A=$i-1\n        ip netns exec A ip link add ip6gre$i type ip6gre \\\n\tlocal 2001:db8:$A::1 remote 2001:db8:$A::2 encaplimit 100\n        ip netns exec A ip -6 a a 2001:db8:$i::1/64 dev ip6gre$i\n        ip netns exec A ip link set ip6gre$i up\n\n        ip netns exec B ip link add ip6gre$i type ip6gre \\\n\tlocal 2001:db8:$A::2 remote 2001:db8:$A::1 encaplimit 100\n        ip netns exec B ip -6 a a 2001:db8:$i::2/64 dev ip6gre$i\n        ip netns exec B ip link set ip6gre$i up\n    done\n\nSplat looks like:\nkernel BUG at net/core/skbuff.c:110!\ninvalid opcode: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI\nCPU: 0 PID: 7 Comm: kworker/0:1 Not tainted 5.12.0+ #891\nWorkqueue: ipv6_addrconf addrconf_dad_work\nRIP: 0010:skb_panic+0x15d/0x15f\nCode: 92 fe 4c 8b 4c 24 10 53 8b 4d 70 45 89 e0 48 c7 c7 00 ae 79 83\n41 57 41 56 41 55 48 8b 54 24 a6 26 f9 ff \u003c0f\u003e 0b 48 8b 6c 24 20 89\n34 24 e8 4a 4e 92 fe 8b 34 24 48 c7 c1 20\nRSP: 0018:ffff88810091f820 EFLAGS: 00010282\nRAX: 0000000000000089 RBX: ffff8881086e9000 RCX: 0000000000000000\nRDX: 0000000000000089 RSI: 0000000000000008 RDI: ffffed1020123efb\nRBP: ffff888005f6eac0 R08: ffffed1022fc0031 R09: ffffed1022fc0031\nR10: ffff888117e00187 R11: ffffed1022fc0030 R12: 0000000000000028\nR13: ffff888008284eb0 R14: 0000000000000ed8 R15: 0000000000000ec0\nFS:  0000000000000000(0000) GS:ffff888117c00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f8b801c5640 CR3: 0000000033c2c006 CR4: 00000000003706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n ? ip6_mc_hdr.isra.26.constprop.46+0x12a/0x600\n ? ip6_mc_hdr.isra.26.constprop.46+0x12a/0x600\n skb_put.cold.104+0x22/0x22\n ip6_mc_hdr.isra.26.constprop.46+0x12a/0x600\n ? rcu_read_lock_sched_held+0x91/0xc0\n mld_newpack+0x398/0x8f0\n ? ip6_mc_hdr.isra.26.constprop.46+0x600/0x600\n ? lock_contended+0xc40/0xc40\n add_grhead.isra.33+0x280/0x380\n add_grec+0x5ca/0xff0\n ? mld_sendpack+0xf40/0xf40\n ? lock_downgrade+0x690/0x690\n mld_send_initial_cr.part.34+0xb9/0x180\n ipv6_mc_dad_complete+0x15d/0x1b0\n addrconf_dad_completed+0x8d2/0xbb0\n ? lock_downgrade+0x690/0x690\n ? addrconf_rs_timer+0x660/0x660\n ? addrconf_dad_work+0x73c/0x10e0\n addrconf_dad_work+0x73c/0x10e0\n\nAllowing high order page allocation could fix this problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47149",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fujitsu: fix potential null-ptr-deref\n\nIn fmvj18x_get_hwinfo(), if ioremap fails there will be NULL pointer\nderef. To fix this, check the return value of ioremap and return -1\nto the caller in case of failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47150",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fec: fix the potential memory leak in fec_enet_init()\n\nIf the memory allocated for cbd_base is failed, it should\nfree the memory allocated for the queues, otherwise it causes\nmemory leak.\n\nAnd if the memory allocated for the queues is failed, it can\nreturn error directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47153",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: i801: Don't generate an interrupt on bus reset\n\nNow that the i2c-i801 driver supports interrupts, setting the KILL bit\nin a attempt to recover from a timed out transaction triggers an\ninterrupt. Unfortunately, the interrupt handler (i801_isr) is not\nprepared for this situation and will try to process the interrupt as\nif it was signaling the end of a successful transaction. In the case\nof a block transaction, this can result in an out-of-range memory\naccess.\n\nThis condition was reproduced several times by syzbot:\nhttps://syzkaller.appspot.com/bug?extid=ed71512d469895b5b34e\nhttps://syzkaller.appspot.com/bug?extid=8c8dedc0ba9e03f6c79e\nhttps://syzkaller.appspot.com/bug?extid=c8ff0b6d6c73d81b610e\nhttps://syzkaller.appspot.com/bug?extid=33f6c360821c399d69eb\nhttps://syzkaller.appspot.com/bug?extid=be15dc0b1933f04b043a\nhttps://syzkaller.appspot.com/bug?extid=b4d3fd1dfd53e90afd79\n\nSo disable interrupts while trying to reset the bus. Interrupts will\nbe enabled again for the following transaction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47161",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-fsl-dspi: Fix a resource leak in an error handling path\n\n'dspi_request_dma()' should be undone by a 'dspi_release_dma()' call in the\nerror handling path of the probe function, as already done in the remove\nfunction",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: skb_linearize the head skb when reassembling msgs\n\nIt's not a good idea to append the frag skb to a skb's frag_list if\nthe frag_list already has skbs from elsewhere, such as this skb was\ncreated by pskb_copy() where the frag_list was cloned (all the skbs\nin it were skb_get'ed) and shared by multiple skbs.\n\nHowever, the new appended frag skb should have been only seen by the\ncurrent skb. Otherwise, it will cause use after free crashes as this\nappended frag skb are seen by multiple skbs but it only got skb_get\ncalled once.\n\nThe same thing happens with a skb updated by pskb_may_pull() with a\nskb_cloned skb. Li Shuang has reported quite a few crashes caused\nby this when doing testing over macvlan devices:\n\n  [] kernel BUG at net/core/skbuff.c:1970!\n  [] Call Trace:\n  []  skb_clone+0x4d/0xb0\n  []  macvlan_broadcast+0xd8/0x160 [macvlan]\n  []  macvlan_process_broadcast+0x148/0x150 [macvlan]\n  []  process_one_work+0x1a7/0x360\n  []  worker_thread+0x30/0x390\n\n  [] kernel BUG at mm/usercopy.c:102!\n  [] Call Trace:\n  []  __check_heap_object+0xd3/0x100\n  []  __check_object_size+0xff/0x16b\n  []  simple_copy_to_iter+0x1c/0x30\n  []  __skb_datagram_iter+0x7d/0x310\n  []  __skb_datagram_iter+0x2a5/0x310\n  []  skb_copy_datagram_iter+0x3b/0x90\n  []  tipc_recvmsg+0x14a/0x3a0 [tipc]\n  []  ____sys_recvmsg+0x91/0x150\n  []  ___sys_recvmsg+0x7b/0xc0\n\n  [] kernel BUG at mm/slub.c:305!\n  [] Call Trace:\n  []  \u003cIRQ\u003e\n  []  kmem_cache_free+0x3ff/0x400\n  []  __netif_receive_skb_core+0x12c/0xc40\n  []  ? kmem_cache_alloc+0x12e/0x270\n  []  netif_receive_skb_internal+0x3d/0xb0\n  []  ? get_rx_page_info+0x8e/0xa0 [be2net]\n  []  be_poll+0x6ef/0xd00 [be2net]\n  []  ? irq_exit+0x4f/0x100\n  []  net_rx_action+0x149/0x3b0\n\n  ...\n\nThis patch is to fix it by linearizing the head skb if it has frag_list\nset in tipc_buf_append(). Note that we choose to do this before calling\nskb_unshare(), as __skb_linearize() will avoid skb_copy(). Also, we can\nnot just drop the frag_list either as the early time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47165",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/meson: fix shutdown crash when component not probed\n\nWhen main component is not probed, by example when the dw-hdmi module is\nnot loaded yet or in probe defer, the following crash appears on shutdown:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000038\n...\npc : meson_drv_shutdown+0x24/0x50\nlr : platform_drv_shutdown+0x20/0x30\n...\nCall trace:\nmeson_drv_shutdown+0x24/0x50\nplatform_drv_shutdown+0x20/0x30\ndevice_shutdown+0x158/0x360\nkernel_restart_prepare+0x38/0x48\nkernel_restart+0x18/0x68\n__do_sys_reboot+0x224/0x250\n__arm64_sys_reboot+0x24/0x30\n...\n\nSimply check if the priv struct has been allocated before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47166",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Don't corrupt the value of pg_bytes_written in nfs_do_recoalesce()\n\nThe value of mirror-\u003epg_bytes_written should only be updated after a\nsuccessful attempt to flush out the requests on the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47167",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix an Oopsable condition in __nfs_pageio_add_request()\n\nEnsure that nfs_pageio_error_cleanup() resets the mirror array contents,\nso that the structure reflects the fact that it is now empty.\nAlso change the test in nfs_pageio_do_add_request() to be more robust by\nchecking whether or not the list is empty rather than relying on the\nvalue of pg_count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47168",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: fix an incorrect limit in filelayout_decode_layout()\n\nThe \"sizeof(struct nfs_fh)\" is two bytes too large and could lead to\nmemory corruption.  It should be NFS_MAXFHSIZE because that's the size\nof the -\u003edata[] buffer.\n\nI reversed the size of the arguments to put the variable on the left.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47169",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: rp2: use 'request_firmware' instead of 'request_firmware_nowait'\n\nIn 'rp2_probe', the driver registers 'rp2_uart_interrupt' then calls\n'rp2_fw_cb' through 'request_firmware_nowait'. In 'rp2_fw_cb', if the\nfirmware don't exists, function just return without initializing ports\nof 'rp2_card'. But now the interrupt handler function has been\nregistered, and when an interrupt comes, 'rp2_uart_interrupt' may access\nthose ports then causing NULL pointer dereference or other bugs.\n\nBecause the driver does some initialization work in 'rp2_fw_cb', in\norder to make the driver ready to handle interrupts, 'request_firmware'\nshould be used instead of asynchronous 'request_firmware_nowait'.\n\nThis report reveals it:\n\nINFO: trying to register non-static key.\nthe code is fine but needs lockdep annotation.\nturning off the locking correctness validator.\nCPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.19.177-gdba4159c14ef-dirty #45\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-\ngc9ba5276e321-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cIRQ\u003e\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xec/0x156 lib/dump_stack.c:118\n assign_lock_key kernel/locking/lockdep.c:727 [inline]\n register_lock_class+0x14e5/0x1ba0 kernel/locking/lockdep.c:753\n __lock_acquire+0x187/0x3750 kernel/locking/lockdep.c:3303\n lock_acquire+0x124/0x340 kernel/locking/lockdep.c:3907\n __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]\n _raw_spin_lock+0x32/0x50 kernel/locking/spinlock.c:144\n spin_lock include/linux/spinlock.h:329 [inline]\n rp2_ch_interrupt drivers/tty/serial/rp2.c:466 [inline]\n rp2_asic_interrupt.isra.9+0x15d/0x990 drivers/tty/serial/rp2.c:493\n rp2_uart_interrupt+0x49/0xe0 drivers/tty/serial/rp2.c:504\n __handle_irq_event_percpu+0xfb/0x770 kernel/irq/handle.c:149\n handle_irq_event_percpu+0x79/0x150 kernel/irq/handle.c:189\n handle_irq_event+0xac/0x140 kernel/irq/handle.c:206\n handle_fasteoi_irq+0x232/0x5c0 kernel/irq/chip.c:725\n generic_handle_irq_desc include/linux/irqdesc.h:155 [inline]\n handle_irq+0x230/0x3a0 arch/x86/kernel/irq_64.c:87\n do_IRQ+0xa7/0x1e0 arch/x86/kernel/irq.c:247\n common_interrupt+0xf/0xf arch/x86/entry/entry_64.S:670\n \u003c/IRQ\u003e\nRIP: 0010:native_safe_halt+0x28/0x30 arch/x86/include/asm/irqflags.h:61\nCode: 00 00 55 be 04 00 00 00 48 c7 c7 00 c2 2f 8c 48 89 e5 e8 fb 31 e7 f8\n8b 05 75 af 8d 03 85 c0 7e 07 0f 00 2d 8a 61 65 00 fb f4 \u003c5d\u003e c3 90 90 90\n90 90 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 41\nRSP: 0018:ffff88806b71fcc8 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffde\nRAX: 0000000000000000 RBX: ffffffff8bde7e48 RCX: ffffffff88a21285\nRDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffff8c2fc200\nRBP: ffff88806b71fcc8 R08: fffffbfff185f840 R09: fffffbfff185f840\nR10: 0000000000000001 R11: fffffbfff185f840 R12: 0000000000000002\nR13: ffffffff8bea18a0 R14: 0000000000000000 R15: 0000000000000000\n arch_safe_halt arch/x86/include/asm/paravirt.h:94 [inline]\n default_idle+0x6f/0x360 arch/x86/kernel/process.c:557\n arch_cpu_idle+0xf/0x20 arch/x86/kernel/process.c:548\n default_idle_call+0x3b/0x60 kernel/sched/idle.c:93\n cpuidle_idle_call kernel/sched/idle.c:153 [inline]\n do_idle+0x2ab/0x3c0 kernel/sched/idle.c:263\n cpu_startup_entry+0xcb/0xe0 kernel/sched/idle.c:369\n start_secondary+0x3b8/0x4e0 arch/x86/kernel/smpboot.c:271\n secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:243\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000010\nPGD 8000000056d27067 P4D 8000000056d27067 PUD 56d28067 PMD 0\nOops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.19.177-gdba4159c14ef-dirty #45\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-\ngc9ba5276e321-prebuilt.qemu.org 04/01/2014\nRIP: 0010:readl arch/x86/include/asm/io.h:59 [inline]\nRIP: 0010:rp2_ch_interrupt drivers/tty/serial/rp2.c:472 [inline]\nRIP: 0010:rp2_asic_interrupt.isra.9+0x181/0x990 drivers/tty/serial/rp2.c:\n493\nCo\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47171",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: fix memory leak in smsc75xx_bind\n\nSyzbot reported memory leak in smsc75xx_bind().\nThe problem was is non-freed memory in case of\nerrors after memory allocation.\n\nbacktrace:\n  [\u003cffffffff84245b62\u003e] kmalloc include/linux/slab.h:556 [inline]\n  [\u003cffffffff84245b62\u003e] kzalloc include/linux/slab.h:686 [inline]\n  [\u003cffffffff84245b62\u003e] smsc75xx_bind+0x7a/0x334 drivers/net/usb/smsc75xx.c:1460\n  [\u003cffffffff82b5b2e6\u003e] usbnet_probe+0x3b6/0xc30 drivers/net/usb/usbnet.c:1728",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47173",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc/uss720: fix memory leak in uss720_probe\n\nuss720_probe forgets to decrease the refcount of usbdev in uss720_probe.\nFix this by decreasing the refcount of usbdev by usb_put_dev.\n\nBUG: memory leak\nunreferenced object 0xffff888101113800 (size 2048):\n  comm \"kworker/0:1\", pid 7, jiffies 4294956777 (age 28.870s)\n  hex dump (first 32 bytes):\n    ff ff ff ff 31 00 00 00 00 00 00 00 00 00 00 00  ....1...........\n    00 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00  ................\n  backtrace:\n    [\u003cffffffff82b8e822\u003e] kmalloc include/linux/slab.h:554 [inline]\n    [\u003cffffffff82b8e822\u003e] kzalloc include/linux/slab.h:684 [inline]\n    [\u003cffffffff82b8e822\u003e] usb_alloc_dev+0x32/0x450 drivers/usb/core/usb.c:582\n    [\u003cffffffff82b98441\u003e] hub_port_connect drivers/usb/core/hub.c:5129 [inline]\n    [\u003cffffffff82b98441\u003e] hub_port_connect_change drivers/usb/core/hub.c:5363 [inline]\n    [\u003cffffffff82b98441\u003e] port_event drivers/usb/core/hub.c:5509 [inline]\n    [\u003cffffffff82b98441\u003e] hub_event+0x1171/0x20c0 drivers/usb/core/hub.c:5591\n    [\u003cffffffff81259229\u003e] process_one_work+0x2c9/0x600 kernel/workqueue.c:2275\n    [\u003cffffffff81259b19\u003e] worker_thread+0x59/0x5d0 kernel/workqueue.c:2421\n    [\u003cffffffff81261228\u003e] kthread+0x178/0x1b0 kernel/kthread.c:292\n    [\u003cffffffff8100227f\u003e] ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47177",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix sysfs leak in alloc_iommu()\n\niommu_device_sysfs_add() is called before, so is has to be cleaned on subsequent\nerrors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47179",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Fix a NULL pointer dereference in pnfs_mark_matching_lsegs_return()\n\nCommit de144ff4234f changes _pnfs_return_layout() to call\npnfs_mark_matching_lsegs_return() passing NULL as the struct\npnfs_layout_range argument. Unfortunately,\npnfs_mark_matching_lsegs_return() doesn't check if we have a value here\nbefore dereferencing it, causing an oops.\n\nI'm able to hit this crash consistently when running connectathon basic\ntests on NFS v4.1/v4.2 against Ontap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47180",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: nci: fix memory leak in nci_allocate_device\n\nnfcmrvl_disconnect fails to free the hci_dev field in struct nci_dev.\nFix this by freeing hci_dev in nci_free_device.\n\nBUG: memory leak\nunreferenced object 0xffff888111ea6800 (size 1024):\n  comm \"kworker/1:0\", pid 19, jiffies 4294942308 (age 13.580s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 60 fd 0c 81 88 ff ff  .........`......\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c000000004bc25d43\u003e] kmalloc include/linux/slab.h:552 [inline]\n    [\u003c000000004bc25d43\u003e] kzalloc include/linux/slab.h:682 [inline]\n    [\u003c000000004bc25d43\u003e] nci_hci_allocate+0x21/0xd0 net/nfc/nci/hci.c:784\n    [\u003c00000000c59cff92\u003e] nci_allocate_device net/nfc/nci/core.c:1170 [inline]\n    [\u003c00000000c59cff92\u003e] nci_allocate_device+0x10b/0x160 net/nfc/nci/core.c:1132\n    [\u003c00000000006e0a8e\u003e] nfcmrvl_nci_register_dev+0x10a/0x1c0 drivers/nfc/nfcmrvl/main.c:153\n    [\u003c000000004da1b57e\u003e] nfcmrvl_probe+0x223/0x290 drivers/nfc/nfcmrvl/usb.c:345\n    [\u003c00000000d506aed9\u003e] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396\n    [\u003c00000000bc632c92\u003e] really_probe+0x159/0x4a0 drivers/base/dd.c:554\n    [\u003c00000000f5009125\u003e] driver_probe_device+0x84/0x100 drivers/base/dd.c:740\n    [\u003c000000000ce658ca\u003e] __device_attach_driver+0xee/0x110 drivers/base/dd.c:846\n    [\u003c000000007067d05f\u003e] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:431\n    [\u003c00000000f8e13372\u003e] __device_attach+0x122/0x250 drivers/base/dd.c:914\n    [\u003c000000009cf68860\u003e] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:491\n    [\u003c00000000359c965a\u003e] device_add+0x5be/0xc30 drivers/base/core.c:3109\n    [\u003c00000000086e4bd3\u003e] usb_set_configuration+0x9d9/0xb90 drivers/usb/core/message.c:2164\n    [\u003c00000000ca036872\u003e] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238\n    [\u003c00000000d40d36f6\u003e] usb_probe_device+0x5c/0x140 drivers/usb/core/driver.c:293\n    [\u003c00000000bc632c92\u003e] really_probe+0x159/0x4a0 drivers/base/dd.c:554",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47181",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: musb: tusb6010: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47182",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix scsi_mode_sense() buffer length handling\n\nSeveral problems exist with scsi_mode_sense() buffer length handling:\n\n 1) The allocation length field of the MODE SENSE(10) command is 16-bits,\n    occupying bytes 7 and 8 of the CDB. With this command, access to mode\n    pages larger than 255 bytes is thus possible. However, the CDB\n    allocation length field is set by assigning len to byte 8 only, thus\n    truncating buffer length larger than 255.\n\n 2) If scsi_mode_sense() is called with len smaller than 8 with\n    sdev-\u003euse_10_for_ms set, or smaller than 4 otherwise, the buffer length\n    is increased to 8 and 4 respectively, and the buffer is zero filled\n    with these increased values, thus corrupting the memory following the\n    buffer.\n\nFix these 2 problems by using put_unaligned_be16() to set the allocation\nlength field of MODE SENSE(10) CDB and by returning an error when len is\ntoo small.\n\nFurthermore, if len is larger than 255B, always try MODE SENSE(10) first,\neven if the device driver did not set sdev-\u003euse_10_for_ms. In case of\ninvalid opcode error for MODE SENSE(10), access to mode pages larger than\n255 bytes are not retried using MODE SENSE(6). To avoid buffer length\noverflows for the MODE_SENSE(10) case, check that len is smaller than 65535\nbytes.\n\nWhile at it, also fix the folowing:\n\n * Use get_unaligned_be16() to retrieve the mode data length and block\n   descriptor length fields of the mode sense reply header instead of using\n   an open coded calculation.\n\n * Fix the kdoc dbd argument explanation: the DBD bit stands for Disable\n   Block Descriptor, which is the opposite of what the dbd argument\n   description was.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47183",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix link down processing to address NULL pointer dereference\n\nIf an FC link down transition while PLOGIs are outstanding to fabric well\nknown addresses, outstanding ABTS requests may result in a NULL pointer\ndereference. Driver unload requests may hang with repeated \"2878\" log\nmessages.\n\nThe Link down processing results in ABTS requests for outstanding ELS\nrequests. The Abort WQEs are sent for the ELSs before the driver had set\nthe link state to down. Thus the driver is sending the Abort with the\nexpectation that an ABTS will be sent on the wire. The Abort request is\nstalled waiting for the link to come up. In some conditions the driver may\nauto-complete the ELSs thus if the link does come up, the Abort completions\nmay reference an invalid structure.\n\nFix by ensuring that Abort set the flag to avoid link traffic if issued due\nto conditions where the link failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47184",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix NULL ptr dereference on VSI filter sync\n\nRemove the reason of null pointer dereference in sync VSI filters.\nAdded new I40E_VSI_RELEASING flag to signalize deleting and releasing\nof VSI resources to sync this thread with sync filters subtask.\nWithout this patch it is possible to start update the VSI filter list\nafter VSI is removed, that's causing a kernel oops.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47185",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: tty_buffer: Fix the softlockup issue in flush_to_ldisc\n\nWhen running ltp testcase(ltp/testcases/kernel/pty/pty04.c) with arm64, there is a soft lockup,\nwhich look like this one:\n\n  Workqueue: events_unbound flush_to_ldisc\n  Call trace:\n   dump_backtrace+0x0/0x1ec\n   show_stack+0x24/0x30\n   dump_stack+0xd0/0x128\n   panic+0x15c/0x374\n   watchdog_timer_fn+0x2b8/0x304\n   __run_hrtimer+0x88/0x2c0\n   __hrtimer_run_queues+0xa4/0x120\n   hrtimer_interrupt+0xfc/0x270\n   arch_timer_handler_phys+0x40/0x50\n   handle_percpu_devid_irq+0x94/0x220\n   __handle_domain_irq+0x88/0xf0\n   gic_handle_irq+0x84/0xfc\n   el1_irq+0xc8/0x180\n   slip_unesc+0x80/0x214 [slip]\n   tty_ldisc_receive_buf+0x64/0x80\n   tty_port_default_receive_buf+0x50/0x90\n   flush_to_ldisc+0xbc/0x110\n   process_one_work+0x1d4/0x4b0\n   worker_thread+0x180/0x430\n   kthread+0x11c/0x120\n\nIn the testcase pty04, The first process call the write syscall to send\ndata to the pty master. At the same time, the workqueue will do the\nflush_to_ldisc to pop data in a loop until there is no more data left.\nWhen the sender and workqueue running in different core, the sender sends\ndata fastly in full time which will result in workqueue doing work in loop\nfor a long time and occuring softlockup in flush_to_ldisc with kernel\nconfigured without preempt. So I add need_resched check and cond_resched\nin the flush_to_ldisc loop to avoid it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47188",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Improve SCSI abort handling\n\nThe following has been observed on a test setup:\n\nWARNING: CPU: 4 PID: 250 at drivers/scsi/ufs/ufshcd.c:2737 ufshcd_queuecommand+0x468/0x65c\nCall trace:\n ufshcd_queuecommand+0x468/0x65c\n scsi_send_eh_cmnd+0x224/0x6a0\n scsi_eh_test_devices+0x248/0x418\n scsi_eh_ready_devs+0xc34/0xe58\n scsi_error_handler+0x204/0x80c\n kthread+0x150/0x1b4\n ret_from_fork+0x10/0x30\n\nThat warning is triggered by the following statement:\n\n\tWARN_ON(lrbp-\u003ecmd);\n\nFix this warning by clearing lrbp-\u003ecmd from the abort handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47189",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix memory ordering between normal and ordered work functions\n\nOrdered work functions aren't guaranteed to be handled by the same thread\nwhich executed the normal work functions. The only way execution between\nnormal/ordered functions is synchronized is via the WORK_DONE_BIT,\nunfortunately the used bitops don't guarantee any ordering whatsoever.\n\nThis manifested as seemingly inexplicable crashes on ARM64, where\nasync_chunk::inode is seen as non-null in async_cow_submit which causes\nsubmit_compressed_extents to be called and crash occurs because\nasync_chunk::inode suddenly became NULL. The call trace was similar to:\n\n    pc : submit_compressed_extents+0x38/0x3d0\n    lr : async_cow_submit+0x50/0xd0\n    sp : ffff800015d4bc20\n\n    \u003cregisters omitted for brevity\u003e\n\n    Call trace:\n     submit_compressed_extents+0x38/0x3d0\n     async_cow_submit+0x50/0xd0\n     run_ordered_work+0xc8/0x280\n     btrfs_work_helper+0x98/0x250\n     process_one_work+0x1f0/0x4ac\n     worker_thread+0x188/0x504\n     kthread+0x110/0x114\n     ret_from_fork+0x10/0x18\n\nFix this by adding respective barrier calls which ensure that all\naccesses preceding setting of WORK_DONE_BIT are strictly ordered before\nsetting the flag. At the same time add a read barrier after reading of\nWORK_DONE_BIT in run_ordered_work which ensures all subsequent loads\nwould be strictly ordered after reading the bit. This in turn ensures\nare all accesses before WORK_DONE_BIT are going to be strictly ordered\nbefore any access that can occur in ordered_func.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47198",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix use-after-free in lpfc_unreg_rpi() routine\n\nAn error is detected with the following report when unloading the driver:\n  \"KASAN: use-after-free in lpfc_unreg_rpi+0x1b1b\"\n\nThe NLP_REG_LOGIN_SEND nlp_flag is set in lpfc_reg_fab_ctrl_node(), but the\nflag is not cleared upon completion of the login.\n\nThis allows a second call to lpfc_unreg_rpi() to proceed with nlp_rpi set\nto LPFC_RPI_ALLOW_ERROR.  This results in a use after free access when used\nas an rpi_ids array index.\n\nFix by clearing the NLP_REG_LOGIN_SEND nlp_flag in\nlpfc_mbx_cmpl_fc_reg_login().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47202",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: Fix NULL pointer dereferences in of_thermal_ functions\n\nof_parse_thermal_zones() parses the thermal-zones node and registers a\nthermal_zone device for each subnode. However, if a thermal zone is\nconsuming a thermal sensor and that thermal sensor device hasn't probed\nyet, an attempt to set trip_point_*_temp for that thermal zone device\ncan cause a NULL pointer dereference. Fix it.\n\n console:/sys/class/thermal/thermal_zone87 # echo 120000 \u003e trip_point_0_temp\n ...\n Unable to handle kernel NULL pointer dereference at virtual address 0000000000000020\n ...\n Call trace:\n  of_thermal_set_trip_temp+0x40/0xc4\n  trip_point_temp_store+0xc0/0x1dc\n  dev_attr_store+0x38/0x88\n  sysfs_kf_write+0x64/0xc0\n  kernfs_fop_write_iter+0x108/0x1d0\n  vfs_write+0x2f4/0x368\n  ksys_write+0x7c/0xec\n  __arm64_sys_write+0x20/0x30\n  el0_svc_common.llvm.7279915941325364641+0xbc/0x1bc\n  do_el0_svc+0x28/0xa0\n  el0_svc+0x14/0x24\n  el0_sync_handler+0x88/0xec\n  el0_sync+0x1c0/0x200\n\nWhile at it, fix the possible NULL pointer dereference in other\nfunctions as well: of_thermal_get_temp(), of_thermal_set_emul_temp(),\nof_thermal_get_trend().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47203",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix list_add() corruption in lpfc_drain_txq()\n\nWhen parsing the txq list in lpfc_drain_txq(), the driver attempts to pass\nthe requests to the adapter. If such an attempt fails, a local \"fail_msg\"\nstring is set and a log message output.  The job is then added to a\ncompletions list for cancellation.\n\nProcessing of any further jobs from the txq list continues, but since\n\"fail_msg\" remains set, jobs are added to the completions list regardless\nof whether a wqe was passed to the adapter.  If successfully added to\ntxcmplq, jobs are added to both lists resulting in list corruption.\n\nFix by clearing the fail_msg string after adding a job to the completions\nlist. This stops the subsequent jobs from being added to the completions\nlist unless they had an appropriate failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47204",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dpaa2-eth: fix use-after-free in dpaa2_eth_remove\n\nAccess to netdev after free_netdev() will cause use-after-free bug.\nMove debug log before free_netdev() call to avoid it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47205",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: sunxi-ng: Unregister clocks/resets when unbinding\n\nCurrently, unbinding a CCU driver unmaps the device's MMIO region, while\nleaving its clocks/resets and their providers registered. This can cause\na page fault later when some clock operation tries to perform MMIO. Fix\nthis by separating the CCU initialization from the memory allocation,\nand then using a devres callback to unregister the clocks and resets.\n\nThis also fixes a memory leak of the `struct ccu_reset`, and uses the\ncorrect owner (the specific platform driver) for the clocks and resets.\n\nEarly OF clock providers are never unregistered, and limited error\nhandling is possible, so they are mostly unchanged. The error reporting\nis made more consistent by moving the message inside of_sunxi_ccu_probe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47207",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: gus: fix null pointer dereference on pointer block\n\nThe pointer block return from snd_gf1_dma_next_block could be\nnull, so there is a potential null pointer dereference issue.\nFix this by adding a null check before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47211",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: fix null pointer dereference on pointer cs_desc\n\nThe pointer cs_desc return from snd_usb_find_clock_source could\nbe null, so there is a potential null pointer dereference issue.\nFix this by adding a null check before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47216",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: advansys: Fix kernel pointer leak\n\nPointers should be printed with %p or %px rather than cast to 'unsigned\nlong' and printed with %lx.\n\nChange %lx to %p to print the hashed pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47217",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/hyperv: Fix NULL deref in set_hv_tscchange_cb() if Hyper-V setup fails\n\nCheck for a valid hv_vp_index array prior to derefencing hv_vp_index when\nsetting Hyper-V's TSC change callback.  If Hyper-V setup failed in\nhyperv_init(), the kernel will still report that it's running under\nHyper-V, but will have silently disabled nearly all functionality.\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000010\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] SMP\n  CPU: 4 PID: 1 Comm: swapper/0 Not tainted 5.15.0-rc2+ #75\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n  RIP: 0010:set_hv_tscchange_cb+0x15/0xa0\n  Code: \u003c8b\u003e 04 82 8b 15 12 17 85 01 48 c1 e0 20 48 0d ee 00 01 00 f6 c6 08\n  ...\n  Call Trace:\n   kvm_arch_init+0x17c/0x280\n   kvm_init+0x31/0x330\n   vmx_init+0xba/0x13a\n   do_one_initcall+0x41/0x1c0\n   kernel_init_freeable+0x1f2/0x23b\n   kernel_init+0x16/0x120\n   ret_from_fork+0x22/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-0487",
      "Description": "A use-after-free vulnerability was found in rtsx_usb_ms_drv_remove in drivers/memstick/host/rtsx_usb_ms.c in memstick in the Linux kernel. In this flaw, a local attacker with a user privilege may impact system Confidentiality. This flaw affects kernel versions prior to 5.14 rc1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2022-20154",
      "Description": "In lock_sock_nested of sock.c, there is a possible use after free due to a race condition. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-174846563References: Upstream kernel",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.4",
        "Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-25236",
      "Description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-28737",
      "Description": "There's a possible overflow in handle_image() when shim tries to load and execute crafted EFI executables; The handle_image() function takes into account the SizeOfRawData field from each section to be loaded. An attacker can leverage this to perform out-of-bound writes into memory. Arbitrary code execution is not discarded in such scenario.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48560",
      "Description": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-xml-2.7.18-33.35.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48619",
      "Description": "An issue was discovered in drivers/input/input.c in the Linux kernel before 5.17.10. An attacker can cause a denial of service (panic) because input_set_capability mishandles the situation in which an event code falls outside of a bitmap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48624",
      "Description": "close_altfile in filename.c in less before 606 omits shell_quote calls for LESSCLOSE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:less-458-7.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48627",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt: fix memory overlapping when deleting chars in the buffer\n\nA memory overlapping copy occurs when deleting a long line. This memory\noverlapping copy can cause data corruption when scr_memcpyw is optimized\nto memcpy because memcpy does not ensure its behavior if the destination\nbuffer overlaps with the source buffer. The line buffer is not always\nbroken, because the memcpy utilizes the hardware acceleration, whose\nresult is not deterministic.\n\nFix this problem by using replacing the scr_memcpyw with scr_memmovew.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48636",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: fix Oops in dasd_alias_get_start_dev due to missing pavgroup\n\nFix Oops in dasd_alias_get_start_dev() function caused by the pavgroup\npointer being NULL.\n\nThe pavgroup pointer is checked on the entrance of the function but\nwithout the lcu-\u003elock being held. Therefore there is a race window\nbetween dasd_alias_get_start_dev() and _lcu_update() which sets\npavgroup to NULL with the lcu-\u003elock held.\n\nFix by checking the pavgroup pointer with lcu-\u003elock held.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix memory leak in __qlt_24xx_handle_abts()\n\nCommit 8f394da36a36 (\"scsi: qla2xxx: Drop TARGET_SCF_LOOKUP_LUN_FROM_TAG\")\nmade the __qlt_24xx_handle_abts() function return early if\ntcm_qla2xxx_find_cmd_by_tag() didn't find a command, but it missed to clean\nup the allocated memory for the management command.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48651",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: Fix out-of-bound bugs caused by unset skb-\u003emac_header\n\nIf an AF_PACKET socket is used to send packets through ipvlan and the\ndefault xmit function of the AF_PACKET socket is changed from\ndev_queue_xmit() to packet_direct_xmit() via setsockopt() with the option\nname of PACKET_QDISC_BYPASS, the skb-\u003emac_header may not be reset and\nremains as the initial value of 65535, this may trigger slab-out-of-bounds\nbugs as following:\n\n=================================================================\nUG: KASAN: slab-out-of-bounds in ipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nPU: 2 PID: 1768 Comm: raw_send Kdump: loaded Not tainted 6.0.0-rc4+ #6\nardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33\nall Trace:\nprint_address_description.constprop.0+0x1d/0x160\nprint_report.cold+0x4f/0x112\nkasan_report+0xa3/0x130\nipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nipvlan_start_xmit+0x29/0xa0 [ipvlan]\n__dev_direct_xmit+0x2e2/0x380\npacket_direct_xmit+0x22/0x60\npacket_snd+0x7c9/0xc40\nsock_sendmsg+0x9a/0xa0\n__sys_sendto+0x18a/0x230\n__x64_sys_sendto+0x74/0x90\ndo_syscall_64+0x3b/0x90\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe root cause is:\n  1. packet_snd() only reset skb-\u003emac_header when sock-\u003etype is SOCK_RAW\n     and skb-\u003eprotocol is not specified as in packet_parse_headers()\n\n  2. packet_direct_xmit() doesn't reset skb-\u003emac_header as dev_queue_xmit()\n\nIn this case, skb-\u003emac_header is 65535 when ipvlan_xmit_mode_l2() is\ncalled. So when ipvlan_xmit_mode_l2() gets mac header with eth_hdr() which\nuse \"skb-\u003ehead + skb-\u003emac_header\", out-of-bound access occurs.\n\nThis patch replaces eth_hdr() with skb_eth_hdr() in ipvlan_xmit_mode_l2()\nand reset mac header in multicast to solve this out-of-bound bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48667",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix temporary data corruption in insert range\n\ninsert range doesn't discard the affected cached region\nso can risk temporarily corrupting file data.\n\nAlso includes some minor cleanup (avoiding rereading\ninode size repeatedly unnecessarily) to make it clearer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48668",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix temporary data corruption in collapse range\n\ncollapse range doesn't discard the affected cached region\nso can risk temporarily corrupting the file data. This\nfixes xfstest generic/031\n\nI also decided to merge a minor cleanup to this into the same patch\n(avoiding rereading inode size repeatedly unnecessarily) to make it\nclearer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48688",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix kernel crash during module removal\n\nThe driver incorrectly frees client instance and subsequent\ni40e module removal leads to kernel crash.\n\nReproducer:\n1. Do ethtool offline test followed immediately by another one\nhost# ethtool -t eth0 offline; ethtool -t eth0 offline\n2. Remove recursively irdma module that also removes i40e module\nhost# modprobe -r irdma\n\nResult:\n[ 8675.035651] i40e 0000:3d:00.0 eno1: offline testing starting\n[ 8675.193774] i40e 0000:3d:00.0 eno1: testing finished\n[ 8675.201316] i40e 0000:3d:00.0 eno1: offline testing starting\n[ 8675.358921] i40e 0000:3d:00.0 eno1: testing finished\n[ 8675.496921] i40e 0000:3d:00.0: IRDMA hardware initialization FAILED init_state=2 status=-110\n[ 8686.188955] i40e 0000:3d:00.1: i40e_ptp_stop: removed PHC on eno2\n[ 8686.943890] i40e 0000:3d:00.1: Deleted LAN device PF1 bus=0x3d dev=0x00 func=0x01\n[ 8686.952669] i40e 0000:3d:00.0: i40e_ptp_stop: removed PHC on eno1\n[ 8687.761787] BUG: kernel NULL pointer dereference, address: 0000000000000030\n[ 8687.768755] #PF: supervisor read access in kernel mode\n[ 8687.773895] #PF: error_code(0x0000) - not-present page\n[ 8687.779034] PGD 0 P4D 0\n[ 8687.781575] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[ 8687.785935] CPU: 51 PID: 172891 Comm: rmmod Kdump: loaded Tainted: G        W I        5.19.0+ #2\n[ 8687.794800] Hardware name: Intel Corporation S2600WFD/S2600WFD, BIOS SE5C620.86B.0X.02.0001.051420190324 05/14/2019\n[ 8687.805222] RIP: 0010:i40e_lan_del_device+0x13/0xb0 [i40e]\n[ 8687.810719] Code: d4 84 c0 0f 84 b8 25 01 00 e9 9c 25 01 00 41 bc f4 ff ff ff eb 91 90 0f 1f 44 00 00 41 54 55 53 48 8b 87 58 08 00 00 48 89 fb \u003c48\u003e 8b 68 30 48 89 ef e8 21 8a 0f d5 48 89 ef e8 a9 78 0f d5 48 8b\n[ 8687.829462] RSP: 0018:ffffa604072efce0 EFLAGS: 00010202\n[ 8687.834689] RAX: 0000000000000000 RBX: ffff8f43833b2000 RCX: 0000000000000000\n[ 8687.841821] RDX: 0000000000000000 RSI: ffff8f4b0545b298 RDI: ffff8f43833b2000\n[ 8687.848955] RBP: ffff8f43833b2000 R08: 0000000000000001 R09: 0000000000000000\n[ 8687.856086] R10: 0000000000000000 R11: 000ffffffffff000 R12: ffff8f43833b2ef0\n[ 8687.863218] R13: ffff8f43833b2ef0 R14: ffff915103966000 R15: ffff8f43833b2008\n[ 8687.870342] FS:  00007f79501c3740(0000) GS:ffff8f4adffc0000(0000) knlGS:0000000000000000\n[ 8687.878427] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 8687.884174] CR2: 0000000000000030 CR3: 000000014276e004 CR4: 00000000007706e0\n[ 8687.891306] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 8687.898441] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 8687.905572] PKRU: 55555554\n[ 8687.908286] Call Trace:\n[ 8687.910737]  \u003cTASK\u003e\n[ 8687.912843]  i40e_remove+0x2c0/0x330 [i40e]\n[ 8687.917040]  pci_device_remove+0x33/0xa0\n[ 8687.920962]  device_release_driver_internal+0x1aa/0x230\n[ 8687.926188]  driver_detach+0x44/0x90\n[ 8687.929770]  bus_remove_driver+0x55/0xe0\n[ 8687.933693]  pci_unregister_driver+0x2a/0xb0\n[ 8687.937967]  i40e_exit_module+0xc/0xf48 [i40e]\n\nTwo offline tests cause IRDMA driver failure (ETIMEDOUT) and this\nfailure is indicated back to i40e_client_subtask() that calls\ni40e_client_del_instance() to free client instance referenced\nby pf-\u003ecinst and sets this pointer to NULL. During the module\nremoval i40e_remove() calls i40e_lan_del_device() that dereferences\npf-\u003ecinst that is NULL -\u003e crash.\nDo not remove client instance when client open callbacks fails and\njust clear __I40E_CLIENT_INSTANCE_OPENED bit. The driver also needs\nto take care about this situation (when netdev is up and client\nis NOT opened) in i40e_notify_client_of_netdev_close() and\ncalls client close callback only when __I40E_CLIENT_INSTANCE_OPENED\nis set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48695",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Fix use-after-free warning\n\nFix the following use-after-free warning which is observed during\ncontroller reset:\n\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 23 PID: 5399 at lib/refcount.c:28 refcount_warn_saturate+0xa6/0xf0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48701",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix an out-of-bounds bug in __snd_usb_parse_audio_interface()\n\nThere may be a bad USB audio device with a USB ID of (0x04fa, 0x4201) and\nthe number of it's interfaces less than 4, an out-of-bounds read bug occurs\nwhen parsing the interface descriptor for this device.\n\nFix this by checking the number of interfaces.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-0160",
      "Description": "A deadlock flaw was found in the Linux kernel's BPF subsystem. This flaw allows a local user to potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-27043",
      "Description": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-xml-2.7.18-33.35.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-2860",
      "Description": "An out-of-bounds read vulnerability was found in the SR-IPv6 implementation in the Linux kernel. The flaw exists within the processing of seg6 attributes. The issue results from the improper validation of user-supplied data, which can result in a read past the end of an allocated buffer. This flaw allows a privileged local user to disclose sensitive information on affected installations of the Linux kernel.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-28746",
      "Description": "Information exposure through microarchitectural state after transient execution from some register files for some Intel(R) Atom(R) Processors may allow an authenticated user to potentially enable information disclosure via local access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-35827",
      "Description": "An issue was discovered in the Linux kernel through 6.3.8. A use-after-free was found in ravb_remove in drivers/net/ethernet/renesas/ravb_main.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38469",
      "Description": "A vulnerability was found in Avahi, where a reachable assertion exists in avahi_dns_packet_append_record.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-client3-0.6.32-32.27.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-common3-0.6.32-32.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38470",
      "Description": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_escape_label() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-client3-0.6.32-32.27.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-common3-0.6.32-32.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38471",
      "Description": "A vulnerability was found in Avahi. A reachable assertion exists in the dbus_set_host_name function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-client3-0.6.32-32.27.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-common3-0.6.32-32.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38472",
      "Description": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_rdata_parse() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-client3-0.6.32-32.27.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libavahi-common3-0.6.32-32.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40546",
      "Description": "A flaw was found in Shim when an error happened while creating a new ESL variable. If Shim fails to create the new variable, it tries to print an error message to the user; however, the number of parameters used by the logging function doesn't match the format string used by it, leading to a crash under certain circumstances.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40547",
      "Description": "A remote code execution vulnerability was found in Shim. The Shim boot support trusts attacker-controlled values when parsing an HTTP response. This flaw allows an attacker to craft a specific malicious HTTP request, leading to a completely controlled out-of-bounds write primitive and complete system compromise. This flaw is only exploitable during the early boot phase, an attacker needs to perform a Man-in-the-Middle or compromise the boot server to be able to exploit this vulnerability successfully.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40548",
      "Description": "A buffer overflow was found in Shim in the 32-bit system. The overflow happens due to an addition operation involving a user-controlled value parsed from the PE binary being used by Shim. This value is further used for memory allocation operations, leading to a heap-based buffer overflow. This flaw causes memory corruption and can lead to a crash or data integrity issues during the boot phase.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40550",
      "Description": "An out-of-bounds read flaw was found in Shim when it tried to validate the SBAT information. This issue may expose sensitive data during the system's boot phase.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4244",
      "Description": "A use-after-free vulnerability in the Linux kernel's netfilter: nf_tables component can be exploited to achieve local privilege escalation.\n\nDue to a race condition between nf_tables netlink control plane transaction and nft_set element garbage collection, it is possible to underflow the reference counter causing a use-after-free vulnerability.\n\nWe recommend upgrading past commit 3e91b0ebd994635df2346353322ac51ce84ce6d8.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-42445",
      "Description": "Gradle is a build tool with a focus on build automation and support for multi-language development. In some cases, when Gradle parses XML files, resolving XML external entities is not disabled. Combined with an Out Of Band XXE attack (OOB-XXE), just parsing XML can lead to exfiltration of local text files to a remote server. Gradle parses XML files for several purposes. Most of the time, Gradle parses XML files it generated or were already present locally. Only Ivy XML descriptors and Maven POM files can be fetched from remote repositories and parsed by Gradle. In Gradle 7.6.3 and 8.4, resolving XML external entities has been disabled for all use cases to protect against this vulnerability. Gradle will now refuse to parse XML files that have XML external entities.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-42465",
      "Description": "Sudo before 1.9.15 might allow row hammer attacks (for authentication bypass or privilege escalation) because application logic sometimes is based on not equaling an error value (instead of equaling a success value), and because the values do not resist flips of a single bit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:sudo-1.8.27-4.48.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4408",
      "Description": "The DNS message parsing code in `named` includes a section whose computational complexity is overly high. It does not cause problems for typical DNS traffic, but crafted queries and responses may cause excessive CPU load on the affected `named` instance by exploiting this flaw. This issue affects both authoritative servers and recursive resolvers.\nThis issue affects BIND 9 versions 9.0.0 through 9.16.45, 9.18.0 through 9.18.21, 9.19.0 through 9.19.19, 9.9.3-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.45-S1, and 9.18.11-S1 through 9.18.21-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:bind-utils-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libbind9-161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libdns1110-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libirs161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisc1107-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisccc161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisccfg163-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:liblwres161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-bind-9.11.22-3.52.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-45918",
      "Description": "** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: none. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a security issue. Notes: none.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libncurses5-5.9-88.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libncurses6-5.9-88.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:ncurses-utils-5.9-88.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:terminfo-5.9-88.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:terminfo-base-5.9-88.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-46343",
      "Description": "In the Linux kernel before 6.5.9, there is a NULL pointer dereference in send_acknowledge in net/nfc/nci/spi.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4881",
      "Description": "** REJECT ** CVE-2023-4881 was wrongly assigned to a bug that was deemed to be a non-security issue by the Linux kernel security team.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-50387",
      "Description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:bind-utils-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libbind9-161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libdns1110-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libirs161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisc1107-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisccc161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisccfg163-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:liblwres161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-bind-9.11.22-3.52.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-50868",
      "Description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:bind-utils-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libbind9-161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libdns1110-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libirs161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisc1107-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisccc161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libisccfg163-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:liblwres161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-bind-9.11.22-3.52.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52340",
      "Description": "The IPv6 implementation in the Linux kernel before 6.3 has a net/ipv6/route.c max_size threshold that can be consumed easily, e.g., leading to a denial of service (network is unreachable errors) when IPv6 packets are sent in a loop via a raw socket.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52425",
      "Description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libpython3_4m1_0-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-xml-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python3-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python3-base-3.4.10-25.130.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52429",
      "Description": "dm_table_create in drivers/md/dm-table.c in the Linux kernel through 6.7.4 can attempt to (in alloc_targets) allocate more than INT_MAX bytes, and crash, because of a missing check for struct dm_ioctl.target_count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52443",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: avoid crash when parsed profile name is empty\n\nWhen processing a packed profile in unpack_profile() described like\n\n \"profile :ns::samba-dcerpcd /usr/lib*/samba/{,samba/}samba-dcerpcd {...}\"\n\na string \":samba-dcerpcd\" is unpacked as a fully-qualified name and then\npassed to aa_splitn_fqname().\n\naa_splitn_fqname() treats \":samba-dcerpcd\" as only containing a namespace.\nThus it returns NULL for tmpname, meanwhile tmpns is non-NULL. Later\naa_alloc_profile() crashes as the new profile name is NULL now.\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 6 PID: 1657 Comm: apparmor_parser Not tainted 6.7.0-rc2-dirty #16\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\nRIP: 0010:strlen+0x1e/0xa0\nCall Trace:\n \u003cTASK\u003e\n ? strlen+0x1e/0xa0\n aa_policy_init+0x1bb/0x230\n aa_alloc_profile+0xb1/0x480\n unpack_profile+0x3bc/0x4960\n aa_unpack+0x309/0x15e0\n aa_replace_profiles+0x213/0x33c0\n policy_update+0x261/0x370\n profile_replace+0x20e/0x2a0\n vfs_write+0x2af/0xe00\n ksys_write+0x126/0x250\n do_syscall_64+0x46/0xf0\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\n \u003c/TASK\u003e\n---[ end trace 0000000000000000 ]---\nRIP: 0010:strlen+0x1e/0xa0\n\nIt seems such behaviour of aa_splitn_fqname() is expected and checked in\nother places where it is called (e.g. aa_remove_profiles). Well, there\nis an explicit comment \"a ns name without a following profile is allowed\"\ninside.\n\nAFAICS, nothing can prevent unpacked \"name\" to be in form like\n\":samba-dcerpcd\" - it is passed from userspace.\n\nDeny the whole profile set replacement in such case and inform user with\nEPROTO and an explaining message.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52445",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: pvrusb2: fix use after free on context disconnection\n\nUpon module load, a kthread is created targeting the\npvr2_context_thread_func function, which may call pvr2_context_destroy\nand thus call kfree() on the context object. However, that might happen\nbefore the usb hub_event handler is able to notify the driver. This\npatch adds a sanity check before the invalid read reported by syzbot,\nwithin the context disconnection call stack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52449",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: Fix gluebi NULL pointer dereference caused by ftl notifier\n\nIf both ftl.ko and gluebi.ko are loaded, the notifier of ftl\ntriggers NULL pointer dereference when trying to access\n'gluebi-\u003edesc' in gluebi_read().\n\nubi_gluebi_init\n  ubi_register_volume_notifier\n    ubi_enumerate_volumes\n      ubi_notify_all\n        gluebi_notify    nb-\u003enotifier_call()\n          gluebi_create\n            mtd_device_register\n              mtd_device_parse_register\n                add_mtd_device\n                  blktrans_notify_add   not-\u003eadd()\n                    ftl_add_mtd         tr-\u003eadd_mtd()\n                      scan_header\n                        mtd_read\n                          mtd_read_oob\n                            mtd_read_oob_std\n                              gluebi_read   mtd-\u003eread()\n                                gluebi-\u003edesc - NULL\n\nDetailed reproduction information available at the Link [1],\n\nIn the normal case, obtain gluebi-\u003edesc in the gluebi_get_device(),\nand access gluebi-\u003edesc in the gluebi_read(). However,\ngluebi_get_device() is not executed in advance in the\nftl_add_mtd() process, which leads to NULL pointer dereference.\n\nThe solution for the gluebi module is to run jffs2 on the UBI\nvolume without considering working with ftl or mtdblock [2].\nTherefore, this problem can be avoided by preventing gluebi from\ncreating the mtdblock device after creating mtd partition of the\ntype MTD_UBIVOLUME.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52451",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/memhp: Fix access beyond end of drmem array\n\ndlpar_memory_remove_by_index() may access beyond the bounds of the\ndrmem lmb array when the LMB lookup fails to match an entry with the\ngiven DRC index. When the search fails, the cursor is left pointing to\n\u0026drmem_info-\u003elmbs[drmem_info-\u003en_lmbs], which is one element past the\nlast valid entry in the array. The debug message at the end of the\nfunction then dereferences this pointer:\n\n        pr_debug(\"Failed to hot-remove memory at %llx\\n\",\n                 lmb-\u003ebase_addr);\n\nThis was found by inspection and confirmed with KASAN:\n\n  pseries-hotplug-mem: Attempting to hot-remove LMB, drc index 1234\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in dlpar_memory+0x298/0x1658\n  Read of size 8 at addr c000000364e97fd0 by task bash/949\n\n  dump_stack_lvl+0xa4/0xfc (unreliable)\n  print_report+0x214/0x63c\n  kasan_report+0x140/0x2e0\n  __asan_load8+0xa8/0xe0\n  dlpar_memory+0x298/0x1658\n  handle_dlpar_errorlog+0x130/0x1d0\n  dlpar_store+0x18c/0x3e0\n  kobj_attr_store+0x68/0xa0\n  sysfs_kf_write+0xc4/0x110\n  kernfs_fop_write_iter+0x26c/0x390\n  vfs_write+0x2d4/0x4e0\n  ksys_write+0xac/0x1a0\n  system_call_exception+0x268/0x530\n  system_call_vectored_common+0x15c/0x2ec\n\n  Allocated by task 1:\n   kasan_save_stack+0x48/0x80\n   kasan_set_track+0x34/0x50\n   kasan_save_alloc_info+0x34/0x50\n   __kasan_kmalloc+0xd0/0x120\n   __kmalloc+0x8c/0x320\n   kmalloc_array.constprop.0+0x48/0x5c\n   drmem_init+0x2a0/0x41c\n   do_one_initcall+0xe0/0x5c0\n   kernel_init_freeable+0x4ec/0x5a0\n   kernel_init+0x30/0x1e0\n   ret_from_kernel_user_thread+0x14/0x1c\n\n  The buggy address belongs to the object at c000000364e80000\n   which belongs to the cache kmalloc-128k of size 131072\n  The buggy address is located 0 bytes to the right of\n   allocated 98256-byte region [c000000364e80000, c000000364e97fd0)\n\n  ==================================================================\n  pseries-hotplug-mem: Failed to hot-remove memory at 0\n\nLog failed lookups with a separate message and dereference the\ncursor only when it points to a valid entry.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52464",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nEDAC/thunderx: Fix possible out-of-bounds string access\n\nEnabling -Wstringop-overflow globally exposes a warning for a common bug\nin the usage of strncat():\n\n  drivers/edac/thunderx_edac.c: In function 'thunderx_ocx_com_threaded_isr':\n  drivers/edac/thunderx_edac.c:1136:17: error: 'strncat' specified bound 1024 equals destination size [-Werror=stringop-overflow=]\n   1136 |                 strncat(msg, other, OCX_MESSAGE_SIZE);\n        |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ...\n   1145 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);\n   ...\n   1150 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);\n\n   ...\n\nApparently the author of this driver expected strncat() to behave the\nway that strlcat() does, which uses the size of the destination buffer\nas its third argument rather than the length of the source buffer. The\nresult is that there is no check on the size of the allocated buffer.\n\nChange it to strlcat().\n\n  [ bp: Trim compiler output, fixup commit message. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52469",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/amd/pm: fix a use-after-free in kv_parse_power_table\n\nWhen ps allocated by kzalloc equals to NULL, kv_parse_power_table\nfrees adev-\u003epm.dpm.ps that allocated before. However, after the control\nflow goes through the following call chains:\n\nkv_parse_power_table\n  |-\u003e kv_dpm_init\n        |-\u003e kv_dpm_sw_init\n\t      |-\u003e kv_dpm_fini\n\nThe adev-\u003epm.dpm.ps is used in the for loop of kv_dpm_fini after its\nfirst free in kv_parse_power_table and causes a use-after-free bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52470",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: check the alloc_workqueue return value in radeon_crtc_init()\n\ncheck the alloc_workqueue return value in radeon_crtc_init()\nto avoid null-ptr-deref.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52474",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests\n\nhfi1 user SDMA request processing has two bugs that can cause data\ncorruption for user SDMA requests that have multiple payload iovecs\nwhere an iovec other than the tail iovec does not run up to the page\nboundary for the buffer pointed to by that iovec.a\n\nHere are the specific bugs:\n1. user_sdma_txadd() does not use struct user_sdma_iovec-\u003eiov.iov_len.\n   Rather, user_sdma_txadd() will add up to PAGE_SIZE bytes from iovec\n   to the packet, even if some of those bytes are past\n   iovec-\u003eiov.iov_len and are thus not intended to be in the packet.\n2. user_sdma_txadd() and user_sdma_send_pkts() fail to advance to the\n   next iovec in user_sdma_request-\u003eiovs when the current iovec\n   is not PAGE_SIZE and does not contain enough data to complete the\n   packet. The transmitted packet will contain the wrong data from the\n   iovec pages.\n\nThis has not been an issue with SDMA packets from hfi1 Verbs or PSM2\nbecause they only produce iovecs that end short of PAGE_SIZE as the tail\niovec of an SDMA request.\n\nFixing these bugs exposes other bugs with the SDMA pin cache\n(struct mmu_rb_handler) that get in way of supporting user SDMA requests\nwith multiple payload iovecs whose buffers do not end at PAGE_SIZE. So\nthis commit fixes those issues as well.\n\nHere are the mmu_rb_handler bugs that non-PAGE_SIZE-end multi-iovec\npayload user SDMA requests can hit:\n1. Overlapping memory ranges in mmu_rb_handler will result in duplicate\n   pinnings.\n2. When extending an existing mmu_rb_handler entry (struct mmu_rb_node),\n   the mmu_rb code (1) removes the existing entry under a lock, (2)\n   releases that lock, pins the new pages, (3) then reacquires the lock\n   to insert the extended mmu_rb_node.\n\n   If someone else comes in and inserts an overlapping entry between (2)\n   and (3), insert in (3) will fail.\n\n   The failure path code in this case unpins _all_ pages in either the\n   original mmu_rb_node or the new mmu_rb_node that was inserted between\n   (2) and (3).\n3. In hfi1_mmu_rb_remove_unless_exact(), mmu_rb_node-\u003erefcount is\n   incremented outside of mmu_rb_handler-\u003elock. As a result, mmu_rb_node\n   could be evicted by another thread that gets mmu_rb_handler-\u003elock and\n   checks mmu_rb_node-\u003erefcount before mmu_rb_node-\u003erefcount is\n   incremented.\n4. Related to #2 above, SDMA request submission failure path does not\n   check mmu_rb_node-\u003erefcount before freeing mmu_rb_node object.\n\n   If there are other SDMA requests in progress whose iovecs have\n   pointers to the now-freed mmu_rb_node(s), those pointers to the\n   now-freed mmu_rb nodes will be dereferenced when those SDMA requests\n   complete.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52475",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: powermate - fix use-after-free in powermate_config_complete\n\nsyzbot has found a use-after-free bug [1] in the powermate driver. This\nhappens when the device is disconnected, which leads to a memory free from\nthe powermate_device struct.  When an asynchronous control message\ncompletes after the kfree and its callback is invoked, the lock does not\nexist anymore and hence the bug.\n\nUse usb_kill_urb() on pm-\u003econfig to cancel any in-progress requests upon\ndevice disconnection.\n\n[1] https://syzkaller.appspot.com/bug?extid=0434ac83f907a1dbdd1e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52476",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/lbr: Filter vsyscall addresses\n\nWe found that a panic can occur when a vsyscall is made while LBR sampling\nis active. If the vsyscall is interrupted (NMI) for perf sampling, this\ncall sequence can occur (most recent at top):\n\n    __insn_get_emulate_prefix()\n    insn_get_emulate_prefix()\n    insn_get_prefixes()\n    insn_get_opcode()\n    decode_branch_type()\n    get_branch_type()\n    intel_pmu_lbr_filter()\n    intel_pmu_handle_irq()\n    perf_event_nmi_handler()\n\nWithin __insn_get_emulate_prefix() at frame 0, a macro is called:\n\n    peek_nbyte_next(insn_byte_t, insn, i)\n\nWithin this macro, this dereference occurs:\n\n    (insn)-\u003enext_byte\n\nInspecting registers at this point, the value of the next_byte field is the\naddress of the vsyscall made, for example the location of the vsyscall\nversion of gettimeofday() at 0xffffffffff600000. The access to an address\nin the vsyscall region will trigger an oops due to an unhandled page fault.\n\nTo fix the bug, filtering for vsyscalls can be done when\ndetermining the branch type. This patch will return\na \"none\" branch if a kernel address if found to lie in the\nvsyscall region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52477",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: hub: Guard against accesses to uninitialized BOS descriptors\n\nMany functions in drivers/usb/core/hub.c and drivers/usb/core/hub.h\naccess fields inside udev-\u003ebos without checking if it was allocated and\ninitialized. If usb_get_bos_descriptor() fails for whatever\nreason, udev-\u003ebos will be NULL and those accesses will result in a\ncrash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000018\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 5 PID: 17818 Comm: kworker/5:1 Tainted: G W 5.15.108-18910-gab0e1cb584e1 #1 \u003cHASH:1f9e 1\u003e\nHardware name: Google Kindred/Kindred, BIOS Google_Kindred.12672.413.0 02/03/2021\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:hub_port_reset+0x193/0x788\nCode: 89 f7 e8 20 f7 15 00 48 8b 43 08 80 b8 96 03 00 00 03 75 36 0f b7 88 92 03 00 00 81 f9 10 03 00 00 72 27 48 8b 80 a8 03 00 00 \u003c48\u003e 83 78 18 00 74 19 48 89 df 48 8b 75 b0 ba 02 00 00 00 4c 89 e9\nRSP: 0018:ffffab740c53fcf8 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffffa1bc5f678000 RCX: 0000000000000310\nRDX: fffffffffffffdff RSI: 0000000000000286 RDI: ffffa1be9655b840\nRBP: ffffab740c53fd70 R08: 00001b7d5edaa20c R09: ffffffffb005e060\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: ffffab740c53fd3e R14: 0000000000000032 R15: 0000000000000000\nFS: 0000000000000000(0000) GS:ffffa1be96540000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000018 CR3: 000000022e80c005 CR4: 00000000003706e0\nCall Trace:\nhub_event+0x73f/0x156e\n? hub_activate+0x5b7/0x68f\nprocess_one_work+0x1a2/0x487\nworker_thread+0x11a/0x288\nkthread+0x13a/0x152\n? process_one_work+0x487/0x487\n? kthread_associate_blkcg+0x70/0x70\nret_from_fork+0x1f/0x30\n\nFall back to a default behavior if the BOS descriptor isn't accessible\nand skip all the functionalities that depend on it: LPM support checks,\nSuper Speed capabilitiy checks, U1/U2 states setup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52478",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: logitech-hidpp: Fix kernel crash on receiver USB disconnect\n\nhidpp_connect_event() has *four* time-of-check vs time-of-use (TOCTOU)\nraces when it races with itself.\n\nhidpp_connect_event() primarily runs from a workqueue but it also runs\non probe() and if a \"device-connected\" packet is received by the hw\nwhen the thread running hidpp_connect_event() from probe() is waiting on\nthe hw, then a second thread running hidpp_connect_event() will be\nstarted from the workqueue.\n\nThis opens the following races (note the below code is simplified):\n\n1. Retrieving + printing the protocol (harmless race):\n\n\tif (!hidpp-\u003eprotocol_major) {\n\t\thidpp_root_get_protocol_version()\n\t\thidpp-\u003eprotocol_major = response.rap.params[0];\n\t}\n\nWe can actually see this race hit in the dmesg in the abrt output\nattached to rhbz#2227968:\n\n[ 3064.624215] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.\n[ 3064.658184] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.\n\nTesting with extra logging added has shown that after this the 2 threads\ntake turn grabbing the hw access mutex (send_mutex) so they ping-pong\nthrough all the other TOCTOU cases managing to hit all of them:\n\n2. Updating the name to the HIDPP name (harmless race):\n\n\tif (hidpp-\u003ename == hdev-\u003ename) {\n\t\t...\n\t\thidpp-\u003ename = new_name;\n\t}\n\n3. Initializing the power_supply class for the battery (problematic!):\n\nhidpp_initialize_battery()\n{\n        if (hidpp-\u003ebattery.ps)\n                return 0;\n\n\tprobe_battery(); /* Blocks, threads take turns executing this */\n\n\thidpp-\u003ebattery.desc.properties =\n\t\tdevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\n\n\thidpp-\u003ebattery.ps =\n\t\tdevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\t\t\t\t\t   \u0026hidpp-\u003ebattery.desc, cfg);\n}\n\n4. Creating delayed input_device (potentially problematic):\n\n\tif (hidpp-\u003edelayed_input)\n\t\treturn;\n\n\thidpp-\u003edelayed_input = hidpp_allocate_input(hdev);\n\nThe really big problem here is 3. Hitting the race leads to the following\nsequence:\n\n\thidpp-\u003ebattery.desc.properties =\n\t\tdevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\n\n\thidpp-\u003ebattery.ps =\n\t\tdevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\t\t\t\t\t   \u0026hidpp-\u003ebattery.desc, cfg);\n\n\t...\n\n\thidpp-\u003ebattery.desc.properties =\n\t\tdevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\n\n\thidpp-\u003ebattery.ps =\n\t\tdevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\t\t\t\t\t   \u0026hidpp-\u003ebattery.desc, cfg);\n\nSo now we have registered 2 power supplies for the same battery,\nwhich looks a bit weird from userspace's pov but this is not even\nthe really big problem.\n\nNotice how:\n\n1. This is all devm-maganaged\n2. The hidpp-\u003ebattery.desc struct is shared between the 2 power supplies\n3. hidpp-\u003ebattery.desc.properties points to the result from the second\n   devm_kmemdup()\n\nThis causes a use after free scenario on USB disconnect of the receiver:\n1. The last registered power supply class device gets unregistered\n2. The memory from the last devm_kmemdup() call gets freed,\n   hidpp-\u003ebattery.desc.properties now points to freed memory\n3. The first registered power supply class device gets unregistered,\n   this involves sending a remove uevent to userspace which invokes\n   power_supply_uevent() to fill the uevent data\n4. power_supply_uevent() uses hidpp-\u003ebattery.desc.properties which\n   now points to freed memory leading to backtraces like this one:\n\nSep 22 20:01:35 eric kernel: BUG: unable to handle page fault for address: ffffb2140e017f08\n...\nSep 22 20:01:35 eric kernel: Workqueue: usb_hub_wq hub_event\nSep 22 20:01:35 eric kernel: RIP: 0010:power_supply_uevent+0xee/0x1d0\n...\nSep 22 20:01:35 eric kernel:  ? asm_exc_page_fault+0x26/0x30\nSep 22 20:01:35 eric kernel:  ? power_supply_uevent+0xee/0x1d0\nSep 22 20:01:35 eric kernel:  ? power_supply_uevent+0x10d/0x1d0\nSep 22 20:01:35 eric kernel:  dev_uevent+0x10f/0x2d0\nSep 22 20:01:35 eric kernel:  kobject_uevent_env+0x291/0x680\nSep 22 20:01:35 eric kernel:  \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52482",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/srso: Add SRSO mitigation for Hygon processors\n\nAdd mitigation for the speculative return stack overflow vulnerability\nwhich exists on Hygon processors too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52486",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Don't unref the same fb many times by mistake due to deadlock handling\n\nIf we get a deadlock after the fb lookup in drm_mode_page_flip_ioctl()\nwe proceed to unref the fb and then retry the whole thing from the top.\nBut we forget to reset the fb pointer back to NULL, and so if we then\nget another error during the retry, before the fb lookup, we proceed\nthe unref the same fb again without having gotten another reference.\nThe end result is that the fb will (eventually) end up being freed\nwhile it's still in use.\n\nReset fb to NULL once we've unreffed it to avoid doing it again\nuntil we've done another fb lookup.\n\nThis turned out to be pretty easy to hit on a DG2 when doing async\nflips (and CONFIG_DEBUG_WW_MUTEX_SLOWPATH=y). The first symptom I\nsaw that drm_closefb() simply got stuck in a busy loop while walking\nthe framebuffer list. Fortunately I was able to convince it to oops\ninstead, and from there it was easier to track down the culprit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52488",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO\n\nThe SC16IS7XX IC supports a burst mode to access the FIFOs where the\ninitial register address is sent ($00), followed by all the FIFO data\nwithout having to resend the register address each time. In this mode, the\nIC doesn't increment the register address for each R/W byte.\n\nThe regmap_raw_read() and regmap_raw_write() are functions which can\nperform IO over multiple registers. They are currently used to read/write\nfrom/to the FIFO, and although they operate correctly in this burst mode on\nthe SPI bus, they would corrupt the regmap cache if it was not disabled\nmanually. The reason is that when the R/W size is more than 1 byte, these\nfunctions assume that the register address is incremented and handle the\ncache accordingly.\n\nConvert FIFO R/W functions to use the regmap _noinc_ versions in order to\nremove the manual cache control which was a workaround when using the\n_raw_ versions. FIFO registers are properly declared as volatile so\ncache will not be used/updated for FIFO accesses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52502",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: fix races in nfc_llcp_sock_get() and nfc_llcp_sock_get_sn()\n\nSili Luo reported a race in nfc_llcp_sock_get(), leading to UAF.\n\nGetting a reference on the socket found in a lookup while\nholding a lock should happen before releasing the lock.\n\nnfc_llcp_sock_get_sn() has a similar problem.\n\nFinally nfc_llcp_recv_snl() needs to make sure the socket\nfound by nfc_llcp_sock_from_sn() does not disappear.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52515",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srp: Do not call scsi_done() from srp_abort()\n\nAfter scmd_eh_abort_handler() has called the SCSI LLD eh_abort_handler\ncallback, it performs one of the following actions:\n* Call scsi_queue_insert().\n* Call scsi_finish_command().\n* Call scsi_eh_scmd_add().\nHence, SCSI abort handlers must not call scsi_done(). Otherwise all\nthe above actions would trigger a use-after-free. Hence remove the\nscsi_done() call from srp_abort(). Keep the srp_free_req() call\nbefore returning SUCCESS because we may not see the command again if\nSUCCESS is returned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52524",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: llcp: Add lock when modifying device list\n\nThe device list needs its associated lock held when modifying it, or the\nlist could become corrupted, as syzbot discovered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52528",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Fix uninit-value access in __smsc75xx_read_reg\n\nsyzbot reported the following uninit-value access issue:\n\n=====================================================\nBUG: KMSAN: uninit-value in smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:975 [inline]\nBUG: KMSAN: uninit-value in smsc75xx_bind+0x5c9/0x11e0 drivers/net/usb/smsc75xx.c:1482\nCPU: 0 PID: 8696 Comm: kworker/0:3 Not tainted 5.8.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: usb_hub_wq hub_event\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x21c/0x280 lib/dump_stack.c:118\n kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:121\n __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:215\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:975 [inline]\n smsc75xx_bind+0x5c9/0x11e0 drivers/net/usb/smsc75xx.c:1482\n usbnet_probe+0x1152/0x3f90 drivers/net/usb/usbnet.c:1737\n usb_probe_interface+0xece/0x1550 drivers/usb/core/driver.c:374\n really_probe+0xf20/0x20b0 drivers/base/dd.c:529\n driver_probe_device+0x293/0x390 drivers/base/dd.c:701\n __device_attach_driver+0x63f/0x830 drivers/base/dd.c:807\n bus_for_each_drv+0x2ca/0x3f0 drivers/base/bus.c:431\n __device_attach+0x4e2/0x7f0 drivers/base/dd.c:873\n device_initial_probe+0x4a/0x60 drivers/base/dd.c:920\n bus_probe_device+0x177/0x3d0 drivers/base/bus.c:491\n device_add+0x3b0e/0x40d0 drivers/base/core.c:2680\n usb_set_configuration+0x380f/0x3f10 drivers/usb/core/message.c:2032\n usb_generic_driver_probe+0x138/0x300 drivers/usb/core/generic.c:241\n usb_probe_device+0x311/0x490 drivers/usb/core/driver.c:272\n really_probe+0xf20/0x20b0 drivers/base/dd.c:529\n driver_probe_device+0x293/0x390 drivers/base/dd.c:701\n __device_attach_driver+0x63f/0x830 drivers/base/dd.c:807\n bus_for_each_drv+0x2ca/0x3f0 drivers/base/bus.c:431\n __device_attach+0x4e2/0x7f0 drivers/base/dd.c:873\n device_initial_probe+0x4a/0x60 drivers/base/dd.c:920\n bus_probe_device+0x177/0x3d0 drivers/base/bus.c:491\n device_add+0x3b0e/0x40d0 drivers/base/core.c:2680\n usb_new_device+0x1bd4/0x2a30 drivers/usb/core/hub.c:2554\n hub_port_connect drivers/usb/core/hub.c:5208 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5348 [inline]\n port_event drivers/usb/core/hub.c:5494 [inline]\n hub_event+0x5e7b/0x8a70 drivers/usb/core/hub.c:5576\n process_one_work+0x1688/0x2140 kernel/workqueue.c:2269\n worker_thread+0x10bc/0x2730 kernel/workqueue.c:2415\n kthread+0x551/0x590 kernel/kthread.c:292\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:293\n\nLocal variable ----buf.i87@smsc75xx_bind created at:\n __smsc75xx_read_reg drivers/net/usb/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485/0x11e0 drivers/net/usb/smsc75xx.c:1482\n __smsc75xx_read_reg drivers/net/usb/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485/0x11e0 drivers/net/usb/smsc75xx.c:1482\n\nThis issue is caused because usbnet_read_cmd() reads less bytes than requested\n(zero byte in the reproducer). In this case, 'buf' is not properly filled.\n\nThis patch fixes the issue by returning -ENODATA if usbnet_read_cmd() reads\nless bytes than requested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52530",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix potential key use-after-free\n\nWhen ieee80211_key_link() is called by ieee80211_gtk_rekey_add()\nbut returns 0 due to KRACK protection (identical key reinstall),\nieee80211_gtk_rekey_add() will still return a pointer into the\nkey, in a potential use-after-free. This normally doesn't happen\nsince it's only called by iwlwifi in case of WoWLAN rekey offload\nwhich has its own KRACK protection, but still better to fix, do\nthat by returning an error code and converting that to success on\nthe cfg80211 boundary only, leaving the error for bad callers of\nieee80211_gtk_rekey_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52531",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm-\u003envm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm-\u003envm_data-\u003ebands[0].channels = mvm-\u003envm_data-\u003echannels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm-\u003envm_data-\u003ebands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm-\u003envm_data-\u003echannels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52532",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix TX CQE error handling\n\nFor an unknown TX CQE error type (probably from a newer hardware),\nstill free the SKB, update the queue tail, etc., otherwise the\naccounting will be wrong.\n\nAlso, TX errors can be triggered by injecting corrupted packets, so\nreplace the WARN_ONCE to ratelimited error logging.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52574",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nteam: fix null-ptr-deref when team device type is changed\n\nGet a null-ptr-deref bug as follows with reproducer [1].\n\nBUG: kernel NULL pointer dereference, address: 0000000000000228\n...\nRIP: 0010:vlan_dev_hard_header+0x35/0x140 [8021q]\n...\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x24/0x70\n ? page_fault_oops+0x82/0x150\n ? exc_page_fault+0x69/0x150\n ? asm_exc_page_fault+0x26/0x30\n ? vlan_dev_hard_header+0x35/0x140 [8021q]\n ? vlan_dev_hard_header+0x8e/0x140 [8021q]\n neigh_connected_output+0xb2/0x100\n ip6_finish_output2+0x1cb/0x520\n ? nf_hook_slow+0x43/0xc0\n ? ip6_mtu+0x46/0x80\n ip6_finish_output+0x2a/0xb0\n mld_sendpack+0x18f/0x250\n mld_ifc_work+0x39/0x160\n process_one_work+0x1e6/0x3f0\n worker_thread+0x4d/0x2f0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe5/0x120\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n\n[1]\n$ teamd -t team0 -d -c '{\"runner\": {\"name\": \"loadbalance\"}}'\n$ ip link add name t-dummy type dummy\n$ ip link add link t-dummy name t-dummy.100 type vlan id 100\n$ ip link add name t-nlmon type nlmon\n$ ip link set t-nlmon master team0\n$ ip link set t-nlmon nomaster\n$ ip link set t-dummy up\n$ ip link set team0 up\n$ ip link set t-dummy.100 down\n$ ip link set t-dummy.100 master team0\n\nWhen enslave a vlan device to team device and team device type is changed\nfrom non-ether to ether, header_ops of team device is changed to\nvlan_header_ops. That is incorrect and will trigger null-ptr-deref\nfor vlan-\u003ereal_dev in vlan_dev_hard_header() because team device is not\na vlan device.\n\nCache eth_header_ops in team_setup(), then assign cached header_ops to\nheader_ops of team net device when its type is changed from non-ether\nto ether to fix the bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52575",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52583",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix deadlock or deadcode of misusing dget()\n\nThe lock order is incorrect between denty and its parent, we should\nalways make sure that the parent get the lock first.\n\nBut since this deadcode is never used and the parent dir will always\nbe set from the callers, let's just remove it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52587",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/ipoib: Fix mcast list locking\n\nReleasing the `priv-\u003elock` while iterating the `priv-\u003emulticast_list` in\n`ipoib_mcast_join_task()` opens a window for `ipoib_mcast_dev_flush()` to\nremove the items while in the middle of iteration. If the mcast is removed\nwhile the lock was dropped, the for loop spins forever resulting in a hard\nlockup (as was reported on RHEL 4.18.0-372.75.1.el8_6 kernel):\n\n    Task A (kworker/u72:2 below)       | Task B (kworker/u72:0 below)\n    -----------------------------------+-----------------------------------\n    ipoib_mcast_join_task(work)        | ipoib_ib_dev_flush_light(work)\n      spin_lock_irq(\u0026priv-\u003elock)       | __ipoib_ib_dev_flush(priv, ...)\n      list_for_each_entry(mcast,       | ipoib_mcast_dev_flush(dev = priv-\u003edev)\n          \u0026priv-\u003emulticast_list, list) |\n        ipoib_mcast_join(dev, mcast)   |\n          spin_unlock_irq(\u0026priv-\u003elock) |\n                                       |   spin_lock_irqsave(\u0026priv-\u003elock, flags)\n                                       |   list_for_each_entry_safe(mcast, tmcast,\n                                       |                  \u0026priv-\u003emulticast_list, list)\n                                       |     list_del(\u0026mcast-\u003elist);\n                                       |     list_add_tail(\u0026mcast-\u003elist, \u0026remove_list)\n                                       |   spin_unlock_irqrestore(\u0026priv-\u003elock, flags)\n          spin_lock_irq(\u0026priv-\u003elock)   |\n                                       |   ipoib_mcast_remove_list(\u0026remove_list)\n   (Here, `mcast` is no longer on the  |     list_for_each_entry_safe(mcast, tmcast,\n    `priv-\u003emulticast_list` and we keep |                            remove_list, list)\n    spinning on the `remove_list` of   |  \u003e\u003e\u003e  wait_for_completion(\u0026mcast-\u003edone)\n    the other thread which is blocked  |\n    and the list is still valid on     |\n    it's stack.)\n\nFix this by keeping the lock held and changing to GFP_ATOMIC to prevent\neventual sleeps.\nUnfortunately we could not reproduce the lockup and confirm this fix but\nbased on the code review I think this fix should address such lockups.\n\ncrash\u003e bc 31\nPID: 747      TASK: ff1c6a1a007e8000  CPU: 31   COMMAND: \"kworker/u72:2\"\n--\n    [exception RIP: ipoib_mcast_join_task+0x1b1]\n    RIP: ffffffffc0944ac1  RSP: ff646f199a8c7e00  RFLAGS: 00000002\n    RAX: 0000000000000000  RBX: ff1c6a1a04dc82f8  RCX: 0000000000000000\n                                  work (\u0026priv-\u003emcast_task{,.work})\n    RDX: ff1c6a192d60ac68  RSI: 0000000000000286  RDI: ff1c6a1a04dc8000\n           \u0026mcast-\u003elist\n    RBP: ff646f199a8c7e90   R8: ff1c699980019420   R9: ff1c6a1920c9a000\n    R10: ff646f199a8c7e00  R11: ff1c6a191a7d9800  R12: ff1c6a192d60ac00\n                                                         mcast\n    R13: ff1c6a1d82200000  R14: ff1c6a1a04dc8000  R15: ff1c6a1a04dc82d8\n           dev                    priv (\u0026priv-\u003elock)     \u0026priv-\u003emulticast_list (aka head)\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n--- \u003cNMI exception stack\u003e ---\n #5 [ff646f199a8c7e00] ipoib_mcast_join_task+0x1b1 at ffffffffc0944ac1 [ib_ipoib]\n #6 [ff646f199a8c7e98] process_one_work+0x1a7 at ffffffff9bf10967\n\ncrash\u003e rx ff646f199a8c7e68\nff646f199a8c7e68:  ff1c6a1a04dc82f8 \u003c\u003c\u003c work = \u0026priv-\u003emcast_task.work\n\ncrash\u003e list -hO ipoib_dev_priv.multicast_list ff1c6a1a04dc8000\n(empty)\n\ncrash\u003e ipoib_dev_priv.mcast_task.work.func,mcast_mutex.owner.counter ff1c6a1a04dc8000\n  mcast_task.work.func = 0xffffffffc0944910 \u003cipoib_mcast_join_task\u003e,\n  mcast_mutex.owner.counter = 0xff1c69998efec000\n\ncrash\u003e b 8\nPID: 8        TASK: ff1c69998efec000  CPU: 33   COMMAND: \"kworker/u72:0\"\n--\n #3 [ff646f1980153d50] wait_for_completion+0x96 at ffffffff9c7d7646\n #4 [ff646f1980153d90] ipoib_mcast_remove_list+0x56 at ffffffffc0944dc6 [ib_ipoib]\n #5 [ff646f1980153de8] ipoib_mcast_dev_flush+0x1a7 at ffffffffc09455a7 [ib_ipoib]\n #6 [ff646f1980153e58] __ipoib_ib_dev_flush+0x1a4 at ffffffffc09431a4 [ib_ipoib]\n #7 [ff\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nreiserfs: Avoid touching renamed directory if parent does not change\n\nThe VFS will not be locking moved directory if its parent does not\nchange. Change reiserfs rename code to avoid touching renamed directory\nif its parent does not change as without locking that can corrupt the\nfilesystem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rt2x00: restart beacon queue when hardware reset\n\nWhen a hardware reset is triggered, all registers are reset, so all\nqueues are forced to stop in hardware interface. However, mac80211\nwill not automatically stop the queue. If we don't manually stop the\nbeacon queue, the queue will be deadlocked and unable to start again.\nThis patch fixes the issue where Apple devices cannot connect to the\nAP after calling ieee80211_restart_hw().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52597",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: s390: fix setting of fpc register\n\nkvm_arch_vcpu_ioctl_set_fpu() allows to set the floating point control\n(fpc) register of a guest cpu. The new value is tested for validity by\ntemporarily loading it into the fpc register.\n\nThis may lead to corruption of the fpc register of the host process:\nif an interrupt happens while the value is temporarily loaded into the fpc\nregister, and within interrupt context floating point or vector registers\nare used, the current fp/vx registers are saved with save_fpu_regs()\nassuming they belong to user space and will be loaded into fp/vx registers\nwhen returning to user space.\n\ntest_fp_ctl() restores the original user space / host process fpc register\nvalue, however it will be discarded, when returning to user space.\n\nIn result the host process will incorrectly continue to run with the value\nthat was supposed to be used for a guest cpu.\n\nFix this by simply removing the test. There is another test right before\nthe SIE context is entered which will handles invalid values.\n\nThis results in a change of behaviour: invalid values will now be accepted\ninstead of that the ioctl fails with -EINVAL. This seems to be acceptable,\ngiven that this interface is most likely not used anymore, and this is in\naddition the same behaviour implemented with the memory mapped interface\n(replace invalid values with zero) - see sync_regs() in kvm-s390.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/ptrace: handle setting of fpc register correctly\n\nIf the content of the floating point control (fpc) register of a traced\nprocess is modified with the ptrace interface the new value is tested for\nvalidity by temporarily loading it into the fpc register.\n\nThis may lead to corruption of the fpc register of the tracing process:\nif an interrupt happens while the value is temporarily loaded into the\nfpc register, and within interrupt context floating point or vector\nregisters are used, the current fp/vx registers are saved with\nsave_fpu_regs() assuming they belong to user space and will be loaded into\nfp/vx registers when returning to user space.\n\ntest_fp_ctl() restores the original user space fpc register value, however\nit will be discarded, when returning to user space.\n\nIn result the tracer will incorrectly continue to run with the value that\nwas supposed to be used for the traced process.\n\nFix this by saving fpu register contents with save_fpu_regs() before using\ntest_fp_ctl().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52605",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52607",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/mm: Fix null-pointer dereference in pgtable_cache_add\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52614",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPM / devfreq: Fix buffer overflow in trans_stat_show\n\nFix buffer overflow in trans_stat_show().\n\nConvert simple snprintf to the more secure scnprintf with size of\nPAGE_SIZE.\n\nAdd condition checking if we are exceeding PAGE_SIZE and exit early from\nloop. Also add at the end a warning that we exceeded PAGE_SIZE and that\nstats is disabled.\n\nReturn -EFBIG in the case where we don't have enough space to write the\nfull transition table.\n\nAlso document in the ABI that this function can return -EFBIG error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52620",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: disallow timeout for anonymous sets\n\nNever used from userspace, disallow these parameters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52635",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPM / devfreq: Synchronize devfreq_monitor_[start/stop]\n\nThere is a chance if a frequent switch of the governor\ndone in a loop result in timer list corruption where\ntimer cancel being done from two place one from\ncancel_delayed_work_sync() and followed by expire_timers()\ncan be seen from the traces[1].\n\nwhile true\ndo\n        echo \"simple_ondemand\" \u003e /sys/class/devfreq/1d84000.ufshc/governor\n        echo \"performance\" \u003e /sys/class/devfreq/1d84000.ufshc/governor\ndone\n\nIt looks to be issue with devfreq driver where\ndevice_monitor_[start/stop] need to synchronized so that\ndelayed work should get corrupted while it is either\nbeing queued or running or being cancelled.\n\nLet's use polling flag and devfreq lock to synchronize the\nqueueing the timer instance twice and work data being\ncorrupted.\n\n[1]\n...\n..\n\u003cidle\u003e-0    [003]   9436.209662:  timer_cancel   timer=0xffffff80444f0428\n\u003cidle\u003e-0    [003]   9436.209664:  timer_expire_entry   timer=0xffffff80444f0428  now=0x10022da1c  function=__typeid__ZTSFvP10timer_listE_global_addr  baseclk=0x10022da1c\n\u003cidle\u003e-0    [003]   9436.209718:  timer_expire_exit   timer=0xffffff80444f0428\nkworker/u16:6-14217    [003]   9436.209863:  timer_start   timer=0xffffff80444f0428  function=__typeid__ZTSFvP10timer_listE_global_addr  expires=0x10022da2b  now=0x10022da1c  flags=182452227\nvendor.xxxyyy.ha-1593    [004]   9436.209888:  timer_cancel   timer=0xffffff80444f0428\nvendor.xxxyyy.ha-1593    [004]   9436.216390:  timer_init   timer=0xffffff80444f0428\nvendor.xxxyyy.ha-1593    [004]   9436.216392:  timer_start   timer=0xffffff80444f0428  function=__typeid__ZTSFvP10timer_listE_global_addr  expires=0x10022da2c  now=0x10022da1d  flags=186646532\nvendor.xxxyyy.ha-1593    [005]   9436.220992:  timer_cancel   timer=0xffffff80444f0428\nxxxyyyTraceManag-7795    [004]   9436.261641:  timer_cancel   timer=0xffffff80444f0428\n\n[2]\n\n 9436.261653][    C4] Unable to handle kernel paging request at virtual address dead00000000012a\n[ 9436.261664][    C4] Mem abort info:\n[ 9436.261666][    C4]   ESR = 0x96000044\n[ 9436.261669][    C4]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 9436.261671][    C4]   SET = 0, FnV = 0\n[ 9436.261673][    C4]   EA = 0, S1PTW = 0\n[ 9436.261675][    C4] Data abort info:\n[ 9436.261677][    C4]   ISV = 0, ISS = 0x00000044\n[ 9436.261680][    C4]   CM = 0, WnR = 1\n[ 9436.261682][    C4] [dead00000000012a] address between user and kernel address ranges\n[ 9436.261685][    C4] Internal error: Oops: 96000044 [#1] PREEMPT SMP\n[ 9436.261701][    C4] Skip md ftrace buffer dump for: 0x3a982d0\n...\n\n[ 9436.262138][    C4] CPU: 4 PID: 7795 Comm: TraceManag Tainted: G S      W  O      5.10.149-android12-9-o-g17f915d29d0c #1\n[ 9436.262141][    C4] Hardware name: Qualcomm Technologies, Inc.  (DT)\n[ 9436.262144][    C4] pstate: 22400085 (nzCv daIf +PAN -UAO +TCO BTYPE=--)\n[ 9436.262161][    C4] pc : expire_timers+0x9c/0x438\n[ 9436.262164][    C4] lr : expire_timers+0x2a4/0x438\n[ 9436.262168][    C4] sp : ffffffc010023dd0\n[ 9436.262171][    C4] x29: ffffffc010023df0 x28: ffffffd0636fdc18\n[ 9436.262178][    C4] x27: ffffffd063569dd0 x26: ffffffd063536008\n[ 9436.262182][    C4] x25: 0000000000000001 x24: ffffff88f7c69280\n[ 9436.262185][    C4] x23: 00000000000000e0 x22: dead000000000122\n[ 9436.262188][    C4] x21: 000000010022da29 x20: ffffff8af72b4e80\n[ 9436.262191][    C4] x19: ffffffc010023e50 x18: ffffffc010025038\n[ 9436.262195][    C4] x17: 0000000000000240 x16: 0000000000000201\n[ 9436.262199][    C4] x15: ffffffffffffffff x14: ffffff889f3c3100\n[ 9436.262203][    C4] x13: ffffff889f3c3100 x12: 00000000049f56b8\n[ 9436.262207][    C4] x11: 00000000049f56b8 x10: 00000000ffffffff\n[ 9436.262212][    C4] x9 : ffffffc010023e50 x8 : dead000000000122\n[ 9436.262216][    C4] x7 : ffffffffffffffff x6 : ffffffc0100239d8\n[ 9436.262220][    C4] x5 : 0000000000000000 x4 : 0000000000000101\n[ 9436.262223][    C4] x3 : 0000000000000080 x2 : ffffff8\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52639",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: s390: vsie: fix race during shadow creation\n\nRight now it is possible to see gmap-\u003eprivate being zero in\nkvm_s390_vsie_gmap_notifier resulting in a crash.  This is due to the\nfact that we add gmap-\u003eprivate == kvm after creation:\n\nstatic int acquire_gmap_shadow(struct kvm_vcpu *vcpu,\n                               struct vsie_page *vsie_page)\n{\n[...]\n        gmap = gmap_shadow(vcpu-\u003earch.gmap, asce, edat);\n        if (IS_ERR(gmap))\n                return PTR_ERR(gmap);\n        gmap-\u003eprivate = vcpu-\u003ekvm;\n\nLet children inherit the private field of the parent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52644",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: b43: Stop/wake correct queue in DMA Tx path when QoS is disabled\n\nWhen QoS is disabled, the queue priority value will not map to the correct\nieee80211 queue since there is only one queue. Stop/wake queue 0 when QoS\nis disabled to prevent trying to stop/wake a non-existent queue and failing\nto stop/wake the actual queue instantiated.\n\nLog of issue before change (with kernel parameter qos=0):\n    [  +5.112651] ------------[ cut here ]------------\n    [  +0.000005] WARNING: CPU: 7 PID: 25513 at net/mac80211/util.c:449 __ieee80211_wake_queue+0xd5/0x180 [mac80211]\n    [  +0.000067] Modules linked in: b43(O) snd_seq_dummy snd_hrtimer snd_seq snd_seq_device nft_chain_nat xt_MASQUERADE nf_nat xfrm_user xfrm_algo xt_addrtype overlay ccm af_packet amdgpu snd_hda_codec_cirrus snd_hda_codec_generic ledtrig_audio drm_exec amdxcp gpu_sched xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip6t_rpfilter ipt_rpfilter xt_pkttype xt_LOG nf_log_syslog xt_tcpudp nft_compat nf_tables nfnetlink sch_fq_codel btusb uinput iTCO_wdt ctr btrtl intel_pmc_bxt i915 intel_rapl_msr mei_hdcp mei_pxp joydev at24 watchdog btintel atkbd libps2 serio radeon btbcm vivaldi_fmap btmtk intel_rapl_common snd_hda_codec_hdmi bluetooth uvcvideo nls_iso8859_1 applesmc nls_cp437 x86_pkg_temp_thermal snd_hda_intel intel_powerclamp vfat videobuf2_vmalloc coretemp fat snd_intel_dspcfg crc32_pclmul uvc polyval_clmulni snd_intel_sdw_acpi loop videobuf2_memops snd_hda_codec tun drm_suballoc_helper polyval_generic drm_ttm_helper drm_buddy tap ecdh_generic videobuf2_v4l2 gf128mul macvlan ttm ghash_clmulni_intel ecc tg3\n    [  +0.000044]  videodev bridge snd_hda_core rapl crc16 drm_display_helper cec mousedev snd_hwdep evdev intel_cstate bcm5974 hid_appleir videobuf2_common stp mac_hid libphy snd_pcm drm_kms_helper acpi_als mei_me intel_uncore llc mc snd_timer intel_gtt industrialio_triggered_buffer apple_mfi_fastcharge i2c_i801 mei snd lpc_ich agpgart ptp i2c_smbus thunderbolt apple_gmux i2c_algo_bit kfifo_buf video industrialio soundcore pps_core wmi tiny_power_button sbs sbshc button ac cordic bcma mac80211 cfg80211 ssb rfkill libarc4 kvm_intel kvm drm irqbypass fuse backlight firmware_class efi_pstore configfs efivarfs dmi_sysfs ip_tables x_tables autofs4 dm_crypt cbc encrypted_keys trusted asn1_encoder tee tpm rng_core input_leds hid_apple led_class hid_generic usbhid hid sd_mod t10_pi crc64_rocksoft crc64 crc_t10dif crct10dif_generic ahci libahci libata uhci_hcd ehci_pci ehci_hcd crct10dif_pclmul crct10dif_common sha512_ssse3 sha512_generic sha256_ssse3 sha1_ssse3 aesni_intel usbcore scsi_mod libaes crypto_simd cryptd scsi_common\n    [  +0.000055]  usb_common rtc_cmos btrfs blake2b_generic libcrc32c crc32c_generic crc32c_intel xor raid6_pq dm_snapshot dm_bufio dm_mod dax [last unloaded: b43(O)]\n    [  +0.000009] CPU: 7 PID: 25513 Comm: irq/17-b43 Tainted: G        W  O       6.6.7 #1-NixOS\n    [  +0.000003] Hardware name: Apple Inc. MacBookPro8,3/Mac-942459F5819B171B, BIOS 87.0.0.0.0 06/13/2019\n    [  +0.000001] RIP: 0010:__ieee80211_wake_queue+0xd5/0x180 [mac80211]\n    [  +0.000046] Code: 00 45 85 e4 0f 85 9b 00 00 00 48 8d bd 40 09 00 00 f0 48 0f ba ad 48 09 00 00 00 72 0f 5b 5d 41 5c 41 5d 41 5e e9 cb 6d 3c d0 \u003c0f\u003e 0b 5b 5d 41 5c 41 5d 41 5e c3 cc cc cc cc 48 8d b4 16 94 00 00\n    [  +0.000002] RSP: 0018:ffffc90003c77d60 EFLAGS: 00010097\n    [  +0.000001] RAX: 0000000000000001 RBX: 0000000000000002 RCX: 0000000000000000\n    [  +0.000001] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff88820b924900\n    [  +0.000002] RBP: ffff88820b924900 R08: ffffc90003c77d90 R09: 000000000003bfd0\n    [  +0.000001] R10: ffff88820b924900 R11: ffffc90003c77c68 R12: 0000000000000000\n    [  +0.000001] R13: 0000000000000000 R14: ffffc90003c77d90 R15: ffffffffc0fa6f40\n    [  +0.000001] FS:  0000000000000000(0000) GS:ffff88846fb80000(0000) knlGS:0000000000000000\n    [  +0.000001] CS:  0010 DS: 0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52646",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naio: fix mremap after fork null-deref\n\nCommit e4a0d3e720e7 (\"aio: Make it possible to remap aio ring\") introduced\na null-deref if mremap is called on an old aio mapping after fork as\nmm-\u003eioctx_table will be set to NULL.\n\n[jmoyer@redhat.com: fix 80 column issue]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/tegra: dsi: Add missing check for of_find_device_by_node\n\nAdd check for the return value of of_find_device_by_node() and return\nthe error if it fails in order to avoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52652",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNTB: fix possible name leak in ntb_register_device()\n\nIf device_register() fails in ntb_register_device(), the device name\nallocated by dev_set_name() should be freed. As per the comment in\ndevice_register(), callers should use put_device() to give up the\nreference in the error path. So fix this by calling put_device() in the\nerror path so that the name can be freed in kobject_cleanup().\n\nAs a result of this, put_device() in the error path of\nntb_register_device() is removed and the actual error is returned.\n\n[mani: reworded commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52653",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: fix a memleak in gss_import_v2_context\n\nThe ctx-\u003emech_used.data allocated by kmemdup is not freed in neither\ngss_import_v2_context nor it only caller gss_krb5_import_sec_context,\nwhich frees ctx on error.\n\nThus, this patch reform the last call of gss_import_v2_context to the\ngss_krb5_import_ctx_v2, preventing the memleak while keepping the return\nformation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6270",
      "Description": "A flaw was found in the ATA over Ethernet (AoE) driver in the Linux kernel. The aoecmd_cfg_pkts() function improperly updates the refcnt on `struct net_device`, and a use-after-free can be triggered by racing between the free on the struct and the access through the `skbtxq` global queue. This could lead to a denial of service condition or potential code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6356",
      "Description": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver and causing kernel panic and a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6535",
      "Description": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver, causing kernel panic and a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6597",
      "Description": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7042",
      "Description": "A null pointer dereference vulnerability was found in ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev() in drivers/net/wireless/ath/ath10k/wmi-tlv.c in the Linux kernel. This issue could be exploited to trigger a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7192",
      "Description": "A memory leak problem was found in ctnetlink_create_conntrack in net/netfilter/nf_conntrack_netlink.c in the Linux Kernel. This issue may allow a local attacker with CAP_NET_ADMIN privileges to cause a denial of service (DoS) attack due to a refcount overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0450",
      "Description": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to \"quoted-overlap\" zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libpython3_4m1_0-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python-xml-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python3-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python3-base-3.4.10-25.130.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0607",
      "Description": "A flaw was found in the Netfilter subsystem in the Linux kernel. The issue is in the nft_byteorder_eval() function, where the code iterates through a loop and writes to the `dst` array. On each iteration, 8 bytes are written, but `dst` is an array of u32, so each element only has space for 4 bytes. That means every iteration overwrites part of the previous element corrupting this array of u32. This flaw allows a local user to cause a denial of service or potentially break NetFilter functionality.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0727",
      "Description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libopenssl1_0_0-1.0.2p-3.90.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libopenssl1_1-1.1.1d-2.104.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:openssl-1_0_0-1.0.2p-3.90.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-1151",
      "Description": "A vulnerability was reported in the Open vSwitch sub-component in the Linux Kernel. The flaw occurs when a recursive operation of code push recursively calls into the code block. The OVS module does not validate the stack depth, pushing too many frames and causing a stack overflow. As a result, this can lead to a crash or other related issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2004",
      "Description": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:curl-8.0.1-11.86.2",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libcurl4-8.0.1-11.86.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2201",
      "Description": "A cross-privilege Spectre v2 vulnerability allows attackers to bypass all deployed mitigations, including the recent Fine(IBT), and to leak arbitrary Linux kernel memory on Intel systems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-22099",
      "Description": "NULL Pointer Dereference vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (net, bluetooth modules) allows Overflow Buffers. This vulnerability is associated with program files /net/bluetooth/rfcomm/core.C.\n\nThis issue affects Linux kernel: v2.6.12-rc2.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23307",
      "Description": "Integer Overflow or Wraparound vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (md, raid, raid5 modules) allows Forced Integer Overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23651",
      "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. Two malicious build steps running in parallel sharing the same cache mounts with subpaths could cause a race condition that can lead to files from the host system being accessible to the build container. The issue has been fixed in v0.12.5. Workarounds include, avoiding using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing cache mounts with --mount=type=cache,source=... options.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:docker-25.0.5_ce-98.112.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23652",
      "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. A malicious BuildKit frontend or Dockerfile using RUN --mount could trick the feature that removes empty files created for the mountpoints into removing a file outside the container, from the host system. The issue has been fixed in v0.12.5. Workarounds include avoiding using BuildKit frontends from an untrusted source or building an untrusted Dockerfile containing RUN --mount feature.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:docker-25.0.5_ce-98.112.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23653",
      "Description": "BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. In addition to running containers as build steps, BuildKit also provides APIs for running interactive containers based on built images. It was possible to use these APIs to ask BuildKit to run a container with elevated privileges. Normally, running such containers is only allowed if special `security.insecure` entitlement is enabled both by buildkitd configuration and allowed by the user initializing the build request. The issue has been fixed in v0.12.5 . Avoid using BuildKit frontends from untrusted sources. \n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:docker-25.0.5_ce-98.112.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23848",
      "Description": "In the Linux kernel through 6.7.1, there is a use-after-free in cec_queue_msg_fh, related to drivers/media/cec/core/cec-adap.c and drivers/media/cec/core/cec-api.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23849",
      "Description": "In rds_recv_track_latency in net/rds/af_rds.c in the Linux kernel through 6.7.1, there is an off-by-one error for an RDS_MSG_RX_DGRAM_TRACE_MAX comparison, resulting in out-of-bounds access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23851",
      "Description": "copy_params in drivers/md/dm-ioctl.c in the Linux kernel through 6.7.1 can attempt to allocate more than INT_MAX bytes, and crash, because of a missing param_kernel-\u003edata_size check. This is related to ctl_ioctl.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2398",
      "Description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:curl-8.0.1-11.86.2",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libcurl4-8.0.1-11.86.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-24855",
      "Description": "A race condition was found in the Linux kernel's scsi device driver in lpfc_unregister_fcf_rescan() function. This can result in a null pointer dereference issue, possibly leading to a kernel panic or denial of service issue.\n\n\n\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-24861",
      "Description": "A race condition was found in the Linux kernel's media/xc4000 device driver in xc4000 xc4000_get_frequency() function. This can result in return value overflow issue, possibly leading to malfunction or denial of service issue.\n\n\n\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26458",
      "Description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26461",
      "Description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-1.16.3-46.12.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:krb5-client-1.16.3-46.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26585",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between tx work scheduling and socket close\n\nSimilarly to previous commit, the submitting thread (recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete().\nReorder scheduling the work before calling complete().\nThis seems more logical in the first place, as it's\nthe inverse order of what the submitting thread will do.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in error path\n\nWhen calling mlxsw_sp_acl_tcam_region_destroy() from an error path after\nfailing to attach the region to an ACL group, we hit a NULL pointer\ndereference upon 'region-\u003egroup-\u003etcam' [1].\n\nFix by retrieving the 'tcam' pointer using mlxsw_sp_acl_to_tcam().\n\n[1]\nBUG: kernel NULL pointer dereference, address: 0000000000000000\n[...]\nRIP: 0010:mlxsw_sp_acl_tcam_region_destroy+0xa0/0xd0\n[...]\nCall Trace:\n mlxsw_sp_acl_tcam_vchunk_get+0x88b/0xa20\n mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0\n mlxsw_sp_acl_rule_add+0x47/0x240\n mlxsw_sp_flower_replace+0x1a9/0x1d0\n tc_setup_cb_add+0xdc/0x1c0\n fl_hw_replace_filter+0x146/0x1f0\n fl_change+0xc17/0x1360\n tc_new_tfilter+0x472/0xb90\n rtnetlink_rcv_msg+0x313/0x3b0\n netlink_rcv_skb+0x58/0x100\n netlink_unicast+0x244/0x390\n netlink_sendmsg+0x1e4/0x440\n ____sys_sendmsg+0x164/0x260\n ___sys_sendmsg+0x9a/0xe0\n __sys_sendmsg+0x7a/0xc0\n do_syscall_64+0x40/0xe0\n entry_SYSCALL_64_after_hwframe+0x63/0x6b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26600",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP\n\nIf the external phy working together with phy-omap-usb2 does not implement\nsend_srp(), we may still attempt to call it. This can happen on an idle\nEthernet gadget triggering a wakeup for example:\n\nconfigfs-gadget.g1 gadget.0: ECM Suspend\nconfigfs-gadget.g1 gadget.0: Port suspended. Triggering wakeup\n...\nUnable to handle kernel NULL pointer dereference at virtual address\n00000000 when execute\n...\nPC is at 0x0\nLR is at musb_gadget_wakeup+0x1d4/0x254 [musb_hdrc]\n...\nmusb_gadget_wakeup [musb_hdrc] from usb_gadget_wakeup+0x1c/0x3c [udc_core]\nusb_gadget_wakeup [udc_core] from eth_start_xmit+0x3b0/0x3d4 [u_ether]\neth_start_xmit [u_ether] from dev_hard_start_xmit+0x94/0x24c\ndev_hard_start_xmit from sch_direct_xmit+0x104/0x2e4\nsch_direct_xmit from __dev_queue_xmit+0x334/0xd88\n__dev_queue_xmit from arp_solicit+0xf0/0x268\narp_solicit from neigh_probe+0x54/0x7c\nneigh_probe from __neigh_event_send+0x22c/0x47c\n__neigh_event_send from neigh_resolve_output+0x14c/0x1c0\nneigh_resolve_output from ip_finish_output2+0x1c8/0x628\nip_finish_output2 from ip_send_skb+0x40/0xd8\nip_send_skb from udp_send_skb+0x124/0x340\nudp_send_skb from udp_sendmsg+0x780/0x984\nudp_sendmsg from __sys_sendto+0xd8/0x158\n__sys_sendto from ret_fast_syscall+0x0/0x58\n\nLet's fix the issue by checking for send_srp() and set_vbus() before\ncalling them. For USB peripheral only cases these both could be NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26614",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: make sure init the accept_queue's spinlocks once\n\nWhen I run syz's reproduction C program locally, it causes the following\nissue:\npvqspinlock: lock 0xffff9d181cd5c660 has corrupted value 0x0!\nWARNING: CPU: 19 PID: 21160 at __pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\nRIP: 0010:__pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)\nCode: 73 56 3a ff 90 c3 cc cc cc cc 8b 05 bb 1f 48 01 85 c0 74 05 c3 cc cc cc cc 8b 17 48 89 fe 48 c7 c7\n30 20 ce 8f e8 ad 56 42 ff \u003c0f\u003e 0b c3 cc cc cc cc 0f 0b 0f 1f 40 00 90 90 90 90 90 90 90 90 90\nRSP: 0018:ffffa8d200604cb8 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9d1ef60e0908\nRDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffff9d1ef60e0900\nRBP: ffff9d181cd5c280 R08: 0000000000000000 R09: 00000000ffff7fff\nR10: ffffa8d200604b68 R11: ffffffff907dcdc8 R12: 0000000000000000\nR13: ffff9d181cd5c660 R14: ffff9d1813a3f330 R15: 0000000000001000\nFS:  00007fa110184640(0000) GS:ffff9d1ef60c0000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000000 CR3: 000000011f65e000 CR4: 00000000000006f0\nCall Trace:\n\u003cIRQ\u003e\n  _raw_spin_unlock (kernel/locking/spinlock.c:186)\n  inet_csk_reqsk_queue_add (net/ipv4/inet_connection_sock.c:1321)\n  inet_csk_complete_hashdance (net/ipv4/inet_connection_sock.c:1358)\n  tcp_check_req (net/ipv4/tcp_minisocks.c:868)\n  tcp_v4_rcv (net/ipv4/tcp_ipv4.c:2260)\n  ip_protocol_deliver_rcu (net/ipv4/ip_input.c:205)\n  ip_local_deliver_finish (net/ipv4/ip_input.c:234)\n  __netif_receive_skb_one_core (net/core/dev.c:5529)\n  process_backlog (./include/linux/rcupdate.h:779)\n  __napi_poll (net/core/dev.c:6533)\n  net_rx_action (net/core/dev.c:6604)\n  __do_softirq (./arch/x86/include/asm/jump_label.h:27)\n  do_softirq (kernel/softirq.c:454 kernel/softirq.c:441)\n\u003c/IRQ\u003e\n\u003cTASK\u003e\n  __local_bh_enable_ip (kernel/softirq.c:381)\n  __dev_queue_xmit (net/core/dev.c:4374)\n  ip_finish_output2 (./include/net/neighbour.h:540 net/ipv4/ip_output.c:235)\n  __ip_queue_xmit (net/ipv4/ip_output.c:535)\n  __tcp_transmit_skb (net/ipv4/tcp_output.c:1462)\n  tcp_rcv_synsent_state_process (net/ipv4/tcp_input.c:6469)\n  tcp_rcv_state_process (net/ipv4/tcp_input.c:6657)\n  tcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1929)\n  __release_sock (./include/net/sock.h:1121 net/core/sock.c:2968)\n  release_sock (net/core/sock.c:3536)\n  inet_wait_for_connect (net/ipv4/af_inet.c:609)\n  __inet_stream_connect (net/ipv4/af_inet.c:702)\n  inet_stream_connect (net/ipv4/af_inet.c:748)\n  __sys_connect (./include/linux/file.h:45 net/socket.c:2064)\n  __x64_sys_connect (net/socket.c:2073 net/socket.c:2070 net/socket.c:2070)\n  do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:82)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)\n  RIP: 0033:0x7fa10ff05a3d\n  Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89\n  c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d ab a3 0e 00 f7 d8 64 89 01 48\n  RSP: 002b:00007fa110183de8 EFLAGS: 00000202 ORIG_RAX: 000000000000002a\n  RAX: ffffffffffffffda RBX: 0000000020000054 RCX: 00007fa10ff05a3d\n  RDX: 000000000000001c RSI: 0000000020000040 RDI: 0000000000000003\n  RBP: 00007fa110183e20 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000202 R12: 00007fa110184640\n  R13: 0000000000000000 R14: 00007fa10fe8b060 R15: 00007fff73e23b20\n\u003c/TASK\u003e\n\nThe issue triggering process is analyzed as follows:\nThread A                                       Thread B\ntcp_v4_rcv\t//receive ack TCP packet       inet_shutdown\n  tcp_check_req                                  tcp_disconnect //disconnect sock\n  ...                                              tcp_set_state(sk, TCP_CLOSE)\n    inet_csk_complete_hashdance                ...\n      inet_csk_reqsk_queue_add         \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26622",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntomoyo: fix UAF write bug in tomoyo_write_control()\n\nSince tomoyo_write_control() updates head-\u003ewrite_buf when write()\nof long lines is requested, we need to fetch head-\u003ewrite_buf after\nhead-\u003eio_sem is held.  Otherwise, concurrent write() requests can\ncause use-after-free-write and double-free problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26642",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: disallow anonymous set with timeout flag\n\nAnonymous sets are never used with timeout from userspace, reject this.\nException to this rule is NFT_SET_EVAL to ensure legacy meters still work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26651",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsr9800: Add check for usbnet_get_endpoints\n\nAdd check for usbnet_get_endpoints() and return the error if it fails\nin order to transfer the error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26671",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: fix IO hang from sbitmap wakeup race\n\nIn blk_mq_mark_tag_wait(), __add_wait_queue() may be re-ordered\nwith the following blk_mq_get_driver_tag() in case of getting driver\ntag failure.\n\nThen in __sbitmap_queue_wake_up(), waitqueue_active() may not observe\nthe added waiter in blk_mq_mark_tag_wait() and wake up nothing, meantime\nblk_mq_mark_tag_wait() can't get driver tag successfully.\n\nThis issue can be reproduced by running the following test in loop, and\nfio hang can be observed in \u003c 30min when running it on my test VM\nin laptop.\n\n\tmodprobe -r scsi_debug\n\tmodprobe scsi_debug delay=0 dev_size_mb=4096 max_queue=1 host_max_queue=1 submit_queues=4\n\tdev=`ls -d /sys/bus/pseudo/drivers/scsi_debug/adapter*/host*/target*/*/block/* | head -1 | xargs basename`\n\tfio --filename=/dev/\"$dev\" --direct=1 --rw=randrw --bs=4k --iodepth=1 \\\n       \t\t--runtime=100 --numjobs=40 --time_based --name=test \\\n        \t--ioengine=libaio\n\nFix the issue by adding one explicit barrier in blk_mq_mark_tag_wait(), which\nis just fine in case of running out of tag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26675",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nppp_async: limit MRU to 64K\n\nsyzbot triggered a warning [1] in __alloc_pages():\n\nWARN_ON_ONCE_GFP(order \u003e MAX_PAGE_ORDER, gfp)\n\nWillem fixed a similar issue in commit c0a2a1b0d631 (\"ppp: limit MRU to 64K\")\n\nAdopt the same sanity check for ppp_async_ioctl(PPPIOCSMRU)\n\n[1]:\n\n WARNING: CPU: 1 PID: 11 at mm/page_alloc.c:4543 __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\nModules linked in:\nCPU: 1 PID: 11 Comm: kworker/u4:0 Not tainted 6.8.0-rc2-syzkaller-g41bccc98fb79 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\nWorkqueue: events_unbound flush_to_ldisc\npstate: 204000c5 (nzCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\n lr : __alloc_pages+0xc8/0x698 mm/page_alloc.c:4537\nsp : ffff800093967580\nx29: ffff800093967660 x28: ffff8000939675a0 x27: dfff800000000000\nx26: ffff70001272ceb4 x25: 0000000000000000 x24: ffff8000939675c0\nx23: 0000000000000000 x22: 0000000000060820 x21: 1ffff0001272ceb8\nx20: ffff8000939675e0 x19: 0000000000000010 x18: ffff800093967120\nx17: ffff800083bded5c x16: ffff80008ac97500 x15: 0000000000000005\nx14: 1ffff0001272cebc x13: 0000000000000000 x12: 0000000000000000\nx11: ffff70001272cec1 x10: 1ffff0001272cec0 x9 : 0000000000000001\nx8 : ffff800091c91000 x7 : 0000000000000000 x6 : 000000000000003f\nx5 : 00000000ffffffff x4 : 0000000000000000 x3 : 0000000000000020\nx2 : 0000000000000008 x1 : 0000000000000000 x0 : ffff8000939675e0\nCall trace:\n  __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\n  __alloc_pages_node include/linux/gfp.h:238 [inline]\n  alloc_pages_node include/linux/gfp.h:261 [inline]\n  __kmalloc_large_node+0xbc/0x1fc mm/slub.c:3926\n  __do_kmalloc_node mm/slub.c:3969 [inline]\n  __kmalloc_node_track_caller+0x418/0x620 mm/slub.c:4001\n  kmalloc_reserve+0x17c/0x23c net/core/skbuff.c:590\n  __alloc_skb+0x1c8/0x3d8 net/core/skbuff.c:651\n  __netdev_alloc_skb+0xb8/0x3e8 net/core/skbuff.c:715\n  netdev_alloc_skb include/linux/skbuff.h:3235 [inline]\n  dev_alloc_skb include/linux/skbuff.h:3248 [inline]\n  ppp_async_input drivers/net/ppp/ppp_async.c:863 [inline]\n  ppp_asynctty_receive+0x588/0x186c drivers/net/ppp/ppp_async.c:341\n  tty_ldisc_receive_buf+0x12c/0x15c drivers/tty/tty_buffer.c:390\n  tty_port_default_receive_buf+0x74/0xac drivers/tty/tty_port.c:37\n  receive_buf drivers/tty/tty_buffer.c:444 [inline]\n  flush_to_ldisc+0x284/0x6e4 drivers/tty/tty_buffer.c:494\n  process_one_work+0x694/0x1204 kernel/workqueue.c:2633\n  process_scheduled_works kernel/workqueue.c:2706 [inline]\n  worker_thread+0x938/0xef4 kernel/workqueue.c:2787\n  kthread+0x288/0x310 kernel/kthread.c:388\n  ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:860",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26689",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: prevent use-after-free in encode_cap_msg()\n\nIn fs/ceph/caps.c, in encode_cap_msg(), \"use after free\" error was\ncaught by KASAN at this line - 'ceph_buffer_get(arg-\u003exattr_buf);'. This\nimplies before the refcount could be increment here, it was freed.\n\nIn same file, in \"handle_cap_grant()\" refcount is decremented by this\nline - 'ceph_buffer_put(ci-\u003ei_xattrs.blob);'. It appears that a race\noccurred and resource was freed by the latter line before the former\nline could increment it.\n\nencode_cap_msg() is called by __send_cap() and __send_cap() is called by\nceph_check_caps() after calling __prep_cap(). __prep_cap() is where\narg-\u003exattr_buf is assigned to ci-\u003ei_xattrs.blob. This is the spot where\nthe refcount must be increased to prevent \"use after free\" error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26704",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix double-free of blocks due to wrong extents moved_len\n\nIn ext4_move_extents(), moved_len is only updated when all moves are\nsuccessfully executed, and only discards orig_inode and donor_inode\npreallocations when moved_len is not zero. When the loop fails to exit\nafter successfully moving some extents, moved_len is not updated and\nremains at 0, so it does not discard the preallocations.\n\nIf the moved extents overlap with the preallocated extents, the\noverlapped extents are freed twice in ext4_mb_release_inode_pa() and\next4_process_freed_data() (as described in commit 94d7c16cbbbd (\"ext4:\nFix double-free of blocks with EXT4_IOC_MOVE_EXT\")), and bb_free is\nincremented twice. Hence when trim is executed, a zero-division bug is\ntriggered in mb_update_avg_fragment_size() because bb_free is not zero\nand bb_fragments is zero.\n\nTherefore, update move_len after each extent move to avoid the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26733",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narp: Prevent overflow in arp_req_get().\n\nsyzkaller reported an overflown write in arp_req_get(). [0]\n\nWhen ioctl(SIOCGARP) is issued, arp_req_get() looks up an neighbour\nentry and copies neigh-\u003eha to struct arpreq.arp_ha.sa_data.\n\nThe arp_ha here is struct sockaddr, not struct sockaddr_storage, so\nthe sa_data buffer is just 14 bytes.\n\nIn the splat below, 2 bytes are overflown to the next int field,\narp_flags.  We initialise the field just after the memcpy(), so it's\nnot a problem.\n\nHowever, when dev-\u003eaddr_len is greater than 22 (e.g. MAX_ADDR_LEN),\narp_netmask is overwritten, which could be set as htonl(0xFFFFFFFFUL)\nin arp_ioctl() before calling arp_req_get().\n\nTo avoid the overflow, let's limit the max length of memcpy().\n\nNote that commit b5f0de6df6dc (\"net: dev: Convert sa_data to flexible\narray in struct sockaddr\") just silenced syzkaller.\n\n[0]:\nmemcpy: detected field-spanning write (size 16) of single field \"r-\u003earp_ha.sa_data\" at net/ipv4/arp.c:1128 (size 14)\nWARNING: CPU: 0 PID: 144638 at net/ipv4/arp.c:1128 arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128\nModules linked in:\nCPU: 0 PID: 144638 Comm: syz-executor.4 Not tainted 6.1.74 #31\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-5 04/01/2014\nRIP: 0010:arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128\nCode: fd ff ff e8 41 42 de fb b9 0e 00 00 00 4c 89 fe 48 c7 c2 20 6d ab 87 48 c7 c7 80 6d ab 87 c6 05 25 af 72 04 01 e8 5f 8d ad fb \u003c0f\u003e 0b e9 6c fd ff ff e8 13 42 de fb be 03 00 00 00 4c 89 e7 e8 a6\nRSP: 0018:ffffc900050b7998 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff88803a815000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffffff8641a44a RDI: 0000000000000001\nRBP: ffffc900050b7a98 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 203a7970636d656d R12: ffff888039c54000\nR13: 1ffff92000a16f37 R14: ffff88803a815084 R15: 0000000000000010\nFS:  00007f172bf306c0(0000) GS:ffff88805aa00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f172b3569f0 CR3: 0000000057f12005 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n arp_ioctl+0x33f/0x4b0 net/ipv4/arp.c:1261\n inet_ioctl+0x314/0x3a0 net/ipv4/af_inet.c:981\n sock_do_ioctl+0xdf/0x260 net/socket.c:1204\n sock_ioctl+0x3ef/0x650 net/socket.c:1321\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x18e/0x220 fs/ioctl.c:856\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x37/0x90 arch/x86/entry/common.c:81\n entry_SYSCALL_64_after_hwframe+0x64/0xce\nRIP: 0033:0x7f172b262b8d\nCode: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f172bf300b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007f172b3abf80 RCX: 00007f172b262b8d\nRDX: 0000000020000000 RSI: 0000000000008954 RDI: 0000000000000003\nRBP: 00007f172b2d3493 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007f172b3abf80 R15: 00007f172bf10000\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/qedr: Fix qedr_create_user_qp error flow\n\nAvoid the following warning by making sure to free the allocated\nresources in case that qedr_init_user_queue() fail.\n\n-----------[ cut here ]-----------\nWARNING: CPU: 0 PID: 143192 at drivers/infiniband/core/rdma_core.c:874 uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\nModules linked in: tls target_core_user uio target_core_pscsi target_core_file target_core_iblock ib_srpt ib_srp scsi_transport_srp nfsd nfs_acl rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache netfs 8021q garp mrp stp llc ext4 mbcache jbd2 opa_vnic ib_umad ib_ipoib sunrpc rdma_ucm ib_isert iscsi_target_mod target_core_mod ib_iser libiscsi scsi_transport_iscsi rdma_cm iw_cm ib_cm hfi1 intel_rapl_msr intel_rapl_common mgag200 qedr sb_edac drm_shmem_helper rdmavt x86_pkg_temp_thermal drm_kms_helper intel_powerclamp ib_uverbs coretemp i2c_algo_bit kvm_intel dell_wmi_descriptor ipmi_ssif sparse_keymap kvm ib_core rfkill syscopyarea sysfillrect video sysimgblt irqbypass ipmi_si ipmi_devintf fb_sys_fops rapl iTCO_wdt mxm_wmi iTCO_vendor_support intel_cstate pcspkr dcdbas intel_uncore ipmi_msghandler lpc_ich acpi_power_meter mei_me mei fuse drm xfs libcrc32c qede sd_mod ahci libahci t10_pi sg crct10dif_pclmul crc32_pclmul crc32c_intel qed libata tg3\nghash_clmulni_intel megaraid_sas crc8 wmi [last unloaded: ib_srpt]\nCPU: 0 PID: 143192 Comm: fi_rdm_tagged_p Kdump: loaded Not tainted 5.14.0-408.el9.x86_64 #1\nHardware name: Dell Inc. PowerEdge R430/03XKDV, BIOS 2.14.0 01/25/2022\nRIP: 0010:uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\nCode: 5d 41 5c 41 5d 41 5e e9 0f 26 1b dd 48 89 df e8 67 6a ff ff 49 8b 86 10 01 00 00 48 85 c0 74 9c 4c 89 e7 e8 83 c0 cb dd eb 92 \u003c0f\u003e 0b eb be 0f 0b be 04 00 00 00 48 89 df e8 8e f5 ff ff e9 6d ff\nRSP: 0018:ffffb7c6cadfbc60 EFLAGS: 00010286\nRAX: ffff8f0889ee3f60 RBX: ffff8f088c1a5200 RCX: 00000000802a0016\nRDX: 00000000802a0017 RSI: 0000000000000001 RDI: ffff8f0880042600\nRBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000000\nR10: ffff8f11fffd5000 R11: 0000000000039000 R12: ffff8f0d5b36cd80\nR13: ffff8f088c1a5250 R14: ffff8f1206d91000 R15: 0000000000000000\nFS: 0000000000000000(0000) GS:ffff8f11d7c00000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000147069200e20 CR3: 00000001c7210002 CR4: 00000000001706f0\nCall Trace:\n\u003cTASK\u003e\n? show_trace_log_lvl+0x1c4/0x2df\n? show_trace_log_lvl+0x1c4/0x2df\n? ib_uverbs_close+0x1f/0xb0 [ib_uverbs]\n? uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\n? __warn+0x81/0x110\n? uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\n? report_bug+0x10a/0x140\n? handle_bug+0x3c/0x70\n? exc_invalid_op+0x14/0x70\n? asm_exc_invalid_op+0x16/0x20\n? uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\nib_uverbs_close+0x1f/0xb0 [ib_uverbs]\n__fput+0x94/0x250\ntask_work_run+0x5c/0x90\ndo_exit+0x270/0x4a0\ndo_group_exit+0x2d/0x90\nget_signal+0x87c/0x8c0\narch_do_signal_or_restart+0x25/0x100\n? ib_uverbs_ioctl+0xc2/0x110 [ib_uverbs]\nexit_to_user_mode_loop+0x9c/0x130\nexit_to_user_mode_prepare+0xb6/0x100\nsyscall_exit_to_user_mode+0x12/0x40\ndo_syscall_64+0x69/0x90\n? syscall_exit_work+0x103/0x130\n? syscall_exit_to_user_mode+0x22/0x40\n? do_syscall_64+0x69/0x90\n? syscall_exit_work+0x103/0x130\n? syscall_exit_to_user_mode+0x22/0x40\n? do_syscall_64+0x69/0x90\n? do_syscall_64+0x69/0x90\n? common_interrupt+0x43/0xa0\nentry_SYSCALL_64_after_hwframe+0x72/0xdc\nRIP: 0033:0x1470abe3ec6b\nCode: Unable to access opcode bytes at RIP 0x1470abe3ec41.\nRSP: 002b:00007fff13ce9108 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: fffffffffffffffc RBX: 00007fff13ce9218 RCX: 00001470abe3ec6b\nRDX: 00007fff13ce9200 RSI: 00000000c0181b01 RDI: 0000000000000004\nRBP: 00007fff13ce91e0 R08: 0000558d9655da10 R09: 0000558d9655dd00\nR10: 00007fff13ce95c0 R11: 0000000000000246 R12: 00007fff13ce9358\nR13: 0000000000000013 R14: 0000558d9655db50 R15: 00007fff13ce9470\n\u003c/TASK\u003e\n--[ end trace 888a9b92e04c5c97 ]--",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26744",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srpt: Support specifying the srpt_service_guid parameter\n\nMake loading ib_srpt with this parameter set work. The current behavior is\nthat setting that parameter while loading the ib_srpt kernel module\ntriggers the following kernel crash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nCall Trace:\n \u003cTASK\u003e\n parse_one+0x18c/0x1d0\n parse_args+0xe1/0x230\n load_module+0x8de/0xa60\n init_module_from_file+0x8b/0xd0\n idempotent_init_module+0x181/0x240\n __x64_sys_finit_module+0x5a/0xb0\n do_syscall_64+0x5f/0xe0\n entry_SYSCALL_64_after_hwframe+0x6e/0x76",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26747",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: roles: fix NULL pointer issue when put module's reference\n\nIn current design, usb role class driver will get usb_role_switch parent's\nmodule reference after the user get usb_role_switch device and put the\nreference after the user put the usb_role_switch device. However, the\nparent device of usb_role_switch may be removed before the user put the\nusb_role_switch. If so, then, NULL pointer issue will be met when the user\nput the parent module's reference.\n\nThis will save the module pointer in structure of usb_role_switch. Then,\nwe don't need to find module by iterating long relations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26763",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-crypt: don't modify the data when using authenticated encryption\n\nIt was said that authenticated encryption could produce invalid tag when\nthe data that is being encrypted is modified [1]. So, fix this problem by\ncopying the data into the clone bio first and then encrypt them inside the\nclone bio.\n\nThis may reduce performance, but it is needed to prevent the user from\ncorrupting the device by writing data with O_DIRECT and modifying them at\nthe same time.\n\n[1] https://lore.kernel.org/all/20240207004723.GA35324@sol.localdomain/T/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26771",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: edma: Add some null pointer checks to the edma_probe\n\ndevm_kasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_find_by_goal()\n\nPlaces the logic for checking if the group's block bitmap is corrupt under\nthe protection of the group lock to avoid allocating blocks from the group\nwith a corrupted block bitmap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_try_best_found()\n\nDetermine if the group block bitmap is corrupted before using ac_b_ex in\next4_mb_try_best_found() to avoid allocating blocks from a group with a\ncorrupted block bitmap in the following concurrency and making the\nsituation worse.\n\next4_mb_regular_allocator\n  ext4_lock_group(sb, group)\n  ext4_mb_good_group\n   // check if the group bbitmap is corrupted\n  ext4_mb_complex_scan_group\n   // Scan group gets ac_b_ex but doesn't use it\n  ext4_unlock_group(sb, group)\n                           ext4_mark_group_bitmap_corrupted(group)\n                           // The block bitmap was corrupted during\n                           // the group unlock gap.\n  ext4_mb_try_best_found\n    ext4_lock_group(ac-\u003eac_sb, group)\n    ext4_mb_use_best_found\n      mb_mark_used\n      // Allocating blocks in block bitmap corrupted group",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: sis: Error out if pixclock equals zero\n\nThe userspace program could pass any values to the driver through\nioctl() interface. If the driver doesn't check the value of pixclock,\nit may cause divide-by-zero error.\n\nIn sisfb_check_var(), var-\u003epixclock is used as a divisor to caculate\ndrate before it is checked against zero. Fix this by checking it\nat the beginning.\n\nThis is similar to CVE-2022-3061 in i740fb which was fixed by\ncommit 15cf0b8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26778",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: savage: Error out if pixclock equals zero\n\nThe userspace program could pass any values to the driver through\nioctl() interface. If the driver doesn't check the value of pixclock,\nit may cause divide-by-zero error.\n\nAlthough pixclock is checked in savagefb_decode_var(), but it is not\nchecked properly in savagefb_probe(). Fix this by checking whether\npixclock is zero in the function savagefb_check_var() before\ninfo-\u003evar.pixclock is used as the divisor.\n\nThis is similar to CVE-2022-3061 in i740fb which was fixed by\ncommit 15cf0b8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26779",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix race condition on enabling fast-xmit\n\nfast-xmit must only be enabled after the sta has been uploaded to the driver,\notherwise it could end up passing the not-yet-uploaded sta via drv_tx calls\nto the driver, leading to potential crashes because of uninitialized drv_priv\ndata.\nAdd a missing sta-\u003euploaded check and re-check fast xmit after inserting a sta.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26793",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngtp: fix use-after-free and null-ptr-deref in gtp_newlink()\n\nThe gtp_link_ops operations structure for the subsystem must be\nregistered after registering the gtp_net_ops pernet operations structure.\n\nSyzkaller hit 'general protection fault in gtp_genl_dump_pdp' bug:\n\n[ 1010.702740] gtp: GTP module unloaded\n[ 1010.715877] general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] SMP KASAN NOPTI\n[ 1010.715888] KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n[ 1010.715895] CPU: 1 PID: 128616 Comm: a.out Not tainted 6.8.0-rc6-std-def-alt1 #1\n[ 1010.715899] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-alt1 04/01/2014\n[ 1010.715908] RIP: 0010:gtp_newlink+0x4d7/0x9c0 [gtp]\n[ 1010.715915] Code: 80 3c 02 00 0f 85 41 04 00 00 48 8b bb d8 05 00 00 e8 ed f6 ff ff 48 89 c2 48 89 c5 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 4f 04 00 00 4c 89 e2 4c 8b 6d 00 48 b8 00 00 00\n[ 1010.715920] RSP: 0018:ffff888020fbf180 EFLAGS: 00010203\n[ 1010.715929] RAX: dffffc0000000000 RBX: ffff88800399c000 RCX: 0000000000000000\n[ 1010.715933] RDX: 0000000000000001 RSI: ffffffff84805280 RDI: 0000000000000282\n[ 1010.715938] RBP: 000000000000000d R08: 0000000000000001 R09: 0000000000000000\n[ 1010.715942] R10: 0000000000000001 R11: 0000000000000001 R12: ffff88800399cc80\n[ 1010.715947] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000400\n[ 1010.715953] FS:  00007fd1509ab5c0(0000) GS:ffff88805b300000(0000) knlGS:0000000000000000\n[ 1010.715958] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1010.715962] CR2: 0000000000000000 CR3: 000000001c07a000 CR4: 0000000000750ee0\n[ 1010.715968] PKRU: 55555554\n[ 1010.715972] Call Trace:\n[ 1010.715985]  ? __die_body.cold+0x1a/0x1f\n[ 1010.715995]  ? die_addr+0x43/0x70\n[ 1010.716002]  ? exc_general_protection+0x199/0x2f0\n[ 1010.716016]  ? asm_exc_general_protection+0x1e/0x30\n[ 1010.716026]  ? gtp_newlink+0x4d7/0x9c0 [gtp]\n[ 1010.716034]  ? gtp_net_exit+0x150/0x150 [gtp]\n[ 1010.716042]  __rtnl_newlink+0x1063/0x1700\n[ 1010.716051]  ? rtnl_setlink+0x3c0/0x3c0\n[ 1010.716063]  ? is_bpf_text_address+0xc0/0x1f0\n[ 1010.716070]  ? kernel_text_address.part.0+0xbb/0xd0\n[ 1010.716076]  ? __kernel_text_address+0x56/0xa0\n[ 1010.716084]  ? unwind_get_return_address+0x5a/0xa0\n[ 1010.716091]  ? create_prof_cpu_mask+0x30/0x30\n[ 1010.716098]  ? arch_stack_walk+0x9e/0xf0\n[ 1010.716106]  ? stack_trace_save+0x91/0xd0\n[ 1010.716113]  ? stack_trace_consume_entry+0x170/0x170\n[ 1010.716121]  ? __lock_acquire+0x15c5/0x5380\n[ 1010.716139]  ? mark_held_locks+0x9e/0xe0\n[ 1010.716148]  ? kmem_cache_alloc_trace+0x35f/0x3c0\n[ 1010.716155]  ? __rtnl_newlink+0x1700/0x1700\n[ 1010.716160]  rtnl_newlink+0x69/0xa0\n[ 1010.716166]  rtnetlink_rcv_msg+0x43b/0xc50\n[ 1010.716172]  ? rtnl_fdb_dump+0x9f0/0x9f0\n[ 1010.716179]  ? lock_acquire+0x1fe/0x560\n[ 1010.716188]  ? netlink_deliver_tap+0x12f/0xd50\n[ 1010.716196]  netlink_rcv_skb+0x14d/0x440\n[ 1010.716202]  ? rtnl_fdb_dump+0x9f0/0x9f0\n[ 1010.716208]  ? netlink_ack+0xab0/0xab0\n[ 1010.716213]  ? netlink_deliver_tap+0x202/0xd50\n[ 1010.716220]  ? netlink_deliver_tap+0x218/0xd50\n[ 1010.716226]  ? __virt_addr_valid+0x30b/0x590\n[ 1010.716233]  netlink_unicast+0x54b/0x800\n[ 1010.716240]  ? netlink_attachskb+0x870/0x870\n[ 1010.716248]  ? __check_object_size+0x2de/0x3b0\n[ 1010.716254]  netlink_sendmsg+0x938/0xe40\n[ 1010.716261]  ? netlink_unicast+0x800/0x800\n[ 1010.716269]  ? __import_iovec+0x292/0x510\n[ 1010.716276]  ? netlink_unicast+0x800/0x800\n[ 1010.716284]  __sock_sendmsg+0x159/0x190\n[ 1010.716290]  ____sys_sendmsg+0x712/0x880\n[ 1010.716297]  ? sock_write_iter+0x3d0/0x3d0\n[ 1010.716304]  ? __ia32_sys_recvmmsg+0x270/0x270\n[ 1010.716309]  ? lock_acquire+0x1fe/0x560\n[ 1010.716315]  ? drain_array_locked+0x90/0x90\n[ 1010.716324]  ___sys_sendmsg+0xf8/0x170\n[ 1010.716331]  ? sendmsg_copy_msghdr+0x170/0x170\n[ 1010.716337]  ? lockdep_init_map\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetlink: Fix kernel-infoleak-after-free in __skb_datagram_iter\n\nsyzbot reported the following uninit-value access issue [1]:\n\nnetlink_to_full_skb() creates a new `skb` and puts the `skb-\u003edata`\npassed as a 1st arg of netlink_to_full_skb() onto new `skb`. The data\nsize is specified as `len` and passed to skb_put_data(). This `len`\nis based on `skb-\u003eend` that is not data offset but buffer offset. The\n`skb-\u003eend` contains data and tailroom. Since the tailroom is not\ninitialized when the new `skb` created, KMSAN detects uninitialized\nmemory area when copying the data.\n\nThis patch resolved this issue by correct the len from `skb-\u003eend` to\n`skb-\u003elen`, which is the actual data offset.\n\nBUG: KMSAN: kernel-infoleak-after-free in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in copy_to_user_iter lib/iov_iter.c:24 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in iterate_ubuf include/linux/iov_iter.h:29 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in iterate_and_advance include/linux/iov_iter.h:271 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in _copy_to_iter+0x364/0x2520 lib/iov_iter.c:186\n instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n copy_to_user_iter lib/iov_iter.c:24 [inline]\n iterate_ubuf include/linux/iov_iter.h:29 [inline]\n iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n iterate_and_advance include/linux/iov_iter.h:271 [inline]\n _copy_to_iter+0x364/0x2520 lib/iov_iter.c:186\n copy_to_iter include/linux/uio.h:197 [inline]\n simple_copy_to_iter+0x68/0xa0 net/core/datagram.c:532\n __skb_datagram_iter+0x123/0xdc0 net/core/datagram.c:420\n skb_copy_datagram_iter+0x5c/0x200 net/core/datagram.c:546\n skb_copy_datagram_msg include/linux/skbuff.h:3960 [inline]\n packet_recvmsg+0xd9c/0x2000 net/packet/af_packet.c:3482\n sock_recvmsg_nosec net/socket.c:1044 [inline]\n sock_recvmsg net/socket.c:1066 [inline]\n sock_read_iter+0x467/0x580 net/socket.c:1136\n call_read_iter include/linux/fs.h:2014 [inline]\n new_sync_read fs/read_write.c:389 [inline]\n vfs_read+0x8f6/0xe00 fs/read_write.c:470\n ksys_read+0x20f/0x4c0 fs/read_write.c:613\n __do_sys_read fs/read_write.c:623 [inline]\n __se_sys_read fs/read_write.c:621 [inline]\n __x64_sys_read+0x93/0xd0 fs/read_write.c:621\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was stored to memory at:\n skb_put_data include/linux/skbuff.h:2622 [inline]\n netlink_to_full_skb net/netlink/af_netlink.c:181 [inline]\n __netlink_deliver_tap_skb net/netlink/af_netlink.c:298 [inline]\n __netlink_deliver_tap+0x5be/0xc90 net/netlink/af_netlink.c:325\n netlink_deliver_tap net/netlink/af_netlink.c:338 [inline]\n netlink_deliver_tap_kernel net/netlink/af_netlink.c:347 [inline]\n netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n netlink_unicast+0x10f1/0x1250 net/netlink/af_netlink.c:1368\n netlink_sendmsg+0x1238/0x13d0 net/netlink/af_netlink.c:1910\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n ____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n __sys_sendmsg net/socket.c:2667 [inline]\n __do_sys_sendmsg net/socket.c:2676 [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x307/0x490 net/socket.c:2674\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n free_pages_prepare mm/page_alloc.c:1087 [inline]\n free_unref_page_prepare+0xb0/0xa40 mm/page_alloc.c:2347\n free_unref_page_list+0xeb/0x1100 mm/page_alloc.c:2533\n release_pages+0x23d3/0x2410 mm/swap.c:1042\n free_pages_and_swap_cache+0xd9/0xf0 mm/swap_state.c:316\n tlb_batch_pages\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26816",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86, relocs: Ignore relocations in .notes section\n\nWhen building with CONFIG_XEN_PV=y, .text symbols are emitted into\nthe .notes section so that Xen can find the \"startup_xen\" entry point.\nThis information is used prior to booting the kernel, so relocations\nare not useful. In fact, performing relocations against the .notes\nsection means that the KASLR base is exposed since /sys/kernel/notes\nis world-readable.\n\nTo avoid leaking the KASLR base without breaking unprivileged tools that\nare expecting to read /sys/kernel/notes, skip performing relocations in\nthe .notes section. The values readable in .notes are then identical to\nthose found in System.map.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\namdkfd: use calloc instead of kzalloc to avoid integer overflow\n\nThis uses calloc instead of doing the multiplication which might\noverflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26839",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix a memleak in init_credit_return\n\nWhen dma_alloc_coherent fails to allocate dd-\u003ecr_base[i].va,\ninit_credit_return should deallocate dd-\u003ecr_base and\ndd-\u003ecr_base[i] that allocated before. Or those resources\nwould be never freed and a memleak is triggered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26840",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: fix memory leak in cachefiles_add_cache()\n\nThe following memory leak was reported after unbinding /dev/cachefiles:\n\n==================================================================\nunreferenced object 0xffff9b674176e3c0 (size 192):\n  comm \"cachefilesd2\", pid 680, jiffies 4294881224\n  hex dump (first 32 bytes):\n    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc ea38a44b):\n    [\u003cffffffff8eb8a1a5\u003e] kmem_cache_alloc+0x2d5/0x370\n    [\u003cffffffff8e917f86\u003e] prepare_creds+0x26/0x2e0\n    [\u003cffffffffc002eeef\u003e] cachefiles_determine_cache_security+0x1f/0x120\n    [\u003cffffffffc00243ec\u003e] cachefiles_add_cache+0x13c/0x3a0\n    [\u003cffffffffc0025216\u003e] cachefiles_daemon_write+0x146/0x1c0\n    [\u003cffffffff8ebc4a3b\u003e] vfs_write+0xcb/0x520\n    [\u003cffffffff8ebc5069\u003e] ksys_write+0x69/0xf0\n    [\u003cffffffff8f6d4662\u003e] do_syscall_64+0x72/0x140\n    [\u003cffffffff8f8000aa\u003e] entry_SYSCALL_64_after_hwframe+0x6e/0x76\n==================================================================\n\nPut the reference count of cache_cred in cachefiles_daemon_unbind() to\nfix the problem. And also put cache_cred in cachefiles_add_cache() error\nbranch to avoid memory leaks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26852",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/ipv6: avoid possible UAF in ip6_route_mpath_notify()\n\nsyzbot found another use-after-free in ip6_route_mpath_notify() [1]\n\nCommit f7225172f25a (\"net/ipv6: prevent use after free in\nip6_route_mpath_notify\") was not able to fix the root cause.\n\nWe need to defer the fib6_info_release() calls after\nip6_route_mpath_notify(), in the cleanup phase.\n\n[1]\nBUG: KASAN: slab-use-after-free in rt6_fill_node+0x1460/0x1ac0\nRead of size 4 at addr ffff88809a07fc64 by task syz-executor.2/23037\n\nCPU: 0 PID: 23037 Comm: syz-executor.2 Not tainted 6.8.0-rc4-syzkaller-01035-gea7f3cfaa588 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x1e7/0x2e0 lib/dump_stack.c:106\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x167/0x540 mm/kasan/report.c:488\n  kasan_report+0x142/0x180 mm/kasan/report.c:601\n rt6_fill_node+0x1460/0x1ac0\n  inet6_rt_notify+0x13b/0x290 net/ipv6/route.c:6184\n  ip6_route_mpath_notify net/ipv6/route.c:5198 [inline]\n  ip6_route_multipath_add net/ipv6/route.c:5404 [inline]\n  inet6_rtm_newroute+0x1d0f/0x2300 net/ipv6/route.c:5517\n  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597\n  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543\n  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367\n  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x221/0x270 net/socket.c:745\n  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584\n  ___sys_sendmsg net/socket.c:2638 [inline]\n  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667\n do_syscall_64+0xf9/0x240\n entry_SYSCALL_64_after_hwframe+0x6f/0x77\nRIP: 0033:0x7f73dd87dda9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f73de6550c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f73dd9ac050 RCX: 00007f73dd87dda9\nRDX: 0000000000000000 RSI: 0000000020000140 RDI: 0000000000000005\nRBP: 00007f73dd8ca47a R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000006e R14: 00007f73dd9ac050 R15: 00007ffdbdeb7858\n \u003c/TASK\u003e\n\nAllocated by task 23037:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:372 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:389\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:3981 [inline]\n  __kmalloc+0x22e/0x490 mm/slub.c:3994\n  kmalloc include/linux/slab.h:594 [inline]\n  kzalloc include/linux/slab.h:711 [inline]\n  fib6_info_alloc+0x2e/0xf0 net/ipv6/ip6_fib.c:155\n  ip6_route_info_create+0x445/0x12b0 net/ipv6/route.c:3758\n  ip6_route_multipath_add net/ipv6/route.c:5298 [inline]\n  inet6_rtm_newroute+0x744/0x2300 net/ipv6/route.c:5517\n  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597\n  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543\n  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367\n  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x221/0x270 net/socket.c:745\n  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584\n  ___sys_sendmsg net/socket.c:2638 [inline]\n  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667\n do_syscall_64+0xf9/0x240\n entry_SYSCALL_64_after_hwframe+0x6f/0x77\n\nFreed by task 16:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  kasan_save_free_info+0x4e/0x60 mm/kasan/generic.c:640\n  poison_slab_object+0xa6/0xe0 m\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26855",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ice: Fix potential NULL pointer dereference in ice_bridge_setlink()\n\nThe function ice_bridge_setlink() may encounter a NULL pointer dereference\nif nlmsg_find_attr() returns NULL and br_spec is dereferenced subsequently\nin nla_for_each_nested(). To address this issue, add a check to ensure that\nbr_spec is not NULL before proceeding with the nested attribute iteration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: make sure to pull inner header in geneve_rx()\n\nsyzbot triggered a bug in geneve_rx() [1]\n\nIssue is similar to the one I fixed in commit 8d975c15c0cd\n(\"ip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\")\n\nWe have to save skb-\u003enetwork_header in a temporary variable\nin order to be able to recompute the network_header pointer\nafter a pskb_inet_may_pull() call.\n\npskb_inet_may_pull() makes sure the needed headers are in skb-\u003ehead.\n\n[1]\nBUG: KMSAN: uninit-value in IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]\n BUG: KMSAN: uninit-value in geneve_rx drivers/net/geneve.c:279 [inline]\n BUG: KMSAN: uninit-value in geneve_udp_encap_recv+0x36f9/0x3c10 drivers/net/geneve.c:391\n  IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]\n  geneve_rx drivers/net/geneve.c:279 [inline]\n  geneve_udp_encap_recv+0x36f9/0x3c10 drivers/net/geneve.c:391\n  udp_queue_rcv_one_skb+0x1d39/0x1f20 net/ipv4/udp.c:2108\n  udp_queue_rcv_skb+0x6ae/0x6e0 net/ipv4/udp.c:2186\n  udp_unicast_rcv_skb+0x184/0x4b0 net/ipv4/udp.c:2346\n  __udp4_lib_rcv+0x1c6b/0x3010 net/ipv4/udp.c:2422\n  udp_rcv+0x7d/0xa0 net/ipv4/udp.c:2604\n  ip_protocol_deliver_rcu+0x264/0x1300 net/ipv4/ip_input.c:205\n  ip_local_deliver_finish+0x2b8/0x440 net/ipv4/ip_input.c:233\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip_local_deliver+0x21f/0x490 net/ipv4/ip_input.c:254\n  dst_input include/net/dst.h:461 [inline]\n  ip_rcv_finish net/ipv4/ip_input.c:449 [inline]\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip_rcv+0x46f/0x760 net/ipv4/ip_input.c:569\n  __netif_receive_skb_one_core net/core/dev.c:5534 [inline]\n  __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5648\n  process_backlog+0x480/0x8b0 net/core/dev.c:5976\n  __napi_poll+0xe3/0x980 net/core/dev.c:6576\n  napi_poll net/core/dev.c:6645 [inline]\n  net_rx_action+0x8b8/0x1870 net/core/dev.c:6778\n  __do_softirq+0x1b7/0x7c5 kernel/softirq.c:553\n  do_softirq+0x9a/0xf0 kernel/softirq.c:454\n  __local_bh_enable_ip+0x9b/0xa0 kernel/softirq.c:381\n  local_bh_enable include/linux/bottom_half.h:33 [inline]\n  rcu_read_unlock_bh include/linux/rcupdate.h:820 [inline]\n  __dev_queue_xmit+0x2768/0x51c0 net/core/dev.c:4378\n  dev_queue_xmit include/linux/netdevice.h:3171 [inline]\n  packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8aef/0x9f10 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  __sys_sendto+0x735/0xa10 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:3819 [inline]\n  slab_alloc_node mm/slub.c:3860 [inline]\n  kmem_cache_alloc_node+0x5cb/0xbc0 mm/slub.c:3903\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n  __alloc_skb+0x352/0x790 net/core/skbuff.c:651\n  alloc_skb include/linux/skbuff.h:1296 [inline]\n  alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6394\n  sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2783\n  packet_alloc_skb net/packet/af_packet.c:2930 [inline]\n  packet_snd net/packet/af_packet.c:3024 [inline]\n  packet_sendmsg+0x70c2/0x9f10 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  __sys_sendto+0x735/0xa10 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26859",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/bnx2x: Prevent access to a freed page in page_pool\n\nFix race condition leading to system crash during EEH error handling\n\nDuring EEH error recovery, the bnx2x driver's transmit timeout logic\ncould cause a race condition when handling reset tasks. The\nbnx2x_tx_timeout() schedules reset tasks via bnx2x_sp_rtnl_task(),\nwhich ultimately leads to bnx2x_nic_unload(). In bnx2x_nic_unload()\nSGEs are freed using bnx2x_free_rx_sge_range(). However, this could\noverlap with the EEH driver's attempt to reset the device using\nbnx2x_io_slot_reset(), which also tries to free SGEs. This race\ncondition can result in system crashes due to accessing freed memory\nlocations in bnx2x_free_rx_sge()\n\n799  static inline void bnx2x_free_rx_sge(struct bnx2x *bp,\n800\t\t\t\tstruct bnx2x_fastpath *fp, u16 index)\n801  {\n802\tstruct sw_rx_page *sw_buf = \u0026fp-\u003erx_page_ring[index];\n803     struct page *page = sw_buf-\u003epage;\n....\nwhere sw_buf was set to NULL after the call to dma_unmap_page()\nby the preceding thread.\n\n    EEH: Beginning: 'slot_reset'\n    PCI 0011:01:00.0#10000: EEH: Invoking bnx2x-\u003eslot_reset()\n    bnx2x: [bnx2x_io_slot_reset:14228(eth1)]IO slot reset initializing...\n    bnx2x 0011:01:00.0: enabling device (0140 -\u003e 0142)\n    bnx2x: [bnx2x_io_slot_reset:14244(eth1)]IO slot reset --\u003e driver unload\n    Kernel attempted to read user page (0) - exploit attempt? (uid: 0)\n    BUG: Kernel NULL pointer dereference on read at 0x00000000\n    Faulting instruction address: 0xc0080000025065fc\n    Oops: Kernel access of bad area, sig: 11 [#1]\n    .....\n    Call Trace:\n    [c000000003c67a20] [c00800000250658c] bnx2x_io_slot_reset+0x204/0x610 [bnx2x] (unreliable)\n    [c000000003c67af0] [c0000000000518a8] eeh_report_reset+0xb8/0xf0\n    [c000000003c67b60] [c000000000052130] eeh_pe_report+0x180/0x550\n    [c000000003c67c70] [c00000000005318c] eeh_handle_normal_event+0x84c/0xa60\n    [c000000003c67d50] [c000000000053a84] eeh_event_handler+0xf4/0x170\n    [c000000003c67da0] [c000000000194c58] kthread+0x1c8/0x1d0\n    [c000000003c67e10] [c00000000000cf64] ret_from_kernel_thread+0x5c/0x64\n\nTo solve this issue, we need to verify page pool allocations before\nfreeing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26878",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nquota: Fix potential NULL pointer dereference\n\nBelow race may cause NULL pointer dereference\n\nP1\t\t\t\t\tP2\ndquot_free_inode\t\t\tquota_off\n\t\t\t\t\t  drop_dquot_ref\n\t\t\t\t\t   remove_dquot_ref\n\t\t\t\t\t   dquots = i_dquot(inode)\n  dquots = i_dquot(inode)\n  srcu_read_lock\n  dquots[cnt]) != NULL (1)\n\t\t\t\t\t     dquots[type] = NULL (2)\n  spin_lock(\u0026dquots[cnt]-\u003edq_dqb_lock) (3)\n   ....\n\nIf dquot_free_inode(or other routines) checks inode's quota pointers (1)\nbefore quota_off sets it to NULL(2) and use it (3) after that, NULL pointer\ndereference will be triggered.\n\nSo let's fix it by using a temporary pointer to avoid this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26883",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix stackmap overflow check on 32-bit arches\n\nThe stackmap code relies on roundup_pow_of_two() to compute the number\nof hash buckets, and contains an overflow check by checking if the\nresulting value is 0. However, on 32-bit arches, the roundup code itself\ncan overflow by doing a 32-bit left-shift of an unsigned long value,\nwhich is undefined behaviour, so it is not guaranteed to truncate\nneatly. This was triggered by syzbot on the DEVMAP_HASH type, which\ncontains the same check, copied from the hashtab code.\n\nThe commit in the fixes tag actually attempted to fix this, but the fix\ndid not account for the UB, so the fix only works on CPUs where an\noverflow does result in a neat truncation to zero, which is not\nguaranteed. Checking the value before rounding does not have this\nproblem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix hashtab overflow check on 32-bit arches\n\nThe hashtab code relies on roundup_pow_of_two() to compute the number of\nhash buckets, and contains an overflow check by checking if the\nresulting value is 0. However, on 32-bit arches, the roundup code itself\ncan overflow by doing a 32-bit left-shift of an unsigned long value,\nwhich is undefined behaviour, so it is not guaranteed to truncate\nneatly. This was triggered by syzbot on the DEVMAP_HASH type, which\ncontains the same check, copied from the hashtab code. So apply the same\nfix to hashtab, by moving the overflow check to before the roundup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndo_sys_name_to_handle(): use kzalloc() to fix kernel-infoleak\n\nsyzbot identified a kernel information leak vulnerability in\ndo_sys_name_to_handle() and issued the following report [1].\n\n[1]\n\"BUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_user+0xbc/0x100 lib/usercopy.c:40\n instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n _copy_to_user+0xbc/0x100 lib/usercopy.c:40\n copy_to_user include/linux/uaccess.h:191 [inline]\n do_sys_name_to_handle fs/fhandle.c:73 [inline]\n __do_sys_name_to_handle_at fs/fhandle.c:112 [inline]\n __se_sys_name_to_handle_at+0x949/0xb10 fs/fhandle.c:94\n __x64_sys_name_to_handle_at+0xe4/0x140 fs/fhandle.c:94\n ...\n\nUninit was created at:\n slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\n slab_alloc_node mm/slub.c:3478 [inline]\n __kmem_cache_alloc_node+0x5c9/0x970 mm/slub.c:3517\n __do_kmalloc_node mm/slab_common.c:1006 [inline]\n __kmalloc+0x121/0x3c0 mm/slab_common.c:1020\n kmalloc include/linux/slab.h:604 [inline]\n do_sys_name_to_handle fs/fhandle.c:39 [inline]\n __do_sys_name_to_handle_at fs/fhandle.c:112 [inline]\n __se_sys_name_to_handle_at+0x441/0xb10 fs/fhandle.c:94\n __x64_sys_name_to_handle_at+0xe4/0x140 fs/fhandle.c:94\n ...\n\nBytes 18-19 of 20 are uninitialized\nMemory access of size 20 starts at ffff888128a46380\nData copied to user address 0000000020000240\"\n\nPer Chuck Lever's suggestion, use kzalloc() instead of kmalloc() to\nsolve the problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Fix fortify source warning while accessing Eth segment\n\n ------------[ cut here ]------------\n memcpy: detected field-spanning write (size 56) of single field \"eseg-\u003einline_hdr.start\" at /var/lib/dkms/mlnx-ofed-kernel/5.8/build/drivers/infiniband/hw/mlx5/wr.c:131 (size 2)\n WARNING: CPU: 0 PID: 293779 at /var/lib/dkms/mlnx-ofed-kernel/5.8/build/drivers/infiniband/hw/mlx5/wr.c:131 mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n Modules linked in: 8021q garp mrp stp llc rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_umad(OE) mlx5_ib(OE) ib_uverbs(OE) ib_core(OE) mlx5_core(OE) pci_hyperv_intf mlxdevm(OE) mlx_compat(OE) tls mlxfw(OE) psample nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables libcrc32c nfnetlink mst_pciconf(OE) knem(OE) vfio_pci vfio_pci_core vfio_iommu_type1 vfio iommufd irqbypass cuse nfsv3 nfs fscache netfs xfrm_user xfrm_algo ipmi_devintf ipmi_msghandler binfmt_misc crct10dif_pclmul crc32_pclmul polyval_clmulni polyval_generic ghash_clmulni_intel sha512_ssse3 snd_pcsp aesni_intel crypto_simd cryptd snd_pcm snd_timer joydev snd soundcore input_leds serio_raw evbug nfsd auth_rpcgss nfs_acl lockd grace sch_fq_codel sunrpc drm efi_pstore ip_tables x_tables autofs4 psmouse virtio_net net_failover failover floppy\n  [last unloaded: mlx_compat(OE)]\n CPU: 0 PID: 293779 Comm: ssh Tainted: G           OE      6.2.0-32-generic #32~22.04.1-Ubuntu\n Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n RIP: 0010:mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n Code: 0c 01 00 a8 01 75 25 48 8b 75 a0 b9 02 00 00 00 48 c7 c2 10 5b fd c0 48 c7 c7 80 5b fd c0 c6 05 57 0c 03 00 01 e8 95 4d 93 da \u003c0f\u003e 0b 44 8b 4d b0 4c 8b 45 c8 48 8b 4d c0 e9 49 fb ff ff 41 0f b7\n RSP: 0018:ffffb5b48478b570 EFLAGS: 00010046\n RAX: 0000000000000000 RBX: 0000000000000001 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\n RBP: ffffb5b48478b628 R08: 0000000000000000 R09: 0000000000000000\n R10: 0000000000000000 R11: 0000000000000000 R12: ffffb5b48478b5e8\n R13: ffff963a3c609b5e R14: ffff9639c3fbd800 R15: ffffb5b480475a80\n FS:  00007fc03b444c80(0000) GS:ffff963a3dc00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000556f46bdf000 CR3: 0000000006ac6003 CR4: 00000000003706f0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  \u003cTASK\u003e\n  ? show_regs+0x72/0x90\n  ? mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n  ? __warn+0x8d/0x160\n  ? mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n  ? report_bug+0x1bb/0x1d0\n  ? handle_bug+0x46/0x90\n  ? exc_invalid_op+0x19/0x80\n  ? asm_exc_invalid_op+0x1b/0x20\n  ? mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n  mlx5_ib_post_send_nodrain+0xb/0x20 [mlx5_ib]\n  ipoib_send+0x2ec/0x770 [ib_ipoib]\n  ipoib_start_xmit+0x5a0/0x770 [ib_ipoib]\n  dev_hard_start_xmit+0x8e/0x1e0\n  ? validate_xmit_skb_list+0x4d/0x80\n  sch_direct_xmit+0x116/0x3a0\n  __dev_xmit_skb+0x1fd/0x580\n  __dev_queue_xmit+0x284/0x6b0\n  ? _raw_spin_unlock_irq+0xe/0x50\n  ? __flush_work.isra.0+0x20d/0x370\n  ? push_pseudo_header+0x17/0x40 [ib_ipoib]\n  neigh_connected_output+0xcd/0x110\n  ip_finish_output2+0x179/0x480\n  ? __smp_call_single_queue+0x61/0xa0\n  __ip_finish_output+0xc3/0x190\n  ip_finish_output+0x2e/0xf0\n  ip_output+0x78/0x110\n  ? __pfx_ip_finish_output+0x10/0x10\n  ip_local_out+0x64/0x70\n  __ip_queue_xmit+0x18a/0x460\n  ip_queue_xmit+0x15/0x30\n  __tcp_transmit_skb+0x914/0x9c0\n  tcp_write_xmit+0x334/0x8d0\n  tcp_push_one+0x3c/0x60\n  tcp_sendmsg_locked+0x2e1/0xac0\n  tcp_sendmsg+0x2d/0x50\n  inet_sendmsg+0x43/0x90\n  sock_sendmsg+0x68/0x80\n  sock_write_iter+0x93/0x100\n  vfs_write+0x326/0x3c0\n  ksys_write+0xbd/0xf0\n  ? do_syscall_64+0x69/0x90\n  __x64_sys_write+0x19/0x30\n  do_syscall_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: validate the parameters of bo mapping operations more clearly\n\nVerify the parameters of\namdgpu_vm_bo_(map/replace_map/clearing_mappings) in one common place.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26929",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix double free of the ha-\u003evp_map pointer\n\nCoverity scan reported potential risk of double free of the pointer\nha-\u003evp_map.  ha-\u003evp_map was freed in qla2x00_mem_alloc(), and again freed\nin function qla2x00_mem_free(ha).\n\nAssign NULL to vp_map and kfree take care of NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix command flush on cable pull\n\nSystem crash due to command failed to flush back to SCSI layer.\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000000\n PGD 0 P4D 0\n Oops: 0000 [#1] SMP NOPTI\n CPU: 27 PID: 793455 Comm: kworker/u130:6 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-372.9.1.el8.x86_64 #1\n Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021\n Workqueue: nvme-wq nvme_fc_connect_ctrl_work [nvme_fc]\n RIP: 0010:__wake_up_common+0x4c/0x190\n Code: 24 10 4d 85 c9 74 0a 41 f6 01 04 0f 85 9d 00 00 00 48 8b 43 08 48 83 c3 08 4c 8d 48 e8 49 8d 41 18 48 39 c3 0f 84 f0 00 00 00 \u003c49\u003e 8b 41 18 89 54 24 08 31 ed 4c 8d 70 e8 45 8b 29 41 f6 c5 04 75\n RSP: 0018:ffff95f3e0cb7cd0 EFLAGS: 00010086\n RAX: 0000000000000000 RBX: ffff8b08d3b26328 RCX: 0000000000000000\n RDX: 0000000000000001 RSI: 0000000000000003 RDI: ffff8b08d3b26320\n RBP: 0000000000000001 R08: 0000000000000000 R09: ffffffffffffffe8\n R10: 0000000000000000 R11: ffff95f3e0cb7a60 R12: ffff95f3e0cb7d20\n R13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000\n FS:  0000000000000000(0000) GS:ffff8b2fdf6c0000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000002f1e410002 CR4: 00000000007706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n  __wake_up_common_lock+0x7c/0xc0\n  qla_nvme_ls_req+0x355/0x4c0 [qla2xxx]\n qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae1407ca000 from port 21:32:00:02:ac:07:ee:b8 loop_id 0x02 s_id 01:02:00 logout 1 keep 0 els_logo 0\n ? __nvme_fc_send_ls_req+0x260/0x380 [nvme_fc]\n qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:00:02:ac:07:ee:b8 state transitioned from ONLINE to LOST - portid=010200.\n  ? nvme_fc_send_ls_req.constprop.42+0x1a/0x45 [nvme_fc]\n qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320002ac07eeb8. rport ffff8ae598122000 roles 1\n ? nvme_fc_connect_ctrl_work.cold.63+0x1e3/0xa7d [nvme_fc]\n qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae14801e000 from port 21:32:01:02:ad:f7:ee:b8 loop_id 0x04 s_id 01:02:01 logout 1 keep 0 els_logo 0\n  ? __switch_to+0x10c/0x450\n ? process_one_work+0x1a7/0x360\n qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:01:02:ad:f7:ee:b8 state transitioned from ONLINE to LOST - portid=010201.\n  ? worker_thread+0x1ce/0x390\n  ? create_worker+0x1a0/0x1a0\n qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320102adf7eeb8. rport ffff8ae3b2312800 roles 70\n  ? kthread+0x10a/0x120\n qla2xxx [0000:12:00.1]-2112:3: qla_nvme_unregister_remote_port: unregister remoteport on ffff8ae14801e000 21320102adf7eeb8\n  ? set_kthread_struct+0x40/0x40\n qla2xxx [0000:12:00.1]-2110:3: remoteport_delete of ffff8ae14801e000 21320102adf7eeb8 completed.\n  ? ret_from_fork+0x1f/0x40\n qla2xxx [0000:12:00.1]-f086:3: qlt_free_session_done: waiting for sess ffff8ae14801e000 logout\n\nThe system was under memory stress where driver was not able to allocate an\nSRB to carry out error recovery of cable pull.  The failure to flush causes\nupper layer to start modifying scsi_cmnd.  When the system frees up some\nmemory, the subsequent cable pull trigger another command flush. At this\npoint the driver access a null pointer when attempting to DMA unmap the\nSGL.\n\nAdd a check to make sure commands are flush back on session tear down to\nprevent the null pointer access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add a dc_state NULL check in dc_state_release\n\n[How]\nCheck wheather state is NULL before releasing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26993",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: sysfs: Fix reference leak in sysfs_break_active_protection()\n\nThe sysfs_break_active_protection() routine has an obvious reference\nleak in its error path.  If the call to kernfs_find_and_get() fails then\nkn will be NULL, so the companion sysfs_unbreak_active_protection()\nroutine won't get called (and would only cause an access violation by\ntrying to dereference kn-\u003eparent if it was called).  As a result, the\nreference to kobj acquired at the start of the function will never be\nreleased.\n\nFix the leak by adding an explicit kobject_put() call when kn is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntun: limit printing rate when illegal packet received by tun dev\n\nvhost_worker will call tun call backs to receive packets. If too many\nillegal packets arrives, tun_do_read will keep dumping packet contents.\nWhen console is enabled, it will costs much more cpu time to dump\npacket and soft lockup will be detected.\n\nnet_ratelimit mechanism can be used to limit the dumping rate.\n\nPID: 33036    TASK: ffff949da6f20000  CPU: 23   COMMAND: \"vhost-32980\"\n #0 [fffffe00003fce50] crash_nmi_callback at ffffffff89249253\n #1 [fffffe00003fce58] nmi_handle at ffffffff89225fa3\n #2 [fffffe00003fceb0] default_do_nmi at ffffffff8922642e\n #3 [fffffe00003fced0] do_nmi at ffffffff8922660d\n #4 [fffffe00003fcef0] end_repeat_nmi at ffffffff89c01663\n    [exception RIP: io_serial_in+20]\n    RIP: ffffffff89792594  RSP: ffffa655314979e8  RFLAGS: 00000002\n    RAX: ffffffff89792500  RBX: ffffffff8af428a0  RCX: 0000000000000000\n    RDX: 00000000000003fd  RSI: 0000000000000005  RDI: ffffffff8af428a0\n    RBP: 0000000000002710   R8: 0000000000000004   R9: 000000000000000f\n    R10: 0000000000000000  R11: ffffffff8acbf64f  R12: 0000000000000020\n    R13: ffffffff8acbf698  R14: 0000000000000058  R15: 0000000000000000\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #5 [ffffa655314979e8] io_serial_in at ffffffff89792594\n #6 [ffffa655314979e8] wait_for_xmitr at ffffffff89793470\n #7 [ffffa65531497a08] serial8250_console_putchar at ffffffff897934f6\n #8 [ffffa65531497a20] uart_console_write at ffffffff8978b605\n #9 [ffffa65531497a48] serial8250_console_write at ffffffff89796558\n #10 [ffffa65531497ac8] console_unlock at ffffffff89316124\n #11 [ffffa65531497b10] vprintk_emit at ffffffff89317c07\n #12 [ffffa65531497b68] printk at ffffffff89318306\n #13 [ffffa65531497bc8] print_hex_dump at ffffffff89650765\n #14 [ffffa65531497ca8] tun_do_read at ffffffffc0b06c27 [tun]\n #15 [ffffa65531497d38] tun_recvmsg at ffffffffc0b06e34 [tun]\n #16 [ffffa65531497d68] handle_rx at ffffffffc0c5d682 [vhost_net]\n #17 [ffffa65531497ed0] vhost_worker at ffffffffc0c644dc [vhost]\n #18 [ffffa65531497f10] kthread at ffffffff892d2e72\n #19 [ffffa65531497f50] ret_from_fork at ffffffff89c0022f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Prevent deadlock while disabling aRFS\n\nWhen disabling aRFS under the `priv-\u003estate_lock`, any scheduled\naRFS works are canceled using the `cancel_work_sync` function,\nwhich waits for the work to end if it has already started.\nHowever, while waiting for the work handler, the handler will\ntry to acquire the `state_lock` which is already acquired.\n\nThe worker acquires the lock to delete the rules if the state\nis down, which is not the worker's responsibility since\ndisabling aRFS deletes the rules.\n\nAdd an aRFS state variable, which indicates whether the aRFS is\nenabled and prevent adding rules when the aRFS is disabled.\n\nKernel log:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.7.0-rc4_net_next_mlx5_5483eb2 #1 Tainted: G          I\n------------------------------------------------------\nethtool/386089 is trying to acquire lock:\nffff88810f21ce68 ((work_completion)(\u0026rule-\u003earfs_work)){+.+.}-{0:0}, at: __flush_work+0x74/0x4e0\n\nbut task is already holding lock:\nffff8884a1808cc0 (\u0026priv-\u003estate_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-\u003e #1 (\u0026priv-\u003estate_lock){+.+.}-{3:3}:\n       __mutex_lock+0x80/0xc90\n       arfs_handle_work+0x4b/0x3b0 [mlx5_core]\n       process_one_work+0x1dc/0x4a0\n       worker_thread+0x1bf/0x3c0\n       kthread+0xd7/0x100\n       ret_from_fork+0x2d/0x50\n       ret_from_fork_asm+0x11/0x20\n\n-\u003e #0 ((work_completion)(\u0026rule-\u003earfs_work)){+.+.}-{0:0}:\n       __lock_acquire+0x17b4/0x2c80\n       lock_acquire+0xd0/0x2b0\n       __flush_work+0x7a/0x4e0\n       __cancel_work_timer+0x131/0x1c0\n       arfs_del_rules+0x143/0x1e0 [mlx5_core]\n       mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n       mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n       ethnl_set_channels+0x28f/0x3b0\n       ethnl_default_set_doit+0xec/0x240\n       genl_family_rcv_msg_doit+0xd0/0x120\n       genl_rcv_msg+0x188/0x2c0\n       netlink_rcv_skb+0x54/0x100\n       genl_rcv+0x24/0x40\n       netlink_unicast+0x1a1/0x270\n       netlink_sendmsg+0x214/0x460\n       __sock_sendmsg+0x38/0x60\n       __sys_sendto+0x113/0x170\n       __x64_sys_sendto+0x20/0x30\n       do_syscall_64+0x40/0xe0\n       entry_SYSCALL_64_after_hwframe+0x46/0x4e\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(\u0026priv-\u003estate_lock);\n                               lock((work_completion)(\u0026rule-\u003earfs_work));\n                               lock(\u0026priv-\u003estate_lock);\n  lock((work_completion)(\u0026rule-\u003earfs_work));\n\n *** DEADLOCK ***\n\n3 locks held by ethtool/386089:\n #0: ffffffff82ea7210 (cb_lock){++++}-{3:3}, at: genl_rcv+0x15/0x40\n #1: ffffffff82e94c88 (rtnl_mutex){+.+.}-{3:3}, at: ethnl_default_set_doit+0xd3/0x240\n #2: ffff8884a1808cc0 (\u0026priv-\u003estate_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nstack backtrace:\nCPU: 15 PID: 386089 Comm: ethtool Tainted: G          I        6.7.0-rc4_net_next_mlx5_5483eb2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x60/0xa0\n check_noncircular+0x144/0x160\n __lock_acquire+0x17b4/0x2c80\n lock_acquire+0xd0/0x2b0\n ? __flush_work+0x74/0x4e0\n ? save_trace+0x3e/0x360\n ? __flush_work+0x74/0x4e0\n __flush_work+0x7a/0x4e0\n ? __flush_work+0x74/0x4e0\n ? __lock_acquire+0xa78/0x2c80\n ? lock_acquire+0xd0/0x2b0\n ? mark_held_locks+0x49/0x70\n __cancel_work_timer+0x131/0x1c0\n ? mark_held_locks+0x49/0x70\n arfs_del_rules+0x143/0x1e0 [mlx5_core]\n mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n ethnl_set_channels+0x28f/0x3b0\n ethnl_default_set_doit+0xec/0x240\n genl_family_rcv_msg_doit+0xd0/0x120\n genl_rcv_msg+0x188/0x2c0\n ? ethn\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: edia: dvbdev: fix a use-after-free\n\nIn dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed\nin several error-handling paths. However, *pdvbdev is not set to NULL\nafter dvbdev's deallocation, causing use-after-frees in many places,\nfor example, in the following call chain:\n\nbudget_register\n  |-\u003e dvb_dmxdev_init\n        |-\u003e dvb_register_device\n  |-\u003e dvb_dmxdev_release\n        |-\u003e dvb_unregister_device\n              |-\u003e dvb_remove_device\n                    |-\u003e dvb_device_put\n                          |-\u003e kref_put\n\nWhen calling dvb_unregister_device, dmxdev-\u003edvbdev (i.e. *pdvbdev in\ndvb_register_device) could point to memory that had been freed in\ndvb_register_device. Thereafter, this pointer is transferred to\nkref_put and triggering a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27046",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfp: flower: handle acti_netdevs allocation failure\n\nThe kmalloc_array() in nfp_fl_lag_do_work() will return null, if\nthe physical memory has run out. As a result, if we dereference\nthe acti_netdevs, the null pointer dereference bugs will happen.\n\nThis patch adds a check to judge whether allocation failure occurs.\nIf it happens, the delayed work will be rescheduled and try again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27054",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: fix double module refcount decrement\n\nOnce the discipline is associated with the device, deleting the device\ntakes care of decrementing the module's refcount.  Doing it manually on\nthis error path causes refcount to artificially decrease on each error\nwhile it should just stay the same.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: usbtv: Remove useless locks in usbtv_video_free()\n\nRemove locks calls in usbtv_video_free() because\nare useless and may led to a deadlock as reported here:\nhttps://syzkaller.appspot.com/x/bisect.txt?x=166dc872180000\nAlso remove usbtv_stop() call since it will be called when\nunregistering the device.\n\nBefore 'c838530d230b' this issue would only be noticed if you\ndisconnect while streaming and now it is noticeable even when\ndisconnecting while not streaming.\n\n\n[hverkuil: fix minor spelling mistake in log message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ttpci: fix two memleaks in budget_av_attach\n\nWhen saa7146_register_device and saa7146_vv_init fails, budget_av_attach\nshould free the resources it allocates, like the error-handling of\nttpci_budget_init does. Besides, there are two fixme comment refers to\nsuch deallocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27074",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: go7007: fix a memleak in go7007_load_encoder\n\nIn go7007_load_encoder, bounce(i.e. go-\u003eboot_fw), is allocated without\na deallocation thereafter. After the following call chain:\n\nsaa7134_go7007_init\n  |-\u003e go7007_boot_encoder\n        |-\u003e go7007_load_encoder\n  |-\u003e kfree(go)\n\ngo is freed and thus bounce is leaked.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27075",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvb-frontends: avoid stack overflow warnings with clang\n\nA previous patch worked around a KASAN issue in stv0367, now a similar\nproblem showed up with clang:\n\ndrivers/media/dvb-frontends/stv0367.c:1222:12: error: stack frame size (3624) exceeds limit (2048) in 'stv0367ter_set_frontend' [-Werror,-Wframe-larger-than]\n 1214 | static int stv0367ter_set_frontend(struct dvb_frontend *fe)\n\nRework the stv0367_writereg() function to be simpler and mark both\nregister access functions as noinline_for_stack so the temporary\ni2c_msg structures do not get duplicated on the stack when KASAN_STACK\nis enabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-tpg: fix some memleaks in tpg_alloc\n\nIn tpg_alloc, resources should be deallocated in each and every\nerror-handling paths, since they are allocated in for statements.\nOtherwise there would be memleaks because tpg_free is called only when\ntpg_alloc return 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27388",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: fix some memleaks in gssx_dec_option_array\n\nThe creds and oa-\u003edata need to be freed in the error-handling paths after\ntheir allocation. So this patch add these deallocations in the\ncorresponding paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:kernel-default-4.12.14-122.216.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28085",
      "Description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libblkid1-2.33.2-4.36.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libfdisk1-2.33.2-4.36.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libmount1-2.33.2-4.36.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libsmartcols1-2.33.2-4.36.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libuuid1-2.33.2-4.36.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:util-linux-2.33.2-4.36.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:util-linux-systemd-2.33.2-4.36.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28182",
      "Description": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libnghttp2-14-1.39.2-3.18.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2961",
      "Description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32487",
      "Description": "less through 653 allows OS command execution via a newline character in the name of a file, because quoting is mishandled in filename.c. Exploitation typically requires use with attacker-controlled file names, such as the files extracted from an untrusted archive. Exploitation also requires the LESSOPEN environment variable, but this is set by default in many common cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:less-458-7.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33599",
      "Description": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33600",
      "Description": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33601",
      "Description": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33602",
      "Description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34397",
      "Description": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:glib2-tools-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libgio-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libglib-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libgmodule-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:libgobject-2_0-0-2.48.2-12.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-3651",
      "Description": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-v20240609-x86-64:python3-idna-2.5-3.13.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}