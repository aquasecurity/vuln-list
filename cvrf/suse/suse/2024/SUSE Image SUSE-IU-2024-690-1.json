{
  "Title": "SUSE-IU-2024:690-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2024:690-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2024-07-27T01:00:00Z",
    "CurrentReleaseDate": "2024-07-27T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-04-27T14:37:41Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2024:690-1 / google/sles-12-sp5-sap-v20240727-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-12-sp5-sap-v20240727-x86-64 contains the following changes:\nPackage bind was updated:\n\n- Security Fixes:  * Validating DNS messages containing a lot of DNSSEC signatures\n    could cause excessive CPU load, leading to a denial-of-service\n    condition. This has been fixed. (CVE-2023-50387)\n    [bsc#1219823, bind-CVE-2023-50387-CVE-2023-50868.patch]\n  * Preparing an NSEC3 closest encloser proof could cause excessiv\n    CPU load, leading to a denial-of-service condition. This has\n    been fixed. (CVE-2023-50868)\n    [bsc#1219826, bind-CVE-2023-50387-CVE-2023-50868.patch]\n  * Parsing DNS messages with many different names could cause\n    excessive CPU load. This has been fixed. (CVE-2023-4408)\n    [bsc#1219851, bind-CVE-2023-4408.patch]\n\nPackage libzypp was updated:\n\n- Url: Hide known password entires when writing the query part  (bsc#1050625 bsc#1177583, CVE-2017-9271)\n- version 16.22.13 (0)\n\nPackage _product:sle-sdk-release was updated:\n\nPackage mozilla-nss was updated:\n\n- Added nss-fips-safe-memset.patch, fixing bsc#1222811.- Removed some dead code from nss-fips-constructor-self-tests.patch.\n- Rebased nss-fips-approved-crypto-non-ec.patch on above changes.\n- Added nss-fips-aes-gcm-restrict.patch, fixing bsc#1222830.\n- Updated nss-fips-approved-crypto-non-ec.patch, fixing bsc#1222813,\n  bsc#1222814, bsc#1222821, bsc#1222822, bsc#1224118.\n- Updated nss-fips-approved-crypto-non-ec.patch and\n  nss-fips-constructor-self-tests.patch, fixing bsc#1222807,\n  bsc#1222828, bsc#1222834.\n- Updated nss-fips-approved-crypto-non-ec.patch, fixing bsc#1222804,\n  bsc#1222826, bsc#1222833, bsc#1224113, bsc#1224115, bsc#1224116.\n\n- update to NSS 3.101.1\n  * bmo#1901932 - missing sqlite header.\n  * bmo#1901080 - GLOBALTRUST 2020: Set Distrust After for TLS and S/MIME.\n- update to NSS 3.101\n  * bmo#1900413 - add diagnostic assertions for SFTKObject refcount.\n  * bmo#1899759 - freeing the slot in DeleteCertAndKey if authentication failed\n  * bmo#1899883 - fix formatting issues.\n  * bmo#1889671 - Add Firmaprofesional CA Root-A Web to NSS.\n  * bmo#1899593 - remove invalid acvp fuzz test vectors.\n  * bmo#1898830 - pad short P-384 and P-521 signatures gtests.\n  * bmo#1898627 - remove unused FreeBL ECC code.\n  * bmo#1898830 - pad short P-384 and P-521 signatures.\n  * bmo#1898825 - be less strict about ECDSA private key length.\n  * bmo#1854439 - Integrate HACL* P-521.\n  * bmo#1854438 - Integrate HACL* P-384.\n  * bmo#1898074 - memory leak in create_objects_from_handles.\n  * bmo#1898858 - ensure all input is consumed in a few places in mozilla::pkix\n  * bmo#1884444 - SMIME/CMS and PKCS #12 do not integrate with modern NSS policy\n  * bmo#1748105 - clean up escape handling\n  * bmo#1896353 - Use lib::pkix as default validator instead of the old-one\n  * bmo#1827444 - Need to add high level support for PQ signing.\n  * bmo#1548723 - Certificate Compression: changing the allocation/freeing of buffer + Improving the documentation\n  * bmo#1884444 - SMIME/CMS and PKCS #12 do not integrate with modern NSS policy\n  * bmo#1893404 - Allow for non-full length ecdsa signature when using softoken\n  * bmo#1830415 - Modification of .taskcluster.yml due to mozlint indent defects\n  * bmo#1793811 - Implement support for PBMAC1 in PKCS#12\n  * bmo#1897487 - disable VLA warnings for fuzz builds.\n  * bmo#1895032 - remove redundant AllocItem implementation.\n  * bmo#1893334 - add PK11_ReadDistrustAfterAttribute.\n  * bmo#215997  - Clang-formatting of SEC_GetMgfTypeByOidTag update\n  * bmo#1895012 - Set SEC_ERROR_LIBRARY_FAILURE on self-test failure\n  * bmo#1894572 - sftk_getParameters(): Fix fallback to default variable after error with configfile.\n  * bmo#1830415 - Switch to the mozillareleases/image_builder image\n- Follow upstream changes in nss-fips-constructor-self-tests.patch (switch from ec_field_GFp to ec_field_plain)\n- Remove part of nss-fips-zeroization.patch that got removed upstream\n- update to NSS 3.100\n  - bmo#1893029 - merge pk11_kyberSlotList into pk11_ecSlotList for\n    faster Xyber operations.\n  - bmo#1893752 - remove ckcapi.\n  - bmo#1893162 - avoid a potential PK11GenericObject memory leak.\n  - bmo#671060  - Remove incomplete ESDH code.\n  - bmo#215997  - Decrypt RSA OAEP encrypted messages.\n  - bmo#1887996 - Fix certutil CRLDP URI code.\n  - bmo#1890069 - Don't set CKA_DERIVE for CKK_EC_EDWARDS private keys.\n  - bmo#676118  - Add ability to encrypt and decrypt CMS messages using ECDH.\n  - bmo#676100  - Correct Templates for key agreement in smime/cmsasn.c.\n  - bmo#1548723 - Moving the decodedCert allocation to NSS.\n  - bmo#1885404 - Allow developers to speed up repeated local execution\n    of NSS tests that depend on certificates.\n- update to NSS 3.99\n  * Removing check for message len in ed25519 (bmo#1325335)\n  * add ed25519 to SECU_ecName2params. (bmo#1884276)\n  * add EdDSA wycheproof tests. (bmo#1325335)\n  * nss/lib layer code for EDDSA. (bmo#1325335)\n  * Adding EdDSA implementation. (bmo#1325335)\n  * Exporting Certificate Compression types (bmo#1881027)\n  * Updating ACVP docker to rust 1.74 (bmo#1880857)\n  * Updating HACL* to 0f136f28935822579c244f287e1d2a1908a7e552 (bmo#1325335)\n  * Add NSS_CMSRecipient_IsSupported. (bmo#1877730)\n- update to NSS 3.98\n  * bmo#1780432 - (CVE-2023-5388) Timing attack against RSA decryption\n    in TLS\n  * bmo#1879513 - Certificate Compression: enabling the check that\n    the compression was advertised\n  * bmo#1831552 - Move Windows workers to nss-1/b-win2022-alpha\n  * bmo#1879945 - Remove Email trust bit from OISTE WISeKey\n    Global Root GC CA\n  * bmo#1877344 - Replace `distutils.spawn.find_executable` with\n    `shutil.which` within `mach` in `nss`\n  * bmo#1548723 - Certificate Compression: Updating nss_bogo_shim to\n    support Certificate compression\n  * bmo#1548723 - TLS Certificate Compression (RFC 8879) Implementation\n  * bmo#1875356 - Add valgrind annotations to freebl kyber operations\n    for constant-time execution tests\n  * bmo#1870673 - Set nssckbi version number to 2.66\n  * bmo#1874017 - Add Telekom Security roots\n  * bmo#1873095 - Add D-Trust 2022 S/MIME roots\n  * bmo#1865450 - Remove expired Security Communication RootCA1 root\n  * bmo#1876179 - move keys to a slot that supports concatenation in\n    PK11_ConcatSymKeys\n  * bmo#1876800 - remove unmaintained tls-interop tests\n  * bmo#1874937 - bogo: add support for the -ipv6 and -shim-id shim\n    flags\n  * bmo#1874937 - bogo: add support for the -curves shim flag and\n    update Kyber expectations\n  * bmo#1874937 - bogo: adjust expectation for a key usage bit test\n  * bmo#1757758 - mozpkix: add option to ignore invalid subject\n    alternative names\n  * bmo#1841029 - Fix selfserv not stripping `publicname:` from -X value\n  * bmo#1876390 - take ownership of ecckilla shims\n  * bmo#1874458 - add valgrind annotations to freebl/ec.c\n  * bmo#864039  - PR_INADDR_ANY needs PR_htonl before assignment to inet.ip\n  * bmo#1875965 - Update zlib to 1.3.1\n- Use %patch -P N instead of deprecated %patchN.\n- update to NSS 3.97\n  * bmo#1875506 - make Xyber768d00 opt-in by policy\n  * bmo#1871631 - add libssl support for xyber768d00\n  * bmo#1871630 - add PK11_ConcatSymKeys\n  * bmo#1775046 - add Kyber and a PKCS#11 KEM interface to softoken\n  * bmo#1871152 - add a FreeBL API for Kyber\n  * bmo#1826451 - part 2: vendor github.com/pq-crystals/kyber/commit/e0d1c6ff\n  * bmo#1826451 - part 1: add a script for vendoring kyber from pq-crystals repo\n  * bmo#1835828 - Removing the calls to RSA Blind from loader.*\n  * bmo#1874111 - fix worker type for level3 mac tasks\n  * bmo#1835828 - RSA Blind implementation\n  * bmo#1869642 - Remove DSA selftests\n  * bmo#1873296 - read KWP testvectors from JSON\n  * bmo#1822450 - Backed out changeset dcb174139e4f\n  * bmo#1822450 - Fix CKM_PBE_SHA1_DES2_EDE_CBC derivation\n  * bmo#1871219 - Wrap CC shell commands in gyp expansions\n- update to NSS 3.96.1\n  * bmo#1869408 - Use pypi dependencies for MacOS worker in ./build_gyp.sh\n  * bmo#1830978 - p7sign: add -a hash and -u certusage (also p7verify cleanups)\n  * bmo#1867408 - add a defensive check for large ssl_DefSend return values\n  * bmo#1869378 - Add dependency to the taskcluster script for Darwin\n  * bmo#1869378 - Upgrade version of the MacOS worker for the CI\n- add nss-allow-slow-tests-s390x.patch: \u0026quot;certutil dump keys with\n  explicit default trust flags\u0026quot; test needs longer than the allowed\n  6 seconds on s390x\n- update to NSS 3.95\n  * bmo#1842932 - Bump builtins version number.\n  * bmo#1851044 - Remove Email trust bit from Autoridad de Certificacion\n    Firmaprofesional CIF A62634068 root cert.\n  * bmo#1855318 - Remove 4 DigiCert (Symantec/Verisign) Root Certificates\n  * bmo#1851049 - Remove 3 TrustCor Root Certificates from NSS.\n  * bmo#1850982 - Remove Camerfirma root certificates from NSS.\n  * bmo#1842935 - Remove old Autoridad de Certificacion Firmaprofesional\n    Certificate.\n  * bmo#1860670 - Add four Commscope root certificates to NSS.\n  * bmo#1850598 - Add TrustAsia Global Root CA G3 and G4 root certificates.\n  * bmo#1863605 - Include P-384 and P-521 Scalar Validation from HACL*\n  * bmo#1861728 - Include P-256 Scalar Validation from HACL*.\n  * bmo#1861265 - After the HACL 256 ECC patch, NSS incorrectly encodes\n    256 ECC without DER wrapping at the softoken level\n  * bmo#1837987 - Add means to provide library parameters to C_Initialize\n  * bmo#1573097 - clang format\n  * bmo#1854795 - add OSXSAVE and XCR0 tests to AVX2 detection.\n  * bmo#1858241 - Typo in ssl3_AppendHandshakeNumber\n  * bmo#1858241 - Introducing input check of ssl3_AppendHandshakeNumber\n  * bmo#1573097 - Fix Invalid casts in instance.c\n- update to NSS 3.94\n  * bmo#1853737 - Updated code and commit ID for HACL*\n  * bmo#1840510 - update ACVP fuzzed test vector: refuzzed with\n    current NSS\n  * bmo#1827303 - Softoken C_ calls should use system FIPS setting\n    to select NSC_ or FC_ variants\n  * bmo#1774659 - NSS needs a database tool that can dump the low level\n    representation of the database\n  * bmo#1852179 - declare string literals using char in pkixnames_tests.cpp\n  * bmo#1852179 - avoid implicit conversion for ByteString\n  * bmo#1818766 - update rust version for acvp docker\n  * bmo#1852011 - Moving the init function of the mpi_ints before\n    clean-up in ec.c\n  * bmo#1615555 - P-256 ECDH and ECDSA from HACL*\n  * bmo#1840510 - Add ACVP test vectors to the repository\n  * bmo#1849077 - Stop relying on std::basic_string\u0026lt;uint8_t\u0026gt;\n  * bmo#1847845 - Transpose the PPC_ABI check from Makefile to gyp\n- rebased patches\n- added nss-fips-test.patch to fix broken test\n- Update to NSS 3.93:\n  * bmo#1849471 - Update zlib in NSS to 1.3.\n  * bmo#1848183 - softoken: iterate hashUpdate calls for long inputs.\n  * bmo#1813401 - regenerate NameConstraints test certificates (boo#1214980).\n- Rebase nss-fips-pct-pubkeys.patch.\n- update to NSS 3.92\n  * bmo#1822935 - Set nssckbi version number to 2.62\n  * bmo#1833270 - Add 4 Atos TrustedRoot Root CA certificates to NSS\n  * bmo#1839992 - Add 4 SSL.com Root CA certificates\n  * bmo#1840429 - Add Sectigo E46 and R46 Root CA certificates\n  * bmo#1840437 - Add LAWtrust Root CA2 (4096)\n  * bmo#1822936 - Remove E-Tugra Certification Authority root\n  * bmo#1827224 - Remove Camerfirma Chambers of Commerce Root.\n  * bmo#1840505 - Remove Hongkong Post Root CA 1\n  * bmo#1842928 - Remove E-Tugra Global Root CA ECC v3 and RSA v3\n  * bmo#1842937 - Avoid redefining BYTE_ORDER on hppa Linux\n- update to NSS 3.91\n  * bmo#1837431 - Implementation of the HW support check for ADX instruction\n  * bmo#1836925 - Removing the support of Curve25519\n  * bmo#1839795 - Fix comment about the addition of ticketSupportsEarlyData\n  * bmo#1839327 - Adding args to enable-legacy-db build\n  * bmo#1835357 - dbtests.sh failure in \u0026quot;certutil dump keys with explicit\n    default trust flags\u0026quot;\n  * bmo#1837617 - Initialize flags in slot structures\n  * bmo#1835425 - Improve the length check of RSA input to avoid heap overflow\n  * bmo#1829112 - Followup Fixes\n  * bmo#1784253 - avoid processing unexpected inputs by checking for\n    m_exptmod base sign\n  * bmo#1826652 - add a limit check on order_k to avoid infinite loop\n  * bmo#1834851 - Update HACL* to commit 5f6051d2\n  * bmo#1753026 - add SHA3 to cryptohi and softoken\n  * bmo#1753026 - HACL SHA3\n  * bmo#1836781 - Disabling ASM C25519 for A but X86_64\n- removed upstreamed patch nss-fix-bmo1836925.patch\n\n- update to NSS 3.90.3\n  * bmo#1901080 - GLOBALTRUST 2020: Set Distrust After for TLS and S/MIME.\n  * bmo#1748105 - clean up escape handling.\n  * bmo#1895032 - remove redundant AllocItem implementation.\n  * bmo#1836925 - Disable ASM support for Curve25519.\n  * bmo#1836781 - Disable ASM support for Curve25519 for all but X86_64.\n- remove upstreamed nss-fix-bmo1836925.patch\n\n- Adding nss-fips-bsc1223724.patch to fix startup crash of Firefox\n  when using FIPS-mode (bsc#1223724).\n\n- Added \u0026quot;Provides: nss\u0026quot; so other RPMs that require 'nss' can\n  be installed (jira PED-6358).\n\nPackage python3 was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Add CVE-2023-52425-libexpat-2.6.0-backport.patch fixing etree\n  XMLPullParser tests for Expat \u0026gt;=2.6.0 with reparse deferral\n  (fixing CVE-2023-52425 or bsc#1219559).\n\nPackage libfastjson was updated:\n\n- fix CVE-2020-12762 integer overflow and out-of-bounds write via a  large JSON file (bsc#1171479)\n  add 0001-Fix-CVE-2020-12762.patch\n\nPackage cups was updated:\n\n- cups-1.7.5-CVE-2024-35235.patch for CUPS 1.7.5 in SLE12  is derived from our cups-2.2.7-CVE-2024-35235.patch for SLE15\n  which was derived from the upstream patch for CUPS 2.5\n  to behave backward compatible for CUPS 1.7.5 in SLE12\n  to fix CVE-2024-35235\n  \u0026quot;cupsd Listen port arbitrary chmod 0140777\u0026quot;\n  without the more secure but backward-incompatible behaviour\n  of the upstream patch for CUPS 2.5\n  that ignores domain sockets specified in 'Listen' entries\n  in /etc/cups/cupsd.conf when cupsd is lauched via systemd\n  (in particular when launched on-demand by systemd)\n  https://github.com/OpenPrinting/cups/security/advisories/GHSA-vvwp-mv6j-hw6f\n  bsc#1225365\n\nPackage openldap2 was updated:\n\n- bsc#1217985 - Null pointer deref in referrals as part of  ldap_chain_response()\n  * 0229-ITS-9262-check-referral.patch\n\n- bsc#1220787 - increase DH param minimums to 2048 bits\n  * 0228-bsc-1220787-increase-dh-param-minimums.patch\n\nPackage google-cloud-sap-agent was updated:\n\n- Update to version 3.4 (bsc#1227134, bsc#1227135)  * Adding project to exclusion list\n  * Add machine type to configure instance proto for WLM metric collection.\n  * Add test channel for Guest Actions. Make default channel the registered channel.\n  * Set backup object's customTime field as part of backint backups\n  * Add workload discovery to configure command\n  * Add multiple workers support in parallelreader for parallel downloading during restore.\n  * `configureinstance` with `overrideVersion` set should log a warning and continue.\n  * Minor log change in balanceirq\n  * Add common function to parse parameters for guest action handlers\n  * BalanceIRQ OTE added to Agent for SAP\n  * Remove output from stdout for DIAGNOSE\n  * Small hyperThreading change for configureinstance\n  * Add initial steps to initialize the SystemDiscovery OTE in IIOTE and command mode.\n  * Adding single worker support in parallelreader for download.\n  * Read encryption key from file if specified in parameters file\n  * Run configureinstance OTE only on supported instances during WLM metric collection.\n  * Add instance ID to user agent string for SAP Agent.\n  * Return `UsageError` as exit status instead of `Failure` in case of invalid parameters\n  * Bumping up the agent version\n  * Use json marshalling instead of manually parsing from map in configure handler\n  * Move metric override modules to metricoverrides.go for general use\n  * Updating the gcbdr proto\n  * Updating param names to make it more clear in performance diagnostics\n  * Add DiskSizeGb to Disk for disk creation.\n  * Add Demo Metrics for Process Metrics\n  * Add warning message for configureinstance overrideVersion\n  * Add 3.3 to configureinstance versioning\n  * Fix log message in configureinstance\n  * Rename scope and param file to type and backint-param-file to avoid confusion\n  * Add new OTE structure for SystemDiscovery.\n  * Allows SAP system data to be read from an override file instead\n    of discovered from the system. Useful for testing.\n  * Refactor buildSupportBundleCommand by marshalling command parameters\n  * Remove cluster member check for cluster collection\n  * Add connectParameters as a function parameter in restoreFile function to have\n    multiple bucket handles in parallelreader for parallel downloading.\n  * Enable auto discovery of disks and make datadiskname and zone optional parameters\n  * Add support for performancediagnostics OTE guest action handler\n  * Add override version flag to configureinstance\n  * Rename LVM volume group of restored disk to that of the target disk.\n  * Sleep during TestCommunicateWithUAP to only execute intended\n    code path once instead of many times.\n  * Update grub configuration for X4 configureinstance\n  * Extend result-bucket support to support bundle guest action\n  * Add provisioned-iops and provisioned-throughput labels\n    to snapshots and extract them during restore.\n  * Configureinstance updates for SAP ECS\n  * Add sequential in parallel download functionality for restore to SAP Agent.\n  * Implement hanadiskbackup guest action handler\n  * Add operation_id to UAP status labels.\n  * Add user agent overrides for cloud monitoring\n  * Updating generated protobufs\n  * Update sanity check for fast collector metric\n  * Reliability Metrics - Use the usage metrics instead of\n    internal cloud monitoring metrics\n  * Fix restoreFromGroupSnapshot and restoreFromSingleSnapshot logic\n  * Implement support bundle handler. This CL follows a pattern for\n    implementing handler which was developed in cl/636640791\n  * Move timeseries.go and cloudmonitoring.go to shared/\n  * Only stop HANA monitoring if successive errors are auth related\n  * Use flag names for command parameters in configureHandler\n  * Add check and apply finished metrics to configureinstance\n  * Add snapshot / group backup name to success log message\n  * Better handling of experimental flag in hanamonitoring\n  * Return error if physical device is empty\n  * Added an experiemntal flag to control role based awareness in hana monitoring\n  * Adding role based awareness logic in HANA Monitoring\n  * Add upload feature to support bundle\n  * Add context to onetime logging functions\n  * Fix logging and make confirm-data-snapshot-after-create true by default\n  * Add debug logs for hanabackup to help troubleshoot issues.\n  * Remove HDB User requirement when HDBUserstore key is passed for hanadiskbackup\n  * Append labels to detached disk in hanadiskrestore\n  * Add placeholder for parallel reader in Backint\n  * Modify restore handlers to be able to restore from either\n    source snapshot or group snapshot.\n  * Modify checking preconditions and adding fakes for group snapshot restore.\n  * Add initial support for restoring from group snapshot.\n  * Add UAP Communication to startdaemon (gated by a configuration).\n  * Fixing the commands in perfdiag\n  * Refactor handleAgentCommand with guestActionsHandlers map\n  * Add replication sites to system component proto\n  * Build updated to use -mod=vendor during build\n  * Updated go.mod and go.sum with dependencies for safetext,\n    using go mod vendor for github action\n  * Adding changes for target based config in hana monitoring\n  * Overriding the user agent for Cloud Logging API calls\n  * Fix typo in guestactions.proto\n  * WLM Hana Full Backup Validation Metric collection\n  * Add configure command to guest actions. Establish how the new proto\n    format will be used in message handling.\n  * Add ping check to HANA monitoring\n  * [commandlineexecutor] Add the ability to directly pass data into Stdin, avoiding\n    the need for intermediary piping commands, such as \u0026quot;echo 'data' | my_app\u0026quot;.\n\n- Update to version 3.3 (bsc#1225166, bsc#1225558)\n  * Build updated to use -mod=vendor during build\n  * Updated go.mod and go.sum with dependencies for safetext,\n    using go mod vendor for github action\n  * Add actual values and comments to usagemetrics.go to ensure that\n    error and action codes are only appended to the end of the list.\n  * Remove usage metrics from configureinstance.go\n  * Add a hard Disable for reliability metrics collection\n    until the namespace is created and tested.\n  * Adding metrics for time taken by each query\n  * Add SHA224 of labels as a new label.\n  * Remove collect_reliability_metrics from configuration.json\n  * Small tweaks to backint log and inquire path generation\n  * Fix for unmarshalling backint configuration.\n  * Implementation of instant snapshot group backup workflow\n  * Backint changes around shorten_folder_path\n  * Rename max_diagnose_size_gb to diagnose_file_max_size_gb\n  * Adding start and finish logs in performance diagnostics\n  * Validate that all disks mapped to /hana/data belong to the same consistency group.\n  * Rename backint monitoring metrics parameter\n  * Trim folder prefix for Backint INQUIRE output.\n  * Add the ability to test the database connection\n  * Reduce log level of some storage messages to debug.\n  * Finalize guest action request and response format.\n  * Backint dashboard fix logs\n  * Add scorecards to backint dashboard\n  * Making proto changes for HANA Monitoring support\n    for multiple tennats and ha setup\n  * Add total upload/download time to log.\n  * Add HANA indexserver.ini metrics to WLM metric collection.\n  * Add Netweaver role metrics as part of process metrics\n  * Rotate old support bundles.\n  * Update the default value of confirm-data-snapshot-after-create\n    to false. and add to usage()\n  * Add option to confirm HANA snapshot as successful before disk snapshot is uploaded.\n  * Change log level from warn to info for non-critical messages.\n  * Add diagnose_folder parameter to Backint\n  * Add a 1 GB buffer to needed bytes for diagnostic\n  * Add labels to group snapshot backup.\n  * Enable the show status and restart agent functions for Windows.\n  * Add WLM metric collection for num_completion_queues and num_submit_queues.\n  * Collect support bundle on Backint errors.\n  * Adding usage metrics to performance diagnostics\n  * Collect agent-only support bundle on failure of backint and hanadiskbackup.\n  * Minor Backint improvements\n  * Add ability collect only agent logs using agent-logs-only flag to supportbundle\n  * Bump version to 3.3\n  * Add Backint metrics dashboard\n  * DO NOT remove log files on uninstall\n  * Adding more unit tests\n  * Changing location of zipped file to within the\n    final folder identified by unique timestamp.\n  * Minor refactorings and improvements with increasing code coverage\n  * Make sure DB instance number is recorded in System data.\n  * Change configuration.json to 0664 to ensure world cannot write.\n  * Add Netweaver Java discovery to SAP Agent.\n  * Add a new version of functions to read cloud properties from metadata server.\n  * Updating generated protos to proc-gen-go v1.34.1\n  * Updating runConfigureInstance method and adding unit tests\n    for covering configure instance ote invocation\n  * Zip the final bundle and add upload functionality\n  * Record database SID alongside tenant DB SIDs\n  * Reduce log severity in discovery\n  * Add HANA version to product version data\n  * Fix race condition in tests\n  * Read disk mapping from instance info if source disk\n    is not provided to hanadiskbackup\n  * Add option to shorten the folder path in the bucket.\n  * Add SSL support for cmdline-based querying and some bugfixes\n  * Move recovery package to shared directory.\n  * Update protoc-gen-go version to v1.34.0 in multiple protos\n  * Adding FIO commands to performance diagnostics\n  * Remove error logs when errors are being returned\n  * Adding perfdiag to performance diagnostics\n  * Add AppInstance data to discovery data uploads.\n  * Introduce protos for guestactions messages and responses.\n    Support multiple commands per message.\n  * Update wording for HANA Insights rules.\n  * Configureinstance updates.\n  * Adding a check for retention policy before performing backup operation.\n  * Remove the unused loglevel flag from logusage OTE\n  * Change the language around the default parameters being\n    optimized for performance in backint\n  * Add instance role to SAP System properties\n  * Increase wait time for index server to stop.\n  * Integrating backint OTE into performancediagnostics\n  * Update wording around configureinstance unsupported machine type.\n  * Pass the right disk name to check if disk is attached\n  * Integrating new DB Handle and hdbuserstore key support\n    with remaining HANA DB dependant workflows\n  * Refactor HANA and filesystems specific code to a common hanabackup package\n  * Bumps x/net dependency to v0.23\n  * Append HANA Insights rule to WLM fake metrics file in script to generate WLM rule.\n  * Integrating configure instance ote in performance diagnostics\n  * Update disk backup OTE to parse paths even with /dev/mapper\n    in the middle of path, not necessarily as a prefix\n  * Adding a few missing labels to wlm-fake-metrics.yaml\n  * Changing loglevel for onetime.Init() calls\n  * Refactor change - Move PD related functions to gce.go\n  * Fix agentcommunication import replace statements\n  * Update replace functions for new open source dependencies.\n  * Set up scaffolding for guest actions handling in SAP Agent along with UAP library code\n  * Backint upload/download metrics sent to cloud monitoring.\n  * Cleaning up the performance diagntics file wth recent changes\n  * Fixes to usage strings in OTEs for optional params\n  * Integrating new database connector with HANA Monitoring\n    and adding support for HDBUserstore Key\n  * Implement hdbsql commandline result parsing\n  * SAP Discovery - Add SAP Instance Numbers to instance properties\n  * Updating OTEs to include params for when OTE is invoked internally\n  * Modifying flags to follow design changes\n  * Create fake WLM metric overrides for testing\n  * Implement constructors and query functions for querying\n    HANA DB via hdbuserstore using cmdline\n  * Skeleton for querying HANA DB via hdbuserstore using cmdline\n  * Parameterize Backint Diagnose max file size.\n  * Metadata parameter added to Backint.\n  * Adding initial layout for performance diagnostics OTE\n  * Create a new API CreateClient() in shared logging which\n    returns an error in case of failures\n  * Backint no longer writes ERROR if temporary chunk failed to delete.\n  * Create onetime.Init() to condense reused code.\n  * Fixing a typo in a process metrics retry logic comment\n  * Rename workload_validation param with workload_evaluation in configure OTE\n  * Send agent version in Write Insight requests\n  * Ensuring /sap/cluster/resources covers all the nodes.\n\nPackage avahi was updated:\n\n- Add avahi-CVE-2023-38472.patch: Fix reachable assertion in  avahi_rdata_parse (bsc#1216853, CVE-2023-38472).\n\n- Add avahi-CVE-2023-38470.patch: Ensure each label is at least one\n  byte long (bsc#1215947, CVE-2023-38470).\n\nPackage python-requests was updated:\n\n- Add CVE-2024-35195.patch (CVE-2024-35195, bsc#1224788)- Add httpbin.patch to fix a test failure caused by the previous patch.\n\nPackage tiff was updated:\n\n- security update:  * CVE-2023-3164 [bsc#1212233]\n    Fix heap buffer overflow in tiffcrop\n    + tiff-CVE-2023-3164.patch\n\nPackage google-guest-oslogin was updated:\n\n- Fix file permissions for google_authorized_principals binary (bsc#1222171)\n- Update to version 20240311.00 (bsc#1218548, bsc#1221900, bsc#1221901)\n  * pam: Bring back pam's account management implementation (#133)\n  * Change error messages when checking login policy (#129)\n  * Remove quintonamore from OWNERS (#128)\n\nPackage wicked was updated:\n\n- arp: increase arp-send retry value to avoid address configuration  failure due to ENOBUF reported by kernel while duplicate address\n  detection with underlying bonding in 802.3ad mode reporting link\n  \u0026quot;up \u0026amp; running\u0026quot; too early (bsc#1218668, gh#openSUSE/wicked#1020,\n  gh#openSUSE/wicked#1022).\n  [+ 0002-increase-arp-retry-attempts-on-sending-bsc1218668.patch]\n\n- client: fix ifreload to pull UP ports/links again when the config\n  of their master/lower changed (bsc#1224100,gh#openSUSE/wicked#1014).\n  [+ 0001-ifreload-pull-UP-again-on-master-lower-changes-bsc1224100.patch]\n\n- Update to version 0.6.75:\n  - cleanup: fix ni_fsm_state_t enum-int-mismatch warnings\n  - cleanup: fix overflow warnings in a socket testcase on i586\n  - ifcheck: report new and deleted configs as changed (bsc#1218926)\n  - man: improve ARP configuration options in the wicked-config.5\n  - bond: add ports when master is UP to avoid port MTU revert (bsc#1219108)\n  - cleanup: fix interface dependencies and shutdown order (bsc#1205604)\n  - Remove port arrays from bond,team,bridge,ovs-bridge (redundant)\n    and consistently use config and state info attached to the port\n    interface as in rtnetlink(7).\n  - Cleanup ifcfg parsing, schema configuration and service properties\n  - Migrate ports in xml config and policies already applied in nanny\n  - Remove \u0026quot;missed config\u0026quot; generation from finite state machine, which\n    is completed while parsing the config or while xml config migration.\n  - Issue a warning when \u0026quot;lower\u0026quot; interface (e.g. eth0) config is missed\n    while parsing config depending on it (e.g. eth0.42 vlan).\n  - Resolve ovs master to the effective bridge in config and wickedd\n  - Implement netif-check-state require checks using system relations\n    from wickedd/kernel instead of config relations for ifdown and add\n    linkDown and deleteDevice checks to all master and lower references.\n  - Add a `wicked \u0026lt;ifup|ifdown|ifreload\u0026gt; --dry-run â¦` option to show the\n    system/config interface hierarchies as notice with +/- marked\n    interfaces to setup and/or shutdown.\n- Removed patches included in the source archive:\n  [- 0001-addrconf-fix-fallback-lease-drop-bsc-1220996.patch]\n  [- 0002-extensions-nbft-replace-nvme-show-nbft-with-nvme-nbf.patch]\n  [- 0003-move-all-attribute-definitions-to-compiler-h.patch]\n  [- 0004-hide-secrets-in-debug-log-bsc-1221194.patch]\n  [- 0005-client-do-to-not-convert-sec-to-msec-twice-bsc-1222105.patch]\n\nPackage suseconnect-ng was updated:\n\n- Update to version 1.9.0  * Fix certificate import for Yast when using a registration proxy with\n    self-signed SSL certificate (bsc#1223107)\n\nPackage gcc13 was updated:\n\n- Update to GCC 13.3 release\n- Update to gcc-13 branch head, b7a2697733d19a093cbdd0e200, git8761\n- Removed gcc13-pr111731.patch now included upstream\n\n- Add gcc13-amdgcn-remove-fiji.patch removing Fiji support from\n  the GCN offload compiler as that is requiring Code Object version 3\n  which is no longer supported by llvm18.\n\n- Add gcc13-pr101523.patch to avoid combine spending too much\n  compile-time and memory doing nothing on s390x.  [boo#1188441]\n\n- Make requirement to lld version specific to avoid requiring the\n  meta-package.\n\n- Add gcc13-pr111731.patch to fix unwinding for JIT code.\n  [bsc#1221239]\n\n- Revert libgccjit dependency change.  [boo#1220724]\n\n- Fix libgccjit-devel dependency, a newer shared library is OK.\n- Fix libgccjit dependency, the corresponding compiler isn't required.\n\n- Use %patch -P N instead of %patchN.\n\n- Add gcc13-sanitizer-remove-crypt-interception.patch to remove\n  crypt and crypt_r interceptors.  The crypt API change in SLE15 SP3\n  breaks them.  [bsc#1219520]\n\n- Update to gcc-13 branch head, 67ac78caf31f7cb3202177e642, git8285\n- Add gcc13-pr88345-min-func-alignment.diff to add support for\n  - fmin-function-alignment.  [bsc#1214934]\n\n- Use %{_target_cpu} to determine host and build.\n\n- Update to gcc-13 branch head, fc7d87e0ffadca49bec29b2107, git8250\n  * Includes fix for building TVM.  [boo#1218492]\n\n- Add cross-X-newlib-devel requires to newlib cross compilers.\n  [boo#1219031]\n\n- Package m2rte.so plugin in the gcc13-m2 sub-package rather than\n  in gcc13-devel.  [boo#1210959]\n- Require libstdc++6-devel-gcc13 from gcc13-m2 as m2 programs\n  are linked against libstdc++6.\n\n- Update to gcc-13 branch head, 36ddb5230f56a30317630a928, git8205\n\n- Update to gcc-13 branch head, 741743c028dc00f27b9c8b1d5, git8109\n  * Includes fix for building mariadb on i686.  [bsc#1217667]\n  * Remove pr111411.patch contained in the update.\n\n- Avoid update-alternatives dependency for accelerator crosses.\n- Package tool links to llvm in cross-amdgcn-gcc13 rather than in\n  cross-amdgcn-newlib13-devel since that also has the dependence.\n- Depend on llvmVER instead of llvm with VER equal to\n  %product_libs_llvm_ver where available and adjust tool discovery\n  accordingly.  This should also properly trigger re-builds when\n  the patchlevel version of llvmVER changes, possibly changing\n  the binary names we link to.  [bsc#1217450]\n\nPackage util-linux was updated:\n\n- fix Xen virtualization type misidentification bsc#1215918  lscpu-fix-parameter-order-for-ul_prefix_fopen.patch\n\nPackage python3-base was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Add CVE-2023-52425-libexpat-2.6.0-backport.patch fixing etree\n  XMLPullParser tests for Expat \u0026gt;=2.6.0 with reparse deferral\n  (fixing CVE-2023-52425 or bsc#1219559).\n\nPackage xfsprogs was updated:\n\n- xfs_copy: bail out early when superblock cannot be verified  (bsc#1227150)\n  - add xfs_copy-bail-out-early-when-superblock-cannot-be-ve.patch\n\nPackage shim was updated:\n\n- Update shim to 15.8-150300.4.20.2 from SLE15-SP3  + Version: 15.8, \u0026quot;Thu Apr 18 2024\u0026quot;\n  + Update the SLE signatures\n  + Include the fixes for (bsc#1215099,CVE-2023-40546),\n    (bsc#1215098,CVE-2023-40547), (bsc#1215103,CVE-2023-40551),\n    (bsc#1215102,CVE-2023-40550), (bsc#1215101,CVE-2023-40549),\n    (bsc#1215100,CVE-2023-40548), bsc#1205588, bsc#1202120, bsc#1201066,\n    (bsc#1198458, CVE-2022-28737), bsc#1198101, bsc#1193315, bsc#1193282\n\nPackage shadow was updated:\n\n- bsc#916845 (CVE-2013-4235): Fix TOCTOU race condition  Add shadow-CVE-2013-4235.patch\n\nPackage ocfs2-tools was updated:\n\n- OCFS2 writes delay on large volumes - slow la window lookup from global_bitmap (bsc#1219224)  * bsc1219224-debugfs.ocfs2-support-recording-gd-bg_contig_free_bi.patch\n\n- fsck.ocfs2: add the ability to clear jbd2 errno (bsc#1216834)\n  + bsc1216834-fsck.ocfs2-add-the-ability-to-clear-jbd2-errno.patch\n\nPackage google-guest-agent was updated:\n\n- Update to version 20240314.00 (bsc#1221900, bsc#1221901)  * NetworkManager: only set secondary interfaces as up (#378)\n  * address manager: make sure we check for oldMetadata (#375)\n  * network: early setup network (#374)\n  * NetworkManager: fix ipv6 and ipv4 mode attribute (#373)\n  * Network Manager: make sure we clean up ifcfg files (#371)\n  * metadata script runner: fix script download (#370)\n  * oslogin: avoid adding extra empty line at the end of /etc/security/group.conf (#369)\n  * Dynamic vlan (#361)\n  * Check for nil response (#366)\n  * Create NetworkManager implementation (#362)\n  * Skip interface manager on Windows (#363)\n  * network: remove ignore setup (#360)\n  * Create wicked network service implementation and its respective unit (#356)\n  * Update metadata script runner, add tests (#357)\n  * Refactor guest-agent to use common retry util (#355)\n  * Flush logs before exiting #358 (#359)\n- Refresh patches for new version\n  * dont_overwrite_ifcfg.patch\n\n- No need for double %setup.\n\n- Use %patch -P N instead of deprecated %patchN.\n\nPackage regionServiceClientConfigGCE was updated:\n\n- Update to version 4.1.0  + Replace 162.222.182.90 and 35.187.193.56 (length 4096):\n    rgnsrv-gce-asia-northeast1 -\u0026gt; 162.222.182.90 expires in 9 years\n    rgnsrv-gce-us-central1 -\u0026gt; 35.187.193.56 expires in 10 years\n\nPackage SAPHanaSR was updated:\n\n- Version bump to 0.162.4  * unify global.ini examples\n  * add demo script SAPHanaSR-upgrade-to-angi-demo\n  * update man pages:\n    SAPHanaSR_basic_cluster.7\n    SAPHanaSR_maintenance_examples.7\n    SAPHanaSR_upgrade_to_angi.7\n    SAPHanaSR-manageProvider.8\n    SAPHanaSR-upgrade-to-angi-demo.8\n    SAPHanaSR.py.7\n\nPackage python36 was updated:\n\n- Add CVE-2024-4032-private-IP-addrs.patch to fix bsc#1226448  (CVE-2024-4032) rearranging definition of private v global IP\n  addresses.\n\n- Add CVE-2024-0397-memrace_ssl.SSLContext_cert_store.patch\n  fixing bsc#1226447 (CVE-2024-0397) by removing memory race\n  condition in ssl.SSLContext certificate store methods.\n\n- Add bpo38361-syslog-no-slash-ident.patch (bsc#1222109,\n  gh#python/cpython!16557) fixes syslog making default \u0026quot;ident\u0026quot;\n  from sys.argv[0].\n- Update CVE-2023-52425-libexpat-2.6.0-backport.patch so that\n  it uses features sniffing, not just comparing version number\n  (bsc#1220664, bsc#1219559, bsc#1221563, bsc#1222075).\n- Remove support-expat-CVE-2022-25236-patched.patch, which was\n  the previous name of this patch.\n- Add CVE-2023-52425-remove-reparse_deferral-tests.patch skipping\n  failing tests.\n- Refresh patches:\n  - CVE-2023-27043-email-parsing-errors.patch\n  - fix_configure_rst.patch\n  - skip_if_buildbot-extend.patch\n\n- bsc#1221854 (CVE-2024-0450) Add\n  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n- Add bh42369-thread-safety-zipfile-SharedFile.patch (from\n  gh#python/cpython!26974) required by the previous patch.\n- Add expat-260-test_xml_etree-reparse-deferral.patch to make the\n  interpreter work with patched libexpat in our distros.\n- Move all patches from locally sourced to the branch\n  opensuse-3.6 branch at GitHub repo, and move all metadata to\n  commits themselves (readable in the headers of each patch).\n- Add bpo-41675-modernize-siginterrupt.patch to make Python build\n  cleanly even on more recent SPs of SLE-15\n  (gh#python/cpython#85841).\n- Remove patches:\n  - bpo36263-Fix_hashlib_scrypt.patch - fix against bug in\n    OpenSSL fixed in 1.1.1c (gh#openssl/openssl!8483), so this\n    patch is redundant on all SUSE-supported distros\n  - python-3.3.0b1-test-posix_fadvise.patch - protection\n    against the kernel issues which has been fixed in\n    gh#torvalds/linux@3d3727cdb07f, which has been included in\n    all our kernels more recent than SLE-11.\n  - python-3.3.3-skip-distutils-test_sysconfig_module.patch -\n    skips a test, which should be relevant only for testing on\n    Mac OS X systems with universal builds. I have no valid\n    record, that this test would be ever problematic on Linux.\n  - bpo-36576-skip_tests_for_OpenSSL-111.patch, which was\n    included already in Python 3.5.\n\n- (bsc#1219666, CVE-2023-6597) Add\n  CVE-2023-6597-TempDir-cleaning-symlink.patch (patch from\n  gh#python/cpython!99930) fixing symlink bug in cleanup of\n  tempfile.TemporaryDirectory.\n- Merge together bpo-36576-skip_tests_for_OpenSSL-111.patch into\n  skip_SSL_tests.patch, and make them include all conditionals.\n\nPackage release-notes-sles was updated:\n\n- 12.5.20240614 (tracked in bsc#933411)- Added note about openSSH 8.4 (bsc#1222298)\n- Added note about unsupported hibernate/suspend on Xen (bsc#1214405)\n- Added note about chrony 4.1 (jsc#SLE-22248)\n- Added note about adcli --dont-expire-password (jsc#SLE-21223)\n- Added note about sudo -U -l restriction (jsc#SLE-22569)\n- Added note about nodejs16 addition (jsc#SLE-21234)\n- Added note about rsyslog 8.2106 (jsc#SLE-21522)\n- Added note about tcl 8.6.12 (jsc#SLE-21015)\n- Added note about sudo 1.8.27 update (jsc#SLE-17083)\n\nPackage gdk-pixbuf was updated:\n\n- Add CVE-2022-48622.patch: ANI: Reject files with multiple anih  chunks(bsc#1219276, CVE-2022-48622, glgo#GNOME/gdk-pixbuf#202).\n\nPackage _product:sle-live-patching-release was updated:\n\nPackage lifecycle-data-sle-live-patching was updated:\n\n- Added data for 4_12_14-122_212, 4_12_14-122_216, 4_12_14-122_219. (bsc#1020320)\n- Added data for 4_12_14-122_201. (bsc#1020320)\n\nPackage glibc was updated:\n\n- nscd-Fix-use-after-free-in-addgetnetgrentX.patch: nscd: Fix  use-after-free in addgetnetgrentX (BZ #23520)\n- glibc-CVE-2024-33599-nscd-Stack-based-buffer-overflow-in-n.patch:\n  nscd: Stack-based buffer overflow in netgroup cache\n  (CVE-2024-33599, bsc#1223423, BZ #31677)\n- glibc-CVE-2024-33600-nscd-Avoid-null-pointer-crashes-after.patch:\n  nscd: Avoid null pointer crashes after notfound response\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33600-nscd-Do-not-send-missing-not-found-re.patch:\n  nscd: Do not send missing not-found response in addgetnetgrentX\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33601-CVE-2024-33602-nscd-netgroup-Use-two.patch:\n  netgroup: Use two buffers in addgetnetgrentX (CVE-2024-33601,\n  CVE-2024-33602, bsc#1223425, BZ #31680)\n- nscd-netgroup-cache-timeout.patch: Use time_t for return type of\n  addgetnetgrentX (CVE-2024-33602, bsc#1223425)\n\n- elf-ifunc-subtests-nonpie.patch: elf: Disable some subtests of\n  ifuncmain1, ifuncmain5 for !PIE\n- iconv-iso-2022-cn-ext.patch: iconv: ISO-2022-CN-EXT: fix out-of-bound\n  writes when writing escape sequence (CVE-2024-2961, bsc#1222992)\n\nPackage fdupes was updated:\n\n- Apply \u0026quot;toctou-race-allows-arbitrary-file-deletion.patch\u0026quot; to fix a  race condition that could be exploited to delete arbitrary files.\n  This patch is a back-ported and simplified version of the commit\n  https://github.com/adrianlopezroche/fdupes/commit/85680897148f1ac33b55418e00334116e419717f\n  introduced upstream in release 2.2.0. [bsc#1200381]\n\nPackage python was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Switch to using the system libexpat (bsc#1219559,\n  CVE-2023-52425)\n- Make sure to remove all embedded versions of other packages\n  (including expat).\n- Add CVE-2023-52425-libexpat-2.6.0-remove-failing-tests.patch\n  removing failing test fixing bpo#3151, which we just not\n  support.\n- Remove patches over those embedded packages (cffi):\n  - python-2.7-libffi-aarch64.patch\n  - sparc_longdouble.patch\n\n- Modify CVE-2023-27043-email-parsing-errors.patch to fix the\n  unicode string handling in email.utils.parseaddr()\n  (bsc#1222537).\n- Revert CVE-2022-48560-after-free-heappushpop.patch, the fix was\n  unneeded.\n\n- Switch off tests. ONLY FOR FACTORY!!! (bsc#1219306)\n\n- Build with -std=gnu89 to build correctly with gcc14, bsc#1220970\n\nPackage python-typing was updated:\n\n- Update to 3.10.0.0  * Implement TypeGuard (PEP 649)\n  * backport ParamSpecArgs/Kwargs\n  * Fixed required/optional keys with old-style TypedDict\n  * Bring in protocolâs __init__ behaviour same like in python \u0026gt; 3.8\n  * Support PEP 612 in typing_extensions (Python 3)\n  * Also run python 3.9 in CI\n  * Add OrderedDict to typing_extensions\n  * Only allow installing this package for Python 2.7 and 3.4\n  * Document availability of Annotated\n  * Update test_typing_extensions.py\n  * Apply get_args fix from bpo-40398 to typing_extensions\n  * Fix tests failing with 3.10.0a2+\n  * Fix stray close paren\n  * Update README\n  * Disable 3.5.1 build -- can't install psutils needed by pytest-xdist\n  * Bump typing_extensions version to 3.7.4.3\n  * Remove extra 'use' in readme\n- from version 3.7.4.3\n  * Revert last two changes; bump version to 3.7.4.3\n- from version 3.7.4.2\n  * Disallow installation on 3.5+\n  * Add tox.ini for typing_extensions\n  * Add PEP 613 TypeAlias to typing_extensions\n  * Make tests for Annotated work with Python 3.9\n  * Remove Python 3.3 from tox.ini\n  * Fix flake8 failure by using Python 3.8\n  * Add SupportsIndex, added in Python 3.8\n  * Update package metadata\n  * Bump typing_extensions version to 3.7.4.2\n  * Fix ForwardRef hash and equality checks\n  * Fix required and optional keys inheritance for TypedDict\n  * Replace asyncio.coroutine with async-await\n  * Reuse stdlib PEP 593 implementation in typing_extensions if present\n  * Add .vscode and .egg-info to gitignore\n  * Backport get_origin() and get_args()\n  * Add clarification to package description\n  * Track optional TypdeDict keys\n  * Accept arbitrary keyword names in NamedTuple() and TypedDict()\n  * Bump typing_extensions version\n  * Add missing objects in typing_extensions/README.rst\n- from version 3.7.4.1\n  * Fix isinstance() with generic protocol subclasses after subscripting\n  * Try fixing Travis build\n    + fix tests for non-default interpreters\n  * Use environment marker to specify typing dependency\n  * Fix unions of protocols on Python 2\n  * Bump typing_extensions version and typing dependency version\n- from version 3.7.4\n  * Fix subclassing builtin protocols on older Python versions\n  * Move Protocol, runtime_checkable, Final, final, Literal, and TypedDict to typing\n  * Add support for Python 3.8 in typing_extensions\n  * Unify the implementation of annotated in src_py2 and src_py3\n  * Add Annotated in python2\n  * Pep 593 py3\n  * Drop support of Python 3.3\n  * [typing-extensions] Simple implementation for IntVar\n  * Add a python 3.7+ version of Annotated to typing_extensions\n  * Add SupportsIndex\n  * Add TypedDict to typing_extensions\n  * .travis.yml: The 'sudo' tag is now deprecated in Travis CI\n  * Add Final to the README\n  * Run the tests using the current Python executable\n  * Fix GeneralMeta.__instancecheck__() for old style classes\n  * Bump typing_extensions version\n  * Add Literal[...] types to typing_extensions\n  * Fix instance/subclass checks of functions against runtime protocols\n  * Bump typing_extension version\n  * Improve PyPI entry for typing_extensions\n  * Add Final to typing_extensions\n- from version 3.6.6\n  * Include license file for typing-extensions and in wheels\n  * Fix IO.closed to be property\n  * Backport Generic.__new__ fix\n  * Bump typing_extensions version before release\n  * Add missing 'NoReturn' to __all__ in typing.py\n  * Add annotations to NamedTuple children __new__ constructors\n  * Fix typing_extensions to support PEP 560\n  * Fix for issue #524\n  * Pass *args and **kwargs to superclass in Generic.__new__\n- Rename README.rst to README.md in %doc section\n\nPackage kernel-default was updated:\n\n- ACPI: video: check for error while searching for backlight  device parent (bsc#1224686 CVE-2023-52693).\n- commit aafdad5\n\n- ACPI: LPIT: Avoid u32 multiplication overflow (bsc#1224627\n  CVE-2023-52683).\n- commit 57dc5ae\n\n- x86/kprobes: Fix optprobe optimization check with CONFIG_RETHUNK (git-fixes).\n- commit 90918cd\n\n- netfilter: nft_set: preserve kabi (bsc#1215420 CVE-2023-4244).\n- commit 4994a14\n\n- netfilter: take a reference when looking up nft_sets\n  (bsc#1215420 CVE-2023-4244).\n- commit 3f2e165\n\n- netfilter: Implement reference counting for nft_sets\n  (bsc#1215420 CVE-2023-4244).\n- commit b5c850d\n\n- Fix the warning:\n  * return makes pointer from integer without a cast [enabled by default] in ../drivers/infiniband/hw/mlx5/srq.c in mlx5_ib_create_srq\n  ../drivers/infiniband/hw/mlx5/srq.c: In function 'mlx5_ib_create_srq':\n  ../drivers/infiniband/hw/mlx5/srq.c:259:3: warning: return makes pointer from integer without a cast [enabled by default]\n- commit d292fa8\n\n- x86/kprobes: Fix kprobes instruction boudary check with CONFIG_RETHUNK (git-fixes).\n- commit 29d18ef\n\n- fbdev: savage: Handle err return when savagefb_check_var failed (bsc#1227435 CVE-2024-39475)\n- commit 3cf493f\n\n- kgdb: Move the extern declaration kgdb_has_hit_break() to generic  kgdb.h (git-fixes).\n- commit 4c96601\n\n- kgdb: Add kgdb_has_hit_break function (git-fixes).\n- commit 096e8f7\n\n- x86/ioremap: Fix page aligned size calculation in __ioremap_caller() (git-fixes).\n- commit 51d4d78\n\n- blacklist.conf: Blacklist unapplicable commit\n- commit 8985317\n\n- x86/numa: Use cpumask_available instead of hardcoded NULL check (git-fixes).\n- commit 53fc2d1\n\n- x86/msr: Fix wr/rdmsr_safe_regs_on_cpu() prototypes (git-fixes).\n- commit 4cbd29b\n\n- x86/fpu: Return proper error codes from user access functions (git-fixes).\n- commit 16cc345\n\n- x86/cpu: Fix AMD erratum #1485 on Zen4-based CPUs (git-fixes).\n- commit 530272a\n\n- blacklist.conf: We don't support clang so black list related commit\n- commit 0b88169\n\n- x86/boot/e820: Fix typo in e820.c comment (git-fixes).\n- commit 3e224a7\n\n- x86/apic: Fix kernel panic when booting with intremap=off and x2apic_phys (git-fixes).\n- commit f7c83aa\n\n- x86: __memcpy_flushcache: fix wrong alignment if size \u0026gt; 2^32 (git-fixes).\n- commit fe70714\n\n- PM: hibernate: x86: Use crc32 instead of md5 for hibernation e820  integrity check (git-fixes).\n- commit 63895f5\n\n- can: pch_can: pch_can_rx_normal: fix use after free (bsc#1225431\n  CVE-2021-47520).\n- commit 0efd10b\n\n- wifi: nl80211: don't free NULL coalescing rule (bsc#1225835 CVE-2024-36941).\n- commit 6927c00\n\n- powerpc/rtas: Prevent Spectre v1 gadget construction in\n  sys_rtas() (bsc#1227487).\n- commit 564651d\n\n- SUNRPC: Fix loop termination condition in\n  gss_free_in_token_pages() (git-fixes).\n- sunrpc: fix NFSACL RPC retry on soft mount (git-fixes).\n- SUNRPC: Fix gss_free_in_token_pages() (git-fixes).\n- nfs: Handle error of rpc_proc_register() in nfs_net_init()\n  (git-fixes).\n- commit 823e515\n\n- btrfs: do not BUG_ON in link_to_fixup_dir (bsc#1222005\n  CVE-2021-47145).\n- commit fb0f08c\n\n- soc: fsl: qbman: Use raw spinlock for cgr_lock (bsc#1224683\n  CVE-2024-35819).\n- commit 4f6a315\n\n- soc: fsl: qbman: Add CGR update function (bsc#1224683\n  CVE-2024-35819).\n- commit 3b2ce3f\n\n- soc: fsl: qbman: Add helper for sanity checking cgr ops\n  (bsc#1224683 CVE-2024-35819).\n- commit b33b9fc\n\n- soc: fsl: qbman: Always disable interrupts when taking cgr_lock\n  (bsc#1224683 CVE-2024-35819).\n- commit 99e6ba5\n\n- drm/amdgpu/debugfs: fix error code when smc register accessors are NULL (git-fixes).\n- commit a2420fb\n\n- blacklist.conf: Add c7fcb99877f9 sched/rt: Fix sysctl_sched_rr_timeslice intial value\n- commit 71427f6\n\n- blacklist.conf: Add a57415f5d1e4 sched/deadline: Fix sched_dl_global_validate()\n- commit b39262b\n\n- sched/deadline: Fix BUG_ON condition for deboosted tasks\n  (bsc#1227407).\n- commit 58fafac\n\n- dyndbg: fix old BUG_ON in \u0026gt;control parser (bsc#1224647\n  CVE-2024-35947).\n- commit 52ffbf7\n\n- net: tulip: de4x5: fix the problem that the array 'lp-\u0026gt;phy'\n  may be  out of bound (bsc#1225505 CVE-2021-47547).\n- commit 605a3ba\n\n- drm/amdgpu: Fix a null pointer access when the smc_rreg pointer is NULL (CVE-2023-52817 bsc#1225569).\n- commit d2e5a64\n\n- blacklist.conf: cd90511557fd drm/amdgpu/vkms: fix a possible null pointer dereference\n- commit d0def0c\n\n- blacklist.conf: 80285ae1ec87 drm/amdgpu: Fix potential null pointer derefernce\n- commit 95c5571\n\n- blacklist.conf: 406e8845356d drm/amd: check num of link levels when update pcie param\n- commit f93c72c\n\n- drm/amd: Fix UBSAN array-index-out-of-bounds for Polaris and Tonga (CVE-2023-52819 bsc#1225532).\n- commit d196cd8\n\n- drm/amd: Fix UBSAN array-index-out-of-bounds for SMU7 (CVE-2023-52818 bsc#1225530).\n- commit d67dcd9\n\n- blacklist.conf: 282c1d793076 drm/amdkfd: Fix shift out-of-bounds issue\n- commit cc813e8\n\n- drm/amd/display: Avoid NULL dereference of timing generator (CVE-2023-52753 bsc#1225478).\n- commit f316fd9\n\n- blacklist.conf: 31729e8c21ec drm/amd/pm: fixes a random hang in S4 for SMU v13.0.4/11\n- commit 785f136\n\n- blacklist.conf: add 2a19b28f7929866e1cec92a3619f4de9f2d20005.\n- commit a4c7fa2\n\n- drm/arm/malidp: fix a possible null pointer dereference (CVE-2024-36014 bsc#1225593).\n- commit 3f35223\n\n- llc: make llc_ui_sendmsg() more robust against bonding changes\n  (CVE-2024-26636 bsc#1221659).\n- commit 727fec1\n\n- llc: Drop support for ETH_P_TR_802_2 (CVE-2024-26635\n  bsc#1221656).\n- commit 4792924\n\n- wifi: libertas: fix some memleaks in lbs_allocate_cmd_buffer()\n  (bsc#1224622 CVE-2024-35828).\n- commit 9f39e76\n\n- nfc: nci: assert requested protocol is valid (bsc#1220833, CVE-2023-52507).\n- commit 78bd01e\n\n- md: fix resync softlockup when bitmap size is less than array\n  size (CVE-2024-38598, bsc#1226757).\n- commit e578184\n\n- dm snapshot: fix lockup in dm_exception_table_exit (bsc#1224743,\n  CVE-2024-35805).\n- dm: call the resume method on internal suspend (bsc#1223188,\n  CVE-2024-26880).\n- dm rq: don't queue request to blk-mq during DM suspend\n  (bsc#1225357, CVE-2021-47498).\n- bcache: avoid oversized read request in cache missing code path\n  (bsc#1224965, CVE-2021-47275).\n- bcache: remove bcache device self-defined readahead\n  (bsc#1224965, CVE-2021-47275).\n- commit 0df91b9\n\n- net/mlx5e: nullify cq-\u0026gt;dbg pointer in mlx5_debug_cq_remove() (bsc#1225229 CVE-2021-47438)\n- commit dd90392\n\n- net/mlx5e: Fix memory leak in mlx5_core_destroy_cq() error path (bsc#1225229 CVE-2021-47438)\n- commit eebb92a\n\n- usb-storage: alauda: Check whether the media is initialized\n  (CVE-2024-38619 bsc#1226861).\n- commit 8f69e1a\n\n- iavf: free q_vectors before queues in iavf_disable_vf\n  (CVE-2021-47201 bsc#1222792).\n- commit 5fa75c2\n\n- blacklist.conf: 9cb46b31f3d0 drm/xe/xe_migrate: Cast to output precision before multiplying operands\n- commit 6d5246f\n\n- ip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\n  (CVE-2024-26641 bsc#1221654).\n- commit 785d6bf\n\n- hsr: Fix uninit-value access in hsr_get_node() (bsc#1223021\n  CVE-2024-26863).\n- net: hsr: fix placement of logical operator in a multi-line\n  statement (bsc#1223021).\n- hsr: Fix uninit-value access in hsr_get_node() (bsc#1223021\n  CVE-2024-26863).\n- net: hsr: fix placement of logical operator in a multi-line\n  statement (bsc#1223021).\n- commit bea7af4\n\n- ip6_tunnel: fix NEXTHDR_FRAGMENT handling in\n  ip6_tnl_parse_tlv_enc_lim() (CVE-2024-26633 bsc#1221647).\n- commit 6bed746\n\n- blacklist.conf: ecedd99a9369 drm/amd/display: Skip on writeback when it's not applicable\n- commit 7f9ee16\n\n- net: sock: preserve kabi for sock (bsc#1221010 CVE-2021-47103).\n- commit 00f2734\n\n- inet: fully convert sk-\u0026gt;sk_rx_dst to RCU rules (bsc#1221010\n  CVE-2021-47103).\n- commit 955aaf2\n\n- Bluetooth: l2cap: fix null-ptr-deref in l2cap_chan_timeout\n  (bsc#1224177 CVE-2024-27399).\n- commit f1f5272\n\n- ACPI: processor_idle: Fix memory leak in\n  acpi_processor_power_exit() (bsc#1223043 CVE-2024-26894).\n- commit 69014d4\n\n- scsi: bnx2fc: Remove spin_lock_bh while releasing resources\n  after upload (bsc#1224767 CVE-2024-36919).\n- scsi: lpfc: Move NPIV's transport unregistration to after\n  resource clean up (bsc#1225898 CVE-2024-36592).\n- scsi: bnx2fc: Remove spin_lock_bh while releasing resources\n  after upload (bsc#1224767 CVE-2024-36919).\n- scsi: lpfc: Move NPIV's transport unregistration to after\n  resource clean up (bsc#1225898 CVE-2024-36592).\n- commit 011e140\n\n- selinux: fix double free of cond_list on error paths\n  (bsc#1226699 CVE-2022-48740).\n- commit c27761a\n\n- fs/9p: fix uninitialized values during inode evict (bsc#1225815\n  CVE-2024-36923).\n- commit fccda1c\n\n- btrfs: fix crash on racing fsync and size-extending write into\n  prealloc (bsc#1227101 CVE-2024-37354).\n- btrfs: add helper to truncate inode items when logging inode\n  (bsc#1227101 CVE-2024-37354).\n- btrfs: don't set the full sync flag when truncation does not\n  touch extents (bsc#1227101 CVE-2024-37354).\n- btrfs: fix misleading and incomplete comment of btrfs_truncate()\n  (bsc#1227101 CVE-2024-37354).\n- btrfs: make btrfs_truncate_inode_items take btrfs_inode\n  (bsc#1227101 CVE-2024-37354).\n- commit 25e24a4\n\n- blacklist.conf: kABI\n- commit 2c68edf\n\n- usb: typec: tcpm: Skip hard reset when in error recovery\n  (git-fixes).\n- commit 74f41bf\n\n- blacklist.conf: false positive\n- commit b55e7fd\n\n- bpf, scripts: Correct GPL license name (git-fixes).\n- commit d41908e\n\n- Update\n  patches.suse/0006-dm-btree-remove-fix-use-after-free-in-rebalance_chil.patch\n  (git-fixes CVE-2021-47600 bsc#1226575).\n- Update\n  patches.suse/PCI-pciehp-Fix-infinite-loop-in-IRQ-handler-upon-pow.patch\n  (git-fixes CVE-2021-47617 bsc#1226614).\n- Update\n  patches.suse/USB-core-Fix-hang-in-usb_kill_urb-by-adding-memory-b.patch\n  (git-fixes CVE-2022-48760 bsc#1226712).\n- Update\n  patches.suse/audit-improve-robustness-of-the-audit-queue-handling.patch\n  (bsc#1204514 CVE-2021-47603 bsc#1226577).\n- Update\n  patches.suse/drm-vmwgfx-Fix-stale-file-descriptors-on-failed-user.patch\n  (CVE-2022-22942 bsc#1195065 CVE-2022-48771 bsc#1226732).\n- Update patches.suse/igbvf-fix-double-free-in-igbvf_probe.patch\n  (git-fixes CVE-2021-47589 bsc#1226557).\n- Update\n  patches.suse/isdn-cpai-check-ctr-cnr-to-avoid-array-index-out-of-bound.patch\n  (bsc#1191958 CVE-2021-43389 CVE-2021-4439 bsc#1226670).\n- Update\n  patches.suse/net-ieee802154-ca8210-Stop-leaking-skb-s.patch\n  (git-fixes CVE-2022-48722 bsc#1226619).\n- Update\n  patches.suse/netfilter-complete-validation-of-user-input.patch\n  (git-fixes CVE-2024-35896 bsc#1224662 CVE-2024-35962\n  bsc#1224583).\n- Update patches.suse/phylib-fix-potential-use-after-free.patch\n  (bsc#1119113 FATE#326472 CVE-2022-48754 bsc#1226692).\n- Update\n  patches.suse/ring-buffer-Fix-a-race-between-readers-and-resize-checks.patch\n  (bsc#1222893 CVE-2024-38601 bsc#1226876).\n- Update\n  patches.suse/scsi-bnx2fc-Flush-destroy_work-queue-before-calling-bnx2fc_interface_put\n  (git-fixes CVE-2022-48758 bsc#1226708).\n- Update patches.suse/scsi-bnx2fc-Make-bnx2fc_recv_frame-mp-safe\n  (git-fixes CVE-2022-48715 bsc#1226621).\n- Update\n  patches.suse/scsi-libfc-Fix-potential-NULL-pointer-dereference-in-fc_lport_ptp_setup.patch\n  (git-fixes CVE-2023-52809 bsc#1225556).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-off-by-one-in-qla_edif_app_getstats.patch\n  (git-fixes CVE-2024-36025 bsc#1225704).\n- Update\n  patches.suse/scsi-scsi_debug-Sanity-check-block-descriptor-length-in-resp_mode_select\n  (git-fixes CVE-2021-47576 bsc#1226537).\n- Update\n  patches.suse/scsi-target-core-Add-TMF-to-tmr_list-handling.patch\n  (bsc#1223018 CVE-26845 CVE-2024-26845).\n- Update\n  patches.suse/tipc-improve-size-validations-for-received-domain-re.patch\n  (bsc#1195254 CVE-2022-0435 CVE-2022-48711 bsc#1226672).\n- commit c2edf0b\n\n- tcp: do not accept ACK of bytes we never sent (CVE-2023-52881\n  bsc#1225611).\n- commit d93d95b\n\n- usb: port: Don't try to peer unused USB ports based on location\n  (git-fixes).\n- commit c96b5c5\n\n- blacklist.conf: logging only\n- commit b17cfa5\n\n- x86/tsc: Trust initial offset in architectural TSC-adjust MSRs\n  (bsc#1222015 bsc#1226962).\n- commit c9f769c\n\n- iommu/vt-d: Allocate local memory for page request queue\n  (git-fixes).\n- commit 541ce64\n\n- iommu/amd: Fix sysfs leak in iommu init (git-fixes).\n- commit cdae1dd\n\n- KVM: x86: Handle SRCU initialization failure during page track\n  init (CVE-2021-47407, bsc#1225306).\n- commit 61b3e37\n\n- xen/events: close evtchn after mapping cleanup (CVE-2024-26687,\n  bsc#1222435).\n- commit c56fe01\n\n- net/9p: fix uninit-value in p9_client_rpc() (CVE-2024-39301 bsc#1226994).\n- commit 1a033be\n\n- media: lgdt3306a: Add a check against null-pointer-def\n  (CVE-2022-48772 bsc#1226976).\n- commit 79e986b\n\n- fpga: manager: add owner module and take its refcount\n  (CVE-2024-37021 bsc#1226950).\n- commit 580ed12\n\n- fpga: region: add owner module and take its refcount\n  (CVE-2024-35247 bsc#1226948).\n- commit 75fbd8f\n\n- fpga: bridge: add owner module and take its refcount\n  (CVE-2024-36479 bsc#1226949).\n- commit 410068f\n\n- enic: Validate length of nl attributes in enic_set_vf_port\n  (CVE-2024-38659 bsc#1226883).\n- net: fec: remove .ndo_poll_controller to avoid deadlocks\n  (CVE-2024-38553 bsc#1226744).\n- net/mlx5e: Fix netif state handling (CVE-2024-38608\n  bsc#1226746).\n- eth: sungem: remove .ndo_poll_controller to avoid deadlocks\n  (CVE-2024-38597 bsc#1226749).\n- net: amd-xgbe: Fix skb data length underflow (CVE-2022-48743\n  bsc#1226705).\n- net: systemport: Add global locking for descriptor lifecycle\n  (CVE-2021-47587 bsc#1226567).\n- commit 6fa5a1e\n\n- usb: xhci-plat: fix crash when suspend if remote wake enable\n  (CVE-2022-48761 bsc#1226701).\n- commit 6918857\n\n- virtio-blk: fix implicit overflow on virtio_max_dma_size\n  (bsc#1225573 CVE-2023-52762).\n- commit 630807b\n\n- btrfs: fix use-after-free after failure to create a snapshot\n  (bsc#1226718 CVE-2022-48733).\n- commit bc8f6e2\n\n- vfio/platform: Create persistent IRQ handlers (bsc#1222809\n  CVE-2024-26813).\n- commit a912042\n\n- Update to fix a compiling error,\n  patches.suse/raid1-fix-use-after-free-for-original-bio-in-raid1_-fcf3.patch.\n- commit 4738bf0\n\n- s390/ap: Fix crash in AP internal function modify_bitmap()\n  (CVE-2024-38661 bsc#1226996 git-fixes).\n- commit 642fe77\n\n- block: fix overflow in blk_ioctl_discard() (bsc#1225770\n  CVE-2024-36917).\n- commit fb1867c\n\n- epoll: be better about file lifetimes (bsc#1226610\n  CVE-2024-38580).\n- commit da86de7\n\n- KVM: allow KVM_BUG/KVM_BUG_ON to handle 64-bit cond (git-fixes).\n- commit 63ce06d\n\n- drm/nouveau: fix off by one in BIOS boundary checking (bsc#1226716 CVE-2022-48732)\n- commit bed5212\n\n- Update references tag\n  patches.suse/Bluetooth-Disconnect-if-E0-is-used-for-Level-4.patch\n  (bsc#1171988 CVE-2020-10135 bsc#1218148 CVE-2023-24023).\n- commit b41c397\n\n- mm: Avoid overflows in dirty throttling logic (bsc#1222364\n  CVE-2024-26720).\n- commit 6f98632\n\n- media: stk1160: fix bounds checking in stk1160_copy_video()\n  (CVE-2024-38621 bsc#1226895).\n- commit 617f122\n\n- dma-buf/sw-sync: don't enable IRQ from sync_print_obj()\n  (CVE-2024-38780 bsc#1226886).\n- commit 0a1e3b6\n\n- nvmet: fix ns enable/disable possible hang (git-fixes).\n- commit 128ca3f\n\n- ecryptfs: Fix buffer size for tag 66 packet  (bsc#1226634, CVE-2024-38578).\n- commit 41891c0\n\n- stm class: Fix a double free in stm_register_device()\n  (CVE-2024-38627 bsc#1226857).\n- commit b4ea481\n\n- blacklist.conf: kABI\n- commit 516146e\n\n- crypto: bcm - Fix pointer arithmetic (bsc#1226637\n  CVE-2024-38579).\n- commit be1545d\n\n- drm/amd/display: Fix potential index out of bounds in color (bsc#1226767 CVE-2024-38552)\n- commit fdaaa54\n\n- drm/mediatek: Add 0 size check to mtk_drm_gem_obj (bsc#1226735 CVE-2024-38549)\n- commit b67d29d\n\n- drm/msm/dsi: invalid parameter check in msm_dsi_phy_enable (bsc#1226698 CVE-2022-48756)\n- commit bd95a05\n\n- net: usb: rtl8150 fix unintiatilzed variables in\n  rtl8150_get_link_ksettings (git-fixes).\n- commit 996e5c4\n\n- RDMA/hns: Fix UAF for cq async event (bsc#1226595 CVE-2024-38545)\n- commit 68cd4b9\n\n- RDMA/rxe: Fix seg fault in rxe_comp_queue_pkt (bsc#1226597 CVE-2024-38544)\n- commit da8c605\n\n- RDMA/mlx5: Add check for srq max_sge attribute (git-fixes)\n- commit 6ee55be\n\n- drm: vc4: Fix possible null pointer dereference (CVE-2024-38546\n  bsc#1226593).\n- commit f5c6e94\n\n- wifi: carl9170: add a proper sanity check for endpoints\n  (CVE-2024-38567 bsc#1226769).\n- rpmsg: char: Fix race between the release of rpmsg_ctrldev\n  and cdev (CVE-2022-48759 bsc#1226711).\n- commit 1d933f6\n\n- wifi: ar5523: enable proper endpoint verification\n  (CVE-2024-38565 bsc#1226747).\n- commit 7f113b6\n\n- mac80211: track only QoS data frames for admission control\n  (CVE-2021-47602 bsc#1226554).\n- commit 6d84852\n\n- ALSA: timer: Set lower bound of start tick time (CVE-2024-38618\n  bsc#1226754).\n- commit ea3c02c\n\n- blacklist.conf: Add 7af443ee16976 sched/core: Require cpu_active() in select_task_rq(), for user tasks\n- commit 35a10db\n\n- bsc#1225894: Fix build warning\n  Fix the following build warning.\n  * unused-variable (i) in ../drivers/gpu/drm/amd/amdkfd/kfd_device.c in kgd2kfd_resume\n  ../drivers/gpu/drm/amd/amdkfd/kfd_device.c: In function 'kgd2kfd_resume':\n  ../drivers/gpu/drm/amd/amdkfd/kfd_device.c:621:11: warning: unused variable 'i' [-Wunused-variable]\n- commit e16e5ba\n\n- bsc#1225894: Fix patch references\n- commit 7b4670a\n\n- net/mlx5: Properly link new fs rules into the tree (bsc#1224588\n  CVE-2024-35960).\n- commit 14f14ea\n\n- net/mlx5e: fix a double-free in arfs_create_groups (bsc#1224605\n  CVE-2024-35835).\n- commit 2cc5781\n\n- firmware: arm_scpi: Fix string overflow in SCPI genpd driver (bsc#1226562 CVE-2021-47609)\n- commit 4642449\n\n- Fix compilation\n- commit 3f5119e\n\n- net: ena: Fix incorrect descriptor free behavior (bsc#1224677\n  CVE-2024-35958).\n- commit 8f4768d\n\n- bonding: stop the device in bond_setup_by_slave() (bsc#1224946\n  CVE-2023-52784).\n- commit da74b6f\n\n- blacklist.conf: bsc#1225555 CVE-2023-52808\n  patches code not present\n- commit 35c5de8\n\n- blacklist.conf: bsc#1223013 CVVE-2024-26482\n  does not apply\n- commit c785e5a\n\n- blacklist.conf: bsc#1222879 CVE-2021-47193\n  breaks kABI\n- commit 5ac2f95\n\n- blacklist.conf: bsc#1225559 CVE-2023-5281\n  Does not apply cleanly at all, and addresses\n  a corner case that it knows is rare.\n- commit 66930cf\n\n- scsi: lpfc: Fix possible memory leak in lpfc_rcv_padisc()\n  (bsc#1224651 CVE-2024-35930).\n- scsi: target: core: Add TMF to tmr_list handling (bsc#1223018\n  CVE-26845).\n- scsi: scsi_debug: Fix out-of-bound read in resp_readcap16()\n  (bsc#122286 CVE-2021-47191).\n- commit 3100b52\n\n- usb: fix various gadget panics on 10gbps cabling (CVE-2021-47267\n  bsc#1224993).\n- commit 3336e4a\n\n- amd/amdkfd: sync all devices to wait all processes being evicted (bsc#1225872 CVE-2024-36949)\n- commit aa91737\n\n- drm/amdkfd: Rework kfd_locked handling (bsc#1225872)\n- commit 030a69d\n\n- drm/vmwgfx: Fix invalid reads in fence signaled events (bsc#1225872 CVE-2024-36960)\n- commit fe8da4d\n\n- nfsd: optimise recalculate_deny_mode() for a common case\n  (bsc#1217912).\n- commit 90c611c\n\n- NFSv4: Always clear the pNFS layout when handling ESTALE\n  (bsc#1221791).\n- NFSv4: nfs_set_open_stateid must not trigger state recovery\n  for closed state (bsc#1221791).\n- PNFS for stateid errors retry against MDS first (bsc#1221791).\n- commit fcd364d\n\n- block: prevent division by zero in blk_rq_stat_sum()\n  (bsc#1224661 CVE-2024-35925).\n- commit 7fd346a\n\n- ext4: fix corruption during on-line resize (bsc#1224735\n  CVE-2024-35807).\n- commit 8431549\n\n- fat: fix uninitialized field in nostale filehandles (git-fixes\n  CVE-2024-26973 bsc#1223641).\n- commit 8b4f3fd\n\n- ext4: avoid online resizing failures due to oversized flex bg\n  (bsc#1222080 CVE-2023-52622).\n- commit a81bee5\n\n- nfc: fix potential NULL pointer deref in nfc_genl_dump_ses_done\n  (CVE-2021-47518 bsc#1225372).\n- commit d0fabf7\n\n- net_sched: fix NULL deref in fifo_set_limit()\n  (CVE-2021-47418 bsc#1225337).\n- commit 54048d4\n\n- net: validate lwtstate-\u0026gt;data before returning from skb_tunnel_info()\n  (CVE-2021-47309 bsc#1224967).\n- commit 2b76537\n\n- net: fix uninit-value in caif_seqpkt_sendmsg\n  (CVE-2021-47297 bsc#1224976).\n- commit 39164d4\n\n- net/sched: act_skbmod: Skip non-Ethernet packets\n  (CVE-2021-47293 bsc#1224978).\n- commit aedefe0\n\n- netrom: Decrease sock refcount when sock timers expire\n  (CVE-2021-47294 bsc#1224977).\n- commit 44bce11\n\n- ipv6: Fix infinite recursion in fib6_dump_done() (CVE-2024-35886\n  bsc#1224670).\n- commit 5d20998\n\n- tty: n_gsm: fix possible out-of-bounds in gsm0_receive()\n  (CVE-2024-36016 bsc#1225642).\n- commit f5c4f31\n\n- net: macb: fix use after free on rmmod (CVE-2021-47372\n  bsc#1225184).\n- commit 5bb5ee7\n\n- btrfs: use correct compare function of dirty_metadata_bytes (git-fixes)\n- commit d51a7ff\n\n- Btrfs: fix memory and mount leak in btrfs_ioctl_rm_dev_v2() (git-fixes)\n- commit 4b455f0\n\n- btrfs: fix describe_relocation when printing unknown flags (git-fixes)\n- commit a147519\n\n- btrfs: add barriers to btrfs_sync_log before log_commit_wait wakeups (git-fixes)\n- commit 0487247\n\n- btrfs: fix crash when trying to resume balance without the resume flag (git-fixes)\n- commit f0fa7bc\n\n- Btrfs: clean up resources during umount after trans is aborted (git-fixes)\n- commit c78d131\n\n- Btrfs: bail out on error during replay_dir_deletes (git-fixes)\n- commit 7a8f6ce\n\n- Btrfs: fix NULL pointer dereference in log_dir_items (git-fixes)\n- commit 02cab92\n\n- Btrfs: send, fix issuing write op when processing hole in no data mode (git-fixes)\n- Refresh\n  patches.suse/btrfs-send-fix-incorrect-file-layout-after-hole-punching-beyond-eof.patch.\n- commit f710800\n\n- Btrfs: fix unexpected EEXIST from btrfs_get_extent (git-fixes)\n- commit 82c1e6b\n\n- btrfs: tree-check: reduce stack consumption in check_dir_item (git-fixes)\n- commit 36aca35\n\n- btrfs: fix false EIO for missing device (git-fixes)\n- Refresh\n  patches.suse/btrfs-ensure-that-a-dup-or-raid1-block-group-has-exactly-two-stripes.patch\n- commit 01544ea\n\n- USB: serial: option: add Quectel EG912Y module support\n  (git-fixes).\n- commit a8d3e25\n\n- blacklist.conf: pure cleanup\n- commit c59c78d\n\n- USB: serial: option: add Quectel RM500Q R13 firmware support\n  (git-fixes).\n- commit b3dedc2\n\n- USB: serial: option: add Foxconn T99W265 with new baseline\n  (git-fixes).\n- commit 51f747d\n\n- net: usb: smsc95xx: fix changing LED_SEL bit value updated\n  from EEPROM (git-fixes).\n- commit d6ed297\n\n- ocfs2: fix sparse warnings (bsc#1219224).\n- ocfs2: speed up chain-list searching (bsc#1219224).\n- ocfs2: adjust enabling place for la window (bsc#1219224).\n- ocfs2: improve write IO performance when fragmentation is high\n  (bsc#1219224).\n- commit d862a97\n\n- smb: client: fix use-after-free bug in\n  cifs_debug_data_proc_show() (bsc#1225487, CVE-2023-52752).\n- commit b2bff17\n\n- blkcg: Fix multiple bugs in blkcg_activate_policy()\n  (CVE-2021-47379 bsc#1225203).\n- blkcg: blkcg_activate_policy() should initialize ancestors first\n  (CVE-2021-47379 bsc#1225203).\n- commit 5e6941f\n\n- blacklist.conf: bsc#1225047 CVE-2021-47328: breaks kABI\n  Also, does not apply.\n- commit 55744fb\n\n- blk-cgroup: fix UAF by grabbing blkcg lock before destroying\n  blkg pd (CVE-2021-47379 bsc#1225203).\n- commit 26f8206\n\n- blacklist.conf: Blacklist 618f003199c61\n- commit f552be9\n\n- atl1c: Work around the DMA RX overflow issue (CVE-2023-52834\n  bsc#1225599).\n- commit c880bf0\n\n- btrfs: lock the inode in shared mode before starting fiemap\n  (bsc#1225484 CVE-2023-52737).\n- commit e4a79d3\n\n- ext4: correct offset of gdb backup in non meta_bg group to\n  update_backups (bsc#1224735 CVE-2024-35807).\n- commit 57ba8ce\n\n- raid1: fix use-after-free for original bio in raid1_write_request()\n  (bsc#1221097, bsc#1224572, CVE-2024-35979).\n- commit daf8372\n\n- fs/9p: only translate RWX permissions for plain 9P2000\n  (bsc#1225866 CVE-2024-36964).\n- commit 7cf061b\n\n- media: imon: fix access to invalid resource for the second\n  interface (CVE-2023-52754 bsc#1225490).\n- commit 0f818a4\n\n- firewire: ohci: mask bus reset interrupts between ISR and\n  bottom half (CVE-2024-36950 bsc#1225895).\n- commit 342de59\n\n- pinctrl: core: delete incorrect free in pinctrl_enable()\n  (CVE-2024-36940 bsc#1225840).\n- commit 6103cd4\n\n- staging: rtl8192e: Fix use after free in\n  _rtl92e_pci_disconnect() (CVE-2021-47571 bsc#1225518).\n- commit 9243acc\n\n- media: gspca: cpia1: shift-out-of-bounds in set_flicker\n  (CVE-2023-52764 bsc#1225571).\n- wifi: mac80211: don't return unset power in\n  ieee80211_get_tx_power() (CVE-2023-52832 bsc#1225577).\n- commit 74cf739\n\n- Bluetooth: qca: add missing firmware sanity checks\n  (CVE-2024-36880 bsc#1225722).\n- commit 1f313de\n\n- drm/msm: Fix null pointer dereference on pointer edp (bsc#1225261 CVE-2021-47445)\n- commit 7365fdb\n\n- rpm/kernel-obs-build.spec.in: Add iso9660 (bsc#1226212)\n  Some builds don't just create an iso9660 image, but also mount it during\n  build.\n- commit aaee141\n\n- llc: verify mac len before reading mac header\n  (CVE-2023-52843 bsc#1224951).\n- commit 048fdd1\n\n- drm/sched: Avoid data corruptions (bsc#1225140 CVE-2021-47354)\n- commit 735d57e\n\n- nfc: llcp: fix nfc_llcp_setsockopt() unsafe copies\n  (CVE-2024-36915 bsc#1225758).\n- commit d2aa3fc\n\n- rpm/kernel-obs-build.spec.in: Add networking modules for docker\n  (bsc#1226211)\n  docker needs more networking modules, even legacy iptable_nat and _filter.\n- commit 415e132\n\n- Bluetooth: Add more enc key size check (bsc#1218148\n  CVE-2023-24023).\n- commit 8b7d4c7\n\n- rtnetlink: Correct nested IFLA_VF_VLAN_LIST attribute validation\n  (CVE-2024-36017 bsc#1225681).\n- commit eee2828\n\n- netfilter: complete validation of user input\n  (git-fixes CVE-2024-35896 bsc#1224662).\n- commit bd2bc6c\n\n- tcp: fix page frag corruption on page fault\n  (CVE-2021-47544 bsc#1225463).\n- commit 0c69f93\n\n- netfilter: validate user input for expected length\n  (CVE-2024-35896 bsc#1224662).\n- commit d09d89a\n\n- Bluetooth: Normalize HCI_OP_READ_ENC_KEY_SIZE cmdcmplt\n  (bsc#1218148 CVE-2023-24023).\n- commit be61b35\n\n- arm64: asm-bug: Add .align 2 to the end of __BUG_ENTRY\n  (git-fixes).\n- commit a33c0aa\n\n- fbmon: prevent division by zero in fb_videomode_from_videomode() (bsc#1224660 CVE-2024-35922)\n- commit 9990cdc\n\n- bna: ensure the copied buf is NUL terminated (CVE-2024-36934\n  bsc#1225760).\n- commit 5e5c793\n\n- tipc: Change nla_policy for bearer-related names to NLA_NUL_STRING\n  (CVE-2023-52845 bsc#1225585).\n- commit 28beea5\n\n- blacklist.conf: Add 1971d13ffa84a \u0026quot;af_unix: Suppress false-positive lockdep splat for spin_lock() in __unix_gc().\u0026quot;\n- commit 9ab8e4f\n\n- HID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent\n  lock-up (bsc#1224552 CVE-2024-35997).\n- commit 31522d3\n\n- wifi: nl80211: reject iftype change with mesh ID change\n  (CVE-2024-27410 bsc#1224432).\n- commit 18882c6\n\n- fix compat handling of FICLONERANGE, FIDEDUPERANGE and\n  FS_IOC_FIEMAP (bsc#1225848).\n- blacklist.conf:\n- fs: make fiemap work from compat_ioctl (bsc#1225848).\n- commit e6c580c\n\n- perf/core: Bail out early if the request AUX area is out of\n  bound (bsc#1225602 CVE-2023-52835).\n- commit 0b197bf\n\n- powerpc/imc-pmu: Add a null pointer check in\n  update_events_in_group() (bsc#1224504 CVE-2023-52675).\n- commit 5ed0541\n\n- blacklist.conf: CVE-2024-35956 bsc#1224674: not applicable bsc#1225945\n  Quoting bsc#1225945#c11:\n  \u0026quot;So the upstream 6.5 kernel commit (1b53e51a4a8f (\u0026quot;btrfs: don't commit\n  transaction for every subvol create\u0026quot;)\n  ) was never backported to SLE, so that fix eb96e221937a (\u0026quot;btrfs: fix\n  unwritten extent buffer after snapshotting a new subvolume\u0026quot;) was never\n  backported.\u0026quot;\n- commit 13b6119\n\n- usb: gadget: f_fs: Fix race between aio_cancel() and AIO\n  request complete (CVE-2024-36894 bsc#1225749).\n- commit 66229f2\n\n- proc/vmcore: fix clearing user buffer by properly using\n  clear_user() (CVE-2021-47566 bsc#1225514).\n- commit 4f35255\n\n- usb: dwc2: fix possible NULL pointer dereference caused by\n  driver concurrency (CVE-2023-52855 bsc#1225583).\n- commit 304ea43\n\n- Refresh patches.kabi/net-preserve-kabi-for-sk_buff.patch.\n- commit fa7929b\n\n- net: preserve kabi for sk_buff (CVE-2024-26921 bsc#1223138).\n- commit 726f363\n\n- inet: inet_defrag: prevent sk release while still in use\n  (CVE-2024-26921 bsc#1223138).\n- commit 7846939\n\n- xhci: Fix commad ring abort, write all 64 bits to CRCR register\n  (CVE-2021-47434 bsc#1225232).\n- commit d92fac3\n\n- xhci: Fix command ring pointer corruption while aborting a\n  command (CVE-2021-47434 bsc#1225232).\n- blacklist.conf: taken so that the correct fix applies\n- commit ea90837\n\n- xsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n  (bsc#1224575 CVE-2024-35976).\n- commit 641c7c4\n\n- usb: fix various gadgets null ptr deref on 10gbps cabling\n  (CVE-2021-47270 bsc#1224997).\n- commit 00c58e2\n\n- usb: udc: remove warning when queue disabled ep (CVE-2024-35822\n  bsc#1224739).\n- commit dcaf30a\n\n- blacklist.conf: add cleanup fix that breaks kABI\n- commit cae1961\n\n- bpf, skmsg: Fix NULL pointer dereference in\n  sk_psock_skb_ingress_enqueue (bsc#1225761 CVE-2024-36938).\n- commit 24fab08\n\n- drm/client: Fully protect modes with dev-\u0026gt;mode_config.mutex (CVE-2024-35950 bsc#1224703).\n- commit f0cb811\n\n- smb: client: fix potential deadlock when releasing mids\n  (bsc#1225548, CVE-2023-52757).\n- commit 00dc86e\n\n- smb: client: fix potential UAF in is_valid_oplock_break()\n  (bsc#1224763, CVE-2024-35863).\n- commit be79366\n\n- smb: client: fix potential UAF in cifs_stats_proc_write()\n  (bsc#1224678, CVE-2024-35868).\n- commit 7c5946d\n\n- smb: client: fix potential UAF in cifs_stats_proc_show()\n  (bsc#1224664, CVE-2024-35867).\n- commit adb391f\n\n- smb: client: fix potential UAF in cifs_debug_files_proc_show()\n  (bsc#1223532, CVE-2024-26928).\n- commit 92bb153\n\n- smb: client: fix UAF in smb2_reconnect_server() (bsc#1224672,\n  CVE-2024-35870).\n- commit 4eabe16\n\n- smb: client: fix potential UAF in smb2_is_valid_lease_break()\n  (bsc#1224765, CVE-2024-35864).\n- commit 688ad5f\n\n- smb: client: fix potential UAF in smb2_is_network_name_deleted()\n  (bsc#1224764, CVE-2024-35862).\n- commit 6bbd54b\n\n- smb3: fix lock ordering potential deadlock in\n  cifs_sync_mid_result (bsc#1224549, CVE-2024-35998).\n- commit fbe7cb6\n\n- smb: client: fix potential UAF in smb2_is_valid_oplock_break()\n  (bsc#1224668, CVE-2024-35865).\n- commit 77a46ab\n\n- nvme-tcp: fix UAF when detecting digest errors (CVE-2022-48686 bsc#1223948).\n  Update blacklist.conf: remove entry\n- commit f159215\n\n- nvme-loop: fix memory leak in nvme_loop_create_ctrl() (CVE-2021-47074 bsc#1220854).\n  Update blacklist.conf: remove entry\n- commit 5f6a5df\n\n- nvme-rdma: destroy cm id before destroy qp to avoid use after\n  free (CVE-2021-47378 bsc#1225201).\n- commit 599a36a\n\n- nvmet: fix a use-after-free (CVE-2022-48697 bsc#1223922).\n  Update blacklist.conf: drop entry from it\n- commit 5e496a4\n\n- nvme-fc: do not wait in vain when unloading module\n  (CVE-2024-26846 bsc#1223023).\n- commit 365a6dd\n\n- blacklist.conf: add d380ce70058a4ccddc3e5f5c2063165dc07672c6\n  netrom: Fix data-races around sysctl_net_busy_read\n  (CVE-2024-27419 bsc#1224759)\n- commit 9b21914\n\n- net/tls: Fix flipped sign in tls_err_abort() calls\n  (CVE-2021-47496 bsc#1225354)\n- commit af28ae7\n\n- Update\n  patches.suse/0004-dm-fix-mempool-NULL-pointer-race-when-completing-IO.patch\n  (git-fixes bsc#1225247 CVE-2021-47435).\n- Update\n  patches.suse/0022-dm-btree-remove-assign-new_root-only-when-removal-su.patch\n  (git fixes bsc#1225155 CVE-2021-47343).\n- Update\n  patches.suse/0066-virtio-blk-Fix-memory-leak-among-suspend-resume-procedure.patch\n  (git-fixes bsc#1225054 CVE-2021-47319).\n- Update\n  patches.suse/HID-betop-fix-slab-out-of-bounds-Write-in-betop_prob.patch\n  (git-fixes bsc#1207186 bsc#1225303 CVE-2021-47404).\n- Update\n  patches.suse/IB-hfi1-Fix-leak-of-rcvhdrtail_dummy_kvaddr.patch\n  (git-fixes bsc#1225438 CVE-2021-47523).\n- Update\n  patches.suse/IB-mlx5-Fix-initializing-CQ-fragments-buffer.patch\n  (git-fixes bsc#1224954 CVE-2021-47261).\n- Update\n  patches.suse/IB-qib-Protect-from-buffer-overflow-in-struct-qib_us.patch\n  (git-fixes bsc#1224904 CVE-2021-47485).\n- Update\n  patches.suse/RDMA-cma-Ensure-rdma_addr_cancel-happens-before-issu.patch\n  (git-fixes bsc#1225318 CVE-2021-47391).\n- Update\n  patches.suse/RDMA-cma-Fix-rdma_resolve_route-memory-leak.patch\n  (git-fixes bsc#1225157 CVE-2021-47345).\n- Update\n  patches.suse/SUNRPC-Fix-RPC-client-cleaned-up-the-freed-pipefs-de.patch\n  (git-fixes bsc#1225008 CVE-2023-52803).\n- Update\n  patches.suse/blktrace-Fix-uaf-in-blk_trace-access-after-removing-.patch\n  (bsc#1191452 bsc#1225193 CVE-2021-47375).\n- Update patches.suse/can-peak_pci-peak_pci_remove-fix-UAF.patch\n  (git-fixes bsc#1225256 CVE-2021-47456).\n- Update\n  patches.suse/cifs-Fix-use-after-free-in-rdata-read_into_pages-.patch\n  (bsc#1190317 bsc#1225479 CVE-2023-52741).\n- Update\n  patches.suse/cifs-prevent-NULL-deref-in-cifs_compose_mount_options-.patch\n  (bsc#1185902 bsc#1224961 CVE-2021-47307).\n- Update\n  patches.suse/dma-buf-sync_file-Don-t-leak-fences-on-merge-failure.patch\n  (git-fixes bsc#1224968 CVE-2021-47305).\n- Update\n  patches.suse/drm-Fix-use-after-free-read-in-drm_getunique.patch\n  (git-fixes bsc#1224982 CVE-2021-47280).\n- Update\n  patches.suse/ftrace-Do-not-blindly-read-the-ip-address-in-ftrace_bug.patch\n  (git-fixes bsc#1224966 CVE-2021-47276).\n- Update patches.suse/gfs2-ignore-negated-quota-changes.patch\n  (git-fixes bsc#1225560 CVE-2023-52759).\n- Update\n  patches.suse/i40e-Fix-freeing-of-uninitialized-misc-IRQ-vector.patch\n  (bsc#1101816 FATE#325147 FATE#325149 bsc#1225367\n  CVE-2021-47424).\n- Update\n  patches.suse/igb-Fix-use-after-free-error-during-reset.patch\n  (git-fixes bsc#1224916 CVE-2021-47301).\n- Update\n  patches.suse/igc-Fix-use-after-free-error-during-reset.patch\n  (git-fixes bsc#1224917 CVE-2021-47302).\n- Update\n  patches.suse/ipv4-ipv6-Fix-handling-of-transhdrlen-in-__ip-6-_app.patch\n  (git-fixes bsc#1220928 CVE-2023-52527).\n- Update\n  patches.suse/isdn-mISDN-netjet-Fix-crash-in-nj_probe.patch\n  (git-fixes bsc#1224987 CVE-2021-47284).\n- Update\n  patches.suse/isofs-Fix-out-of-bound-access-for-corrupted-isofs-im.patch\n  (bsc#1194591 bsc#1225198 CVE-2021-47478).\n- Update\n  patches.suse/kprobes-Fix-possible-use-after-free-issue-on-kprobe-registration.patch\n  (git-fixes bsc#1224676 CVE-2024-35955).\n- Update\n  patches.suse/l2tp-pass-correct-message-length-to-ip6_append_data.patch\n  (git-fixes bsc#1222667 CVE-2024-26752).\n- Update\n  patches.suse/mISDN-fix-possible-use-after-free-in-HFC_cleanup.patch\n  (git-fixes bsc#1225143 CVE-2021-47356).\n- Update\n  patches.suse/media-zr364xx-fix-memory-leak-in-zr364xx_start_readp.patch\n  (git-fixes bsc#1224922 CVE-2021-47344).\n- Update\n  patches.suse/net-USB-Fix-wrong-direction-WARNING-in-plusb.c.patch\n  (git-fixes bsc#1225482 CVE-2023-52742).\n- Update\n  patches.suse/net-hns3-do-not-allow-call-hns3_nic_net_open-repeate.patch\n  (git-fixes bsc#1225329 CVE-2021-47400).\n- Update\n  patches.suse/net-mdiobus-Fix-memory-leak-in-__mdiobus_register.patch\n  (git-fixes bsc#1225189 CVE-2021-47472).\n- Update\n  patches.suse/net-mlx4_en-Fix-an-use-after-free-bug-in-mlx4_en_try.patch\n  (git-fixes bsc#1225453 CVE-2021-47541).\n- Update\n  patches.suse/net-nfc-rawsock.c-fix-a-permission-check-bug.patch\n  (git-fixes bsc#1224981 CVE-2021-47285).\n- Update patches.suse/net-qcom-emac-fix-UAF-in-emac_remove.patch\n  (git-fixes bsc#1225010 CVE-2021-47311).\n- Update patches.suse/net-ti-fix-UAF-in-tlan_remove_one.patch\n  (git-fixes bsc#1224959 CVE-2021-47310).\n- Update\n  patches.suse/net-usb-kalmia-Don-t-pass-act_len-in-usb_bulk_msg-er.patch\n  (git-fixes bsc#1225549 CVE-2023-52703).\n- Update\n  patches.suse/nfs-fix-acl-memory-leak-of-posix_acl_create.patch\n  (git-fixes bsc#1225058 CVE-2021-47320).\n- Update\n  patches.suse/nfsd-fix-use-after-free-due-to-delegation-race.patch\n  (git-fixes bsc#1225404 CVE-2021-47506).\n- Update\n  patches.suse/ocfs2-fix-data-corruption-after-conversion-from-inli.patch\n  (bsc#1190795 bsc#1225251 CVE-2021-47460).\n- Update\n  patches.suse/ocfs2-mount-fails-with-buffer-overflow-in-strlen.patch\n  (bsc#1197760 bsc#1225252 CVE-2021-47458).\n- Update patches.suse/phy-mdio-fix-memory-leak.patch (git-fixes\n  bsc#1225336 CVE-2021-47416).\n- Update\n  patches.suse/ppdev-Add-an-error-check-in-register_device.patch\n  (git-fixes bsc#1225640 CVE-2024-36015).\n- Update\n  patches.suse/s390-dasd-protect-device-queue-against-concurrent-access.patch\n  (git-fixes bsc#1217519 bsc#1225572 CVE-2023-52774).\n- Update\n  patches.suse/s390-qeth-fix-NULL-deref-in-qeth_clear_working_pool_list\n  (git-fixes bsc#1225164 CVE-2021-47369).\n- Update\n  patches.suse/s390-qeth-fix-deadlock-during-failing-recovery\n  (bsc#1206213 LTC#200742 bsc#1225207 CVE-2021-47382).\n- Update\n  patches.suse/scsi-core-Fix-bad-pointer-dereference-when-ehandler-kthread-is-invalid\n  (git-fixes bsc#1224926 CVE-2021-47337).\n- Update\n  patches.suse/scsi-core-Put-LLD-module-refcnt-after-SCSI-device-is-released\n  (git-fixes bsc#1225322 CVE-2021-47480).\n- Update\n  patches.suse/scsi-libfc-Fix-array-index-out-of-bound-exception.patch\n  (bsc#1188616 bsc#1224963 CVE-2021-47308).\n- Update\n  patches.suse/scsi-mpt3sas-Fix-kernel-panic-during-drive-powercycle-test\n  (git-fixes bsc#1225384 CVE-2021-47565).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-a-memory-leak-in-an-error-path-of-qla2x00_process_els\n  (git-fixes bsc#1225192 CVE-2021-47473).\n- Update\n  patches.suse/tipc-fix-a-possible-memleak-in-tipc_buf_append.patch\n  (bsc#1221977 CVE-2021-47162 bsc#1225764 CVE-2024-36954).\n- Update\n  patches.suse/tracing-Correct-the-length-check-which-causes-memory-corruption.patch\n  (git-fixes bsc#1224990 CVE-2021-47274).\n- Update\n  patches.suse/tracing-trigger-Fix-to-return-error-if-failed-to-alloc-snapshot.patch\n  (git-fixes CVE-2024-26920).\n- Update\n  patches.suse/tty-n_gsm-require-CAP_NET_ADMIN-to-attach-N_GSM0710-.patch\n  (bsc#1222619 CVE-2023-52880).\n- Update\n  patches.suse/tty-serial-8250-serial_cs-Fix-a-memory-leak-in-error.patch\n  (git-fixes bsc#1225084 CVE-2021-47330).\n- Update\n  patches.suse/udf-Fix-NULL-pointer-dereference-in-udf_symlink-func.patch\n  (bsc#1206646 bsc#1225128 CVE-2021-47353).\n- Update\n  patches.suse/usb-config-fix-iteration-issue-in-usb_get_bos_descri.patch\n  (git-fixes bsc#1225092 CVE-2023-52781).\n- Update\n  patches.suse/usb-dwc2-check-return-value-after-calling-platform_g.patch\n  (git-fixes bsc#1225330 CVE-2021-47409).\n- Update\n  patches.suse/usb-dwc3-ep0-fix-NULL-pointer-exception.patch\n  (git-fixes bsc#1224996 CVE-2021-47269).\n- Update patches.suse/usb-musb-dsps-Fix-the-probe-error-path.patch\n  (git-fixes bsc#1225244 CVE-2021-47436).\n- Update patches.suse/usbnet-sanity-check-for-maxpacket.patch\n  (git-fixes bsc#1225351 CVE-2021-47495).\n- Update\n  patches.suse/watchdog-Fix-possible-use-after-free-by-calling-del_.patch\n  (git-fixes bsc#1225060 CVE-2021-47321).\n- Update\n  patches.suse/watchdog-Fix-possible-use-after-free-in-wdt_startup.patch\n  (git-fixes bsc#1225030 CVE-2021-47324).\n- Update\n  patches.suse/watchdog-sc520_wdt-Fix-possible-use-after-free-in-wd.patch\n  (git-fixes bsc#1225026 CVE-2021-47323).\n- Update\n  patches.suse/wl1251-Fix-possible-buffer-overflow-in-wl1251_cmd_sc.patch\n  (git-fixes bsc#1225177 CVE-2021-47347).\n- commit 8975a47\n\n- powerpc/pseries/lparcfg: drop error message from guest name\n  lookup (bsc#1187716 ltc#193451 git-fixes).\n- commit 62b0891\n\n- blacklist.conf: PPC fsl_msi is not used\n- commit bbad33b\n\n- netfilter: nft_compat: explicitly reject ERROR and standard\n  target (git-fixes).\n- commit 46fdab6\n\n- netfilter: x_tables: set module owner for icmp(6) matches\n  (git-fixes).\n- commit 8835e2a\n\n- netfilter: nf_queue: augment nfqa_cfg_policy (git-fixes).\n- commit d5734cd\n\n- rds: avoid unenecessary cong_update in loop transport\n  (git-fixes).\n- commit 758da4a\n\n- cls_rsvp: check user supplied offsets (CVE-2023-42755\n  bsc#1215702).\n- commit b722f7c\n\n- l2tp: pass correct message length to ip6_append_data\n  (git-fixes).\n- commit 5edafdb\n\n- net: 9p: avoid freeing uninit memory in p9pdu_vreadf\n  (git-fixes).\n- commit fdb6a12\n\n- wifi: cfg80211: avoid leaking stack data into trace (git-fixes).\n- commit 58724e2\n\n- ipv4, ipv6: Fix handling of transhdrlen in\n  __ip{,6}_append_data() (git-fixes).\n- commit 7f0cb3d\n\n- rxrpc: Fix a memory leak in rxkad_verify_response() (git-fixes).\n- commit 301026e\n\n- wifi: radiotap: fix kernel-doc notation warnings (git-fixes).\n- commit a96badd\n\n- net: tcp: fix unexcepted socket die when snd_wnd is 0\n  (git-fixes).\n- commit 66b602a\n\n- tcp: tcp_make_synack() can be called from process context\n  (git-fixes).\n- commit 1171bb0\n\n- net/smc: fix fallback failed while sendmsg with fastopen\n  (git-fixes).\n- commit 85612f4\n\n- nfc: change order inside nfc_se_io error path (git-fixes).\n- commit 92d40f5\n\n- ila: do not generate empty messages in\n  ila_xlat_nl_cmd_get_mapping() (git-fixes).\n- commit bd4b08a\n\n- rds: ib: Fix missing call to rds_ib_dev_put in rds_ib_setup_qp\n  (git-fixes).\n- commit 30e8bf8\n\n- rxrpc: Work around usercopy check (git-fixes).\n- commit f1a8d7a\n\n- rxrpc: Don't put crypto buffers on the stack (git-fixes).\n- commit d4118f5\n\n- rxrpc: Provide a different lockdep key for call-\u0026gt;user_mutex\n  for kernel calls (git-fixes).\n- commit 256d44f\n\n- rxrpc: The mutex lock returned by rxrpc_accept_call() needs\n  releasing (git-fixes).\n- commit 56d0a26\n\n- net: atlantic: eliminate double free in error handling logic\n  (CVE-2023-52664 bsc#1224747).\n- ipvlan: add ipvlan_route_v6_outbound() helper (CVE-2023-52796\n  bsc#1224930).\n- net/mlx5e: Fix page reclaim for dead peer hairpin\n  (CVE-2021-47246 bsc#1224831).\n- commit e8481e2\n\n- ceph: blocklist the kclient when receiving corrupted snap trace\n  (bsc#1225222 CVE-2023-52732).\n- commit afa0bf6\n\n- btrfs: add missing mutex_unlock in btrfs_relocate_sys_chunks() (CVE-2024-35936 bsc#1224644)\n- commit 7904756\n\n- btrfs: handle chunk tree lookup error in btrfs_relocate_sys_chunks() (CVE-2024-35936 bsc#1224644)\n- commit 64d6920\n\n- ethernet: hisilicon: hns: hns_dsaf_misc: fix a possible array (bsc#1225506 CVE-2021-47548)\n- commit e4002ca\n\n- mmc: sdhci-msm: pervent access to suspended controller (bsc#1225708 CVE-2024-36029)\n- commit 0915583\n\n- llc: call sock_orphan() at release time\n  (CVE-2024-26625 bsc#1221086)\n- commit 1715209\n\n- blacklist.conf: not affected by CVE-2024-35984\n- commit 19bc954\n\n- virtio-net: Add validation for used length (CVE-2021-47352\n  bsc#1225124).\n- commit 91c03a8\n\n- calipso: fix memory leak in netlbl_calipso_add_pass()\n  (CVE-2023-52698 bsc#1224621)\n- commit 008f52c\n\n- blacklist.conf: Add c5b0a7eefc70 sched/fair: Remove sysctl_sched_migration_cost condition\n- commit dbc3425\n\n- ppdev: Add an error check in register_device (git-fixes).\n- commit d524561\n\n- drm/amdgpu: fix gart.bo pin_count leak (CVE-2021-47431 bsc#1225390).\n- commit 1e38f4d\n\n- btrfs: send: handle path ref underflow in header iterate_inode_ref() (CVE-2024-35935 bsc#1224645)\n- commit 0b2d17e\n\n- cifs: fix underflow in parse_server_interfaces() (bsc#1223084,\n  CVE-2024-26828).\n- commit 7164147\n\n- drm/nouveau/debugfs: fix file release memory leak (CVE-2021-47423 bsc#1225366).\n- commit 5f7b5c9\n\n- drm/radeon: fix a possible null pointer dereference (CVE-2022-48710 bsc#1225230).\n- commit ee59a3e\n\n- nvmem: Fix shift-out-of-bound (UBSAN) with byte size cells\n  (bsc#1225355 CVE-2021-47497).\n- commit 30121bc\n\n- drm/vc4: don't check if plane-\u0026gt;state-\u0026gt;fb == state-\u0026gt;fb (CVE-2024-35932 bsc#1224650).\n- commit 4fdcf5e\n\n- iio: mma8452: Fix trigger reference couting (bsc#1225360\n  CVE-2021-47500).\n- commit a0d87d5\n\n- PCI/PM: Drain runtime-idle callbacks before driver removal\n  (CVE-2024-35809 bsc#1224738).\n- commit 9f4d35b\n\n- tty: Fix out-of-bound vmalloc access in imageblit\n  (CVE-2021-47383 bsc#1225208).\n- commit a21c750\n\n- ALSA: pcm: oss: Fix negative period/buffer sizes (CVE-2021-47511\n  bsc#1225411).\n- commit 748d8c1\n\n- ALSA: pcm: oss: Limit the period size to 16MB (CVE-2021-47509\n  bsc#1225409).\n- commit 8f92260\n\n- x86/mm/pat: fix VM_PAT handling in COW mappings (bsc#1224525\n  CVE-2024-35877).\n- commit d228bf6\n\n- batman-adv: Avoid infinite loop trying to resize local TT\n  (CVE-2024-35982 bsc#1224566)\n- commit 4f15041\n\n- ipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n  (CVE-2024-35969 bsc#1224580)\n- commit bcaf17a\n\n- blacklist.conf: Add SPI fix commit to be ignored (CVE-2021-47469 bsc#1225347)\n  SLE12-SP5 has no devm spi controller allocation, hence it's superfluous\n- commit 939a6a5\n\n- kABI workaround for spi_controller (CVE-2021-47469 bsc#1225347).\n- commit af00c9b\n\n- spi: Fix deadlock when adding SPI controllers on SPI buses\n  (CVE-2021-47469 bsc#1225347).\n- commit 575a8d4\n\n- kvm: avoid speculation-based attacks from out-of-range memslot\n  accesses (bsc#1224960, CVE-2021-47277).\n- commit 7198007\n\n- KVM: SVM: Flush pages under kvm-\u0026gt;lock to fix UAF in\n  svm_register_enc_region() (bsc#1224725, CVE-2024-35791).\n- commit 818a70e\n\n- ipack: ipoctal: fix stack information leak (CVE-2021-47401\n  bsc#1225242).\n- commit 3e8997b\n\n- drm/radeon: possible buffer overflow (CVE-2023-52867 bsc#1225009).\n- commit 45094e6\n\n- drm/panel: fix a possible null pointer dereference (CVE-2023-52821 bsc#1225022).\n- commit 109e7f1\n\n- RDMA: Verify port when creating flow rule (CVE-2021-47265 bsc#1224957)\n- commit c0cbaec\n\n- drm/amd/pm: Update intermediate power state for SI (CVE-2021-47362 bsc#1225153).\n- commit 318c627\n\n- mcb: fix error handling in mcb_alloc_bus() (CVE-2021-47361\n  bsc#1225151).\n- commit 813b8ac\n\n- platform/x86: wmi: Fix opening of char device (CVE-2023-52864\n  bsc#1225132).\n- commit b207efb\n\n- pinctrl: single: fix potential NULL dereference (CVE-2022-48708\n  bsc#1224942).\n- commit feac349\n\n- VMCI: Fix memcpy() run-time warning in dg_dispatch_as_host()\n  (CVE-2024-35944 bsc#1224648).\n- commit a03c425\n\n- net: ipv4: fix memory leak in ip_mc_add1_src\n  (CVE-2021-47238 bsc#1224847)\n- commit 4ce368a\n\n- mmc: sdio: fix possible resource leaks in some error paths\n  (CVE-2023-52730 bsc#1224956).\n- commit 8629def\n\n- atm: nicstar: Fix possible use-after-free in nicstar_cleanup()\n  (CVE-2021-47355 bsc#1225141).\n- commit 111c5b1\n\n- netfilter: synproxy: Fix out of bounds when parsing TCP options\n  (CVE-2021-47245 bsc#1224838)\n- commit 3bf50df\n\n- of: module: prevent NULL pointer dereference in vsnprintf()\n  (CVE-2024-35878 bsc#1224671).\n- commit dcde1a4\n\n- IB/hfi1: Restore allocated resources on failed copyout (CVE-2023-52747 bsc#1224931)\n- commit 4ba08d9\n\n- net: rds: fix memory leak in rds_recvmsg\n  (CVE-2021-47249 bsc#1224880)\n- commit 79b2ee2\n\n- sctp: break out if skb_header_pointer returns NULL in sctp_rcv_ootb\n  (CVE-2021-47397 bsc#1225082)\n- commit 2340710\n\n- net: ipv4: fix memory leak in netlbl_cipsov4_add_std\n  (CVE-2021-47250 bsc#1224827)\n- commit ffd876f\n\n- btrfs: fix information leak in btrfs_ioctl_logical_to_ino()\n  (CVE-2024-35849 bsc#1224733).\n- commit 4e18545\n\n- ring-buffer: Fix a race between readers and resize checks\n  (bsc#1222893).\n- commit e55a48c\n\n- ASoC: tracing: Export SND_SOC_DAPM_DIR_OUT to its value\n  (git-fixes).\n- commit 56a4e35\n\n- tracing: hide unused ftrace_event_id_fops (git-fixes).\n- commit 6e3bbc9\n\n- tracing: Fix blocked reader of snapshot buffer (git-fixes).\n- commit 7cc9ae2\n\n- ALSA: usb-audio: Stop parsing channels bits when all channels\n  are found (CVE-2024-27436 bsc#1224803).\n- ALSA: seq: Fix race of snd_seq_timer_open() (CVE-2021-47281\n  bsc#1224983).\n- commit 19aff08\n\n- af_unix: annote lockless accesses to unix_tot_inflight \u0026amp; gc_in_progress (bsc#1223384).\n- commit 8ee0966\n\n- blacklist.conf: add not-needed or too intrusive tracing fixes\n- commit ab535d8\n\n- kprobes: Fix possible use-after-free issue on kprobe\n  registration (git-fixes).\n- commit fd63e27\n\n- tracing: Use .flush() call to wake up readers (git-fixes).\n- commit 4442cfe\n\n- tracing: Use strncpy instead of memcpy when copying comm in\n  trace.c (git-fixes).\n- commit 77a5fe6\n\n- ring-buffer: Clean ring_buffer_poll_wait() error return\n  (git-fixes).\n- commit dec7c48\n\n- wifi: mac80211: check/clear fast rx for non-4addr sta VLAN\n  changes (CVE-2024-35789 bsc#1224749).\n- media: tc358743: register v4l2 async device only after\n  successful setup (CVE-2024-35830 bsc#1224680).\n- misc/libmasm/module: Fix two use after free in ibmasm_init_one\n  (CVE-2021-47334 bsc#1225112).\n- atm: iphase: fix possible use-after-free in ia_module_exit()\n  (CVE-2021-47357 bsc#1225144).\n- commit 4495db1\n\n- clk: mediatek: clk-mt2701: Add check for mtk_alloc_clk_data\n  (CVE-2023-52875 bsc#1225096).\n- commit eff8019\n\n- clk: mediatek: clk-mt6797: Add check for mtk_alloc_clk_data\n  (CVE-2023-52865 bsc#1225086).\n- commit c2dc4d3\n\n- ax25: fix use-after-free bugs caused by ax25_ds_del_timer\n  (CVE-2024-35887 bzg#1224663)\n- commit 2bbaa4c\n\n- regmap: Fix possible double-free in regcache_rbtree_exit()\n  (CVE-2021-47483 bsc#1224907).\n- commit 1f96a36\n\n- s390/pci: fix max size calculation in zpci_memcpy_toio()\n  (git-fixes bsc#1225062).\n- commit 1d5a845\n\n- s390/zcrypt: fix reference counting on zcrypt card objects\n  (git-fixes CVE-2024-26957 bsc#1223666).\n- commit 1a50d91\n\n- KVM: s390: Check kvm pointer when testing KVM_CAP_S390_HPAGE_1M\n  (git-fixes bsc#1225059).\n- commit b5429fa\n\n- Refresh\n  patches.suse/USB-core-Fix-deadlock-in-usb_deauthorize_interface.patch.\n- Update\n  patches.suse/bpf-sockmap-Prevent-lock-inversion-deadlock-in-map-d.patch\n  (bsc#1209657 CVE-2023-0160 CVE-2024-35895 bsc#1224511).\n- Update\n  patches.suse/nfsd-Fix-error-cleanup-path-in-nfsd_rename.patch\n  (bsc#1221044 CVE-2023-52591 CVE-2024-35914 bsc#1224482).\n- Update\n  patches.suse/wifi-brcmfmac-Fix-use-after-free-bug-in-brcmf_cfg802.patch\n  (CVE-2023-47233 bsc#1216702 CVE-2024-35811 bsc#1224592).\n- commit 9a84305\n\n- Update\n  patches.suse/powerpc-powernv-Add-a-null-pointer-check-in-opal_eve.patch\n  (bsc#1065729 CVE-2023-52686 bsc#1224682).\n- Update\n  patches.suse/powerpc-powernv-Add-a-null-pointer-check-in-opal_pow.patch\n  (bsc#1181674 ltc#189159 git-fixes CVE-2023-52696 bsc#1224601).\n- Update\n  patches.suse/pstore-ram_core-fix-possible-overflow-in-persistent_ram_init_ecc.patch\n  (git-fixes CVE-2023-52685 bsc#1224728).\n- commit 0720a5d\n\n- Update\n  patches.suse/NFS-Fix-a-potential-NULL-dereference-in-nfs_get_clie.patch\n  (git-fixes CVE-2021-47260 bsc#1224834).\n- Update\n  patches.suse/PCI-aardvark-Fix-kernel-panic-during-PIO-transfer.patch\n  (git-fixes CVE-2021-47229 bsc#1224854).\n- Update\n  patches.suse/batman-adv-Avoid-WARN_ON-timing-related-checks.patch\n  (git-fixes CVE-2021-47252 bsc#1224882).\n- Update\n  patches.suse/can-mcba_usb-fix-memory-leak-in-mcba_usb.patch\n  (git-fixes CVE-2021-47231 bsc#1224849).\n- Update\n  patches.suse/gfs2-Fix-use-after-free-in-gfs2_glock_shrink_scan.patch\n  (git-fixes CVE-2021-47254 bsc#1224888).\n- Update\n  patches.suse/media-ngene-Fix-out-of-bounds-bug-in-ngene_command_c.patch\n  (git-fixes CVE-2021-47288 bsc#1224889).\n- Update\n  patches.suse/memory-fsl_ifc-fix-leak-of-IO-mapping-on-probe-failu.patch\n  (git-fixes CVE-2021-47315 bsc#1224892).\n- Update\n  patches.suse/memory-fsl_ifc-fix-leak-of-private-memory-on-probe-f.patch\n  (git-fixes CVE-2021-47314 bsc#1224893).\n- Update patches.suse/net-cdc_eem-fix-tx-fixup-skb-leak.patch\n  (git-fixes CVE-2021-47236 bsc#1224841).\n- Update\n  patches.suse/net-ethernet-fix-potential-use-after-free-in-ec_bhf_.patch\n  (git-fixes CVE-2021-47235 bsc#1224844).\n- Update\n  patches.suse/net-hamradio-fix-memory-leak-in-mkiss_close.patch\n  (git-fixes CVE-2021-47237 bsc#1224830).\n- Update\n  patches.suse/net-usb-fix-possible-use-after-free-in-smsc75xx_bind.patch\n  (bsc#1221994 CVE-2021-47171 CVE-2021-47239 bsc#1224846).\n- Update\n  patches.suse/scsi-core-Fix-error-handling-of-scsi_host_alloc\n  (git-fixes CVE-2021-47258 bsc#1224899).\n- Update\n  patches.suse/udp-fix-race-between-close-and-udp_abort.patch\n  (git-fixes CVE-2021-47248 bsc#1224867).\n- Update\n  patches.suse/usb-dwc3-core-fix-kernel-panic-when-do-reboot.patch\n  (git-fixes CVE-2021-47220 bsc#1224859).\n- commit 7295d7f\n\n- Update\n  patches.suse/gfs2-Fix-use-after-free-in-gfs2_glock_shrink_scan.patch\n  (git-fixes CVE-2021-47254).\n- commit 38ebdb5\n\n- blacklist.conf: pure cleanup\n- commit 5f0720c\n\n- blacklist.conf: we select the CONFIG whose absence triggers this in all\n  configs\n- commit 2c2df2e\n\n- assoc_array: Fix BUG_ON during garbage collect.\n- commit 56fe1ad\n\n- list: fix a data-race around ep-\u0026gt;rdllist (git-fixes).\n- commit f2db318\n\n- lib/mpi: use kcalloc in mpi_resize (git-fixes).\n- commit c463c57\n\n- net: usb: ax88179_178a: stop lying about skb-\u0026gt;truesize\n  (git-fixes).\n- commit c4bb7b5\n\n- drm/amd/pm: fix a double-free in si_dpm_init (CVE-2023-52691 bsc#1224607).\n- commit 7a87ede\n\n- Fix backport of :  NFS: Fix error handling for O_DIRECT write\n  scheduling (bsc#1224785).\n- commit e968faa\n\n- blacklist.conf: Add a1fd0b9d751f sched/fair: Allow disabling sched_balance_newidle with sched_relax_domain_level\n- commit 3567984\n\n- rpm/kernel-obs-build.spec.in: remove reiserfs from OBS initrd\n  We disabled the FS in bug 1202309. And we actively blacklist it in:\n  /usr/lib/modprobe.d/60-blacklist_fs-reiserfs.conf\n  This, as a side-effect, fixes obs-build's warning:\n  dracut-pre-udev[1463]: sh: line 1: /usr/lib/module-init-tools/unblacklist: No such file or directory\n  Exactly due to the above 60-blacklist_fs-reiserfs.conf trying to call the\n  above unblacklist.\n  We should likely drop ext2+ext3 from the list too, as we don't build\n  them at all. But that's a different story.\n- commit 9e1a078\n\n- Bluetooth: Fix use-after-free bugs caused by sco_sock_timeout\n  (bsc#1224174 CVE-2024-27398).\n- commit 231873b\n\n- af_unix: Fix garbage collector racing against connect()\n  (CVE-2024-26923 bsc#1223384).\n- af_unix: Replace BUG_ON() with WARN_ON_ONCE() (bsc#1223384).\n- af_unix: Do not use atomic ops for unix_sk(sk)-\u0026gt;inflight (bsc#1223384).\n- commit d9e2f79\n\n- blacklist.conf: btrfs: config fix for 256k pages\n- commit a9a21e4\n\n- btrfs: validate qgroup inherit for SNAP_CREATE_V2 ioctl (git-fixes)\n- commit db54449\n\n- btrfs: tree-checker: do not error out if extent ref hash doesn't match (git-fixes)\n- commit 874e705\n\n- btrfs: send: ensure send_fd is writable (git-fixes)\n- commit 7e0fb05\n\n- btrfs: send: limit number of clones and allocated memory size (git-fixes)\n- commit fa2504c\n\n- btrfs: fail mount when sb flag is not in BTRFS_SUPER_FLAG_SUPP (git-fixes)\n- commit 7f9b413\n\n- blacklist.conf: btrfs: metadata dump v2 definition only\n  e2731e55884f2138a252b0a3d7b24d57e49c3c59\n- commit b680815\n\n- btrfs: Fix out of bounds access in btrfs_search_slot (git-fixes)\n- commit 6b6da17\n\n- btrfs: fix deadlock when writing out space cache (git-fixes)\n- commit cdd0586\n\n- btrfs: Explicitly handle btrfs_update_root failure (git-fixes)\n- commit ac502aa\n\n- btrfs: undo writable superblocke when sprouting fails (git-fixes)\n- commit 9fbf261\n\n- btrfs: avoid null pointer dereference on fs_info when calling btrfs_crit (git-fixes)\n- commit daf7dc2\n\n- drm/msm/dpu: Add mutex lock in control vblank irq (CVE-2023-52586 bsc#1221081).\n- commit 474c511\n\n- btrfs: prevent to set invalid default subvolid (git-fixes)\n- commit c399d80\n\n- Btrfs: fix incorrect {node,sector}size endianness from BTRFS_IOC_FS_INFO (git-fixes)\n- commit b016cd3\n\n- Refresh patches.suse/nfs-fix-UAF-in-direct-writes.patch.\n  Fixup the build warning:\n  Changed build warnings:\n  * **** 1 warnings *****\n  * passing argument 1 of 'nfs_commit_end' from incompatible pointer type [enabled by default] (nfs_commit_end) in ../fs/nfs/direct.c in nfs_direct_commit_complete\n  ../fs/nfs/direct.c: In function 'nfs_direct_commit_complete':\n  ../fs/nfs/direct.c:668:2: warning: passing argument 1 of 'nfs_commit_end' from incompatible pointer type [enabled by default]\n- commit 10952b2\n\n- Update\n  patches.suse/USB-core-Fix-deadlock-in-usb_deauthorize_interface.patch\n  (git-fixes CVE-2024-26934 bsc#1223671).\n- commit cc5c596\n\n- s390/cpum_cf: make crypto counters upward compatible across\n  machine types (bsc#1224347).\n- commit 8af04c2\n\n- scsi: mpt3sas: Fix loop logic (git-fixes).\n- scsi: snic: Fix double free in snic_tgt_create() (git-fixes).\n- commit d29fa2d\n\n- ecryptfs: fix kernel panic with null dev_name (git-fixes)\n- commit 4ecd122\n\n- ecryptfs: Fix typo in message (git-fixes)\n- commit b1331d9\n\n- ep_create_wakeup_source(): dentry name can change under you (git-fixes)\n- commit e90f9bb\n\n- ecryptfs: fix a memory leak bug in ecryptfs_init_messaging() (git-fixes)\n- commit 7163ecf\n\n- ecryptfs: fix a memory leak bug in parse_tag_1_packet() (git-fixes)\n- commit d3aeb95\n\n- exportfs_decode_fh(): negative pinned may become positive without the parent locked (git-fixes)\n- commit 681e816\n\n- autofs: fix a leak in autofs_expire_indirect() (git-fixes)\n- commit 2e9a485\n\n- fs/proc/proc_sysctl.c: fix the default values of i_uid/i_gid on /proc/sys inodes (git-fixes)\n- commit 73af5d9\n\n- blacklist.conf: fs: fget/fput optimization\n  Commit looks safe but is not a fix rather than an optimization.\n- commit 2263087\n\n- fscrypt: clean up some BUG_ON()s in block encryption/decryption (git-fixes)\n- commit 2945a7c\n\n- blacklist.conf: fscrypt: depends on no-key format update\n  Fix depends on functionality added by edc440e3d27fb3 (\u0026quot;fscrypt: improve\n  format of no-key names\u0026quot;)\n- commit 871959c\n\n- nouveau: lock the client object tree. (bsc#1223834 CVE-2024-27062)\n- commit c775ad3\n\n- blacklist.conf: orangefs not supported\n- commit f732788\n\n- nouveau: fix instmem race condition around ptr stores (bsc#1223633 CVE-2024-26984)\n- commit 9350c2a\n\n- Refresh\n  patches.suse/x86-boot-Ignore-relocations-in-.notes-sections-in-walk_rel.patch.\n- commit 1389ef9\n\n- net: usb: smsc95xx: stop lying about skb-\u0026gt;truesize (git-fixes).\n- commit 3b70647\n\n- net: usb: sr9700: stop lying about skb-\u0026gt;truesize (git-fixes).\n- commit d83f5a1\n\n- usb: aqc111: stop lying about skb-\u0026gt;truesize (git-fixes).\n- commit 0a7bdae\n\n- Fix use-before-set in hand-coded part of patch\n  Refresh:\n  - patches.suse/scsi-iscsi_tcp-restrict-to-TCP-sockets.patch.\n- commit 757fd5b\n\n- Fix build warning about now-unused function\n  Refresh:\n  - patches.suse/scsi-libsas-Fix-disk-not-being-scanned-in-after-being-removed.patch\n- commit bbcdd67\n\n- Refresh\n  patches.suse/media-flexcop-usb-fix-NULL-ptr-deref-in-flexcop_usb_.patch.\n  Fix the Patch-mainline tag.\n- commit 3169adb\n\n- Bluetooth: btusb: Some Qualcomm Bluetooth adapters stop working\n  (git-fixes).\n- commit 23ff40d\n\n- usb: gadget: f_fs: Clear ffs_eventfd in ffs_data_clear\n  (bsc#1220487 CVE-2021-46933).\n- commit 33d6865\n\n- blacklist.conf: Add 9474c62ab65f net/sched: Add module alias for sch_fq_pie\n- commit b755821\n\n- net: gtp: Fix Use-After-Free in gtp_dellink (bsc#1224096\n  CVE-2024-27396).\n- commit a81f04c\n\n- blacklist.conf: add commits for some git-fixes to be skipped\n- commit c8e9217\n\n- scsi: qla2xxx: Fix off by one in qla_edif_app_getstats()\n  (git-fixes).\n- scsi: lpfc: Correct size for wqe for memset() (git-fixes).\n- scsi: libsas: Fix disk not being scanned in after being removed\n  (git-fixes).\n- scsi: libsas: Add a helper sas_get_sas_addr_and_dev_type()\n  (git-fixes).\n- scsi: bfa: Fix function pointer type mismatch for hcb_qe-\u0026gt;cbfn\n  (git-fixes).\n- scsi: csiostor: Avoid function pointer casts (git-fixes).\n- scsi: isci: Fix an error code problem in isci_io_request_build()\n  (git-fixes).\n- scsi: bnx2fc: Fix skb double free in bnx2fc_rcv() (git-fixes).\n- scsi: be2iscsi: Fix a memleak in beiscsi_init_wrb_handle()\n  (git-fixes).\n- scsi: megaraid_sas: Increase register read retry rount from\n  3 to 30 for selected registers (git-fixes).\n- scsi: libfc: Fix potential NULL pointer dereference in\n  fc_lport_ptp_setup() (git-fixes).\n- scsi: mpt3sas: Fix in error path (git-fixes).\n- scsi: iscsi_tcp: restrict to TCP sockets (git-fixes).\n- scsi: lpfc: Fix the NULL vs IS_ERR() bug for\n  debugfs_create_file() (git-fixes).\n- scsi: mpt3sas: Perform additional retries if doorbell read\n  returns 0 (git-fixes).\n- scsi: qedf: Do not touch __user pointer in\n  qedf_dbg_fp_int_cmd_read() directly (git-fixes).\n- scsi: qedf: Do not touch __user pointer in\n  qedf_dbg_debug_cmd_read() directly (git-fixes).\n- scsi: qedf: Do not touch __user pointer in\n  qedf_dbg_stop_io_on_error_cmd_read() directly (git-fixes).\n- scsi: qla4xxx: Add length check when parsing nlattrs\n  (git-fixes).\n- scsi: be2iscsi: Add length check when parsing nlattrs\n  (git-fixes).\n- scsi: iscsi: Add strlen() check in iscsi_if_set{_host}_param()\n  (git-fixes).\n- scsi: iscsi: Add length check for nlattr payload (git-fixes).\n- scsi: qedf: Fix firmware halt over suspend and resume\n  (git-fixes).\n- scsi: qedi: Fix firmware halt over suspend and resume\n  (git-fixes).\n- scsi: qedi: Fix potential deadlock on \u0026amp;qedi_percpu-\u0026gt;p_work_lock\n  (git-fixes).\n- scsi: snic: Fix possible memory leak if device_add() fails\n  (git-fixes).\n- scsi: core: Fix possible memory leak if device_add() fails\n  (git-fixes).\n- scsi: core: Fix legacy /proc parsing buffer overflow\n  (git-fixes).\n- scsi: 53c700: Check that command slot is not NULL (git-fixes).\n- scsi: 3w-xxxx: Add error handling for initialization failure\n  in tw_probe() (git-fixes).\n- scsi: lpfc: Fix double free in lpfc_cmpl_els_logo_acc() caused\n  by lpfc_nlp_not_used() (git-fixes).\n- scsi: qedf: Fix NULL dereference in error handling (git-fixes).\n- scsi: stex: Fix gcc 13 warnings (git-fixes).\n- scsi: core: Decrease scsi_device's iorequest_cnt if dispatch\n  failed (git-fixes).\n- commit 43436ef\n\n- Update\n  patches.suse/net-usb-fix-possible-use-after-free-in-smsc75xx_bind.patch\n  (bsc#1221994 CVE-2021-47171).\n  Added bugzilla ID and CVE\n  The initial fix was present, but it turned later out to be wrong\n  and the correct fix lacked the references.\n- commit cf80be9\n\n- usb: aqc111: check packet for fixup for true limit (bsc#1217169\n  CVE-2023-52655).\n- commit 9dd6dfa\n\n- btrfs: sysfs: use NOFS for device creation (git-fixes)\n  Adjustment: add #include\n- commit f20ad81\n\n- btrfs: send: in case of IO error log it (git-fixes)\n- commit 840f907\n\n- btrfs: fix lost error handling when looking up extended ref on log replay (git-fixes)\n- commit 20591f1\n\n- btrfs: check if root is readonly while setting security xattr (git-fixes)\n- commit 01674b5\n\n- btrfs: limit device extents to the device size (git-fixes)\n- commit 0ba992a\n\n- btrfs: fix btrfs_prev_leaf() to not return the same key twice (git-fixes)\n- commit 2834caf\n\n- btrfs: fix range_end calculation in extent_write_locked_range (git-fixes)\n- commit e723a0b\n\n- btrfs: scrub: reject unsupported scrub flags (git-fixes)\n- commit c5866de\n\n- btrfs: fix race when deleting quota root from the dirty cow roots list (git-fixes)\n- commit 1e8a661\n\n- btrfs: fix lockdep splat and potential deadlock after failure running delayed items (git-fixes)\n- commit 20fccdb\n\n- btrfs: record delayed inode root in transaction (git-fixes)\n- commit 7a64f13\n\n- btrfs: tree-checker: fix inline ref size in error messages (git-fixes)\n- commit 7031a61\n\n- btrfs: don't stop integrity writeback too early (git-fixes)\n- commit 9304b5f\n\n- md: fix kmemleak of rdev-\u0026gt;serial (CVE-2024-26900, bsc#1223046).\n- commit 0488367\n\n- firewire: nosy: ensure user_length is taken into account when\n  fetching packet contents (CVE-2024-27401 bsc#1224181).\n- commit f890e6b\n\n- aoe: avoid potential deadlock at set_capacity (CVE-2024-26775,\n  bsc#1222627).\n- commit 72683cd\n\n- Update\n  patches.suse/scsi-ufs-core-Improve-SCSI-abort-handling.patch\n  (bsc#1222671, CVE-2021-47188).\n- commit df1a16c\n\n- blacklist.conf: pure cleanup\n- commit b459965\n\n- blacklist.conf: irrelevant in our configs\n- commit 91ec532\n\n- blacklist.conf: pure cleanup\n- commit 4da5c7c\n\n- blacklist.conf: pure cleanup\n- commit c4855e9\n\n- blacklist.conf: pure cleanup\n- commit 00ca6d9\n\n- blacklist.conf: pure cleanup\n- commit a6aa054\n\n- blacklist.conf: pure cleanup\n- commit 27ba46a\n\n- nfs: fix UAF in direct writes (bsc#1223653 CVE-2024-26958).\n- commit 5347d82\n\n- scsi: libsas: Introduce struct smp_disc_resp (git-fixes).\n- commit 5fefdbb\n\n- drm/radeon: add a force flush to delay work when radeon (bsc#1223932 CVE-2022-48704)\n- commit 05d207f\n\n- blacklist.conf: Append 'drm/amd/display: Fix MST Null Ptr for RV'\n- commit aab0541\n\n- btrfs: don't get an EINTR during drop_snapshot for reloc (git-fixes)\n- commit 2f0ddbd\n\n- btrfs: tree-checker: add missing returns after data_ref alignment checks (git-fixes)\n- commit 465da04\n\n- btrfs: tree-checker: add missing return after error in root_item (git-fixes)\n- commit 2c66867\n\n- btrfs: fix return value mixup in btrfs_get_extent (git-fixes)\n- commit c7aefc2\n\n- btrfs: tree-checker: Fix misleading group system information (git-fixes)\n- Refresh patches.suse/0014-btrfs-tree-checker-get-fs_info-from-eb-in-block_grou.patch.\n- commit 4c1912f\n\n- btrfs: defrag: use btrfs_mod_outstanding_extents in cluster_pages_for_defrag (git-fixes)\n- commit 6b856de\n\n- btrfs: fix unaligned access in readdir (git-fixes)\n- Refresh patches.suse/btrfs-support-swap-files.patch.\n  Diff context only.\n- commit 0df1b83\n\n- btrfs: Fix NULL pointer exception in find_bio_stripe (git-fixes)\n- commit 99eebfb\n\n- net: vmxnet3: Fix NULL pointer dereference in\n  vmxnet3_rq_rx_complete() (bsc#1223360).\n- commit 829bff3\n\n- usb: host: ohci-tmio: check return value after calling\n  platform_get_resource() (bsc#1222894 CVE-2021-47206).\n- blacklist.conf: blacklist entry was a mistake caused by the driver\n  being dropped upstream, but only after SLE12\n- commit 740a25a\n\n- drm/amdgpu: Reset IH OVERFLOW_CLEAR bit (bsc#1223207 CVE-2024-26915)\n- commit f1d8ff2\n\n- Update\n  patches.suse/USB-usb-storage-Prevent-divide-by-0-error-in-isd200_.patch\n  (bsc#1223738 CVE-2024-27059).\n  Added CVE and bugzilla ids\n- commit 6bf9f21\n\n- usb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb\n  ep transport error (bsc#1223752 CVE-2024-26996).\n- commit f8904de\n\n- drm/mediatek: Fix a null pointer crash in (CVE-2024-26874 bsc#1223048)\n- commit e57c0ce\n\n- ALSA: emu10k1: Fix out of bounds access in\n  snd_emu10k1_pcm_channel_alloc() (bsc#1223923 CVE-2022-48702).\n- commit af9ea5f\n\n- of: fdt: fix off-by-one error in unflatten_dt_nodes()\n  (CVE-2022-48672 bsc#1223931).\n- commit 032891a\n\n- inet: read sk-\u0026gt;sk_family once in inet_recv_error() (bsc#1222385\n  CVE-2024-26679).\n- commit 5c9ee90\n\n- btrfs: abort in rename_exchange if we fail to insert the second ref (CVE-2021-47113 bsc#1221543)\n- Refresh patches.suse/btrfs-prevent-rename2-from-exchanging-a-subvol-with-a-directory-from-different-parents.patch.\n- commit 6cc4490\n\n- btrfs: dev-replace: properly validate device names (CVE-2024-26791 bsc#1222793)\n- commit cc0f00b\n\n- Update\n  patches.suse/net-sched-act_mirred-don-t-override-retval-if-we-alr.patch\n  references (CVE-2024-26739 bsc#1222559, drop incorrect references).\n- commit ea93ecf\n\n- net/tls: Remove the context from the list in tls_device_down\n  (bsc#1221545).\n- commit 58c1b25\n\n- tls: Fix context leak on tls_device_down (bsc#1221545).\n- commit 389808e\n\n- blacklist.conf: add 94ce3b64c62d\n  Blacklist commit 94ce3b64c62d (\u0026quot;net/tls: Use RCU API to access\n  tls_ctx-\u0026gt;netdev\u0026quot;). This is a follow-up to c55dcdd435aa which addresses an\n  issue which is rather theoretical and the backport would be quite\n  intrusive.\n- commit 8ca558a\n\n- ALSA: usb-audio: Fix an out-of-bounds bug in\n  __snd_usb_parse_audio_interface() (CVE-2022-48701 bsc#1223921).\n- commit 6f798e9\n\n- kabi: hide new member of struct tls_context (CVE-2021-47131\n  bsc#1221545).\n- net/tls: Fix use-after-free after the TLS device goes down\n  and up (CVE-2021-47131 bsc#1221545).\n- commit 8c186be\n\n- Update\n  patches.suse/SUNRPC-fix-some-memleaks-in-gssx_dec_option_array.patch\n  (git-fixes CVE-2024-27388 bsc#1223744).\n- Update\n  patches.suse/s390-Once-the-discipline-is-associated-with-the-device-de.patch\n  (bsc#1141539 git-fixes CVE-2024-27054 bsc#1223819).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-command-flush-on-cable-pull.patch\n  (bsc1221816 CVE-2024-26931 bsc#1223627).\n- Update patches.suse/scsi-qla2xxx-Fix-double-free-of-fcport.patch\n  (bsc1221816 CVE-2024-26929 bsc#1223715).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-double-free-of-the-ha-vp_map-pointe.patch\n  (bsc1221816 CVE-2024-26930 bsc#1223626).\n- commit daf9a87\n\n- Update\n  patches.suse/SUNRPC-fix-a-memleak-in-gss_import_v2_context.patch\n  (git-fixes CVE-2023-52653 bsc#1223712).\n- Update patches.suse/aio-fix-mremap-after-fork-null-deref.patch\n  (git-fixes CVE-2023-52646 bsc#1223432).\n- commit 793a07e\n\n- Update\n  patches.suse/i40e-Fix-kernel-crash-during-module-removal.patch\n  (git-fixes CVE-2022-48688 bsc#1223953).\n- Update\n  patches.suse/ipv6-sr-fix-out-of-bounds-read-when-setting-HMAC-dat.patch\n  (bsc#1211592 CVE-2023-2860 CVE-2022-48687 bsc#1223952).\n- Update\n  patches.suse/s390-dasd-fix-Oops-in-dasd_alias_get_start_dev-due-to-missing-pavgroup\n  (git-fixes CVE-2022-48636 bsc#1223512).\n- Update\n  patches.suse/scsi-mpt3sas-Fix-use-after-free-warning.patch\n  (git-fixes CVE-2022-48695 bsc#1223941).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-memory-leak-in-__qlt_24xx_handle_ab.patch\n  (bsc#1203935 CVE-2022-48650 bsc#1223509).\n- commit cc68904\n\n- Update\n  patches.suse/net-dsa-fix-a-crash-if-get_sset_count-fails.patch\n  (CVE-2021-47146 bsc#1221979 CVE-2021-47159 bsc#1221967).\n- Update\n  patches.suse/scsi-ufs-core-Improve-SCSI-abort-handling.patch\n  (bsc#11222671 CVE-2021-47188 bsc#1222671).\n- commit 5a613f4\n\n- Fix references of\n  patches.suse/net-dsa-fix-a-crash-if-get_sset_count-fails.patch\n  This fix actually refers to different CVE and bug report. Fix the error.\n- commit b797fc2\n\n- openvswitch: fix stack OOB read while fragmenting IPv4 packets\n  (CVE-2021-46955 bsc#1220513).\n- commit 1116e19\n\n- sctp: fix potential deadlock on \u0026amp;net-\u0026gt;sctp.addr_wq_lock\n  (CVE-2024-0639 bsc#1218917).\n- commit de19ab3\n\n- Update\n  patches.suse/SUNRPC-fix-some-memleaks-in-gssx_dec_option_array.patch\n  (git-fixes CVE-2024-27388 bsc#1223744).\n- Update\n  patches.suse/s390-Once-the-discipline-is-associated-with-the-device-de.patch\n  (bsc#1141539 git-fixes CVE-2024-27054 bsc#1223819).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-command-flush-on-cable-pull.patch\n  (bsc1221816 CVE-2024-26931 bsc#1223627).\n- Update patches.suse/scsi-qla2xxx-Fix-double-free-of-fcport.patch\n  (bsc1221816 CVE-2024-26929 bsc#1223715).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-double-free-of-the-ha-vp_map-pointe.patch\n  (bsc1221816 CVE-2024-26930 bsc#1223626).\n- commit d54495e\n\n- Update\n  patches.suse/SUNRPC-fix-a-memleak-in-gss_import_v2_context.patch\n  (git-fixes CVE-2023-52653 bsc#1223712).\n- Update patches.suse/aio-fix-mremap-after-fork-null-deref.patch\n  (git-fixes CVE-2023-52646 bsc#1223432).\n- commit 6164312\n\n- Update\n  patches.suse/s390-dasd-fix-Oops-in-dasd_alias_get_start_dev-due-to-missing-pavgroup\n  (git-fixes CVE-2022-48636 bsc#1223512).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-memory-leak-in-__qlt_24xx_handle_ab.patch\n  (bsc#1203935 CVE-2022-48650 bsc#1223509).\n- commit b81c322\n\n- drm/tegra: dsi: Add missing check for of_find_device_by_node (CVE-2023-52650 bsc#1223770)\n- commit 52453b3\n\n- livepatch: Fix missing newline character in\n  klp_resolve_symbols() (bsc#1223539).\n- commit a04a835\n\n- printk: Update @console_may_schedule in\n  console_trylock_spinning() (bsc#1223969).\n- commit 2217d14\n\n- fs: sysfs: Fix reference leak in sysfs_break_active_protection() (CVE-2024-26993 bsc#1223693)\n- commit d5b445d\n\n- drm: nv04: Fix out of bounds access (CVE-2024-27008 bsc#1223802).\n- commit d2971e3\n\n- usb: dwc2: Fix memory leak in dwc2_hcd_init.\n- commit b68c644\n\n- printk: Disable passing console lock owner completely during\n  panic() (bsc#1197894).\n- commit 7493ac1\n\n- Input: ipaq-micro-keys - add error handling for devm_kmemdup.\n- commit 8755dbb\n\n- Input: xpad - add PXN V900 support.\n- commit fbd5f3f\n\n- Input: adxl34x - do not hardcode interrupt trigger type\n  (git-fixes).\n- commit 926a03d\n\n- blacklist.conf: cleanup surpressing a warning\n- commit 922f659\n\n- Input: drv260x - sleep between polling GO bit (git-fixes).\n- commit e9e8d04\n\n- blacklist.conf: cleanup, not a fix, no code change\n- commit 9cb5758\n\n- blacklist.conf: driver not compiled\n- commit a3fa3df\n\n- blacklist.conf: driver not compiled\n- commit 9dfacec\n\n- blacklist.conf: driver not compiled\n- commit 1aef6fe\n\n- drm/amd/display: Add a dc_state NULL check in dc_state_release (CVE-2024-26948 bsc#1223664)\n- commit 04ae1fa\n\n- blacklist.conf: this patch enables features only\n- commit b3e7c52\n\n- blacklist.conf: false positive\n- commit 88b62ef\n\n- USB: core: Fix deadlock in usb_deauthorize_interface().\n- commit ab56ab9\n\n- USB: usb-storage: Prevent divide-by-0 error in\n  isd200_ata_command (git-fixes).\n- commit f114b54\n\n- usb: roles: don't get/set_role() when usb_role_switch is\n  unregistered.\n- commit d121124\n\n- usb: mon: Fix atomicity violation in mon_bin_vma_fault\n  (git-fixes).\n- commit 0605a2c\n\n- blacklist.conf: not enabled\n- commit 7aaa582\n\n- blacklist.conf: kABI\n- commit d241153\n\n- drivers: usb: host: Fix deadlock in oxu_bus_suspend()\n  (git-fixes).\n- commit 4bfa035\n\n- blacklist.conf: add two fuse commits from git-fixes\n- commit 57c7ed8\n\n- fuse: don't unhash root (bsc#1223954).\n- commit 4838661\n\n- tun: limit printing rate when illegal packet received by tun\n  dev (bsc#1223745 CVE-2024-27013).\n- net/mlx5e: Prevent deadlock while disabling aRFS (bsc#1223735\n  CVE-2024-27014).\n- nfp: flower: handle acti_netdevs allocation failure (bsc#1223827\n  CVE-2024-27046).\n- commit bb18705\n\n- tipc: fix a possible memleak in tipc_buf_append (bsc#1221977\n  CVE-2021-47162).\n- commit 503e448\n\n- media: usbtv: Remove useless locks in usbtv_video_free()\n  (CVE-2024-27072 bsc#1223837).\n- commit 784e536\n\n- media: dvb-frontends: avoid stack overflow warnings with clang\n  (CVE-2024-27075 bsc#1223842).\n- commit 134dc5e\n\n- media: ttpci: fix two memleaks in budget_av_attach\n  (CVE-2024-27073 bsc#1223843).\n- commit 13b28d2\n\n- media: go7007: fix a memleak in go7007_load_encoder\n  (CVE-2024-27074 bsc#1223844).\n- commit 54185dc\n\n- media: edia: dvbdev: fix a use-after-free (CVE-2024-27043\n  bsc#1223824).\n- commit 2732be2\n\n- s390/mm: Fix storage key clearing for guest huge pages\n  (git-fixes bsc#1223885).\n- commit cd536ee\n\n- s390/mm: Fix clearing storage keys for huge pages (git-fixes\n  bsc#1223883).\n- commit a8f7fd9\n\n- media: v4l2-tpg: fix some memleaks in tpg_alloc (CVE-2024-27078\n  bsc#1223781).\n- commit 9ec09ea\n\n- tty/sysrq: replace smp_processor_id() with get_cpu()\n  (bsc#1223540).\n- commit f6b8019\n\n- NTB: fix possible name leak in ntb_register_device()\n  (CVE-2023-52652 bsc#1223686).\n- commit ca5484d\n\n- scsi: ufs: core: Improve SCSI abort handling (bsc#11222671,\n  CVE-2021-47188).\n- blacklist.conf: remove 3ff1f6b\n- commit 9ba0cd1\n\n- drm/bridge: adv7511: fix crash on irq during probe (CVE-2024-26876 bsc#1223119).\n- commit be1e389\n\n- kABI workaround for cec_adapter (CVE-2024-23848 bsc#1219104).\n- media: cec: core: avoid recursive cec_claim_log_addrs\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: core: avoid confusing \u0026quot;transmit timed out\u0026quot; message\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: cec-api: add locking in cec_release()\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: cec-adap: always cancel work in cec_transmit_msg_fh\n  (CVE-2024-23848 bsc#1219104).\n- commit 6debb18\n\n- media: cec: abort if the current transmit was canceled\n  (CVE-2024-23848 bsc#1219104).\n- commit 331f0d4\n\n- cachefiles: fix memory leak in cachefiles_add_cache()\n  (bsc#1222976 CVE-2024-26840).\n- commit 7ab2bde\n\n- net/bnx2x: Prevent access to a freed page in page_pool\n  (bsc#1223049 CVE-2024-26859).\n- commit d2c8d25\n\n- spi: spi-fsl-dspi: Fix a resource leak in an error handling path\n  (CVE-2021-47161 bsc#1221966).\n- commit 86c2723\n\n- amdkfd: use calloc instead of kzalloc to avoid integer overflow (CVE-2024-26817 bsc#1222812)\n- commit e67f0f8\n\n- blacklist.conf: Append 'drm/amdgpu: fix use-after-free bug'\n- commit f438d4d\n\n- Update\n  patches.suse/smb3-fix-temporary-data-corruption-in-insert-range.patch\n  (bsc#1190317 CVE-2022-48667 bsc#1223518).\n- commit 91d9162\n\n- Update\n  patches.suse/smb3-fix-temporary-data-corruption-in-collapse-range.patch\n  (bsc#1190317 CVE-2022-48668 bsc#1223516).\n- commit 10d5c12\n\n- net: fujitsu: fix potential null-ptr-deref (bsc#1221972\n  CVE-2021-47149).\n- commit 9abeb19\n\n- tipc: skb_linearize the head skb when reassembling msgs\n  (bsc#1221977 CVE-2021-47162).\n- commit ba440f6\n\n- net: dsa: fix a crash if -\u0026gt;get_sset_count() fails\n  (CVE-2021-47146 bsc#1221979).\n- commit 599796c\n\n- mld: fix panic in mld_newpack() (CVE-2021-47146 bsc#1221979).\n- commit e3d5602\n\n- netfilter: nf_tables: disallow timeout for anonymous sets\n  (CVE-2023-52620 bsc#1221825).\n- commit f690b72\n\n- net/ipv6: avoid possible UAF in ip6_route_mpath_notify()\n  (CVE-2024-26852 bsc#1223057)\n- commit 598df4c\n\n- Update\n  patches.suse/s390-Once-the-discipline-is-associated-with-the-device-de.patch\n  (bsc#1141539 git-fixes).\n- commit b8b94c0\n\n- quota: Fix potential NULL pointer dereference (bsc#1223060\n  CVE-2024-26878).\n- commit 983d363\n\n- do_sys_name_to_handle(): use kzalloc() to fix kernel-infoleak\n  (bsc#1223198 CVE-2024-26901).\n- commit 2f53016\n\n- blk-mq: fix IO hang from sbitmap wakeup race (bsc#1222357\n  CVE-2024-26671).\n- commit ecdc50b\n\n- ext4: avoid allocating blocks from corrupted group in\n  ext4_mb_find_by_goal() (bsc#1222613 CVE-2024-26772).\n- commit 3d3003a\n\n- PM / devfreq: Fix buffer overflow in trans_stat_show\n  (CVE-2023-52614 bsc#1221617).\n- commit ad2729f\n\n- net: ice: Fix potential NULL pointer dereference in\n  ice_bridge_setlink() (bsc#1223051 CVE-2024-26855).\n- geneve: make sure to pull inner header in geneve_rx()\n  (bsc#1223058 CVE-2024-26857).\n- ppp_async: limit MRU to 64K (bsc#1222379 CVE-2024-26675).\n- ipvlan: Fix out-of-bound bugs caused by unset skb-\u0026gt;mac_header\n  (bsc#1223513 CVE-2022-48651).\n- commit bc8fe89\n\n- RDMA/mlx5: Fix fortify source warning while accessing Eth segment (bsc#1223203 CVE-2024-26907)\n- commit 1c532b6\n\n- regmap: prevent noinc writes from clobbering cache (bsc#1221162\n  CVE-2023-52488).\n- regmap: fix page selection for noinc writes (bsc#1221162\n  CVE-2023-52488).\n- regmap: fix page selection for noinc reads (bsc#1221162\n  CVE-2023-52488).\n- commit dc5bde0\n\n- blacklist.conf: false positive\n- commit 17b05a2\n\n- usb: dwc2: check return value after calling\n  platform_get_resource() (git-fixes).\n- commit 831627d\n\n- usb: dwc3: gadget: Ignore EP queue requests during bus reset\n  (git-fixes).\n- commit 270950d\n\n- drm/amdgpu: validate the parameters of bo mapping operations more (CVE-2024-26922 bsc#1223315)\n- commit 1a7d0fd\n\n- ipvs: Fix checksumming on GSO of SCTP packets (bsc#1221958)\n- commit 5e792b9\n\n- i40e: Fix NULL ptr dereference on VSI filter sync (bsc#1222666\n  CVE-2021-47184).\n- commit 1ad3e1d\n\n- usb: gadget: Fix issue with config_ep_by_speed function\n  (git-fixes).\n- commit e3f4200\n\n- x86/boot: Ignore relocations in .notes sections in walk_relocs() too (bsc#1222624 CVE-2024-26816).\n- commit b878a00\n\n- x86, relocs: Ignore relocations in .notes section (bsc#1222624 CVE-2024-26816).\n- commit d091560\n\n- blacklist.conf: Add 246f80a0b17f8 (\u0026quot;sh: push-switch: Reorder cleanup operations to avoid use-after-free bug\u0026quot;)\n- commit 8e38656\n\n- PM / devfreq: Synchronize devfreq_monitor_[start/stop]\n  (CVE-2023-52635 bsc#1222294).\n- commit faf3604\n\n- Update\n  patches.suse/Bluetooth-rfcomm-Fix-null-ptr-deref-in-rfcomm_check_-2535b848.patch\n  (bsc#1219170 CVE-2024-22099 CVE-2024-26903 bsc#1223187).\n- Update\n  patches.suse/aoe-fix-the-potential-use-after-free-problem-in-aoec.patch\n  (bsc#1218562 CVE-2023-6270 CVE-2024-26898 bsc#1223016).\n- Update\n  patches.suse/net-sched-act_mirred-don-t-override-retval-if-we-alr.patch\n  (CVE-2024-26733 bsc#1222585 CVE-2024-26739 bsc#1222559).\n- Update\n  patches.suse/sr9800-Add-check-for-usbnet_get_endpoints.patch\n  (git-fixes CVE-2024-26651 bsc#1221337).\n- commit f0c3935\n\n- Update\n  patches.suse/msft-hv-2480-x86-hyperv-Fix-NULL-deref-in-set_hv_tscchange_cb-if-.patch\n  (git-fixes CVE-2021-47217 bsc#1222836).\n- Update\n  patches.suse/net-dpaa2-eth-fix-use-after-free-in-dpaa2_eth_remove.patch\n  (git-fixes CVE-2021-47204 bsc#1222787).\n- Update patches.suse/scsi-advansys-Fix-kernel-pointer-leak.patch\n  (git-fixes CVE-2021-47216 bsc#1222876).\n- Update\n  patches.suse/scsi-lpfc-Fix-use-after-free-in-lpfc_unreg_rpi-routi.patch\n  (bsc#1192145 CVE-2021-47198 bsc#1222883).\n- commit 1aa3f8e\n\n- bpf: Fix stackmap overflow check on 32-bit arches (bsc#1223035\n  CVE-2024-26883).\n- bpf: Fix hashtab overflow check on 32-bit arches (bsc#1223189\n  CVE-2024-26884).\n- bpf: Check for integer overflow when using roundup_pow_of_two()\n  (bsc#1223035 CVE-2024-26883).\n- commit 4249641\n\n- IB/hfi1: Fix a memleak in init_credit_return (CVE-2024-26839 bsc#1222975)\n- commit 1b9aeec\n\n- Refresh\n  patches.suse/NFS-add-atomic_open-for-NFSv3-to-handle-O_TRUNC-corr.patch.\n  Handle too-long file names.\n- commit d3b61d6\n\n- wifi: b43: Stop/wake correct queue in DMA Tx path when QoS is\n  disabled (CVE-2023-52644 bsc#1222961).\n- commit 411fc96\n\n- clk: sunxi-ng: Unregister clocks/resets when unbinding\n  (CVE-2021-47205 bsc#1222888).\n- commit 67523b6\n\n- ALSA: usb-audio: fix null pointer dereference on pointer cs_desc\n  (CVE-2021-47211 bsc#1222869).\n- commit a86f817\n\n- Update\n  patches.suse/scsi-lpfc-Fix-list_add-corruption-in-lpfc_drain_txq.patch\n  (bsc#1190576 CVE-2021-47203 bsc#1222881).\n- commit 2cb2a3c\n\n- ALSA: gus: fix null pointer dereference on pointer block\n  (CVE-2021-47207 bsc#1222790).\n- commit 2c3256c\n\n- wifi: mac80211: fix race condition on enabling fast-xmit\n  (CVE-2024-26779 bsc#1222772).\n- commit 5e02fca\n\n- wifi: rt2x00: restart beacon queue when hardware reset\n  (CVE-2023-52595 bsc#1221046).\n- commit 671852b\n\n- ceph: prevent use-after-free in encode_cap_msg() (bsc#1222503\n  CVE-2024-26689).\n- commit 09813ff\n\n- blacklist.conf: Append 'drm/amdgpu: Fix variable 'mca_funcs' dereferenced before NULL check in 'amdgpu_mca_smu_get_mca_entry()''\n- commit cde121c\n\n- Update patches.suse/arp-Prevent-overflow-in-arp_req_get.patch\n- fix build warning\n- commit f10c34a\n\n- kABI: regmap: Add regmap_noinc_read/write API (bsc#1221162\n  CVE-2023-52488).\n- commit fb0c9d2\n\n- regmap: Add regmap_noinc_write API (bsc#1221162 CVE-2023-52488).\n- regmap: Add regmap_noinc_read API (bsc#1221162 CVE-2023-52488).\n- commit 60efad2\n\n- usb: roles: fix NULL pointer issue when put module's reference\n  (bsc#1222609 CVE-2024-26747).\n- commit 73af327\n\n- serial: sc16is7xx: convert from _raw_ to _noinc_ regmap\n  functions for FIFO (bsc#1221162 CVE-2023-52488).\n- commit a689f3e\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch (bsc#1222952)\n  Don't call set_cpu_caps when calling set_cpu_bug, this causes problems\n  with overlapping feature/bug ints. Directly call set_bit witht he\n  correct parameters.\n- commit 16e52e8\n\n- md/raid5: fix atomicity violation in raid5_cache_count (bsc#1219169, CVE-2024-23307).\n- commit c0dbc35\n\n- ext4: avoid allocating blocks from corrupted group in\n  ext4_mb_try_best_found() (bsc#1222618 CVE-2024-26773).\n- commit 4110538\n\n- thermal: Fix NULL pointer dereferences in of_thermal_ functions (CVE-2021-47202 bsc#1222878)\n- commit 08cf92c\n\n- md/raid5: fix atomicity violation in raid5_cache_count\n  (bsc#1219169, CVE-2024-23307).\n- commit 391774d\n\n- fbdev: sis: Error out if pixclock equals zero (bsc#1222765 CVE-2024-26777)\n- commit 283e632\n\n- fbdev: savage: Error out if pixclock equals zero (bsc#1222770 CVE-2024-26778)\n- commit c2c54cf\n\n- drm: Don't unref the same fb many times by mistake due to deadlock handling (CVE-2023-52486 bsc#1221277).\n- commit 5843530\n\n- blacklist.conf: add one more PCI git-fixes\n- commit 7baca5d\n\n- IB/ipoib: Fix mcast list locking (CVE-2023-52587 bsc#1221082)\n- commit 94cde16\n\n- RDMA/IPoIB: Fix error code return in ipoib_mcast_join (bsc#1221082)\n- commit 348c98c\n\n- RDMA/srp: Do not call scsi_done() from srp_abort() (CVE-2023-52515 bsc#1221048)\n- commit d5d3a97\n\n- RDMA/qedr: Fix qedr_create_user_qp error flow (bsc#1222677 CVE-2024-26743)\n- commit c49697b\n\n- RDMA/srpt: Support specifying the srpt_service_guid parameter (bsc#1222449 CVE-2024-26744)\n- commit 00d0add\n\n- NFS: avoid spurious warning of lost lock that is being unlocked\n  (bsc#1221791).\n- commit 63a2e3f\n\n- Update\n  patches.suse/NFS-add-atomic_open-for-NFSv3-to-handle-O_TRUNC-corr.patch\n  (bsc#1219847 bsc#1221862).\n  Fix a NULL-pointer-deref bug.  Make the patch closer to the patch I sent\n  upstream.\n- commit 5f62723\n\n- dm-crypt: don't modify the data when using authenticated\n  encryption (bsc#1222720, CVE-2024-26763).\n- commit 3e74213\n\n- scsi: core: Fix scsi_mode_sense() buffer length handling\n  (bsc#1222662 CVE-2021-47182).\n- commit 09c6ab5\n\n- dmaengine: ti: edma: Add some null pointer checks to the edma_probe (CVE-2024-26771 bsc#1222610)\n- commit 01a7e9c\n\n- netlink: Fix kernel-infoleak-after-free in __skb_datagram_iter\n  (bsc#1222630 CVE-2024-26805).\n- commit ad84c88\n\n- Update\n  patches.suse/gtp-fix-use-after-free-and-null-ptr-deref-in-gtp_gen.patch\n  (bsc#1222428 CVE-2024-26793 CVE-2024-26754 bsc#1222632).\n- commit b4d8fa6\n\n- Update\n  patches.suse/btrfs-fix-memory-ordering-between-normal-and-ordered-work-functions.patch\n  (git-fixes CVE-2021-47189 bsc#1222706).\n- commit d1ad6f0\n\n- tty: tty_buffer: Fix the softlockup issue in flush_to_ldisc\n  (bsc#1222669 CVE-2021-47185).\n- commit 24cc88e\n\n- PCI: pciehp: Add pciehp_set_indicators() to set both indicators\n  (git-fixes).\n- commit deaddb6\n\n- PCI/ASPM: Reduce severity of common clock config message\n  (git-fixes).\n- commit 00c0986\n\n- PCI/ASPM: Don't warn if already in common clock mode\n  (git-fixes).\n- commit 231253b\n\n- PCI/ASPM: Factor out pcie_wait_for_retrain() (git-fixes).\n- PCI/ASPM: Return 0 or -ETIMEDOUT from  pcie_retrain_link()\n  (git-fixes).\n- PCI: Rework pcie_retrain_link() wait loop (git-fixes).\n- commit 4a0cd5a\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n- commit 70aa480\n\n- Refresh patches.suse/x86-bhi-Add-BHI-mitigation-knob.patch.\n  Check for bug presence with cpu_has_bug rather than cpu_has so that\n  overlapping bug/feature bits are handled correctly\n- commit ec98c66\n\n- Update\n  patches.suse/scsi-lpfc-Fix-link-down-processing-to-address-NULL-p.patch\n  (bsc#1192145 CVE-2021-47183 bsc#1222664).\n- commit b599f2b\n\n- Update\n  patches.suse/usb-musb-tusb6010-check-return-value-after-calling-p.patch\n  (git-fixes CVE-2021-47181 bsc#1222660).\n- commit a0f1eaa\n\n- tty: n_gsm: require CAP_NET_ADMIN to attach N_GSM0710 ldisc\n  (bsc#1222619).\n- commit 94fc6e9\n\n- PCI: Mark 3ware-9650SE Root Port Extended Tags as broken\n  (git-fixes).\n- PCI/DPC: Print all TLP Prefixes, not just the first (git-fixes).\n- PCI/MSI: Prevent MSI hardware interrupt number truncation\n  (git-fixes).\n- PCI/sysfs: Protect driver's D3cold preference from user space\n  (git-fixes).\n- PCI/ASPM: Use RMW accessors for changing LNKCTL (git-fixes).\n- PCI: pciehp: Use RMW accessors for changing LNKCTL (git-fixes).\n- PCI: Make link retraining use RMW accessors for changing LNKCTL\n  (git-fixes).\n- PCI: Add locking to RMW PCI Express Capability Register\n  accessors (git-fixes).\n- kABI: PCI: Add locking to RMW PCI Express Capability Register\n  accessors (kabi).\n- PCI: qcom: Use DWC helpers for modifying the read-only DBI\n  registers (git-fixes).\n- PCI: qcom: Disable write access to read only registers for IP\n  v2.3.3 (git-fixes).\n- PCI: Add function 1 DMA alias quirk for Marvell 88SE9235\n  (git-fixes).\n- PCI: pciehp: Cancel bringup sequence if card is not present\n  (git-fixes).\n- PCI/ASPM: Avoid link retraining race (git-fixes).\n- commit 5d813c6\n\n- arp: Prevent overflow in arp_req_get() (CVE-2024-26733\n  bsc#1222585).\n- commit 64afd8b\n\n- net/sched: act_mirred: don't override retval if we already\n  lost the skb (CVE-2024-26733 bsc#1222585).\n- commit ec837ad\n\n- blacklist.conf: update blacklist\n- commit f1ca6cb\n\n- PCI/ASPM: Disable ASPM on MFD function removal to avoid\n  use-after-free (git-fixes).\n- PCI: pciehp: Fix AB-BA deadlock between reset_lock and\n  device_lock (git-fixes).\n- PCI: switchtec: Return -EFAULT for copy_to_user() errors\n  (git-fixes).\n- PCI: Avoid FLR for AMD FCH AHCI adapters (git-fixes).\n- PCI/IOV: Enlarge virtfn sysfs name buffer (git-fixes).\n- PCI: hotplug: Allow marking devices as disconnected during\n  bind/unbind (git-fixes).\n- PCI: dwc: Add unroll iATU space support to dw_pcie_disable_atu()\n  (git-fixes).\n- PCI: Add ACS quirk for Broadcom BCM5750x NICs (git-fixes).\n- commit 60d94f2\n\n- PCI: endpoint: Don't stop controller when unbinding endpoint\n  function (git-fixes).\n- PCI: qcom: Fix unbalanced PHY init on probe errors (git-fixes).\n- PCI: Avoid pci_dev_lock() AB/BA deadlock with\n  sriov_numvfs_store() (git-fixes).\n- PCI/PM: Power up all devices during runtime resume (git-fixes).\n- PCI/AER: Clear MULTI_ERR_COR/UNCOR_RCV bits (git-fixes).\n- PCI: aardvark: Fix setting MSI address (git-fixes).\n- PCI: aardvark: Fix support for MSI interrupts (git-fixes).\n- commit fd2813d\n\n- Refresh\n  patches.suse/Bluetooth-btsdio-fix-use-after-free-bug-in-btsdio_re.patch.\n  Add alternate ID for stable\n- commit 38c4e25\n\n- Bluetooth: btqcomsmd: Fix command timeout after setting BD\n  address (git-fixes).\n- commit de57587\n\n- Bluetooth: hci_intel: Add check for platform_driver_register\n  (git-fixes).\n- commit 0e58b3a\n\n- Bluetooth: btqca: Introduce HCI_EV_VENDOR and use it\n  (git-fixes).\n- commit 7e74176\n\n- Bluetooth: btqca: Fixed a coding style error (git-fixes).\n- commit 0f83a52\n\n- blacklist.conf: false positive (introduced v5.14, not backported)\n- commit e867532\n\n- ext4: fix double-free of blocks due to wrong extents moved_len\n  (bsc#1222422 CVE-2024-26704).\n- commit da029ac\n\n- Refresh\n  patches.suse/bpf-sockmap-Prevent-lock-inversion-deadlock-in-map-d.patch.\n- commit 6490813\n\n- gtp: fix use-after-free and null-ptr-deref in gtp_newlink()\n  (bsc#1222428 CVE-2024-26793).\n- gtp: fix use-after-free and null-ptr-deref in\n  gtp_genl_dump_pdp() (bsc#1222428 CVE-2024-26793).\n- commit 9c6b7d6\n\n- nfsd: Fix error cleanup path in nfsd_rename() (bsc#1221044\n  CVE-2023-52591).\n- commit b8b869c\n\n- usb: musb: Modify the \u0026quot;HWVers\u0026quot; register address (git-fixes).\n- commit d99cd58\n\n- blacklist.conf: This is a feature, not a fix\n- commit f6334d7\n\n- sr9800: Add check for usbnet_get_endpoints (git-fixes).\n- commit 24ceaa4\n\n- blacklist.conf: add unneeded PCI git-fixes\n- commit beed85d\n\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n  Fix aliasing problems if we have an extended capability which aliases a\n  non-extended bug bit. The fix is to always ensure that bug bits related\n  functionality doesn't use the \u0026quot;generic\u0026quot; cap functionality.\n- commit c674af2\n\n- Update\n  patches.suse/KVM-s390-vsie-fix-race-during-shadow-creation.patch\n  (git-fixes bsc#1220613 CVE-2023-52639 bsc#1222300).\n- Update\n  patches.suse/netfilter-nftables-exthdr-fix-4-byte-stack-OOB-write.patch\n  (CVE-2023-4881 bsc#1215221 CVE-2023-52628 bsc#1222117).\n- commit 5564fa1\n\n- nfsd: Fix error cleanup path in nfsd_rename() (git-fixes).\n- commit c8d258d\n\n- x86/bhi: Mitigate KVM by default (bsc#1217339 CVE-2024-2201).\n- commit 7079142\n\n- x86/bhi: Add BHI mitigation knob (bsc#1217339 CVE-2024-2201).\n- Update config files.\n- commit 41d6371\n\n- x86/bhi: Enumerate Branch History Injection (BHI) bug (bsc#1217339 CVE-2024-2201).\n- commit 2432a6f\n\n- x86/bhi: Define SPEC_CTRL_BHI_DIS_S (bsc#1217339 CVE-2024-2201).\n- commit fe53768\n\n- x86/bhi: Add support for clearing branch history at syscall entry (bsc#1217339 CVE-2024-2201).\n- Refresh patches.kabi/cpufeatures-kabi-fix.patch.\n- commit 955ab56\n\n- Fixup NULL ptr dereference due to mistake in backporting in\n  patches.suse/ext2-Avoid-reading-renamed-directory-if-parent-does-.patch.\n- commit 55001e0\n\n- Delete\n  patches.suse/x86-bugs-Fix-the-SRSO-mitigation-on-Zen3-4.patch.\n  the kernel fails to boot on x86:\n  [    0.048461] MDS: Vulnerable: Clear CPU buffers attempted, no microcode\n  [    0.048698] MMIO Stale Data: Unknown: No mitigations\n  qemu-system-x86_64: terminating on signal 15 from pid 42034 (timeout)\n- commit 035c88f\n\n- x86/cpufeature: Add missing leaf enumeration (bsc#1217339 CVE-2024-2201).\n- commit 248bb60\n\n- Update references\n- commit 1bab65d\n\n- scsi: lpfc: Fix a possible data race in\n  lpfc_unregister_fcf_rescan() (bsc#1219618 CVE-2024-24855).\n- commit 6004b44\n\n- media: xc4000: Fix atomicity violation in xc4000_get_frequency\n  (git-fixes bsc#1219623 CVE-2024-24861).\n- commit ad0b314\n\n- x86/bugs: Fix the SRSO mitigation on Zen3/4 (git-fixes).\n- commit 8032e89\n\n- bpf, sockmap: Prevent lock inversion deadlock in map delete elem\n  (bsc#1209657 CVE-2023-0160).\n- commit 40497a8\n\n- bpf, sockmap: Fix preempt_rt splat when using raw_spin_lock_t\n  (git-fixes).\n- commit 3c6384f\n\n- bnx2x: Fix enabling network interfaces without VFs (git-fixes).\n- commit b60bea3\n\n- ethernet: myri10ge: Fix missing error code in myri10ge_probe()\n  (git-fixes).\n- commit 71a7d56\n\n- bnx2x: Fix missing error code in bnx2x_iov_init_one()\n  (git-fixes).\n- commit 813cb9c\n\n- net: macb: ensure the device is available before accessing\n  GEMGXL control registers (git-fixes).\n- commit 1742349\n\n- net/qla3xxx: fix schedule while atomic in ql_sem_spinlock\n  (git-fixes).\n- commit 8e475cb\n\n- blacklist.conf: update blacklist\n- commit a7a5329\n\n- netfilter: nf_tables: disallow anonymous set with timeout flag\n  (CVE-2024-26642 bsc#1221830).\n- commit b3d18fd\n\n- netfilter: ctnetlink: fix possible refcount leak in\n  ctnetlink_create_conntrack() (CVE-2023-7192 bsc#1218479).\n- commit 0774a95\n\n- net: allwinner: Fix some resources leak in the error handling path of the probe and in the remove function (git-fixes).\n- commit d464181\n\n- ethernet: ucc_geth: fix definition and size of ucc_geth_tx_global_pram (git-fixes).\n- commit 6895e10\n\n- net/mlx5: Properly convey driver version to firmware (git-fixes).\n- commit 09bc4c8\n\n- net: stmmac: free tx skb buffer in stmmac_resume() (git-fixes).\n- commit 7769206\n\n- tun: honor IOCB_NOWAIT flag (git-fixes).\n- commit 1f0149b\n\n- atl1e: fix error return code in atl1e_probe() (git-fixes).\n- commit da6dd80\n\n- atl1c: fix error return code in atl1c_probe() (git-fixes).\n- commit 56e0459\n\n- net: atheros: switch from 'pci_' to 'dma_' API (git-fixes).\n- commit 47ce14b\n\n- blacklist.conf: update blacklist\n- commit dc2abcd\n\n- README.BRANCH: Remove copy of branch name\n- commit 26f4895\n\n- usb: dwc3: core: Do not perform GCTL_CORE_SOFTRESET during\n  bootup (bsc#1220628 CVE-2021-46941).\n- commit ebce255\n\n- usb: dwc3: core: balance phy init and exit (bsc#1220628\n  CVE-2021-46941).\n- commit 8f693d2\n\n- USB: usbfs: Don't WARN about excessively large memory\n  allocations.\n- commit 8172f18\n\n- ipv6: init the accept_queue's spinlocks in inet6_create\n  (bsc#1221293 CVE-2024-26614).\n- commit 6bea6a5\n\n- tcp: make sure init the accept_queue's spinlocks once\n  (bsc#1221293 CVE-2024-26614).\n- commit 800aa0a\n\n- userfaultfd: release page in error path to avoid BUG_ON\n  (CVE-2021-46988 bsc#1220706).\n- commit bcafeec\n\n- powerpc/mm: Fix null-pointer dereference in pgtable_cache_add\n  (CVE-2023-52607 bsc#1221061).\n- commit af6f33a\n\n- Update\n  patches.suse/net-nfc-llcp-Add-lock-when-modifying-device-list.patch\n  (git-fixes CVE-2023-52524 bsc#1220927).\n- Update\n  patches.suse/net-usb-smsc75xx-Fix-uninit-value-access-in-__smsc75.patch\n  (git-fixes CVE-2023-52528 bsc#1220843).\n- Update\n  patches.suse/nvmet-tcp-Fix-a-kernel-panic-when-host-sends-an-inva.patch\n  (bsc#1217987 bsc#1217988 bsc#1217989 CVE-2023-6535 CVE-2023-6536\n  CVE-2023-6356 CVE-2023-52454 bsc#1220320).\n- Update\n  patches.suse/ocfs2-Avoid-touching-renamed-directory-if-parent-doe.patch\n  (bsc#1221044 CVE-2023-52591 CVE-2023-52590 bsc#1221088).\n- Update\n  patches.suse/ravb-Fix-use-after-free-issue-in-ravb_tx_timeout_wor.patch\n  (bsc#1212514 CVE-2023-35827 CVE-2023-52509 bsc#1220836).\n- Update\n  patches.suse/x86-srso-fix-sbpb-enablement-for-spec_rstack_overflow-off.patch\n  (git-fixes CVE-2023-52575 bsc#1220871).\n- commit 2258ead\n\n- Update patches.suse/mmc-moxart_remove-Fix-UAF.patch (bsc#1194516\n  CVE-2022-0487 CVE-2022-48626 bsc#1220366).\n- commit 10fc152\n\n- Update\n  patches.suse/0019-dm-rq-fix-double-free-of-blk_mq_tag_set-in-dev-remov.patch\n  (git fixes CVE-2021-46938 bsc#1220554).\n- Update\n  patches.suse/ACPI-custom_method-fix-potential-use-after-free-issu.patch\n  (git-fixes CVE-2021-46966 bsc#1220572).\n- Update\n  patches.suse/ARM-footbridge-fix-PCI-interrupt-mapping.patch\n  (git-fixes CVE-2021-46909 bsc#1220442).\n- Update\n  patches.suse/IB-qib-Fix-memory-leak-in-qib_user_sdma_queue_pkts.patch\n  (git-fixes CVE-2021-47104 bsc#1220960).\n- Update\n  patches.suse/NFC-nci-fix-memory-leak-in-nci_allocate_device.patch\n  (git-fixes CVE-2021-47180 bsc#1221999).\n- Update\n  patches.suse/NFS-Don-t-corrupt-the-value-of-pg_bytes_written-in-n.patch\n  (git-fixes CVE-2021-47166 bsc#1221998).\n- Update\n  patches.suse/NFS-Fix-an-Oopsable-condition-in-__nfs_pageio_add_re.patch\n  (git-fixes CVE-2021-47167 bsc#1221991).\n- Update\n  patches.suse/NFS-fix-an-incorrect-limit-in-filelayout_decode_layo.patch\n  (git-fixes CVE-2021-47168 bsc#1222002).\n- Update\n  patches.suse/NFSv4-Fix-a-NULL-pointer-dereference-in-pnfs_mark_ma.patch\n  (git-fixes CVE-2021-47179 bsc#1222001).\n- Update\n  patches.suse/asix-fix-uninit-value-in-asix_mdio_read.patch\n  (git-fixes CVE-2021-47101 bsc#1220987).\n- Update\n  patches.suse/bnxt_en-Fix-RX-consumer-index-logic-in-the-error-pat.patch\n  (git-fixes CVE-2021-47015 bsc#1220794).\n- Update\n  patches.suse/btrfs-fix-race-between-transaction-aborts-and-fsyncs.patch\n  (bsc#1186441 CVE-2021-46958 bsc#1220521).\n- Update\n  patches.suse/cifs-Return-correct-error-code-from-smb2_get_enc_key.patch\n  (git-fixes CVE-2021-46960 bsc#1220528).\n- Update\n  patches.suse/crypto-qat-ADF_STATUS_PF_RUNNING-should-be-set-after.patch\n  (git-fixes CVE-2021-47056 bsc#1220769).\n- Update\n  patches.suse/cxgb4-avoid-accessing-registers-when-clearing-filter.patch\n  (bsc#1136345 jsc#SLE-4681 CVE-2021-47138 bsc#1221934).\n- Update patches.suse/drm-amdgpu-Fix-a-use-after-free.patch\n  (git-fixes CVE-2021-47142 bsc#1221952).\n- Update\n  patches.suse/drm-meson-fix-shutdown-crash-when-component-not-prob.patch\n  (git-fixes CVE-2021-47165 bsc#1221965).\n- Update\n  patches.suse/ethernet-enic-Fix-a-use-after-free-bug-in-enic_hard_.patch\n  (bsc#1113431 CVE-2021-46998 bsc#1220625).\n- Update\n  patches.suse/ext4-fix-bug-on-in-ext4_es_cache_extent-as-ext4_spli.patch\n  (bsc#1187408 CVE-2021-47117 bsc#1221575).\n- Update\n  patches.suse/ext4-fix-memory-leak-in-ext4_fill_super.patch\n  (bsc#1187409 CVE-2021-47119 bsc#1221608).\n- Update\n  patches.suse/gve-Add-NULL-pointer-checks-when-freeing-irqs.patch\n  (bsc#1176940 CVE-2021-47141 bsc#1221949).\n- Update\n  patches.suse/i2c-i801-Don-t-generate-an-interrupt-on-bus-reset.patch\n  (git-fixes CVE-2021-47153 bsc#1221969).\n- Update patches.suse/iommu-vt-d-fix-sysfs-leak-in-alloc_iommu\n  (bsc#1189272 CVE-2021-47177 bsc#1221997).\n- Update\n  patches.suse/ipmi-Fix-UAF-when-uninstall-ipmi_si-and-ipmi_msghand.patch\n  (git-fixes CVE-2021-47100 bsc#1220985).\n- Update\n  patches.suse/kvm-destroy-i-o-bus-devices-on-unregister-failure-after_-sync-ing-srcu\n  (CVE-2020-36312 bsc#1184509 CVE-2021-47061 bsc#1220745).\n- Update\n  patches.suse/kvm-stop-looking-for-coalesced-mmio-zones-if-the-bus-is-destroyed\n  (CVE-2020-36312 bsc#1184509 CVE-2021-47060 bsc#1220742).\n- Update\n  patches.suse/md-raid1-properly-indicate-failure-when-ending-a-fai.patch\n  (bsc#1185680 CVE-2021-46950 bsc#1220662).\n- Update\n  patches.suse/misc-uss720-fix-memory-leak-in-uss720_probe.patch\n  (git-fixes CVE-2021-47173 bsc#1221993).\n- Update\n  patches.suse/msft-hv-2305-Drivers-hv-vmbus-Use-after-free-in-__vmbus_open.patch\n  (git-fixes CVE-2021-47049 bsc#1220692).\n- Update\n  patches.suse/msft-hv-2316-uio_hv_generic-Fix-a-memory-leak-in-error-handling-p.patch\n  (git-fixes CVE-2021-47071 bsc#1220846).\n- Update\n  patches.suse/msft-hv-2317-uio_hv_generic-Fix-another-memory-leak-in-error-hand.patch\n  (git-fixes CVE-2021-47070 bsc#1220829).\n- Update\n  patches.suse/mtd-require-write-permissions-for-locking-and-badblo.patch\n  (git-fixes CVE-2021-47055 bsc#1220768).\n- Update\n  patches.suse/nbd-Fix-NULL-pointer-in-flush_workqueue-79eb.patch\n  (git-fixes CVE-2021-46981 bsc#1220611).\n- Update\n  patches.suse/net-fec-fix-the-potential-memory-leak-in-fec_enet_in.patch\n  (git-fixes CVE-2021-47150 bsc#1221973).\n- Update\n  patches.suse/net-nfc-fix-use-after-free-llcp_sock_bind-connect.patch\n  (CVE-2021-23134 bsc#1186060 CVE-2021-47068 bsc#1220739).\n- Update\n  patches.suse/net-smc-remove-device-from-smcd_dev_list-after-failed-device_add\n  (git-fixes CVE-2021-47143 bsc#1221988).\n- Update\n  patches.suse/net-usb-fix-memory-leak-in-smsc75xx_bind.patch\n  (git-fixes CVE-2021-47171 bsc#1221994).\n- Update patches.suse/ocfs2-fix-data-corruption-by-fallocate.patch\n  (bsc#1187412 CVE-2021-47114 bsc#1221548).\n- Update\n  patches.suse/pid-take-a-reference-when-initializing-cad_pid.patch\n  (bsc#1114648 CVE-2021-47118 bsc#1221605).\n- Update\n  patches.suse/platform-x86-dell-smbios-wmi-Fix-oops-on-rmmod-dell_.patch\n  (git-fixes CVE-2021-47073 bsc#1220850).\n- Update\n  patches.suse/powerpc-64s-Fix-crashes-when-toggling-entry-flush-ba.patch\n  (bsc#1177666 git-fixes bsc#1186460 ltc#192531 CVE-2021-46990\n  bsc#1220743).\n- Update\n  patches.suse/powerpc-64s-Fix-pte-update-for-kernel-memory-on-radi.patch\n  (bsc#1055117 git-fixes CVE-2021-47034 bsc#1220687).\n- Update\n  patches.suse/scsi-lpfc-Fix-null-pointer-dereference-in-lpfc_prep_.patch\n  (bsc#1182574 CVE-2021-47045 bsc#1220640).\n- Update\n  patches.suse/scsi-qla2xxx-Fix-crash-in-qla2xxx_mqueuecommand.patch\n  (bsc#1185491 CVE-2021-46963 bsc#1220536).\n- Update patches.suse/scsi-qla2xxx-Reserve-extra-IRQ-vectors.patch\n  (bsc#1185491 CVE-2021-46964 bsc#1220538).\n- Update\n  patches.suse/serial-rp2-use-request_firmware-instead-of-request_f.patch\n  (git-fixes CVE-2021-47169 bsc#1222000).\n- Update\n  patches.suse/tracing-Restructure-trace_clock_global-to-never-block.patch\n  (git-fixes CVE-2021-46939 bsc#1220580).\n- Update\n  patches.suse/vsock-virtio-free-queued-packets-when-closing-socket.patch\n  (git-fixes CVE-2021-47024 bsc#1220637).\n- Update\n  patches.suse/x86-kvm-Disable-kvmclock-on-all-CPUs-on-shutdown.patch\n  (bsc#1185308 CVE-2021-47110 bsc#1221532).\n- Update\n  patches.suse/x86-kvm-Teardown-PV-features-on-boot-CPU-as-well.patch\n  (bsc#1185308 CVE-2021-47112 bsc#1221541).\n- commit fa763cd\n\n- Update\n  patches.suse/netlabel-fix-out-of-bounds-memory-accesses.patch\n  (networking-stable-19_03_07 CVE-2019-25160 bsc#1220394).\n- commit cfd1daa\n\n- IB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests (bsc#1220445 CVE-2023-52474)\n- commit 71ecb14\n\n- s390/vtime: fix average steal time calculation (git-fixes\n  bsc#1221953).\n- commit ccf7a1f\n\n- s390/ptrace: handle setting of fpc register correctly\n  (CVE-2023-52598 bsc#1221060 git-fixes).\n- commit 0d179a3\n\n- wifi: ath10k: fix NULL pointer dereference in\n  ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev() (bsc#1218336\n  CVE-2023-7042).\n- commit 1463c4a\n\n- x86/CPU/AMD: Update the Zenbleed microcode revisions (git-fixes).\n- commit 11a703b\n\n- kabi fix for pNFS: Fix the pnfs block driver's calculation of\n  layoutget size (git-fixes).\n- commit 188e451\n\n- pNFS: Fix the pnfs block driver's calculation of layoutget size\n  (git-fixes).\n- NFS: Fix O_DIRECT locking issues (git-fixes).\n- NFS: Fix direct WRITE throughput regression (git-fixes).\n- commit 53dafcd\n\n- NFS: Fix an off by one in root_nfs_cat() (git-fixes).\n- net: sunrpc: Fix an off by one in rpc_sockaddr2uaddr()\n  (git-fixes).\n- SUNRPC: fix a memleak in gss_import_v2_context (git-fixes).\n- NFS: More O_DIRECT accounting fixes for error paths (git-fixes).\n- NFS: Fix error handling for O_DIRECT write scheduling\n  (git-fixes).\n- nfs: only issue commit in DIO codepath if we have uncommitted\n  data (git-fixes).\n- NFS: Fix a request reference leak in\n  nfs_direct_write_clear_reqs() (git-fixes).\n- NFS: Fix O_DIRECT commit verifier handling (git-fixes).\n- NFS: commit errors should be fatal (git-fixes).\n- commit c3fe0ca\n\n- Bluetooth: rfcomm: Fix null-ptr-deref in rfcomm_check_security\n  (bsc#1219170 CVE-2024-22099).\n- commit f6c10f5\n\n- scsi: qla2xxx: Update version to 10.02.09.200-k (bsc1221816).\n- scsi: qla2xxx: Delay I/O Abort on PCI error (bsc1221816).\n- scsi: qla2xxx: Change debug message during driver unload\n  (bsc1221816).\n- scsi: qla2xxx: Fix double free of fcport (bsc1221816).\n- scsi: qla2xxx: Fix double free of the ha-\u0026gt;vp_map pointer\n  (bsc1221816).\n- scsi: qla2xxx: Fix command flush on cable pull (bsc1221816).\n- scsi: qla2xxx: NVME|FCP prefer flag not being honored\n  (bsc1221816).\n- scsi: qla2xxx: Update manufacturer detail (bsc1221816).\n- scsi: qla2xxx: Split FCE|EFT trace control (bsc1221816).\n- scsi: qla2xxx: Fix N2N stuck connection (bsc1221816).\n- scsi: qla2xxx: Prevent command send on chip reset (bsc1221816).\n- commit 61951e8\n\n- drm: bridge/panel: Cleanup connector on bridge detach (bsc#1220777, CVE-2021-47063)\n  Backporting changes:\n- add patch at the top of panel_bridge_detach()\n- commit 760a99d\n\n- aoe: fix the potential use-after-free problem in aoecmd_cfg_pkts\n  (bsc#1218562 CVE-2023-6270).\n- commit 4e659c8\n\n- net: Fix features skip in for_each_netdev_feature() (git-fixes).\n- commit b1996ba\n\n- rename(): avoid a deadlock in the case of parents having no\n  common ancestor (bsc#1221044 CVE-2023-52591).\n- commit 16f9b33\n\n- kill lock_two_inodes() (bsc#1221044 CVE-2023-52591).\n- commit c8410b2\n\n- rename(): fix the locking of subdirectories (bsc#1221044\n  CVE-2023-52591).\n- commit b34d065\n\n- f2fs: Avoid reading renamed directory if parent does not change\n  (bsc#1221044 CVE-2023-52591).\n- commit 95ecb76\n\n- ext4: don't access the source subdirectory content on\n  same-directory rename (bsc#1221044 CVE-2023-52591).\n- commit e81c5d2\n\n- ext2: Avoid reading renamed directory if parent does not change\n  (bsc#1221044 CVE-2023-52591).\n- commit 47af51c\n\n- udf_rename(): only access the child content on cross-directory\n  rename (bsc#1221044 CVE-2023-52591).\n- commit 3e77e59\n\n- ocfs2: Avoid touching renamed directory if parent does not\n  change (bsc#1221044 CVE-2023-52591).\n- commit ef44829\n\n- reiserfs: Avoid touching renamed directory if parent does not\n  change (git-fixes bsc#1221044 CVE-2023-52591).\n  Refresh patches.suse/reiserfs-add-check-to-detect-corrupted-directory-entry.patch\n  Refresh patches.suse/reiserfs-don-t-panic-on-bad-directory-entries.patch\n- commit 304c6b9\n\n- fs: don't assume arguments are non-NULL (bsc#1221044\n  CVE-2023-52591).\n- commit 74a158f\n\n- fs: Restrict lock_two_nondirectories() to non-directory inodes\n  (bsc#1221044 CVE-2023-52591).\n- commit 2042147\n\n- fs: ocfs2: check status values (bsc#1221044 CVE-2023-52591).\n- commit 24568a1\n\n- fs: no need to check source (bsc#1221044 CVE-2023-52591).\n- commit 95711fd\n\n- fs: Lock moved directories (bsc#1221044 CVE-2023-52591).\n- commit 2b2136e\n\n- fs: Establish locking order for unrelated directories\n  (bsc#1221044 CVE-2023-52591).\n- commit c49cfde\n\n- fs: introduce lock_rename_child() helper (bsc#1221044\n  CVE-2023-52591).\n- commit 84b4b7d\n\n- dwc3: switch to a global mutex (bsc#1220628 CVE-2021-46941).\n- commit d93342d\n\n- usb: dwc3: core: Do core softreset when switch mode (bsc#1220628\n  CVE-2021-46941).\n- blacklist.conf: needed after all for a CVE\n- Refresh\n  patches.suse/USB-dwc3-fix-runtime-pm-imbalance-on-probe-errors.patch.\n- Refresh\n  patches.suse/usb-dwc3-Fix-race-between-dwc3_set_mode-and-__dwc3_s.patch.\n- commit 7ca4d31\n\n- Input: add bounds checking to input_set_capability()\n  (bsc#1218220 CVE-2022-48619).\n- commit f42351b\n\n- NFSD: Retransmit callbacks after client reconnects (git-fixes).\n- NFSD: Reset cb_seq_status after NFS4ERR_DELAY (git-fixes).\n- SUNRPC: fix some memleaks in gssx_dec_option_array (git-fixes).\n- NFSv4.1/pnfs: Ensure we handle the error NFS4ERR_RETURNCONFLICT\n  (git-fixes).\n- SUNRPC: Fix RPC client cleaned up the freed pipefs dentries\n  (git-fixes).\n- nfsd: lock_rename() needs both directories to live on the same\n  fs (git-fixes).\n- pNFS/flexfiles: Check the layout validity in\n  ff_layout_mirror_prepare_stats (git-fixes).\n- commit 311216b\n\n- perf/x86/lbr: Filter vsyscall addresses (bsc#1220703,\n  CVE-2023-52476).\n- commit ff86f16\n\n- net/sched: Remove alias of sch_clsact (bsc#1210335 CVE-2023-1829).\n- net/sched: Load modules via their alias (bsc#1210335 CVE-2023-1829).\n- net/sched: Add module aliases for cls_,sch_,act_ modules\n  (bsc#1210335 CVE-2023-1829).\n- net/sched: Add helper macros with module names (bsc#1210335 CVE-2023-1829).\n- commit 609fe5f\n\n- x86/mmio: Disable KVM mitigation when X86_FEATURE_CLEAR_CPU_BUF is set (bsc#1213456 CVE-2023-28746).\n- commit c5b2dec\n\n- Sort patches that are already upstream\n- Refresh\n  patches.suse/Documentation-hw-vuln-Add-documentation-for-RFDS.patch.\n- Refresh\n  patches.suse/KVM-x86-Export-RFDS_NO-and-RFDS_CLEAR-to-guests.patch.\n- Refresh\n  patches.suse/x86-rfds-Mitigate-Register-File-Data-Sampling-RFDS.patch.\n- commit 031146a\n\n- iommu/amd: Set DTE[IntTabLen] to represent 512 IRTEs\n  (git-fixes).\n- commit ea9ae09\n\n- iommu: Check if group is NULL before remove device (git-fixes).\n- commit a7b6fa2\n\n- iommu/amd: Silence warnings under memory pressure (git-fixes).\n- commit cdec216\n\n- iommu/amd: Increase interrupt remapping table limit to 512\n  entries (git-fixes).\n- commit c290a72\n\n- iommu/amd: Mark interrupt as managed (git-fixes).\n- commit 34b8fef\n\n- ARM: 9064/1: hw_breakpoint: Do not directly check the event's\n  overflow_handler hook (bsc#1220751 CVE-2021-47006).\n- commit 605e3a7\n\n- Refresh patches.kabi/team-Hide-new-member-header-ops.patch.\n  Fix for kABI workaround.\n- commit f1bcdf5\n\n- usb: typec: class: fix typec_altmode_put_partner to put plugs\n  (git-fixes).\n- commit 4350c0c\n\n- ceph: fix deadlock or deadcode of misusing dget() (bsc#1221058\n  CVE-2023-52583).\n- commit a413cb6\n\n- usb: hub: Guard against accesses to uninitialized BOS\n  descriptors (bsc#1220790 CVE-2023-52477).\n- commit bf5af19\n\nPackage krb5 was updated:\n\n- Fix vulnerabilities in GSS message token handling, add patch  0016-Fix-vulnerabilities-in-GSS-message-token-handling.patch\n  * CVE-2024-37370, bsc#1227186\n  * CVE-2024-37371, bsc#1227187\n\n- Fix warning executing %postun scriptlet; (bsc#1223122);\n\nPackage vim was updated:\n\n- Updated to version 9.1 with patch level 0330, fixes the following problems  * Fixing bsc#1220763 - vim gets Segmentation fault after updating to version 9.1.0111-150500.20.9.1\n- refreshed vim-7.3-filetype_spec.patch\n- refreshed vim-7.3-filetype_ftl.patch\n- Update spec.skeleton to use autosetup in place of setup macro.\n- for the complete list of changes see\n  https://github.com/vim/vim/compare/v9.1.0111...v9.1.0330\n\nPackage google-guest-configs was updated:\n\n- Update to version 20240307.00 (bsc#1221146, bsc#1221900, bsc#1221901)  * Support dot in NVMe device ids (#68)\n- from version 20240304.00\n  * google_set_hostname: Extract rsyslog service name\n    with a regexp for valid systemd unit names (#67)\n- from version 20240228.00\n  * Remove quintonamore from OWNERS (#64)\n- from version 20240119.00\n  * Setup smp affinity for IRQs and XPS on A3+ VMs (#63)\n\n- Update to version 20231214.00\n  * set multiqueue: A3 check set timeout the MDS call in 1s (#62)\n- from version 20231103.00\n  * Update owners (#61)\n  * Update owners (#58)\n\n- Update to version 20230929.00\n  * Update multinic filter to pick only pci devices (#59)\n\nPackage zypper was updated:\n\n- Show rpm install size before installing (bsc#1224771)  If filesystem snapshots are taken before the installation (e.g.\n  by snapper) no disk space is freed by removing old packages. In\n  this case the install size of all packages is a hint how much\n  additional disk space is needed by the new packages static\n  content.\n- version 1.13.67\n\n- clean: Do not report an error if no repos are defined at all\n  (bsc#1223971)\n- version 1.13.66\n\nPackage openssl-1_1 was updated:\n\n- Apply \u0026quot;openssl-CVE-2024-4741.patch\u0026quot; to fix a use-after-free  security vulnerability. Calling the function SSL_free_buffers()\n  potentially caused memory to be accessed that was previously\n  freed in some situations and a malicious attacker could attempt\n  to engineer a stituation where this occurs to facilitate a\n  denial-of-service attack. [CVE-2024-4741, bsc#1225551]\n\nPackage python-pyOpenSSL was updated:\n\n- Add CVE-2018-1000807-8_use_after_free_X509.patch to fix  CVE-2018-1000807 (bsc#1111635) and CVE-2018-1000808 (bsc#1111634)\n    fix a memory leak and a potential UAF and also #722 (#723)\n    sanity check\n    bump cryptography minimum version, add changelog\n- Add skip_user_after_free_tests.patch to pass the test suite.\n- bsc#1021578 add move_cryptography_backend_import.patch to avoid bad\n  interaction with python-cryptography package.\n\nPackage glib2 was updated:\n\n- Add patches to fix CVE-2024-34397 (boo#1224044):  glib2-CVE-2024-34397-add-ref-count-types.patch\n  glib2-allocate-SignalSubscriber-structs-individually.patch\n  glib2-CVE-2024-34397.patch (glgo#GNOME/glib#3268).\n  glib2-fix-ibus-regression.patch (glgo#GNOME/glib#3353)\n\nPackage less was updated:\n\n- Fix CVE-2024-32487, mishandling of \\n character in paths when  LESSOPEN is set leads to OS command execution\n  (CVE-2024-32487, bsc#1222849)\n  * CVE-2024-32487.patch\n\nPackage google-osconfig-agent was updated:\n\n- Update to version 20240320.00 (bsc#1221900, bsc#1221901)  * Enable OSConfig agent to read GPG keys files with multiple entities (#537)\n- from version 20240314.00\n  * Update OWNERS file to replace mahmoudn GitHub\n    username by personal email GitHub username (#534)\n- from version 20240313.01\n  * Bump google.golang.org/protobuf from 1.30.0 to 1.33.0 in /e2e_tests (#535)\n- from version 20240313.00\n  * Adds a console and gcloud example policies (#533)\n- from version 20240228.00\n  * GuestPolicies e2e: Remove ed package if exist for zypper\n    startup_script in recipe-steps tests (#532)\n- from version 20240126.00\n  * Fix Enterprise Linux Recipe-Steps tests to install\n    info dependency package in the startup-script (#530)\n- from version 20240125.01\n  * Fix SUSE pkg-update and pkg-no-update e2e tests (#529)\n- from version 20240125.00\n  * Fix zypper patch info parser to consider conflicts-pkgs float versions (#528)\n- from version 20240123.01\n  * Fix SUSE package update e2e tests to use another existing package (#527)\n- from version 20240123.00\n  * Update cis-exclude-check-once-a-day.yaml (#526)\n\n- Update to version 20231219.00\n  * Bump golang.org/x/crypto from 0.14.0 to 0.17.0 (#524)\n- from version 20231207.01\n  * Some change to create an agent release (#523)\n- from version 20231207.00\n  * Some change to create an agent release (#522)\n- from version 20231205.00\n  * Some change to create an agent release (#521)\n- from version 20231130.02\n  * Merge pull request #519 from Gulio/just-release\n  * Merge branch 'master' into just-release\n  * Some change to create an agent release\n  * Some change to create an agent release\n- from version 20231130.00\n  * Some change to create an agent release (#518)\n- from version 20231129.00\n  * Fix parse yum updates to consider the packages under\n    installing-dependencies keyword (#502)\n  * Update feature names in the README file (#517)\n- from version 20231128.00\n  * Updating owners (#508)\n- from version 20231127.00\n  * Move OS policy CIS examples under the console folder (#514)\n- from version 20231123.01\n  * Adds three more OS Policy examples to CIS folder (#509)\n  * Added ekrementeskii and MahmoudNada0 to OWNERS (#505)\n- from version 20231123.00\n  * docs(osconfig):add OS policy examples for CIS scanning (#503)\n- from version 20231121.02\n  * Added SCODE to Windows error description (#504)\n- from version 20231121.01\n  * Update OWNERS (#501)\n  * Update go version to 1.21 (#507)\n- from version 20231121.00\n  * Call fqdn (#481)\n- from version 20231116.00\n  * Removing obsolete MS Windows 2019 images (#500)\n- from version 20231107.00\n  * Update owners. (#498)\n- from version 20231103.02\n  * Increasing test timeouts (#499)\n  * Update OWNERS (#497)\n- from version 20231103.01\n  * Bump google.golang.org/grpc from 1.53.0 to 1.56.3 in /e2e_tests (#493)\n  * Bump google.golang.org/grpc from 1.53.0 to 1.56.3 (#494)\n- from version 20231103.00\n  * Removing deprecated Win for containers OSs (#496)\n- from version 20231027.00\n  * Shortening the reported image names (#495)\n- from version 20231025.00\n  * Merge pull request #492 from GoogleCloudPlatform/michaljankowiak-patch-1\n  * Merge branch 'master' into michaljankowiak-patch-1\n  * Fixing name changes\n  * Fixing rename issue\n  * Fixed formatting\n  * Fixed formatting\n  * Fixing formatting\n  * Removing support for RHEL 6, adding RHEL 9\n  * Removing support for RHEL 6, adding for RHEL 9\n  * Removing support for RHEL 6 and adding for RHEL 9\n  * Removing step needed for RHEL 6\n  * Fixing build issues\n  * Removing nonexistent images and adding new ones\n- from version 20231024.00\n  * Removing obsolete OS images and adding new ones (#491)\n- from version 20231020.00\n  * Change debug messages when parsing zypper patch output (#490)\n- from version 20231013.00\n  * Bump golang.org/x/net from 0.7.0 to 0.17.0 (#489)\n- from version 20231010.00\n  * Revert \u0026quot;Added [main] section with gpgcheck to\n    the agent-managed repo file (#484)\u0026quot; (#488)\n- from version 20231003.00\n  * Bump google.golang.org/grpc from 1.42.0 to 1.53.0 in /e2e_tests (#478)\n- from version 20230920.00\n  * Update OWNERS (#485)\n- from version 20230912.00\n  * Added [main] section with gpgcheck to the agent-managed repo file (#484)\n  * Migrate empty interface to any (#483)\n\n- Bump the golang compiler version to 1.21 (bsc#1216546)\n\n- Update to version 20230829.00\n  * Added burov, dowgird, paulinakania and Gulio to OWNERS (#482)\n  \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; ./google-osconfig-agent.changes.new\n\nPackage libxml2 was updated:\n\n- Security fix (CVE-2024-34459, bsc#1224282) buffer over-read in  xmlHTMLPrintFileContext in xmllint.c\n  * Added libxml2-CVE-2024-34459.patch\n\nPackage nfs-utils was updated:\n\n- Add 0208-mountd-add-support-for-case-insensitive-file-names.patch  Fix for bsc#1221774 - support case-insensivtive file names\n\nPackage wget was updated:\n\n- Fix mishandled semicolons in the userinfo subcomponent could lead to an  insecure behavior in which data that was supposed to be in the userinfo\n  subcomponent is misinterpreted to be part of the host subcomponent.\n  [bsc#1226419, CVE-2024-38428, properly-re-implement-userinfo-parsing.patch]\n\nPackage python-base was updated:\n\n- bsc#1221854 (CVE-2024-0450) Add  CVE-2024-0450-zipfile-avoid-quoted-overlap-zipbomb.patch\n  detecting the vulnerability of the \u0026quot;quoted-overlap\u0026quot; zipbomb\n  (from gh#python/cpython!110016).\n\n- Switch to using the system libexpat (bsc#1219559,\n  CVE-2023-52425)\n- Make sure to remove all embedded versions of other packages\n  (including expat).\n- Add CVE-2023-52425-libexpat-2.6.0-remove-failing-tests.patch\n  removing failing test fixing bpo#3151, which we just not\n  support.\n- Remove patches over those embedded packages (cffi):\n  - python-2.7-libffi-aarch64.patch\n  - sparc_longdouble.patch\n\n- Modify CVE-2023-27043-email-parsing-errors.patch to fix the\n  unicode string handling in email.utils.parseaddr()\n  (bsc#1222537).\n- Revert CVE-2022-48560-after-free-heappushpop.patch, the fix was\n  unneeded.\n\n- Switch off tests. ONLY FOR FACTORY!!! (bsc#1219306)\n\n- Build with -std=gnu89 to build correctly with gcc14, bsc#1220970\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "SAPHanaSR-0.162.4-3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "SAPHanaSR-doc-0.162.4-3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bind-utils-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cluster-md-kmp-default-4.12.14-122.222.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cups-libs-1.7.5-20.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dlm-kmp-default-4.12.14-122.222.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "fdupes-1.61-8.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gdk-pixbuf-query-loaders-2.34.0-19.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gfs2-kmp-default-4.12.14-122.222.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-i18ndata-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-cloud-sap-agent-3.4-6.34.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-agent-20240314.00-1.38.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20240307.00-1.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-oslogin-20240311.00-1.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20240320.00-1.26.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-4.12.14-122.222.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-1.16.3-46.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-client-1.16.3-46.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "less-458-7.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-client3-0.6.32-32.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-common3-0.6.32-32.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libbind9-161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libblkid1-2.33.2-4.39.14",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libdns1110-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfastjson4-0.99.8-3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfdisk1-2.33.2-4.39.14",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfreebl3-3.101.1-58.118.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-13.3.0+git8781-1.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgdk_pixbuf-2_0-0-2.34.0-19.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgthread-2_0-0-2.48.2-12.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libirs161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisc1107-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisccc161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libisccfg163-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libldap-2_4-2-2.4.41-22.24.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "liblwres161-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libmount1-2.33.2-4.39.14",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1d-2.107.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython2_7-1_0-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_4m1_0-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-58.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsmartcols1-2.33.2-4.39.14",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsoftokn3-3.101.1-58.118.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-13.3.0+git8781-1.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsuseconnect-1.9.0-3.15.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtiff5-4.0.9-44.83.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libuuid1-2.33.2-4.39.14",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-2-2.9.4-46.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-tools-2.9.4-46.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-16.22.13-65.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "lifecycle-data-sle-live-patching-1-10.149.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-3.101.1-58.118.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-certs-3.101.1-58.118.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nfs-client-1.3.0-34.53.5",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nfs-kernel-server-1.3.0-34.53.5",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nscd-2.22-114.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ocfs2-kmp-default-4.12.14-122.222.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ocfs2-tools-1.8.5-3.20.9",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openldap2-client-2.4.41-22.24.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-base-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-bind-9.11.22-3.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-pyOpenSSL-17.1.0-4.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-requests-2.24.0-8.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-xml-2.7.18-33.35.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-curses-3.4.10-25.130.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyOpenSSL-17.1.0-4.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-typing-3.10.0.0-3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python36-base-3.6.15-58.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "regionServiceClientConfigGCE-4.1.0-5.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "release-notes-sles-12.5.20240614-3.37.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shadow-4.2.1-36.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shim-15.8-25.30.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ng-1.9.0-3.15.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ruby-bindings-1.9.0-3.15.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-2.33.2-4.39.14",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-systemd-2.33.2-4.39.12",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "uuidd-2.33.2-4.39.12",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.0330-17.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.0330-17.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wget-1.14-21.19.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-0.6.75-3.43.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-service-0.6.75-3.43.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xfsprogs-4.15.0-3.21.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.13.67-21.64.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-12-sp5-sap-v20240727-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2013-4235",
      "Description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:shadow-4.2.1-36.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "3.3",
        "Vector": "AV:L/AC:M/Au:N/C:N/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2017-9271",
      "Description": "The commandline package update tool zypper writes HTTP proxy credentials into its logfile, allowing local attackers to gain access to proxies used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libzypp-16.22.13-65.3"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2018-1000807",
      "Description": "Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-pyOpenSSL-17.1.0-4.26.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-pyOpenSSL-17.1.0-4.26.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2019-25160",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetlabel: fix out-of-bounds memory accesses\n\nThere are two array out-of-bounds memory accesses, one in\ncipso_v4_map_lvl_valid(), the other in netlbl_bitmap_walk().  Both\nerrors are embarassingly simple, and the fixes are straightforward.\n\nAs a FYI for anyone backporting this patch to kernels prior to v4.8,\nyou'll want to apply the netlbl_bitmap_walk() patch to\ncipso_v4_bitmap_walk() as netlbl_bitmap_walk() doesn't exist before\nLinux v4.8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2020-10135",
      "Description": "Legacy pairing and secure-connections pairing authentication in Bluetooth BR/EDR Core Specification v5.2 and earlier may allow an unauthenticated user to complete authentication without pairing credentials via adjacent access. An unauthenticated, adjacent attacker could impersonate a Bluetooth BR/EDR master or slave to pair with a previously paired remote device to successfully complete the authentication procedure without knowing the link key.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.8",
        "Vector": "AV:A/AC:L/Au:N/C:P/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2020-12762",
      "Description": "json-c through 0.14 has an integer overflow and out-of-bounds write via a large JSON file, as demonstrated by printbuf_memappend.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libfastjson4-0.99.8-3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2020-36312",
      "Description": "An issue was discovered in the Linux kernel before 5.8.10. virt/kvm/kvm_main.c has a kvm_io_bus_unregister_dev memory leak upon a kmalloc failure, aka CID-f65886606c2d.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-23134",
      "Description": "Use After Free vulnerability in nfc sockets in the Linux Kernel before 5.12.4 allows local attackers to elevate their privileges. In typical configurations, the issue can only be triggered by a privileged local user with the CAP_NET_RAW capability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.6",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2021-43389",
      "Description": "An issue was discovered in the Linux kernel before 5.14.15. There is an array-index-out-of-bounds flaw in the detach_capi_ctr function in drivers/isdn/capi/kcapi.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-46909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: footbridge: fix PCI interrupt mapping\n\nSince commit 30fdfb929e82 (\"PCI: Add a call to pci_assign_irq() in\npci_device_probe()\"), the PCI code will call the IRQ mapping function\nwhenever a PCI driver is probed. If these are marked as __init, this\ncauses an oops if a PCI driver is loaded or bound after the kernel has\ninitialised.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_fs: Clear ffs_eventfd in ffs_data_clear.\n\nffs_data_clear is indirectly called from both ffs_fs_kill_sb and\nffs_ep0_release, so it ends up being called twice when userland closes ep0\nand then unmounts f_fs.\nIf userland provided an eventfd along with function's USB descriptors, it\nends up calling eventfd_ctx_put as many times, causing a refcount\nunderflow.\nNULL-ify ffs_eventfd to prevent these extraneous eventfd_ctx_put calls.\n\nAlso, set epfiles to NULL right after de-allocating it, for readability.\n\nFor completeness, ffs_data_clear actually ends up being called thrice, the\nlast call being before the whole ffs structure gets freed, so when this\nspecific sequence happens there is a second underflow happening (but not\nbeing reported):\n\n/sys/kernel/debug/tracing# modprobe usb_f_fs\n/sys/kernel/debug/tracing# echo ffs_data_clear \u003e set_ftrace_filter\n/sys/kernel/debug/tracing# echo function \u003e current_tracer\n/sys/kernel/debug/tracing# echo 1 \u003e tracing_on\n(setup gadget, run and kill function userland process, teardown gadget)\n/sys/kernel/debug/tracing# echo 0 \u003e tracing_on\n/sys/kernel/debug/tracing# cat trace\n smartcard-openp-436     [000] .....  1946.208786: ffs_data_clear \u003c-ffs_data_closed\n smartcard-openp-431     [000] .....  1946.279147: ffs_data_clear \u003c-ffs_data_closed\n smartcard-openp-431     [000] .n...  1946.905512: ffs_data_clear \u003c-ffs_data_put\n\nWarning output corresponding to above trace:\n[ 1946.284139] WARNING: CPU: 0 PID: 431 at lib/refcount.c:28 refcount_warn_saturate+0x110/0x15c\n[ 1946.293094] refcount_t: underflow; use-after-free.\n[ 1946.298164] Modules linked in: usb_f_ncm(E) u_ether(E) usb_f_fs(E) hci_uart(E) btqca(E) btrtl(E) btbcm(E) btintel(E) bluetooth(E) nls_ascii(E) nls_cp437(E) vfat(E) fat(E) bcm2835_v4l2(CE) bcm2835_mmal_vchiq(CE) videobuf2_vmalloc(E) videobuf2_memops(E) sha512_generic(E) videobuf2_v4l2(E) sha512_arm(E) videobuf2_common(E) videodev(E) cpufreq_dt(E) snd_bcm2835(CE) brcmfmac(E) mc(E) vc4(E) ctr(E) brcmutil(E) snd_soc_core(E) snd_pcm_dmaengine(E) drbg(E) snd_pcm(E) snd_timer(E) snd(E) soundcore(E) drm_kms_helper(E) cec(E) ansi_cprng(E) rc_core(E) syscopyarea(E) raspberrypi_cpufreq(E) sysfillrect(E) sysimgblt(E) cfg80211(E) max17040_battery(OE) raspberrypi_hwmon(E) fb_sys_fops(E) regmap_i2c(E) ecdh_generic(E) rfkill(E) ecc(E) bcm2835_rng(E) rng_core(E) vchiq(CE) leds_gpio(E) libcomposite(E) fuse(E) configfs(E) ip_tables(E) x_tables(E) autofs4(E) ext4(E) crc16(E) mbcache(E) jbd2(E) crc32c_generic(E) sdhci_iproc(E) sdhci_pltfm(E) sdhci(E)\n[ 1946.399633] CPU: 0 PID: 431 Comm: smartcard-openp Tainted: G         C OE     5.15.0-1-rpi #1  Debian 5.15.3-1\n[ 1946.417950] Hardware name: BCM2835\n[ 1946.425442] Backtrace:\n[ 1946.432048] [\u003cc08d60a0\u003e] (dump_backtrace) from [\u003cc08d62ec\u003e] (show_stack+0x20/0x24)\n[ 1946.448226]  r7:00000009 r6:0000001c r5:c04a948c r4:c0a64e2c\n[ 1946.458412] [\u003cc08d62cc\u003e] (show_stack) from [\u003cc08d9ae0\u003e] (dump_stack+0x28/0x30)\n[ 1946.470380] [\u003cc08d9ab8\u003e] (dump_stack) from [\u003cc0123500\u003e] (__warn+0xe8/0x154)\n[ 1946.482067]  r5:c04a948c r4:c0a71dc8\n[ 1946.490184] [\u003cc0123418\u003e] (__warn) from [\u003cc08d6948\u003e] (warn_slowpath_fmt+0xa0/0xe4)\n[ 1946.506758]  r7:00000009 r6:0000001c r5:c0a71dc8 r4:c0a71e04\n[ 1946.517070] [\u003cc08d68ac\u003e] (warn_slowpath_fmt) from [\u003cc04a948c\u003e] (refcount_warn_saturate+0x110/0x15c)\n[ 1946.535309]  r8:c0100224 r7:c0dfcb84 r6:ffffffff r5:c3b84c00 r4:c24a17c0\n[ 1946.546708] [\u003cc04a937c\u003e] (refcount_warn_saturate) from [\u003cc0380134\u003e] (eventfd_ctx_put+0x48/0x74)\n[ 1946.564476] [\u003cc03800ec\u003e] (eventfd_ctx_put) from [\u003cbf5464e8\u003e] (ffs_data_clear+0xd0/0x118 [usb_f_fs])\n[ 1946.582664]  r5:c3b84c00 r4:c2695b00\n[ 1946.590668] [\u003cbf546418\u003e] (ffs_data_clear [usb_f_fs]) from [\u003cbf547cc0\u003e] (ffs_data_closed+0x9c/0x150 [usb_f_fs])\n[ 1946.609608]  r5:bf54d014 r4:c2695b00\n[ 1946.617522] [\u003cbf547c24\u003e] (ffs_data_closed [usb_f_fs]) from [\u003cbf547da0\u003e] (ffs_fs_kill_sb+0x2c/0x30 [usb_f_fs])\n[ 1946.636217]  r7:c0dfcb\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm rq: fix double free of blk_mq_tag_set in dev remove after table load fails\n\nWhen loading a device-mapper table for a request-based mapped device,\nand the allocation/initialization of the blk_mq_tag_set for the device\nfails, a following device remove will cause a double free.\n\nE.g. (dmesg):\n  device-mapper: core: Cannot initialize queue for request-based dm-mq mapped device\n  device-mapper: ioctl: unable to set up device queue for new table.\n  Unable to handle kernel pointer dereference in virtual kernel address space\n  Failing address: 0305e098835de000 TEID: 0305e098835de803\n  Fault in home space mode while using kernel ASCE.\n  AS:000000025efe0007 R3:0000000000000024\n  Oops: 0038 ilc:3 [#1] SMP\n  Modules linked in: ... lots of modules ...\n  Supported: Yes, External\n  CPU: 0 PID: 7348 Comm: multipathd Kdump: loaded Tainted: G        W      X    5.3.18-53-default #1 SLE15-SP3\n  Hardware name: IBM 8561 T01 7I2 (LPAR)\n  Krnl PSW : 0704e00180000000 000000025e368eca (kfree+0x42/0x330)\n             R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3\n  Krnl GPRS: 000000000000004a 000000025efe5230 c1773200d779968d 0000000000000000\n             000000025e520270 000000025e8d1b40 0000000000000003 00000007aae10000\n             000000025e5202a2 0000000000000001 c1773200d779968d 0305e098835de640\n             00000007a8170000 000003ff80138650 000000025e5202a2 000003e00396faa8\n  Krnl Code: 000000025e368eb8: c4180041e100       lgrl    %r1,25eba50b8\n             000000025e368ebe: ecba06b93a55       risbg   %r11,%r10,6,185,58\n            #000000025e368ec4: e3b010000008       ag      %r11,0(%r1)\n            \u003e000000025e368eca: e310b0080004       lg      %r1,8(%r11)\n             000000025e368ed0: a7110001           tmll    %r1,1\n             000000025e368ed4: a7740129           brc     7,25e369126\n             000000025e368ed8: e320b0080004       lg      %r2,8(%r11)\n             000000025e368ede: b904001b           lgr     %r1,%r11\n  Call Trace:\n   [\u003c000000025e368eca\u003e] kfree+0x42/0x330\n   [\u003c000000025e5202a2\u003e] blk_mq_free_tag_set+0x72/0xb8\n   [\u003c000003ff801316a8\u003e] dm_mq_cleanup_mapped_device+0x38/0x50 [dm_mod]\n   [\u003c000003ff80120082\u003e] free_dev+0x52/0xd0 [dm_mod]\n   [\u003c000003ff801233f0\u003e] __dm_destroy+0x150/0x1d0 [dm_mod]\n   [\u003c000003ff8012bb9a\u003e] dev_remove+0x162/0x1c0 [dm_mod]\n   [\u003c000003ff8012a988\u003e] ctl_ioctl+0x198/0x478 [dm_mod]\n   [\u003c000003ff8012ac8a\u003e] dm_ctl_ioctl+0x22/0x38 [dm_mod]\n   [\u003c000000025e3b11ee\u003e] ksys_ioctl+0xbe/0xe0\n   [\u003c000000025e3b127a\u003e] __s390x_sys_ioctl+0x2a/0x40\n   [\u003c000000025e8c15ac\u003e] system_call+0xd8/0x2c8\n  Last Breaking-Event-Address:\n   [\u003c000000025e52029c\u003e] blk_mq_free_tag_set+0x6c/0xb8\n  Kernel panic - not syncing: Fatal exception: panic_on_oops\n\nWhen allocation/initialization of the blk_mq_tag_set fails in\ndm_mq_init_request_queue(), it is uninitialized/freed, but the pointer\nis not reset to NULL; so when dev_remove() later gets into\ndm_mq_cleanup_mapped_device() it sees the pointer and tries to\nuninitialize and free it again.\n\nFix this by setting the pointer to NULL in dm_mq_init_request_queue()\nerror-handling. Also set it to NULL in dm_mq_cleanup_mapped_device().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46939",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Restructure trace_clock_global() to never block\n\nIt was reported that a fix to the ring buffer recursion detection would\ncause a hung machine when performing suspend / resume testing. The\nfollowing backtrace was extracted from debugging that case:\n\nCall Trace:\n trace_clock_global+0x91/0xa0\n __rb_reserve_next+0x237/0x460\n ring_buffer_lock_reserve+0x12a/0x3f0\n trace_buffer_lock_reserve+0x10/0x50\n __trace_graph_return+0x1f/0x80\n trace_graph_return+0xb7/0xf0\n ? trace_clock_global+0x91/0xa0\n ftrace_return_to_handler+0x8b/0xf0\n ? pv_hash+0xa0/0xa0\n return_to_handler+0x15/0x30\n ? ftrace_graph_caller+0xa0/0xa0\n ? trace_clock_global+0x91/0xa0\n ? __rb_reserve_next+0x237/0x460\n ? ring_buffer_lock_reserve+0x12a/0x3f0\n ? trace_event_buffer_lock_reserve+0x3c/0x120\n ? trace_event_buffer_reserve+0x6b/0xc0\n ? trace_event_raw_event_device_pm_callback_start+0x125/0x2d0\n ? dpm_run_callback+0x3b/0xc0\n ? pm_ops_is_empty+0x50/0x50\n ? platform_get_irq_byname_optional+0x90/0x90\n ? trace_device_pm_callback_start+0x82/0xd0\n ? dpm_run_callback+0x49/0xc0\n\nWith the following RIP:\n\nRIP: 0010:native_queued_spin_lock_slowpath+0x69/0x200\n\nSince the fix to the recursion detection would allow a single recursion to\nhappen while tracing, this lead to the trace_clock_global() taking a spin\nlock and then trying to take it again:\n\nring_buffer_lock_reserve() {\n  trace_clock_global() {\n    arch_spin_lock() {\n      queued_spin_lock_slowpath() {\n        /* lock taken */\n        (something else gets traced by function graph tracer)\n          ring_buffer_lock_reserve() {\n            trace_clock_global() {\n              arch_spin_lock() {\n                queued_spin_lock_slowpath() {\n                /* DEAD LOCK! */\n\nTracing should *never* block, as it can lead to strange lockups like the\nabove.\n\nRestructure the trace_clock_global() code to instead of simply taking a\nlock to update the recorded \"prev_time\" simply use it, as two events\nhappening on two different CPUs that calls this at the same time, really\ndoesn't matter which one goes first. Use a trylock to grab the lock for\nupdating the prev_time, and if it fails, simply try again the next time.\nIf it failed to be taken, that means something else is already updating\nit.\n\n\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=212761",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46941",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: Do core softreset when switch mode\n\n\nAccording to the programming guide, to switch mode for DRD controller,\nthe driver needs to do the following.\n\nTo switch from device to host:\n1. Reset controller with GCTL.CoreSoftReset\n2. Set GCTL.PrtCapDir(host mode)\n3. Reset the host with USBCMD.HCRESET\n4. Then follow up with the initializing host registers sequence\n\nTo switch from host to device:\n1. Reset controller with GCTL.CoreSoftReset\n2. Set GCTL.PrtCapDir(device mode)\n3. Reset the device with DCTL.CSftRst\n4. Then follow up with the initializing registers sequence\n\nCurrently we're missing step 1) to do GCTL.CoreSoftReset and step 3) of\nswitching from host to device. John Stult reported a lockup issue seen\nwith HiKey960 platform without these steps[1]. Similar issue is observed\nwith Ferry's testing platform[2].\n\nSo, apply the required steps along with some fixes to Yu Chen's and John\nStultz's version. The main fixes to their versions are the missing wait\nfor clocks synchronization before clearing GCTL.CoreSoftReset and only\napply DCTL.CSftRst when switching from host to device.\n\n[1] https://lore.kernel.org/linux-usb/20210108015115.27920-1-john.stultz@linaro.org/\n[2] https://lore.kernel.org/linux-usb/0ba7a6ba-e6a7-9cd4-0695-64fc927e01f1@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid1: properly indicate failure when ending a failed write request\n\nThis patch addresses a data corruption bug in raid1 arrays using bitmaps.\nWithout this fix, the bitmap bits for the failed I/O end up being cleared.\n\nSince we are in the failure leg of raid1_end_write_request, the request\neither needs to be retried (R1BIO_WriteError) or failed (R1BIO_Degraded).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46955",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nopenvswitch: fix stack OOB read while fragmenting IPv4 packets\n\nrunning openvswitch on kernels built with KASAN, it's possible to see the\nfollowing splat while testing fragmentation of IPv4 packets:\n\n BUG: KASAN: stack-out-of-bounds in ip_do_fragment+0x1b03/0x1f60\n Read of size 1 at addr ffff888112fc713c by task handler2/1367\n\n CPU: 0 PID: 1367 Comm: handler2 Not tainted 5.12.0-rc6+ #418\n Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014\n Call Trace:\n  dump_stack+0x92/0xc1\n  print_address_description.constprop.7+0x1a/0x150\n  kasan_report.cold.13+0x7f/0x111\n  ip_do_fragment+0x1b03/0x1f60\n  ovs_fragment+0x5bf/0x840 [openvswitch]\n  do_execute_actions+0x1bd5/0x2400 [openvswitch]\n  ovs_execute_actions+0xc8/0x3d0 [openvswitch]\n  ovs_packet_cmd_execute+0xa39/0x1150 [openvswitch]\n  genl_family_rcv_msg_doit.isra.15+0x227/0x2d0\n  genl_rcv_msg+0x287/0x490\n  netlink_rcv_skb+0x120/0x380\n  genl_rcv+0x24/0x40\n  netlink_unicast+0x439/0x630\n  netlink_sendmsg+0x719/0xbf0\n  sock_sendmsg+0xe2/0x110\n  ____sys_sendmsg+0x5ba/0x890\n  ___sys_sendmsg+0xe9/0x160\n  __sys_sendmsg+0xd3/0x170\n  do_syscall_64+0x33/0x40\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n RIP: 0033:0x7f957079db07\n Code: c3 66 90 41 54 41 89 d4 55 48 89 f5 53 89 fb 48 83 ec 10 e8 eb ec ff ff 44 89 e2 48 89 ee 89 df 41 89 c0 b8 2e 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 35 44 89 c7 48 89 44 24 08 e8 24 ed ff ff 48\n RSP: 002b:00007f956ce35a50 EFLAGS: 00000293 ORIG_RAX: 000000000000002e\n RAX: ffffffffffffffda RBX: 0000000000000019 RCX: 00007f957079db07\n RDX: 0000000000000000 RSI: 00007f956ce35ae0 RDI: 0000000000000019\n RBP: 00007f956ce35ae0 R08: 0000000000000000 R09: 00007f9558006730\n R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000000000\n R13: 00007f956ce37308 R14: 00007f956ce35f80 R15: 00007f956ce35ae0\n\n The buggy address belongs to the page:\n page:00000000af2a1d93 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x112fc7\n flags: 0x17ffffc0000000()\n raw: 0017ffffc0000000 0000000000000000 dead000000000122 0000000000000000\n raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\n page dumped because: kasan: bad access detected\n\n addr ffff888112fc713c is located in stack of task handler2/1367 at offset 180 in frame:\n  ovs_fragment+0x0/0x840 [openvswitch]\n\n this frame has 2 objects:\n  [32, 144) 'ovs_dst'\n  [192, 424) 'ovs_rt'\n\n Memory state around the buggy address:\n  ffff888112fc7000: f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  ffff888112fc7080: 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00\n \u003effff888112fc7100: 00 00 00 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00\n                                         ^\n  ffff888112fc7180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  ffff888112fc7200: 00 00 00 00 00 00 f2 f2 f2 00 00 00 00 00 00 00\n\nfor IPv4 packets, ovs_fragment() uses a temporary struct dst_entry. Then,\nin the following call graph:\n\n  ip_do_fragment()\n    ip_skb_dst_mtu()\n      ip_dst_mtu_maybe_forward()\n        ip_mtu_locked()\n\nthe pointer to struct dst_entry is used as pointer to struct rtable: this\nturns the access to struct members like rt_mtu_locked into an OOB read in\nthe stack. Fix this changing the temporary variable used for IPv4 packets\nin ovs_fragment(), similarly to what is done for IPv6 few lines below.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix race between transaction aborts and fsyncs leading to use-after-free\n\nThere is a race between a task aborting a transaction during a commit,\na task doing an fsync and the transaction kthread, which leads to an\nuse-after-free of the log root tree. When this happens, it results in a\nstack trace like the following:\n\n  BTRFS info (device dm-0): forced readonly\n  BTRFS warning (device dm-0): Skipping commit of aborted transaction.\n  BTRFS: error (device dm-0) in cleanup_transaction:1958: errno=-5 IO failure\n  BTRFS warning (device dm-0): lost page write due to IO error on /dev/mapper/error-test (-5)\n  BTRFS warning (device dm-0): Skipping commit of aborted transaction.\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0xa4e8 len 4096 err no 10\n  BTRFS error (device dm-0): error writing primary super block to device 1\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0x12e000 len 4096 err no 10\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0x12e008 len 4096 err no 10\n  BTRFS warning (device dm-0): direct IO failed ino 261 rw 0,0 sector 0x12e010 len 4096 err no 10\n  BTRFS: error (device dm-0) in write_all_supers:4110: errno=-5 IO failure (1 errors while writing supers)\n  BTRFS: error (device dm-0) in btrfs_sync_log:3308: errno=-5 IO failure\n  general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b68: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI\n  CPU: 2 PID: 2458471 Comm: fsstress Not tainted 5.12.0-rc5-btrfs-next-84 #1\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\n  RIP: 0010:__mutex_lock+0x139/0xa40\n  Code: c0 74 19 (...)\n  RSP: 0018:ffff9f18830d7b00 EFLAGS: 00010202\n  RAX: 6b6b6b6b6b6b6b68 RBX: 0000000000000001 RCX: 0000000000000002\n  RDX: ffffffffb9c54d13 RSI: 0000000000000000 RDI: 0000000000000000\n  RBP: ffff9f18830d7bc0 R08: 0000000000000000 R09: 0000000000000000\n  R10: ffff9f18830d7be0 R11: 0000000000000001 R12: ffff8c6cd199c040\n  R13: ffff8c6c95821358 R14: 00000000fffffffb R15: ffff8c6cbcf01358\n  FS:  00007fa9140c2b80(0000) GS:ffff8c6fac600000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fa913d52000 CR3: 000000013d2b4003 CR4: 0000000000370ee0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   ? __btrfs_handle_fs_error+0xde/0x146 [btrfs]\n   ? btrfs_sync_log+0x7c1/0xf20 [btrfs]\n   ? btrfs_sync_log+0x7c1/0xf20 [btrfs]\n   btrfs_sync_log+0x7c1/0xf20 [btrfs]\n   btrfs_sync_file+0x40c/0x580 [btrfs]\n   do_fsync+0x38/0x70\n   __x64_sys_fsync+0x10/0x20\n   do_syscall_64+0x33/0x80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n  RIP: 0033:0x7fa9142a55c3\n  Code: 8b 15 09 (...)\n  RSP: 002b:00007fff26278d48 EFLAGS: 00000246 ORIG_RAX: 000000000000004a\n  RAX: ffffffffffffffda RBX: 0000563c83cb4560 RCX: 00007fa9142a55c3\n  RDX: 00007fff26278cb0 RSI: 00007fff26278cb0 RDI: 0000000000000005\n  RBP: 0000000000000005 R08: 0000000000000001 R09: 00007fff26278d5c\n  R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000340\n  R13: 00007fff26278de0 R14: 00007fff26278d96 R15: 0000563c83ca57c0\n  Modules linked in: btrfs dm_zero dm_snapshot dm_thin_pool (...)\n  ---[ end trace ee2f1b19327d791d ]---\n\nThe steps that lead to this crash are the following:\n\n1) We are at transaction N;\n\n2) We have two tasks with a transaction handle attached to transaction N.\n   Task A and Task B. Task B is doing an fsync;\n\n3) Task B is at btrfs_sync_log(), and has saved fs_info-\u003elog_root_tree\n   into a local variable named 'log_root_tree' at the top of\n   btrfs_sync_log(). Task B is about to call write_all_supers(), but\n   before that...\n\n4) Task A calls btrfs_commit_transaction(), and after it sets the\n   transaction state to TRANS_STATE_COMMIT_START, an error happens before\n   it w\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Return correct error code from smb2_get_enc_key\n\nAvoid a warning if the error percolates back up:\n\n[440700.376476] CIFS VFS: \\\\otters.example.com crypt_message: Could not get encryption key\n[440700.386947] ------------[ cut here ]------------\n[440700.386948] err = 1\n[440700.386977] WARNING: CPU: 11 PID: 2733 at /build/linux-hwe-5.4-p6lk6L/linux-hwe-5.4-5.4.0/lib/errseq.c:74 errseq_set+0x5c/0x70\n...\n[440700.397304] CPU: 11 PID: 2733 Comm: tar Tainted: G           OE     5.4.0-70-generic #78~18.04.1-Ubuntu\n...\n[440700.397334] Call Trace:\n[440700.397346]  __filemap_set_wb_err+0x1a/0x70\n[440700.397419]  cifs_writepages+0x9c7/0xb30 [cifs]\n[440700.397426]  do_writepages+0x4b/0xe0\n[440700.397444]  __filemap_fdatawrite_range+0xcb/0x100\n[440700.397455]  filemap_write_and_wait+0x42/0xa0\n[440700.397486]  cifs_setattr+0x68b/0xf30 [cifs]\n[440700.397493]  notify_change+0x358/0x4a0\n[440700.397500]  utimes_common+0xe9/0x1c0\n[440700.397510]  do_utimes+0xc5/0x150\n[440700.397520]  __x64_sys_utimensat+0x88/0xd0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix crash in qla2xxx_mqueuecommand()\n\n    RIP: 0010:kmem_cache_free+0xfa/0x1b0\n    Call Trace:\n       qla2xxx_mqueuecommand+0x2b5/0x2c0 [qla2xxx]\n       scsi_queue_rq+0x5e2/0xa40\n       __blk_mq_try_issue_directly+0x128/0x1d0\n       blk_mq_request_issue_directly+0x4e/0xb0\n\nFix incorrect call to free srb in qla2xxx_mqueuecommand(), as srb is now\nallocated by upper layers. This fixes smatch warning of srb unintended\nfree.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Reserve extra IRQ vectors\n\nCommit a6dcfe08487e (\"scsi: qla2xxx: Limit interrupt vectors to number of\nCPUs\") lowers the number of allocated MSI-X vectors to the number of CPUs.\n\nThat breaks vector allocation assumptions in qla83xx_iospace_config(),\nqla24xx_enable_msix() and qla2x00_iospace_config(). Either of the functions\ncomputes maximum number of qpairs as:\n\n  ha-\u003emax_qpairs = ha-\u003emsix_count - 1 (MB interrupt) - 1 (default\n                   response queue) - 1 (ATIO, in dual or pure target mode)\n\nmax_qpairs is set to zero in case of two CPUs and initiator mode. The\nnumber is then used to allocate ha-\u003equeue_pair_map inside\nqla2x00_alloc_queues(). No allocation happens and ha-\u003equeue_pair_map is\nleft NULL but the driver thinks there are queue pairs available.\n\nqla2xxx_queuecommand() tries to find a qpair in the map and crashes:\n\n  if (ha-\u003emqenable) {\n          uint32_t tag;\n          uint16_t hwq;\n          struct qla_qpair *qpair = NULL;\n\n          tag = blk_mq_unique_tag(cmd-\u003erequest);\n          hwq = blk_mq_unique_tag_to_hwq(tag);\n          qpair = ha-\u003equeue_pair_map[hwq]; # \u003c- HERE\n\n          if (qpair)\n                  return qla2xxx_mqueuecommand(host, cmd, qpair);\n  }\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000000\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] SMP PTI\n  CPU: 0 PID: 72 Comm: kworker/u4:3 Tainted: G        W         5.10.0-rc1+ #25\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014\n  Workqueue: scsi_wq_7 fc_scsi_scan_rport [scsi_transport_fc]\n  RIP: 0010:qla2xxx_queuecommand+0x16b/0x3f0 [qla2xxx]\n  Call Trace:\n   scsi_queue_rq+0x58c/0xa60\n   blk_mq_dispatch_rq_list+0x2b7/0x6f0\n   ? __sbitmap_get_word+0x2a/0x80\n   __blk_mq_sched_dispatch_requests+0xb8/0x170\n   blk_mq_sched_dispatch_requests+0x2b/0x50\n   __blk_mq_run_hw_queue+0x49/0xb0\n   __blk_mq_delay_run_hw_queue+0xfb/0x150\n   blk_mq_sched_insert_request+0xbe/0x110\n   blk_execute_rq+0x45/0x70\n   __scsi_execute+0x10e/0x250\n   scsi_probe_and_add_lun+0x228/0xda0\n   __scsi_scan_target+0xf4/0x620\n   ? __pm_runtime_resume+0x4f/0x70\n   scsi_scan_target+0x100/0x110\n   fc_scsi_scan_rport+0xa1/0xb0 [scsi_transport_fc]\n   process_one_work+0x1ea/0x3b0\n   worker_thread+0x28/0x3b0\n   ? process_one_work+0x3b0/0x3b0\n   kthread+0x112/0x130\n   ? kthread_park+0x80/0x80\n   ret_from_fork+0x22/0x30\n\nThe driver should allocate enough vectors to provide every CPU it's own HW\nqueue and still handle reserved (MB, RSP, ATIO) interrupts.\n\nThe change fixes the crash on dual core VM and prevents unbalanced QP\nallocation where nr_hw_queues is two less than the number of CPUs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: custom_method: fix potential use-after-free issue\n\nIn cm_write(), buf is always freed when reaching the end of the\nfunction.  If the requested count is less than table.length, the\nallocated buffer will be freed but subsequent calls to cm_write() will\nstill try to access it.\n\nRemove the unconditional kfree(buf) at the end of the function and\nset the buf to NULL in the -EINVAL error path to match the rest of\nfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46981",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: Fix NULL pointer in flush_workqueue\n\nOpen /dev/nbdX first, the config_refs will be 1 and\nthe pointers in nbd_device are still null. Disconnect\n/dev/nbdX, then reference a null recv_workq. The\nprotection by config_refs in nbd_genl_disconnect is useless.\n\n[  656.366194] BUG: kernel NULL pointer dereference, address: 0000000000000020\n[  656.368943] #PF: supervisor write access in kernel mode\n[  656.369844] #PF: error_code(0x0002) - not-present page\n[  656.370717] PGD 10cc87067 P4D 10cc87067 PUD 1074b4067 PMD 0\n[  656.371693] Oops: 0002 [#1] SMP\n[  656.372242] CPU: 5 PID: 7977 Comm: nbd-client Not tainted 5.11.0-rc5-00040-g76c057c84d28 #1\n[  656.373661] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014\n[  656.375904] RIP: 0010:mutex_lock+0x29/0x60\n[  656.376627] Code: 00 0f 1f 44 00 00 55 48 89 fd 48 83 05 6f d7 fe 08 01 e8 7a c3 ff ff 48 83 05 6a d7 fe 08 01 31 c0 65 48 8b 14 25 00 6d 01 00 \u003cf0\u003e 48 0f b1 55 d\n[  656.378934] RSP: 0018:ffffc900005eb9b0 EFLAGS: 00010246\n[  656.379350] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n[  656.379915] RDX: ffff888104cf2600 RSI: ffffffffaae8f452 RDI: 0000000000000020\n[  656.380473] RBP: 0000000000000020 R08: 0000000000000000 R09: ffff88813bd6b318\n[  656.381039] R10: 00000000000000c7 R11: fefefefefefefeff R12: ffff888102710b40\n[  656.381599] R13: ffffc900005eb9e0 R14: ffffffffb2930680 R15: ffff88810770ef00\n[  656.382166] FS:  00007fdf117ebb40(0000) GS:ffff88813bd40000(0000) knlGS:0000000000000000\n[  656.382806] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  656.383261] CR2: 0000000000000020 CR3: 0000000100c84000 CR4: 00000000000006e0\n[  656.383819] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  656.384370] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  656.384927] Call Trace:\n[  656.385111]  flush_workqueue+0x92/0x6c0\n[  656.385395]  nbd_disconnect_and_put+0x81/0xd0\n[  656.385716]  nbd_genl_disconnect+0x125/0x2a0\n[  656.386034]  genl_family_rcv_msg_doit.isra.0+0x102/0x1b0\n[  656.386422]  genl_rcv_msg+0xfc/0x2b0\n[  656.386685]  ? nbd_ioctl+0x490/0x490\n[  656.386954]  ? genl_family_rcv_msg_doit.isra.0+0x1b0/0x1b0\n[  656.387354]  netlink_rcv_skb+0x62/0x180\n[  656.387638]  genl_rcv+0x34/0x60\n[  656.387874]  netlink_unicast+0x26d/0x590\n[  656.388162]  netlink_sendmsg+0x398/0x6c0\n[  656.388451]  ? netlink_rcv_skb+0x180/0x180\n[  656.388750]  ____sys_sendmsg+0x1da/0x320\n[  656.389038]  ? ____sys_recvmsg+0x130/0x220\n[  656.389334]  ___sys_sendmsg+0x8e/0xf0\n[  656.389605]  ? ___sys_recvmsg+0xa2/0xf0\n[  656.389889]  ? handle_mm_fault+0x1671/0x21d0\n[  656.390201]  __sys_sendmsg+0x6d/0xe0\n[  656.390464]  __x64_sys_sendmsg+0x23/0x30\n[  656.390751]  do_syscall_64+0x45/0x70\n[  656.391017]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nTo fix it, just add if (nbd-\u003erecv_workq) to nbd_disconnect_and_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46988",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserfaultfd: release page in error path to avoid BUG_ON\n\nConsider the following sequence of events:\n\n1. Userspace issues a UFFD ioctl, which ends up calling into\n   shmem_mfill_atomic_pte(). We successfully account the blocks, we\n   shmem_alloc_page(), but then the copy_from_user() fails. We return\n   -ENOENT. We don't release the page we allocated.\n2. Our caller detects this error code, tries the copy_from_user() after\n   dropping the mmap_lock, and retries, calling back into\n   shmem_mfill_atomic_pte().\n3. Meanwhile, let's say another process filled up the tmpfs being used.\n4. So shmem_mfill_atomic_pte() fails to account blocks this time, and\n   immediately returns - without releasing the page.\n\nThis triggers a BUG_ON in our caller, which asserts that the page\nshould always be consumed, unless -ENOENT is returned.\n\nTo fix this, detect if we have such a \"dangling\" page when accounting\nfails, and if so, release it before returning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/64s: Fix crashes when toggling entry flush barrier\n\nThe entry flush mitigation can be enabled/disabled at runtime via a\ndebugfs file (entry_flush), which causes the kernel to patch itself to\nenable/disable the relevant mitigations.\n\nHowever depending on which mitigation we're using, it may not be safe to\ndo that patching while other CPUs are active. For example the following\ncrash:\n\n  sleeper[15639]: segfault (11) at c000000000004c20 nip c000000000004c20 lr c000000000004c20\n\nShows that we returned to userspace with a corrupted LR that points into\nthe kernel, due to executing the partially patched call to the fallback\nentry flush (ie. we missed the LR restore).\n\nFix it by doing the patching under stop machine. The CPUs that aren't\ndoing the patching will be spinning in the core of the stop machine\nlogic. That is currently sufficient for our purposes, because none of\nthe patching we do is to that code or anywhere in the vicinity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethernet:enic: Fix a use after free bug in enic_hard_start_xmit\n\nIn enic_hard_start_xmit, it calls enic_queue_wq_skb(). Inside\nenic_queue_wq_skb, if some error happens, the skb will be freed\nby dev_kfree_skb(skb). But the freed skb is still used in\nskb_tx_timestamp(skb).\n\nMy patch makes enic_queue_wq_skb() return error and goto spin_unlock()\nincase of error. The solution is provided by Govind.\nSee https://lkml.org/lkml/2021/4/30/961.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47006",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9064/1: hw_breakpoint: Do not directly check the event's overflow_handler hook\n\nThe commit 1879445dfa7b (\"perf/core: Set event's default\n::overflow_handler()\") set a default event-\u003eoverflow_handler in\nperf_event_alloc(), and replace the check event-\u003eoverflow_handler with\nis_default_overflow_handler(), but one is missing.\n\nCurrently, the bp-\u003eoverflow_handler can not be NULL. As a result,\nenable_single_step() is always not invoked.\n\nComments from Zhen Lei:\n\n https://patchwork.kernel.org/project/linux-arm-kernel/patch/20210207105934.2001-1-thunder.leizhen@huawei.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix RX consumer index logic in the error path.\n\nIn bnxt_rx_pkt(), the RX buffers are expected to complete in order.\nIf the RX consumer index indicates an out of order buffer completion,\nit means we are hitting a hardware bug and the driver will abort all\nremaining RX packets and reset the RX ring.  The RX consumer index\nthat we pass to bnxt_discard_rx() is not correct.  We should be\npassing the current index (tmp_raw_cons) instead of the old index\n(raw_cons).  This bug can cause us to be at the wrong index when\ntrying to abort the next RX packet.  It can crash like this:\n\n #0 [ffff9bbcdf5c39a8] machine_kexec at ffffffff9b05e007\n #1 [ffff9bbcdf5c3a00] __crash_kexec at ffffffff9b111232\n #2 [ffff9bbcdf5c3ad0] panic at ffffffff9b07d61e\n #3 [ffff9bbcdf5c3b50] oops_end at ffffffff9b030978\n #4 [ffff9bbcdf5c3b78] no_context at ffffffff9b06aaf0\n #5 [ffff9bbcdf5c3bd8] __bad_area_nosemaphore at ffffffff9b06ae2e\n #6 [ffff9bbcdf5c3c28] bad_area_nosemaphore at ffffffff9b06af24\n #7 [ffff9bbcdf5c3c38] __do_page_fault at ffffffff9b06b67e\n #8 [ffff9bbcdf5c3cb0] do_page_fault at ffffffff9b06bb12\n #9 [ffff9bbcdf5c3ce0] page_fault at ffffffff9bc015c5\n    [exception RIP: bnxt_rx_pkt+237]\n    RIP: ffffffffc0259cdd  RSP: ffff9bbcdf5c3d98  RFLAGS: 00010213\n    RAX: 000000005dd8097f  RBX: ffff9ba4cb11b7e0  RCX: ffffa923cf6e9000\n    RDX: 0000000000000fff  RSI: 0000000000000627  RDI: 0000000000001000\n    RBP: ffff9bbcdf5c3e60   R8: 0000000000420003   R9: 000000000000020d\n    R10: ffffa923cf6ec138  R11: ffff9bbcdf5c3e83  R12: ffff9ba4d6f928c0\n    R13: ffff9ba4cac28080  R14: ffff9ba4cb11b7f0  R15: ffff9ba4d5a30000\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock/virtio: free queued packets when closing socket\n\nAs reported by syzbot [1], there is a memory leak while closing the\nsocket. We partially solved this issue with commit ac03046ece2b\n(\"vsock/virtio: free packets during the socket release\"), but we\nforgot to drain the RX queue when the socket is definitely closed by\nthe scheduled work.\n\nTo avoid future issues, let's use the new virtio_transport_remove_sock()\nto drain the RX queue before removing the socket from the af_vsock lists\ncalling vsock_remove_sock().\n\n[1] https://syzkaller.appspot.com/bug?extid=24452624fc4c571eedd9",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47034",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/64s: Fix pte update for kernel memory on radix\n\nWhen adding a PTE a ptesync is needed to order the update of the PTE\nwith subsequent accesses otherwise a spurious fault may be raised.\n\nradix__set_pte_at() does not do this for performance gains. For\nnon-kernel memory this is not an issue as any faults of this kind are\ncorrected by the page fault handler. For kernel memory these faults\nare not handled. The current solution is that there is a ptesync in\nflush_cache_vmap() which should be called when mapping from the\nvmalloc region.\n\nHowever, map_kernel_page() does not call flush_cache_vmap(). This is\ntroublesome in particular for code patching with Strict RWX on radix.\nIn do_patch_instruction() the page frame that contains the instruction\nto be patched is mapped and then immediately patched. With no ordering\nor synchronization between setting up the PTE and writing to the page\nit is possible for faults.\n\nAs the code patching is done using __put_user_asm_goto() the resulting\nfault is obscured - but using a normal store instead it can be seen:\n\n  BUG: Unable to handle kernel data access on write at 0xc008000008f24a3c\n  Faulting instruction address: 0xc00000000008bd74\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV\n  Modules linked in: nop_module(PO+) [last unloaded: nop_module]\n  CPU: 4 PID: 757 Comm: sh Tainted: P           O      5.10.0-rc5-01361-ge3c1b78c8440-dirty #43\n  NIP:  c00000000008bd74 LR: c00000000008bd50 CTR: c000000000025810\n  REGS: c000000016f634a0 TRAP: 0300   Tainted: P           O       (5.10.0-rc5-01361-ge3c1b78c8440-dirty)\n  MSR:  9000000000009033 \u003cSF,HV,EE,ME,IR,DR,RI,LE\u003e  CR: 44002884  XER: 00000000\n  CFAR: c00000000007c68c DAR: c008000008f24a3c DSISR: 42000000 IRQMASK: 1\n\nThis results in the kind of issue reported here:\n  https://lore.kernel.org/linuxppc-dev/15AC5B0E-A221-4B8C-9039-FA96B8EF7C88@lca.pw/\n\nChris Riedl suggested a reliable way to reproduce the issue:\n  $ mount -t debugfs none /sys/kernel/debug\n  $ (while true; do echo function \u003e /sys/kernel/debug/tracing/current_tracer ; echo nop \u003e /sys/kernel/debug/tracing/current_tracer ; done) \u0026\n\nTurning ftrace on and off does a large amount of code patching which\nin usually less then 5min will crash giving a trace like:\n\n   ftrace-powerpc: (____ptrval____): replaced (4b473b11) != old (60000000)\n   ------------[ ftrace bug ]------------\n   ftrace failed to modify\n   [\u003cc000000000bf8e5c\u003e] napi_busy_loop+0xc/0x390\n    actual:   11:3b:47:4b\n   Setting ftrace call site to call ftrace function\n   ftrace record flags: 80000001\n    (1)\n    expected tramp: c00000000006c96c\n   ------------[ cut here ]------------\n   WARNING: CPU: 4 PID: 809 at kernel/trace/ftrace.c:2065 ftrace_bug+0x28c/0x2e8\n   Modules linked in: nop_module(PO-) [last unloaded: nop_module]\n   CPU: 4 PID: 809 Comm: sh Tainted: P           O      5.10.0-rc5-01360-gf878ccaf250a #1\n   NIP:  c00000000024f334 LR: c00000000024f330 CTR: c0000000001a5af0\n   REGS: c000000004c8b760 TRAP: 0700   Tainted: P           O       (5.10.0-rc5-01360-gf878ccaf250a)\n   MSR:  900000000282b033 \u003cSF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE\u003e  CR: 28008848  XER: 20040000\n   CFAR: c0000000001a9c98 IRQMASK: 0\n   GPR00: c00000000024f330 c000000004c8b9f0 c000000002770600 0000000000000022\n   GPR04: 00000000ffff7fff c000000004c8b6d0 0000000000000027 c0000007fe9bcdd8\n   GPR08: 0000000000000023 ffffffffffffffd8 0000000000000027 c000000002613118\n   GPR12: 0000000000008000 c0000007fffdca00 0000000000000000 0000000000000000\n   GPR16: 0000000023ec37c5 0000000000000000 0000000000000000 0000000000000008\n   GPR20: c000000004c8bc90 c0000000027a2d20 c000000004c8bcd0 c000000002612fe8\n   GPR24: 0000000000000038 0000000000000030 0000000000000028 0000000000000020\n   GPR28: c000000000ff1b68 c000000000bf8e5c c00000000312f700 c000000000fbb9b0\n   NIP ftrace_bug+0x28c/0x2e8\n   LR  ftrace_bug+0x288/0x2e8\n   Call T\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix null pointer dereference in lpfc_prep_els_iocb()\n\nIt is possible to call lpfc_issue_els_plogi() passing a did for which no\nmatching ndlp is found. A call is then made to lpfc_prep_els_iocb() with a\nnull pointer to a lpfc_nodelist structure resulting in a null pointer\ndereference.\n\nFix by returning an error status if no valid ndlp is found. Fix up comments\nregarding ndlp reference counting.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47049",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Use after free in __vmbus_open()\n\nThe \"open_info\" variable is added to the \u0026vmbus_connection.chn_msg_list,\nbut the error handling frees \"open_info\" without removing it from the\nlist.  This will result in a use after free.  First remove it from the\nlist, and then free it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47055",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: require write permissions for locking and badblock ioctls\n\nMEMLOCK, MEMUNLOCK and OTPLOCK modify protection bits. Thus require\nwrite permission. Depending on the hardware MEMLOCK might even be\nwrite-once, e.g. for SPI-NOR flashes with their WP# tied to GND. OTPLOCK\nis always write-once.\n\nMEMSETBADBLOCK modifies the bad block table.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47056",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - ADF_STATUS_PF_RUNNING should be set after adf_dev_init\n\nADF_STATUS_PF_RUNNING is (only) used and checked by adf_vf2pf_shutdown()\nbefore calling adf_iov_putmsg()-\u003emutex_lock(vf2pf_lock), however the\nvf2pf_lock is initialized in adf_dev_init(), which can fail and when it\nfail, the vf2pf_lock is either not initialized or destroyed, a subsequent\nuse of vf2pf_lock will cause issue.\nTo fix this issue, only set this flag if adf_dev_init() returns 0.\n\n[    7.178404] BUG: KASAN: user-memory-access in __mutex_lock.isra.0+0x1ac/0x7c0\n[    7.180345] Call Trace:\n[    7.182576]  mutex_lock+0xc9/0xd0\n[    7.183257]  adf_iov_putmsg+0x118/0x1a0 [intel_qat]\n[    7.183541]  adf_vf2pf_shutdown+0x4d/0x7b [intel_qat]\n[    7.183834]  adf_dev_shutdown+0x172/0x2b0 [intel_qat]\n[    7.184127]  adf_probe+0x5e9/0x600 [qat_dh895xccvf]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47063",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge/panel: Cleanup connector on bridge detach\n\nIf we don't call drm_connector_cleanup() manually in\npanel_bridge_detach(), the connector will be cleaned up with the other\nDRM objects in the call to drm_mode_config_cleanup(). However, since our\ndrm_connector is devm-allocated, by the time drm_mode_config_cleanup()\nwill be called, our connector will be long gone. Therefore, the\nconnector must be cleaned up when the bridge is detached to avoid\nuse-after-free conditions.\n\nv2: Cleanup connector only if it was created\n\nv3: Add FIXME\n\nv4: (Use connector-\u003edev) directly in if() block",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47070",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio_hv_generic: Fix another memory leak in error handling paths\n\nMemory allocated by 'vmbus_alloc_ring()' at the beginning of the probe\nfunction is never freed in the error handling path.\n\nAdd the missing 'vmbus_free_ring()' call.\n\nNote that it is already freed in the .remove function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47071",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio_hv_generic: Fix a memory leak in error handling paths\n\nIf 'vmbus_establish_gpadl()' fails, the (recv|send)_gpadl will not be\nupdated and 'hv_uio_cleanup()' in the error handling path will not be\nable to free the corresponding buffer.\n\nIn such a case, we need to free the buffer explicitly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell-smbios-wmi: Fix oops on rmmod dell_smbios\n\ninit_dell_smbios_wmi() only registers the dell_smbios_wmi_driver on systems\nwhere the Dell WMI interface is supported. While exit_dell_smbios_wmi()\nunregisters it unconditionally, this leads to the following oops:\n\n[  175.722921] ------------[ cut here ]------------\n[  175.722925] Unexpected driver unregister!\n[  175.722939] WARNING: CPU: 1 PID: 3630 at drivers/base/driver.c:194 driver_unregister+0x38/0x40\n...\n[  175.723089] Call Trace:\n[  175.723094]  cleanup_module+0x5/0xedd [dell_smbios]\n...\n[  175.723148] ---[ end trace 064c34e1ad49509d ]---\n\nMake the unregister happen on the same condition the register happens\nto fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47074",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-loop: fix memory leak in nvme_loop_create_ctrl()\n\nWhen creating loop ctrl in nvme_loop_create_ctrl(), if nvme_init_ctrl()\nfails, the loop ctrl should be freed before jumping to the \"out\" label.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipmi: Fix UAF when uninstall ipmi_si and ipmi_msghandler module\n\nHi,\n\nWhen testing install and uninstall of ipmi_si.ko and ipmi_msghandler.ko,\nthe system crashed.\n\nThe log as follows:\n[  141.087026] BUG: unable to handle kernel paging request at ffffffffc09b3a5a\n[  141.087241] PGD 8fe4c0d067 P4D 8fe4c0d067 PUD 8fe4c0f067 PMD 103ad89067 PTE 0\n[  141.087464] Oops: 0010 [#1] SMP NOPTI\n[  141.087580] CPU: 67 PID: 668 Comm: kworker/67:1 Kdump: loaded Not tainted 4.18.0.x86_64 #47\n[  141.088009] Workqueue: events 0xffffffffc09b3a40\n[  141.088009] RIP: 0010:0xffffffffc09b3a5a\n[  141.088009] Code: Bad RIP value.\n[  141.088009] RSP: 0018:ffffb9094e2c3e88 EFLAGS: 00010246\n[  141.088009] RAX: 0000000000000000 RBX: ffff9abfdb1f04a0 RCX: 0000000000000000\n[  141.088009] RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\n[  141.088009] RBP: 0000000000000000 R08: ffff9abfffee3cb8 R09: 00000000000002e1\n[  141.088009] R10: ffffb9094cb73d90 R11: 00000000000f4240 R12: ffff9abfffee8700\n[  141.088009] R13: 0000000000000000 R14: ffff9abfdb1f04a0 R15: ffff9abfdb1f04a8\n[  141.088009] FS:  0000000000000000(0000) GS:ffff9abfffec0000(0000) knlGS:0000000000000000\n[  141.088009] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  141.088009] CR2: ffffffffc09b3a30 CR3: 0000008fe4c0a001 CR4: 00000000007606e0\n[  141.088009] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  141.088009] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  141.088009] PKRU: 55555554\n[  141.088009] Call Trace:\n[  141.088009]  ? process_one_work+0x195/0x390\n[  141.088009]  ? worker_thread+0x30/0x390\n[  141.088009]  ? process_one_work+0x390/0x390\n[  141.088009]  ? kthread+0x10d/0x130\n[  141.088009]  ? kthread_flush_work_fn+0x10/0x10\n[  141.088009]  ? ret_from_fork+0x35/0x40] BUG: unable to handle kernel paging request at ffffffffc0b28a5a\n[  200.223240] PGD 97fe00d067 P4D 97fe00d067 PUD 97fe00f067 PMD a580cbf067 PTE 0\n[  200.223464] Oops: 0010 [#1] SMP NOPTI\n[  200.223579] CPU: 63 PID: 664 Comm: kworker/63:1 Kdump: loaded Not tainted 4.18.0.x86_64 #46\n[  200.224008] Workqueue: events 0xffffffffc0b28a40\n[  200.224008] RIP: 0010:0xffffffffc0b28a5a\n[  200.224008] Code: Bad RIP value.\n[  200.224008] RSP: 0018:ffffbf3c8e2a3e88 EFLAGS: 00010246\n[  200.224008] RAX: 0000000000000000 RBX: ffffa0799ad6bca0 RCX: 0000000000000000\n[  200.224008] RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\n[  200.224008] RBP: 0000000000000000 R08: ffff9fe43fde3cb8 R09: 00000000000000d5\n[  200.224008] R10: ffffbf3c8cb53d90 R11: 00000000000f4240 R12: ffff9fe43fde8700\n[  200.224008] R13: 0000000000000000 R14: ffffa0799ad6bca0 R15: ffffa0799ad6bca8\n[  200.224008] FS:  0000000000000000(0000) GS:ffff9fe43fdc0000(0000) knlGS:0000000000000000\n[  200.224008] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  200.224008] CR2: ffffffffc0b28a30 CR3: 00000097fe00a002 CR4: 00000000007606e0\n[  200.224008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  200.224008] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  200.224008] PKRU: 55555554\n[  200.224008] Call Trace:\n[  200.224008]  ? process_one_work+0x195/0x390\n[  200.224008]  ? worker_thread+0x30/0x390\n[  200.224008]  ? process_one_work+0x390/0x390\n[  200.224008]  ? kthread+0x10d/0x130\n[  200.224008]  ? kthread_flush_work_fn+0x10/0x10\n[  200.224008]  ? ret_from_fork+0x35/0x40\n[  200.224008] kernel fault(0x1) notification starting on CPU 63\n[  200.224008] kernel fault(0x1) notification finished on CPU 63\n[  200.224008] CR2: ffffffffc0b28a5a\n[  200.224008] ---[ end trace c82a412d93f57412 ]---\n\nThe reason is as follows:\nT1: rmmod ipmi_si.\n    -\u003eipmi_unregister_smi()\n        -\u003e ipmi_bmc_unregister()\n            -\u003e __ipmi_bmc_unregister()\n                -\u003e kref_put(\u0026bmc-\u003eusecount, cleanup_bmc_device);\n                    -\u003e schedule_work(\u0026bmc-\u003eremove_work);\n\nT2: rmmod ipmi_msghandl\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nasix: fix uninit-value in asix_mdio_read()\n\nasix_read_cmd() may read less than sizeof(smsr) bytes and in this case\nsmsr will be uninitialized.\n\nFail log:\nBUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]\nBUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497\nBUG: KMSAN: uninit-value in asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497\n asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]\n asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497\n asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47103",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet: fully convert sk-\u003esk_rx_dst to RCU rules\n\nsyzbot reported various issues around early demux,\none being included in this changelog [1]\n\nsk-\u003esk_rx_dst is using RCU protection without clearly\ndocumenting it.\n\nAnd following sequences in tcp_v4_do_rcv()/tcp_v6_do_rcv()\nare not following standard RCU rules.\n\n[a]    dst_release(dst);\n[b]    sk-\u003esk_rx_dst = NULL;\n\nThey look wrong because a delete operation of RCU protected\npointer is supposed to clear the pointer before\nthe call_rcu()/synchronize_rcu() guarding actual memory freeing.\n\nIn some cases indeed, dst could be freed before [b] is done.\n\nWe could cheat by clearing sk_rx_dst before calling\ndst_release(), but this seems the right time to stick\nto standard RCU annotations and debugging facilities.\n\n[1]\nBUG: KASAN: use-after-free in dst_check include/net/dst.h:470 [inline]\nBUG: KASAN: use-after-free in tcp_v4_early_demux+0x95b/0x960 net/ipv4/tcp_ipv4.c:1792\nRead of size 2 at addr ffff88807f1cb73a by task syz-executor.5/9204\n\nCPU: 0 PID: 9204 Comm: syz-executor.5 Not tainted 5.16.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n print_address_description.constprop.0.cold+0x8d/0x320 mm/kasan/report.c:247\n __kasan_report mm/kasan/report.c:433 [inline]\n kasan_report.cold+0x83/0xdf mm/kasan/report.c:450\n dst_check include/net/dst.h:470 [inline]\n tcp_v4_early_demux+0x95b/0x960 net/ipv4/tcp_ipv4.c:1792\n ip_rcv_finish_core.constprop.0+0x15de/0x1e80 net/ipv4/ip_input.c:340\n ip_list_rcv_finish.constprop.0+0x1b2/0x6e0 net/ipv4/ip_input.c:583\n ip_sublist_rcv net/ipv4/ip_input.c:609 [inline]\n ip_list_rcv+0x34e/0x490 net/ipv4/ip_input.c:644\n __netif_receive_skb_list_ptype net/core/dev.c:5508 [inline]\n __netif_receive_skb_list_core+0x549/0x8e0 net/core/dev.c:5556\n __netif_receive_skb_list net/core/dev.c:5608 [inline]\n netif_receive_skb_list_internal+0x75e/0xd80 net/core/dev.c:5699\n gro_normal_list net/core/dev.c:5853 [inline]\n gro_normal_list net/core/dev.c:5849 [inline]\n napi_complete_done+0x1f1/0x880 net/core/dev.c:6590\n virtqueue_napi_complete drivers/net/virtio_net.c:339 [inline]\n virtnet_poll+0xca2/0x11b0 drivers/net/virtio_net.c:1557\n __napi_poll+0xaf/0x440 net/core/dev.c:7023\n napi_poll net/core/dev.c:7090 [inline]\n net_rx_action+0x801/0xb40 net/core/dev.c:7177\n __do_softirq+0x29b/0x9c2 kernel/softirq.c:558\n invoke_softirq kernel/softirq.c:432 [inline]\n __irq_exit_rcu+0x123/0x180 kernel/softirq.c:637\n irq_exit_rcu+0x5/0x20 kernel/softirq.c:649\n common_interrupt+0x52/0xc0 arch/x86/kernel/irq.c:240\n asm_common_interrupt+0x1e/0x40 arch/x86/include/asm/idtentry.h:629\nRIP: 0033:0x7f5e972bfd57\nCode: 39 d1 73 14 0f 1f 80 00 00 00 00 48 8b 50 f8 48 83 e8 08 48 39 ca 77 f3 48 39 c3 73 3e 48 89 13 48 8b 50 f8 48 89 38 49 8b 0e \u003c48\u003e 8b 3e 48 83 c3 08 48 83 c6 08 eb bc 48 39 d1 72 9e 48 39 d0 73\nRSP: 002b:00007fff8a413210 EFLAGS: 00000283\nRAX: 00007f5e97108990 RBX: 00007f5e97108338 RCX: ffffffff81d3aa45\nRDX: ffffffff81d3aa45 RSI: 00007f5e97108340 RDI: ffffffff81d3aa45\nRBP: 00007f5e97107eb8 R08: 00007f5e97108d88 R09: 0000000093c2e8d9\nR10: 0000000000000000 R11: 0000000000000000 R12: 00007f5e97107eb0\nR13: 00007f5e97108338 R14: 00007f5e97107ea8 R15: 0000000000000019\n \u003c/TASK\u003e\n\nAllocated by task 13:\n kasan_save_stack+0x1e/0x50 mm/kasan/common.c:38\n kasan_set_track mm/kasan/common.c:46 [inline]\n set_alloc_info mm/kasan/common.c:434 [inline]\n __kasan_slab_alloc+0x90/0xc0 mm/kasan/common.c:467\n kasan_slab_alloc include/linux/kasan.h:259 [inline]\n slab_post_alloc_hook mm/slab.h:519 [inline]\n slab_alloc_node mm/slub.c:3234 [inline]\n slab_alloc mm/slub.c:3242 [inline]\n kmem_cache_alloc+0x202/0x3a0 mm/slub.c:3247\n dst_alloc+0x146/0x1f0 net/core/dst.c:92\n rt_dst_alloc+0x73/0x430 net/ipv4/route.c:1613\n ip_route_input_slow+0x1817/0x3a20 net/ipv4/route.c:234\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/qib: Fix memory leak in qib_user_sdma_queue_pkts()\n\nThe wrong goto label was used for the error case and missed cleanup of the\npkt allocation.\n\nAddresses-Coverity-ID: 1493352 (\"Resource leak\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47110",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kvm: Disable kvmclock on all CPUs on shutdown\n\nCurrenly, we disable kvmclock from machine_shutdown() hook and this\nonly happens for boot CPU. We need to disable it for all CPUs to\nguard against memory corruption e.g. on restore from hibernate.\n\nNote, writing '0' to kvmclock MSR doesn't clear memory location, it\njust prevents hypervisor from updating the location so for the short\nwhile after write and while CPU is still alive, the clock remains usable\nand correct so we don't need to switch to some other clocksource.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47112",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/kvm: Teardown PV features on boot CPU as well\n\nVarious PV features (Async PF, PV EOI, steal time) work through memory\nshared with hypervisor and when we restore from hibernation we must\nproperly teardown all these features to make sure hypervisor doesn't\nwrite to stale locations after we jump to the previously hibernated kernel\n(which can try to place anything there). For secondary CPUs the job is\nalready done by kvm_cpu_down_prepare(), register syscore ops to do\nthe same for boot CPU.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47113",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: abort in rename_exchange if we fail to insert the second ref\n\nError injection stress uncovered a problem where we'd leave a dangling\ninode ref if we failed during a rename_exchange.  This happens because\nwe insert the inode ref for one side of the rename, and then for the\nother side.  If this second inode ref insert fails we'll leave the first\none dangling and leave a corrupt file system behind.  Fix this by\naborting if we did the insert for the first inode ref.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47114",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix data corruption by fallocate\n\nWhen fallocate punches holes out of inode size, if original isize is in\nthe middle of last cluster, then the part from isize to the end of the\ncluster will be zeroed with buffer write, at that time isize is not yet\nupdated to match the new size, if writeback is kicked in, it will invoke\nocfs2_writepage()-\u003eblock_write_full_page() where the pages out of inode\nsize will be dropped.  That will cause file corruption.  Fix this by\nzero out eof blocks when extending the inode size.\n\nRunning the following command with qemu-image 4.2.1 can get a corrupted\ncoverted image file easily.\n\n    qemu-img convert -p -t none -T none -f qcow2 $qcow_image \\\n             -O qcow2 -o compat=1.1 $qcow_image.conv\n\nThe usage of fallocate in qemu is like this, it first punches holes out\nof inode size, then extend the inode size.\n\n    fallocate(11, FALLOC_FL_KEEP_SIZE|FALLOC_FL_PUNCH_HOLE, 2276196352, 65536) = 0\n    fallocate(11, 0, 2276196352, 65536) = 0\n\nv1: https://www.spinics.net/lists/linux-fsdevel/msg193999.html\nv2: https://lore.kernel.org/linux-fsdevel/20210525093034.GB4112@quack2.suse.cz/T/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47117",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug on in ext4_es_cache_extent as ext4_split_extent_at failed\n\nWe got follow bug_on when run fsstress with injecting IO fault:\n[130747.323114] kernel BUG at fs/ext4/extents_status.c:762!\n[130747.323117] Internal error: Oops - BUG: 0 [#1] SMP\n......\n[130747.334329] Call trace:\n[130747.334553]  ext4_es_cache_extent+0x150/0x168 [ext4]\n[130747.334975]  ext4_cache_extents+0x64/0xe8 [ext4]\n[130747.335368]  ext4_find_extent+0x300/0x330 [ext4]\n[130747.335759]  ext4_ext_map_blocks+0x74/0x1178 [ext4]\n[130747.336179]  ext4_map_blocks+0x2f4/0x5f0 [ext4]\n[130747.336567]  ext4_mpage_readpages+0x4a8/0x7a8 [ext4]\n[130747.336995]  ext4_readpage+0x54/0x100 [ext4]\n[130747.337359]  generic_file_buffered_read+0x410/0xae8\n[130747.337767]  generic_file_read_iter+0x114/0x190\n[130747.338152]  ext4_file_read_iter+0x5c/0x140 [ext4]\n[130747.338556]  __vfs_read+0x11c/0x188\n[130747.338851]  vfs_read+0x94/0x150\n[130747.339110]  ksys_read+0x74/0xf0\n\nThis patch's modification is according to Jan Kara's suggestion in:\nhttps://patchwork.ozlabs.org/project/linux-ext4/patch/20210428085158.3728201-1-yebin10@huawei.com/\n\"I see. Now I understand your patch. Honestly, seeing how fragile is trying\nto fix extent tree after split has failed in the middle, I would probably\ngo even further and make sure we fix the tree properly in case of ENOSPC\nand EDQUOT (those are easily user triggerable).  Anything else indicates a\nHW problem or fs corruption so I'd rather leave the extent tree as is and\ndon't try to fix it (which also means we will not create overlapping\nextents).\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47118",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npid: take a reference when initializing `cad_pid`\n\nDuring boot, kernel_init_freeable() initializes `cad_pid` to the init\ntask's struct pid.  Later on, we may change `cad_pid` via a sysctl, and\nwhen this happens proc_do_cad_pid() will increment the refcount on the\nnew pid via get_pid(), and will decrement the refcount on the old pid\nvia put_pid().  As we never called get_pid() when we initialized\n`cad_pid`, we decrement a reference we never incremented, can therefore\nfree the init task's struct pid early.  As there can be dangling\nreferences to the struct pid, we can later encounter a use-after-free\n(e.g.  when delivering signals).\n\nThis was spotted when fuzzing v5.13-rc3 with Syzkaller, but seems to\nhave been around since the conversion of `cad_pid` to struct pid in\ncommit 9ec52099e4b8 (\"[PATCH] replace cad_pid by a struct pid\") from the\npre-KASAN stone age of v2.6.19.\n\nFix this by getting a reference to the init task's struct pid when we\nassign it to `cad_pid`.\n\nFull KASAN splat below.\n\n   ==================================================================\n   BUG: KASAN: use-after-free in ns_of_pid include/linux/pid.h:153 [inline]\n   BUG: KASAN: use-after-free in task_active_pid_ns+0xc0/0xc8 kernel/pid.c:509\n   Read of size 4 at addr ffff23794dda0004 by task syz-executor.0/273\n\n   CPU: 1 PID: 273 Comm: syz-executor.0 Not tainted 5.12.0-00001-g9aef892b2d15 #1\n   Hardware name: linux,dummy-virt (DT)\n   Call trace:\n    ns_of_pid include/linux/pid.h:153 [inline]\n    task_active_pid_ns+0xc0/0xc8 kernel/pid.c:509\n    do_notify_parent+0x308/0xe60 kernel/signal.c:1950\n    exit_notify kernel/exit.c:682 [inline]\n    do_exit+0x2334/0x2bd0 kernel/exit.c:845\n    do_group_exit+0x108/0x2c8 kernel/exit.c:922\n    get_signal+0x4e4/0x2a88 kernel/signal.c:2781\n    do_signal arch/arm64/kernel/signal.c:882 [inline]\n    do_notify_resume+0x300/0x970 arch/arm64/kernel/signal.c:936\n    work_pending+0xc/0x2dc\n\n   Allocated by task 0:\n    slab_post_alloc_hook+0x50/0x5c0 mm/slab.h:516\n    slab_alloc_node mm/slub.c:2907 [inline]\n    slab_alloc mm/slub.c:2915 [inline]\n    kmem_cache_alloc+0x1f4/0x4c0 mm/slub.c:2920\n    alloc_pid+0xdc/0xc00 kernel/pid.c:180\n    copy_process+0x2794/0x5e18 kernel/fork.c:2129\n    kernel_clone+0x194/0x13c8 kernel/fork.c:2500\n    kernel_thread+0xd4/0x110 kernel/fork.c:2552\n    rest_init+0x44/0x4a0 init/main.c:687\n    arch_call_rest_init+0x1c/0x28\n    start_kernel+0x520/0x554 init/main.c:1064\n    0x0\n\n   Freed by task 270:\n    slab_free_hook mm/slub.c:1562 [inline]\n    slab_free_freelist_hook+0x98/0x260 mm/slub.c:1600\n    slab_free mm/slub.c:3161 [inline]\n    kmem_cache_free+0x224/0x8e0 mm/slub.c:3177\n    put_pid.part.4+0xe0/0x1a8 kernel/pid.c:114\n    put_pid+0x30/0x48 kernel/pid.c:109\n    proc_do_cad_pid+0x190/0x1b0 kernel/sysctl.c:1401\n    proc_sys_call_handler+0x338/0x4b0 fs/proc/proc_sysctl.c:591\n    proc_sys_write+0x34/0x48 fs/proc/proc_sysctl.c:617\n    call_write_iter include/linux/fs.h:1977 [inline]\n    new_sync_write+0x3ac/0x510 fs/read_write.c:518\n    vfs_write fs/read_write.c:605 [inline]\n    vfs_write+0x9c4/0x1018 fs/read_write.c:585\n    ksys_write+0x124/0x240 fs/read_write.c:658\n    __do_sys_write fs/read_write.c:670 [inline]\n    __se_sys_write fs/read_write.c:667 [inline]\n    __arm64_sys_write+0x78/0xb0 fs/read_write.c:667\n    __invoke_syscall arch/arm64/kernel/syscall.c:37 [inline]\n    invoke_syscall arch/arm64/kernel/syscall.c:49 [inline]\n    el0_svc_common.constprop.1+0x16c/0x388 arch/arm64/kernel/syscall.c:129\n    do_el0_svc+0xf8/0x150 arch/arm64/kernel/syscall.c:168\n    el0_svc+0x28/0x38 arch/arm64/kernel/entry-common.c:416\n    el0_sync_handler+0x134/0x180 arch/arm64/kernel/entry-common.c:432\n    el0_sync+0x154/0x180 arch/arm64/kernel/entry.S:701\n\n   The buggy address belongs to the object at ffff23794dda0000\n    which belongs to the cache pid of size 224\n   The buggy address is located 4 bytes inside of\n    224-byte region [ff\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47119",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix memory leak in ext4_fill_super\n\nBuffer head references must be released before calling kill_bdev();\notherwise the buffer head (and its page referenced by b_data) will not\nbe freed by kill_bdev, and subsequently that bh will be leaked.\n\nIf blocksizes differ, sb_set_blocksize() will kill current buffers and\npage cache by using kill_bdev(). And then super block will be reread\nagain but using correct blocksize this time. sb_set_blocksize() didn't\nfully free superblock page and buffer head, and being busy, they were\nnot freed and instead leaked.\n\nThis can easily be reproduced by calling an infinite loop of:\n\n  systemctl start \u003cext4_on_lvm\u003e.mount, and\n  systemctl stop \u003cext4_on_lvm\u003e.mount\n\n... since systemd creates a cgroup for each slice which it mounts, and\nthe bh leak get amplified by a dying memory cgroup that also never\ngets freed, and memory consumption is much more easily noticed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47131",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/tls: Fix use-after-free after the TLS device goes down and up\n\nWhen a netdev with active TLS offload goes down, tls_device_down is\ncalled to stop the offload and tear down the TLS context. However, the\nsocket stays alive, and it still points to the TLS context, which is now\ndeallocated. If a netdev goes up, while the connection is still active,\nand the data flow resumes after a number of TCP retransmissions, it will\nlead to a use-after-free of the TLS context.\n\nThis commit addresses this bug by keeping the context alive until its\nnormal destruction, and implements the necessary fallbacks, so that the\nconnection can resume in software (non-offloaded) kTLS mode.\n\nOn the TX side tls_sw_fallback is used to encrypt all packets. The RX\nside already has all the necessary fallbacks, because receiving\nnon-decrypted packets is supported. The thing needed on the RX side is\nto block resync requests, which are normally produced after receiving\nnon-decrypted packets.\n\nThe necessary synchronization is implemented for a graceful teardown:\nfirst the fallbacks are deployed, then the driver resources are released\n(it used to be possible to have a tls_dev_resync after tls_dev_del).\n\nA new flag called TLS_RX_DEV_DEGRADED is added to indicate the fallback\nmode. It's used to skip the RX resync logic completely, as it becomes\nuseless, and some objects may be released (for example, resync_async,\nwhich is allocated and freed by the driver).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxgb4: avoid accessing registers when clearing filters\n\nHardware register having the server TID base can contain\ninvalid values when adapter is in bad state (for example,\ndue to AER fatal error). Reading these invalid values in the\nregister can lead to out-of-bound memory access. So, fix\nby using the saved server TID base when clearing filters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Add NULL pointer checks when freeing irqs.\n\nWhen freeing notification blocks, we index priv-\u003emsix_vectors.\nIf we failed to allocate priv-\u003emsix_vectors (see abort_with_msix_vectors)\nthis could lead to a NULL pointer dereference if the driver is unloaded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix a use-after-free\n\nlooks like we forget to set ttm-\u003esg to NULL.\nHit panic below\n\n[ 1235.844104] general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b7b4b: 0000 [#1] SMP DEBUG_PAGEALLOC NOPTI\n[ 1235.989074] Call Trace:\n[ 1235.991751]  sg_free_table+0x17/0x20\n[ 1235.995667]  amdgpu_ttm_backend_unbind.cold+0x4d/0xf7 [amdgpu]\n[ 1236.002288]  amdgpu_ttm_backend_destroy+0x29/0x130 [amdgpu]\n[ 1236.008464]  ttm_tt_destroy+0x1e/0x30 [ttm]\n[ 1236.013066]  ttm_bo_cleanup_memtype_use+0x51/0xa0 [ttm]\n[ 1236.018783]  ttm_bo_release+0x262/0xa50 [ttm]\n[ 1236.023547]  ttm_bo_put+0x82/0xd0 [ttm]\n[ 1236.027766]  amdgpu_bo_unref+0x26/0x50 [amdgpu]\n[ 1236.032809]  amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu+0x7aa/0xd90 [amdgpu]\n[ 1236.040400]  kfd_ioctl_alloc_memory_of_gpu+0xe2/0x330 [amdgpu]\n[ 1236.046912]  kfd_ioctl+0x463/0x690 [amdgpu]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47143",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: remove device from smcd_dev_list after failed device_add()\n\nIf the device_add() for a smcd_dev fails, there's no cleanup step that\nrolls back the earlier list_add(). The device subsequently gets freed,\nand we end up with a corrupted list.\n\nAdd some error handling that removes the device from the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not BUG_ON in link_to_fixup_dir\n\nWhile doing error injection testing I got the following panic\n\n  kernel BUG at fs/btrfs/tree-log.c:1862!\n  invalid opcode: 0000 [#1] SMP NOPTI\n  CPU: 1 PID: 7836 Comm: mount Not tainted 5.13.0-rc1+ #305\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-2.fc32 04/01/2014\n  RIP: 0010:link_to_fixup_dir+0xd5/0xe0\n  RSP: 0018:ffffb5800180fa30 EFLAGS: 00010216\n  RAX: fffffffffffffffb RBX: 00000000fffffffb RCX: ffff8f595287faf0\n  RDX: ffffb5800180fa37 RSI: ffff8f5954978800 RDI: 0000000000000000\n  RBP: ffff8f5953af9450 R08: 0000000000000019 R09: 0000000000000001\n  R10: 000151f408682970 R11: 0000000120021001 R12: ffff8f5954978800\n  R13: ffff8f595287faf0 R14: ffff8f5953c77dd0 R15: 0000000000000065\n  FS:  00007fc5284c8c40(0000) GS:ffff8f59bbd00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fc5287f47c0 CR3: 000000011275e002 CR4: 0000000000370ee0\n  Call Trace:\n   replay_one_buffer+0x409/0x470\n   ? btree_read_extent_buffer_pages+0xd0/0x110\n   walk_up_log_tree+0x157/0x1e0\n   walk_log_tree+0xa6/0x1d0\n   btrfs_recover_log_trees+0x1da/0x360\n   ? replay_one_extent+0x7b0/0x7b0\n   open_ctree+0x1486/0x1720\n   btrfs_mount_root.cold+0x12/0xea\n   ? __kmalloc_track_caller+0x12f/0x240\n   legacy_get_tree+0x24/0x40\n   vfs_get_tree+0x22/0xb0\n   vfs_kern_mount.part.0+0x71/0xb0\n   btrfs_mount+0x10d/0x380\n   ? vfs_parse_fs_string+0x4d/0x90\n   legacy_get_tree+0x24/0x40\n   vfs_get_tree+0x22/0xb0\n   path_mount+0x433/0xa10\n   __x64_sys_mount+0xe3/0x120\n   do_syscall_64+0x3d/0x80\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nWe can get -EIO or any number of legitimate errors from\nbtrfs_search_slot(), panicing here is not the appropriate response.  The\nerror path for this code handles errors properly, simply return the\nerror.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47146",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmld: fix panic in mld_newpack()\n\nmld_newpack() doesn't allow to allocate high order page,\nonly order-0 allocation is allowed.\nIf headroom size is too large, a kernel panic could occur in skb_put().\n\nTest commands:\n    ip netns del A\n    ip netns del B\n    ip netns add A\n    ip netns add B\n    ip link add veth0 type veth peer name veth1\n    ip link set veth0 netns A\n    ip link set veth1 netns B\n\n    ip netns exec A ip link set lo up\n    ip netns exec A ip link set veth0 up\n    ip netns exec A ip -6 a a 2001:db8:0::1/64 dev veth0\n    ip netns exec B ip link set lo up\n    ip netns exec B ip link set veth1 up\n    ip netns exec B ip -6 a a 2001:db8:0::2/64 dev veth1\n    for i in {1..99}\n    do\n        let A=$i-1\n        ip netns exec A ip link add ip6gre$i type ip6gre \\\n\tlocal 2001:db8:$A::1 remote 2001:db8:$A::2 encaplimit 100\n        ip netns exec A ip -6 a a 2001:db8:$i::1/64 dev ip6gre$i\n        ip netns exec A ip link set ip6gre$i up\n\n        ip netns exec B ip link add ip6gre$i type ip6gre \\\n\tlocal 2001:db8:$A::2 remote 2001:db8:$A::1 encaplimit 100\n        ip netns exec B ip -6 a a 2001:db8:$i::2/64 dev ip6gre$i\n        ip netns exec B ip link set ip6gre$i up\n    done\n\nSplat looks like:\nkernel BUG at net/core/skbuff.c:110!\ninvalid opcode: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI\nCPU: 0 PID: 7 Comm: kworker/0:1 Not tainted 5.12.0+ #891\nWorkqueue: ipv6_addrconf addrconf_dad_work\nRIP: 0010:skb_panic+0x15d/0x15f\nCode: 92 fe 4c 8b 4c 24 10 53 8b 4d 70 45 89 e0 48 c7 c7 00 ae 79 83\n41 57 41 56 41 55 48 8b 54 24 a6 26 f9 ff \u003c0f\u003e 0b 48 8b 6c 24 20 89\n34 24 e8 4a 4e 92 fe 8b 34 24 48 c7 c1 20\nRSP: 0018:ffff88810091f820 EFLAGS: 00010282\nRAX: 0000000000000089 RBX: ffff8881086e9000 RCX: 0000000000000000\nRDX: 0000000000000089 RSI: 0000000000000008 RDI: ffffed1020123efb\nRBP: ffff888005f6eac0 R08: ffffed1022fc0031 R09: ffffed1022fc0031\nR10: ffff888117e00187 R11: ffffed1022fc0030 R12: 0000000000000028\nR13: ffff888008284eb0 R14: 0000000000000ed8 R15: 0000000000000ec0\nFS:  0000000000000000(0000) GS:ffff888117c00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f8b801c5640 CR3: 0000000033c2c006 CR4: 00000000003706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n ? ip6_mc_hdr.isra.26.constprop.46+0x12a/0x600\n ? ip6_mc_hdr.isra.26.constprop.46+0x12a/0x600\n skb_put.cold.104+0x22/0x22\n ip6_mc_hdr.isra.26.constprop.46+0x12a/0x600\n ? rcu_read_lock_sched_held+0x91/0xc0\n mld_newpack+0x398/0x8f0\n ? ip6_mc_hdr.isra.26.constprop.46+0x600/0x600\n ? lock_contended+0xc40/0xc40\n add_grhead.isra.33+0x280/0x380\n add_grec+0x5ca/0xff0\n ? mld_sendpack+0xf40/0xf40\n ? lock_downgrade+0x690/0x690\n mld_send_initial_cr.part.34+0xb9/0x180\n ipv6_mc_dad_complete+0x15d/0x1b0\n addrconf_dad_completed+0x8d2/0xbb0\n ? lock_downgrade+0x690/0x690\n ? addrconf_rs_timer+0x660/0x660\n ? addrconf_dad_work+0x73c/0x10e0\n addrconf_dad_work+0x73c/0x10e0\n\nAllowing high order page allocation could fix this problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47149",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fujitsu: fix potential null-ptr-deref\n\nIn fmvj18x_get_hwinfo(), if ioremap fails there will be NULL pointer\nderef. To fix this, check the return value of ioremap and return -1\nto the caller in case of failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47150",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fec: fix the potential memory leak in fec_enet_init()\n\nIf the memory allocated for cbd_base is failed, it should\nfree the memory allocated for the queues, otherwise it causes\nmemory leak.\n\nAnd if the memory allocated for the queues is failed, it can\nreturn error directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47153",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: i801: Don't generate an interrupt on bus reset\n\nNow that the i2c-i801 driver supports interrupts, setting the KILL bit\nin a attempt to recover from a timed out transaction triggers an\ninterrupt. Unfortunately, the interrupt handler (i801_isr) is not\nprepared for this situation and will try to process the interrupt as\nif it was signaling the end of a successful transaction. In the case\nof a block transaction, this can result in an out-of-range memory\naccess.\n\nThis condition was reproduced several times by syzbot:\nhttps://syzkaller.appspot.com/bug?extid=ed71512d469895b5b34e\nhttps://syzkaller.appspot.com/bug?extid=8c8dedc0ba9e03f6c79e\nhttps://syzkaller.appspot.com/bug?extid=c8ff0b6d6c73d81b610e\nhttps://syzkaller.appspot.com/bug?extid=33f6c360821c399d69eb\nhttps://syzkaller.appspot.com/bug?extid=be15dc0b1933f04b043a\nhttps://syzkaller.appspot.com/bug?extid=b4d3fd1dfd53e90afd79\n\nSo disable interrupts while trying to reset the bus. Interrupts will\nbe enabled again for the following transaction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47161",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-fsl-dspi: Fix a resource leak in an error handling path\n\n'dspi_request_dma()' should be undone by a 'dspi_release_dma()' call in the\nerror handling path of the probe function, as already done in the remove\nfunction",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: skb_linearize the head skb when reassembling msgs\n\nIt's not a good idea to append the frag skb to a skb's frag_list if\nthe frag_list already has skbs from elsewhere, such as this skb was\ncreated by pskb_copy() where the frag_list was cloned (all the skbs\nin it were skb_get'ed) and shared by multiple skbs.\n\nHowever, the new appended frag skb should have been only seen by the\ncurrent skb. Otherwise, it will cause use after free crashes as this\nappended frag skb are seen by multiple skbs but it only got skb_get\ncalled once.\n\nThe same thing happens with a skb updated by pskb_may_pull() with a\nskb_cloned skb. Li Shuang has reported quite a few crashes caused\nby this when doing testing over macvlan devices:\n\n  [] kernel BUG at net/core/skbuff.c:1970!\n  [] Call Trace:\n  []  skb_clone+0x4d/0xb0\n  []  macvlan_broadcast+0xd8/0x160 [macvlan]\n  []  macvlan_process_broadcast+0x148/0x150 [macvlan]\n  []  process_one_work+0x1a7/0x360\n  []  worker_thread+0x30/0x390\n\n  [] kernel BUG at mm/usercopy.c:102!\n  [] Call Trace:\n  []  __check_heap_object+0xd3/0x100\n  []  __check_object_size+0xff/0x16b\n  []  simple_copy_to_iter+0x1c/0x30\n  []  __skb_datagram_iter+0x7d/0x310\n  []  __skb_datagram_iter+0x2a5/0x310\n  []  skb_copy_datagram_iter+0x3b/0x90\n  []  tipc_recvmsg+0x14a/0x3a0 [tipc]\n  []  ____sys_recvmsg+0x91/0x150\n  []  ___sys_recvmsg+0x7b/0xc0\n\n  [] kernel BUG at mm/slub.c:305!\n  [] Call Trace:\n  []  \u003cIRQ\u003e\n  []  kmem_cache_free+0x3ff/0x400\n  []  __netif_receive_skb_core+0x12c/0xc40\n  []  ? kmem_cache_alloc+0x12e/0x270\n  []  netif_receive_skb_internal+0x3d/0xb0\n  []  ? get_rx_page_info+0x8e/0xa0 [be2net]\n  []  be_poll+0x6ef/0xd00 [be2net]\n  []  ? irq_exit+0x4f/0x100\n  []  net_rx_action+0x149/0x3b0\n\n  ...\n\nThis patch is to fix it by linearizing the head skb if it has frag_list\nset in tipc_buf_append(). Note that we choose to do this before calling\nskb_unshare(), as __skb_linearize() will avoid skb_copy(). Also, we can\nnot just drop the frag_list either as the early time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47165",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/meson: fix shutdown crash when component not probed\n\nWhen main component is not probed, by example when the dw-hdmi module is\nnot loaded yet or in probe defer, the following crash appears on shutdown:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000038\n...\npc : meson_drv_shutdown+0x24/0x50\nlr : platform_drv_shutdown+0x20/0x30\n...\nCall trace:\nmeson_drv_shutdown+0x24/0x50\nplatform_drv_shutdown+0x20/0x30\ndevice_shutdown+0x158/0x360\nkernel_restart_prepare+0x38/0x48\nkernel_restart+0x18/0x68\n__do_sys_reboot+0x224/0x250\n__arm64_sys_reboot+0x24/0x30\n...\n\nSimply check if the priv struct has been allocated before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47166",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Don't corrupt the value of pg_bytes_written in nfs_do_recoalesce()\n\nThe value of mirror-\u003epg_bytes_written should only be updated after a\nsuccessful attempt to flush out the requests on the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47167",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix an Oopsable condition in __nfs_pageio_add_request()\n\nEnsure that nfs_pageio_error_cleanup() resets the mirror array contents,\nso that the structure reflects the fact that it is now empty.\nAlso change the test in nfs_pageio_do_add_request() to be more robust by\nchecking whether or not the list is empty rather than relying on the\nvalue of pg_count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47168",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: fix an incorrect limit in filelayout_decode_layout()\n\nThe \"sizeof(struct nfs_fh)\" is two bytes too large and could lead to\nmemory corruption.  It should be NFS_MAXFHSIZE because that's the size\nof the -\u003edata[] buffer.\n\nI reversed the size of the arguments to put the variable on the left.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47169",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: rp2: use 'request_firmware' instead of 'request_firmware_nowait'\n\nIn 'rp2_probe', the driver registers 'rp2_uart_interrupt' then calls\n'rp2_fw_cb' through 'request_firmware_nowait'. In 'rp2_fw_cb', if the\nfirmware don't exists, function just return without initializing ports\nof 'rp2_card'. But now the interrupt handler function has been\nregistered, and when an interrupt comes, 'rp2_uart_interrupt' may access\nthose ports then causing NULL pointer dereference or other bugs.\n\nBecause the driver does some initialization work in 'rp2_fw_cb', in\norder to make the driver ready to handle interrupts, 'request_firmware'\nshould be used instead of asynchronous 'request_firmware_nowait'.\n\nThis report reveals it:\n\nINFO: trying to register non-static key.\nthe code is fine but needs lockdep annotation.\nturning off the locking correctness validator.\nCPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.19.177-gdba4159c14ef-dirty #45\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-\ngc9ba5276e321-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cIRQ\u003e\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xec/0x156 lib/dump_stack.c:118\n assign_lock_key kernel/locking/lockdep.c:727 [inline]\n register_lock_class+0x14e5/0x1ba0 kernel/locking/lockdep.c:753\n __lock_acquire+0x187/0x3750 kernel/locking/lockdep.c:3303\n lock_acquire+0x124/0x340 kernel/locking/lockdep.c:3907\n __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]\n _raw_spin_lock+0x32/0x50 kernel/locking/spinlock.c:144\n spin_lock include/linux/spinlock.h:329 [inline]\n rp2_ch_interrupt drivers/tty/serial/rp2.c:466 [inline]\n rp2_asic_interrupt.isra.9+0x15d/0x990 drivers/tty/serial/rp2.c:493\n rp2_uart_interrupt+0x49/0xe0 drivers/tty/serial/rp2.c:504\n __handle_irq_event_percpu+0xfb/0x770 kernel/irq/handle.c:149\n handle_irq_event_percpu+0x79/0x150 kernel/irq/handle.c:189\n handle_irq_event+0xac/0x140 kernel/irq/handle.c:206\n handle_fasteoi_irq+0x232/0x5c0 kernel/irq/chip.c:725\n generic_handle_irq_desc include/linux/irqdesc.h:155 [inline]\n handle_irq+0x230/0x3a0 arch/x86/kernel/irq_64.c:87\n do_IRQ+0xa7/0x1e0 arch/x86/kernel/irq.c:247\n common_interrupt+0xf/0xf arch/x86/entry/entry_64.S:670\n \u003c/IRQ\u003e\nRIP: 0010:native_safe_halt+0x28/0x30 arch/x86/include/asm/irqflags.h:61\nCode: 00 00 55 be 04 00 00 00 48 c7 c7 00 c2 2f 8c 48 89 e5 e8 fb 31 e7 f8\n8b 05 75 af 8d 03 85 c0 7e 07 0f 00 2d 8a 61 65 00 fb f4 \u003c5d\u003e c3 90 90 90\n90 90 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 41\nRSP: 0018:ffff88806b71fcc8 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffde\nRAX: 0000000000000000 RBX: ffffffff8bde7e48 RCX: ffffffff88a21285\nRDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffff8c2fc200\nRBP: ffff88806b71fcc8 R08: fffffbfff185f840 R09: fffffbfff185f840\nR10: 0000000000000001 R11: fffffbfff185f840 R12: 0000000000000002\nR13: ffffffff8bea18a0 R14: 0000000000000000 R15: 0000000000000000\n arch_safe_halt arch/x86/include/asm/paravirt.h:94 [inline]\n default_idle+0x6f/0x360 arch/x86/kernel/process.c:557\n arch_cpu_idle+0xf/0x20 arch/x86/kernel/process.c:548\n default_idle_call+0x3b/0x60 kernel/sched/idle.c:93\n cpuidle_idle_call kernel/sched/idle.c:153 [inline]\n do_idle+0x2ab/0x3c0 kernel/sched/idle.c:263\n cpu_startup_entry+0xcb/0xe0 kernel/sched/idle.c:369\n start_secondary+0x3b8/0x4e0 arch/x86/kernel/smpboot.c:271\n secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:243\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000010\nPGD 8000000056d27067 P4D 8000000056d27067 PUD 56d28067 PMD 0\nOops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.19.177-gdba4159c14ef-dirty #45\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-\ngc9ba5276e321-prebuilt.qemu.org 04/01/2014\nRIP: 0010:readl arch/x86/include/asm/io.h:59 [inline]\nRIP: 0010:rp2_ch_interrupt drivers/tty/serial/rp2.c:472 [inline]\nRIP: 0010:rp2_asic_interrupt.isra.9+0x181/0x990 drivers/tty/serial/rp2.c:\n493\nCo\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47171",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: fix memory leak in smsc75xx_bind\n\nSyzbot reported memory leak in smsc75xx_bind().\nThe problem was is non-freed memory in case of\nerrors after memory allocation.\n\nbacktrace:\n  [\u003cffffffff84245b62\u003e] kmalloc include/linux/slab.h:556 [inline]\n  [\u003cffffffff84245b62\u003e] kzalloc include/linux/slab.h:686 [inline]\n  [\u003cffffffff84245b62\u003e] smsc75xx_bind+0x7a/0x334 drivers/net/usb/smsc75xx.c:1460\n  [\u003cffffffff82b5b2e6\u003e] usbnet_probe+0x3b6/0xc30 drivers/net/usb/usbnet.c:1728",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47173",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc/uss720: fix memory leak in uss720_probe\n\nuss720_probe forgets to decrease the refcount of usbdev in uss720_probe.\nFix this by decreasing the refcount of usbdev by usb_put_dev.\n\nBUG: memory leak\nunreferenced object 0xffff888101113800 (size 2048):\n  comm \"kworker/0:1\", pid 7, jiffies 4294956777 (age 28.870s)\n  hex dump (first 32 bytes):\n    ff ff ff ff 31 00 00 00 00 00 00 00 00 00 00 00  ....1...........\n    00 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00  ................\n  backtrace:\n    [\u003cffffffff82b8e822\u003e] kmalloc include/linux/slab.h:554 [inline]\n    [\u003cffffffff82b8e822\u003e] kzalloc include/linux/slab.h:684 [inline]\n    [\u003cffffffff82b8e822\u003e] usb_alloc_dev+0x32/0x450 drivers/usb/core/usb.c:582\n    [\u003cffffffff82b98441\u003e] hub_port_connect drivers/usb/core/hub.c:5129 [inline]\n    [\u003cffffffff82b98441\u003e] hub_port_connect_change drivers/usb/core/hub.c:5363 [inline]\n    [\u003cffffffff82b98441\u003e] port_event drivers/usb/core/hub.c:5509 [inline]\n    [\u003cffffffff82b98441\u003e] hub_event+0x1171/0x20c0 drivers/usb/core/hub.c:5591\n    [\u003cffffffff81259229\u003e] process_one_work+0x2c9/0x600 kernel/workqueue.c:2275\n    [\u003cffffffff81259b19\u003e] worker_thread+0x59/0x5d0 kernel/workqueue.c:2421\n    [\u003cffffffff81261228\u003e] kthread+0x178/0x1b0 kernel/kthread.c:292\n    [\u003cffffffff8100227f\u003e] ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47177",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix sysfs leak in alloc_iommu()\n\niommu_device_sysfs_add() is called before, so is has to be cleaned on subsequent\nerrors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47179",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Fix a NULL pointer dereference in pnfs_mark_matching_lsegs_return()\n\nCommit de144ff4234f changes _pnfs_return_layout() to call\npnfs_mark_matching_lsegs_return() passing NULL as the struct\npnfs_layout_range argument. Unfortunately,\npnfs_mark_matching_lsegs_return() doesn't check if we have a value here\nbefore dereferencing it, causing an oops.\n\nI'm able to hit this crash consistently when running connectathon basic\ntests on NFS v4.1/v4.2 against Ontap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47180",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: nci: fix memory leak in nci_allocate_device\n\nnfcmrvl_disconnect fails to free the hci_dev field in struct nci_dev.\nFix this by freeing hci_dev in nci_free_device.\n\nBUG: memory leak\nunreferenced object 0xffff888111ea6800 (size 1024):\n  comm \"kworker/1:0\", pid 19, jiffies 4294942308 (age 13.580s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 60 fd 0c 81 88 ff ff  .........`......\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c000000004bc25d43\u003e] kmalloc include/linux/slab.h:552 [inline]\n    [\u003c000000004bc25d43\u003e] kzalloc include/linux/slab.h:682 [inline]\n    [\u003c000000004bc25d43\u003e] nci_hci_allocate+0x21/0xd0 net/nfc/nci/hci.c:784\n    [\u003c00000000c59cff92\u003e] nci_allocate_device net/nfc/nci/core.c:1170 [inline]\n    [\u003c00000000c59cff92\u003e] nci_allocate_device+0x10b/0x160 net/nfc/nci/core.c:1132\n    [\u003c00000000006e0a8e\u003e] nfcmrvl_nci_register_dev+0x10a/0x1c0 drivers/nfc/nfcmrvl/main.c:153\n    [\u003c000000004da1b57e\u003e] nfcmrvl_probe+0x223/0x290 drivers/nfc/nfcmrvl/usb.c:345\n    [\u003c00000000d506aed9\u003e] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396\n    [\u003c00000000bc632c92\u003e] really_probe+0x159/0x4a0 drivers/base/dd.c:554\n    [\u003c00000000f5009125\u003e] driver_probe_device+0x84/0x100 drivers/base/dd.c:740\n    [\u003c000000000ce658ca\u003e] __device_attach_driver+0xee/0x110 drivers/base/dd.c:846\n    [\u003c000000007067d05f\u003e] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:431\n    [\u003c00000000f8e13372\u003e] __device_attach+0x122/0x250 drivers/base/dd.c:914\n    [\u003c000000009cf68860\u003e] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:491\n    [\u003c00000000359c965a\u003e] device_add+0x5be/0xc30 drivers/base/core.c:3109\n    [\u003c00000000086e4bd3\u003e] usb_set_configuration+0x9d9/0xb90 drivers/usb/core/message.c:2164\n    [\u003c00000000ca036872\u003e] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238\n    [\u003c00000000d40d36f6\u003e] usb_probe_device+0x5c/0x140 drivers/usb/core/driver.c:293\n    [\u003c00000000bc632c92\u003e] really_probe+0x159/0x4a0 drivers/base/dd.c:554",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47181",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: musb: tusb6010: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47182",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix scsi_mode_sense() buffer length handling\n\nSeveral problems exist with scsi_mode_sense() buffer length handling:\n\n 1) The allocation length field of the MODE SENSE(10) command is 16-bits,\n    occupying bytes 7 and 8 of the CDB. With this command, access to mode\n    pages larger than 255 bytes is thus possible. However, the CDB\n    allocation length field is set by assigning len to byte 8 only, thus\n    truncating buffer length larger than 255.\n\n 2) If scsi_mode_sense() is called with len smaller than 8 with\n    sdev-\u003euse_10_for_ms set, or smaller than 4 otherwise, the buffer length\n    is increased to 8 and 4 respectively, and the buffer is zero filled\n    with these increased values, thus corrupting the memory following the\n    buffer.\n\nFix these 2 problems by using put_unaligned_be16() to set the allocation\nlength field of MODE SENSE(10) CDB and by returning an error when len is\ntoo small.\n\nFurthermore, if len is larger than 255B, always try MODE SENSE(10) first,\neven if the device driver did not set sdev-\u003euse_10_for_ms. In case of\ninvalid opcode error for MODE SENSE(10), access to mode pages larger than\n255 bytes are not retried using MODE SENSE(6). To avoid buffer length\noverflows for the MODE_SENSE(10) case, check that len is smaller than 65535\nbytes.\n\nWhile at it, also fix the folowing:\n\n * Use get_unaligned_be16() to retrieve the mode data length and block\n   descriptor length fields of the mode sense reply header instead of using\n   an open coded calculation.\n\n * Fix the kdoc dbd argument explanation: the DBD bit stands for Disable\n   Block Descriptor, which is the opposite of what the dbd argument\n   description was.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47183",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix link down processing to address NULL pointer dereference\n\nIf an FC link down transition while PLOGIs are outstanding to fabric well\nknown addresses, outstanding ABTS requests may result in a NULL pointer\ndereference. Driver unload requests may hang with repeated \"2878\" log\nmessages.\n\nThe Link down processing results in ABTS requests for outstanding ELS\nrequests. The Abort WQEs are sent for the ELSs before the driver had set\nthe link state to down. Thus the driver is sending the Abort with the\nexpectation that an ABTS will be sent on the wire. The Abort request is\nstalled waiting for the link to come up. In some conditions the driver may\nauto-complete the ELSs thus if the link does come up, the Abort completions\nmay reference an invalid structure.\n\nFix by ensuring that Abort set the flag to avoid link traffic if issued due\nto conditions where the link failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47184",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix NULL ptr dereference on VSI filter sync\n\nRemove the reason of null pointer dereference in sync VSI filters.\nAdded new I40E_VSI_RELEASING flag to signalize deleting and releasing\nof VSI resources to sync this thread with sync filters subtask.\nWithout this patch it is possible to start update the VSI filter list\nafter VSI is removed, that's causing a kernel oops.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47185",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: tty_buffer: Fix the softlockup issue in flush_to_ldisc\n\nWhen running ltp testcase(ltp/testcases/kernel/pty/pty04.c) with arm64, there is a soft lockup,\nwhich look like this one:\n\n  Workqueue: events_unbound flush_to_ldisc\n  Call trace:\n   dump_backtrace+0x0/0x1ec\n   show_stack+0x24/0x30\n   dump_stack+0xd0/0x128\n   panic+0x15c/0x374\n   watchdog_timer_fn+0x2b8/0x304\n   __run_hrtimer+0x88/0x2c0\n   __hrtimer_run_queues+0xa4/0x120\n   hrtimer_interrupt+0xfc/0x270\n   arch_timer_handler_phys+0x40/0x50\n   handle_percpu_devid_irq+0x94/0x220\n   __handle_domain_irq+0x88/0xf0\n   gic_handle_irq+0x84/0xfc\n   el1_irq+0xc8/0x180\n   slip_unesc+0x80/0x214 [slip]\n   tty_ldisc_receive_buf+0x64/0x80\n   tty_port_default_receive_buf+0x50/0x90\n   flush_to_ldisc+0xbc/0x110\n   process_one_work+0x1d4/0x4b0\n   worker_thread+0x180/0x430\n   kthread+0x11c/0x120\n\nIn the testcase pty04, The first process call the write syscall to send\ndata to the pty master. At the same time, the workqueue will do the\nflush_to_ldisc to pop data in a loop until there is no more data left.\nWhen the sender and workqueue running in different core, the sender sends\ndata fastly in full time which will result in workqueue doing work in loop\nfor a long time and occuring softlockup in flush_to_ldisc with kernel\nconfigured without preempt. So I add need_resched check and cond_resched\nin the flush_to_ldisc loop to avoid it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47188",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Improve SCSI abort handling\n\nThe following has been observed on a test setup:\n\nWARNING: CPU: 4 PID: 250 at drivers/scsi/ufs/ufshcd.c:2737 ufshcd_queuecommand+0x468/0x65c\nCall trace:\n ufshcd_queuecommand+0x468/0x65c\n scsi_send_eh_cmnd+0x224/0x6a0\n scsi_eh_test_devices+0x248/0x418\n scsi_eh_ready_devs+0xc34/0xe58\n scsi_error_handler+0x204/0x80c\n kthread+0x150/0x1b4\n ret_from_fork+0x10/0x30\n\nThat warning is triggered by the following statement:\n\n\tWARN_ON(lrbp-\u003ecmd);\n\nFix this warning by clearing lrbp-\u003ecmd from the abort handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47189",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix memory ordering between normal and ordered work functions\n\nOrdered work functions aren't guaranteed to be handled by the same thread\nwhich executed the normal work functions. The only way execution between\nnormal/ordered functions is synchronized is via the WORK_DONE_BIT,\nunfortunately the used bitops don't guarantee any ordering whatsoever.\n\nThis manifested as seemingly inexplicable crashes on ARM64, where\nasync_chunk::inode is seen as non-null in async_cow_submit which causes\nsubmit_compressed_extents to be called and crash occurs because\nasync_chunk::inode suddenly became NULL. The call trace was similar to:\n\n    pc : submit_compressed_extents+0x38/0x3d0\n    lr : async_cow_submit+0x50/0xd0\n    sp : ffff800015d4bc20\n\n    \u003cregisters omitted for brevity\u003e\n\n    Call trace:\n     submit_compressed_extents+0x38/0x3d0\n     async_cow_submit+0x50/0xd0\n     run_ordered_work+0xc8/0x280\n     btrfs_work_helper+0x98/0x250\n     process_one_work+0x1f0/0x4ac\n     worker_thread+0x188/0x504\n     kthread+0x110/0x114\n     ret_from_fork+0x10/0x18\n\nFix this by adding respective barrier calls which ensure that all\naccesses preceding setting of WORK_DONE_BIT are strictly ordered before\nsetting the flag. At the same time add a read barrier after reading of\nWORK_DONE_BIT in run_ordered_work which ensures all subsequent loads\nwould be strictly ordered after reading the bit. This in turn ensures\nare all accesses before WORK_DONE_BIT are going to be strictly ordered\nbefore any access that can occur in ordered_func.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47191",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix out-of-bound read in resp_readcap16()\n\nThe following warning was observed running syzkaller:\n\n[ 3813.830724] sg_write: data in/out 65466/242 bytes for SCSI command 0x9e-- guessing data in;\n[ 3813.830724]    program syz-executor not setting count and/or reply_len properly\n[ 3813.836956] ==================================================================\n[ 3813.839465] BUG: KASAN: stack-out-of-bounds in sg_copy_buffer+0x157/0x1e0\n[ 3813.841773] Read of size 4096 at addr ffff8883cf80f540 by task syz-executor/1549\n[ 3813.846612] Call Trace:\n[ 3813.846995]  dump_stack+0x108/0x15f\n[ 3813.847524]  print_address_description+0xa5/0x372\n[ 3813.848243]  kasan_report.cold+0x236/0x2a8\n[ 3813.849439]  check_memory_region+0x240/0x270\n[ 3813.850094]  memcpy+0x30/0x80\n[ 3813.850553]  sg_copy_buffer+0x157/0x1e0\n[ 3813.853032]  sg_copy_from_buffer+0x13/0x20\n[ 3813.853660]  fill_from_dev_buffer+0x135/0x370\n[ 3813.854329]  resp_readcap16+0x1ac/0x280\n[ 3813.856917]  schedule_resp+0x41f/0x1630\n[ 3813.858203]  scsi_debug_queuecommand+0xb32/0x17e0\n[ 3813.862699]  scsi_dispatch_cmd+0x330/0x950\n[ 3813.863329]  scsi_request_fn+0xd8e/0x1710\n[ 3813.863946]  __blk_run_queue+0x10b/0x230\n[ 3813.864544]  blk_execute_rq_nowait+0x1d8/0x400\n[ 3813.865220]  sg_common_write.isra.0+0xe61/0x2420\n[ 3813.871637]  sg_write+0x6c8/0xef0\n[ 3813.878853]  __vfs_write+0xe4/0x800\n[ 3813.883487]  vfs_write+0x17b/0x530\n[ 3813.884008]  ksys_write+0x103/0x270\n[ 3813.886268]  __x64_sys_write+0x77/0xc0\n[ 3813.886841]  do_syscall_64+0x106/0x360\n[ 3813.887415]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nThis issue can be reproduced with the following syzkaller log:\n\nr0 = openat(0xffffffffffffff9c, \u0026(0x7f0000000040)='./file0\\x00', 0x26e1, 0x0)\nr1 = syz_open_procfs(0xffffffffffffffff, \u0026(0x7f0000000000)='fd/3\\x00')\nopen_by_handle_at(r1, \u0026(0x7f00000003c0)=ANY=[@ANYRESHEX], 0x602000)\nr2 = syz_open_dev$sg(\u0026(0x7f0000000000), 0x0, 0x40782)\nwrite$binfmt_aout(r2, \u0026(0x7f0000000340)=ANY=[@ANYBLOB=\"00000000deff000000000000000000000000000000000000000000000000000047f007af9e107a41ec395f1bded7be24277a1501ff6196a83366f4e6362bc0ff2b247f68a972989b094b2da4fb3607fcf611a22dd04310d28c75039d\"], 0x126)\n\nIn resp_readcap16() we get \"int alloc_len\" value -1104926854, and then pass\nthe huge arr_len to fill_from_dev_buffer(), but arr is only 32 bytes. This\nleads to OOB in sg_copy_buffer().\n\nTo solve this issue, define alloc_len as u32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47193",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Fix memory leak during rmmod\n\nDriver failed to release all memory allocated. This would lead to memory\nleak during driver removal.\n\nProperly free memory when the module is removed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47198",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix use-after-free in lpfc_unreg_rpi() routine\n\nAn error is detected with the following report when unloading the driver:\n  \"KASAN: use-after-free in lpfc_unreg_rpi+0x1b1b\"\n\nThe NLP_REG_LOGIN_SEND nlp_flag is set in lpfc_reg_fab_ctrl_node(), but the\nflag is not cleared upon completion of the login.\n\nThis allows a second call to lpfc_unreg_rpi() to proceed with nlp_rpi set\nto LPFC_RPI_ALLOW_ERROR.  This results in a use after free access when used\nas an rpi_ids array index.\n\nFix by clearing the NLP_REG_LOGIN_SEND nlp_flag in\nlpfc_mbx_cmpl_fc_reg_login().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47201",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: free q_vectors before queues in iavf_disable_vf\n\niavf_free_queues() clears adapter-\u003enum_active_queues, which\niavf_free_q_vectors() relies on, so swap the order of these two function\ncalls in iavf_disable_vf(). This resolves a panic encountered when the\ninterface is disabled and then later brought up again after PF\ncommunication is restored.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47202",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: Fix NULL pointer dereferences in of_thermal_ functions\n\nof_parse_thermal_zones() parses the thermal-zones node and registers a\nthermal_zone device for each subnode. However, if a thermal zone is\nconsuming a thermal sensor and that thermal sensor device hasn't probed\nyet, an attempt to set trip_point_*_temp for that thermal zone device\ncan cause a NULL pointer dereference. Fix it.\n\n console:/sys/class/thermal/thermal_zone87 # echo 120000 \u003e trip_point_0_temp\n ...\n Unable to handle kernel NULL pointer dereference at virtual address 0000000000000020\n ...\n Call trace:\n  of_thermal_set_trip_temp+0x40/0xc4\n  trip_point_temp_store+0xc0/0x1dc\n  dev_attr_store+0x38/0x88\n  sysfs_kf_write+0x64/0xc0\n  kernfs_fop_write_iter+0x108/0x1d0\n  vfs_write+0x2f4/0x368\n  ksys_write+0x7c/0xec\n  __arm64_sys_write+0x20/0x30\n  el0_svc_common.llvm.7279915941325364641+0xbc/0x1bc\n  do_el0_svc+0x28/0xa0\n  el0_svc+0x14/0x24\n  el0_sync_handler+0x88/0xec\n  el0_sync+0x1c0/0x200\n\nWhile at it, fix the possible NULL pointer dereference in other\nfunctions as well: of_thermal_get_temp(), of_thermal_set_emul_temp(),\nof_thermal_get_trend().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47203",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix list_add() corruption in lpfc_drain_txq()\n\nWhen parsing the txq list in lpfc_drain_txq(), the driver attempts to pass\nthe requests to the adapter. If such an attempt fails, a local \"fail_msg\"\nstring is set and a log message output.  The job is then added to a\ncompletions list for cancellation.\n\nProcessing of any further jobs from the txq list continues, but since\n\"fail_msg\" remains set, jobs are added to the completions list regardless\nof whether a wqe was passed to the adapter.  If successfully added to\ntxcmplq, jobs are added to both lists resulting in list corruption.\n\nFix by clearing the fail_msg string after adding a job to the completions\nlist. This stops the subsequent jobs from being added to the completions\nlist unless they had an appropriate failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47204",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dpaa2-eth: fix use-after-free in dpaa2_eth_remove\n\nAccess to netdev after free_netdev() will cause use-after-free bug.\nMove debug log before free_netdev() call to avoid it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47205",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: sunxi-ng: Unregister clocks/resets when unbinding\n\nCurrently, unbinding a CCU driver unmaps the device's MMIO region, while\nleaving its clocks/resets and their providers registered. This can cause\na page fault later when some clock operation tries to perform MMIO. Fix\nthis by separating the CCU initialization from the memory allocation,\nand then using a devres callback to unregister the clocks and resets.\n\nThis also fixes a memory leak of the `struct ccu_reset`, and uses the\ncorrect owner (the specific platform driver) for the clocks and resets.\n\nEarly OF clock providers are never unregistered, and limited error\nhandling is possible, so they are mostly unchanged. The error reporting\nis made more consistent by moving the message inside of_sunxi_ccu_probe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47206",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: host: ohci-tmio: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47207",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: gus: fix null pointer dereference on pointer block\n\nThe pointer block return from snd_gf1_dma_next_block could be\nnull, so there is a potential null pointer dereference issue.\nFix this by adding a null check before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47211",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: fix null pointer dereference on pointer cs_desc\n\nThe pointer cs_desc return from snd_usb_find_clock_source could\nbe null, so there is a potential null pointer dereference issue.\nFix this by adding a null check before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47216",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: advansys: Fix kernel pointer leak\n\nPointers should be printed with %p or %px rather than cast to 'unsigned\nlong' and printed with %lx.\n\nChange %lx to %p to print the hashed pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47217",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/hyperv: Fix NULL deref in set_hv_tscchange_cb() if Hyper-V setup fails\n\nCheck for a valid hv_vp_index array prior to derefencing hv_vp_index when\nsetting Hyper-V's TSC change callback.  If Hyper-V setup failed in\nhyperv_init(), the kernel will still report that it's running under\nHyper-V, but will have silently disabled nearly all functionality.\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000010\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] SMP\n  CPU: 4 PID: 1 Comm: swapper/0 Not tainted 5.15.0-rc2+ #75\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n  RIP: 0010:set_hv_tscchange_cb+0x15/0xa0\n  Code: \u003c8b\u003e 04 82 8b 15 12 17 85 01 48 c1 e0 20 48 0d ee 00 01 00 f6 c6 08\n  ...\n  Call Trace:\n   kvm_arch_init+0x17c/0x280\n   kvm_init+0x31/0x330\n   vmx_init+0xba/0x13a\n   do_one_initcall+0x41/0x1c0\n   kernel_init_freeable+0x1f2/0x23b\n   kernel_init+0x16/0x120\n   ret_from_fork+0x22/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47220",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47229",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: aardvark: Fix kernel panic during PIO transfer\n\nTrying to start a new PIO transfer by writing value 0 in PIO_START register\nwhen previous transfer has not yet completed (which is indicated by value 1\nin PIO_START) causes an External Abort on CPU, which results in kernel\npanic:\n\n    SError Interrupt on CPU0, code 0xbf000002 -- SError\n    Kernel panic - not syncing: Asynchronous SError Interrupt\n\nTo prevent kernel panic, it is required to reject a new PIO transfer when\nprevious one has not finished yet.\n\nIf previous PIO transfer is not finished yet, the kernel may issue a new\nPIO request only if the previous PIO transfer timed out.\n\nIn the past the root cause of this issue was incorrectly identified (as it\noften happens during link retraining or after link down event) and special\nhack was implemented in Trusted Firmware to catch all SError events in EL3,\nto ignore errors with code 0xbf000002 and not forwarding any other errors\nto kernel and instead throw panic from EL3 Trusted Firmware handler.\n\nLinks to discussion and patches about this issue:\nhttps://git.trustedfirmware.org/TF-A/trusted-firmware-a.git/commit/?id=3c7dcdac5c50\nhttps://lore.kernel.org/linux-pci/20190316161243.29517-1-repk@triplefau.lt/\nhttps://lore.kernel.org/linux-pci/971be151d24312cc533989a64bd454b4@www.loen.fr/\nhttps://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/1541\n\nBut the real cause was the fact that during link retraining or after link\ndown event the PIO transfer may take longer time, up to the 1.44s until it\ntimes out. This increased probability that a new PIO transfer would be\nissued by kernel while previous one has not finished yet.\n\nAfter applying this change into the kernel, it is possible to revert the\nmentioned TF-A hack and SError events do not have to be caught in TF-A EL3.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47231",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: mcba_usb: fix memory leak in mcba_usb\n\nSyzbot reported memory leak in SocketCAN driver for Microchip CAN BUS\nAnalyzer Tool. The problem was in unfreed usb_coherent.\n\nIn mcba_usb_start() 20 coherent buffers are allocated and there is\nnothing, that frees them:\n\n1) In callback function the urb is resubmitted and that's all\n2) In disconnect function urbs are simply killed, but URB_FREE_BUFFER\n   is not set (see mcba_usb_start) and this flag cannot be used with\n   coherent buffers.\n\nFail log:\n| [ 1354.053291][ T8413] mcba_usb 1-1:0.0 can0: device disconnected\n| [ 1367.059384][ T8420] kmemleak: 20 new suspected memory leaks (see /sys/kernel/debug/kmem)\n\nSo, all allocated buffers should be freed with usb_free_coherent()\nexplicitly\n\nNOTE:\nThe same pattern for allocating and freeing coherent buffers\nis used in drivers/net/can/usb/kvaser_usb/kvaser_usb_core.c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47235",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: fix potential use-after-free in ec_bhf_remove\n\nstatic void ec_bhf_remove(struct pci_dev *dev)\n{\n...\n\tstruct ec_bhf_priv *priv = netdev_priv(net_dev);\n\n\tunregister_netdev(net_dev);\n\tfree_netdev(net_dev);\n\n\tpci_iounmap(dev, priv-\u003edma_io);\n\tpci_iounmap(dev, priv-\u003eio);\n...\n}\n\npriv is netdev private data, but it is used\nafter free_netdev(). It can cause use-after-free when accessing priv\npointer. So, fix it by moving free_netdev() after pci_iounmap()\ncalls.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47236",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: cdc_eem: fix tx fixup skb leak\n\nwhen usbnet transmit a skb, eem fixup it in eem_tx_fixup(),\nif skb_copy_expand() failed, it return NULL,\nusbnet_start_xmit() will have no chance to free original skb.\n\nfix it by free orginal skb in eem_tx_fixup() first,\nthen check skb clone status, if failed, return NULL to usbnet.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47237",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hamradio: fix memory leak in mkiss_close\n\nMy local syzbot instance hit memory leak in\nmkiss_open()[1]. The problem was in missing\nfree_netdev() in mkiss_close().\n\nIn mkiss_open() netdevice is allocated and then\nregistered, but in mkiss_close() netdevice was\nonly unregistered, but not freed.\n\nFail log:\n\nBUG: memory leak\nunreferenced object 0xffff8880281ba000 (size 4096):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    61 78 30 00 00 00 00 00 00 00 00 00 00 00 00 00  ax0.............\n    00 27 fa 2a 80 88 ff ff 00 00 00 00 00 00 00 00  .'.*............\n  backtrace:\n    [\u003cffffffff81a27201\u003e] kvmalloc_node+0x61/0xf0\n    [\u003cffffffff8706e7e8\u003e] alloc_netdev_mqs+0x98/0xe80\n    [\u003cffffffff84e64192\u003e] mkiss_open+0xb2/0x6f0 [1]\n    [\u003cffffffff842355db\u003e] tty_ldisc_open+0x9b/0x110\n    [\u003cffffffff84236488\u003e] tty_set_ldisc+0x2e8/0x670\n    [\u003cffffffff8421f7f3\u003e] tty_ioctl+0xda3/0x1440\n    [\u003cffffffff81c9f273\u003e] __x64_sys_ioctl+0x193/0x200\n    [\u003cffffffff8911263a\u003e] do_syscall_64+0x3a/0xb0\n    [\u003cffffffff89200068\u003e] entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nBUG: memory leak\nunreferenced object 0xffff8880141a9a00 (size 96):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    e8 a2 1b 28 80 88 ff ff e8 a2 1b 28 80 88 ff ff  ...(.......(....\n    98 92 9c aa b0 40 02 00 00 00 00 00 00 00 00 00  .....@..........\n  backtrace:\n    [\u003cffffffff8709f68b\u003e] __hw_addr_create_ex+0x5b/0x310\n    [\u003cffffffff8709fb38\u003e] __hw_addr_add_ex+0x1f8/0x2b0\n    [\u003cffffffff870a0c7b\u003e] dev_addr_init+0x10b/0x1f0\n    [\u003cffffffff8706e88b\u003e] alloc_netdev_mqs+0x13b/0xe80\n    [\u003cffffffff84e64192\u003e] mkiss_open+0xb2/0x6f0 [1]\n    [\u003cffffffff842355db\u003e] tty_ldisc_open+0x9b/0x110\n    [\u003cffffffff84236488\u003e] tty_set_ldisc+0x2e8/0x670\n    [\u003cffffffff8421f7f3\u003e] tty_ioctl+0xda3/0x1440\n    [\u003cffffffff81c9f273\u003e] __x64_sys_ioctl+0x193/0x200\n    [\u003cffffffff8911263a\u003e] do_syscall_64+0x3a/0xb0\n    [\u003cffffffff89200068\u003e] entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nBUG: memory leak\nunreferenced object 0xffff8880219bfc00 (size 512):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    00 a0 1b 28 80 88 ff ff 80 8f b1 8d ff ff ff ff  ...(............\n    80 8f b1 8d ff ff ff ff 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003cffffffff81a27201\u003e] kvmalloc_node+0x61/0xf0\n    [\u003cffffffff8706eec7\u003e] alloc_netdev_mqs+0x777/0xe80\n    [\u003cffffffff84e64192\u003e] mkiss_open+0xb2/0x6f0 [1]\n    [\u003cffffffff842355db\u003e] tty_ldisc_open+0x9b/0x110\n    [\u003cffffffff84236488\u003e] tty_set_ldisc+0x2e8/0x670\n    [\u003cffffffff8421f7f3\u003e] tty_ioctl+0xda3/0x1440\n    [\u003cffffffff81c9f273\u003e] __x64_sys_ioctl+0x193/0x200\n    [\u003cffffffff8911263a\u003e] do_syscall_64+0x3a/0xb0\n    [\u003cffffffff89200068\u003e] entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nBUG: memory leak\nunreferenced object 0xffff888029b2b200 (size 256):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003cffffffff81a27201\u003e] kvmalloc_node+0x61/0xf0\n    [\u003cffffffff8706f062\u003e] alloc_netdev_mqs+0x912/0xe80\n    [\u003cffffffff84e64192\u003e] mkiss_open+0xb2/0x6f0 [1]\n    [\u003cffffffff842355db\u003e] tty_ldisc_open+0x9b/0x110\n    [\u003cffffffff84236488\u003e] tty_set_ldisc+0x2e8/0x670\n    [\u003cffffffff8421f7f3\u003e] tty_ioctl+0xda3/0x1440\n    [\u003cffffffff81c9f273\u003e] __x64_sys_ioctl+0x193/0x200\n    [\u003cffffffff8911263a\u003e] do_syscall_64+0x3a/0xb0\n    [\u003cffffffff89200068\u003e] entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47238",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv4: fix memory leak in ip_mc_add1_src\n\nBUG: memory leak\nunreferenced object 0xffff888101bc4c00 (size 32):\n  comm \"syz-executor527\", pid 360, jiffies 4294807421 (age 19.329s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n    01 00 00 00 00 00 00 00 ac 14 14 bb 00 00 02 00 ................\n  backtrace:\n    [\u003c00000000f17c5244\u003e] kmalloc include/linux/slab.h:558 [inline]\n    [\u003c00000000f17c5244\u003e] kzalloc include/linux/slab.h:688 [inline]\n    [\u003c00000000f17c5244\u003e] ip_mc_add1_src net/ipv4/igmp.c:1971 [inline]\n    [\u003c00000000f17c5244\u003e] ip_mc_add_src+0x95f/0xdb0 net/ipv4/igmp.c:2095\n    [\u003c000000001cb99709\u003e] ip_mc_source+0x84c/0xea0 net/ipv4/igmp.c:2416\n    [\u003c0000000052cf19ed\u003e] do_ip_setsockopt net/ipv4/ip_sockglue.c:1294 [inline]\n    [\u003c0000000052cf19ed\u003e] ip_setsockopt+0x114b/0x30c0 net/ipv4/ip_sockglue.c:1423\n    [\u003c00000000477edfbc\u003e] raw_setsockopt+0x13d/0x170 net/ipv4/raw.c:857\n    [\u003c00000000e75ca9bb\u003e] __sys_setsockopt+0x158/0x270 net/socket.c:2117\n    [\u003c00000000bdb993a8\u003e] __do_sys_setsockopt net/socket.c:2128 [inline]\n    [\u003c00000000bdb993a8\u003e] __se_sys_setsockopt net/socket.c:2125 [inline]\n    [\u003c00000000bdb993a8\u003e] __x64_sys_setsockopt+0xba/0x150 net/socket.c:2125\n    [\u003c000000006a1ffdbd\u003e] do_syscall_64+0x40/0x80 arch/x86/entry/common.c:47\n    [\u003c00000000b11467c4\u003e] entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nIn commit 24803f38a5c0 (\"igmp: do not remove igmp souce list info when set\nlink down\"), the ip_mc_clear_src() in ip_mc_destroy_dev() was removed,\nbecause it was also called in igmpv3_clear_delrec().\n\nRough callgraph:\n\ninetdev_destroy\n-\u003e ip_mc_destroy_dev\n     -\u003e igmpv3_clear_delrec\n        -\u003e ip_mc_clear_src\n-\u003e RCU_INIT_POINTER(dev-\u003eip_ptr, NULL)\n\nHowever, ip_mc_clear_src() called in igmpv3_clear_delrec() doesn't\nrelease in_dev-\u003emc_list-\u003esources. And RCU_INIT_POINTER() assigns the\nNULL to dev-\u003eip_ptr. As a result, in_dev cannot be obtained through\ninetdev_by_index() and then in_dev-\u003emc_list-\u003esources cannot be released\nby ip_mc_del1_src() in the sock_close. Rough call sequence goes like:\n\nsock_close\n-\u003e __sock_release\n   -\u003e inet_release\n      -\u003e ip_mc_drop_socket\n         -\u003e inetdev_by_index\n         -\u003e ip_mc_leave_src\n            -\u003e ip_mc_del_src\n               -\u003e ip_mc_del1_src\n\nSo we still need to call ip_mc_clear_src() in ip_mc_destroy_dev() to free\nin_dev-\u003emc_list-\u003esources.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47245",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: synproxy: Fix out of bounds when parsing TCP options\n\nThe TCP option parser in synproxy (synproxy_parse_options) could read\none byte out of bounds. When the length is 1, the execution flow gets\ninto the loop, reads one byte of the opcode, and if the opcode is\nneither TCPOPT_EOL nor TCPOPT_NOP, it reads one more byte, which exceeds\nthe length of 1.\n\nThis fix is inspired by commit 9609dad263f8 (\"ipv4: tcp_input: fix stack\nout of bounds when parsing TCP options.\").\n\nv2 changes:\n\nAdded an early return when length \u003c 0 to avoid calling\nskb_header_pointer with negative length.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47246",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix page reclaim for dead peer hairpin\n\nWhen adding a hairpin flow, a firmware-side send queue is created for\nthe peer net device, which claims some host memory pages for its\ninternal ring buffer. If the peer net device is removed/unbound before\nthe hairpin flow is deleted, then the send queue is not destroyed which\nleads to a stack trace on pci device remove:\n\n[ 748.005230] mlx5_core 0000:08:00.2: wait_func:1094:(pid 12985): MANAGE_PAGES(0x108) timeout. Will cause a leak of a command resource\n[ 748.005231] mlx5_core 0000:08:00.2: reclaim_pages:514:(pid 12985): failed reclaiming pages: err -110\n[ 748.001835] mlx5_core 0000:08:00.2: mlx5_reclaim_root_pages:653:(pid 12985): failed reclaiming pages (-110) for func id 0x0\n[ 748.002171] ------------[ cut here ]------------\n[ 748.001177] FW pages counter is 4 after reclaiming all pages\n[ 748.001186] WARNING: CPU: 1 PID: 12985 at drivers/net/ethernet/mellanox/mlx5/core/pagealloc.c:685 mlx5_reclaim_startup_pages+0x34b/0x460 [mlx5_core]                      [  +0.002771] Modules linked in: cls_flower mlx5_ib mlx5_core ptp pps_core act_mirred sch_ingress openvswitch nsh xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 br_netfilter rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi rdma_cm ib_umad ib_ipoib iw_cm ib_cm ib_uverbs ib_core overlay fuse [last unloaded: pps_core]\n[ 748.007225] CPU: 1 PID: 12985 Comm: tee Not tainted 5.12.0+ #1\n[ 748.001376] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n[ 748.002315] RIP: 0010:mlx5_reclaim_startup_pages+0x34b/0x460 [mlx5_core]\n[ 748.001679] Code: 28 00 00 00 0f 85 22 01 00 00 48 81 c4 b0 00 00 00 31 c0 5b 5d 41 5c 41 5d 41 5e 41 5f c3 48 c7 c7 40 cc 19 a1 e8 9f 71 0e e2 \u003c0f\u003e 0b e9 30 ff ff ff 48 c7 c7 a0 cc 19 a1 e8 8c 71 0e e2 0f 0b e9\n[ 748.003781] RSP: 0018:ffff88815220faf8 EFLAGS: 00010286\n[ 748.001149] RAX: 0000000000000000 RBX: ffff8881b4900280 RCX: 0000000000000000\n[ 748.001445] RDX: 0000000000000027 RSI: 0000000000000004 RDI: ffffed102a441f51\n[ 748.001614] RBP: 00000000000032b9 R08: 0000000000000001 R09: ffffed1054a15ee8\n[ 748.001446] R10: ffff8882a50af73b R11: ffffed1054a15ee7 R12: fffffbfff07c1e30\n[ 748.001447] R13: dffffc0000000000 R14: ffff8881b492cba8 R15: 0000000000000000\n[ 748.001429] FS:  00007f58bd08b580(0000) GS:ffff8882a5080000(0000) knlGS:0000000000000000\n[ 748.001695] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 748.001309] CR2: 000055a026351740 CR3: 00000001d3b48006 CR4: 0000000000370ea0\n[ 748.001506] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 748.001483] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 748.001654] Call Trace:\n[ 748.000576]  ? mlx5_satisfy_startup_pages+0x290/0x290 [mlx5_core]\n[ 748.001416]  ? mlx5_cmd_teardown_hca+0xa2/0xd0 [mlx5_core]\n[ 748.001354]  ? mlx5_cmd_init_hca+0x280/0x280 [mlx5_core]\n[ 748.001203]  mlx5_function_teardown+0x30/0x60 [mlx5_core]\n[ 748.001275]  mlx5_uninit_one+0xa7/0xc0 [mlx5_core]\n[ 748.001200]  remove_one+0x5f/0xc0 [mlx5_core]\n[ 748.001075]  pci_device_remove+0x9f/0x1d0\n[ 748.000833]  device_release_driver_internal+0x1e0/0x490\n[ 748.001207]  unbind_store+0x19f/0x200\n[ 748.000942]  ? sysfs_file_ops+0x170/0x170\n[ 748.001000]  kernfs_fop_write_iter+0x2bc/0x450\n[ 748.000970]  new_sync_write+0x373/0x610\n[ 748.001124]  ? new_sync_read+0x600/0x600\n[ 748.001057]  ? lock_acquire+0x4d6/0x700\n[ 748.000908]  ? lockdep_hardirqs_on_prepare+0x400/0x400\n[ 748.001126]  ? fd_install+0x1c9/0x4d0\n[ 748.000951]  vfs_write+0x4d0/0x800\n[ 748.000804]  ksys_write+0xf9/0x1d0\n[ 748.000868]  ? __x64_sys_read+0xb0/0xb0\n[ 748.000811]  ? filp_open+0x50/0x50\n[ 748.000919]  ? syscall_enter_from_user_mode+0x1d/0x50\n[ 748.001223]  do_syscall_64+0x3f/0x80\n[ 748.000892]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n[ 748.00\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47248",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudp: fix race between close() and udp_abort()\n\nKaustubh reported and diagnosed a panic in udp_lib_lookup().\nThe root cause is udp_abort() racing with close(). Both\nracing functions acquire the socket lock, but udp{v6}_destroy_sock()\nrelease it before performing destructive actions.\n\nWe can't easily extend the socket lock scope to avoid the race,\ninstead use the SOCK_DEAD flag to prevent udp_abort from doing\nany action when the critical race happens.\n\nDiagnosed-and-tested-by: Kaustubh Pandey \u003ckapandey@codeaurora.org\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47249",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: rds: fix memory leak in rds_recvmsg\n\nSyzbot reported memory leak in rds. The problem\nwas in unputted refcount in case of error.\n\nint rds_recvmsg(struct socket *sock, struct msghdr *msg, size_t size,\n\t\tint msg_flags)\n{\n...\n\n\tif (!rds_next_incoming(rs, \u0026inc)) {\n\t\t...\n\t}\n\nAfter this \"if\" inc refcount incremented and\n\n\tif (rds_cmsg_recv(inc, msg, rs)) {\n\t\tret = -EFAULT;\n\t\tgoto out;\n\t}\n...\nout:\n\treturn ret;\n}\n\nin case of rds_cmsg_recv() fail the refcount won't be\ndecremented. And it's easy to see from ftrace log, that\nrds_inc_addref() don't have rds_inc_put() pair in\nrds_recvmsg() after rds_cmsg_recv()\n\n 1)               |  rds_recvmsg() {\n 1)   3.721 us    |    rds_inc_addref();\n 1)   3.853 us    |    rds_message_inc_copy_to_user();\n 1) + 10.395 us   |    rds_cmsg_recv();\n 1) + 34.260 us   |  }",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47250",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv4: fix memory leak in netlbl_cipsov4_add_std\n\nReported by syzkaller:\nBUG: memory leak\nunreferenced object 0xffff888105df7000 (size 64):\ncomm \"syz-executor842\", pid 360, jiffies 4294824824 (age 22.546s)\nhex dump (first 32 bytes):\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\nbacktrace:\n[\u003c00000000e67ed558\u003e] kmalloc include/linux/slab.h:590 [inline]\n[\u003c00000000e67ed558\u003e] kzalloc include/linux/slab.h:720 [inline]\n[\u003c00000000e67ed558\u003e] netlbl_cipsov4_add_std net/netlabel/netlabel_cipso_v4.c:145 [inline]\n[\u003c00000000e67ed558\u003e] netlbl_cipsov4_add+0x390/0x2340 net/netlabel/netlabel_cipso_v4.c:416\n[\u003c0000000006040154\u003e] genl_family_rcv_msg_doit.isra.0+0x20e/0x320 net/netlink/genetlink.c:739\n[\u003c00000000204d7a1c\u003e] genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]\n[\u003c00000000204d7a1c\u003e] genl_rcv_msg+0x2bf/0x4f0 net/netlink/genetlink.c:800\n[\u003c00000000c0d6a995\u003e] netlink_rcv_skb+0x134/0x3d0 net/netlink/af_netlink.c:2504\n[\u003c00000000d78b9d2c\u003e] genl_rcv+0x24/0x40 net/netlink/genetlink.c:811\n[\u003c000000009733081b\u003e] netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]\n[\u003c000000009733081b\u003e] netlink_unicast+0x4a0/0x6a0 net/netlink/af_netlink.c:1340\n[\u003c00000000d5fd43b8\u003e] netlink_sendmsg+0x789/0xc70 net/netlink/af_netlink.c:1929\n[\u003c000000000a2d1e40\u003e] sock_sendmsg_nosec net/socket.c:654 [inline]\n[\u003c000000000a2d1e40\u003e] sock_sendmsg+0x139/0x170 net/socket.c:674\n[\u003c00000000321d1969\u003e] ____sys_sendmsg+0x658/0x7d0 net/socket.c:2350\n[\u003c00000000964e16bc\u003e] ___sys_sendmsg+0xf8/0x170 net/socket.c:2404\n[\u003c000000001615e288\u003e] __sys_sendmsg+0xd3/0x190 net/socket.c:2433\n[\u003c000000004ee8b6a5\u003e] do_syscall_64+0x37/0x90 arch/x86/entry/common.c:47\n[\u003c00000000171c7cee\u003e] entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThe memory of doi_def-\u003emap.std pointing is allocated in\nnetlbl_cipsov4_add_std, but no place has freed it. It should be\nfreed in cipso_v4_doi_free which frees the cipso DOI resource.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47252",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid WARN_ON timing related checks\n\nThe soft/batadv interface for a queued OGM can be changed during the time\nthe OGM was queued for transmission and when the OGM is actually\ntransmitted by the worker.\n\nBut WARN_ON must be used to denote kernel bugs and not to print simple\nwarnings. A warning can simply be printed using pr_warn.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47254",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix use-after-free in gfs2_glock_shrink_scan\n\nThe GLF_LRU flag is checked under lru_lock in gfs2_glock_remove_from_lru() to\nremove the glock from the lru list in __gfs2_glock_put().\n\nOn the shrink scan path, the same flag is cleared under lru_lock but because\nof cond_resched_lock(\u0026lru_lock) in gfs2_dispose_glock_lru(), progress on the\nput side can be made without deleting the glock from the lru list.\n\nKeep GLF_LRU across the race window opened by cond_resched_lock(\u0026lru_lock) to\nensure correct behavior on both sides - clear GLF_LRU after list_del under\nlru_lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47258",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix error handling of scsi_host_alloc()\n\nAfter device is initialized via device_initialize(), or its name is set via\ndev_set_name(), the device has to be freed via put_device().  Otherwise\ndevice name will be leaked because it is allocated dynamically in\ndev_set_name().\n\nFix the leak by replacing kfree() with put_device(). Since\nscsi_host_dev_release() properly handles IDA and kthread removal, remove\nspecial-casing these from the error handling as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47260",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix a potential NULL dereference in nfs_get_client()\n\nNone of the callers are expecting NULL returns from nfs_get_client() so\nthis code will lead to an Oops.  It's better to return an error\npointer.  I expect that this is dead code so hopefully no one is\naffected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47261",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/mlx5: Fix initializing CQ fragments buffer\n\nThe function init_cq_frag_buf() can be called to initialize the current CQ\nfragments buffer cq-\u003ebuf, or the temporary cq-\u003eresize_buf that is filled\nduring CQ resize operation.\n\nHowever, the offending commit started to use function get_cqe() for\ngetting the CQEs, the issue with this change is that get_cqe() always\nreturns CQEs from cq-\u003ebuf, which leads us to initialize the wrong buffer,\nand in case of enlarging the CQ we try to access elements beyond the size\nof the current cq-\u003ebuf and eventually hit a kernel panic.\n\n [exception RIP: init_cq_frag_buf+103]\n  [ffff9f799ddcbcd8] mlx5_ib_resize_cq at ffffffffc0835d60 [mlx5_ib]\n  [ffff9f799ddcbdb0] ib_resize_cq at ffffffffc05270df [ib_core]\n  [ffff9f799ddcbdc0] llt_rdma_setup_qp at ffffffffc0a6a712 [llt]\n  [ffff9f799ddcbe10] llt_rdma_cc_event_action at ffffffffc0a6b411 [llt]\n  [ffff9f799ddcbe98] llt_rdma_client_conn_thread at ffffffffc0a6bb75 [llt]\n  [ffff9f799ddcbec8] kthread at ffffffffa66c5da1\n  [ffff9f799ddcbf50] ret_from_fork_nospec_begin at ffffffffa6d95ddd\n\nFix it by getting the needed CQE by calling mlx5_frag_buf_get_wqe() that\ntakes the correct source buffer as a parameter.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47265",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA: Verify port when creating flow rule\n\nValidate port value provided by the user and with that remove no longer\nneeded validation by the driver.  The missing check in the mlx5_ib driver\ncould cause to the below oops.\n\nCall trace:\n  _create_flow_rule+0x2d4/0xf28 [mlx5_ib]\n  mlx5_ib_create_flow+0x2d0/0x5b0 [mlx5_ib]\n  ib_uverbs_ex_create_flow+0x4cc/0x624 [ib_uverbs]\n  ib_uverbs_handler_UVERBS_METHOD_INVOKE_WRITE+0xd4/0x150 [ib_uverbs]\n  ib_uverbs_cmd_verbs.isra.7+0xb28/0xc50 [ib_uverbs]\n  ib_uverbs_ioctl+0x158/0x1d0 [ib_uverbs]\n  do_vfs_ioctl+0xd0/0xaf0\n  ksys_ioctl+0x84/0xb4\n  __arm64_sys_ioctl+0x28/0xc4\n  el0_svc_common.constprop.3+0xa4/0x254\n  el0_svc_handler+0x84/0xa0\n  el0_svc+0x10/0x26c\n Code: b9401260 f9615681 51000400 8b001c20 (f9403c1a)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47267",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: fix various gadget panics on 10gbps cabling\n\nusb_assign_descriptors() is called with 5 parameters,\nthe last 4 of which are the usb_descriptor_header for:\n  full-speed (USB1.1 - 12Mbps [including USB1.0 low-speed @ 1.5Mbps),\n  high-speed (USB2.0 - 480Mbps),\n  super-speed (USB3.0 - 5Gbps),\n  super-speed-plus (USB3.1 - 10Gbps).\n\nThe differences between full/high/super-speed descriptors are usually\nsubstantial (due to changes in the maximum usb block size from 64 to 512\nto 1024 bytes and other differences in the specs), while the difference\nbetween 5 and 10Gbps descriptors may be as little as nothing\n(in many cases the same tuning is simply good enough).\n\nHowever if a gadget driver calls usb_assign_descriptors() with\na NULL descriptor for super-speed-plus and is then used on a max 10gbps\nconfiguration, the kernel will crash with a null pointer dereference,\nwhen a 10gbps capable device port + cable + host port combination shows up.\n(This wouldn't happen if the gadget max-speed was set to 5gbps, but\nit of course defaults to the maximum, and there's no real reason to\nartificially limit it)\n\nThe fix is to simply use the 5gbps descriptor as the 10gbps descriptor,\nif a 10gbps descriptor wasn't provided.\n\nObviously this won't fix the problem if the 5gbps descriptor is also\nNULL, but such cases can't be so trivially solved (and any such gadgets\nare unlikely to be used with USB3 ports any way).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47269",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: ep0: fix NULL pointer exception\n\nThere is no validation of the index from dwc3_wIndex_to_dep() and we might\nbe referring a non-existing ep and trigger a NULL pointer exception. In\ncertain configurations we might use fewer eps and the index might wrongly\nindicate a larger ep index than existing.\n\nBy adding this validation from the patch we can actually report a wrong\nindex back to the caller.\n\nIn our usecase we are using a composite device on an older kernel, but\nupstream might use this fix also. Unfortunately, I cannot describe the\nhardware for others to reproduce the issue as it is a proprietary\nimplementation.\n\n[   82.958261] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a4\n[   82.966891] Mem abort info:\n[   82.969663]   ESR = 0x96000006\n[   82.972703]   Exception class = DABT (current EL), IL = 32 bits\n[   82.978603]   SET = 0, FnV = 0\n[   82.981642]   EA = 0, S1PTW = 0\n[   82.984765] Data abort info:\n[   82.987631]   ISV = 0, ISS = 0x00000006\n[   82.991449]   CM = 0, WnR = 0\n[   82.994409] user pgtable: 4k pages, 39-bit VAs, pgdp = 00000000c6210ccc\n[   83.000999] [00000000000000a4] pgd=0000000053aa5003, pud=0000000053aa5003, pmd=0000000000000000\n[   83.009685] Internal error: Oops: 96000006 [#1] PREEMPT SMP\n[   83.026433] Process irq/62-dwc3 (pid: 303, stack limit = 0x000000003985154c)\n[   83.033470] CPU: 0 PID: 303 Comm: irq/62-dwc3 Not tainted 4.19.124 #1\n[   83.044836] pstate: 60000085 (nZCv daIf -PAN -UAO)\n[   83.049628] pc : dwc3_ep0_handle_feature+0x414/0x43c\n[   83.054558] lr : dwc3_ep0_interrupt+0x3b4/0xc94\n\n...\n\n[   83.141788] Call trace:\n[   83.144227]  dwc3_ep0_handle_feature+0x414/0x43c\n[   83.148823]  dwc3_ep0_interrupt+0x3b4/0xc94\n[   83.181546] ---[ end trace aac6b5267d84c32f ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47270",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: fix various gadgets null ptr deref on 10gbps cabling.\n\nThis avoids a null pointer dereference in\nf_{ecm,eem,hid,loopback,printer,rndis,serial,sourcesink,subset,tcm}\nby simply reusing the 5gbps config for 10gbps.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47274",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Correct the length check which causes memory corruption\n\nWe've suffered from severe kernel crashes due to memory corruption on\nour production environment, like,\n\nCall Trace:\n[1640542.554277] general protection fault: 0000 [#1] SMP PTI\n[1640542.554856] CPU: 17 PID: 26996 Comm: python Kdump: loaded Tainted:G\n[1640542.556629] RIP: 0010:kmem_cache_alloc+0x90/0x190\n[1640542.559074] RSP: 0018:ffffb16faa597df8 EFLAGS: 00010286\n[1640542.559587] RAX: 0000000000000000 RBX: 0000000000400200 RCX:\n0000000006e931bf\n[1640542.560323] RDX: 0000000006e931be RSI: 0000000000400200 RDI:\nffff9a45ff004300\n[1640542.560996] RBP: 0000000000400200 R08: 0000000000023420 R09:\n0000000000000000\n[1640542.561670] R10: 0000000000000000 R11: 0000000000000000 R12:\nffffffff9a20608d\n[1640542.562366] R13: ffff9a45ff004300 R14: ffff9a45ff004300 R15:\n696c662f65636976\n[1640542.563128] FS:  00007f45d7c6f740(0000) GS:ffff9a45ff840000(0000)\nknlGS:0000000000000000\n[1640542.563937] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[1640542.564557] CR2: 00007f45d71311a0 CR3: 000000189d63e004 CR4:\n00000000003606e0\n[1640542.565279] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[1640542.566069] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[1640542.566742] Call Trace:\n[1640542.567009]  anon_vma_clone+0x5d/0x170\n[1640542.567417]  __split_vma+0x91/0x1a0\n[1640542.567777]  do_munmap+0x2c6/0x320\n[1640542.568128]  vm_munmap+0x54/0x70\n[1640542.569990]  __x64_sys_munmap+0x22/0x30\n[1640542.572005]  do_syscall_64+0x5b/0x1b0\n[1640542.573724]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[1640542.575642] RIP: 0033:0x7f45d6e61e27\n\nJames Wang has reproduced it stably on the latest 4.19 LTS.\nAfter some debugging, we finally proved that it's due to ftrace\nbuffer out-of-bound access using a debug tool as follows:\n[   86.775200] BUG: Out-of-bounds write at addr 0xffff88aefe8b7000\n[   86.780806]  no_context+0xdf/0x3c0\n[   86.784327]  __do_page_fault+0x252/0x470\n[   86.788367]  do_page_fault+0x32/0x140\n[   86.792145]  page_fault+0x1e/0x30\n[   86.795576]  strncpy_from_unsafe+0x66/0xb0\n[   86.799789]  fetch_memory_string+0x25/0x40\n[   86.804002]  fetch_deref_string+0x51/0x60\n[   86.808134]  kprobe_trace_func+0x32d/0x3a0\n[   86.812347]  kprobe_dispatcher+0x45/0x50\n[   86.816385]  kprobe_ftrace_handler+0x90/0xf0\n[   86.820779]  ftrace_ops_assist_func+0xa1/0x140\n[   86.825340]  0xffffffffc00750bf\n[   86.828603]  do_sys_open+0x5/0x1f0\n[   86.832124]  do_syscall_64+0x5b/0x1b0\n[   86.835900]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\ncommit b220c049d519 (\"tracing: Check length before giving out\nthe filter buffer\") adds length check to protect trace data\noverflow introduced in 0fc1b09ff1ff, seems that this fix can't prevent\noverflow entirely, the length check should also take the sizeof\nentry-\u003earray[0] into account, since this array[0] is filled the\nlength of trace data and occupy addtional space and risk overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47275",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: avoid oversized read request in cache missing code path\n\nIn the cache missing code path of cached device, if a proper location\nfrom the internal B+ tree is matched for a cache miss range, function\ncached_dev_cache_miss() will be called in cache_lookup_fn() in the\nfollowing code block,\n[code block 1]\n  526         unsigned int sectors = KEY_INODE(k) == s-\u003eiop.inode\n  527                 ? min_t(uint64_t, INT_MAX,\n  528                         KEY_START(k) - bio-\u003ebi_iter.bi_sector)\n  529                 : INT_MAX;\n  530         int ret = s-\u003ed-\u003ecache_miss(b, s, bio, sectors);\n\nHere s-\u003ed-\u003ecache_miss() is the call backfunction pointer initialized as\ncached_dev_cache_miss(), the last parameter 'sectors' is an important\nhint to calculate the size of read request to backing device of the\nmissing cache data.\n\nCurrent calculation in above code block may generate oversized value of\n'sectors', which consequently may trigger 2 different potential kernel\npanics by BUG() or BUG_ON() as listed below,\n\n1) BUG_ON() inside bch_btree_insert_key(),\n[code block 2]\n   886         BUG_ON(b-\u003eops-\u003eis_extents \u0026\u0026 !KEY_SIZE(k));\n2) BUG() inside biovec_slab(),\n[code block 3]\n   51         default:\n   52                 BUG();\n   53                 return NULL;\n\nAll the above panics are original from cached_dev_cache_miss() by the\noversized parameter 'sectors'.\n\nInside cached_dev_cache_miss(), parameter 'sectors' is used to calculate\nthe size of data read from backing device for the cache missing. This\nsize is stored in s-\u003einsert_bio_sectors by the following lines of code,\n[code block 4]\n  909    s-\u003einsert_bio_sectors = min(sectors, bio_sectors(bio) + reada);\n\nThen the actual key inserting to the internal B+ tree is generated and\nstored in s-\u003eiop.replace_key by the following lines of code,\n[code block 5]\n  911   s-\u003eiop.replace_key = KEY(s-\u003eiop.inode,\n  912                    bio-\u003ebi_iter.bi_sector + s-\u003einsert_bio_sectors,\n  913                    s-\u003einsert_bio_sectors);\nThe oversized parameter 'sectors' may trigger panic 1) by BUG_ON() from\nthe above code block.\n\nAnd the bio sending to backing device for the missing data is allocated\nwith hint from s-\u003einsert_bio_sectors by the following lines of code,\n[code block 6]\n  926    cache_bio = bio_alloc_bioset(GFP_NOWAIT,\n  927                 DIV_ROUND_UP(s-\u003einsert_bio_sectors, PAGE_SECTORS),\n  928                 \u0026dc-\u003edisk.bio_split);\nThe oversized parameter 'sectors' may trigger panic 2) by BUG() from the\nagove code block.\n\nNow let me explain how the panics happen with the oversized 'sectors'.\nIn code block 5, replace_key is generated by macro KEY(). From the\ndefinition of macro KEY(),\n[code block 7]\n  71 #define KEY(inode, offset, size)                                  \\\n  72 ((struct bkey) {                                                  \\\n  73      .high = (1ULL \u003c\u003c 63) | ((__u64) (size) \u003c\u003c 20) | (inode),     \\\n  74      .low = (offset)                                              \\\n  75 })\n\nHere 'size' is 16bits width embedded in 64bits member 'high' of struct\nbkey. But in code block 1, if \"KEY_START(k) - bio-\u003ebi_iter.bi_sector\" is\nvery probably to be larger than (1\u003c\u003c16) - 1, which makes the bkey size\ncalculation in code block 5 is overflowed. In one bug report the value\nof parameter 'sectors' is 131072 (= 1 \u003c\u003c 17), the overflowed 'sectors'\nresults the overflowed s-\u003einsert_bio_sectors in code block 4, then makes\nsize field of s-\u003eiop.replace_key to be 0 in code block 5. Then the 0-\nsized s-\u003eiop.replace_key is inserted into the internal B+ tree as cache\nmissing check key (a special key to detect and avoid a racing between\nnormal write request and cache missing read request) as,\n[code block 8]\n  915   ret = bch_btree_insert_check_key(b, \u0026s-\u003eop, \u0026s-\u003eiop.replace_key);\n\nThen the 0-sized s-\u003eiop.replace_key as 3rd parameter triggers the bkey\nsize check BUG_ON() in code block 2, and causes the kernel panic 1).\n\nAnother ke\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47276",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Do not blindly read the ip address in ftrace_bug()\n\nIt was reported that a bug on arm64 caused a bad ip address to be used for\nupdating into a nop in ftrace_init(), but the error path (rightfully)\nreturned -EINVAL and not -EFAULT, as the bug caused more than one error to\noccur. But because -EINVAL was returned, the ftrace_bug() tried to report\nwhat was at the location of the ip address, and read it directly. This\ncaused the machine to panic, as the ip was not pointing to a valid memory\naddress.\n\nInstead, read the ip address with copy_from_kernel_nofault() to safely\naccess the memory, and if it faults, report that the address faulted,\notherwise report what was in that location.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47277",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkvm: avoid speculation-based attacks from out-of-range memslot accesses\n\nKVM's mechanism for accessing guest memory translates a guest physical\naddress (gpa) to a host virtual address using the right-shifted gpa\n(also known as gfn) and a struct kvm_memory_slot.  The translation is\nperformed in __gfn_to_hva_memslot using the following formula:\n\n      hva = slot-\u003euserspace_addr + (gfn - slot-\u003ebase_gfn) * PAGE_SIZE\n\nIt is expected that gfn falls within the boundaries of the guest's\nphysical memory.  However, a guest can access invalid physical addresses\nin such a way that the gfn is invalid.\n\n__gfn_to_hva_memslot is called from kvm_vcpu_gfn_to_hva_prot, which first\nretrieves a memslot through __gfn_to_memslot.  While __gfn_to_memslot\ndoes check that the gfn falls within the boundaries of the guest's\nphysical memory or not, a CPU can speculate the result of the check and\ncontinue execution speculatively using an illegal gfn. The speculation\ncan result in calculating an out-of-bounds hva.  If the resulting host\nvirtual address is used to load another guest physical address, this\nis effectively a Spectre gadget consisting of two consecutive reads,\nthe second of which is data dependent on the first.\n\nRight now it's not clear if there are any cases in which this is\nexploitable.  One interesting case was reported by the original author\nof this patch, and involves visiting guest page tables on x86.  Right\nnow these are not vulnerable because the hva read goes through get_user(),\nwhich contains an LFENCE speculation barrier.  However, there are\npatches in progress for x86 uaccess.h to mask kernel addresses instead of\nusing LFENCE; once these land, a guest could use speculation to read\nfrom the VMM's ring 3 address space.  Other architectures such as ARM\nalready use the address masking method, and would be susceptible to\nthis same kind of data-dependent access gadgets.  Therefore, this patch\nproactively protects from these attacks by masking out-of-bounds gfns\nin __gfn_to_hva_memslot, which blocks speculation of invalid hvas.\n\nSean Christopherson noted that this patch does not cover\nkvm_read_guest_offset_cached.  This however is limited to a few bytes\npast the end of the cache, and therefore it is unlikely to be useful in\nthe context of building a chain of data dependent accesses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47280",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Fix use-after-free read in drm_getunique()\n\nThere is a time-of-check-to-time-of-use error in drm_getunique() due\nto retrieving file_priv-\u003emaster prior to locking the device's master\nmutex.\n\nAn example can be seen in the crash report of the use-after-free error\nfound by Syzbot:\nhttps://syzkaller.appspot.com/bug?id=148d2f1dfac64af52ffd27b661981a540724f803\n\nIn the report, the master pointer was used after being freed. This is\nbecause another process had acquired the device's master mutex in\ndrm_setmaster_ioctl(), then overwrote fpriv-\u003emaster in\ndrm_new_set_master(). The old value of fpriv-\u003emaster was subsequently\nfreed before the mutex was unlocked.\n\nTo fix this, we lock the device's master mutex before retrieving the\npointer from from fpriv-\u003emaster. This patch passes the Syzbot\nreproducer test.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47281",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: seq: Fix race of snd_seq_timer_open()\n\nThe timer instance per queue is exclusive, and snd_seq_timer_open()\nshould have managed the concurrent accesses.  It looks as if it's\nchecking the already existing timer instance at the beginning, but\nit's not right, because there is no protection, hence any later\nconcurrent call of snd_seq_timer_open() may override the timer\ninstance easily.  This may result in UAF, as the leftover timer\ninstance can keep running while the queue itself gets closed, as\nspotted by syzkaller recently.\n\nFor avoiding the race, add a proper check at the assignment of\ntmr-\u003etimeri again, and return -EBUSY if it's been already registered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47284",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nisdn: mISDN: netjet: Fix crash in nj_probe:\n\n'nj_setup' in netjet.c might fail with -EIO and in this case\n'card-\u003eirq' is initialized and is bigger than zero. A subsequent call to\n'nj_release' will free the irq that has not been requested.\n\nFix this bug by deleting the previous assignment to 'card-\u003eirq' and just\nkeep the assignment before 'request_irq'.\n\nThe KASAN's log reveals it:\n\n[    3.354615 ] WARNING: CPU: 0 PID: 1 at kernel/irq/manage.c:1826\nfree_irq+0x100/0x480\n[    3.355112 ] Modules linked in:\n[    3.355310 ] CPU: 0 PID: 1 Comm: swapper/0 Not tainted\n5.13.0-rc1-00144-g25a1298726e #13\n[    3.355816 ] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\nrel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n[    3.356552 ] RIP: 0010:free_irq+0x100/0x480\n[    3.356820 ] Code: 6e 08 74 6f 4d 89 f4 e8 5e ac 09 00 4d 8b 74 24 18\n4d 85 f6 75 e3 e8 4f ac 09 00 8b 75 c8 48 c7 c7 78 c1 2e 85 e8 e0 cf f5\nff \u003c0f\u003e 0b 48 8b 75 c0 4c 89 ff e8 72 33 0b 03 48 8b 43 40 4c 8b a0 80\n[    3.358012 ] RSP: 0000:ffffc90000017b48 EFLAGS: 00010082\n[    3.358357 ] RAX: 0000000000000000 RBX: ffff888104dc8000 RCX:\n0000000000000000\n[    3.358814 ] RDX: ffff8881003c8000 RSI: ffffffff8124a9e6 RDI:\n00000000ffffffff\n[    3.359272 ] RBP: ffffc90000017b88 R08: 0000000000000000 R09:\n0000000000000000\n[    3.359732 ] R10: ffffc900000179f0 R11: 0000000000001d04 R12:\n0000000000000000\n[    3.360195 ] R13: ffff888107dc6000 R14: ffff888107dc6928 R15:\nffff888104dc80a8\n[    3.360652 ] FS:  0000000000000000(0000) GS:ffff88817bc00000(0000)\nknlGS:0000000000000000\n[    3.361170 ] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    3.361538 ] CR2: 0000000000000000 CR3: 000000000582e000 CR4:\n00000000000006f0\n[    3.362003 ] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[    3.362175 ] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[    3.362175 ] Call Trace:\n[    3.362175 ]  nj_release+0x51/0x1e0\n[    3.362175 ]  nj_probe+0x450/0x950\n[    3.362175 ]  ? pci_device_remove+0x110/0x110\n[    3.362175 ]  local_pci_probe+0x45/0xa0\n[    3.362175 ]  pci_device_probe+0x12b/0x1d0\n[    3.362175 ]  really_probe+0x2a9/0x610\n[    3.362175 ]  driver_probe_device+0x90/0x1d0\n[    3.362175 ]  ? mutex_lock_nested+0x1b/0x20\n[    3.362175 ]  device_driver_attach+0x68/0x70\n[    3.362175 ]  __driver_attach+0x124/0x1b0\n[    3.362175 ]  ? device_driver_attach+0x70/0x70\n[    3.362175 ]  bus_for_each_dev+0xbb/0x110\n[    3.362175 ]  ? rdinit_setup+0x45/0x45\n[    3.362175 ]  driver_attach+0x27/0x30\n[    3.362175 ]  bus_add_driver+0x1eb/0x2a0\n[    3.362175 ]  driver_register+0xa9/0x180\n[    3.362175 ]  __pci_register_driver+0x82/0x90\n[    3.362175 ]  ? w6692_init+0x38/0x38\n[    3.362175 ]  nj_init+0x36/0x38\n[    3.362175 ]  do_one_initcall+0x7f/0x3d0\n[    3.362175 ]  ? rdinit_setup+0x45/0x45\n[    3.362175 ]  ? rcu_read_lock_sched_held+0x4f/0x80\n[    3.362175 ]  kernel_init_freeable+0x2aa/0x301\n[    3.362175 ]  ? rest_init+0x2c0/0x2c0\n[    3.362175 ]  kernel_init+0x18/0x190\n[    3.362175 ]  ? rest_init+0x2c0/0x2c0\n[    3.362175 ]  ? rest_init+0x2c0/0x2c0\n[    3.362175 ]  ret_from_fork+0x1f/0x30\n[    3.362175 ] Kernel panic - not syncing: panic_on_warn set ...\n[    3.362175 ] CPU: 0 PID: 1 Comm: swapper/0 Not tainted\n5.13.0-rc1-00144-g25a1298726e #13\n[    3.362175 ] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\nrel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n[    3.362175 ] Call Trace:\n[    3.362175 ]  dump_stack+0xba/0xf5\n[    3.362175 ]  ? free_irq+0x100/0x480\n[    3.362175 ]  panic+0x15a/0x3f2\n[    3.362175 ]  ? __warn+0xf2/0x150\n[    3.362175 ]  ? free_irq+0x100/0x480\n[    3.362175 ]  __warn+0x108/0x150\n[    3.362175 ]  ? free_irq+0x100/0x480\n[    3.362175 ]  report_bug+0x119/0x1c0\n[    3.362175 ]  handle_bug+0x3b/0x80\n[    3.362175 ]  exc_invalid_op+0x18/0x70\n[    3.362175 ]  asm_exc_invalid_op+0x12/0x20\n[    3.362175 ] RIP: 0010:free_irq+0x100\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47285",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47288",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ngene: Fix out-of-bounds bug in ngene_command_config_free_buf()\n\nFix an 11-year old bug in ngene_command_config_free_buf() while\naddressing the following warnings caught with -Warray-bounds:\n\narch/alpha/include/asm/string.h:22:16: warning: '__builtin_memcpy' offset [12, 16] from the object at 'com' is out of the bounds of referenced subobject 'config' with type 'unsigned char' at offset 10 [-Warray-bounds]\narch/x86/include/asm/string_32.h:182:25: warning: '__builtin_memcpy' offset [12, 16] from the object at 'com' is out of the bounds of referenced subobject 'config' with type 'unsigned char' at offset 10 [-Warray-bounds]\n\nThe problem is that the original code is trying to copy 6 bytes of\ndata into a one-byte size member _config_ of the wrong structue\nFW_CONFIGURE_BUFFERS, in a single call to memcpy(). This causes a\nlegitimate compiler warning because memcpy() overruns the length\nof \u0026com.cmd.ConfigureBuffers.config. It seems that the right\nstructure is FW_CONFIGURE_FREE_BUFFERS, instead, because it contains\n6 more members apart from the header _hdr_. Also, the name of\nthe function ngene_command_config_free_buf() suggests that the actual\nintention is to ConfigureFreeBuffers, instead of ConfigureBuffers\n(which takes place in the function ngene_command_config_buf(), above).\n\nFix this by enclosing those 6 members of struct FW_CONFIGURE_FREE_BUFFERS\ninto new struct config, and use \u0026com.cmd.ConfigureFreeBuffers.config as\nthe destination address, instead of \u0026com.cmd.ConfigureBuffers.config,\nwhen calling memcpy().\n\nThis also helps with the ongoing efforts to globally enable\n-Warray-bounds and get us closer to being able to tighten the\nFORTIFY_SOURCE routines on memcpy().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47293",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_skbmod: Skip non-Ethernet packets\n\nCurrently tcf_skbmod_act() assumes that packets use Ethernet as their L2\nprotocol, which is not always the case.  As an example, for CAN devices:\n\n\t$ ip link add dev vcan0 type vcan\n\t$ ip link set up vcan0\n\t$ tc qdisc add dev vcan0 root handle 1: htb\n\t$ tc filter add dev vcan0 parent 1: protocol ip prio 10 \\\n\t\tmatchall action skbmod swap mac\n\nDoing the above silently corrupts all the packets.  Do not perform skbmod\nactions for non-Ethernet packets.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47294",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Decrease sock refcount when sock timers expire\n\nCommit 63346650c1a9 (\"netrom: switch to sock timer API\") switched to use\nsock timer API. It replaces mod_timer() by sk_reset_timer(), and\ndel_timer() by sk_stop_timer().\n\nFunction sk_reset_timer() will increase the refcount of sock if it is\ncalled on an inactive timer, hence, in case the timer expires, we need to\ndecrease the refcount ourselves in the handler, otherwise, the sock\nrefcount will be unbalanced and the sock will never be freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47297",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix uninit-value in caif_seqpkt_sendmsg\n\nWhen nr_segs equal to zero in iovec_from_user, the object\nmsg-\u003emsg_iter.iov is uninit stack memory in caif_seqpkt_sendmsg\nwhich is defined in ___sys_sendmsg. So we cann't just judge\nmsg-\u003emsg_iter.iov-\u003ebase directlly. We can use nr_segs to judge\nmsg in caif_seqpkt_sendmsg whether has data buffers.\n\n=====================================================\nBUG: KMSAN: uninit-value in caif_seqpkt_sendmsg+0x693/0xf60 net/caif/caif_socket.c:542\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x1c9/0x220 lib/dump_stack.c:118\n kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:118\n __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:215\n caif_seqpkt_sendmsg+0x693/0xf60 net/caif/caif_socket.c:542\n sock_sendmsg_nosec net/socket.c:652 [inline]\n sock_sendmsg net/socket.c:672 [inline]\n ____sys_sendmsg+0x12b6/0x1350 net/socket.c:2343\n ___sys_sendmsg net/socket.c:2397 [inline]\n __sys_sendmmsg+0x808/0xc90 net/socket.c:2480\n __compat_sys_sendmmsg net/compat.c:656 [inline]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47301",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Fix use-after-free error during reset\n\nCleans the next descriptor to watch (next_to_watch) when cleaning the\nTX ring.\n\nFailure to do so can cause invalid memory accesses. If igb_poll() runs\nwhile the controller is reset this can lead to the driver try to free\na skb that was already freed.\n\n(The crash is harder to reproduce with the igb driver, but the same\npotential problem exists as the code is identical to igc)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47302",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigc: Fix use-after-free error during reset\n\nCleans the next descriptor to watch (next_to_watch) when cleaning the\nTX ring.\n\nFailure to do so can cause invalid memory accesses. If igc_poll() runs\nwhile the controller is being reset this can lead to the driver try to\nfree a skb that was already freed.\n\nLog message:\n\n [  101.525242] refcount_t: underflow; use-after-free.\n [  101.525251] WARNING: CPU: 1 PID: 646 at lib/refcount.c:28 refcount_warn_saturate+0xab/0xf0\n [  101.525259] Modules linked in: sch_etf(E) sch_mqprio(E) rfkill(E) intel_rapl_msr(E) intel_rapl_common(E)\n x86_pkg_temp_thermal(E) intel_powerclamp(E) coretemp(E) binfmt_misc(E) kvm_intel(E) kvm(E) irqbypass(E) crc32_pclmul(E)\n ghash_clmulni_intel(E) aesni_intel(E) mei_wdt(E) libaes(E) crypto_simd(E) cryptd(E) glue_helper(E) snd_hda_codec_hdmi(E)\n rapl(E) intel_cstate(E) snd_hda_intel(E) snd_intel_dspcfg(E) sg(E) soundwire_intel(E) intel_uncore(E) at24(E)\n soundwire_generic_allocation(E) iTCO_wdt(E) soundwire_cadence(E) intel_pmc_bxt(E) serio_raw(E) snd_hda_codec(E)\n iTCO_vendor_support(E) watchdog(E) snd_hda_core(E) snd_hwdep(E) snd_soc_core(E) snd_compress(E) snd_pcsp(E)\n soundwire_bus(E) snd_pcm(E) evdev(E) snd_timer(E) mei_me(E) snd(E) soundcore(E) mei(E) configfs(E) ip_tables(E) x_tables(E)\n autofs4(E) ext4(E) crc32c_generic(E) crc16(E) mbcache(E) jbd2(E) sd_mod(E) t10_pi(E) crc_t10dif(E) crct10dif_generic(E)\n i915(E) ahci(E) libahci(E) ehci_pci(E) igb(E) xhci_pci(E) ehci_hcd(E)\n [  101.525303]  drm_kms_helper(E) dca(E) xhci_hcd(E) libata(E) crct10dif_pclmul(E) cec(E) crct10dif_common(E) tsn(E) igc(E)\n e1000e(E) ptp(E) i2c_i801(E) crc32c_intel(E) psmouse(E) i2c_algo_bit(E) i2c_smbus(E) scsi_mod(E) lpc_ich(E) pps_core(E)\n usbcore(E) drm(E) button(E) video(E)\n [  101.525318] CPU: 1 PID: 646 Comm: irq/37-enp7s0-T Tainted: G            E     5.10.30-rt37-tsn1-rt-ipipe #ipipe\n [  101.525320] Hardware name: SIEMENS AG SIMATIC IPC427D/A5E31233588, BIOS V17.02.09 03/31/2017\n [  101.525322] RIP: 0010:refcount_warn_saturate+0xab/0xf0\n [  101.525325] Code: 05 31 48 44 01 01 e8 f0 c6 42 00 0f 0b c3 80 3d 1f 48 44 01 00 75 90 48 c7 c7 78 a8 f3 a6 c6 05 0f 48\n 44 01 01 e8 d1 c6 42 00 \u003c0f\u003e 0b c3 80 3d fe 47 44 01 00 0f 85 6d ff ff ff 48 c7 c7 d0 a8 f3\n [  101.525327] RSP: 0018:ffffbdedc0917cb8 EFLAGS: 00010286\n [  101.525329] RAX: 0000000000000000 RBX: ffff98fd6becbf40 RCX: 0000000000000001\n [  101.525330] RDX: 0000000000000001 RSI: ffffffffa6f2700c RDI: 00000000ffffffff\n [  101.525332] RBP: ffff98fd6becc14c R08: ffffffffa7463d00 R09: ffffbdedc0917c50\n [  101.525333] R10: ffffffffa74c3578 R11: 0000000000000034 R12: 00000000ffffff00\n [  101.525335] R13: ffff98fd6b0b1000 R14: 0000000000000039 R15: ffff98fd6be35c40\n [  101.525337] FS:  0000000000000000(0000) GS:ffff98fd6e240000(0000) knlGS:0000000000000000\n [  101.525339] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n [  101.525341] CR2: 00007f34135a3a70 CR3: 0000000150210003 CR4: 00000000001706e0\n [  101.525343] Call Trace:\n [  101.525346]  sock_wfree+0x9c/0xa0\n [  101.525353]  unix_destruct_scm+0x7b/0xa0\n [  101.525358]  skb_release_head_state+0x40/0x90\n [  101.525362]  skb_release_all+0xe/0x30\n [  101.525364]  napi_consume_skb+0x57/0x160\n [  101.525367]  igc_poll+0xb7/0xc80 [igc]\n [  101.525376]  ? sched_clock+0x5/0x10\n [  101.525381]  ? sched_clock_cpu+0xe/0x100\n [  101.525385]  net_rx_action+0x14c/0x410\n [  101.525388]  __do_softirq+0xe9/0x2f4\n [  101.525391]  __local_bh_enable_ip+0xe3/0x110\n [  101.525395]  ? irq_finalize_oneshot.part.47+0xe0/0xe0\n [  101.525398]  irq_forced_thread_fn+0x6a/0x80\n [  101.525401]  irq_thread+0xe8/0x180\n [  101.525403]  ? wake_threads_waitq+0x30/0x30\n [  101.525406]  ? irq_thread_check_affinity+0xd0/0xd0\n [  101.525408]  kthread+0x183/0x1a0\n [  101.525412]  ? kthread_park+0x80/0x80\n [  101.525415]  ret_from_fork+0x22/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47305",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf/sync_file: Don't leak fences on merge failure\n\nEach add_fence() call does a dma_fence_get() on the relevant fence.  In\nthe error path, we weren't calling dma_fence_put() so all those fences\ngot leaked.  Also, in the krealloc_array failure case, we weren't\nfreeing the fences array.  Instead, ensure that i and fences are always\nzero-initialized and dma_fence_put() all the fences and kfree(fences) on\nevery error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47307",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: prevent NULL deref in cifs_compose_mount_options()\n\nThe optional @ref parameter might contain an NULL node_name, so\nprevent dereferencing it in cifs_compose_mount_options().\n\nAddresses-Coverity: 1476408 (\"Explicit null dereferenced\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47308",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: libfc: Fix array index out of bound exception\n\nFix array index out of bound exception in fc_rport_prli_resp().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47309",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: validate lwtstate-\u003edata before returning from skb_tunnel_info()\n\nskb_tunnel_info() returns pointer of lwtstate-\u003edata as ip_tunnel_info\ntype without validation. lwtstate-\u003edata can have various types such as\nmpls_iptunnel_encap, etc and these are not compatible.\nSo skb_tunnel_info() should validate before returning that pointer.\n\nSplat looks like:\nBUG: KASAN: slab-out-of-bounds in vxlan_get_route+0x418/0x4b0 [vxlan]\nRead of size 2 at addr ffff888106ec2698 by task ping/811\n\nCPU: 1 PID: 811 Comm: ping Not tainted 5.13.0+ #1195\nCall Trace:\n dump_stack_lvl+0x56/0x7b\n print_address_description.constprop.8.cold.13+0x13/0x2ee\n ? vxlan_get_route+0x418/0x4b0 [vxlan]\n ? vxlan_get_route+0x418/0x4b0 [vxlan]\n kasan_report.cold.14+0x83/0xdf\n ? vxlan_get_route+0x418/0x4b0 [vxlan]\n vxlan_get_route+0x418/0x4b0 [vxlan]\n [ ... ]\n vxlan_xmit_one+0x148b/0x32b0 [vxlan]\n [ ... ]\n vxlan_xmit+0x25c5/0x4780 [vxlan]\n [ ... ]\n dev_hard_start_xmit+0x1ae/0x6e0\n __dev_queue_xmit+0x1f39/0x31a0\n [ ... ]\n neigh_xmit+0x2f9/0x940\n mpls_xmit+0x911/0x1600 [mpls_iptunnel]\n lwtunnel_xmit+0x18f/0x450\n ip_finish_output2+0x867/0x2040\n [ ... ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47310",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ti: fix UAF in tlan_remove_one\n\npriv is netdev private data and it cannot be\nused after free_netdev() call. Using priv after free_netdev()\ncan cause UAF bug. Fix it by moving free_netdev() at the end of the\nfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47311",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qcom/emac: fix UAF in emac_remove\n\nadpt is netdev private data and it cannot be\nused after free_netdev() call. Using adpt after free_netdev()\ncan cause UAF bug. Fix it by moving free_netdev() at the end of the\nfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47314",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: fsl_ifc: fix leak of private memory on probe failure\n\nOn probe error the driver should free the memory allocated for private\nstructure.  Fix this by using resource-managed allocation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47315",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: fsl_ifc: fix leak of IO mapping on probe failure\n\nOn probe error the driver should unmap the IO memory.  Smatch reports:\n\n  drivers/memory/fsl_ifc.c:298 fsl_ifc_ctrl_probe() warn: 'fsl_ifc_ctrl_dev-\u003egregs' not released on lines: 298.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47319",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-blk: Fix memory leak among suspend/resume procedure\n\nThe vblk-\u003evqs should be freed before we call init_vqs()\nin virtblk_restore().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47320",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: fix acl memory leak of posix_acl_create()\n\nWhen looking into another nfs xfstests report, I found acl and\ndefault_acl in nfs3_proc_create() and nfs3_proc_mknod() error\npaths are possibly leaked. Fix them in advance.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47321",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: Fix possible use-after-free by calling del_timer_sync()\n\nThis driver's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47323",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: sc520_wdt: Fix possible use-after-free in wdt_turnoff()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47324",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: Fix possible use-after-free in wdt_startup()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47328",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: iscsi: Fix conn use after free during resets\n\nIf we haven't done a unbind target call we can race where\niscsi_conn_teardown wakes up the EH thread and then frees the conn while\nthose threads are still accessing the conn ehwait.\n\nWe can only do one TMF per session so this just moves the TMF fields from\nthe conn to the session. We can then rely on the\niscsi_session_teardown-\u003eiscsi_remove_session-\u003e__iscsi_unbind_session call\nto remove the target and it's devices, and know after that point there is\nno device or scsi-ml callout trying to access the session.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47330",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: 8250: serial_cs: Fix a memory leak in error handling path\n\nIn the probe function, if the final 'serial_config()' fails, 'info' is\nleaking.\n\nAdd a resource handling path to free this memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47334",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc/libmasm/module: Fix two use after free in ibmasm_init_one\n\nIn ibmasm_init_one, it calls ibmasm_init_remote_input_dev().\nInside ibmasm_init_remote_input_dev, mouse_dev and keybd_dev are\nallocated by input_allocate_device(), and assigned to\nsp-\u003eremote.mouse_dev and sp-\u003eremote.keybd_dev respectively.\n\nIn the err_free_devices error branch of ibmasm_init_one,\nmouse_dev and keybd_dev are freed by input_free_device(), and return\nerror. Then the execution runs into error_send_message error branch\nof ibmasm_init_one, where ibmasm_free_remote_input_dev(sp) is called\nto unregister the freed sp-\u003eremote.mouse_dev and sp-\u003eremote.keybd_dev.\n\nMy patch add a \"error_init_remote\" label to handle the error of\nibmasm_init_remote_input_dev(), to avoid the uaf bugs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47337",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix bad pointer dereference when ehandler kthread is invalid\n\nCommit 66a834d09293 (\"scsi: core: Fix error handling of scsi_host_alloc()\")\nchanged the allocation logic to call put_device() to perform host cleanup\nwith the assumption that IDA removal and stopping the kthread would\nproperly be performed in scsi_host_dev_release(). However, in the unlikely\ncase that the error handler thread fails to spawn, shost-\u003eehandler is set\nto ERR_PTR(-ENOMEM).\n\nThe error handler cleanup code in scsi_host_dev_release() will call\nkthread_stop() if shost-\u003eehandler != NULL which will always be the case\nwhether the kthread was successfully spawned or not. In the case that it\nfailed to spawn this has the nasty side effect of trying to dereference an\ninvalid pointer when kthread_stop() is called. The following splat provides\nan example of this behavior in the wild:\n\nscsi host11: error handler thread failed to spawn, error = -4\nKernel attempted to read user page (10c) - exploit attempt? (uid: 0)\nBUG: Kernel NULL pointer dereference on read at 0x0000010c\nFaulting instruction address: 0xc00000000818e9a8\nOops: Kernel access of bad area, sig: 11 [#1]\nLE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: ibmvscsi(+) scsi_transport_srp dm_multipath dm_mirror dm_region\n hash dm_log dm_mod fuse overlay squashfs loop\nCPU: 12 PID: 274 Comm: systemd-udevd Not tainted 5.13.0-rc7 #1\nNIP:  c00000000818e9a8 LR: c0000000089846e8 CTR: 0000000000007ee8\nREGS: c000000037d12ea0 TRAP: 0300   Not tainted  (5.13.0-rc7)\nMSR:  800000000280b033 \u0026lt;SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE\u0026gt;  CR: 28228228\nXER: 20040001\nCFAR: c0000000089846e4 DAR: 000000000000010c DSISR: 40000000 IRQMASK: 0\nGPR00: c0000000089846e8 c000000037d13140 c000000009cc1100 fffffffffffffffc\nGPR04: 0000000000000001 0000000000000000 0000000000000000 c000000037dc0000\nGPR08: 0000000000000000 c000000037dc0000 0000000000000001 00000000fffff7ff\nGPR12: 0000000000008000 c00000000a049000 c000000037d13d00 000000011134d5a0\nGPR16: 0000000000001740 c0080000190d0000 c0080000190d1740 c000000009129288\nGPR20: c000000037d13bc0 0000000000000001 c000000037d13bc0 c0080000190b7898\nGPR24: c0080000190b7708 0000000000000000 c000000033bb2c48 0000000000000000\nGPR28: c000000046b28280 0000000000000000 000000000000010c fffffffffffffffc\nNIP [c00000000818e9a8] kthread_stop+0x38/0x230\nLR [c0000000089846e8] scsi_host_dev_release+0x98/0x160\nCall Trace:\n[c000000033bb2c48] 0xc000000033bb2c48 (unreliable)\n[c0000000089846e8] scsi_host_dev_release+0x98/0x160\n[c00000000891e960] device_release+0x60/0x100\n[c0000000087e55c4] kobject_release+0x84/0x210\n[c00000000891ec78] put_device+0x28/0x40\n[c000000008984ea4] scsi_host_alloc+0x314/0x430\n[c0080000190b38bc] ibmvscsi_probe+0x54/0xad0 [ibmvscsi]\n[c000000008110104] vio_bus_probe+0xa4/0x4b0\n[c00000000892a860] really_probe+0x140/0x680\n[c00000000892aefc] driver_probe_device+0x15c/0x200\n[c00000000892b63c] device_driver_attach+0xcc/0xe0\n[c00000000892b740] __driver_attach+0xf0/0x200\n[c000000008926f28] bus_for_each_dev+0xa8/0x130\n[c000000008929ce4] driver_attach+0x34/0x50\n[c000000008928fc0] bus_add_driver+0x1b0/0x300\n[c00000000892c798] driver_register+0x98/0x1a0\n[c00000000810eb60] __vio_register_driver+0x80/0xe0\n[c0080000190b4a30] ibmvscsi_module_init+0x9c/0xdc [ibmvscsi]\n[c0000000080121d0] do_one_initcall+0x60/0x2d0\n[c000000008261abc] do_init_module+0x7c/0x320\n[c000000008265700] load_module+0x2350/0x25b0\n[c000000008265cb4] __do_sys_finit_module+0xd4/0x160\n[c000000008031110] system_call_exception+0x150/0x2d0\n[c00000000800d35c] system_call_common+0xec/0x278\n\nFix this be nulling shost-\u003eehandler when the kthread fails to spawn.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47343",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: assign new_root only when removal succeeds\n\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\n\nFor dm-thin, the value of pmd-\u003edetails_root or pmd-\u003eroot will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\n\n  general protection fault, probably for non-canonical address 0x3fdcb14c8d7520\n  CPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\n  Hardware name: QEMU Standard PC\n  RIP: 0010:metadata_ll_load_ie+0x14/0x30\n  Call Trace:\n   sm_metadata_count_is_more_than_one+0xb9/0xe0\n   dm_tm_shadow_block+0x52/0x1c0\n   shadow_step+0x59/0xf0\n   remove_raw+0xb2/0x170\n   dm_btree_remove+0xf4/0x1c0\n   dm_pool_delete_thin_device+0xc3/0x140\n   pool_message+0x218/0x2b0\n   target_message+0x251/0x290\n   ctl_ioctl+0x1c4/0x4d0\n   dm_ctl_ioctl+0xe/0x20\n   __x64_sys_ioctl+0x7b/0xb0\n   do_syscall_64+0x40/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFixing it by only assign new_root when removal succeeds",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47344",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: zr364xx: fix memory leak in zr364xx_start_readpipe\n\nsyzbot reported memory leak in zr364xx driver.\nThe problem was in non-freed urb in case of\nusb_submit_urb() fail.\n\nbacktrace:\n  [\u003cffffffff82baedf6\u003e] kmalloc include/linux/slab.h:561 [inline]\n  [\u003cffffffff82baedf6\u003e] usb_alloc_urb+0x66/0xe0 drivers/usb/core/urb.c:74\n  [\u003cffffffff82f7cce8\u003e] zr364xx_start_readpipe+0x78/0x130 drivers/media/usb/zr364xx/zr364xx.c:1022\n  [\u003cffffffff84251dfc\u003e] zr364xx_board_init drivers/media/usb/zr364xx/zr364xx.c:1383 [inline]\n  [\u003cffffffff84251dfc\u003e] zr364xx_probe+0x6a3/0x851 drivers/media/usb/zr364xx/zr364xx.c:1516\n  [\u003cffffffff82bb6507\u003e] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396\n  [\u003cffffffff826018a9\u003e] really_probe+0x159/0x500 drivers/base/dd.c:576",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47345",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Fix rdma_resolve_route() memory leak\n\nFix a memory leak when \"mda_resolve_route() is called more than once on\nthe same \"rdma_cm_id\".\n\nThis is possible if cma_query_handler() triggers the\nRDMA_CM_EVENT_ROUTE_ERROR flow which puts the state machine back and\nallows rdma_resolve_route() to be called again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47347",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwl1251: Fix possible buffer overflow in wl1251_cmd_scan\n\nFunction wl1251_cmd_scan calls memcpy without checking the length.\nHarden by checking the length is within the maximum allowed size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47352",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-net: Add validation for used length\n\nThis adds validation for used length (might come\nfrom an untrusted device) to avoid data corruption\nor loss.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47353",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Fix NULL pointer dereference in udf_symlink function\n\nIn function udf_symlink, epos.bh is assigned with the value returned\nby udf_tgetblk. The function udf_tgetblk is defined in udf/misc.c\nand returns the value of sb_getblk function that could be NULL.\nThen, epos.bh is used without any check, causing a possible\nNULL pointer dereference when sb_getblk fails.\n\nThis fix adds a check to validate the value of epos.bh.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47354",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/sched: Avoid data corruptions\n\nWait for all dependencies of a job  to complete before\nkilling it to avoid data corruptions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47355",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: nicstar: Fix possible use-after-free in nicstar_cleanup()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47356",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix possible use-after-free in HFC_cleanup()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47357",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: iphase: fix possible use-after-free in ia_module_exit()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47361",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmcb: fix error handling in mcb_alloc_bus()\n\nThere are two bugs:\n1) If ida_simple_get() fails then this code calls put_device(carrier)\n   but we haven't yet called get_device(carrier) and probably that\n   leads to a use after free.\n2) After device_initialize() then we need to use put_device() to\n   release the bus.  This will free the internal resources tied to the\n   device and call mcb_free_bus() which will free the rest.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47362",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Update intermediate power state for SI\n\nUpdate the current state as boot state during dpm initialization.\nDuring the subsequent initialization, set_power_state gets called to\ntransition to the final power state. set_power_state refers to values\nfrom the current state and without current state populated, it could\nresult in NULL pointer dereference.\n\nFor ex: on platforms where PCI speed change is supported through ACPI\nATCS method, the link speed of current state needs to be queried before\ndeciding on changing to final power state's link speed. The logic to query\nATCS-support was broken on certain platforms. The issue became visible\nwhen broken ATCS-support logic got fixed with commit\nf9b7f3703ff9 (\"drm/amdgpu/acpi: make ATPX/ATCS structures global (v2)\").\n\nBug: https://gitlab.freedesktop.org/drm/amd/-/issues/1698",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47369",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/qeth: fix NULL deref in qeth_clear_working_pool_list()\n\nWhen qeth_set_online() calls qeth_clear_working_pool_list() to roll\nback after an error exit from qeth_hardsetup_card(), we are at risk of\naccessing card-\u003eqdio.in_q before it was allocated by\nqeth_alloc_qdio_queues() via qeth_mpc_initialize().\n\nqeth_clear_working_pool_list() then dereferences NULL, and by writing to\nqueue-\u003ebufs[i].pool_entry scribbles all over the CPU's lowcore.\nResulting in a crash when those lowcore areas are used next (eg. on\nthe next machine-check interrupt).\n\nSuch a scenario would typically happen when the device is first set\nonline and its queues aren't allocated yet. An early IO error or certain\nmisconfigs (eg. mismatched transport mode, bad portno) then cause us to\nerror out from qeth_hardsetup_card() with card-\u003eqdio.in_q still being\nNULL.\n\nFix it by checking the pointer for NULL before accessing it.\n\nNote that we also have (rare) paths inside qeth_mpc_initialize() where\na configuration change can cause us to free the existing queues,\nexpecting that subsequent code will allocate them again. If we then\nerror out before that re-allocation happens, the same bug occurs.\n\nRoot-caused-by: Heiko Carstens \u003chca@linux.ibm.com\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47372",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: macb: fix use after free on rmmod\n\nplat_dev-\u003edev-\u003eplatform_data is released by platform_device_unregister(),\nuse of pclk and hclk is a use-after-free. Since device unregister won't\nneed a clk device we adjust the function call sequence to fix this issue.\n\n[   31.261225] BUG: KASAN: use-after-free in macb_remove+0x77/0xc6 [macb_pci]\n[   31.275563] Freed by task 306:\n[   30.276782]  platform_device_release+0x25/0x80",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47375",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblktrace: Fix uaf in blk_trace access after removing by sysfs\n\nThere is an use-after-free problem triggered by following process:\n\n      P1(sda)\t\t\t\tP2(sdb)\n\t\t\techo 0 \u003e /sys/block/sdb/trace/enable\n\t\t\t  blk_trace_remove_queue\n\t\t\t    synchronize_rcu\n\t\t\t    blk_trace_free\n\t\t\t      relay_close\nrcu_read_lock\n__blk_add_trace\n  trace_note_tsk\n  (Iterate running_trace_list)\n\t\t\t        relay_close_buf\n\t\t\t\t  relay_destroy_buf\n\t\t\t\t    kfree(buf)\n    trace_note(sdb's bt)\n      relay_reserve\n        buf-\u003eoffset \u003c- nullptr deference (use-after-free) !!!\nrcu_read_unlock\n\n[  502.714379] BUG: kernel NULL pointer dereference, address:\n0000000000000010\n[  502.715260] #PF: supervisor read access in kernel mode\n[  502.715903] #PF: error_code(0x0000) - not-present page\n[  502.716546] PGD 103984067 P4D 103984067 PUD 17592b067 PMD 0\n[  502.717252] Oops: 0000 [#1] SMP\n[  502.720308] RIP: 0010:trace_note.isra.0+0x86/0x360\n[  502.732872] Call Trace:\n[  502.733193]  __blk_add_trace.cold+0x137/0x1a3\n[  502.733734]  blk_add_trace_rq+0x7b/0xd0\n[  502.734207]  blk_add_trace_rq_issue+0x54/0xa0\n[  502.734755]  blk_mq_start_request+0xde/0x1b0\n[  502.735287]  scsi_queue_rq+0x528/0x1140\n...\n[  502.742704]  sg_new_write.isra.0+0x16e/0x3e0\n[  502.747501]  sg_ioctl+0x466/0x1100\n\nReproduce method:\n  ioctl(/dev/sda, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])\n  ioctl(/dev/sda, BLKTRACESTART)\n  ioctl(/dev/sdb, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])\n  ioctl(/dev/sdb, BLKTRACESTART)\n\n  echo 0 \u003e /sys/block/sdb/trace/enable \u0026\n  // Add delay(mdelay/msleep) before kernel enters blk_trace_free()\n\n  ioctl$SG_IO(/dev/sda, SG_IO, ...)\n  // Enters trace_note_tsk() after blk_trace_free() returned\n  // Use mdelay in rcu region rather than msleep(which may schedule out)\n\nRemove blk_trace from running_list before calling blk_trace_free() by\nsysfs if blk_trace is at Blktrace_running state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47378",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-rdma: destroy cm id before destroy qp to avoid use after free\n\nWe should always destroy cm_id before destroy qp to avoid to get cma\nevent after qp was destroyed, which may lead to use after free.\nIn RDMA connection establishment error flow, don't destroy qp in cm\nevent handler.Just report cm_error to upper level, qp will be destroy\nin nvme_rdma_alloc_queue() after destroy cm id.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47379",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: fix UAF by grabbing blkcg lock before destroying blkg pd\n\nKASAN reports a use-after-free report when doing fuzz test:\n\n[693354.104835] ==================================================================\n[693354.105094] BUG: KASAN: use-after-free in bfq_io_set_weight_legacy+0xd3/0x160\n[693354.105336] Read of size 4 at addr ffff888be0a35664 by task sh/1453338\n\n[693354.105607] CPU: 41 PID: 1453338 Comm: sh Kdump: loaded Not tainted 4.18.0-147\n[693354.105610] Hardware name: Huawei 2288H V5/BC11SPSCB0, BIOS 0.81 07/02/2018\n[693354.105612] Call Trace:\n[693354.105621]  dump_stack+0xf1/0x19b\n[693354.105626]  ? show_regs_print_info+0x5/0x5\n[693354.105634]  ? printk+0x9c/0xc3\n[693354.105638]  ? cpumask_weight+0x1f/0x1f\n[693354.105648]  print_address_description+0x70/0x360\n[693354.105654]  kasan_report+0x1b2/0x330\n[693354.105659]  ? bfq_io_set_weight_legacy+0xd3/0x160\n[693354.105665]  ? bfq_io_set_weight_legacy+0xd3/0x160\n[693354.105670]  bfq_io_set_weight_legacy+0xd3/0x160\n[693354.105675]  ? bfq_cpd_init+0x20/0x20\n[693354.105683]  cgroup_file_write+0x3aa/0x510\n[693354.105693]  ? ___slab_alloc+0x507/0x540\n[693354.105698]  ? cgroup_file_poll+0x60/0x60\n[693354.105702]  ? 0xffffffff89600000\n[693354.105708]  ? usercopy_abort+0x90/0x90\n[693354.105716]  ? mutex_lock+0xef/0x180\n[693354.105726]  kernfs_fop_write+0x1ab/0x280\n[693354.105732]  ? cgroup_file_poll+0x60/0x60\n[693354.105738]  vfs_write+0xe7/0x230\n[693354.105744]  ksys_write+0xb0/0x140\n[693354.105749]  ? __ia32_sys_read+0x50/0x50\n[693354.105760]  do_syscall_64+0x112/0x370\n[693354.105766]  ? syscall_return_slowpath+0x260/0x260\n[693354.105772]  ? do_page_fault+0x9b/0x270\n[693354.105779]  ? prepare_exit_to_usermode+0xf9/0x1a0\n[693354.105784]  ? enter_from_user_mode+0x30/0x30\n[693354.105793]  entry_SYSCALL_64_after_hwframe+0x65/0xca\n\n[693354.105875] Allocated by task 1453337:\n[693354.106001]  kasan_kmalloc+0xa0/0xd0\n[693354.106006]  kmem_cache_alloc_node_trace+0x108/0x220\n[693354.106010]  bfq_pd_alloc+0x96/0x120\n[693354.106015]  blkcg_activate_policy+0x1b7/0x2b0\n[693354.106020]  bfq_create_group_hierarchy+0x1e/0x80\n[693354.106026]  bfq_init_queue+0x678/0x8c0\n[693354.106031]  blk_mq_init_sched+0x1f8/0x460\n[693354.106037]  elevator_switch_mq+0xe1/0x240\n[693354.106041]  elevator_switch+0x25/0x40\n[693354.106045]  elv_iosched_store+0x1a1/0x230\n[693354.106049]  queue_attr_store+0x78/0xb0\n[693354.106053]  kernfs_fop_write+0x1ab/0x280\n[693354.106056]  vfs_write+0xe7/0x230\n[693354.106060]  ksys_write+0xb0/0x140\n[693354.106064]  do_syscall_64+0x112/0x370\n[693354.106069]  entry_SYSCALL_64_after_hwframe+0x65/0xca\n\n[693354.106114] Freed by task 1453336:\n[693354.106225]  __kasan_slab_free+0x130/0x180\n[693354.106229]  kfree+0x90/0x1b0\n[693354.106233]  blkcg_deactivate_policy+0x12c/0x220\n[693354.106238]  bfq_exit_queue+0xf5/0x110\n[693354.106241]  blk_mq_exit_sched+0x104/0x130\n[693354.106245]  __elevator_exit+0x45/0x60\n[693354.106249]  elevator_switch_mq+0xd6/0x240\n[693354.106253]  elevator_switch+0x25/0x40\n[693354.106257]  elv_iosched_store+0x1a1/0x230\n[693354.106261]  queue_attr_store+0x78/0xb0\n[693354.106264]  kernfs_fop_write+0x1ab/0x280\n[693354.106268]  vfs_write+0xe7/0x230\n[693354.106271]  ksys_write+0xb0/0x140\n[693354.106275]  do_syscall_64+0x112/0x370\n[693354.106280]  entry_SYSCALL_64_after_hwframe+0x65/0xca\n\n[693354.106329] The buggy address belongs to the object at ffff888be0a35580\n                 which belongs to the cache kmalloc-1k of size 1024\n[693354.106736] The buggy address is located 228 bytes inside of\n                 1024-byte region [ffff888be0a35580, ffff888be0a35980)\n[693354.107114] The buggy address belongs to the page:\n[693354.107273] page:ffffea002f828c00 count:1 mapcount:0 mapping:ffff888107c17080 index:0x0 compound_mapcount: 0\n[693354.107606] flags: 0x17ffffc0008100(slab|head)\n[693354.107760] raw: 0017ffffc0008100 ffffea002fcbc808 ffffea0030bd3a08 ffff888107c17080\n[693354.108020] r\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47382",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/qeth: fix deadlock during failing recovery\n\nCommit 0b9902c1fcc5 (\"s390/qeth: fix deadlock during recovery\") removed\ntaking discipline_mutex inside qeth_do_reset(), fixing potential\ndeadlocks. An error path was missed though, that still takes\ndiscipline_mutex and thus has the original deadlock potential.\n\nIntermittent deadlocks were seen when a qeth channel path is configured\noffline, causing a race between qeth_do_reset and ccwgroup_remove.\nCall qeth_set_offline() directly in the qeth_do_reset() error case and\nthen a new variant of ccwgroup_set_offline(), without taking\ndiscipline_mutex.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47383",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: Fix out-of-bound vmalloc access in imageblit\n\nThis issue happens when a userspace program does an ioctl\nFBIOPUT_VSCREENINFO passing the fb_var_screeninfo struct\ncontaining only the fields xres, yres, and bits_per_pixel\nwith values.\n\nIf this struct is the same as the previous ioctl, the\nvc_resize() detects it and doesn't call the resize_screen(),\nleaving the fb_var_screeninfo incomplete. And this leads to\nthe updatescrollmode() calculates a wrong value to\nfbcon_display-\u003evrows, which makes the real_y() return a\nwrong value of y, and that value, eventually, causes\nthe imageblit to access an out-of-bound address value.\n\nTo solve this issue I made the resize_screen() be called\neven if the screen does not need any resizing, so it will\n\"fix and fill\" the fb_var_screeninfo independently.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47391",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Ensure rdma_addr_cancel() happens before issuing more requests\n\nThe FSM can run in a circle allowing rdma_resolve_ip() to be called twice\non the same id_priv. While this cannot happen without going through the\nwork, it violates the invariant that the same address resolution\nbackground request cannot be active twice.\n\n       CPU 1                                  CPU 2\n\nrdma_resolve_addr():\n  RDMA_CM_IDLE -\u003e RDMA_CM_ADDR_QUERY\n  rdma_resolve_ip(addr_handler)  #1\n\n\t\t\t process_one_req(): for #1\n                          addr_handler():\n                            RDMA_CM_ADDR_QUERY -\u003e RDMA_CM_ADDR_BOUND\n                            mutex_unlock(\u0026id_priv-\u003ehandler_mutex);\n                            [.. handler still running ..]\n\nrdma_resolve_addr():\n  RDMA_CM_ADDR_BOUND -\u003e RDMA_CM_ADDR_QUERY\n  rdma_resolve_ip(addr_handler)\n    !! two requests are now on the req_list\n\nrdma_destroy_id():\n destroy_id_handler_unlock():\n  _destroy_id():\n   cma_cancel_operation():\n    rdma_addr_cancel()\n\n                          // process_one_req() self removes it\n\t\t          spin_lock_bh(\u0026lock);\n                           cancel_delayed_work(\u0026req-\u003ework);\n\t                   if (!list_empty(\u0026req-\u003elist)) == true\n\n      ! rdma_addr_cancel() returns after process_on_req #1 is done\n\n   kfree(id_priv)\n\n\t\t\t process_one_req(): for #2\n                          addr_handler():\n\t                    mutex_lock(\u0026id_priv-\u003ehandler_mutex);\n                            !! Use after free on id_priv\n\nrdma_addr_cancel() expects there to be one req on the list and only\ncancels the first one. The self-removal behavior of the work only happens\nafter the handler has returned. This yields a situations where the\nreq_list can have two reqs for the same \"handle\" but rdma_addr_cancel()\nonly cancels the first one.\n\nThe second req remains active beyond rdma_destroy_id() and will\nuse-after-free id_priv once it inevitably triggers.\n\nFix this by remembering if the id_priv has called rdma_resolve_ip() and\nalways cancel before calling it again. This ensures the req_list never\ngets more than one item in it and doesn't cost anything in the normal flow\nthat never uses this strange error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47397",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: break out if skb_header_pointer returns NULL in sctp_rcv_ootb\n\nWe should always check if skb_header_pointer's return is NULL before\nusing it, otherwise it may cause null-ptr-deref, as syzbot reported:\n\n  KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n  RIP: 0010:sctp_rcv_ootb net/sctp/input.c:705 [inline]\n  RIP: 0010:sctp_rcv+0x1d84/0x3220 net/sctp/input.c:196\n  Call Trace:\n  \u003cIRQ\u003e\n   sctp6_rcv+0x38/0x60 net/sctp/ipv6.c:1109\n   ip6_protocol_deliver_rcu+0x2e9/0x1ca0 net/ipv6/ip6_input.c:422\n   ip6_input_finish+0x62/0x170 net/ipv6/ip6_input.c:463\n   NF_HOOK include/linux/netfilter.h:307 [inline]\n   NF_HOOK include/linux/netfilter.h:301 [inline]\n   ip6_input+0x9c/0xd0 net/ipv6/ip6_input.c:472\n   dst_input include/net/dst.h:460 [inline]\n   ip6_rcv_finish net/ipv6/ip6_input.c:76 [inline]\n   NF_HOOK include/linux/netfilter.h:307 [inline]\n   NF_HOOK include/linux/netfilter.h:301 [inline]\n   ipv6_rcv+0x28c/0x3c0 net/ipv6/ip6_input.c:297",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47400",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: do not allow call hns3_nic_net_open repeatedly\n\nhns3_nic_net_open() is not allowed to called repeatly, but there\nis no checking for this. When doing device reset and setup tc\nconcurrently, there is a small oppotunity to call hns3_nic_net_open\nrepeatedly, and cause kernel bug by calling napi_enable twice.\n\nThe calltrace information is like below:\n[ 3078.222780] ------------[ cut here ]------------\n[ 3078.230255] kernel BUG at net/core/dev.c:6991!\n[ 3078.236224] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP\n[ 3078.243431] Modules linked in: hns3 hclgevf hclge hnae3 vfio_iommu_type1 vfio_pci vfio_virqfd vfio pv680_mii(O)\n[ 3078.258880] CPU: 0 PID: 295 Comm: kworker/u8:5 Tainted: G           O      5.14.0-rc4+ #1\n[ 3078.269102] Hardware name:  , BIOS KpxxxFPGA 1P B600 V181 08/12/2021\n[ 3078.276801] Workqueue: hclge hclge_service_task [hclge]\n[ 3078.288774] pstate: 60400009 (nZCv daif +PAN -UAO -TCO BTYPE=--)\n[ 3078.296168] pc : napi_enable+0x80/0x84\ntc qdisc sho[w  3d0e7v8 .e3t0h218 79] lr : hns3_nic_net_open+0x138/0x510 [hns3]\n\n[ 3078.314771] sp : ffff8000108abb20\n[ 3078.319099] x29: ffff8000108abb20 x28: 0000000000000000 x27: ffff0820a8490300\n[ 3078.329121] x26: 0000000000000001 x25: ffff08209cfc6200 x24: 0000000000000000\n[ 3078.339044] x23: ffff0820a8490300 x22: ffff08209cd76000 x21: ffff0820abfe3880\n[ 3078.349018] x20: 0000000000000000 x19: ffff08209cd76900 x18: 0000000000000000\n[ 3078.358620] x17: 0000000000000000 x16: ffffc816e1727a50 x15: 0000ffff8f4ff930\n[ 3078.368895] x14: 0000000000000000 x13: 0000000000000000 x12: 0000259e9dbeb6b4\n[ 3078.377987] x11: 0096a8f7e764eb40 x10: 634615ad28d3eab5 x9 : ffffc816ad8885b8\n[ 3078.387091] x8 : ffff08209cfc6fb8 x7 : ffff0820ac0da058 x6 : ffff0820a8490344\n[ 3078.396356] x5 : 0000000000000140 x4 : 0000000000000003 x3 : ffff08209cd76938\n[ 3078.405365] x2 : 0000000000000000 x1 : 0000000000000010 x0 : ffff0820abfe38a0\n[ 3078.414657] Call trace:\n[ 3078.418517]  napi_enable+0x80/0x84\n[ 3078.424626]  hns3_reset_notify_up_enet+0x78/0xd0 [hns3]\n[ 3078.433469]  hns3_reset_notify+0x64/0x80 [hns3]\n[ 3078.441430]  hclge_notify_client+0x68/0xb0 [hclge]\n[ 3078.450511]  hclge_reset_rebuild+0x524/0x884 [hclge]\n[ 3078.458879]  hclge_reset_service_task+0x3c4/0x680 [hclge]\n[ 3078.467470]  hclge_service_task+0xb0/0xb54 [hclge]\n[ 3078.475675]  process_one_work+0x1dc/0x48c\n[ 3078.481888]  worker_thread+0x15c/0x464\n[ 3078.487104]  kthread+0x160/0x170\n[ 3078.492479]  ret_from_fork+0x10/0x18\n[ 3078.498785] Code: c8027c81 35ffffa2 d50323bf d65f03c0 (d4210000)\n[ 3078.506889] ---[ end trace 8ebe0340a1b0fb44 ]---\n\nOnce hns3_nic_net_open() is excute success, the flag\nHNS3_NIC_STATE_DOWN will be cleared. So add checking for this\nflag, directly return when HNS3_NIC_STATE_DOWN is no set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47401",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipack: ipoctal: fix stack information leak\n\nThe tty driver name is used also after registering the driver and must\nspecifically not be allocated on the stack to avoid leaking information\nto user space (or triggering an oops).\n\nDrivers should not try to encode topology information in the tty device\nname but this one snuck in through staging without anyone noticing and\nanother driver has since copied this malpractice.\n\nFixing the ABI is a separate issue, but this at least plugs the security\nhole.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47404",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: betop: fix slab-out-of-bounds Write in betop_probe\n\nSyzbot reported slab-out-of-bounds Write bug in hid-betopff driver.\nThe problem is the driver assumes the device must have an input report but\nsome malicious devices violate this assumption.\n\nSo this patch checks hid_device's input is non empty before it's been used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47407",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Handle SRCU initialization failure during page track init\n\nCheck the return of init_srcu_struct(), which can fail due to OOM, when\ninitializing the page track mechanism.  Lack of checking leads to a NULL\npointer deref found by a modified syzkaller.\n\n[Move the call towards the beginning of kvm_arch_init_vm. - Paolo]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47409",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47416",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus-\u003estate to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47418",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: fix NULL deref in fifo_set_limit()\n\nsyzbot reported another NULL deref in fifo_set_limit() [1]\n\nI could repro the issue with :\n\nunshare -n\ntc qd add dev lo root handle 1:0 tbf limit 200000 burst 70000 rate 100Mbit\ntc qd replace dev lo parent 1:0 pfifo_fast\ntc qd change dev lo root handle 1:0 tbf limit 300000 burst 70000 rate 100Mbit\n\npfifo_fast does not have a change() operation.\nMake fifo_set_limit() more robust about this.\n\n[1]\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 1cf99067 P4D 1cf99067 PUD 7ca49067 PMD 0\nOops: 0010 [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 14443 Comm: syz-executor959 Not tainted 5.15.0-rc3-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:0x0\nCode: Unable to access opcode bytes at RIP 0xffffffffffffffd6.\nRSP: 0018:ffffc9000e2f7310 EFLAGS: 00010246\nRAX: dffffc0000000000 RBX: ffffffff8d6ecc00 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff888024c27910 RDI: ffff888071e34000\nRBP: ffff888071e34000 R08: 0000000000000001 R09: ffffffff8fcfb947\nR10: 0000000000000001 R11: 0000000000000000 R12: ffff888024c27910\nR13: ffff888071e34018 R14: 0000000000000000 R15: ffff88801ef74800\nFS:  00007f321d897700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffffffffffd6 CR3: 00000000722c3000 CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n fifo_set_limit net/sched/sch_fifo.c:242 [inline]\n fifo_set_limit+0x198/0x210 net/sched/sch_fifo.c:227\n tbf_change+0x6ec/0x16d0 net/sched/sch_tbf.c:418\n qdisc_change net/sched/sch_api.c:1332 [inline]\n tc_modify_qdisc+0xd9a/0x1a60 net/sched/sch_api.c:1634\n rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5572\n netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504\n netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]\n netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340\n netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929\n sock_sendmsg_nosec net/socket.c:704 [inline]\n sock_sendmsg+0xcf/0x120 net/socket.c:724\n ____sys_sendmsg+0x6e8/0x810 net/socket.c:2409\n ___sys_sendmsg+0xf3/0x170 net/socket.c:2463\n __sys_sendmsg+0xe5/0x1b0 net/socket.c:2492\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47423",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau/debugfs: fix file release memory leak\n\nWhen using single_open() for opening, single_release() should be\ncalled, otherwise the 'op' allocated in single_open() will be leaked.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47424",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix freeing of uninitialized misc IRQ vector\n\nWhen VSI set up failed in i40e_probe() as part of PF switch set up\ndriver was trying to free misc IRQ vectors in\ni40e_clear_interrupt_scheme and produced a kernel Oops:\n\n   Trying to free already-free IRQ 266\n   WARNING: CPU: 0 PID: 5 at kernel/irq/manage.c:1731 __free_irq+0x9a/0x300\n   Workqueue: events work_for_cpu_fn\n   RIP: 0010:__free_irq+0x9a/0x300\n   Call Trace:\n   ? synchronize_irq+0x3a/0xa0\n   free_irq+0x2e/0x60\n   i40e_clear_interrupt_scheme+0x53/0x190 [i40e]\n   i40e_probe.part.108+0x134b/0x1a40 [i40e]\n   ? kmem_cache_alloc+0x158/0x1c0\n   ? acpi_ut_update_ref_count.part.1+0x8e/0x345\n   ? acpi_ut_update_object_reference+0x15e/0x1e2\n   ? strstr+0x21/0x70\n   ? irq_get_irq_data+0xa/0x20\n   ? mp_check_pin_attr+0x13/0xc0\n   ? irq_get_irq_data+0xa/0x20\n   ? mp_map_pin_to_irq+0xd3/0x2f0\n   ? acpi_register_gsi_ioapic+0x93/0x170\n   ? pci_conf1_read+0xa4/0x100\n   ? pci_bus_read_config_word+0x49/0x70\n   ? do_pci_enable_device+0xcc/0x100\n   local_pci_probe+0x41/0x90\n   work_for_cpu_fn+0x16/0x20\n   process_one_work+0x1a7/0x360\n   worker_thread+0x1cf/0x390\n   ? create_worker+0x1a0/0x1a0\n   kthread+0x112/0x130\n   ? kthread_flush_work_fn+0x10/0x10\n   ret_from_fork+0x1f/0x40\n\nThe problem is that at that point misc IRQ vectors\nwere not allocated yet and we get a call trace\nthat driver is trying to free already free IRQ vectors.\n\nAdd a check in i40e_clear_interrupt_scheme for __I40E_MISC_IRQ_REQUESTED\nPF state before calling i40e_free_misc_vector. This state is set only if\nmisc IRQ vectors were properly initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47431",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: fix gart.bo pin_count leak\n\ngmc_v{9,10}_0_gart_disable() isn't called matched with\ncorrespoding gart_enbale function in SRIOV case. This will\nlead to gart.bo pin_count leak on driver unload.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47434",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxhci: Fix command ring pointer corruption while aborting a command\n\nThe command ring pointer is located at [6:63] bits of the command\nring control register (CRCR). All the control bits like command stop,\nabort are located at [0:3] bits. While aborting a command, we read the\nCRCR and set the abort bit and write to the CRCR. The read will always\ngive command ring pointer as all zeros. So we essentially write only\nthe control bits. Since we split the 64 bit write into two 32 bit writes,\nthere is a possibility of xHC command ring stopped before the upper\ndword (all zeros) is written. If that happens, xHC updates the upper\ndword of its internal command ring pointer with all zeros. Next time,\nwhen the command ring is restarted, we see xHC memory access failures.\nFix this issue by only writing to the lower dword of CRCR where all\ncontrol bits are located.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47435",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm: fix mempool NULL pointer race when completing IO\n\ndm_io_dec_pending() calls end_io_acct() first and will then dec md\nin-flight pending count. But if a task is swapping DM table at same\ntime this can result in a crash due to mempool-\u003eelements being NULL:\n\ntask1                             task2\ndo_resume\n -\u003edo_suspend\n  -\u003edm_wait_for_completion\n                                  bio_endio\n\t\t\t\t   -\u003eclone_endio\n\t\t\t\t    -\u003edm_io_dec_pending\n\t\t\t\t     -\u003eend_io_acct\n\t\t\t\t      -\u003ewakeup task1\n -\u003edm_swap_table\n  -\u003e__bind\n   -\u003e__bind_mempools\n    -\u003ebioset_exit\n     -\u003emempool_exit\n                                     -\u003efree_io\n\n[ 67.330330] Unable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000000\n......\n[ 67.330494] pstate: 80400085 (Nzcv daIf +PAN -UAO)\n[ 67.330510] pc : mempool_free+0x70/0xa0\n[ 67.330515] lr : mempool_free+0x4c/0xa0\n[ 67.330520] sp : ffffff8008013b20\n[ 67.330524] x29: ffffff8008013b20 x28: 0000000000000004\n[ 67.330530] x27: ffffffa8c2ff40a0 x26: 00000000ffff1cc8\n[ 67.330535] x25: 0000000000000000 x24: ffffffdada34c800\n[ 67.330541] x23: 0000000000000000 x22: ffffffdada34c800\n[ 67.330547] x21: 00000000ffff1cc8 x20: ffffffd9a1304d80\n[ 67.330552] x19: ffffffdada34c970 x18: 000000b312625d9c\n[ 67.330558] x17: 00000000002dcfbf x16: 00000000000006dd\n[ 67.330563] x15: 000000000093b41e x14: 0000000000000010\n[ 67.330569] x13: 0000000000007f7a x12: 0000000034155555\n[ 67.330574] x11: 0000000000000001 x10: 0000000000000001\n[ 67.330579] x9 : 0000000000000000 x8 : 0000000000000000\n[ 67.330585] x7 : 0000000000000000 x6 : ffffff80148b5c1a\n[ 67.330590] x5 : ffffff8008013ae0 x4 : 0000000000000001\n[ 67.330596] x3 : ffffff80080139c8 x2 : ffffff801083bab8\n[ 67.330601] x1 : 0000000000000000 x0 : ffffffdada34c970\n[ 67.330609] Call trace:\n[ 67.330616] mempool_free+0x70/0xa0\n[ 67.330627] bio_put+0xf8/0x110\n[ 67.330638] dec_pending+0x13c/0x230\n[ 67.330644] clone_endio+0x90/0x180\n[ 67.330649] bio_endio+0x198/0x1b8\n[ 67.330655] dec_pending+0x190/0x230\n[ 67.330660] clone_endio+0x90/0x180\n[ 67.330665] bio_endio+0x198/0x1b8\n[ 67.330673] blk_update_request+0x214/0x428\n[ 67.330683] scsi_end_request+0x2c/0x300\n[ 67.330688] scsi_io_completion+0xa0/0x710\n[ 67.330695] scsi_finish_command+0xd8/0x110\n[ 67.330700] scsi_softirq_done+0x114/0x148\n[ 67.330708] blk_done_softirq+0x74/0xd0\n[ 67.330716] __do_softirq+0x18c/0x374\n[ 67.330724] irq_exit+0xb4/0xb8\n[ 67.330732] __handle_domain_irq+0x84/0xc0\n[ 67.330737] gic_handle_irq+0x148/0x1b0\n[ 67.330744] el1_irq+0xe8/0x190\n[ 67.330753] lpm_cpuidle_enter+0x4f8/0x538\n[ 67.330759] cpuidle_enter_state+0x1fc/0x398\n[ 67.330764] cpuidle_enter+0x18/0x20\n[ 67.330772] do_idle+0x1b4/0x290\n[ 67.330778] cpu_startup_entry+0x20/0x28\n[ 67.330786] secondary_start_kernel+0x160/0x170\n\nFix this by:\n1) Establishing pointers to 'struct dm_io' members in\ndm_io_dec_pending() so that they may be passed into end_io_acct()\n_after_ free_io() is called.\n2) Moving end_io_acct() after free_io().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47436",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: musb: dsps: Fix the probe error path\n\nCommit 7c75bde329d7 (\"usb: musb: musb_dsps: request_irq() after\ninitializing musb\") has inverted the calls to\ndsps_setup_optional_vbus_irq() and dsps_create_musb_pdev() without\nupdating correctly the error path. dsps_create_musb_pdev() allocates and\nregisters a new platform device which must be unregistered and freed\nwith platform_device_unregister(), and this is missing upon\ndsps_setup_optional_vbus_irq() error.\n\nWhile on the master branch it seems not to trigger any issue, I observed\na kernel crash because of a NULL pointer dereference with a v5.10.70\nstable kernel where the patch mentioned above was backported. With this\nkernel version, -EPROBE_DEFER is returned the first time\ndsps_setup_optional_vbus_irq() is called which triggers the probe to\nerror out without unregistering the platform device. Unfortunately, on\nthe Beagle Bone Black Wireless, the platform device still living in the\nsystem is being used by the USB Ethernet gadget driver, which during the\nboot phase triggers the crash.\n\nMy limited knowledge of the musb world prevents me to revert this commit\nwhich was sent to silence a robot warning which, as far as I understand,\ndoes not make sense. The goal of this patch was to prevent an IRQ to\nfire before the platform device being registered. I think this cannot\never happen due to the fact that enabling the interrupts is done by the\n-\u003eenable() callback of the platform musb device, and this platform\ndevice must be already registered in order for the core or any other\nuser to use this callback.\n\nHence, I decided to fix the error path, which might prevent future\nerrors on mainline kernels while also fixing older ones.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47438",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix memory leak in mlx5_core_destroy_cq() error path\n\nPrior to this patch in case mlx5_core_destroy_cq() failed it returns\nwithout completing all destroy operations and that leads to memory leak.\nInstead, complete the destroy flow before return error.\n\nAlso move mlx5_debug_cq_remove() to the beginning of mlx5_core_destroy_cq()\nto be symmetrical with mlx5_core_create_cq().\n\nkmemleak complains on:\n\nunreferenced object 0xc000000038625100 (size 64):\n  comm \"ethtool\", pid 28301, jiffies 4298062946 (age 785.380s)\n  hex dump (first 32 bytes):\n    60 01 48 94 00 00 00 c0 b8 05 34 c3 00 00 00 c0  `.H.......4.....\n    02 00 00 00 00 00 00 00 00 db 7d c1 00 00 00 c0  ..........}.....\n  backtrace:\n    [\u003c000000009e8643cb\u003e] add_res_tree+0xd0/0x270 [mlx5_core]\n    [\u003c00000000e7cb8e6c\u003e] mlx5_debug_cq_add+0x5c/0xc0 [mlx5_core]\n    [\u003c000000002a12918f\u003e] mlx5_core_create_cq+0x1d0/0x2d0 [mlx5_core]\n    [\u003c00000000cef0a696\u003e] mlx5e_create_cq+0x210/0x3f0 [mlx5_core]\n    [\u003c000000009c642c26\u003e] mlx5e_open_cq+0xb4/0x130 [mlx5_core]\n    [\u003c0000000058dfa578\u003e] mlx5e_ptp_open+0x7f4/0xe10 [mlx5_core]\n    [\u003c0000000081839561\u003e] mlx5e_open_channels+0x9cc/0x13e0 [mlx5_core]\n    [\u003c0000000009cf05d4\u003e] mlx5e_switch_priv_channels+0xa4/0x230\n[mlx5_core]\n    [\u003c0000000042bbedd8\u003e] mlx5e_safe_switch_params+0x14c/0x300\n[mlx5_core]\n    [\u003c0000000004bc9db8\u003e] set_pflag_tx_port_ts+0x9c/0x160 [mlx5_core]\n    [\u003c00000000a0553443\u003e] mlx5e_set_priv_flags+0xd0/0x1b0 [mlx5_core]\n    [\u003c00000000a8f3d84b\u003e] ethnl_set_privflags+0x234/0x2d0\n    [\u003c00000000fd27f27c\u003e] genl_family_rcv_msg_doit+0x108/0x1d0\n    [\u003c00000000f495e2bb\u003e] genl_family_rcv_msg+0xe4/0x1f0\n    [\u003c00000000646c5c2c\u003e] genl_rcv_msg+0x78/0x120\n    [\u003c00000000d53e384e\u003e] netlink_rcv_skb+0x74/0x1a0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47445",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm: Fix null pointer dereference on pointer edp\n\nThe initialization of pointer dev dereferences pointer edp before\nedp is null checked, so there is a potential null pointer deference\nissue. Fix this by only dereferencing edp after edp has been null\nchecked.\n\nAddresses-Coverity: (\"Dereference before null check\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47456",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: peak_pci: peak_pci_remove(): fix UAF\n\nWhen remove the module peek_pci, referencing 'chan' again after\nreleasing 'dev' will cause UAF.\n\nFix this by releasing 'dev' later.\n\nThe following log reveals it:\n\n[   35.961814 ] BUG: KASAN: use-after-free in peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.963414 ] Read of size 8 at addr ffff888136998ee8 by task modprobe/5537\n[   35.965513 ] Call Trace:\n[   35.965718 ]  dump_stack_lvl+0xa8/0xd1\n[   35.966028 ]  print_address_description+0x87/0x3b0\n[   35.966420 ]  kasan_report+0x172/0x1c0\n[   35.966725 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.967137 ]  ? trace_irq_enable_rcuidle+0x10/0x170\n[   35.967529 ]  ? peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.967945 ]  __asan_report_load8_noabort+0x14/0x20\n[   35.968346 ]  peak_pci_remove+0x16f/0x270 [peak_pci]\n[   35.968752 ]  pci_device_remove+0xa9/0x250",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47458",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: mount fails with buffer overflow in strlen\n\nStarting with kernel 5.11 built with CONFIG_FORTIFY_SOURCE mouting an\nocfs2 filesystem with either o2cb or pcmk cluster stack fails with the\ntrace below.  Problem seems to be that strings for cluster stack and\ncluster name are not guaranteed to be null terminated in the disk\nrepresentation, while strlcpy assumes that the source string is always\nnull terminated.  This causes a read outside of the source string\ntriggering the buffer overflow detection.\n\n  detected buffer overflow in strlen\n  ------------[ cut here ]------------\n  kernel BUG at lib/string.c:1149!\n  invalid opcode: 0000 [#1] SMP PTI\n  CPU: 1 PID: 910 Comm: mount.ocfs2 Not tainted 5.14.0-1-amd64 #1\n    Debian 5.14.6-2\n  RIP: 0010:fortify_panic+0xf/0x11\n  ...\n  Call Trace:\n   ocfs2_initialize_super.isra.0.cold+0xc/0x18 [ocfs2]\n   ocfs2_fill_super+0x359/0x19b0 [ocfs2]\n   mount_bdev+0x185/0x1b0\n   legacy_get_tree+0x27/0x40\n   vfs_get_tree+0x25/0xb0\n   path_mount+0x454/0xa20\n   __x64_sys_mount+0x103/0x140\n   do_syscall_64+0x3b/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47460",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix data corruption after conversion from inline format\n\nCommit 6dbf7bb55598 (\"fs: Don't invalidate page buffers in\nblock_write_full_page()\") uncovered a latent bug in ocfs2 conversion\nfrom inline inode format to a normal inode format.\n\nThe code in ocfs2_convert_inline_data_to_extents() attempts to zero out\nthe whole cluster allocated for file data by grabbing, zeroing, and\ndirtying all pages covering this cluster.  However these pages are\nbeyond i_size, thus writeback code generally ignores these dirty pages\nand no blocks were ever actually zeroed on the disk.\n\nThis oversight was fixed by commit 693c241a5f6a (\"ocfs2: No need to zero\npages past i_size.\") for standard ocfs2 write path, inline conversion\npath was apparently forgotten; the commit log also has a reasoning why\nthe zeroing actually is not needed.\n\nAfter commit 6dbf7bb55598, things became worse as writeback code stopped\ninvalidating buffers on pages beyond i_size and thus these pages end up\nwith clean PageDirty bit but with buffers attached to these pages being\nstill dirty.  So when a file is converted from inline format, then\nwriteback triggers, and then the file is grown so that these pages\nbecome valid, the invalid dirtiness state is preserved,\nmark_buffer_dirty() does nothing on these pages (buffers are already\ndirty) but page is never written back because it is clean.  So data\nwritten to these pages is lost once pages are reclaimed.\n\nSimple reproducer for the problem is:\n\n  xfs_io -f -c \"pwrite 0 2000\" -c \"pwrite 2000 2000\" -c \"fsync\" \\\n    -c \"pwrite 4000 2000\" ocfs2_file\n\nAfter unmounting and mounting the fs again, you can observe that end of\n'ocfs2_file' has lost its contents.\n\nFix the problem by not doing the pointless zeroing during conversion\nfrom inline format similarly as in the standard write path.\n\n[akpm@linux-foundation.org: fix whitespace, per Joseph]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47469",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47472",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47473",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix a memory leak in an error path of qla2x00_process_els()\n\nCommit 8c0eb596baa5 (\"[SCSI] qla2xxx: Fix a memory leak in an error path of\nqla2x00_process_els()\"), intended to change:\n\n        bsg_job-\u003erequest-\u003emsgcode == FC_BSG_HST_ELS_NOLOGIN\n\n\n        bsg_job-\u003erequest-\u003emsgcode != FC_BSG_RPT_ELS\n\nbut changed it to:\n\n        bsg_job-\u003erequest-\u003emsgcode == FC_BSG_RPT_ELS\n\ninstead.\n\nChange the == to a != to avoid leaking the fcport structure or freeing\nunallocated memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47478",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nisofs: Fix out of bound access for corrupted isofs image\n\nWhen isofs image is suitably corrupted isofs_read_inode() can read data\nbeyond the end of buffer. Sanity-check the directory entry length before\nusing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47480",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Put LLD module refcnt after SCSI device is released\n\nSCSI host release is triggered when SCSI device is freed. We have to make\nsure that the low-level device driver module won't be unloaded before SCSI\nhost instance is released because shost-\u003ehostt is required in the release\nhandler.\n\nMake sure to put LLD module refcnt after SCSI device is released.\n\nFixes a kernel panic of 'BUG: unable to handle page fault for address'\nreported by Changhui and Yi.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47483",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregmap: Fix possible double-free in regcache_rbtree_exit()\n\nIn regcache_rbtree_insert_to_block(), when 'present' realloc failed,\nthe 'blk' which is supposed to assign to 'rbnode-\u003eblock' will be freed,\nso 'rbnode-\u003eblock' points a freed memory, in the error handling path of\nregcache_rbtree_init(), 'rbnode-\u003eblock' will be freed again in\nregcache_rbtree_exit(), KASAN will report double-free as follows:\n\nBUG: KASAN: double-free or invalid-free in kfree+0xce/0x390\nCall Trace:\n slab_free_freelist_hook+0x10d/0x240\n kfree+0xce/0x390\n regcache_rbtree_exit+0x15d/0x1a0\n regcache_rbtree_init+0x224/0x2c0\n regcache_init+0x88d/0x1310\n __regmap_init+0x3151/0x4a80\n __devm_regmap_init+0x7d/0x100\n madera_spi_probe+0x10f/0x333 [madera_spi]\n spi_probe+0x183/0x210\n really_probe+0x285/0xc30\n\nTo fix this, moving up the assignment of rbnode-\u003eblock to immediately after\nthe reallocation has succeeded so that the data structure stays valid even\nif the second reallocation fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47485",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/qib: Protect from buffer overflow in struct qib_user_sdma_pkt fields\n\nOverflowing either addrlimit or bytes_togo can allow userspace to trigger\na buffer overflow of kernel memory. Check for overflows in all the places\ndoing math on user controlled buffers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47495",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: sanity check for maxpacket\n\nmaxpacket of 0 makes no sense and oopses as we need to divide\nby it. Give up.\n\nV2: fixed typo in log and stylistic issues",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47496",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/tls: Fix flipped sign in tls_err_abort() calls\n\nsk-\u003esk_err appears to expect a positive value, a convention that ktls\ndoesn't always follow and that leads to memory corruption in other code.\nFor instance,\n\n    [kworker]\n    tls_encrypt_done(..., err=\u003cnegative error from crypto request\u003e)\n      tls_err_abort(.., err)\n        sk-\u003esk_err = err;\n\n    [task]\n    splice_from_pipe_feed\n      ...\n        tls_sw_do_sendpage\n          if (sk-\u003esk_err) {\n            ret = -sk-\u003esk_err;  // ret is positive\n\n    splice_from_pipe_feed (continued)\n      ret = actor(...)  // ret is still positive and interpreted as bytes\n                        // written, resulting in underflow of buf-\u003elen and\n                        // sd-\u003elen, leading to huge buf-\u003eoffset and bogus\n                        // addresses computed in later calls to actor()\n\nFix all tls_err_abort() callers to pass a negative error code\nconsistently and centralize the error-prone sign flip there, throwing in\na warning to catch future misuse and uninlining the function so it\nreally does only warn once.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47497",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmem: Fix shift-out-of-bound (UBSAN) with byte size cells\n\nIf a cell has 'nbits' equal to a multiple of BITS_PER_BYTE the logic\n\n *p \u0026= GENMASK((cell-\u003enbits%BITS_PER_BYTE) - 1, 0);\n\nwill become undefined behavior because nbits modulo BITS_PER_BYTE is 0, and we\nsubtract one from that making a large number that is then shifted more than the\nnumber of bits that fit into an unsigned long.\n\nUBSAN reports this problem:\n\n UBSAN: shift-out-of-bounds in drivers/nvmem/core.c:1386:8\n shift exponent 64 is too large for 64-bit type 'unsigned long'\n CPU: 6 PID: 7 Comm: kworker/u16:0 Not tainted 5.15.0-rc3+ #9\n Hardware name: Google Lazor (rev3+) with KB Backlight (DT)\n Workqueue: events_unbound deferred_probe_work_func\n Call trace:\n  dump_backtrace+0x0/0x170\n  show_stack+0x24/0x30\n  dump_stack_lvl+0x64/0x7c\n  dump_stack+0x18/0x38\n  ubsan_epilogue+0x10/0x54\n  __ubsan_handle_shift_out_of_bounds+0x180/0x194\n  __nvmem_cell_read+0x1ec/0x21c\n  nvmem_cell_read+0x58/0x94\n  nvmem_cell_read_variable_common+0x4c/0xb0\n  nvmem_cell_read_variable_le_u32+0x40/0x100\n  a6xx_gpu_init+0x170/0x2f4\n  adreno_bind+0x174/0x284\n  component_bind_all+0xf0/0x264\n  msm_drm_bind+0x1d8/0x7a0\n  try_to_bring_up_master+0x164/0x1ac\n  __component_add+0xbc/0x13c\n  component_add+0x20/0x2c\n  dp_display_probe+0x340/0x384\n  platform_probe+0xc0/0x100\n  really_probe+0x110/0x304\n  __driver_probe_device+0xb8/0x120\n  driver_probe_device+0x4c/0xfc\n  __device_attach_driver+0xb0/0x128\n  bus_for_each_drv+0x90/0xdc\n  __device_attach+0xc8/0x174\n  device_initial_probe+0x20/0x2c\n  bus_probe_device+0x40/0xa4\n  deferred_probe_work_func+0x7c/0xb8\n  process_one_work+0x128/0x21c\n  process_scheduled_works+0x40/0x54\n  worker_thread+0x1ec/0x2a8\n  kthread+0x138/0x158\n  ret_from_fork+0x10/0x20\n\nFix it by making sure there are any bits to mask out.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47498",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm rq: don't queue request to blk-mq during DM suspend\n\nDM uses blk-mq's quiesce/unquiesce to stop/start device mapper queue.\n\nBut blk-mq's unquiesce may come from outside events, such as elevator\nswitch, updating nr_requests or others, and request may come during\nsuspend, so simply ask for blk-mq to requeue it.\n\nFixes one kernel panic issue when running updating nr_requests and\ndm-mpath suspend/resume stress test.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47500",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: mma8452: Fix trigger reference couting\n\nThe mma8452 driver directly assigns a trigger to the struct iio_dev. The\nIIO core when done using this trigger will call `iio_trigger_put()` to drop\nthe reference count by 1.\n\nWithout the matching `iio_trigger_get()` in the driver the reference count\ncan reach 0 too early, the trigger gets freed while still in use and a\nuse-after-free occurs.\n\nFix this by getting a reference to the trigger before assigning it to the\nIIO device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47506",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix use-after-free due to delegation race\n\nA delegation break could arrive as soon as we've called vfs_setlease.  A\ndelegation break runs a callback which immediately (in\nnfsd4_cb_recall_prepare) adds the delegation to del_recall_lru.  If we\nthen exit nfs4_set_delegation without hashing the delegation, it will be\nfreed as soon as the callback is done with it, without ever being\nremoved from del_recall_lru.\n\nSymptoms show up later as use-after-free or list corruption warnings,\nusually in the laundromat thread.\n\nI suspect aba2072f4523 \"nfsd: grant read delegations to clients holding\nwrites\" made this bug easier to hit, but I looked as far back as v3.0\nand it looks to me it already had the same problem.  So I'm not sure\nwhere the bug was introduced; it may have been there from the beginning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47509",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: oss: Limit the period size to 16MB\n\nSet the practical limit to the period size (the fragment shift in OSS)\ninstead of a full 31bit; a too large value could lead to the exhaust\nof memory as we allocate temporary buffers of the period size, too.\n\nAs of this patch, we set to 16MB limit, which should cover all use\ncases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47511",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: oss: Fix negative period/buffer sizes\n\nThe period size calculation in OSS layer may receive a negative value\nas an error, but the code there assumes only the positive values and\nhandle them with size_t.  Due to that, a too big value may be passed\nto the lower layers.\n\nThis patch changes the code to handle with ssize_t and adds the proper\nerror checks appropriately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47518",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: fix potential NULL pointer deref in nfc_genl_dump_ses_done\n\nThe done() netlink callback nfc_genl_dump_ses_done() should check if\nreceived argument is non-NULL, because its allocation could fail earlier\nin dumpit() (nfc_genl_dump_ses()).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47520",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: pch_can: pch_can_rx_normal: fix use after free\n\nAfter calling netif_receive_skb(skb), dereferencing skb is unsafe.\nEspecially, the can_frame cf which aliases skb memory is dereferenced\njust after the call netif_receive_skb(skb).\n\nReordering the lines solves the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47523",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix leak of rcvhdrtail_dummy_kvaddr\n\nThis buffer is currently allocated in hfi1_init():\n\n\tif (reinit)\n\t\tret = init_after_reset(dd);\n\telse\n\t\tret = loadtime_init(dd);\n\tif (ret)\n\t\tgoto done;\n\n\t/* allocate dummy tail memory for all receive contexts */\n\tdd-\u003ercvhdrtail_dummy_kvaddr = dma_alloc_coherent(\u0026dd-\u003epcidev-\u003edev,\n\t\t\t\t\t\t\t sizeof(u64),\n\t\t\t\t\t\t\t \u0026dd-\u003ercvhdrtail_dummy_dma,\n\t\t\t\t\t\t\t GFP_KERNEL);\n\n\tif (!dd-\u003ercvhdrtail_dummy_kvaddr) {\n\t\tdd_dev_err(dd, \"cannot allocate dummy tail memory\\n\");\n\t\tret = -ENOMEM;\n\t\tgoto done;\n\t}\n\nThe reinit triggered path will overwrite the old allocation and leak it.\n\nFix by moving the allocation to hfi1_alloc_devdata() and the deallocation\nto hfi1_free_devdata().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47541",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx4_en: Fix an use-after-free bug in mlx4_en_try_alloc_resources()\n\nIn mlx4_en_try_alloc_resources(), mlx4_en_copy_priv() is called and\ntmp-\u003etx_cq will be freed on the error path of mlx4_en_copy_priv().\nAfter that mlx4_en_alloc_resources() is called and there is a dereference\nof \u0026tmp-\u003etx_cq[t][i] in mlx4_en_alloc_resources(), which could lead to\na use after free problem on failure of mlx4_en_copy_priv().\n\nFix this bug by adding a check of mlx4_en_copy_priv()\n\nThis bug was found by a static analyzer. The analysis employs\ndifferential checking to identify inconsistent security operations\n(e.g., checks or kfrees) between two code paths and confirms that the\ninconsistent operations are not recovered in the current function or\nthe callers, so they constitute bugs.\n\nNote that, as a bug found by static analysis, it can be a false\npositive or hard to trigger. Multiple researchers have cross-reviewed\nthe bug.\n\nBuilds with CONFIG_MLX4_EN=m show no new warnings,\nand our static analyzer no longer warns about this code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47544",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: fix page frag corruption on page fault\n\nSteffen reported a TCP stream corruption for HTTP requests\nserved by the apache web-server using a cifs mount-point\nand memory mapping the relevant file.\n\nThe root cause is quite similar to the one addressed by\ncommit 20eb4f29b602 (\"net: fix sk_page_frag() recursion from\nmemory reclaim\"). Here the nested access to the task page frag\nis caused by a page fault on the (mmapped) user-space memory\nbuffer coming from the cifs file.\n\nThe page fault handler performs an smb transaction on a different\nsocket, inside the same process context. Since sk-\u003esk_allaction\nfor such socket does not prevent the usage for the task_frag,\nthe nested allocation modify \"under the hood\" the page frag\nin use by the outer sendmsg call, corrupting the stream.\n\nThe overall relevant stack trace looks like the following:\n\nhttpd 78268 [001] 3461630.850950:      probe:tcp_sendmsg_locked:\n        ffffffff91461d91 tcp_sendmsg_locked+0x1\n        ffffffff91462b57 tcp_sendmsg+0x27\n        ffffffff9139814e sock_sendmsg+0x3e\n        ffffffffc06dfe1d smb_send_kvec+0x28\n        [...]\n        ffffffffc06cfaf8 cifs_readpages+0x213\n        ffffffff90e83c4b read_pages+0x6b\n        ffffffff90e83f31 __do_page_cache_readahead+0x1c1\n        ffffffff90e79e98 filemap_fault+0x788\n        ffffffff90eb0458 __do_fault+0x38\n        ffffffff90eb5280 do_fault+0x1a0\n        ffffffff90eb7c84 __handle_mm_fault+0x4d4\n        ffffffff90eb8093 handle_mm_fault+0xc3\n        ffffffff90c74f6d __do_page_fault+0x1ed\n        ffffffff90c75277 do_page_fault+0x37\n        ffffffff9160111e page_fault+0x1e\n        ffffffff9109e7b5 copyin+0x25\n        ffffffff9109eb40 _copy_from_iter_full+0xe0\n        ffffffff91462370 tcp_sendmsg_locked+0x5e0\n        ffffffff91462370 tcp_sendmsg_locked+0x5e0\n        ffffffff91462b57 tcp_sendmsg+0x27\n        ffffffff9139815c sock_sendmsg+0x4c\n        ffffffff913981f7 sock_write_iter+0x97\n        ffffffff90f2cc56 do_iter_readv_writev+0x156\n        ffffffff90f2dff0 do_iter_write+0x80\n        ffffffff90f2e1c3 vfs_writev+0xa3\n        ffffffff90f2e27c do_writev+0x5c\n        ffffffff90c042bb do_syscall_64+0x5b\n        ffffffff916000ad entry_SYSCALL_64_after_hwframe+0x65\n\nThe cifs filesystem rightfully sets sk_allocations to GFP_NOFS,\nwe can avoid the nesting using the sk page frag for allocation\nlacking the __GFP_FS flag. Do not define an additional mm-helper\nfor that, as this is strictly tied to the sk page frag usage.\n\nv1 -\u003e v2:\n - use a stricted sk_page_frag() check instead of reordering the\n   code (Eric)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47547",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tulip: de4x5: fix the problem that the array 'lp-\u003ephy[8]' may be out of bound\n\nIn line 5001, if all id in the array 'lp-\u003ephy[8]' is not 0, when the\n'for' end, the 'k' is 8.\n\nAt this time, the array 'lp-\u003ephy[8]' may be out of bound.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47548",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethernet: hisilicon: hns: hns_dsaf_misc: fix a possible array overflow in hns_dsaf_ge_srst_by_port()\n\nThe if statement:\n  if (port \u003e= DSAF_GE_NUM)\n        return;\n\nlimits the value of port less than DSAF_GE_NUM (i.e., 8).\nHowever, if the value of port is 6 or 7, an array overflow could occur:\n  port_rst_off = dsaf_dev-\u003emac_cb[port]-\u003eport_rst_off;\n\nbecause the length of dsaf_dev-\u003emac_cb is DSAF_MAX_PORT_NUM (i.e., 6).\n\nTo fix this possible array overflow, we first check port and if it is\ngreater than or equal to DSAF_MAX_PORT_NUM, the function returns.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47565",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Fix kernel panic during drive powercycle test\n\nWhile looping over shost's sdev list it is possible that one\nof the drives is getting removed and its sas_target object is\nfreed but its sdev object remains intact.\n\nConsequently, a kernel panic can occur while the driver is trying to access\nthe sas_address field of sas_target object without also checking the\nsas_target object for NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47566",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nproc/vmcore: fix clearing user buffer by properly using clear_user()\n\nTo clear a user buffer we cannot simply use memset, we have to use\nclear_user().  With a virtio-mem device that registers a vmcore_cb and\nhas some logically unplugged memory inside an added Linux memory block,\nI can easily trigger a BUG by copying the vmcore via \"cp\":\n\n  systemd[1]: Starting Kdump Vmcore Save Service...\n  kdump[420]: Kdump is using the default log level(3).\n  kdump[453]: saving to /sysroot/var/crash/127.0.0.1-2021-11-11-14:59:22/\n  kdump[458]: saving vmcore-dmesg.txt to /sysroot/var/crash/127.0.0.1-2021-11-11-14:59:22/\n  kdump[465]: saving vmcore-dmesg.txt complete\n  kdump[467]: saving vmcore\n  BUG: unable to handle page fault for address: 00007f2374e01000\n  #PF: supervisor write access in kernel mode\n  #PF: error_code(0x0003) - permissions violation\n  PGD 7a523067 P4D 7a523067 PUD 7a528067 PMD 7a525067 PTE 800000007048f867\n  Oops: 0003 [#1] PREEMPT SMP NOPTI\n  CPU: 0 PID: 468 Comm: cp Not tainted 5.15.0+ #6\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.14.0-27-g64f37cc530f1-prebuilt.qemu.org 04/01/2014\n  RIP: 0010:read_from_oldmem.part.0.cold+0x1d/0x86\n  Code: ff ff ff e8 05 ff fe ff e9 b9 e9 7f ff 48 89 de 48 c7 c7 38 3b 60 82 e8 f1 fe fe ff 83 fd 08 72 3c 49 8d 7d 08 4c 89 e9 89 e8 \u003c49\u003e c7 45 00 00 00 00 00 49 c7 44 05 f8 00 00 00 00 48 83 e7 f81\n  RSP: 0018:ffffc9000073be08 EFLAGS: 00010212\n  RAX: 0000000000001000 RBX: 00000000002fd000 RCX: 00007f2374e01000\n  RDX: 0000000000000001 RSI: 00000000ffffdfff RDI: 00007f2374e01008\n  RBP: 0000000000001000 R08: 0000000000000000 R09: ffffc9000073bc50\n  R10: ffffc9000073bc48 R11: ffffffff829461a8 R12: 000000000000f000\n  R13: 00007f2374e01000 R14: 0000000000000000 R15: ffff88807bd421e8\n  FS:  00007f2374e12140(0000) GS:ffff88807f000000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f2374e01000 CR3: 000000007a4aa000 CR4: 0000000000350eb0\n  Call Trace:\n   read_vmcore+0x236/0x2c0\n   proc_reg_read+0x55/0xa0\n   vfs_read+0x95/0x190\n   ksys_read+0x4f/0xc0\n   do_syscall_64+0x3b/0x90\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nSome x86-64 CPUs have a CPU feature called \"Supervisor Mode Access\nPrevention (SMAP)\", which is used to detect wrong access from the kernel\nto user buffers like this: SMAP triggers a permissions violation on\nwrong access.  In the x86-64 variant of clear_user(), SMAP is properly\nhandled via clac()+stac().\n\nTo fix, properly use clear_user() when we're dealing with a user buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47571",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: rtl8192e: Fix use after free in _rtl92e_pci_disconnect()\n\nThe free_rtllib() function frees the \"dev\" pointer so there is use\nafter free on the next line.  Re-arrange things to avoid that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47576",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Sanity check block descriptor length in resp_mode_select()\n\nIn resp_mode_select() sanity check the block descriptor len to avoid UAF.\n\nBUG: KASAN: use-after-free in resp_mode_select+0xa4c/0xb40 drivers/scsi/scsi_debug.c:2509\nRead of size 1 at addr ffff888026670f50 by task scsicmd/15032\n\nCPU: 1 PID: 15032 Comm: scsicmd Not tainted 5.15.0-01d0625 #15\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x89/0xb5 lib/dump_stack.c:107\n print_address_description.constprop.9+0x28/0x160 mm/kasan/report.c:257\n kasan_report.cold.14+0x7d/0x117 mm/kasan/report.c:443\n __asan_report_load1_noabort+0x14/0x20 mm/kasan/report_generic.c:306\n resp_mode_select+0xa4c/0xb40 drivers/scsi/scsi_debug.c:2509\n schedule_resp+0x4af/0x1a10 drivers/scsi/scsi_debug.c:5483\n scsi_debug_queuecommand+0x8c9/0x1e70 drivers/scsi/scsi_debug.c:7537\n scsi_queue_rq+0x16b4/0x2d10 drivers/scsi/scsi_lib.c:1521\n blk_mq_dispatch_rq_list+0xb9b/0x2700 block/blk-mq.c:1640\n __blk_mq_sched_dispatch_requests+0x28f/0x590 block/blk-mq-sched.c:325\n blk_mq_sched_dispatch_requests+0x105/0x190 block/blk-mq-sched.c:358\n __blk_mq_run_hw_queue+0xe5/0x150 block/blk-mq.c:1762\n __blk_mq_delay_run_hw_queue+0x4f8/0x5c0 block/blk-mq.c:1839\n blk_mq_run_hw_queue+0x18d/0x350 block/blk-mq.c:1891\n blk_mq_sched_insert_request+0x3db/0x4e0 block/blk-mq-sched.c:474\n blk_execute_rq_nowait+0x16b/0x1c0 block/blk-exec.c:63\n sg_common_write.isra.18+0xeb3/0x2000 drivers/scsi/sg.c:837\n sg_new_write.isra.19+0x570/0x8c0 drivers/scsi/sg.c:775\n sg_ioctl_common+0x14d6/0x2710 drivers/scsi/sg.c:941\n sg_ioctl+0xa2/0x180 drivers/scsi/sg.c:1166\n __x64_sys_ioctl+0x19d/0x220 fs/ioctl.c:52\n do_syscall_64+0x3a/0x80 arch/x86/entry/common.c:50\n entry_SYSCALL_64_after_hwframe+0x44/0xae arch/x86/entry/entry_64.S:113",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47587",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: systemport: Add global locking for descriptor lifecycle\n\nThe descriptor list is a shared resource across all of the transmit queues, and\nthe locking mechanism used today only protects concurrency across a given\ntransmit queue between the transmit and reclaiming. This creates an opportunity\nfor the SYSTEMPORT hardware to work on corrupted descriptors if we have\nmultiple producers at once which is the case when using multiple transmit\nqueues.\n\nThis was particularly noticeable when using multiple flows/transmit queues and\nit showed up in interesting ways in that UDP packets would get a correct UDP\nheader checksum being calculated over an incorrect packet length. Similarly TCP\npackets would get an equally correct checksum computed by the hardware over an\nincorrect packet length.\n\nThe SYSTEMPORT hardware maintains an internal descriptor list that it re-arranges\nwhen the driver produces a new descriptor anytime it writes to the\nWRITE_PORT_{HI,LO} registers, there is however some delay in the hardware to\nre-organize its descriptors and it is possible that concurrent TX queues\neventually break this internal allocation scheme to the point where the\nlength/status part of the descriptor gets used for an incorrect data buffer.\n\nThe fix is to impose a global serialization for all TX queues in the short\nsection where we are writing to the WRITE_PORT_{HI,LO} registers which solves\nthe corruption even with multiple concurrent TX queues being used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47589",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigbvf: fix double free in `igbvf_probe`\n\nIn `igbvf_probe`, if register_netdev() fails, the program will go to\nlabel err_hw_init, and then to label err_ioremap. In free_netdev() which\nis just below label err_ioremap, there is `list_for_each_entry_safe` and\n`netif_napi_del` which aims to delete all entries in `dev-\u003enapi_list`.\nThe program has added an entry `adapter-\u003erx_ring-\u003enapi` which is added by\n`netif_napi_add` in igbvf_alloc_queues(). However, adapter-\u003erx_ring has\nbeen freed below label err_hw_init. So this a UAF.\n\nIn terms of how to patch the problem, we can refer to igbvf_remove() and\ndelete the entry before `adapter-\u003erx_ring`.\n\nThe KASAN logs are as follows:\n\n[   35.126075] BUG: KASAN: use-after-free in free_netdev+0x1fd/0x450\n[   35.127170] Read of size 8 at addr ffff88810126d990 by task modprobe/366\n[   35.128360]\n[   35.128643] CPU: 1 PID: 366 Comm: modprobe Not tainted 5.15.0-rc2+ #14\n[   35.129789] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n[   35.131749] Call Trace:\n[   35.132199]  dump_stack_lvl+0x59/0x7b\n[   35.132865]  print_address_description+0x7c/0x3b0\n[   35.133707]  ? free_netdev+0x1fd/0x450\n[   35.134378]  __kasan_report+0x160/0x1c0\n[   35.135063]  ? free_netdev+0x1fd/0x450\n[   35.135738]  kasan_report+0x4b/0x70\n[   35.136367]  free_netdev+0x1fd/0x450\n[   35.137006]  igbvf_probe+0x121d/0x1a10 [igbvf]\n[   35.137808]  ? igbvf_vlan_rx_add_vid+0x100/0x100 [igbvf]\n[   35.138751]  local_pci_probe+0x13c/0x1f0\n[   35.139461]  pci_device_probe+0x37e/0x6c0\n[   35.165526]\n[   35.165806] Allocated by task 366:\n[   35.166414]  ____kasan_kmalloc+0xc4/0xf0\n[   35.167117]  foo_kmem_cache_alloc_trace+0x3c/0x50 [igbvf]\n[   35.168078]  igbvf_probe+0x9c5/0x1a10 [igbvf]\n[   35.168866]  local_pci_probe+0x13c/0x1f0\n[   35.169565]  pci_device_probe+0x37e/0x6c0\n[   35.179713]\n[   35.179993] Freed by task 366:\n[   35.180539]  kasan_set_track+0x4c/0x80\n[   35.181211]  kasan_set_free_info+0x1f/0x40\n[   35.181942]  ____kasan_slab_free+0x103/0x140\n[   35.182703]  kfree+0xe3/0x250\n[   35.183239]  igbvf_probe+0x1173/0x1a10 [igbvf]\n[   35.184040]  local_pci_probe+0x13c/0x1f0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47600",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: fix use after free in rebalance_children()\n\nMove dm_tm_unlock() after dm_tm_dec().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47602",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: track only QoS data frames for admission control\n\nFor admission control, obviously all of that only works for\nQoS data frames, otherwise we cannot even access the QoS\nfield in the header.\n\nSyzbot reported (see below) an uninitialized value here due\nto a status of a non-QoS nullfunc packet, which isn't even\nlong enough to contain the QoS header.\n\nFix this to only do anything for QoS data packets.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47603",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naudit: improve robustness of the audit queue handling\n\nIf the audit daemon were ever to get stuck in a stopped state the\nkernel's kauditd_thread() could get blocked attempting to send audit\nrecords to the userspace audit daemon.  With the kernel thread\nblocked it is possible that the audit queue could grow unbounded as\ncertain audit record generating events must be exempt from the queue\nlimits else the system enter a deadlock state.\n\nThis patch resolves this problem by lowering the kernel thread's\nsocket sending timeout from MAX_SCHEDULE_TIMEOUT to HZ/10 and tweaks\nthe kauditd_send_queue() function to better manage the various audit\nqueues when connection problems occur between the kernel and the\naudit daemon.  With this patch, the backlog may temporarily grow\nbeyond the defined limits when the audit daemon is stopped and the\nsystem is under heavy audit pressure, but kauditd_thread() will\ncontinue to make progress and drain the queues as it would for other\nconnection problems.  For example, with the audit daemon put into a\nstopped state and the system configured to audit every syscall it\nwas still possible to shutdown the system without a kernel panic,\ndeadlock, etc.; granted, the system was slow to shutdown but that is\nto be expected given the extreme pressure of recording every syscall.\n\nThe timeout value of HZ/10 was chosen primarily through\nexperimentation and this developer's \"gut feeling\".  There is likely\nno one perfect value, but as this scenario is limited in scope (root\nprivileges would be needed to send SIGSTOP to the audit daemon), it\nis likely not worth exposing this as a tunable at present.  This can\nalways be done at a later date if it proves necessary.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47609",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scpi: Fix string overflow in SCPI genpd driver\n\nWithout the bound checks for scpi_pd-\u003ename, it could result in the buffer\noverflow when copying the SCPI device name from the corresponding device\ntree node as the name string is set at maximum size of 30.\n\nLet us fix it by using devm_kasprintf so that the string buffer is\nallocated dynamically.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47617",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: pciehp: Fix infinite loop in IRQ handler upon power fault\n\nThe Power Fault Detected bit in the Slot Status register differs from\nall other hotplug events in that it is sticky:  It can only be cleared\nafter turning off slot power.  Per PCIe r5.0, sec. 6.7.1.8:\n\n  If a power controller detects a main power fault on the hot-plug slot,\n  it must automatically set its internal main power fault latch [...].\n  The main power fault latch is cleared when software turns off power to\n  the hot-plug slot.\n\nThe stickiness used to cause interrupt storms and infinite loops which\nwere fixed in 2009 by commits 5651c48cfafe (\"PCI pciehp: fix power fault\ninterrupt storm problem\") and 99f0169c17f3 (\"PCI: pciehp: enable\nsoftware notification on empty slots\").\n\nUnfortunately in 2020 the infinite loop issue was inadvertently\nreintroduced by commit 8edf5332c393 (\"PCI: pciehp: Fix MSI interrupt\nrace\"):  The hardirq handler pciehp_isr() clears the PFD bit until\npciehp's power_fault_detected flag is set.  That happens in the IRQ\nthread pciehp_ist(), which never learns of the event because the hardirq\nhandler is stuck in an infinite loop.  Fix by setting the\npower_fault_detected flag already in the hardirq handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-0435",
      "Description": "A stack overflow flaw was found in the Linux kernel's TIPC protocol functionality in the way a user sends a packet with malicious content where the number of domain member nodes is higher than the 64 allowed. This flaw allows a remote user to crash the system or possibly escalate their privileges if they have access to the TIPC network.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "9",
        "Vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2022-0487",
      "Description": "A use-after-free vulnerability was found in rtsx_usb_ms_drv_remove in drivers/memstick/host/rtsx_usb_ms.c in memstick in the Linux kernel. In this flaw, a local attacker with a user privilege may impact system Confidentiality. This flaw affects kernel versions prior to 5.14 rc1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2022-22942",
      "Description": "The vmwgfx driver contains a local privilege escalation vulnerability that allows unprivileged users to gain access to files opened by other processes on the system through a dangling 'file' pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-25236",
      "Description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-28737",
      "Description": "There's a possible overflow in handle_image() when shim tries to load and execute crafted EFI executables; The handle_image() function takes into account the SizeOfRawData field from each section to be loaded. An attacker can leverage this to perform out-of-bound writes into memory. Arbitrary code execution is not discarded in such scenario.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48560",
      "Description": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-xml-2.7.18-33.35.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48619",
      "Description": "An issue was discovered in drivers/input/input.c in the Linux kernel before 5.17.10. An attacker can cause a denial of service (panic) because input_set_capability mishandles the situation in which an event code falls outside of a bitmap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48622",
      "Description": "In GNOME GdkPixbuf (aka gdk-pixbuf) through 2.42.10, the ANI (Windows animated cursor) decoder encounters heap memory corruption (in ani_load_chunk in io-ani.c) when parsing chunks in a crafted .ani file. A crafted file could allow an attacker to overwrite heap metadata, leading to a denial of service or code execution attack. This occurs in gdk_pixbuf_set_option() in gdk-pixbuf.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gdk-pixbuf-query-loaders-2.34.0-19.20.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libgdk_pixbuf-2_0-0-2.34.0-19.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48636",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: fix Oops in dasd_alias_get_start_dev due to missing pavgroup\n\nFix Oops in dasd_alias_get_start_dev() function caused by the pavgroup\npointer being NULL.\n\nThe pavgroup pointer is checked on the entrance of the function but\nwithout the lcu-\u003elock being held. Therefore there is a race window\nbetween dasd_alias_get_start_dev() and _lcu_update() which sets\npavgroup to NULL with the lcu-\u003elock held.\n\nFix by checking the pavgroup pointer with lcu-\u003elock held.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix memory leak in __qlt_24xx_handle_abts()\n\nCommit 8f394da36a36 (\"scsi: qla2xxx: Drop TARGET_SCF_LOOKUP_LUN_FROM_TAG\")\nmade the __qlt_24xx_handle_abts() function return early if\ntcm_qla2xxx_find_cmd_by_tag() didn't find a command, but it missed to clean\nup the allocated memory for the management command.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48651",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: Fix out-of-bound bugs caused by unset skb-\u003emac_header\n\nIf an AF_PACKET socket is used to send packets through ipvlan and the\ndefault xmit function of the AF_PACKET socket is changed from\ndev_queue_xmit() to packet_direct_xmit() via setsockopt() with the option\nname of PACKET_QDISC_BYPASS, the skb-\u003emac_header may not be reset and\nremains as the initial value of 65535, this may trigger slab-out-of-bounds\nbugs as following:\n\n=================================================================\nUG: KASAN: slab-out-of-bounds in ipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nPU: 2 PID: 1768 Comm: raw_send Kdump: loaded Not tainted 6.0.0-rc4+ #6\nardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33\nall Trace:\nprint_address_description.constprop.0+0x1d/0x160\nprint_report.cold+0x4f/0x112\nkasan_report+0xa3/0x130\nipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nipvlan_start_xmit+0x29/0xa0 [ipvlan]\n__dev_direct_xmit+0x2e2/0x380\npacket_direct_xmit+0x22/0x60\npacket_snd+0x7c9/0xc40\nsock_sendmsg+0x9a/0xa0\n__sys_sendto+0x18a/0x230\n__x64_sys_sendto+0x74/0x90\ndo_syscall_64+0x3b/0x90\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe root cause is:\n  1. packet_snd() only reset skb-\u003emac_header when sock-\u003etype is SOCK_RAW\n     and skb-\u003eprotocol is not specified as in packet_parse_headers()\n\n  2. packet_direct_xmit() doesn't reset skb-\u003emac_header as dev_queue_xmit()\n\nIn this case, skb-\u003emac_header is 65535 when ipvlan_xmit_mode_l2() is\ncalled. So when ipvlan_xmit_mode_l2() gets mac header with eth_hdr() which\nuse \"skb-\u003ehead + skb-\u003emac_header\", out-of-bound access occurs.\n\nThis patch replaces eth_hdr() with skb_eth_hdr() in ipvlan_xmit_mode_l2()\nand reset mac header in multicast to solve this out-of-bound bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48667",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix temporary data corruption in insert range\n\ninsert range doesn't discard the affected cached region\nso can risk temporarily corrupting file data.\n\nAlso includes some minor cleanup (avoiding rereading\ninode size repeatedly unnecessarily) to make it clearer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48668",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix temporary data corruption in collapse range\n\ncollapse range doesn't discard the affected cached region\nso can risk temporarily corrupting the file data. This\nfixes xfstest generic/031\n\nI also decided to merge a minor cleanup to this into the same patch\n(avoiding rereading inode size repeatedly unnecessarily) to make it\nclearer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48672",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: fdt: fix off-by-one error in unflatten_dt_nodes()\n\nCommit 78c44d910d3e (\"drivers/of: Fix depth when unflattening devicetree\")\nforgot to fix up the depth check in the loop body in unflatten_dt_nodes()\nwhich makes it possible to overflow the nps[] buffer...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48686",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: fix UAF when detecting digest errors\n\nWe should also bail from the io_work loop when we set rd_enabled to true,\nso we don't attempt to read data from the socket when the TCP stream is\nalready out-of-sync or corrupted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48688",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix kernel crash during module removal\n\nThe driver incorrectly frees client instance and subsequent\ni40e module removal leads to kernel crash.\n\nReproducer:\n1. Do ethtool offline test followed immediately by another one\nhost# ethtool -t eth0 offline; ethtool -t eth0 offline\n2. Remove recursively irdma module that also removes i40e module\nhost# modprobe -r irdma\n\nResult:\n[ 8675.035651] i40e 0000:3d:00.0 eno1: offline testing starting\n[ 8675.193774] i40e 0000:3d:00.0 eno1: testing finished\n[ 8675.201316] i40e 0000:3d:00.0 eno1: offline testing starting\n[ 8675.358921] i40e 0000:3d:00.0 eno1: testing finished\n[ 8675.496921] i40e 0000:3d:00.0: IRDMA hardware initialization FAILED init_state=2 status=-110\n[ 8686.188955] i40e 0000:3d:00.1: i40e_ptp_stop: removed PHC on eno2\n[ 8686.943890] i40e 0000:3d:00.1: Deleted LAN device PF1 bus=0x3d dev=0x00 func=0x01\n[ 8686.952669] i40e 0000:3d:00.0: i40e_ptp_stop: removed PHC on eno1\n[ 8687.761787] BUG: kernel NULL pointer dereference, address: 0000000000000030\n[ 8687.768755] #PF: supervisor read access in kernel mode\n[ 8687.773895] #PF: error_code(0x0000) - not-present page\n[ 8687.779034] PGD 0 P4D 0\n[ 8687.781575] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[ 8687.785935] CPU: 51 PID: 172891 Comm: rmmod Kdump: loaded Tainted: G        W I        5.19.0+ #2\n[ 8687.794800] Hardware name: Intel Corporation S2600WFD/S2600WFD, BIOS SE5C620.86B.0X.02.0001.051420190324 05/14/2019\n[ 8687.805222] RIP: 0010:i40e_lan_del_device+0x13/0xb0 [i40e]\n[ 8687.810719] Code: d4 84 c0 0f 84 b8 25 01 00 e9 9c 25 01 00 41 bc f4 ff ff ff eb 91 90 0f 1f 44 00 00 41 54 55 53 48 8b 87 58 08 00 00 48 89 fb \u003c48\u003e 8b 68 30 48 89 ef e8 21 8a 0f d5 48 89 ef e8 a9 78 0f d5 48 8b\n[ 8687.829462] RSP: 0018:ffffa604072efce0 EFLAGS: 00010202\n[ 8687.834689] RAX: 0000000000000000 RBX: ffff8f43833b2000 RCX: 0000000000000000\n[ 8687.841821] RDX: 0000000000000000 RSI: ffff8f4b0545b298 RDI: ffff8f43833b2000\n[ 8687.848955] RBP: ffff8f43833b2000 R08: 0000000000000001 R09: 0000000000000000\n[ 8687.856086] R10: 0000000000000000 R11: 000ffffffffff000 R12: ffff8f43833b2ef0\n[ 8687.863218] R13: ffff8f43833b2ef0 R14: ffff915103966000 R15: ffff8f43833b2008\n[ 8687.870342] FS:  00007f79501c3740(0000) GS:ffff8f4adffc0000(0000) knlGS:0000000000000000\n[ 8687.878427] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 8687.884174] CR2: 0000000000000030 CR3: 000000014276e004 CR4: 00000000007706e0\n[ 8687.891306] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 8687.898441] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 8687.905572] PKRU: 55555554\n[ 8687.908286] Call Trace:\n[ 8687.910737]  \u003cTASK\u003e\n[ 8687.912843]  i40e_remove+0x2c0/0x330 [i40e]\n[ 8687.917040]  pci_device_remove+0x33/0xa0\n[ 8687.920962]  device_release_driver_internal+0x1aa/0x230\n[ 8687.926188]  driver_detach+0x44/0x90\n[ 8687.929770]  bus_remove_driver+0x55/0xe0\n[ 8687.933693]  pci_unregister_driver+0x2a/0xb0\n[ 8687.937967]  i40e_exit_module+0xc/0xf48 [i40e]\n\nTwo offline tests cause IRDMA driver failure (ETIMEDOUT) and this\nfailure is indicated back to i40e_client_subtask() that calls\ni40e_client_del_instance() to free client instance referenced\nby pf-\u003ecinst and sets this pointer to NULL. During the module\nremoval i40e_remove() calls i40e_lan_del_device() that dereferences\npf-\u003ecinst that is NULL -\u003e crash.\nDo not remove client instance when client open callbacks fails and\njust clear __I40E_CLIENT_INSTANCE_OPENED bit. The driver also needs\nto take care about this situation (when netdev is up and client\nis NOT opened) in i40e_notify_client_of_netdev_close() and\ncalls client close callback only when __I40E_CLIENT_INSTANCE_OPENED\nis set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48695",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Fix use-after-free warning\n\nFix the following use-after-free warning which is observed during\ncontroller reset:\n\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 23 PID: 5399 at lib/refcount.c:28 refcount_warn_saturate+0xa6/0xf0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48697",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: fix a use-after-free\n\nFix the following use-after-free complaint triggered by blktests nvme/004:\n\nBUG: KASAN: user-memory-access in blk_mq_complete_request_remote+0xac/0x350\nRead of size 4 at addr 0000607bd1835943 by task kworker/13:1/460\nWorkqueue: nvmet-wq nvme_loop_execute_work [nvme_loop]\nCall Trace:\n show_stack+0x52/0x58\n dump_stack_lvl+0x49/0x5e\n print_report.cold+0x36/0x1e2\n kasan_report+0xb9/0xf0\n __asan_load4+0x6b/0x80\n blk_mq_complete_request_remote+0xac/0x350\n nvme_loop_queue_response+0x1df/0x275 [nvme_loop]\n __nvmet_req_complete+0x132/0x4f0 [nvmet]\n nvmet_req_complete+0x15/0x40 [nvmet]\n nvmet_execute_io_connect+0x18a/0x1f0 [nvmet]\n nvme_loop_execute_work+0x20/0x30 [nvme_loop]\n process_one_work+0x56e/0xa70\n worker_thread+0x2d1/0x640\n kthread+0x183/0x1c0\n ret_from_fork+0x1f/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48701",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix an out-of-bounds bug in __snd_usb_parse_audio_interface()\n\nThere may be a bad USB audio device with a USB ID of (0x04fa, 0x4201) and\nthe number of it's interfaces less than 4, an out-of-bounds read bug occurs\nwhen parsing the interface descriptor for this device.\n\nFix this by checking the number of interfaces.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48702",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: emu10k1: Fix out of bounds access in snd_emu10k1_pcm_channel_alloc()\n\nThe voice allocator sometimes begins allocating from near the end of the\narray and then wraps around, however snd_emu10k1_pcm_channel_alloc()\naccesses the newly allocated voices as if it never wrapped around.\n\nThis results in out of bounds access if the first voice has a high enough\nindex so that first_voice + requested_voice_count \u003e NUM_G (64).\nThe more voices are requested, the more likely it is for this to occur.\n\nThis was initially discovered using PipeWire, however it can be reproduced\nby calling aplay multiple times with 16 channels:\naplay -r 48000 -D plughw:CARD=Live,DEV=3 -c 16 /dev/zero\n\nUBSAN: array-index-out-of-bounds in sound/pci/emu10k1/emupcm.c:127:40\nindex 65 is out of range for type 'snd_emu10k1_voice [64]'\nCPU: 1 PID: 31977 Comm: aplay Tainted: G        W IOE      6.0.0-rc2-emu10k1+ #7\nHardware name: ASUSTEK COMPUTER INC P5W DH Deluxe/P5W DH Deluxe, BIOS 3002    07/22/2010\nCall Trace:\n\u003cTASK\u003e\ndump_stack_lvl+0x49/0x63\ndump_stack+0x10/0x16\nubsan_epilogue+0x9/0x3f\n__ubsan_handle_out_of_bounds.cold+0x44/0x49\nsnd_emu10k1_playback_hw_params+0x3bc/0x420 [snd_emu10k1]\nsnd_pcm_hw_params+0x29f/0x600 [snd_pcm]\nsnd_pcm_common_ioctl+0x188/0x1410 [snd_pcm]\n? exit_to_user_mode_prepare+0x35/0x170\n? do_syscall_64+0x69/0x90\n? syscall_exit_to_user_mode+0x26/0x50\n? do_syscall_64+0x69/0x90\n? exit_to_user_mode_prepare+0x35/0x170\nsnd_pcm_ioctl+0x27/0x40 [snd_pcm]\n__x64_sys_ioctl+0x95/0xd0\ndo_syscall_64+0x5c/0x90\n? do_syscall_64+0x69/0x90\n? do_syscall_64+0x69/0x90\nentry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48704",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: add a force flush to delay work when radeon\n\nAlthough radeon card fence and wait for gpu to finish processing current batch rings,\nthere is still a corner case that radeon lockup work queue may not be fully flushed,\nand meanwhile the radeon_suspend_kms() function has called pci_set_power_state() to\nput device in D3hot state.\nPer PCI spec rev 4.0 on 5.3.1.4.1 D3hot State.\n\u003e Configuration and Message requests are the only TLPs accepted by a Function in\n\u003e the D3hot state. All other received Requests must be handled as Unsupported Requests,\n\u003e and all received Completions may optionally be handled as Unexpected Completions.\nThis issue will happen in following logs:\nUnable to handle kernel paging request at virtual address 00008800e0008010\nCPU 0 kworker/0:3(131): Oops 0\npc = [\u003cffffffff811bea5c\u003e]  ra = [\u003cffffffff81240844\u003e]  ps = 0000 Tainted: G        W\npc is at si_gpu_check_soft_reset+0x3c/0x240\nra is at si_dma_is_lockup+0x34/0xd0\nv0 = 0000000000000000  t0 = fff08800e0008010  t1 = 0000000000010000\nt2 = 0000000000008010  t3 = fff00007e3c00000  t4 = fff00007e3c00258\nt5 = 000000000000ffff  t6 = 0000000000000001  t7 = fff00007ef078000\ns0 = fff00007e3c016e8  s1 = fff00007e3c00000  s2 = fff00007e3c00018\ns3 = fff00007e3c00000  s4 = fff00007fff59d80  s5 = 0000000000000000\ns6 = fff00007ef07bd98\na0 = fff00007e3c00000  a1 = fff00007e3c016e8  a2 = 0000000000000008\na3 = 0000000000000001  a4 = 8f5c28f5c28f5c29  a5 = ffffffff810f4338\nt8 = 0000000000000275  t9 = ffffffff809b66f8  t10 = ff6769c5d964b800\nt11= 000000000000b886  pv = ffffffff811bea20  at = 0000000000000000\ngp = ffffffff81d89690  sp = 00000000aa814126\nDisabling lock debugging due to kernel taint\nTrace:\n[\u003cffffffff81240844\u003e] si_dma_is_lockup+0x34/0xd0\n[\u003cffffffff81119610\u003e] radeon_fence_check_lockup+0xd0/0x290\n[\u003cffffffff80977010\u003e] process_one_work+0x280/0x550\n[\u003cffffffff80977350\u003e] worker_thread+0x70/0x7c0\n[\u003cffffffff80977410\u003e] worker_thread+0x130/0x7c0\n[\u003cffffffff80982040\u003e] kthread+0x200/0x210\n[\u003cffffffff809772e0\u003e] worker_thread+0x0/0x7c0\n[\u003cffffffff80981f8c\u003e] kthread+0x14c/0x210\n[\u003cffffffff80911658\u003e] ret_from_kernel_thread+0x18/0x20\n[\u003cffffffff80981e40\u003e] kthread+0x0/0x210\n Code: ad3e0008  43f0074a  ad7e0018  ad9e0020  8c3001e8  40230101\n \u003c88210000\u003e 4821ed21\nSo force lockup work queue flush to fix this problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48708",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: single: fix potential NULL dereference\n\nAdded checking of pointer \"function\" in pcs_set_mux().\npinmux_generic_get_function() can return NULL and the pointer\n\"function\" was dereferenced without checking against NULL.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48710",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: fix a possible null pointer dereference\n\nIn radeon_fp_native_mode(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd.\n\nThe failure status of drm_cvt_mode() on the other path is checked too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48715",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Make bnx2fc_recv_frame() mp safe\n\nRunning tests with a debug kernel shows that bnx2fc_recv_frame() is\nmodifying the per_cpu lport stats counters in a non-mpsafe way.  Just boot\na debug kernel and run the bnx2fc driver with the hardware enabled.\n\n[ 1391.699147] BUG: using smp_processor_id() in preemptible [00000000] code: bnx2fc_\n[ 1391.699160] caller is bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]\n[ 1391.699174] CPU: 2 PID: 4355 Comm: bnx2fc_l2_threa Kdump: loaded Tainted: G    B\n[ 1391.699180] Hardware name: HP ProLiant DL120 G7, BIOS J01 07/01/2013\n[ 1391.699183] Call Trace:\n[ 1391.699188]  dump_stack_lvl+0x57/0x7d\n[ 1391.699198]  check_preemption_disabled+0xc8/0xd0\n[ 1391.699205]  bnx2fc_recv_frame+0xbf9/0x1760 [bnx2fc]\n[ 1391.699215]  ? do_raw_spin_trylock+0xb5/0x180\n[ 1391.699221]  ? bnx2fc_npiv_create_vports.isra.0+0x4e0/0x4e0 [bnx2fc]\n[ 1391.699229]  ? bnx2fc_l2_rcv_thread+0xb7/0x3a0 [bnx2fc]\n[ 1391.699240]  bnx2fc_l2_rcv_thread+0x1af/0x3a0 [bnx2fc]\n[ 1391.699250]  ? bnx2fc_ulp_init+0xc0/0xc0 [bnx2fc]\n[ 1391.699258]  kthread+0x364/0x420\n[ 1391.699263]  ? _raw_spin_unlock_irq+0x24/0x50\n[ 1391.699268]  ? set_kthread_struct+0x100/0x100\n[ 1391.699273]  ret_from_fork+0x22/0x30\n\nRestore the old get_cpu/put_cpu code with some modifications to reduce the\nsize of the critical section.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48722",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: ca8210: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. We then leak the skb\nstructure.\n\nFree the skb structure upon error before returning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48732",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: fix off by one in BIOS boundary checking\n\nBounds checking when parsing init scripts embedded in the BIOS reject\naccess to the last byte. This causes driver initialization to fail on\nApple eMac's with GeForce 2 MX GPUs, leaving the system with no working\nconsole.\n\nThis is probably only seen on OpenFirmware machines like PowerPC Macs\nbecause the BIOS image provided by OF is only the used parts of the ROM,\nnot a power-of-two blocks read from PCI directly so PCs always have\nempty bytes at the end that are never accessed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48733",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix use-after-free after failure to create a snapshot\n\nAt ioctl.c:create_snapshot(), we allocate a pending snapshot structure and\nthen attach it to the transaction's list of pending snapshots. After that\nwe call btrfs_commit_transaction(), and if that returns an error we jump\nto 'fail' label, where we kfree() the pending snapshot structure. This can\nresult in a later use-after-free of the pending snapshot:\n\n1) We allocated the pending snapshot and added it to the transaction's\n   list of pending snapshots;\n\n2) We call btrfs_commit_transaction(), and it fails either at the first\n   call to btrfs_run_delayed_refs() or btrfs_start_dirty_block_groups().\n   In both cases, we don't abort the transaction and we release our\n   transaction handle. We jump to the 'fail' label and free the pending\n   snapshot structure. We return with the pending snapshot still in the\n   transaction's list;\n\n3) Another task commits the transaction. This time there's no error at\n   all, and then during the transaction commit it accesses a pointer\n   to the pending snapshot structure that the snapshot creation task\n   has already freed, resulting in a user-after-free.\n\nThis issue could actually be detected by smatch, which produced the\nfollowing warning:\n\n  fs/btrfs/ioctl.c:843 create_snapshot() warn: '\u0026pending_snapshot-\u003elist' not removed from list\n\nSo fix this by not having the snapshot creation ioctl directly add the\npending snapshot to the transaction's list. Instead add the pending\nsnapshot to the transaction handle, and then at btrfs_commit_transaction()\nwe add the snapshot to the list only when we can guarantee that any error\nreturned after that point will result in a transaction abort, in which\ncase the ioctl code can safely free the pending snapshot and no one can\naccess it anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48740",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: fix double free of cond_list on error paths\n\nOn error path from cond_read_list() and duplicate_policydb_cond_list()\nthe cond_list_destroy() gets called a second time in caller functions,\nresulting in NULL pointer deref.  Fix this by resetting the\ncond_list_len to 0 in cond_list_destroy(), making subsequent calls a\nnoop.\n\nAlso consistently reset the cond_list pointer to NULL after freeing.\n\n[PM: fix line lengths in the description]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: amd-xgbe: Fix skb data length underflow\n\nThere will be BUG_ON() triggered in include/linux/skbuff.h leading to\nintermittent kernel panic, when the skb length underflow is detected.\n\nFix this by dropping the packet if such length underflows are seen\nbecause of inconsistencies in the hardware descriptors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48754",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphylib: fix potential use-after-free\n\nCommit bafbdd527d56 (\"phylib: Add device reset GPIO support\") added call\nto phy_device_reset(phydev) after the put_device() call in phy_detach().\n\nThe comment before the put_device() call says that the phydev might go\naway with put_device().\n\nFix potential use-after-free by calling phy_device_reset() before\nput_device().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48756",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/dsi: invalid parameter check in msm_dsi_phy_enable\n\nThe function performs a check on the \"phy\" input parameter, however, it\nis used before the check.\n\nInitialize the \"dev\" variable after the sanity check to avoid a possible\nNULL pointer dereference.\n\nAddresses-Coverity-ID: 1493860 (\"Null pointer dereference\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48758",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Flush destroy_work queue before calling bnx2fc_interface_put()\n\nThe bnx2fc_destroy() functions are removing the interface before calling\ndestroy_work. This results multiple WARNings from sysfs_remove_group() as\nthe controller rport device attributes are removed too early.\n\nReplace the fcoe_port's destroy_work queue. It's not needed.\n\nThe problem is easily reproducible with the following steps.\n\nExample:\n\n  $ dmesg -w \u0026\n  $ systemctl enable --now fcoe\n  $ fipvlan -s -c ens2f1\n  $ fcoeadm -d ens2f1.802\n  [  583.464488] host2: libfc: Link down on port (7500a1)\n  [  583.472651] bnx2fc: 7500a1 - rport not created Yet!!\n  [  583.490468] ------------[ cut here ]------------\n  [  583.538725] sysfs group 'power' not found for kobject 'rport-2:0-0'\n  [  583.568814] WARNING: CPU: 3 PID: 192 at fs/sysfs/group.c:279 sysfs_remove_group+0x6f/0x80\n  [  583.607130] Modules linked in: dm_service_time 8021q garp mrp stp llc bnx2fc cnic uio rpcsec_gss_krb5 auth_rpcgss nfsv4 ...\n  [  583.942994] CPU: 3 PID: 192 Comm: kworker/3:2 Kdump: loaded Not tainted 5.14.0-39.el9.x86_64 #1\n  [  583.984105] Hardware name: HP ProLiant DL120 G7, BIOS J01 07/01/2013\n  [  584.016535] Workqueue: fc_wq_2 fc_rport_final_delete [scsi_transport_fc]\n  [  584.050691] RIP: 0010:sysfs_remove_group+0x6f/0x80\n  [  584.074725] Code: ff 5b 48 89 ef 5d 41 5c e9 ee c0 ff ff 48 89 ef e8 f6 b8 ff ff eb d1 49 8b 14 24 48 8b 33 48 c7 c7 ...\n  [  584.162586] RSP: 0018:ffffb567c15afdc0 EFLAGS: 00010282\n  [  584.188225] RAX: 0000000000000000 RBX: ffffffff8eec4220 RCX: 0000000000000000\n  [  584.221053] RDX: ffff8c1586ce84c0 RSI: ffff8c1586cd7cc0 RDI: ffff8c1586cd7cc0\n  [  584.255089] RBP: 0000000000000000 R08: 0000000000000000 R09: ffffb567c15afc00\n  [  584.287954] R10: ffffb567c15afbf8 R11: ffffffff8fbe7f28 R12: ffff8c1486326400\n  [  584.322356] R13: ffff8c1486326480 R14: ffff8c1483a4a000 R15: 0000000000000004\n  [  584.355379] FS:  0000000000000000(0000) GS:ffff8c1586cc0000(0000) knlGS:0000000000000000\n  [  584.394419] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [  584.421123] CR2: 00007fe95a6f7840 CR3: 0000000107674002 CR4: 00000000000606e0\n  [  584.454888] Call Trace:\n  [  584.466108]  device_del+0xb2/0x3e0\n  [  584.481701]  device_unregister+0x13/0x60\n  [  584.501306]  bsg_unregister_queue+0x5b/0x80\n  [  584.522029]  bsg_remove_queue+0x1c/0x40\n  [  584.541884]  fc_rport_final_delete+0xf3/0x1d0 [scsi_transport_fc]\n  [  584.573823]  process_one_work+0x1e3/0x3b0\n  [  584.592396]  worker_thread+0x50/0x3b0\n  [  584.609256]  ? rescuer_thread+0x370/0x370\n  [  584.628877]  kthread+0x149/0x170\n  [  584.643673]  ? set_kthread_struct+0x40/0x40\n  [  584.662909]  ret_from_fork+0x22/0x30\n  [  584.680002] ---[ end trace 53575ecefa942ece ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48759",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrpmsg: char: Fix race between the release of rpmsg_ctrldev and cdev\n\nstruct rpmsg_ctrldev contains a struct cdev. The current code frees\nthe rpmsg_ctrldev struct in rpmsg_ctrldev_release_device(), but the\ncdev is a managed object, therefore its release is not predictable\nand the rpmsg_ctrldev could be freed before the cdev is entirely\nreleased, as in the backtrace below.\n\n[   93.625603] ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x7c\n[   93.636115] WARNING: CPU: 0 PID: 12 at lib/debugobjects.c:488 debug_print_object+0x13c/0x1b0\n[   93.644799] Modules linked in: veth xt_cgroup xt_MASQUERADE rfcomm algif_hash algif_skcipher af_alg uinput ip6table_nat fuse uvcvideo videobuf2_vmalloc venus_enc venus_dec videobuf2_dma_contig hci_uart btandroid btqca snd_soc_rt5682_i2c bluetooth qcom_spmi_temp_alarm snd_soc_rt5682v\n[   93.715175] CPU: 0 PID: 12 Comm: kworker/0:1 Tainted: G    B             5.4.163-lockdep #26\n[   93.723855] Hardware name: Google Lazor (rev3 - 8) with LTE (DT)\n[   93.730055] Workqueue: events kobject_delayed_cleanup\n[   93.735271] pstate: 60c00009 (nZCv daif +PAN +UAO)\n[   93.740216] pc : debug_print_object+0x13c/0x1b0\n[   93.744890] lr : debug_print_object+0x13c/0x1b0\n[   93.749555] sp : ffffffacf5bc7940\n[   93.752978] x29: ffffffacf5bc7940 x28: dfffffd000000000\n[   93.758448] x27: ffffffacdb11a800 x26: dfffffd000000000\n[   93.763916] x25: ffffffd0734f856c x24: dfffffd000000000\n[   93.769389] x23: 0000000000000000 x22: ffffffd0733c35b0\n[   93.774860] x21: ffffffd0751994a0 x20: ffffffd075ec27c0\n[   93.780338] x19: ffffffd075199100 x18: 00000000000276e0\n[   93.785814] x17: 0000000000000000 x16: dfffffd000000000\n[   93.791291] x15: ffffffffffffffff x14: 6e6968207473696c\n[   93.796768] x13: 0000000000000000 x12: ffffffd075e2b000\n[   93.802244] x11: 0000000000000001 x10: 0000000000000000\n[   93.807723] x9 : d13400dff1921900 x8 : d13400dff1921900\n[   93.813200] x7 : 0000000000000000 x6 : 0000000000000000\n[   93.818676] x5 : 0000000000000080 x4 : 0000000000000000\n[   93.824152] x3 : ffffffd0732a0fa4 x2 : 0000000000000001\n[   93.829628] x1 : ffffffacf5bc7580 x0 : 0000000000000061\n[   93.835104] Call trace:\n[   93.837644]  debug_print_object+0x13c/0x1b0\n[   93.841963]  __debug_check_no_obj_freed+0x25c/0x3c0\n[   93.846987]  debug_check_no_obj_freed+0x18/0x20\n[   93.851669]  slab_free_freelist_hook+0xbc/0x1e4\n[   93.856346]  kfree+0xfc/0x2f4\n[   93.859416]  rpmsg_ctrldev_release_device+0x78/0xb8\n[   93.864445]  device_release+0x84/0x168\n[   93.868310]  kobject_cleanup+0x12c/0x298\n[   93.872356]  kobject_delayed_cleanup+0x10/0x18\n[   93.876948]  process_one_work+0x578/0x92c\n[   93.881086]  worker_thread+0x804/0xcf8\n[   93.884963]  kthread+0x2a8/0x314\n[   93.888303]  ret_from_fork+0x10/0x18\n\nThe cdev_device_add/del() API was created to address this issue (see\ncommit '233ed09d7fda (\"chardev: add helper function to register char\ndevs with a struct device\")'), use it instead of cdev add/del().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48760",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix hang in usb_kill_urb by adding memory barriers\n\nThe syzbot fuzzer has identified a bug in which processes hang waiting\nfor usb_kill_urb() to return.  It turns out the issue is not unlinking\nthe URB; that works just fine.  Rather, the problem arises when the\nwakeup notification that the URB has completed is not received.\n\nThe reason is memory-access ordering on SMP systems.  In outline form,\nusb_kill_urb() and __usb_hcd_giveback_urb() operating concurrently on\ndifferent CPUs perform the following actions:\n\nCPU 0\t\t\t\t\tCPU 1\n----------------------------\t\t---------------------------------\nusb_kill_urb():\t\t\t\t__usb_hcd_giveback_urb():\n  ...\t\t\t\t\t  ...\n  atomic_inc(\u0026urb-\u003ereject);\t\t  atomic_dec(\u0026urb-\u003euse_count);\n  ...\t\t\t\t\t  ...\n  wait_event(usb_kill_urb_queue,\n\tatomic_read(\u0026urb-\u003euse_count) == 0);\n\t\t\t\t\t  if (atomic_read(\u0026urb-\u003ereject))\n\t\t\t\t\t\twake_up(\u0026usb_kill_urb_queue);\n\nConfining your attention to urb-\u003ereject and urb-\u003euse_count, you can\nsee that the overall pattern of accesses on CPU 0 is:\n\n\twrite urb-\u003ereject, then read urb-\u003euse_count;\n\nwhereas the overall pattern of accesses on CPU 1 is:\n\n\twrite urb-\u003euse_count, then read urb-\u003ereject.\n\nThis pattern is referred to in memory-model circles as SB (for \"Store\nBuffering\"), and it is well known that without suitable enforcement of\nthe desired order of accesses -- in the form of memory barriers -- it\nis entirely possible for one or both CPUs to execute their reads ahead\nof their writes.  The end result will be that sometimes CPU 0 sees the\nold un-decremented value of urb-\u003euse_count while CPU 1 sees the old\nun-incremented value of urb-\u003ereject.  Consequently CPU 0 ends up on\nthe wait queue and never gets woken up, leading to the observed hang\nin usb_kill_urb().\n\nThe same pattern of accesses occurs in usb_poison_urb() and the\nfailure pathway of usb_hcd_submit_urb().\n\nThe problem is fixed by adding suitable memory barriers.  To provide\nproper memory-access ordering in the SB pattern, a full barrier is\nrequired on both CPUs.  The atomic_inc() and atomic_dec() accesses\nthemselves don't provide any memory ordering, but since they are\npresent, we can use the optimized smp_mb__after_atomic() memory\nbarrier in the various routines to obtain the desired effect.\n\nThis patch adds the necessary memory barriers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48761",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci-plat: fix crash when suspend if remote wake enable\n\nCrashed at i.mx8qm platform when suspend if enable remote wakeup\n\nInternal error: synchronous external abort: 96000210 [#1] PREEMPT SMP\nModules linked in:\nCPU: 2 PID: 244 Comm: kworker/u12:6 Not tainted 5.15.5-dirty #12\nHardware name: Freescale i.MX8QM MEK (DT)\nWorkqueue: events_unbound async_run_entry_fn\npstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : xhci_disable_hub_port_wake.isra.62+0x60/0xf8\nlr : xhci_disable_hub_port_wake.isra.62+0x34/0xf8\nsp : ffff80001394bbf0\nx29: ffff80001394bbf0 x28: 0000000000000000 x27: ffff00081193b578\nx26: ffff00081193b570 x25: 0000000000000000 x24: 0000000000000000\nx23: ffff00081193a29c x22: 0000000000020001 x21: 0000000000000001\nx20: 0000000000000000 x19: ffff800014e90490 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000002 x12: 0000000000000000\nx11: 0000000000000000 x10: 0000000000000960 x9 : ffff80001394baa0\nx8 : ffff0008145d1780 x7 : ffff0008f95b8e80 x6 : 000000001853b453\nx5 : 0000000000000496 x4 : 0000000000000000 x3 : ffff00081193a29c\nx2 : 0000000000000001 x1 : 0000000000000000 x0 : ffff000814591620\nCall trace:\n xhci_disable_hub_port_wake.isra.62+0x60/0xf8\n xhci_suspend+0x58/0x510\n xhci_plat_suspend+0x50/0x78\n platform_pm_suspend+0x2c/0x78\n dpm_run_callback.isra.25+0x50/0xe8\n __device_suspend+0x108/0x3c0\n\nThe basic flow:\n\t1. run time suspend call xhci_suspend, xhci parent devices gate the clock.\n        2. echo mem \u003e/sys/power/state, system _device_suspend call xhci_suspend\n        3. xhci_suspend call xhci_disable_hub_port_wake, which access register,\n\t   but clock already gated by run time suspend.\n\nThis problem was hidden by power domain driver, which call run time resume before it.\n\nBut the below commit remove it and make this issue happen.\n\tcommit c1df456d0f06e (\"PM: domains: Don't runtime resume devices at genpd_prepare()\")\n\nThis patch call run time resume before suspend to make sure clock is on\nbefore access register.\n\nTesteb-by: Abel Vesa \u003cabel.vesa@nxp.com\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: lgdt3306a: Add a check against null-pointer-def\n\nThe driver should check whether the client provides the platform_data.\n\nThe following log reveals it:\n\n[   29.610324] BUG: KASAN: null-ptr-deref in kmemdup+0x30/0x40\n[   29.610730] Read of size 40 at addr 0000000000000000 by task bash/414\n[   29.612820] Call Trace:\n[   29.613030]  \u003cTASK\u003e\n[   29.613201]  dump_stack_lvl+0x56/0x6f\n[   29.613496]  ? kmemdup+0x30/0x40\n[   29.613754]  print_report.cold+0x494/0x6b7\n[   29.614082]  ? kmemdup+0x30/0x40\n[   29.614340]  kasan_report+0x8a/0x190\n[   29.614628]  ? kmemdup+0x30/0x40\n[   29.614888]  kasan_check_range+0x14d/0x1d0\n[   29.615213]  memcpy+0x20/0x60\n[   29.615454]  kmemdup+0x30/0x40\n[   29.615700]  lgdt3306a_probe+0x52/0x310\n[   29.616339]  i2c_device_probe+0x951/0xa90",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-0160",
      "Description": "A deadlock flaw was found in the Linux kernel's BPF subsystem. This flaw allows a local user to potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-1829",
      "Description": "A use-after-free vulnerability in the Linux Kernel traffic control index filter (tcindex) can be exploited to achieve local privilege escalation.  The tcindex_delete function which does not properly deactivate filters in case of a perfect hashes while deleting the underlying structure which can later lead to double freeing the structure.  A local attacker user can use this vulnerability to elevate its privileges to root.\nWe recommend upgrading past commit 8c710f75256bb3cf05ac7b1672c82b92c43f3d28.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-24023",
      "Description": "Bluetooth BR/EDR devices with Secure Simple Pairing and Secure Connections pairing in Bluetooth Core Specification 4.2 through 5.4 allow certain man-in-the-middle attacks that force a short key length, and might lead to discovery of the encryption key and live injection, aka BLUFFS.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-27043",
      "Description": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-xml-2.7.18-33.35.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-2860",
      "Description": "An out-of-bounds read vulnerability was found in the SR-IPv6 implementation in the Linux kernel. The flaw exists within the processing of seg6 attributes. The issue results from the improper validation of user-supplied data, which can result in a read past the end of an allocated buffer. This flaw allows a privileged local user to disclose sensitive information on affected installations of the Linux kernel.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-28746",
      "Description": "Information exposure through microarchitectural state after transient execution from some register files for some Intel(R) Atom(R) Processors may allow an authenticated user to potentially enable information disclosure via local access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-3164",
      "Description": "A heap-buffer-overflow vulnerability was found in LibTIFF, in extractImageSection() at tools/tiffcrop.c:7916 and tools/tiffcrop.c:7801. This flaw allows attackers to cause a denial of service via a crafted tiff file.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libtiff5-4.0.9-44.83.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-35827",
      "Description": "An issue was discovered in the Linux kernel through 6.3.8. A use-after-free was found in ravb_remove in drivers/net/ethernet/renesas/ravb_main.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38470",
      "Description": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_escape_label() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libavahi-client3-0.6.32-32.27.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libavahi-common3-0.6.32-32.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38472",
      "Description": "A vulnerability was found in Avahi. A reachable assertion exists in the avahi_rdata_parse() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libavahi-client3-0.6.32-32.27.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libavahi-common3-0.6.32-32.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40546",
      "Description": "A flaw was found in Shim when an error happened while creating a new ESL variable. If Shim fails to create the new variable, it tries to print an error message to the user; however, the number of parameters used by the logging function doesn't match the format string used by it, leading to a crash under certain circumstances.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40547",
      "Description": "A remote code execution vulnerability was found in Shim. The Shim boot support trusts attacker-controlled values when parsing an HTTP response. This flaw allows an attacker to craft a specific malicious HTTP request, leading to a completely controlled out-of-bounds write primitive and complete system compromise. This flaw is only exploitable during the early boot phase, an attacker needs to perform a Man-in-the-Middle or compromise the boot server to be able to exploit this vulnerability successfully.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40548",
      "Description": "A buffer overflow was found in Shim in the 32-bit system. The overflow happens due to an addition operation involving a user-controlled value parsed from the PE binary being used by Shim. This value is further used for memory allocation operations, leading to a heap-based buffer overflow. This flaw causes memory corruption and can lead to a crash or data integrity issues during the boot phase.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40550",
      "Description": "An out-of-bounds read flaw was found in Shim when it tried to validate the SBAT information. This issue may expose sensitive data during the system's boot phase.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:shim-15.8-25.30.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4244",
      "Description": "A use-after-free vulnerability in the Linux kernel's netfilter: nf_tables component can be exploited to achieve local privilege escalation.\n\nDue to a race condition between nf_tables netlink control plane transaction and nft_set element garbage collection, it is possible to underflow the reference counter causing a use-after-free vulnerability.\n\nWe recommend upgrading past commit 3e91b0ebd994635df2346353322ac51ce84ce6d8.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-42755",
      "Description": "A flaw was found in the IPv4 Resource Reservation Protocol (RSVP) classifier in the Linux kernel. The xprt pointer may go beyond the linear part of the skb, leading to an out-of-bounds read in the `rsvp_classify` function. This issue may allow a local user to crash the system and cause a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4408",
      "Description": "The DNS message parsing code in `named` includes a section whose computational complexity is overly high. It does not cause problems for typical DNS traffic, but crafted queries and responses may cause excessive CPU load on the affected `named` instance by exploiting this flaw. This issue affects both authoritative servers and recursive resolvers.\nThis issue affects BIND 9 versions 9.0.0 through 9.16.45, 9.18.0 through 9.18.21, 9.19.0 through 9.19.19, 9.9.3-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.45-S1, and 9.18.11-S1 through 9.18.21-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:bind-utils-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libbind9-161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libdns1110-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libirs161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisc1107-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisccc161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisccfg163-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:liblwres161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-bind-9.11.22-3.52.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-47233",
      "Description": "The brcm80211 component in the Linux kernel through 6.5.10 has a brcmf_cfg80211_detach use-after-free in the device unplugging (disconnect the USB by hotplug) code. For physically proximate attackers with local access, this \"could be exploited in a real world scenario.\" This is related to brcmf_cfg80211_escan_timeout_worker in drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4881",
      "Description": "** REJECT ** CVE-2023-4881 was wrongly assigned to a bug that was deemed to be a non-security issue by the Linux kernel security team.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-50387",
      "Description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:bind-utils-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libbind9-161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libdns1110-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libirs161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisc1107-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisccc161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisccfg163-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:liblwres161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-bind-9.11.22-3.52.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-50868",
      "Description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:bind-utils-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libbind9-161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libdns1110-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libirs161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisc1107-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisccc161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libisccfg163-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:liblwres161-9.11.22-3.52.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-bind-9.11.22-3.52.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52425",
      "Description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libpython3_4m1_0-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-xml-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-base-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-curses-3.4.10-25.130.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52474",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests\n\nhfi1 user SDMA request processing has two bugs that can cause data\ncorruption for user SDMA requests that have multiple payload iovecs\nwhere an iovec other than the tail iovec does not run up to the page\nboundary for the buffer pointed to by that iovec.a\n\nHere are the specific bugs:\n1. user_sdma_txadd() does not use struct user_sdma_iovec-\u003eiov.iov_len.\n   Rather, user_sdma_txadd() will add up to PAGE_SIZE bytes from iovec\n   to the packet, even if some of those bytes are past\n   iovec-\u003eiov.iov_len and are thus not intended to be in the packet.\n2. user_sdma_txadd() and user_sdma_send_pkts() fail to advance to the\n   next iovec in user_sdma_request-\u003eiovs when the current iovec\n   is not PAGE_SIZE and does not contain enough data to complete the\n   packet. The transmitted packet will contain the wrong data from the\n   iovec pages.\n\nThis has not been an issue with SDMA packets from hfi1 Verbs or PSM2\nbecause they only produce iovecs that end short of PAGE_SIZE as the tail\niovec of an SDMA request.\n\nFixing these bugs exposes other bugs with the SDMA pin cache\n(struct mmu_rb_handler) that get in way of supporting user SDMA requests\nwith multiple payload iovecs whose buffers do not end at PAGE_SIZE. So\nthis commit fixes those issues as well.\n\nHere are the mmu_rb_handler bugs that non-PAGE_SIZE-end multi-iovec\npayload user SDMA requests can hit:\n1. Overlapping memory ranges in mmu_rb_handler will result in duplicate\n   pinnings.\n2. When extending an existing mmu_rb_handler entry (struct mmu_rb_node),\n   the mmu_rb code (1) removes the existing entry under a lock, (2)\n   releases that lock, pins the new pages, (3) then reacquires the lock\n   to insert the extended mmu_rb_node.\n\n   If someone else comes in and inserts an overlapping entry between (2)\n   and (3), insert in (3) will fail.\n\n   The failure path code in this case unpins _all_ pages in either the\n   original mmu_rb_node or the new mmu_rb_node that was inserted between\n   (2) and (3).\n3. In hfi1_mmu_rb_remove_unless_exact(), mmu_rb_node-\u003erefcount is\n   incremented outside of mmu_rb_handler-\u003elock. As a result, mmu_rb_node\n   could be evicted by another thread that gets mmu_rb_handler-\u003elock and\n   checks mmu_rb_node-\u003erefcount before mmu_rb_node-\u003erefcount is\n   incremented.\n4. Related to #2 above, SDMA request submission failure path does not\n   check mmu_rb_node-\u003erefcount before freeing mmu_rb_node object.\n\n   If there are other SDMA requests in progress whose iovecs have\n   pointers to the now-freed mmu_rb_node(s), those pointers to the\n   now-freed mmu_rb nodes will be dereferenced when those SDMA requests\n   complete.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52476",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/lbr: Filter vsyscall addresses\n\nWe found that a panic can occur when a vsyscall is made while LBR sampling\nis active. If the vsyscall is interrupted (NMI) for perf sampling, this\ncall sequence can occur (most recent at top):\n\n    __insn_get_emulate_prefix()\n    insn_get_emulate_prefix()\n    insn_get_prefixes()\n    insn_get_opcode()\n    decode_branch_type()\n    get_branch_type()\n    intel_pmu_lbr_filter()\n    intel_pmu_handle_irq()\n    perf_event_nmi_handler()\n\nWithin __insn_get_emulate_prefix() at frame 0, a macro is called:\n\n    peek_nbyte_next(insn_byte_t, insn, i)\n\nWithin this macro, this dereference occurs:\n\n    (insn)-\u003enext_byte\n\nInspecting registers at this point, the value of the next_byte field is the\naddress of the vsyscall made, for example the location of the vsyscall\nversion of gettimeofday() at 0xffffffffff600000. The access to an address\nin the vsyscall region will trigger an oops due to an unhandled page fault.\n\nTo fix the bug, filtering for vsyscalls can be done when\ndetermining the branch type. This patch will return\na \"none\" branch if a kernel address if found to lie in the\nvsyscall region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52477",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: hub: Guard against accesses to uninitialized BOS descriptors\n\nMany functions in drivers/usb/core/hub.c and drivers/usb/core/hub.h\naccess fields inside udev-\u003ebos without checking if it was allocated and\ninitialized. If usb_get_bos_descriptor() fails for whatever\nreason, udev-\u003ebos will be NULL and those accesses will result in a\ncrash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000018\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 5 PID: 17818 Comm: kworker/5:1 Tainted: G W 5.15.108-18910-gab0e1cb584e1 #1 \u003cHASH:1f9e 1\u003e\nHardware name: Google Kindred/Kindred, BIOS Google_Kindred.12672.413.0 02/03/2021\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:hub_port_reset+0x193/0x788\nCode: 89 f7 e8 20 f7 15 00 48 8b 43 08 80 b8 96 03 00 00 03 75 36 0f b7 88 92 03 00 00 81 f9 10 03 00 00 72 27 48 8b 80 a8 03 00 00 \u003c48\u003e 83 78 18 00 74 19 48 89 df 48 8b 75 b0 ba 02 00 00 00 4c 89 e9\nRSP: 0018:ffffab740c53fcf8 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffffa1bc5f678000 RCX: 0000000000000310\nRDX: fffffffffffffdff RSI: 0000000000000286 RDI: ffffa1be9655b840\nRBP: ffffab740c53fd70 R08: 00001b7d5edaa20c R09: ffffffffb005e060\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: ffffab740c53fd3e R14: 0000000000000032 R15: 0000000000000000\nFS: 0000000000000000(0000) GS:ffffa1be96540000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000018 CR3: 000000022e80c005 CR4: 00000000003706e0\nCall Trace:\nhub_event+0x73f/0x156e\n? hub_activate+0x5b7/0x68f\nprocess_one_work+0x1a2/0x487\nworker_thread+0x11a/0x288\nkthread+0x13a/0x152\n? process_one_work+0x487/0x487\n? kthread_associate_blkcg+0x70/0x70\nret_from_fork+0x1f/0x30\n\nFall back to a default behavior if the BOS descriptor isn't accessible\nand skip all the functionalities that depend on it: LPM support checks,\nSuper Speed capabilitiy checks, U1/U2 states setup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52486",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Don't unref the same fb many times by mistake due to deadlock handling\n\nIf we get a deadlock after the fb lookup in drm_mode_page_flip_ioctl()\nwe proceed to unref the fb and then retry the whole thing from the top.\nBut we forget to reset the fb pointer back to NULL, and so if we then\nget another error during the retry, before the fb lookup, we proceed\nthe unref the same fb again without having gotten another reference.\nThe end result is that the fb will (eventually) end up being freed\nwhile it's still in use.\n\nReset fb to NULL once we've unreffed it to avoid doing it again\nuntil we've done another fb lookup.\n\nThis turned out to be pretty easy to hit on a DG2 when doing async\nflips (and CONFIG_DEBUG_WW_MUTEX_SLOWPATH=y). The first symptom I\nsaw that drm_closefb() simply got stuck in a busy loop while walking\nthe framebuffer list. Fortunately I was able to convince it to oops\ninstead, and from there it was easier to track down the culprit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52488",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO\n\nThe SC16IS7XX IC supports a burst mode to access the FIFOs where the\ninitial register address is sent ($00), followed by all the FIFO data\nwithout having to resend the register address each time. In this mode, the\nIC doesn't increment the register address for each R/W byte.\n\nThe regmap_raw_read() and regmap_raw_write() are functions which can\nperform IO over multiple registers. They are currently used to read/write\nfrom/to the FIFO, and although they operate correctly in this burst mode on\nthe SPI bus, they would corrupt the regmap cache if it was not disabled\nmanually. The reason is that when the R/W size is more than 1 byte, these\nfunctions assume that the register address is incremented and handle the\ncache accordingly.\n\nConvert FIFO R/W functions to use the regmap _noinc_ versions in order to\nremove the manual cache control which was a workaround when using the\n_raw_ versions. FIFO registers are properly declared as volatile so\ncache will not be used/updated for FIFO accesses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52507",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: assert requested protocol is valid\n\nThe protocol is used in a bit mask to determine if the protocol is\nsupported. Assert the provided protocol is less than the maximum\ndefined so it doesn't potentially perform a shift-out-of-bounds and\nprovide a clearer error for undefined protocols vs unsupported ones.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52515",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srp: Do not call scsi_done() from srp_abort()\n\nAfter scmd_eh_abort_handler() has called the SCSI LLD eh_abort_handler\ncallback, it performs one of the following actions:\n* Call scsi_queue_insert().\n* Call scsi_finish_command().\n* Call scsi_eh_scmd_add().\nHence, SCSI abort handlers must not call scsi_done(). Otherwise all\nthe above actions would trigger a use-after-free. Hence remove the\nscsi_done() call from srp_abort(). Keep the srp_free_req() call\nbefore returning SUCCESS because we may not see the command again if\nSUCCESS is returned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52524",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: llcp: Add lock when modifying device list\n\nThe device list needs its associated lock held when modifying it, or the\nlist could become corrupted, as syzbot discovered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52527",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv4, ipv6: Fix handling of transhdrlen in __ip{,6}_append_data()\n\nIncluding the transhdrlen in length is a problem when the packet is\npartially filled (e.g. something like send(MSG_MORE) happened previously)\nwhen appending to an IPv4 or IPv6 packet as we don't want to repeat the\ntransport header or account for it twice.  This can happen under some\ncircumstances, such as splicing into an L2TP socket.\n\nThe symptom observed is a warning in __ip6_append_data():\n\n    WARNING: CPU: 1 PID: 5042 at net/ipv6/ip6_output.c:1800 __ip6_append_data.isra.0+0x1be8/0x47f0 net/ipv6/ip6_output.c:1800\n\nthat occurs when MSG_SPLICE_PAGES is used to append more data to an already\npartially occupied skbuff.  The warning occurs when 'copy' is larger than\nthe amount of data in the message iterator.  This is because the requested\nlength includes the transport header length when it shouldn't.  This can be\ntriggered by, for example:\n\n        sfd = socket(AF_INET6, SOCK_DGRAM, IPPROTO_L2TP);\n        bind(sfd, ...); // ::1\n        connect(sfd, ...); // ::1 port 7\n        send(sfd, buffer, 4100, MSG_MORE);\n        sendfile(sfd, dfd, NULL, 1024);\n\nFix this by only adding transhdrlen into the length if the write queue is\nempty in l2tp_ip6_sendmsg(), analogously to how UDP does things.\n\nl2tp_ip_sendmsg() looks like it won't suffer from this problem as it builds\nthe UDP packet itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52528",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Fix uninit-value access in __smsc75xx_read_reg\n\nsyzbot reported the following uninit-value access issue:\n\n=====================================================\nBUG: KMSAN: uninit-value in smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:975 [inline]\nBUG: KMSAN: uninit-value in smsc75xx_bind+0x5c9/0x11e0 drivers/net/usb/smsc75xx.c:1482\nCPU: 0 PID: 8696 Comm: kworker/0:3 Not tainted 5.8.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: usb_hub_wq hub_event\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x21c/0x280 lib/dump_stack.c:118\n kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:121\n __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:215\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:975 [inline]\n smsc75xx_bind+0x5c9/0x11e0 drivers/net/usb/smsc75xx.c:1482\n usbnet_probe+0x1152/0x3f90 drivers/net/usb/usbnet.c:1737\n usb_probe_interface+0xece/0x1550 drivers/usb/core/driver.c:374\n really_probe+0xf20/0x20b0 drivers/base/dd.c:529\n driver_probe_device+0x293/0x390 drivers/base/dd.c:701\n __device_attach_driver+0x63f/0x830 drivers/base/dd.c:807\n bus_for_each_drv+0x2ca/0x3f0 drivers/base/bus.c:431\n __device_attach+0x4e2/0x7f0 drivers/base/dd.c:873\n device_initial_probe+0x4a/0x60 drivers/base/dd.c:920\n bus_probe_device+0x177/0x3d0 drivers/base/bus.c:491\n device_add+0x3b0e/0x40d0 drivers/base/core.c:2680\n usb_set_configuration+0x380f/0x3f10 drivers/usb/core/message.c:2032\n usb_generic_driver_probe+0x138/0x300 drivers/usb/core/generic.c:241\n usb_probe_device+0x311/0x490 drivers/usb/core/driver.c:272\n really_probe+0xf20/0x20b0 drivers/base/dd.c:529\n driver_probe_device+0x293/0x390 drivers/base/dd.c:701\n __device_attach_driver+0x63f/0x830 drivers/base/dd.c:807\n bus_for_each_drv+0x2ca/0x3f0 drivers/base/bus.c:431\n __device_attach+0x4e2/0x7f0 drivers/base/dd.c:873\n device_initial_probe+0x4a/0x60 drivers/base/dd.c:920\n bus_probe_device+0x177/0x3d0 drivers/base/bus.c:491\n device_add+0x3b0e/0x40d0 drivers/base/core.c:2680\n usb_new_device+0x1bd4/0x2a30 drivers/usb/core/hub.c:2554\n hub_port_connect drivers/usb/core/hub.c:5208 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5348 [inline]\n port_event drivers/usb/core/hub.c:5494 [inline]\n hub_event+0x5e7b/0x8a70 drivers/usb/core/hub.c:5576\n process_one_work+0x1688/0x2140 kernel/workqueue.c:2269\n worker_thread+0x10bc/0x2730 kernel/workqueue.c:2415\n kthread+0x551/0x590 kernel/kthread.c:292\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:293\n\nLocal variable ----buf.i87@smsc75xx_bind created at:\n __smsc75xx_read_reg drivers/net/usb/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485/0x11e0 drivers/net/usb/smsc75xx.c:1482\n __smsc75xx_read_reg drivers/net/usb/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485/0x11e0 drivers/net/usb/smsc75xx.c:1482\n\nThis issue is caused because usbnet_read_cmd() reads less bytes than requested\n(zero byte in the reproducer). In this case, 'buf' is not properly filled.\n\nThis patch fixes the issue by returning -ENODATA if usbnet_read_cmd() reads\nless bytes than requested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52575",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52583",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix deadlock or deadcode of misusing dget()\n\nThe lock order is incorrect between denty and its parent, we should\nalways make sure that the parent get the lock first.\n\nBut since this deadcode is never used and the parent dir will always\nbe set from the callers, let's just remove it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52586",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/dpu: Add mutex lock in control vblank irq\n\nAdd a mutex lock to control vblank irq to synchronize vblank\nenable/disable operations happening from different threads to prevent\nrace conditions while registering/unregistering the vblank irq callback.\n\nv4: -Removed vblank_ctl_lock from dpu_encoder_virt, so it is only a\n    parameter of dpu_encoder_phys.\n    -Switch from atomic refcnt to a simple int counter as mutex has\n    now been added\nv3: Mistakenly did not change wording in last version. It is done now.\nv2: Slightly changed wording of commit message\n\nPatchwork: https://patchwork.freedesktop.org/patch/571854/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52587",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/ipoib: Fix mcast list locking\n\nReleasing the `priv-\u003elock` while iterating the `priv-\u003emulticast_list` in\n`ipoib_mcast_join_task()` opens a window for `ipoib_mcast_dev_flush()` to\nremove the items while in the middle of iteration. If the mcast is removed\nwhile the lock was dropped, the for loop spins forever resulting in a hard\nlockup (as was reported on RHEL 4.18.0-372.75.1.el8_6 kernel):\n\n    Task A (kworker/u72:2 below)       | Task B (kworker/u72:0 below)\n    -----------------------------------+-----------------------------------\n    ipoib_mcast_join_task(work)        | ipoib_ib_dev_flush_light(work)\n      spin_lock_irq(\u0026priv-\u003elock)       | __ipoib_ib_dev_flush(priv, ...)\n      list_for_each_entry(mcast,       | ipoib_mcast_dev_flush(dev = priv-\u003edev)\n          \u0026priv-\u003emulticast_list, list) |\n        ipoib_mcast_join(dev, mcast)   |\n          spin_unlock_irq(\u0026priv-\u003elock) |\n                                       |   spin_lock_irqsave(\u0026priv-\u003elock, flags)\n                                       |   list_for_each_entry_safe(mcast, tmcast,\n                                       |                  \u0026priv-\u003emulticast_list, list)\n                                       |     list_del(\u0026mcast-\u003elist);\n                                       |     list_add_tail(\u0026mcast-\u003elist, \u0026remove_list)\n                                       |   spin_unlock_irqrestore(\u0026priv-\u003elock, flags)\n          spin_lock_irq(\u0026priv-\u003elock)   |\n                                       |   ipoib_mcast_remove_list(\u0026remove_list)\n   (Here, `mcast` is no longer on the  |     list_for_each_entry_safe(mcast, tmcast,\n    `priv-\u003emulticast_list` and we keep |                            remove_list, list)\n    spinning on the `remove_list` of   |  \u003e\u003e\u003e  wait_for_completion(\u0026mcast-\u003edone)\n    the other thread which is blocked  |\n    and the list is still valid on     |\n    it's stack.)\n\nFix this by keeping the lock held and changing to GFP_ATOMIC to prevent\neventual sleeps.\nUnfortunately we could not reproduce the lockup and confirm this fix but\nbased on the code review I think this fix should address such lockups.\n\ncrash\u003e bc 31\nPID: 747      TASK: ff1c6a1a007e8000  CPU: 31   COMMAND: \"kworker/u72:2\"\n--\n    [exception RIP: ipoib_mcast_join_task+0x1b1]\n    RIP: ffffffffc0944ac1  RSP: ff646f199a8c7e00  RFLAGS: 00000002\n    RAX: 0000000000000000  RBX: ff1c6a1a04dc82f8  RCX: 0000000000000000\n                                  work (\u0026priv-\u003emcast_task{,.work})\n    RDX: ff1c6a192d60ac68  RSI: 0000000000000286  RDI: ff1c6a1a04dc8000\n           \u0026mcast-\u003elist\n    RBP: ff646f199a8c7e90   R8: ff1c699980019420   R9: ff1c6a1920c9a000\n    R10: ff646f199a8c7e00  R11: ff1c6a191a7d9800  R12: ff1c6a192d60ac00\n                                                         mcast\n    R13: ff1c6a1d82200000  R14: ff1c6a1a04dc8000  R15: ff1c6a1a04dc82d8\n           dev                    priv (\u0026priv-\u003elock)     \u0026priv-\u003emulticast_list (aka head)\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n--- \u003cNMI exception stack\u003e ---\n #5 [ff646f199a8c7e00] ipoib_mcast_join_task+0x1b1 at ffffffffc0944ac1 [ib_ipoib]\n #6 [ff646f199a8c7e98] process_one_work+0x1a7 at ffffffff9bf10967\n\ncrash\u003e rx ff646f199a8c7e68\nff646f199a8c7e68:  ff1c6a1a04dc82f8 \u003c\u003c\u003c work = \u0026priv-\u003emcast_task.work\n\ncrash\u003e list -hO ipoib_dev_priv.multicast_list ff1c6a1a04dc8000\n(empty)\n\ncrash\u003e ipoib_dev_priv.mcast_task.work.func,mcast_mutex.owner.counter ff1c6a1a04dc8000\n  mcast_task.work.func = 0xffffffffc0944910 \u003cipoib_mcast_join_task\u003e,\n  mcast_mutex.owner.counter = 0xff1c69998efec000\n\ncrash\u003e b 8\nPID: 8        TASK: ff1c69998efec000  CPU: 33   COMMAND: \"kworker/u72:0\"\n--\n #3 [ff646f1980153d50] wait_for_completion+0x96 at ffffffff9c7d7646\n #4 [ff646f1980153d90] ipoib_mcast_remove_list+0x56 at ffffffffc0944dc6 [ib_ipoib]\n #5 [ff646f1980153de8] ipoib_mcast_dev_flush+0x1a7 at ffffffffc09455a7 [ib_ipoib]\n #6 [ff646f1980153e58] __ipoib_ib_dev_flush+0x1a4 at ffffffffc09431a4 [ib_ipoib]\n #7 [ff\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nreiserfs: Avoid touching renamed directory if parent does not change\n\nThe VFS will not be locking moved directory if its parent does not\nchange. Change reiserfs rename code to avoid touching renamed directory\nif its parent does not change as without locking that can corrupt the\nfilesystem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rt2x00: restart beacon queue when hardware reset\n\nWhen a hardware reset is triggered, all registers are reset, so all\nqueues are forced to stop in hardware interface. However, mac80211\nwill not automatically stop the queue. If we don't manually stop the\nbeacon queue, the queue will be deadlocked and unable to start again.\nThis patch fixes the issue where Apple devices cannot connect to the\nAP after calling ieee80211_restart_hw().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/ptrace: handle setting of fpc register correctly\n\nIf the content of the floating point control (fpc) register of a traced\nprocess is modified with the ptrace interface the new value is tested for\nvalidity by temporarily loading it into the fpc register.\n\nThis may lead to corruption of the fpc register of the tracing process:\nif an interrupt happens while the value is temporarily loaded into the\nfpc register, and within interrupt context floating point or vector\nregisters are used, the current fp/vx registers are saved with\nsave_fpu_regs() assuming they belong to user space and will be loaded into\nfp/vx registers when returning to user space.\n\ntest_fp_ctl() restores the original user space fpc register value, however\nit will be discarded, when returning to user space.\n\nIn result the tracer will incorrectly continue to run with the value that\nwas supposed to be used for the traced process.\n\nFix this by saving fpu register contents with save_fpu_regs() before using\ntest_fp_ctl().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52607",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/mm: Fix null-pointer dereference in pgtable_cache_add\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52614",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPM / devfreq: Fix buffer overflow in trans_stat_show\n\nFix buffer overflow in trans_stat_show().\n\nConvert simple snprintf to the more secure scnprintf with size of\nPAGE_SIZE.\n\nAdd condition checking if we are exceeding PAGE_SIZE and exit early from\nloop. Also add at the end a warning that we exceeded PAGE_SIZE and that\nstats is disabled.\n\nReturn -EFBIG in the case where we don't have enough space to write the\nfull transition table.\n\nAlso document in the ABI that this function can return -EFBIG error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52620",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: disallow timeout for anonymous sets\n\nNever used from userspace, disallow these parameters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52622",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid online resizing failures due to oversized flex bg\n\nWhen we online resize an ext4 filesystem with a oversized flexbg_size,\n\n     mkfs.ext4 -F -G 67108864 $dev -b 4096 100M\n     mount $dev $dir\n     resize2fs $dev 16G\n\nthe following WARN_ON is triggered:\n==================================================================\nWARNING: CPU: 0 PID: 427 at mm/page_alloc.c:4402 __alloc_pages+0x411/0x550\nModules linked in: sg(E)\nCPU: 0 PID: 427 Comm: resize2fs Tainted: G  E  6.6.0-rc5+ #314\nRIP: 0010:__alloc_pages+0x411/0x550\nCall Trace:\n \u003cTASK\u003e\n __kmalloc_large_node+0xa2/0x200\n __kmalloc+0x16e/0x290\n ext4_resize_fs+0x481/0xd80\n __ext4_ioctl+0x1616/0x1d90\n ext4_ioctl+0x12/0x20\n __x64_sys_ioctl+0xf0/0x150\n do_syscall_64+0x3b/0x90\n==================================================================\n\nThis is because flexbg_size is too large and the size of the new_group_data\narray to be allocated exceeds MAX_ORDER. Currently, the minimum value of\nMAX_ORDER is 8, the minimum value of PAGE_SIZE is 4096, the corresponding\nmaximum number of groups that can be allocated is:\n\n (PAGE_SIZE \u003c\u003c MAX_ORDER) / sizeof(struct ext4_new_group_data) ~ 21845\n\nAnd the value that is down-aligned to the power of 2 is 16384. Therefore,\nthis value is defined as MAX_RESIZE_BG, and the number of groups added\neach time does not exceed this value during resizing, and is added multiple\ntimes to complete the online resizing. The difference is that the metadata\nin a flex_bg may be more dispersed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52635",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPM / devfreq: Synchronize devfreq_monitor_[start/stop]\n\nThere is a chance if a frequent switch of the governor\ndone in a loop result in timer list corruption where\ntimer cancel being done from two place one from\ncancel_delayed_work_sync() and followed by expire_timers()\ncan be seen from the traces[1].\n\nwhile true\ndo\n        echo \"simple_ondemand\" \u003e /sys/class/devfreq/1d84000.ufshc/governor\n        echo \"performance\" \u003e /sys/class/devfreq/1d84000.ufshc/governor\ndone\n\nIt looks to be issue with devfreq driver where\ndevice_monitor_[start/stop] need to synchronized so that\ndelayed work should get corrupted while it is either\nbeing queued or running or being cancelled.\n\nLet's use polling flag and devfreq lock to synchronize the\nqueueing the timer instance twice and work data being\ncorrupted.\n\n[1]\n...\n..\n\u003cidle\u003e-0    [003]   9436.209662:  timer_cancel   timer=0xffffff80444f0428\n\u003cidle\u003e-0    [003]   9436.209664:  timer_expire_entry   timer=0xffffff80444f0428  now=0x10022da1c  function=__typeid__ZTSFvP10timer_listE_global_addr  baseclk=0x10022da1c\n\u003cidle\u003e-0    [003]   9436.209718:  timer_expire_exit   timer=0xffffff80444f0428\nkworker/u16:6-14217    [003]   9436.209863:  timer_start   timer=0xffffff80444f0428  function=__typeid__ZTSFvP10timer_listE_global_addr  expires=0x10022da2b  now=0x10022da1c  flags=182452227\nvendor.xxxyyy.ha-1593    [004]   9436.209888:  timer_cancel   timer=0xffffff80444f0428\nvendor.xxxyyy.ha-1593    [004]   9436.216390:  timer_init   timer=0xffffff80444f0428\nvendor.xxxyyy.ha-1593    [004]   9436.216392:  timer_start   timer=0xffffff80444f0428  function=__typeid__ZTSFvP10timer_listE_global_addr  expires=0x10022da2c  now=0x10022da1d  flags=186646532\nvendor.xxxyyy.ha-1593    [005]   9436.220992:  timer_cancel   timer=0xffffff80444f0428\nxxxyyyTraceManag-7795    [004]   9436.261641:  timer_cancel   timer=0xffffff80444f0428\n\n[2]\n\n 9436.261653][    C4] Unable to handle kernel paging request at virtual address dead00000000012a\n[ 9436.261664][    C4] Mem abort info:\n[ 9436.261666][    C4]   ESR = 0x96000044\n[ 9436.261669][    C4]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 9436.261671][    C4]   SET = 0, FnV = 0\n[ 9436.261673][    C4]   EA = 0, S1PTW = 0\n[ 9436.261675][    C4] Data abort info:\n[ 9436.261677][    C4]   ISV = 0, ISS = 0x00000044\n[ 9436.261680][    C4]   CM = 0, WnR = 1\n[ 9436.261682][    C4] [dead00000000012a] address between user and kernel address ranges\n[ 9436.261685][    C4] Internal error: Oops: 96000044 [#1] PREEMPT SMP\n[ 9436.261701][    C4] Skip md ftrace buffer dump for: 0x3a982d0\n...\n\n[ 9436.262138][    C4] CPU: 4 PID: 7795 Comm: TraceManag Tainted: G S      W  O      5.10.149-android12-9-o-g17f915d29d0c #1\n[ 9436.262141][    C4] Hardware name: Qualcomm Technologies, Inc.  (DT)\n[ 9436.262144][    C4] pstate: 22400085 (nzCv daIf +PAN -UAO +TCO BTYPE=--)\n[ 9436.262161][    C4] pc : expire_timers+0x9c/0x438\n[ 9436.262164][    C4] lr : expire_timers+0x2a4/0x438\n[ 9436.262168][    C4] sp : ffffffc010023dd0\n[ 9436.262171][    C4] x29: ffffffc010023df0 x28: ffffffd0636fdc18\n[ 9436.262178][    C4] x27: ffffffd063569dd0 x26: ffffffd063536008\n[ 9436.262182][    C4] x25: 0000000000000001 x24: ffffff88f7c69280\n[ 9436.262185][    C4] x23: 00000000000000e0 x22: dead000000000122\n[ 9436.262188][    C4] x21: 000000010022da29 x20: ffffff8af72b4e80\n[ 9436.262191][    C4] x19: ffffffc010023e50 x18: ffffffc010025038\n[ 9436.262195][    C4] x17: 0000000000000240 x16: 0000000000000201\n[ 9436.262199][    C4] x15: ffffffffffffffff x14: ffffff889f3c3100\n[ 9436.262203][    C4] x13: ffffff889f3c3100 x12: 00000000049f56b8\n[ 9436.262207][    C4] x11: 00000000049f56b8 x10: 00000000ffffffff\n[ 9436.262212][    C4] x9 : ffffffc010023e50 x8 : dead000000000122\n[ 9436.262216][    C4] x7 : ffffffffffffffff x6 : ffffffc0100239d8\n[ 9436.262220][    C4] x5 : 0000000000000000 x4 : 0000000000000101\n[ 9436.262223][    C4] x3 : 0000000000000080 x2 : ffffff8\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52639",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: s390: vsie: fix race during shadow creation\n\nRight now it is possible to see gmap-\u003eprivate being zero in\nkvm_s390_vsie_gmap_notifier resulting in a crash.  This is due to the\nfact that we add gmap-\u003eprivate == kvm after creation:\n\nstatic int acquire_gmap_shadow(struct kvm_vcpu *vcpu,\n                               struct vsie_page *vsie_page)\n{\n[...]\n        gmap = gmap_shadow(vcpu-\u003earch.gmap, asce, edat);\n        if (IS_ERR(gmap))\n                return PTR_ERR(gmap);\n        gmap-\u003eprivate = vcpu-\u003ekvm;\n\nLet children inherit the private field of the parent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52644",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: b43: Stop/wake correct queue in DMA Tx path when QoS is disabled\n\nWhen QoS is disabled, the queue priority value will not map to the correct\nieee80211 queue since there is only one queue. Stop/wake queue 0 when QoS\nis disabled to prevent trying to stop/wake a non-existent queue and failing\nto stop/wake the actual queue instantiated.\n\nLog of issue before change (with kernel parameter qos=0):\n    [  +5.112651] ------------[ cut here ]------------\n    [  +0.000005] WARNING: CPU: 7 PID: 25513 at net/mac80211/util.c:449 __ieee80211_wake_queue+0xd5/0x180 [mac80211]\n    [  +0.000067] Modules linked in: b43(O) snd_seq_dummy snd_hrtimer snd_seq snd_seq_device nft_chain_nat xt_MASQUERADE nf_nat xfrm_user xfrm_algo xt_addrtype overlay ccm af_packet amdgpu snd_hda_codec_cirrus snd_hda_codec_generic ledtrig_audio drm_exec amdxcp gpu_sched xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip6t_rpfilter ipt_rpfilter xt_pkttype xt_LOG nf_log_syslog xt_tcpudp nft_compat nf_tables nfnetlink sch_fq_codel btusb uinput iTCO_wdt ctr btrtl intel_pmc_bxt i915 intel_rapl_msr mei_hdcp mei_pxp joydev at24 watchdog btintel atkbd libps2 serio radeon btbcm vivaldi_fmap btmtk intel_rapl_common snd_hda_codec_hdmi bluetooth uvcvideo nls_iso8859_1 applesmc nls_cp437 x86_pkg_temp_thermal snd_hda_intel intel_powerclamp vfat videobuf2_vmalloc coretemp fat snd_intel_dspcfg crc32_pclmul uvc polyval_clmulni snd_intel_sdw_acpi loop videobuf2_memops snd_hda_codec tun drm_suballoc_helper polyval_generic drm_ttm_helper drm_buddy tap ecdh_generic videobuf2_v4l2 gf128mul macvlan ttm ghash_clmulni_intel ecc tg3\n    [  +0.000044]  videodev bridge snd_hda_core rapl crc16 drm_display_helper cec mousedev snd_hwdep evdev intel_cstate bcm5974 hid_appleir videobuf2_common stp mac_hid libphy snd_pcm drm_kms_helper acpi_als mei_me intel_uncore llc mc snd_timer intel_gtt industrialio_triggered_buffer apple_mfi_fastcharge i2c_i801 mei snd lpc_ich agpgart ptp i2c_smbus thunderbolt apple_gmux i2c_algo_bit kfifo_buf video industrialio soundcore pps_core wmi tiny_power_button sbs sbshc button ac cordic bcma mac80211 cfg80211 ssb rfkill libarc4 kvm_intel kvm drm irqbypass fuse backlight firmware_class efi_pstore configfs efivarfs dmi_sysfs ip_tables x_tables autofs4 dm_crypt cbc encrypted_keys trusted asn1_encoder tee tpm rng_core input_leds hid_apple led_class hid_generic usbhid hid sd_mod t10_pi crc64_rocksoft crc64 crc_t10dif crct10dif_generic ahci libahci libata uhci_hcd ehci_pci ehci_hcd crct10dif_pclmul crct10dif_common sha512_ssse3 sha512_generic sha256_ssse3 sha1_ssse3 aesni_intel usbcore scsi_mod libaes crypto_simd cryptd scsi_common\n    [  +0.000055]  usb_common rtc_cmos btrfs blake2b_generic libcrc32c crc32c_generic crc32c_intel xor raid6_pq dm_snapshot dm_bufio dm_mod dax [last unloaded: b43(O)]\n    [  +0.000009] CPU: 7 PID: 25513 Comm: irq/17-b43 Tainted: G        W  O       6.6.7 #1-NixOS\n    [  +0.000003] Hardware name: Apple Inc. MacBookPro8,3/Mac-942459F5819B171B, BIOS 87.0.0.0.0 06/13/2019\n    [  +0.000001] RIP: 0010:__ieee80211_wake_queue+0xd5/0x180 [mac80211]\n    [  +0.000046] Code: 00 45 85 e4 0f 85 9b 00 00 00 48 8d bd 40 09 00 00 f0 48 0f ba ad 48 09 00 00 00 72 0f 5b 5d 41 5c 41 5d 41 5e e9 cb 6d 3c d0 \u003c0f\u003e 0b 5b 5d 41 5c 41 5d 41 5e c3 cc cc cc cc 48 8d b4 16 94 00 00\n    [  +0.000002] RSP: 0018:ffffc90003c77d60 EFLAGS: 00010097\n    [  +0.000001] RAX: 0000000000000001 RBX: 0000000000000002 RCX: 0000000000000000\n    [  +0.000001] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff88820b924900\n    [  +0.000002] RBP: ffff88820b924900 R08: ffffc90003c77d90 R09: 000000000003bfd0\n    [  +0.000001] R10: ffff88820b924900 R11: ffffc90003c77c68 R12: 0000000000000000\n    [  +0.000001] R13: 0000000000000000 R14: ffffc90003c77d90 R15: ffffffffc0fa6f40\n    [  +0.000001] FS:  0000000000000000(0000) GS:ffff88846fb80000(0000) knlGS:0000000000000000\n    [  +0.000001] CS:  0010 DS: 0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52646",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naio: fix mremap after fork null-deref\n\nCommit e4a0d3e720e7 (\"aio: Make it possible to remap aio ring\") introduced\na null-deref if mremap is called on an old aio mapping after fork as\nmm-\u003eioctx_table will be set to NULL.\n\n[jmoyer@redhat.com: fix 80 column issue]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/tegra: dsi: Add missing check for of_find_device_by_node\n\nAdd check for the return value of of_find_device_by_node() and return\nthe error if it fails in order to avoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52652",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNTB: fix possible name leak in ntb_register_device()\n\nIf device_register() fails in ntb_register_device(), the device name\nallocated by dev_set_name() should be freed. As per the comment in\ndevice_register(), callers should use put_device() to give up the\nreference in the error path. So fix this by calling put_device() in the\nerror path so that the name can be freed in kobject_cleanup().\n\nAs a result of this, put_device() in the error path of\nntb_register_device() is removed and the actual error is returned.\n\n[mani: reworded commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52653",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: fix a memleak in gss_import_v2_context\n\nThe ctx-\u003emech_used.data allocated by kmemdup is not freed in neither\ngss_import_v2_context nor it only caller gss_krb5_import_sec_context,\nwhich frees ctx on error.\n\nThus, this patch reform the last call of gss_import_v2_context to the\ngss_krb5_import_ctx_v2, preventing the memleak while keepping the return\nformation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52655",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: aqc111: check packet for fixup for true limit\n\nIf a device sends a packet that is inbetween 0\nand sizeof(u64) the value passed to skb_trim()\nas length will wrap around ending up as some very\nlarge value.\n\nThe driver will then proceed to parse the header\nlocated at that position, which will either oops or\nprocess some random value.\n\nThe fix is to check against sizeof(u64) rather than\n0, which the driver currently does. The issue exists\nsince the introduction of the driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52664",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atlantic: eliminate double free in error handling logic\n\nDriver has a logic leak in ring data allocation/free,\nwhere aq_ring_free could be called multiple times on same ring,\nif system is under stress and got memory allocation error.\n\nRing pointer was used as an indicator of failure, but this is\nnot correct since only ring data is allocated/deallocated.\nRing itself is an array member.\n\nChanging ring allocation functions to return error code directly.\nThis simplifies error handling and eliminates aq_ring_free\non higher layer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52675",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/imc-pmu: Add a null pointer check in update_events_in_group()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52683",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: LPIT: Avoid u32 multiplication overflow\n\nIn lpit_update_residency() there is a possibility of overflow\nin multiplication, if tsc_khz is large enough (\u003e UINT_MAX/1000).\n\nChange multiplication to mul_u32_u32().\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52685",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52686",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check in opal_event_init()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52691",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: fix a double-free in si_dpm_init\n\nWhen the allocation of\nadev-\u003epm.dpm.dyn_state.vddc_dependency_on_dispclk.entries fails,\namdgpu_free_extended_power_table is called to free some fields of adev.\nHowever, when the control flow returns to si_dpm_sw_init, it goes to\nlabel dpm_failed and calls si_dpm_fini, which calls\namdgpu_free_extended_power_table again and free those fields again. Thus\na double-free is triggered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52693",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: video: check for error while searching for backlight device parent\n\nIf acpi_get_parent() called in acpi_video_dev_register_backlight()\nfails, for example, because acpi_ut_acquire_mutex() fails inside\nacpi_get_parent), this can lead to incorrect (uninitialized)\nacpi_parent handle being passed to acpi_get_pci_dev() for detecting\nthe parent pci device.\n\nCheck acpi_get_parent() result and set parent device only in case of success.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52696",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv: Add a null pointer check in opal_powercap_init()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52698",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncalipso: fix memory leak in netlbl_calipso_add_pass()\n\nIf IPv6 support is disabled at boot (ipv6.disable=1),\nthe calipso_init() -\u003e netlbl_calipso_ops_register() function isn't called,\nand the netlbl_calipso_ops_get() function always returns NULL.\nIn this case, the netlbl_calipso_add_pass() function allocates memory\nfor the doi_def variable but doesn't free it with the calipso_doi_free().\n\nBUG: memory leak\nunreferenced object 0xffff888011d68180 (size 64):\n  comm \"syz-executor.1\", pid 10746, jiffies 4295410986 (age 17.928s)\n  hex dump (first 32 bytes):\n    00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c...\u003e] kmalloc include/linux/slab.h:552 [inline]\n    [\u003c...\u003e] netlbl_calipso_add_pass net/netlabel/netlabel_calipso.c:76 [inline]\n    [\u003c...\u003e] netlbl_calipso_add+0x22e/0x4f0 net/netlabel/netlabel_calipso.c:111\n    [\u003c...\u003e] genl_family_rcv_msg_doit+0x22f/0x330 net/netlink/genetlink.c:739\n    [\u003c...\u003e] genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]\n    [\u003c...\u003e] genl_rcv_msg+0x341/0x5a0 net/netlink/genetlink.c:800\n    [\u003c...\u003e] netlink_rcv_skb+0x14d/0x440 net/netlink/af_netlink.c:2515\n    [\u003c...\u003e] genl_rcv+0x29/0x40 net/netlink/genetlink.c:811\n    [\u003c...\u003e] netlink_unicast_kernel net/netlink/af_netlink.c:1313 [inline]\n    [\u003c...\u003e] netlink_unicast+0x54b/0x800 net/netlink/af_netlink.c:1339\n    [\u003c...\u003e] netlink_sendmsg+0x90a/0xdf0 net/netlink/af_netlink.c:1934\n    [\u003c...\u003e] sock_sendmsg_nosec net/socket.c:651 [inline]\n    [\u003c...\u003e] sock_sendmsg+0x157/0x190 net/socket.c:671\n    [\u003c...\u003e] ____sys_sendmsg+0x712/0x870 net/socket.c:2342\n    [\u003c...\u003e] ___sys_sendmsg+0xf8/0x170 net/socket.c:2396\n    [\u003c...\u003e] __sys_sendmsg+0xea/0x1b0 net/socket.c:2429\n    [\u003c...\u003e] do_syscall_64+0x30/0x40 arch/x86/entry/common.c:46\n    [\u003c...\u003e] entry_SYSCALL_64_after_hwframe+0x61/0xc6\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with Syzkaller\n\n[PM: merged via the LSM tree at Jakub Kicinski request]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52703",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/usb: kalmia: Don't pass act_len in usb_bulk_msg error path\n\nsyzbot reported that act_len in kalmia_send_init_packet() is\nuninitialized when passing it to the first usb_bulk_msg error path. Jiri\nPirko noted that it's pointless to pass it in the error path, and that\nthe value that would be printed in the second error path would be the\nvalue of act_len from the first call to usb_bulk_msg.[1]\n\nWith this in mind, let's just not pass act_len to the usb_bulk_msg error\npaths.\n\n1: https://lore.kernel.org/lkml/Y9pY61y1nwTuzMOa@nanopsycho/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52730",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdio: fix possible resource leaks in some error paths\n\nIf sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can\nnot release the resources, because the sdio function is not presented\nin these two cases, it won't call of_node_put() or put_device().\n\nTo fix these leaks, make sdio_func_present() only control whether\ndevice_del() needs to be called or not, then always call of_node_put()\nand put_device().\n\nIn error case in sdio_init_func(), the reference of 'card-\u003edev' is\nnot get, to avoid redundant put in sdio_free_func_cis(), move the\nget_device() to sdio_alloc_func() and put_device() to sdio_release_func(),\nit can keep the get/put function be balanced.\n\nWithout this patch, while doing fault inject test, it can get the\nfollowing leak reports, after this fix, the leak is gone.\n\nunreferenced object 0xffff888112514000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741614 (age 124.774s)\n  hex dump (first 32 bytes):\n    00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......\n    10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....\n  backtrace:\n    [\u003c000000009e5931da\u003e] kmalloc_trace+0x21/0x110\n    [\u003c000000002f839ccb\u003e] mmc_alloc_card+0x38/0xb0 [mmc_core]\n    [\u003c0000000004adcbf6\u003e] mmc_sdio_init_card+0xde/0x170 [mmc_core]\n    [\u003c000000007538fea0\u003e] mmc_attach_sdio+0xcb/0x1b0 [mmc_core]\n    [\u003c00000000d4fdeba7\u003e] mmc_rescan+0x54a/0x640 [mmc_core]\n\nunreferenced object 0xffff888112511000 (size 2048):\n  comm \"kworker/3:2\", pid 65, jiffies 4294741623 (age 124.766s)\n  hex dump (first 32 bytes):\n    00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......\n    10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....\n  backtrace:\n    [\u003c000000009e5931da\u003e] kmalloc_trace+0x21/0x110\n    [\u003c00000000fcbe706c\u003e] sdio_alloc_func+0x35/0x100 [mmc_core]\n    [\u003c00000000c68f4b50\u003e] mmc_attach_sdio.cold.18+0xb1/0x395 [mmc_core]\n    [\u003c00000000d4fdeba7\u003e] mmc_rescan+0x54a/0x640 [mmc_core]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52732",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: blocklist the kclient when receiving corrupted snap trace\n\nWhen received corrupted snap trace we don't know what exactly has\nhappened in MDS side. And we shouldn't continue IOs and metadatas\naccess to MDS, which may corrupt or get incorrect contents.\n\nThis patch will just block all the further IO/MDS requests\nimmediately and then evict the kclient itself.\n\nThe reason why we still need to evict the kclient just after\nblocking all the further IOs is that the MDS could revoke the caps\nfaster.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52737",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: lock the inode in shared mode before starting fiemap\n\nCurrently fiemap does not take the inode's lock (VFS lock), it only locks\na file range in the inode's io tree. This however can lead to a deadlock\nif we have a concurrent fsync on the file and fiemap code triggers a fault\nwhen accessing the user space buffer with fiemap_fill_next_extent(). The\ndeadlock happens on the inode's i_mmap_lock semaphore, which is taken both\nby fsync and btrfs_page_mkwrite(). This deadlock was recently reported by\nsyzbot and triggers a trace like the following:\n\n   task:syz-executor361 state:D stack:20264 pid:5668  ppid:5119   flags:0x00004004\n   Call Trace:\n    \u003cTASK\u003e\n    context_switch kernel/sched/core.c:5293 [inline]\n    __schedule+0x995/0xe20 kernel/sched/core.c:6606\n    schedule+0xcb/0x190 kernel/sched/core.c:6682\n    wait_on_state fs/btrfs/extent-io-tree.c:707 [inline]\n    wait_extent_bit+0x577/0x6f0 fs/btrfs/extent-io-tree.c:751\n    lock_extent+0x1c2/0x280 fs/btrfs/extent-io-tree.c:1742\n    find_lock_delalloc_range+0x4e6/0x9c0 fs/btrfs/extent_io.c:488\n    writepage_delalloc+0x1ef/0x540 fs/btrfs/extent_io.c:1863\n    __extent_writepage+0x736/0x14e0 fs/btrfs/extent_io.c:2174\n    extent_write_cache_pages+0x983/0x1220 fs/btrfs/extent_io.c:3091\n    extent_writepages+0x219/0x540 fs/btrfs/extent_io.c:3211\n    do_writepages+0x3c3/0x680 mm/page-writeback.c:2581\n    filemap_fdatawrite_wbc+0x11e/0x170 mm/filemap.c:388\n    __filemap_fdatawrite_range mm/filemap.c:421 [inline]\n    filemap_fdatawrite_range+0x175/0x200 mm/filemap.c:439\n    btrfs_fdatawrite_range fs/btrfs/file.c:3850 [inline]\n    start_ordered_ops fs/btrfs/file.c:1737 [inline]\n    btrfs_sync_file+0x4ff/0x1190 fs/btrfs/file.c:1839\n    generic_write_sync include/linux/fs.h:2885 [inline]\n    btrfs_do_write_iter+0xcd3/0x1280 fs/btrfs/file.c:1684\n    call_write_iter include/linux/fs.h:2189 [inline]\n    new_sync_write fs/read_write.c:491 [inline]\n    vfs_write+0x7dc/0xc50 fs/read_write.c:584\n    ksys_write+0x177/0x2a0 fs/read_write.c:637\n    do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n    do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n    entry_SYSCALL_64_after_hwframe+0x63/0xcd\n   RIP: 0033:0x7f7d4054e9b9\n   RSP: 002b:00007f7d404fa2f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n   RAX: ffffffffffffffda RBX: 00007f7d405d87a0 RCX: 00007f7d4054e9b9\n   RDX: 0000000000000090 RSI: 0000000020000000 RDI: 0000000000000006\n   RBP: 00007f7d405a51d0 R08: 0000000000000000 R09: 0000000000000000\n   R10: 0000000000000000 R11: 0000000000000246 R12: 61635f65646f6e69\n   R13: 65646f7475616f6e R14: 7261637369646f6e R15: 00007f7d405d87a8\n    \u003c/TASK\u003e\n   INFO: task syz-executor361:5697 blocked for more than 145 seconds.\n         Not tainted 6.2.0-rc3-syzkaller-00376-g7c6984405241 #0\n   \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n   task:syz-executor361 state:D stack:21216 pid:5697  ppid:5119   flags:0x00004004\n   Call Trace:\n    \u003cTASK\u003e\n    context_switch kernel/sched/core.c:5293 [inline]\n    __schedule+0x995/0xe20 kernel/sched/core.c:6606\n    schedule+0xcb/0x190 kernel/sched/core.c:6682\n    rwsem_down_read_slowpath+0x5f9/0x930 kernel/locking/rwsem.c:1095\n    __down_read_common+0x54/0x2a0 kernel/locking/rwsem.c:1260\n    btrfs_page_mkwrite+0x417/0xc80 fs/btrfs/inode.c:8526\n    do_page_mkwrite+0x19e/0x5e0 mm/memory.c:2947\n    wp_page_shared+0x15e/0x380 mm/memory.c:3295\n    handle_pte_fault mm/memory.c:4949 [inline]\n    __handle_mm_fault mm/memory.c:5073 [inline]\n    handle_mm_fault+0x1b79/0x26b0 mm/memory.c:5219\n    do_user_addr_fault+0x69b/0xcb0 arch/x86/mm/fault.c:1428\n    handle_page_fault arch/x86/mm/fault.c:1519 [inline]\n    exc_page_fault+0x7a/0x110 arch/x86/mm/fault.c:1575\n    asm_exc_page_fault+0x22/0x30 arch/x86/include/asm/idtentry.h:570\n   RIP: 0010:copy_user_short_string+0xd/0x40 arch/x86/lib/copy_user_64.S:233\n   Code: 74 0a 89 (...)\n   RSP: 0018:ffffc9000570f330 EFLAGS: 000502\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52741",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix use-after-free in rdata-\u003eread_into_pages()\n\nWhen the network status is unstable, use-after-free may occur when\nread data from the server.\n\n  BUG: KASAN: use-after-free in readpages_fill_pages+0x14c/0x7e0\n\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x38/0x4c\n   print_report+0x16f/0x4a6\n   kasan_report+0xb7/0x130\n   readpages_fill_pages+0x14c/0x7e0\n   cifs_readv_receive+0x46d/0xa40\n   cifs_demultiplex_thread+0x121c/0x1490\n   kthread+0x16b/0x1a0\n   ret_from_fork+0x2c/0x50\n   \u003c/TASK\u003e\n\n  Allocated by task 2535:\n   kasan_save_stack+0x22/0x50\n   kasan_set_track+0x25/0x30\n   __kasan_kmalloc+0x82/0x90\n   cifs_readdata_direct_alloc+0x2c/0x110\n   cifs_readdata_alloc+0x2d/0x60\n   cifs_readahead+0x393/0xfe0\n   read_pages+0x12f/0x470\n   page_cache_ra_unbounded+0x1b1/0x240\n   filemap_get_pages+0x1c8/0x9a0\n   filemap_read+0x1c0/0x540\n   cifs_strict_readv+0x21b/0x240\n   vfs_read+0x395/0x4b0\n   ksys_read+0xb8/0x150\n   do_syscall_64+0x3f/0x90\n   entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\n  Freed by task 79:\n   kasan_save_stack+0x22/0x50\n   kasan_set_track+0x25/0x30\n   kasan_save_free_info+0x2e/0x50\n   __kasan_slab_free+0x10e/0x1a0\n   __kmem_cache_free+0x7a/0x1a0\n   cifs_readdata_release+0x49/0x60\n   process_one_work+0x46c/0x760\n   worker_thread+0x2a4/0x6f0\n   kthread+0x16b/0x1a0\n   ret_from_fork+0x2c/0x50\n\n  Last potentially related work creation:\n   kasan_save_stack+0x22/0x50\n   __kasan_record_aux_stack+0x95/0xb0\n   insert_work+0x2b/0x130\n   __queue_work+0x1fe/0x660\n   queue_work_on+0x4b/0x60\n   smb2_readv_callback+0x396/0x800\n   cifs_abort_connection+0x474/0x6a0\n   cifs_reconnect+0x5cb/0xa50\n   cifs_readv_from_socket.cold+0x22/0x6c\n   cifs_read_page_from_socket+0xc1/0x100\n   readpages_fill_pages.cold+0x2f/0x46\n   cifs_readv_receive+0x46d/0xa40\n   cifs_demultiplex_thread+0x121c/0x1490\n   kthread+0x16b/0x1a0\n   ret_from_fork+0x2c/0x50\n\nThe following function calls will cause UAF of the rdata pointer.\n\nreadpages_fill_pages\n cifs_read_page_from_socket\n  cifs_readv_from_socket\n   cifs_reconnect\n    __cifs_reconnect\n     cifs_abort_connection\n      mid-\u003ecallback() --\u003e smb2_readv_callback\n       queue_work(\u0026rdata-\u003ework)  # if the worker completes first,\n                                 # the rdata is freed\n          cifs_readv_complete\n            kref_put\n              cifs_readdata_release\n                kfree(rdata)\n return rdata-\u003e...               # UAF in readpages_fill_pages()\n\nSimilarly, this problem also occurs in the uncache_fill_pages().\n\nFix this by adjusts the order of condition judgment in the return\nstatement.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52742",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: USB: Fix wrong-direction WARNING in plusb.c\n\nThe syzbot fuzzer detected a bug in the plusb network driver: A\nzero-length control-OUT transfer was treated as a read instead of a\nwrite.  In modern kernels this error provokes a WARNING:\n\nusb 1-1: BOGUS control dir, pipe 80000280 doesn't match bRequestType c0\nWARNING: CPU: 0 PID: 4645 at drivers/usb/core/urb.c:411\nusb_submit_urb+0x14a7/0x1880 drivers/usb/core/urb.c:411\nModules linked in:\nCPU: 1 PID: 4645 Comm: dhcpcd Not tainted\n6.2.0-rc6-syzkaller-00050-g9f266ccaa2f5 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google\n01/12/2023\nRIP: 0010:usb_submit_urb+0x14a7/0x1880 drivers/usb/core/urb.c:411\n...\nCall Trace:\n \u003cTASK\u003e\n usb_start_wait_urb+0x101/0x4b0 drivers/usb/core/message.c:58\n usb_internal_control_msg drivers/usb/core/message.c:102 [inline]\n usb_control_msg+0x320/0x4a0 drivers/usb/core/message.c:153\n __usbnet_read_cmd+0xb9/0x390 drivers/net/usb/usbnet.c:2010\n usbnet_read_cmd+0x96/0xf0 drivers/net/usb/usbnet.c:2068\n pl_vendor_req drivers/net/usb/plusb.c:60 [inline]\n pl_set_QuickLink_features drivers/net/usb/plusb.c:75 [inline]\n pl_reset+0x2f/0xf0 drivers/net/usb/plusb.c:85\n usbnet_open+0xcc/0x5d0 drivers/net/usb/usbnet.c:889\n __dev_open+0x297/0x4d0 net/core/dev.c:1417\n __dev_change_flags+0x587/0x750 net/core/dev.c:8530\n dev_change_flags+0x97/0x170 net/core/dev.c:8602\n devinet_ioctl+0x15a2/0x1d70 net/ipv4/devinet.c:1147\n inet_ioctl+0x33f/0x380 net/ipv4/af_inet.c:979\n sock_do_ioctl+0xcc/0x230 net/socket.c:1169\n sock_ioctl+0x1f8/0x680 net/socket.c:1286\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x197/0x210 fs/ioctl.c:856\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe fix is to call usbnet_write_cmd() instead of usbnet_read_cmd() and\nremove the USB_DIR_IN flag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52747",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Restore allocated resources on failed copyout\n\nFix a resource leak if an error occurs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52752",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix use-after-free bug in cifs_debug_data_proc_show()\n\nSkip SMB sessions that are being teared down\n(e.g. @ses-\u003eses_status == SES_EXITING) in cifs_debug_data_proc_show()\nto avoid use-after-free in @ses.\n\nThis fixes the following GPF when reading from /proc/fs/cifs/DebugData\nwhile mounting and umounting\n\n  [ 816.251274] general protection fault, probably for non-canonical\n  address 0x6b6b6b6b6b6b6d81: 0000 [#1] PREEMPT SMP NOPTI\n  ...\n  [  816.260138] Call Trace:\n  [  816.260329]  \u003cTASK\u003e\n  [  816.260499]  ? die_addr+0x36/0x90\n  [  816.260762]  ? exc_general_protection+0x1b3/0x410\n  [  816.261126]  ? asm_exc_general_protection+0x26/0x30\n  [  816.261502]  ? cifs_debug_tcon+0xbd/0x240 [cifs]\n  [  816.261878]  ? cifs_debug_tcon+0xab/0x240 [cifs]\n  [  816.262249]  cifs_debug_data_proc_show+0x516/0xdb0 [cifs]\n  [  816.262689]  ? seq_read_iter+0x379/0x470\n  [  816.262995]  seq_read_iter+0x118/0x470\n  [  816.263291]  proc_reg_read_iter+0x53/0x90\n  [  816.263596]  ? srso_alias_return_thunk+0x5/0x7f\n  [  816.263945]  vfs_read+0x201/0x350\n  [  816.264211]  ksys_read+0x75/0x100\n  [  816.264472]  do_syscall_64+0x3f/0x90\n  [  816.264750]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n  [  816.265135] RIP: 0033:0x7fd5e669d381",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52753",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Avoid NULL dereference of timing generator\n\n[Why \u0026 How]\nCheck whether assigned timing generator is NULL or not before\naccessing its funcs to prevent NULL dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52754",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imon: fix access to invalid resource for the second interface\n\nimon driver probes two USB interfaces, and at the probe of the second\ninterface, the driver assumes blindly that the first interface got\nbound with the same imon driver.  It's usually true, but it's still\npossible that the first interface is bound with another driver via a\nmalformed descriptor.  Then it may lead to a memory corruption, as\nspotted by syzkaller; imon driver accesses the data from drvdata as\nstruct imon_context object although it's a completely different one\nthat was assigned by another driver.\n\nThis patch adds a sanity check -- whether the first interface is\nreally bound with the imon driver or not -- for avoiding the problem\nabove at the probe time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52757",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential deadlock when releasing mids\n\nAll release_mid() callers seem to hold a reference of @mid so there is\nno need to call kref_put(\u0026mid-\u003erefcount, __release_mid) under\n@server-\u003emid_lock spinlock.  If they don't, then an use-after-free bug\nwould have occurred anyways.\n\nBy getting rid of such spinlock also fixes a potential deadlock as\nshown below\n\nCPU 0                                CPU 1\n------------------------------------------------------------------\ncifs_demultiplex_thread()            cifs_debug_data_proc_show()\n release_mid()\n  spin_lock(\u0026server-\u003emid_lock);\n                                     spin_lock(\u0026cifs_tcp_ses_lock)\n\t\t\t\t      spin_lock(\u0026server-\u003emid_lock)\n  __release_mid()\n   smb2_find_smb_tcon()\n    spin_lock(\u0026cifs_tcp_ses_lock) *deadlock*",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52759",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52762",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-blk: fix implicit overflow on virtio_max_dma_size\n\nThe following codes have an implicit conversion from size_t to u32:\n(u32)max_size = (size_t)virtio_max_dma_size(vdev);\n\nThis may lead overflow, Ex (size_t)4G -\u003e (u32)0. Once\nvirtio_max_dma_size() has a larger size than U32_MAX, use U32_MAX\ninstead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52764",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: gspca: cpia1: shift-out-of-bounds in set_flicker\n\nSyzkaller reported the following issue:\nUBSAN: shift-out-of-bounds in drivers/media/usb/gspca/cpia1.c:1031:27\nshift exponent 245 is too large for 32-bit type 'int'\n\nWhen the value of the variable \"sd-\u003eparams.exposure.gain\" exceeds the\nnumber of bits in an integer, a shift-out-of-bounds error is reported. It\nis triggered because the variable \"currentexp\" cannot be left-shifted by\nmore than the number of bits in an integer. In order to avoid invalid\nrange during left-shift, the conditional expression is added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52774",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: protect device queue against concurrent access\n\nIn dasd_profile_start() the amount of requests on the device queue are\ncounted. The access to the device queue is unprotected against\nconcurrent access. With a lot of parallel I/O, especially with alias\ndevices enabled, the device queue can change while dasd_profile_start()\nis accessing the queue. In the worst case this leads to a kernel panic\ndue to incorrect pointer accesses.\n\nFix this by taking the device lock before accessing the queue and\ncounting the requests. Additionally the check for a valid profile data\npointer can be done earlier to avoid unnecessary locking in a hot path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52781",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: config: fix iteration issue in 'usb_get_bos_descriptor()'\n\nThe BOS descriptor defines a root descriptor and is the base descriptor for\naccessing a family of related descriptors.\n\nFunction 'usb_get_bos_descriptor()' encounters an iteration issue when\nskipping the 'USB_DT_DEVICE_CAPABILITY' descriptor type. This results in\nthe same descriptor being read repeatedly.\n\nTo address this issue, a 'goto' statement is introduced to ensure that the\npointer and the amount read is updated correctly. This ensures that the\nfunction iterates to the next descriptor instead of reading the same\ndescriptor repeatedly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52784",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: stop the device in bond_setup_by_slave()\n\nCommit 9eed321cde22 (\"net: lapbether: only support ethernet devices\")\nhas been able to keep syzbot away from net/lapb, until today.\n\nIn the following splat [1], the issue is that a lapbether device has\nbeen created on a bonding device without members. Then adding a non\nARPHRD_ETHER member forced the bonding master to change its type.\n\nThe fix is to make sure we call dev_close() in bond_setup_by_slave()\nso that the potential linked lapbether devices (or any other devices\nhaving assumptions on the physical device) are removed.\n\nA similar bug has been addressed in commit 40baec225765\n(\"bonding: fix panic on non-ARPHRD_ETHER enslave failure\")\n\n[1]\nskbuff: skb_under_panic: text:ffff800089508810 len:44 put:40 head:ffff0000c78e7c00 data:ffff0000c78e7bea tail:0x16 end:0x140 dev:bond0\nkernel BUG at net/core/skbuff.c:192 !\nInternal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 6007 Comm: syz-executor383 Not tainted 6.6.0-rc3-syzkaller-gbf6547d8715b #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/04/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : skb_panic net/core/skbuff.c:188 [inline]\npc : skb_under_panic+0x13c/0x140 net/core/skbuff.c:202\nlr : skb_panic net/core/skbuff.c:188 [inline]\nlr : skb_under_panic+0x13c/0x140 net/core/skbuff.c:202\nsp : ffff800096a06aa0\nx29: ffff800096a06ab0 x28: ffff800096a06ba0 x27: dfff800000000000\nx26: ffff0000ce9b9b50 x25: 0000000000000016 x24: ffff0000c78e7bea\nx23: ffff0000c78e7c00 x22: 000000000000002c x21: 0000000000000140\nx20: 0000000000000028 x19: ffff800089508810 x18: ffff800096a06100\nx17: 0000000000000000 x16: ffff80008a629a3c x15: 0000000000000001\nx14: 1fffe00036837a32 x13: 0000000000000000 x12: 0000000000000000\nx11: 0000000000000201 x10: 0000000000000000 x9 : cb50b496c519aa00\nx8 : cb50b496c519aa00 x7 : 0000000000000001 x6 : 0000000000000001\nx5 : ffff800096a063b8 x4 : ffff80008e280f80 x3 : ffff8000805ad11c\nx2 : 0000000000000001 x1 : 0000000100000201 x0 : 0000000000000086\nCall trace:\nskb_panic net/core/skbuff.c:188 [inline]\nskb_under_panic+0x13c/0x140 net/core/skbuff.c:202\nskb_push+0xf0/0x108 net/core/skbuff.c:2446\nip6gre_header+0xbc/0x738 net/ipv6/ip6_gre.c:1384\ndev_hard_header include/linux/netdevice.h:3136 [inline]\nlapbeth_data_transmit+0x1c4/0x298 drivers/net/wan/lapbether.c:257\nlapb_data_transmit+0x8c/0xb0 net/lapb/lapb_iface.c:447\nlapb_transmit_buffer+0x178/0x204 net/lapb/lapb_out.c:149\nlapb_send_control+0x220/0x320 net/lapb/lapb_subr.c:251\n__lapb_disconnect_request+0x9c/0x17c net/lapb/lapb_iface.c:326\nlapb_device_event+0x288/0x4e0 net/lapb/lapb_iface.c:492\nnotifier_call_chain+0x1a4/0x510 kernel/notifier.c:93\nraw_notifier_call_chain+0x3c/0x50 kernel/notifier.c:461\ncall_netdevice_notifiers_info net/core/dev.c:1970 [inline]\ncall_netdevice_notifiers_extack net/core/dev.c:2008 [inline]\ncall_netdevice_notifiers net/core/dev.c:2022 [inline]\n__dev_close_many+0x1b8/0x3c4 net/core/dev.c:1508\ndev_close_many+0x1e0/0x470 net/core/dev.c:1559\ndev_close+0x174/0x250 net/core/dev.c:1585\nlapbeth_device_event+0x2e4/0x958 drivers/net/wan/lapbether.c:466\nnotifier_call_chain+0x1a4/0x510 kernel/notifier.c:93\nraw_notifier_call_chain+0x3c/0x50 kernel/notifier.c:461\ncall_netdevice_notifiers_info net/core/dev.c:1970 [inline]\ncall_netdevice_notifiers_extack net/core/dev.c:2008 [inline]\ncall_netdevice_notifiers net/core/dev.c:2022 [inline]\n__dev_close_many+0x1b8/0x3c4 net/core/dev.c:1508\ndev_close_many+0x1e0/0x470 net/core/dev.c:1559\ndev_close+0x174/0x250 net/core/dev.c:1585\nbond_enslave+0x2298/0x30cc drivers/net/bonding/bond_main.c:2332\nbond_do_ioctl+0x268/0xc64 drivers/net/bonding/bond_main.c:4539\ndev_ifsioc+0x754/0x9ac\ndev_ioctl+0x4d8/0xd34 net/core/dev_ioctl.c:786\nsock_do_ioctl+0x1d4/0x2d0 net/socket.c:1217\nsock_ioctl+0x4e8/0x834 net/socket.c:1322\nvfs_ioctl fs/ioctl.c:51 [inline]\n__do_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52796",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: add ipvlan_route_v6_outbound() helper\n\nInspired by syzbot reports using a stack of multiple ipvlan devices.\n\nReduce stack size needed in ipvlan_process_v6_outbound() by moving\nthe flowi6 struct used for the route lookup in an non inlined\nhelper. ipvlan_route_v6_outbound() needs 120 bytes on the stack,\nimmediately reclaimed.\n\nAlso make sure ipvlan_process_v4_outbound() is not inlined.\n\nWe might also have to lower MAX_NEST_DEV, because only syzbot uses\nsetups with more than four stacked devices.\n\nBUG: TASK stack guard page was hit at ffffc9000e803ff8 (stack is ffffc9000e804000..ffffc9000e808000)\nstack guard page: 0000 [#1] SMP KASAN\nCPU: 0 PID: 13442 Comm: syz-executor.4 Not tainted 6.1.52-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/09/2023\nRIP: 0010:kasan_check_range+0x4/0x2a0 mm/kasan/generic.c:188\nCode: 48 01 c6 48 89 c7 e8 db 4e c1 03 31 c0 5d c3 cc 0f 0b eb 02 0f 0b b8 ea ff ff ff 5d c3 cc 00 00 cc cc 00 00 cc cc 55 48 89 e5 \u003c41\u003e 57 41 56 41 55 41 54 53 b0 01 48 85 f6 0f 84 a4 01 00 00 48 89\nRSP: 0018:ffffc9000e804000 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff817e5bf2\nRDX: 0000000000000000 RSI: 0000000000000008 RDI: ffffffff887c6568\nRBP: ffffc9000e804000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: dffffc0000000001 R12: 1ffff92001d0080c\nR13: dffffc0000000000 R14: ffffffff87e6b100 R15: 0000000000000000\nFS: 00007fd0c55826c0(0000) GS:ffff8881f6800000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffc9000e803ff8 CR3: 0000000170ef7000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003c#DF\u003e\n\u003c/#DF\u003e\n\u003cTASK\u003e\n[\u003cffffffff81f281d1\u003e] __kasan_check_read+0x11/0x20 mm/kasan/shadow.c:31\n[\u003cffffffff817e5bf2\u003e] instrument_atomic_read include/linux/instrumented.h:72 [inline]\n[\u003cffffffff817e5bf2\u003e] _test_bit include/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]\n[\u003cffffffff817e5bf2\u003e] cpumask_test_cpu include/linux/cpumask.h:506 [inline]\n[\u003cffffffff817e5bf2\u003e] cpu_online include/linux/cpumask.h:1092 [inline]\n[\u003cffffffff817e5bf2\u003e] trace_lock_acquire include/trace/events/lock.h:24 [inline]\n[\u003cffffffff817e5bf2\u003e] lock_acquire+0xe2/0x590 kernel/locking/lockdep.c:5632\n[\u003cffffffff8563221e\u003e] rcu_lock_acquire+0x2e/0x40 include/linux/rcupdate.h:306\n[\u003cffffffff8561464d\u003e] rcu_read_lock include/linux/rcupdate.h:747 [inline]\n[\u003cffffffff8561464d\u003e] ip6_pol_route+0x15d/0x1440 net/ipv6/route.c:2221\n[\u003cffffffff85618120\u003e] ip6_pol_route_output+0x50/0x80 net/ipv6/route.c:2606\n[\u003cffffffff856f65b5\u003e] pol_lookup_func include/net/ip6_fib.h:584 [inline]\n[\u003cffffffff856f65b5\u003e] fib6_rule_lookup+0x265/0x620 net/ipv6/fib6_rules.c:116\n[\u003cffffffff85618009\u003e] ip6_route_output_flags_noref+0x2d9/0x3a0 net/ipv6/route.c:2638\n[\u003cffffffff8561821a\u003e] ip6_route_output_flags+0xca/0x340 net/ipv6/route.c:2651\n[\u003cffffffff838bd5a3\u003e] ip6_route_output include/net/ip6_route.h:100 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_process_v6_outbound drivers/net/ipvlan/ipvlan_core.c:473 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_process_outbound drivers/net/ipvlan/ipvlan_core.c:529 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_xmit_mode_l3 drivers/net/ipvlan/ipvlan_core.c:602 [inline]\n[\u003cffffffff838bd5a3\u003e] ipvlan_queue_xmit+0xc33/0x1be0 drivers/net/ipvlan/ipvlan_core.c:677\n[\u003cffffffff838c2909\u003e] ipvlan_start_xmit+0x49/0x100 drivers/net/ipvlan/ipvlan_main.c:229\n[\u003cffffffff84d03900\u003e] netdev_start_xmit include/linux/netdevice.h:4966 [inline]\n[\u003cffffffff84d03900\u003e] xmit_one net/core/dev.c:3644 [inline]\n[\u003cffffffff84d03900\u003e] dev_hard_start_xmit+0x320/0x980 net/core/dev.c:3660\n[\u003cffffffff84d080e2\u003e] __dev_queue_xmit+0x16b2/0x3370 net/core/dev.c:4324\n[\u003cffffffff855ce4cd\u003e] dev_queue_xmit include/linux/netdevice.h:3067 [inline]\n[\u003cffffffff855ce4cd\u003e] neigh_hh_output include/net/neighbour.h:529 [inline]\n[\u003cf\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52803",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix RPC client cleaned up the freed pipefs dentries\n\nRPC client pipefs dentries cleanup is in separated rpc_remove_pipedir()\nworkqueue,which takes care about pipefs superblock locking.\nIn some special scenarios, when kernel frees the pipefs sb of the\ncurrent client and immediately alloctes a new pipefs sb,\nrpc_remove_pipedir function would misjudge the existence of pipefs\nsb which is not the one it used to hold. As a result,\nthe rpc_remove_pipedir would clean the released freed pipefs dentries.\n\nTo fix this issue, rpc_remove_pipedir should check whether the\ncurrent pipefs sb is consistent with the original pipefs sb.\n\nThis error can be catched by KASAN:\n=========================================================\n[  250.497700] BUG: KASAN: slab-use-after-free in dget_parent+0x195/0x200\n[  250.498315] Read of size 4 at addr ffff88800a2ab804 by task kworker/0:18/106503\n[  250.500549] Workqueue: events rpc_free_client_work\n[  250.501001] Call Trace:\n[  250.502880]  kasan_report+0xb6/0xf0\n[  250.503209]  ? dget_parent+0x195/0x200\n[  250.503561]  dget_parent+0x195/0x200\n[  250.503897]  ? __pfx_rpc_clntdir_depopulate+0x10/0x10\n[  250.504384]  rpc_rmdir_depopulate+0x1b/0x90\n[  250.504781]  rpc_remove_client_dir+0xf5/0x150\n[  250.505195]  rpc_free_client_work+0xe4/0x230\n[  250.505598]  process_one_work+0x8ee/0x13b0\n...\n[   22.039056] Allocated by task 244:\n[   22.039390]  kasan_save_stack+0x22/0x50\n[   22.039758]  kasan_set_track+0x25/0x30\n[   22.040109]  __kasan_slab_alloc+0x59/0x70\n[   22.040487]  kmem_cache_alloc_lru+0xf0/0x240\n[   22.040889]  __d_alloc+0x31/0x8e0\n[   22.041207]  d_alloc+0x44/0x1f0\n[   22.041514]  __rpc_lookup_create_exclusive+0x11c/0x140\n[   22.041987]  rpc_mkdir_populate.constprop.0+0x5f/0x110\n[   22.042459]  rpc_create_client_dir+0x34/0x150\n[   22.042874]  rpc_setup_pipedir_sb+0x102/0x1c0\n[   22.043284]  rpc_client_register+0x136/0x4e0\n[   22.043689]  rpc_new_client+0x911/0x1020\n[   22.044057]  rpc_create_xprt+0xcb/0x370\n[   22.044417]  rpc_create+0x36b/0x6c0\n...\n[   22.049524] Freed by task 0:\n[   22.049803]  kasan_save_stack+0x22/0x50\n[   22.050165]  kasan_set_track+0x25/0x30\n[   22.050520]  kasan_save_free_info+0x2b/0x50\n[   22.050921]  __kasan_slab_free+0x10e/0x1a0\n[   22.051306]  kmem_cache_free+0xa5/0x390\n[   22.051667]  rcu_core+0x62c/0x1930\n[   22.051995]  __do_softirq+0x165/0x52a\n[   22.052347]\n[   22.052503] Last potentially related work creation:\n[   22.052952]  kasan_save_stack+0x22/0x50\n[   22.053313]  __kasan_record_aux_stack+0x8e/0xa0\n[   22.053739]  __call_rcu_common.constprop.0+0x6b/0x8b0\n[   22.054209]  dentry_free+0xb2/0x140\n[   22.054540]  __dentry_kill+0x3be/0x540\n[   22.054900]  shrink_dentry_list+0x199/0x510\n[   22.055293]  shrink_dcache_parent+0x190/0x240\n[   22.055703]  do_one_tree+0x11/0x40\n[   22.056028]  shrink_dcache_for_umount+0x61/0x140\n[   22.056461]  generic_shutdown_super+0x70/0x590\n[   22.056879]  kill_anon_super+0x3a/0x60\n[   22.057234]  rpc_kill_sb+0x121/0x200",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52808",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Set debugfs_dir pointer to NULL after removing debugfs\n\nIf init debugfs failed during device registration due to memory allocation\nfailure, debugfs_remove_recursive() is called, after which debugfs_dir is\nnot set to NULL. debugfs_remove_recursive() will be called again during\ndevice removal. As a result, illegal pointer is accessed.\n\n[ 1665.467244] hisi_sas_v3_hw 0000:b4:02.0: failed to init debugfs!\n...\n[ 1669.836708] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0\n[ 1669.872669] pc : down_write+0x24/0x70\n[ 1669.876315] lr : down_write+0x1c/0x70\n[ 1669.879961] sp : ffff000036f53a30\n[ 1669.883260] x29: ffff000036f53a30 x28: ffffa027c31549f8\n[ 1669.888547] x27: ffffa027c3140000 x26: 0000000000000000\n[ 1669.893834] x25: ffffa027bf37c270 x24: ffffa027bf37c270\n[ 1669.899122] x23: ffff0000095406b8 x22: ffff0000095406a8\n[ 1669.904408] x21: 0000000000000000 x20: ffffa027bf37c310\n[ 1669.909695] x19: 00000000000000a0 x18: ffff8027dcd86f10\n[ 1669.914982] x17: 0000000000000000 x16: 0000000000000000\n[ 1669.920268] x15: 0000000000000000 x14: ffffa0274014f870\n[ 1669.925555] x13: 0000000000000040 x12: 0000000000000228\n[ 1669.930842] x11: 0000000000000020 x10: 0000000000000bb0\n[ 1669.936129] x9 : ffff000036f537f0 x8 : ffff80273088ca10\n[ 1669.941416] x7 : 000000000000001d x6 : 00000000ffffffff\n[ 1669.946702] x5 : ffff000008a36310 x4 : ffff80273088be00\n[ 1669.951989] x3 : ffff000009513e90 x2 : 0000000000000000\n[ 1669.957276] x1 : 00000000000000a0 x0 : ffffffff00000001\n[ 1669.962563] Call trace:\n[ 1669.965000]  down_write+0x24/0x70\n[ 1669.968301]  debugfs_remove_recursive+0x5c/0x1b0\n[ 1669.972905]  hisi_sas_debugfs_exit+0x24/0x30 [hisi_sas_main]\n[ 1669.978541]  hisi_sas_v3_remove+0x130/0x150 [hisi_sas_v3_hw]\n[ 1669.984175]  pci_device_remove+0x48/0xd8\n[ 1669.988082]  device_release_driver_internal+0x1b4/0x250\n[ 1669.993282]  device_release_driver+0x28/0x38\n[ 1669.997534]  pci_stop_bus_device+0x84/0xb8\n[ 1670.001611]  pci_stop_and_remove_bus_device_locked+0x24/0x40\n[ 1670.007244]  remove_store+0xfc/0x140\n[ 1670.010802]  dev_attr_store+0x44/0x60\n[ 1670.014448]  sysfs_kf_write+0x58/0x80\n[ 1670.018095]  kernfs_fop_write+0xe8/0x1f0\n[ 1670.022000]  __vfs_write+0x60/0x190\n[ 1670.025472]  vfs_write+0xac/0x1c0\n[ 1670.028771]  ksys_write+0x6c/0xd8\n[ 1670.032071]  __arm64_sys_write+0x24/0x30\n[ 1670.035977]  el0_svc_common+0x78/0x130\n[ 1670.039710]  el0_svc_handler+0x38/0x78\n[ 1670.043442]  el0_svc+0x8/0xc\n\nTo fix this, set debugfs_dir to NULL after debugfs_remove_recursive().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52809",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: libfc: Fix potential NULL pointer dereference in fc_lport_ptp_setup()\n\nfc_lport_ptp_setup() did not check the return value of fc_rport_create()\nwhich can return NULL and would cause a NULL pointer dereference. Address\nthis issue by checking return value of fc_rport_create() and log error\nmessage on fc_rport_create() failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-5281",
      "Description": "A vulnerability was found in SourceCodester Engineers Online Portal 1.0. It has been classified as critical. This affects an unknown part of the file remove_inbox_message.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-240909 was assigned to this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "critical"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.5",
        "Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2023-52817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Fix a null pointer access when the smc_rreg pointer is NULL\n\nIn certain types of chips, such as VEGA20, reading the amdgpu_regs_smc file could result in an abnormal null pointer access when the smc_rreg pointer is NULL. Below are the steps to reproduce this issue and the corresponding exception log:\n\n1. Navigate to the directory: /sys/kernel/debug/dri/0\n2. Execute command: cat amdgpu_regs_smc\n3. Exception Log::\n[4005007.702554] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[4005007.702562] #PF: supervisor instruction fetch in kernel mode\n[4005007.702567] #PF: error_code(0x0010) - not-present page\n[4005007.702570] PGD 0 P4D 0\n[4005007.702576] Oops: 0010 [#1] SMP NOPTI\n[4005007.702581] CPU: 4 PID: 62563 Comm: cat Tainted: G           OE     5.15.0-43-generic #46-Ubunt       u\n[4005007.702590] RIP: 0010:0x0\n[4005007.702598] Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.\n[4005007.702600] RSP: 0018:ffffa82b46d27da0 EFLAGS: 00010206\n[4005007.702605] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffa82b46d27e68\n[4005007.702609] RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff9940656e0000\n[4005007.702612] RBP: ffffa82b46d27dd8 R08: 0000000000000000 R09: ffff994060c07980\n[4005007.702615] R10: 0000000000020000 R11: 0000000000000000 R12: 00007f5e06753000\n[4005007.702618] R13: ffff9940656e0000 R14: ffffa82b46d27e68 R15: 00007f5e06753000\n[4005007.702622] FS:  00007f5e0755b740(0000) GS:ffff99479d300000(0000) knlGS:0000000000000000\n[4005007.702626] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[4005007.702629] CR2: ffffffffffffffd6 CR3: 00000003253fc000 CR4: 00000000003506e0\n[4005007.702633] Call Trace:\n[4005007.702636]  \u003cTASK\u003e\n[4005007.702640]  amdgpu_debugfs_regs_smc_read+0xb0/0x120 [amdgpu]\n[4005007.703002]  full_proxy_read+0x5c/0x80\n[4005007.703011]  vfs_read+0x9f/0x1a0\n[4005007.703019]  ksys_read+0x67/0xe0\n[4005007.703023]  __x64_sys_read+0x19/0x20\n[4005007.703028]  do_syscall_64+0x5c/0xc0\n[4005007.703034]  ? do_user_addr_fault+0x1e3/0x670\n[4005007.703040]  ? exit_to_user_mode_prepare+0x37/0xb0\n[4005007.703047]  ? irqentry_exit_to_user_mode+0x9/0x20\n[4005007.703052]  ? irqentry_exit+0x19/0x30\n[4005007.703057]  ? exc_page_fault+0x89/0x160\n[4005007.703062]  ? asm_exc_page_fault+0x8/0x30\n[4005007.703068]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n[4005007.703075] RIP: 0033:0x7f5e07672992\n[4005007.703079] Code: c0 e9 b2 fe ff ff 50 48 8d 3d fa b2 0c 00 e8 c5 1d 02 00 0f 1f 44 00 00 f3 0f        1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 e       c 28 48 89 54 24\n[4005007.703083] RSP: 002b:00007ffe03097898 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n[4005007.703088] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f5e07672992\n[4005007.703091] RDX: 0000000000020000 RSI: 00007f5e06753000 RDI: 0000000000000003\n[4005007.703094] RBP: 00007f5e06753000 R08: 00007f5e06752010 R09: 00007f5e06752010\n[4005007.703096] R10: 0000000000000022 R11: 0000000000000246 R12: 0000000000022000\n[4005007.703099] R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000\n[4005007.703105]  \u003c/TASK\u003e\n[4005007.703107] Modules linked in: nf_tables libcrc32c nfnetlink algif_hash af_alg binfmt_misc nls_       iso8859_1 ipmi_ssif ast intel_rapl_msr intel_rapl_common drm_vram_helper drm_ttm_helper amd64_edac t       tm edac_mce_amd kvm_amd ccp mac_hid k10temp kvm acpi_ipmi ipmi_si rapl sch_fq_codel ipmi_devintf ipm       i_msghandler msr parport_pc ppdev lp parport mtd pstore_blk efi_pstore ramoops pstore_zone reed_solo       mon ip_tables x_tables autofs4 ib_uverbs ib_core amdgpu(OE) amddrm_ttm_helper(OE) amdttm(OE) iommu_v       2 amd_sched(OE) amdkcl(OE) drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops cec rc_core        drm igb ahci xhci_pci libahci i2c_piix4 i2c_algo_bit xhci_pci_renesas dca\n[4005007.703184] CR2: 0000000000000000\n[4005007.703188] ---[ en\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52818",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd: Fix UBSAN array-index-out-of-bounds for SMU7\n\nFor pptable structs that use flexible array sizes, use flexible arrays.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd: Fix UBSAN array-index-out-of-bounds for Polaris and Tonga\n\nFor pptable structs that use flexible array sizes, use flexible arrays.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52821",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panel: fix a possible null pointer dereference\n\nIn versatile_panel_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52832",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: don't return unset power in ieee80211_get_tx_power()\n\nWe can get a UBSAN warning if ieee80211_get_tx_power() returns the\nINT_MIN value mac80211 internally uses for \"unset power level\".\n\n UBSAN: signed-integer-overflow in net/wireless/nl80211.c:3816:5\n -2147483648 * 100 cannot be represented in type 'int'\n CPU: 0 PID: 20433 Comm: insmod Tainted: G        WC OE\n Call Trace:\n  dump_stack+0x74/0x92\n  ubsan_epilogue+0x9/0x50\n  handle_overflow+0x8d/0xd0\n  __ubsan_handle_mul_overflow+0xe/0x10\n  nl80211_send_iface+0x688/0x6b0 [cfg80211]\n  [...]\n  cfg80211_register_wdev+0x78/0xb0 [cfg80211]\n  cfg80211_netdev_notifier_call+0x200/0x620 [cfg80211]\n  [...]\n  ieee80211_if_add+0x60e/0x8f0 [mac80211]\n  ieee80211_register_hw+0xda5/0x1170 [mac80211]\n\nIn this case, simply return an error instead, to indicate\nthat no data is available.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52834",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natl1c: Work around the DMA RX overflow issue\n\nThis is based on alx driver commit 881d0327db37 (\"net: alx: Work around\nthe DMA RX overflow issue\").\n\nThe alx and atl1c drivers had RX overflow error which was why a custom\nallocator was created to avoid certain addresses. The simpler workaround\nthen created for alx driver, but not for atl1c due to lack of tester.\n\nInstead of using a custom allocator, check the allocated skb address and\nuse skb_reserve() to move away from problematic 0x...fc0 address.\n\nTested on AR8131 on Acer 4540.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52835",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/core: Bail out early if the request AUX area is out of bound\n\nWhen perf-record with a large AUX area, e.g 4GB, it fails with:\n\n    #perf record -C 0 -m ,4G -e arm_spe_0// -- sleep 1\n    failed to mmap with 12 (Cannot allocate memory)\n\nand it reveals a WARNING with __alloc_pages():\n\n\t------------[ cut here ]------------\n\tWARNING: CPU: 44 PID: 17573 at mm/page_alloc.c:5568 __alloc_pages+0x1ec/0x248\n\tCall trace:\n\t __alloc_pages+0x1ec/0x248\n\t __kmalloc_large_node+0xc0/0x1f8\n\t __kmalloc_node+0x134/0x1e8\n\t rb_alloc_aux+0xe0/0x298\n\t perf_mmap+0x440/0x660\n\t mmap_region+0x308/0x8a8\n\t do_mmap+0x3c0/0x528\n\t vm_mmap_pgoff+0xf4/0x1b8\n\t ksys_mmap_pgoff+0x18c/0x218\n\t __arm64_sys_mmap+0x38/0x58\n\t invoke_syscall+0x50/0x128\n\t el0_svc_common.constprop.0+0x58/0x188\n\t do_el0_svc+0x34/0x50\n\t el0_svc+0x34/0x108\n\t el0t_64_sync_handler+0xb8/0xc0\n\t el0t_64_sync+0x1a4/0x1a8\n\n'rb-\u003eaux_pages' allocated by kcalloc() is a pointer array which is used to\nmaintains AUX trace pages. The allocated page for this array is physically\ncontiguous (and virtually contiguous) with an order of 0..MAX_ORDER. If the\nsize of pointer array crosses the limitation set by MAX_ORDER, it reveals a\nWARNING.\n\nSo bail out early with -ENOMEM if the request AUX area is out of bound,\ne.g.:\n\n    #perf record -C 0 -m ,4G -e arm_spe_0// -- sleep 1\n    failed to mmap with 12 (Cannot allocate memory)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52843",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: verify mac len before reading mac header\n\nLLC reads the mac header with eth_hdr without verifying that the skb\nhas an Ethernet header.\n\nSyzbot was able to enter llc_rcv on a tun device. Tun can insert\npackets without mac len and with user configurable skb-\u003eprotocol\n(passing a tun_pi header when not configuring IFF_NO_PI).\n\n    BUG: KMSAN: uninit-value in llc_station_ac_send_test_r net/llc/llc_station.c:81 [inline]\n    BUG: KMSAN: uninit-value in llc_station_rcv+0x6fb/0x1290 net/llc/llc_station.c:111\n    llc_station_ac_send_test_r net/llc/llc_station.c:81 [inline]\n    llc_station_rcv+0x6fb/0x1290 net/llc/llc_station.c:111\n    llc_rcv+0xc5d/0x14a0 net/llc/llc_input.c:218\n    __netif_receive_skb_one_core net/core/dev.c:5523 [inline]\n    __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5637\n    netif_receive_skb_internal net/core/dev.c:5723 [inline]\n    netif_receive_skb+0x58/0x660 net/core/dev.c:5782\n    tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1555\n    tun_get_user+0x54c5/0x69c0 drivers/net/tun.c:2002\n\nAdd a mac_len test before all three eth_hdr(skb) calls under net/llc.\n\nThere are further uses in include/net/llc_pdu.h. All these are\nprotected by a test skb-\u003eprotocol == ETH_P_802_2. Which does not\nprotect against this tun scenario.\n\nBut the mac_len test added in this patch in llc_fixup_skb will\nindirectly protect those too. That is called from llc_rcv before any\nother LLC code.\n\nIt is tempting to just add a blanket mac_len check in llc_rcv, but\nnot sure whether that could break valid LLC paths that do not assume\nan Ethernet header. 802.2 LLC may be used on top of non-802.3\nprotocols in principle. The below referenced commit shows that used\nto, on top of Token Ring.\n\nAt least one of the three eth_hdr uses goes back to before the start\nof git history. But the one that syzbot exercises is introduced in\nthis commit. That commit is old enough (2008), that effectively all\nstable kernels should receive this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52845",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Change nla_policy for bearer-related names to NLA_NUL_STRING\n\nsyzbot reported the following uninit-value access issue [1]:\n\n=====================================================\nBUG: KMSAN: uninit-value in strlen lib/string.c:418 [inline]\nBUG: KMSAN: uninit-value in strstr+0xb8/0x2f0 lib/string.c:756\n strlen lib/string.c:418 [inline]\n strstr+0xb8/0x2f0 lib/string.c:756\n tipc_nl_node_reset_link_stats+0x3ea/0xb50 net/tipc/node.c:2595\n genl_family_rcv_msg_doit net/netlink/genetlink.c:971 [inline]\n genl_family_rcv_msg net/netlink/genetlink.c:1051 [inline]\n genl_rcv_msg+0x11ec/0x1290 net/netlink/genetlink.c:1066\n netlink_rcv_skb+0x371/0x650 net/netlink/af_netlink.c:2545\n genl_rcv+0x40/0x60 net/netlink/genetlink.c:1075\n netlink_unicast_kernel net/netlink/af_netlink.c:1342 [inline]\n netlink_unicast+0xf47/0x1250 net/netlink/af_netlink.c:1368\n netlink_sendmsg+0x1238/0x13d0 net/netlink/af_netlink.c:1910\n sock_sendmsg_nosec net/socket.c:730 [inline]\n sock_sendmsg net/socket.c:753 [inline]\n ____sys_sendmsg+0x9c2/0xd60 net/socket.c:2541\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2595\n __sys_sendmsg net/socket.c:2624 [inline]\n __do_sys_sendmsg net/socket.c:2633 [inline]\n __se_sys_sendmsg net/socket.c:2631 [inline]\n __x64_sys_sendmsg+0x307/0x490 net/socket.c:2631\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nUninit was created at:\n slab_post_alloc_hook+0x12f/0xb70 mm/slab.h:767\n slab_alloc_node mm/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x577/0xa80 mm/slub.c:3523\n kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:559\n __alloc_skb+0x318/0x740 net/core/skbuff.c:650\n alloc_skb include/linux/skbuff.h:1286 [inline]\n netlink_alloc_large_skb net/netlink/af_netlink.c:1214 [inline]\n netlink_sendmsg+0xb34/0x13d0 net/netlink/af_netlink.c:1885\n sock_sendmsg_nosec net/socket.c:730 [inline]\n sock_sendmsg net/socket.c:753 [inline]\n ____sys_sendmsg+0x9c2/0xd60 net/socket.c:2541\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2595\n __sys_sendmsg net/socket.c:2624 [inline]\n __do_sys_sendmsg net/socket.c:2633 [inline]\n __se_sys_sendmsg net/socket.c:2631 [inline]\n __x64_sys_sendmsg+0x307/0x490 net/socket.c:2631\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nTIPC bearer-related names including link names must be null-terminated\nstrings. If a link name which is not null-terminated is passed through\nnetlink, strstr() and similar functions can cause buffer overrun. This\ncauses the above issue.\n\nThis patch changes the nla_policy for bearer-related names from NLA_STRING\nto NLA_NUL_STRING. This resolves the issue by ensuring that only\nnull-terminated strings are accepted as bearer-related names.\n\nsyzbot reported similar uninit-value issue related to bearer names [2]. The\nroot cause of this issue is that a non-null-terminated bearer name was\npassed. This patch also resolved this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52855",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: fix possible NULL pointer dereference caused by driver concurrency\n\nIn _dwc2_hcd_urb_enqueue(), \"urb-\u003ehcpriv = NULL\" is executed without\nholding the lock \"hsotg-\u003elock\". In _dwc2_hcd_urb_dequeue():\n\n    spin_lock_irqsave(\u0026hsotg-\u003elock, flags);\n    ...\n\tif (!urb-\u003ehcpriv) {\n\t\tdev_dbg(hsotg-\u003edev, \"## urb-\u003ehcpriv is NULL ##\\n\");\n\t\tgoto out;\n\t}\n    rc = dwc2_hcd_urb_dequeue(hsotg, urb-\u003ehcpriv); // Use urb-\u003ehcpriv\n    ...\nout:\n    spin_unlock_irqrestore(\u0026hsotg-\u003elock, flags);\n\nWhen _dwc2_hcd_urb_enqueue() and _dwc2_hcd_urb_dequeue() are\nconcurrently executed, the NULL check of \"urb-\u003ehcpriv\" can be executed\nbefore \"urb-\u003ehcpriv = NULL\". After urb-\u003ehcpriv is NULL, it can be used\nin the function call to dwc2_hcd_urb_dequeue(), which can cause a NULL\npointer dereference.\n\nThis possible bug is found by an experimental static analysis tool\ndeveloped by myself. This tool analyzes the locking APIs to extract\nfunction pairs that can be concurrently executed, and then analyzes the\ninstructions in the paired functions to identify possible concurrency\nbugs including data races and atomicity violations. The above possible\nbug is reported, when my tool analyzes the source code of Linux 6.5.\n\nTo fix this possible bug, \"urb-\u003ehcpriv = NULL\" should be executed with\nholding the lock \"hsotg-\u003elock\". After using this patch, my tool never\nreports the possible bug, with the kernelconfiguration allyesconfig for\nx86_64. Because I have no associated hardware, I cannot test the patch\nin runtime testing, and just verify it according to the code logic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52864",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: wmi: Fix opening of char device\n\nSince commit fa1f68db6ca7 (\"drivers: misc: pass miscdevice pointer via\nfile private data\"), the miscdevice stores a pointer to itself inside\nfilp-\u003eprivate_data, which means that private_data will not be NULL when\nwmi_char_open() is called. This might cause memory corruption should\nwmi_char_open() be unable to find its driver, something which can\nhappen when the associated WMI device is deleted in wmi_free_devices().\n\nFix the problem by using the miscdevice pointer to retrieve the WMI\ndevice data associated with a char device using container_of(). This\nalso avoids wmi_char_open() picking a wrong WMI device bound to a\ndriver with the same name as the original driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6797: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: possible buffer overflow\n\nBuffer 'afmt_status' of size 6 could overflow, since index 'afmt_idx' is\nchecked after access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52875",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt2701: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: require CAP_NET_ADMIN to attach N_GSM0710 ldisc\n\nAny unprivileged user can attach N_GSM0710 ldisc, but it requires\nCAP_NET_ADMIN to create a GSM network anyway.\n\nRequire initial namespace CAP_NET_ADMIN to do that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: do not accept ACK of bytes we never sent\n\nThis patch is based on a detailed report and ideas from Yepeng Pan\nand Christian Rossow.\n\nACK seq validation is currently following RFC 5961 5.2 guidelines:\n\n   The ACK value is considered acceptable only if\n   it is in the range of ((SND.UNA - MAX.SND.WND) \u003c= SEG.ACK \u003c=\n   SND.NXT).  All incoming segments whose ACK value doesn't satisfy the\n   above condition MUST be discarded and an ACK sent back.  It needs to\n   be noted that RFC 793 on page 72 (fifth check) says: \"If the ACK is a\n   duplicate (SEG.ACK \u003c SND.UNA), it can be ignored.  If the ACK\n   acknowledges something not yet sent (SEG.ACK \u003e SND.NXT) then send an\n   ACK, drop the segment, and return\".  The \"ignored\" above implies that\n   the processing of the incoming data segment continues, which means\n   the ACK value is treated as acceptable.  This mitigation makes the\n   ACK check more stringent since any ACK \u003c SND.UNA wouldn't be\n   accepted, instead only ACKs that are in the range ((SND.UNA -\n   MAX.SND.WND) \u003c= SEG.ACK \u003c= SND.NXT) get through.\n\nThis can be refined for new (and possibly spoofed) flows,\nby not accepting ACK for bytes that were never sent.\n\nThis greatly improves TCP security at a little cost.\n\nI added a Fixes: tag to make sure this patch will reach stable trees,\neven if the 'blamed' patch was adhering to the RFC.\n\ntp-\u003ebytes_acked was added in linux-4.2\n\nFollowing packetdrill test (courtesy of Yepeng Pan) shows\nthe issue at hand:\n\n0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3\n+0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0\n+0 bind(3, ..., ...) = 0\n+0 listen(3, 1024) = 0\n\n// ---------------- Handshake ------------------- //\n\n// when window scale is set to 14 the window size can be extended to\n// 65535 * (2^14) = 1073725440. Linux would accept an ACK packet\n// with ack number in (Server_ISN+1-1073725440. Server_ISN+1)\n// ,though this ack number acknowledges some data never\n// sent by the server.\n\n+0 \u003c S 0:0(0) win 65535 \u003cmss 1400,nop,wscale 14\u003e\n+0 \u003e S. 0:0(0) ack 1 \u003c...\u003e\n+0 \u003c . 1:1(0) ack 1 win 65535\n+0 accept(3, ..., ...) = 4\n\n// For the established connection, we send an ACK packet,\n// the ack packet uses ack number 1 - 1073725300 + 2^32,\n// where 2^32 is used to wrap around.\n// Note: we used 1073725300 instead of 1073725440 to avoid possible\n// edge cases.\n// 1 - 1073725300 + 2^32 = 3221241997\n\n// Oops, old kernels happily accept this packet.\n+0 \u003c . 1:1001(1000) ack 3221241997 win 65535\n\n// After the kernel fix the following will be replaced by a challenge ACK,\n// and prior malicious frame would be dropped.\n+0 \u003e . 1:1(0) ack 1001",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-5388",
      "Description": "NSS was susceptible to a timing side-channel attack when performing RSA decryption. This attack could potentially allow an attacker to recover the private data. This vulnerability affects Firefox \u003c 124, Firefox ESR \u003c 115.9, and Thunderbird \u003c 115.9.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libfreebl3-3.101.1-58.118.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libsoftokn3-3.101.1-58.118.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:mozilla-nss-3.101.1-58.118.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:mozilla-nss-certs-3.101.1-58.118.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6270",
      "Description": "A flaw was found in the ATA over Ethernet (AoE) driver in the Linux kernel. The aoecmd_cfg_pkts() function improperly updates the refcnt on `struct net_device`, and a use-after-free can be triggered by racing between the free on the struct and the access through the `skbtxq` global queue. This could lead to a denial of service condition or potential code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6356",
      "Description": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver and causing kernel panic and a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6535",
      "Description": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver, causing kernel panic and a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6597",
      "Description": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7042",
      "Description": "A null pointer dereference vulnerability was found in ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev() in drivers/net/wireless/ath/ath10k/wmi-tlv.c in the Linux kernel. This issue could be exploited to trigger a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7192",
      "Description": "A memory leak problem was found in ctnetlink_create_conntrack in net/netfilter/nf_conntrack_netlink.c in the Linux Kernel. This issue may allow a local attacker with CAP_NET_ADMIN privileges to cause a denial of service (DoS) attack due to a refcount overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0397",
      "Description": "A defect was discovered in the Python \"ssl\" module where there is a memory\nrace condition with the ssl.SSLContext methods \"cert_store_stats()\" and\n\"get_ca_certs()\". The race condition can be triggered if the methods are\ncalled at the same time as certificates are loaded into the SSLContext,\nsuch as during the TLS handshake with a certificate directory configured.\nThis issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0450",
      "Description": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to \"quoted-overlap\" zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libpython2_7-1_0-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libpython3_4m1_0-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-base-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-xml-2.7.18-33.35.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-base-3.4.10-25.130.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python3-curses-3.4.10-25.130.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0639",
      "Description": "A denial of service vulnerability due to a deadlock was found in sctp_auto_asconf_init in net/sctp/socket.c in the Linux kernel's SCTP subsystem. This flaw allows guests with local user privileges to trigger a deadlock and potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2201",
      "Description": "A cross-privilege Spectre v2 vulnerability allows attackers to bypass all deployed mitigations, including the recent Fine(IBT), and to leak arbitrary Linux kernel memory on Intel systems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-22099",
      "Description": "NULL Pointer Dereference vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (net, bluetooth modules) allows Overflow Buffers. This vulnerability is associated with program files /net/bluetooth/rfcomm/core.C.\n\nThis issue affects Linux kernel: v2.6.12-rc2.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23307",
      "Description": "Integer Overflow or Wraparound vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (md, raid, raid5 modules) allows Forced Integer Overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23848",
      "Description": "In the Linux kernel through 6.7.1, there is a use-after-free in cec_queue_msg_fh, related to drivers/media/cec/core/cec-adap.c and drivers/media/cec/core/cec-api.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-24855",
      "Description": "A race condition was found in the Linux kernel's scsi device driver in lpfc_unregister_fcf_rescan() function. This can result in a null pointer dereference issue, possibly leading to a kernel panic or denial of service issue.\n\n\n\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-24861",
      "Description": "A race condition was found in the Linux kernel's media/xc4000 device driver in xc4000 xc4000_get_frequency() function. This can result in return value overflow issue, possibly leading to malfunction or denial of service issue.\n\n\n\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26614",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: make sure init the accept_queue's spinlocks once\n\nWhen I run syz's reproduction C program locally, it causes the following\nissue:\npvqspinlock: lock 0xffff9d181cd5c660 has corrupted value 0x0!\nWARNING: CPU: 19 PID: 21160 at __pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\nRIP: 0010:__pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)\nCode: 73 56 3a ff 90 c3 cc cc cc cc 8b 05 bb 1f 48 01 85 c0 74 05 c3 cc cc cc cc 8b 17 48 89 fe 48 c7 c7\n30 20 ce 8f e8 ad 56 42 ff \u003c0f\u003e 0b c3 cc cc cc cc 0f 0b 0f 1f 40 00 90 90 90 90 90 90 90 90 90\nRSP: 0018:ffffa8d200604cb8 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9d1ef60e0908\nRDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffff9d1ef60e0900\nRBP: ffff9d181cd5c280 R08: 0000000000000000 R09: 00000000ffff7fff\nR10: ffffa8d200604b68 R11: ffffffff907dcdc8 R12: 0000000000000000\nR13: ffff9d181cd5c660 R14: ffff9d1813a3f330 R15: 0000000000001000\nFS:  00007fa110184640(0000) GS:ffff9d1ef60c0000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000000 CR3: 000000011f65e000 CR4: 00000000000006f0\nCall Trace:\n\u003cIRQ\u003e\n  _raw_spin_unlock (kernel/locking/spinlock.c:186)\n  inet_csk_reqsk_queue_add (net/ipv4/inet_connection_sock.c:1321)\n  inet_csk_complete_hashdance (net/ipv4/inet_connection_sock.c:1358)\n  tcp_check_req (net/ipv4/tcp_minisocks.c:868)\n  tcp_v4_rcv (net/ipv4/tcp_ipv4.c:2260)\n  ip_protocol_deliver_rcu (net/ipv4/ip_input.c:205)\n  ip_local_deliver_finish (net/ipv4/ip_input.c:234)\n  __netif_receive_skb_one_core (net/core/dev.c:5529)\n  process_backlog (./include/linux/rcupdate.h:779)\n  __napi_poll (net/core/dev.c:6533)\n  net_rx_action (net/core/dev.c:6604)\n  __do_softirq (./arch/x86/include/asm/jump_label.h:27)\n  do_softirq (kernel/softirq.c:454 kernel/softirq.c:441)\n\u003c/IRQ\u003e\n\u003cTASK\u003e\n  __local_bh_enable_ip (kernel/softirq.c:381)\n  __dev_queue_xmit (net/core/dev.c:4374)\n  ip_finish_output2 (./include/net/neighbour.h:540 net/ipv4/ip_output.c:235)\n  __ip_queue_xmit (net/ipv4/ip_output.c:535)\n  __tcp_transmit_skb (net/ipv4/tcp_output.c:1462)\n  tcp_rcv_synsent_state_process (net/ipv4/tcp_input.c:6469)\n  tcp_rcv_state_process (net/ipv4/tcp_input.c:6657)\n  tcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1929)\n  __release_sock (./include/net/sock.h:1121 net/core/sock.c:2968)\n  release_sock (net/core/sock.c:3536)\n  inet_wait_for_connect (net/ipv4/af_inet.c:609)\n  __inet_stream_connect (net/ipv4/af_inet.c:702)\n  inet_stream_connect (net/ipv4/af_inet.c:748)\n  __sys_connect (./include/linux/file.h:45 net/socket.c:2064)\n  __x64_sys_connect (net/socket.c:2073 net/socket.c:2070 net/socket.c:2070)\n  do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:82)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)\n  RIP: 0033:0x7fa10ff05a3d\n  Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89\n  c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d ab a3 0e 00 f7 d8 64 89 01 48\n  RSP: 002b:00007fa110183de8 EFLAGS: 00000202 ORIG_RAX: 000000000000002a\n  RAX: ffffffffffffffda RBX: 0000000020000054 RCX: 00007fa10ff05a3d\n  RDX: 000000000000001c RSI: 0000000020000040 RDI: 0000000000000003\n  RBP: 00007fa110183e20 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000202 R12: 00007fa110184640\n  R13: 0000000000000000 R14: 00007fa10fe8b060 R15: 00007fff73e23b20\n\u003c/TASK\u003e\n\nThe issue triggering process is analyzed as follows:\nThread A                                       Thread B\ntcp_v4_rcv\t//receive ack TCP packet       inet_shutdown\n  tcp_check_req                                  tcp_disconnect //disconnect sock\n  ...                                              tcp_set_state(sk, TCP_CLOSE)\n    inet_csk_complete_hashdance                ...\n      inet_csk_reqsk_queue_add         \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26625",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: call sock_orphan() at release time\n\nsyzbot reported an interesting trace [1] caused by a stale sk-\u003esk_wq\npointer in a closed llc socket.\n\nIn commit ff7b11aa481f (\"net: socket: set sock-\u003esk to NULL after\ncalling proto_ops::release()\") Eric Biggers hinted that some protocols\nare missing a sock_orphan(), we need to perform a full audit.\n\nIn net-next, I plan to clear sock-\u003esk from sock_orphan() and\namend Eric patch to add a warning.\n\n[1]\n BUG: KASAN: slab-use-after-free in list_empty include/linux/list.h:373 [inline]\n BUG: KASAN: slab-use-after-free in waitqueue_active include/linux/wait.h:127 [inline]\n BUG: KASAN: slab-use-after-free in sock_def_write_space_wfree net/core/sock.c:3384 [inline]\n BUG: KASAN: slab-use-after-free in sock_wfree+0x9a8/0x9d0 net/core/sock.c:2468\nRead of size 8 at addr ffff88802f4fc880 by task ksoftirqd/1/27\n\nCPU: 1 PID: 27 Comm: ksoftirqd/1 Not tainted 6.8.0-rc1-syzkaller-00049-g6098d87eaf31 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.2-debian-1.16.2-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0xd9/0x1b0 lib/dump_stack.c:106\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0xc4/0x620 mm/kasan/report.c:488\n  kasan_report+0xda/0x110 mm/kasan/report.c:601\n  list_empty include/linux/list.h:373 [inline]\n  waitqueue_active include/linux/wait.h:127 [inline]\n  sock_def_write_space_wfree net/core/sock.c:3384 [inline]\n  sock_wfree+0x9a8/0x9d0 net/core/sock.c:2468\n  skb_release_head_state+0xa3/0x2b0 net/core/skbuff.c:1080\n  skb_release_all net/core/skbuff.c:1092 [inline]\n  napi_consume_skb+0x119/0x2b0 net/core/skbuff.c:1404\n  e1000_unmap_and_free_tx_resource+0x144/0x200 drivers/net/ethernet/intel/e1000/e1000_main.c:1970\n  e1000_clean_tx_irq drivers/net/ethernet/intel/e1000/e1000_main.c:3860 [inline]\n  e1000_clean+0x4a1/0x26e0 drivers/net/ethernet/intel/e1000/e1000_main.c:3801\n  __napi_poll.constprop.0+0xb4/0x540 net/core/dev.c:6576\n  napi_poll net/core/dev.c:6645 [inline]\n  net_rx_action+0x956/0xe90 net/core/dev.c:6778\n  __do_softirq+0x21a/0x8de kernel/softirq.c:553\n  run_ksoftirqd kernel/softirq.c:921 [inline]\n  run_ksoftirqd+0x31/0x60 kernel/softirq.c:913\n  smpboot_thread_fn+0x660/0xa10 kernel/smpboot.c:164\n  kthread+0x2c6/0x3a0 kernel/kthread.c:388\n  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147\n  ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:242\n \u003c/TASK\u003e\n\nAllocated by task 5167:\n  kasan_save_stack+0x33/0x50 mm/kasan/common.c:47\n  kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n  unpoison_slab_object mm/kasan/common.c:314 [inline]\n  __kasan_slab_alloc+0x81/0x90 mm/kasan/common.c:340\n  kasan_slab_alloc include/linux/kasan.h:201 [inline]\n  slab_post_alloc_hook mm/slub.c:3813 [inline]\n  slab_alloc_node mm/slub.c:3860 [inline]\n  kmem_cache_alloc_lru+0x142/0x6f0 mm/slub.c:3879\n  alloc_inode_sb include/linux/fs.h:3019 [inline]\n  sock_alloc_inode+0x25/0x1c0 net/socket.c:308\n  alloc_inode+0x5d/0x220 fs/inode.c:260\n  new_inode_pseudo+0x16/0x80 fs/inode.c:1005\n  sock_alloc+0x40/0x270 net/socket.c:634\n  __sock_create+0xbc/0x800 net/socket.c:1535\n  sock_create net/socket.c:1622 [inline]\n  __sys_socket_create net/socket.c:1659 [inline]\n  __sys_socket+0x14c/0x260 net/socket.c:1706\n  __do_sys_socket net/socket.c:1720 [inline]\n  __se_sys_socket net/socket.c:1718 [inline]\n  __x64_sys_socket+0x72/0xb0 net/socket.c:1718\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xd3/0x250 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nFreed by task 0:\n  kasan_save_stack+0x33/0x50 mm/kasan/common.c:47\n  kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n  kasan_save_free_info+0x3f/0x60 mm/kasan/generic.c:640\n  poison_slab_object mm/kasan/common.c:241 [inline]\n  __kasan_slab_free+0x121/0x1b0 mm/kasan/common.c:257\n  kasan_slab_free include/linux/kasan.h:184 [inline]\n  slab_free_hook mm/slub.c:2121 [inlin\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26633",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nip6_tunnel: fix NEXTHDR_FRAGMENT handling in ip6_tnl_parse_tlv_enc_lim()\n\nsyzbot pointed out [1] that NEXTHDR_FRAGMENT handling is broken.\n\nReading frag_off can only be done if we pulled enough bytes\nto skb-\u003ehead. Currently we might access garbage.\n\n[1]\nBUG: KMSAN: uninit-value in ip6_tnl_parse_tlv_enc_lim+0x94f/0xbb0\nip6_tnl_parse_tlv_enc_lim+0x94f/0xbb0\nipxip6_tnl_xmit net/ipv6/ip6_tunnel.c:1326 [inline]\nip6_tnl_start_xmit+0xab2/0x1a70 net/ipv6/ip6_tunnel.c:1432\n__netdev_start_xmit include/linux/netdevice.h:4940 [inline]\nnetdev_start_xmit include/linux/netdevice.h:4954 [inline]\nxmit_one net/core/dev.c:3548 [inline]\ndev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n__dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\nneigh_connected_output+0x569/0x660 net/core/neighbour.c:1592\nneigh_output include/net/neighbour.h:542 [inline]\nip6_finish_output2+0x23a9/0x2b30 net/ipv6/ip6_output.c:137\nip6_finish_output+0x855/0x12b0 net/ipv6/ip6_output.c:222\nNF_HOOK_COND include/linux/netfilter.h:303 [inline]\nip6_output+0x323/0x610 net/ipv6/ip6_output.c:243\ndst_output include/net/dst.h:451 [inline]\nip6_local_out+0xe9/0x140 net/ipv6/output_core.c:155\nip6_send_skb net/ipv6/ip6_output.c:1952 [inline]\nip6_push_pending_frames+0x1f9/0x560 net/ipv6/ip6_output.c:1972\nrawv6_push_pending_frames+0xbe8/0xdf0 net/ipv6/raw.c:582\nrawv6_sendmsg+0x2b66/0x2e70 net/ipv6/raw.c:920\ninet_sendmsg+0x105/0x190 net/ipv4/af_inet.c:847\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg net/socket.c:745 [inline]\n____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n__sys_sendmsg net/socket.c:2667 [inline]\n__do_sys_sendmsg net/socket.c:2676 [inline]\n__se_sys_sendmsg net/socket.c:2674 [inline]\n__x64_sys_sendmsg+0x307/0x490 net/socket.c:2674\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\nslab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\nslab_alloc_node mm/slub.c:3478 [inline]\n__kmem_cache_alloc_node+0x5c9/0x970 mm/slub.c:3517\n__do_kmalloc_node mm/slab_common.c:1006 [inline]\n__kmalloc_node_track_caller+0x118/0x3c0 mm/slab_common.c:1027\nkmalloc_reserve+0x249/0x4a0 net/core/skbuff.c:582\npskb_expand_head+0x226/0x1a00 net/core/skbuff.c:2098\n__pskb_pull_tail+0x13b/0x2310 net/core/skbuff.c:2655\npskb_may_pull_reason include/linux/skbuff.h:2673 [inline]\npskb_may_pull include/linux/skbuff.h:2681 [inline]\nip6_tnl_parse_tlv_enc_lim+0x901/0xbb0 net/ipv6/ip6_tunnel.c:408\nipxip6_tnl_xmit net/ipv6/ip6_tunnel.c:1326 [inline]\nip6_tnl_start_xmit+0xab2/0x1a70 net/ipv6/ip6_tunnel.c:1432\n__netdev_start_xmit include/linux/netdevice.h:4940 [inline]\nnetdev_start_xmit include/linux/netdevice.h:4954 [inline]\nxmit_one net/core/dev.c:3548 [inline]\ndev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n__dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\ndev_queue_xmit include/linux/netdevice.h:3134 [inline]\nneigh_connected_output+0x569/0x660 net/core/neighbour.c:1592\nneigh_output include/net/neighbour.h:542 [inline]\nip6_finish_output2+0x23a9/0x2b30 net/ipv6/ip6_output.c:137\nip6_finish_output+0x855/0x12b0 net/ipv6/ip6_output.c:222\nNF_HOOK_COND include/linux/netfilter.h:303 [inline]\nip6_output+0x323/0x610 net/ipv6/ip6_output.c:243\ndst_output include/net/dst.h:451 [inline]\nip6_local_out+0xe9/0x140 net/ipv6/output_core.c:155\nip6_send_skb net/ipv6/ip6_output.c:1952 [inline]\nip6_push_pending_frames+0x1f9/0x560 net/ipv6/ip6_output.c:1972\nrawv6_push_pending_frames+0xbe8/0xdf0 net/ipv6/raw.c:582\nrawv6_sendmsg+0x2b66/0x2e70 net/ipv6/raw.c:920\ninet_sendmsg+0x105/0x190 net/ipv4/af_inet.c:847\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg net/socket.c:745 [inline]\n____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n__sys_sendmsg net/socket.c:2667 [inline]\n__do_sys_sendms\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26635",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: Drop support for ETH_P_TR_802_2.\n\nsyzbot reported an uninit-value bug below. [0]\n\nllc supports ETH_P_802_2 (0x0004) and used to support ETH_P_TR_802_2\n(0x0011), and syzbot abused the latter to trigger the bug.\n\n  write$tun(r0, \u0026(0x7f0000000040)={@val={0x0, 0x11}, @val, @mpls={[], @llc={@snap={0xaa, 0x1, ')', \"90e5dd\"}}}}, 0x16)\n\nllc_conn_handler() initialises local variables {saddr,daddr}.mac\nbased on skb in llc_pdu_decode_sa()/llc_pdu_decode_da() and passes\nthem to __llc_lookup().\n\nHowever, the initialisation is done only when skb-\u003eprotocol is\nhtons(ETH_P_802_2), otherwise, __llc_lookup_established() and\n__llc_lookup_listener() will read garbage.\n\nThe missing initialisation existed prior to commit 211ed865108e\n(\"net: delete all instances of special processing for token ring\").\n\nIt removed the part to kick out the token ring stuff but forgot to\nclose the door allowing ETH_P_TR_802_2 packets to sneak into llc_rcv().\n\nLet's remove llc_tr_packet_type and complete the deprecation.\n\n[0]:\nBUG: KMSAN: uninit-value in __llc_lookup_established+0xe9d/0xf90\n __llc_lookup_established+0xe9d/0xf90\n __llc_lookup net/llc/llc_conn.c:611 [inline]\n llc_conn_handler+0x4bd/0x1360 net/llc/llc_conn.c:791\n llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c:206\n __netif_receive_skb_one_core net/core/dev.c:5527 [inline]\n __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5641\n netif_receive_skb_internal net/core/dev.c:5727 [inline]\n netif_receive_skb+0x58/0x660 net/core/dev.c:5786\n tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1555\n tun_get_user+0x53af/0x66d0 drivers/net/tun.c:2002\n tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048\n call_write_iter include/linux/fs.h:2020 [inline]\n new_sync_write fs/read_write.c:491 [inline]\n vfs_write+0x8ef/0x1490 fs/read_write.c:584\n ksys_write+0x20f/0x4c0 fs/read_write.c:637\n __do_sys_write fs/read_write.c:649 [inline]\n __se_sys_write fs/read_write.c:646 [inline]\n __x64_sys_write+0x93/0xd0 fs/read_write.c:646\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x44/0x110 arch/x86/entry/common.c:82\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nLocal variable daddr created at:\n llc_conn_handler+0x53/0x1360 net/llc/llc_conn.c:783\n llc_rcv+0xfbb/0x14a0 net/llc/llc_input.c:206\n\nCPU: 1 PID: 5004 Comm: syz-executor994 Not tainted 6.6.0-syzkaller-14500-g1c41041124bd #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/09/2023",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26636",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: make llc_ui_sendmsg() more robust against bonding changes\n\nsyzbot was able to trick llc_ui_sendmsg(), allocating an skb with no\nheadroom, but subsequently trying to push 14 bytes of Ethernet header [1]\n\nLike some others, llc_ui_sendmsg() releases the socket lock before\ncalling sock_alloc_send_skb().\nThen it acquires it again, but does not redo all the sanity checks\nthat were performed.\n\nThis fix:\n\n- Uses LL_RESERVED_SPACE() to reserve space.\n- Check all conditions again after socket lock is held again.\n- Do not account Ethernet header for mtu limitation.\n\n[1]\n\nskbuff: skb_under_panic: text:ffff800088baa334 len:1514 put:14 head:ffff0000c9c37000 data:ffff0000c9c36ff2 tail:0x5dc end:0x6c0 dev:bond0\n\n kernel BUG at net/core/skbuff.c:193 !\nInternal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 6875 Comm: syz-executor.0 Not tainted 6.7.0-rc8-syzkaller-00101-g0802e17d9aca-dirty #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : skb_panic net/core/skbuff.c:189 [inline]\n pc : skb_under_panic+0x13c/0x140 net/core/skbuff.c:203\n lr : skb_panic net/core/skbuff.c:189 [inline]\n lr : skb_under_panic+0x13c/0x140 net/core/skbuff.c:203\nsp : ffff800096f97000\nx29: ffff800096f97010 x28: ffff80008cc8d668 x27: dfff800000000000\nx26: ffff0000cb970c90 x25: 00000000000005dc x24: ffff0000c9c36ff2\nx23: ffff0000c9c37000 x22: 00000000000005ea x21: 00000000000006c0\nx20: 000000000000000e x19: ffff800088baa334 x18: 1fffe000368261ce\nx17: ffff80008e4ed000 x16: ffff80008a8310f8 x15: 0000000000000001\nx14: 1ffff00012df2d58 x13: 0000000000000000 x12: 0000000000000000\nx11: 0000000000000001 x10: 0000000000ff0100 x9 : e28a51f1087e8400\nx8 : e28a51f1087e8400 x7 : ffff80008028f8d0 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : 0000000000000001 x3 : ffff800082b78714\nx2 : 0000000000000001 x1 : 0000000100000000 x0 : 0000000000000089\nCall trace:\n  skb_panic net/core/skbuff.c:189 [inline]\n  skb_under_panic+0x13c/0x140 net/core/skbuff.c:203\n  skb_push+0xf0/0x108 net/core/skbuff.c:2451\n  eth_header+0x44/0x1f8 net/ethernet/eth.c:83\n  dev_hard_header include/linux/netdevice.h:3188 [inline]\n  llc_mac_hdr_init+0x110/0x17c net/llc/llc_output.c:33\n  llc_sap_action_send_xid_c+0x170/0x344 net/llc/llc_s_ac.c:85\n  llc_exec_sap_trans_actions net/llc/llc_sap.c:153 [inline]\n  llc_sap_next_state net/llc/llc_sap.c:182 [inline]\n  llc_sap_state_process+0x1ec/0x774 net/llc/llc_sap.c:209\n  llc_build_and_send_xid_pkt+0x12c/0x1c0 net/llc/llc_sap.c:270\n  llc_ui_sendmsg+0x7bc/0xb1c net/llc/af_llc.c:997\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  sock_sendmsg+0x194/0x274 net/socket.c:767\n  splice_to_socket+0x7cc/0xd58 fs/splice.c:881\n  do_splice_from fs/splice.c:933 [inline]\n  direct_splice_actor+0xe4/0x1c0 fs/splice.c:1142\n  splice_direct_to_actor+0x2a0/0x7e4 fs/splice.c:1088\n  do_splice_direct+0x20c/0x348 fs/splice.c:1194\n  do_sendfile+0x4bc/0xc70 fs/read_write.c:1254\n  __do_sys_sendfile64 fs/read_write.c:1322 [inline]\n  __se_sys_sendfile64 fs/read_write.c:1308 [inline]\n  __arm64_sys_sendfile64+0x160/0x3b4 fs/read_write.c:1308\n  __invoke_syscall arch/arm64/kernel/syscall.c:37 [inline]\n  invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:51\n  el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:136\n  do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:155\n  el0_svc+0x54/0x158 arch/arm64/kernel/entry-common.c:678\n  el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:696\n  el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:595\nCode: aa1803e6 aa1903e7 a90023f5 94792f6a (d4210000)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26641",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\n\nsyzbot found __ip6_tnl_rcv() could access unitiliazed data [1].\n\nCall pskb_inet_may_pull() to fix this, and initialize ipv6h\nvariable after this call as it can change skb-\u003ehead.\n\n[1]\n BUG: KMSAN: uninit-value in __INET_ECN_decapsulate include/net/inet_ecn.h:253 [inline]\n BUG: KMSAN: uninit-value in INET_ECN_decapsulate include/net/inet_ecn.h:275 [inline]\n BUG: KMSAN: uninit-value in IP6_ECN_decapsulate+0x7df/0x1e50 include/net/inet_ecn.h:321\n  __INET_ECN_decapsulate include/net/inet_ecn.h:253 [inline]\n  INET_ECN_decapsulate include/net/inet_ecn.h:275 [inline]\n  IP6_ECN_decapsulate+0x7df/0x1e50 include/net/inet_ecn.h:321\n  ip6ip6_dscp_ecn_decapsulate+0x178/0x1b0 net/ipv6/ip6_tunnel.c:727\n  __ip6_tnl_rcv+0xd4e/0x1590 net/ipv6/ip6_tunnel.c:845\n  ip6_tnl_rcv+0xce/0x100 net/ipv6/ip6_tunnel.c:888\n gre_rcv+0x143f/0x1870\n  ip6_protocol_deliver_rcu+0xda6/0x2a60 net/ipv6/ip6_input.c:438\n  ip6_input_finish net/ipv6/ip6_input.c:483 [inline]\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip6_input+0x15d/0x430 net/ipv6/ip6_input.c:492\n  ip6_mc_input+0xa7e/0xc80 net/ipv6/ip6_input.c:586\n  dst_input include/net/dst.h:461 [inline]\n  ip6_rcv_finish+0x5db/0x870 net/ipv6/ip6_input.c:79\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ipv6_rcv+0xda/0x390 net/ipv6/ip6_input.c:310\n  __netif_receive_skb_one_core net/core/dev.c:5532 [inline]\n  __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5646\n  netif_receive_skb_internal net/core/dev.c:5732 [inline]\n  netif_receive_skb+0x58/0x660 net/core/dev.c:5791\n  tun_rx_batched+0x3ee/0x980 drivers/net/tun.c:1555\n  tun_get_user+0x53af/0x66d0 drivers/net/tun.c:2002\n  tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048\n  call_write_iter include/linux/fs.h:2084 [inline]\n  new_sync_write fs/read_write.c:497 [inline]\n  vfs_write+0x786/0x1200 fs/read_write.c:590\n  ksys_write+0x20f/0x4c0 fs/read_write.c:643\n  __do_sys_write fs/read_write.c:655 [inline]\n  __se_sys_write fs/read_write.c:652 [inline]\n  __x64_sys_write+0x93/0xd0 fs/read_write.c:652\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n  slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\n  slab_alloc_node mm/slub.c:3478 [inline]\n  kmem_cache_alloc_node+0x5e9/0xb10 mm/slub.c:3523\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n  __alloc_skb+0x318/0x740 net/core/skbuff.c:651\n  alloc_skb include/linux/skbuff.h:1286 [inline]\n  alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6334\n  sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2787\n  tun_alloc_skb drivers/net/tun.c:1531 [inline]\n  tun_get_user+0x1e8a/0x66d0 drivers/net/tun.c:1846\n  tun_chr_write_iter+0x3af/0x5d0 drivers/net/tun.c:2048\n  call_write_iter include/linux/fs.h:2084 [inline]\n  new_sync_write fs/read_write.c:497 [inline]\n  vfs_write+0x786/0x1200 fs/read_write.c:590\n  ksys_write+0x20f/0x4c0 fs/read_write.c:643\n  __do_sys_write fs/read_write.c:655 [inline]\n  __se_sys_write fs/read_write.c:652 [inline]\n  __x64_sys_write+0x93/0xd0 fs/read_write.c:652\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nCPU: 0 PID: 5034 Comm: syz-executor331 Not tainted 6.7.0-syzkaller-00562-g9f8413c4a66f #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26642",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: disallow anonymous set with timeout flag\n\nAnonymous sets are never used with timeout from userspace, reject this.\nException to this rule is NFT_SET_EVAL to ensure legacy meters still work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26651",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsr9800: Add check for usbnet_get_endpoints\n\nAdd check for usbnet_get_endpoints() and return the error if it fails\nin order to transfer the error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26671",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: fix IO hang from sbitmap wakeup race\n\nIn blk_mq_mark_tag_wait(), __add_wait_queue() may be re-ordered\nwith the following blk_mq_get_driver_tag() in case of getting driver\ntag failure.\n\nThen in __sbitmap_queue_wake_up(), waitqueue_active() may not observe\nthe added waiter in blk_mq_mark_tag_wait() and wake up nothing, meantime\nblk_mq_mark_tag_wait() can't get driver tag successfully.\n\nThis issue can be reproduced by running the following test in loop, and\nfio hang can be observed in \u003c 30min when running it on my test VM\nin laptop.\n\n\tmodprobe -r scsi_debug\n\tmodprobe scsi_debug delay=0 dev_size_mb=4096 max_queue=1 host_max_queue=1 submit_queues=4\n\tdev=`ls -d /sys/bus/pseudo/drivers/scsi_debug/adapter*/host*/target*/*/block/* | head -1 | xargs basename`\n\tfio --filename=/dev/\"$dev\" --direct=1 --rw=randrw --bs=4k --iodepth=1 \\\n       \t\t--runtime=100 --numjobs=40 --time_based --name=test \\\n        \t--ioengine=libaio\n\nFix the issue by adding one explicit barrier in blk_mq_mark_tag_wait(), which\nis just fine in case of running out of tag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26675",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nppp_async: limit MRU to 64K\n\nsyzbot triggered a warning [1] in __alloc_pages():\n\nWARN_ON_ONCE_GFP(order \u003e MAX_PAGE_ORDER, gfp)\n\nWillem fixed a similar issue in commit c0a2a1b0d631 (\"ppp: limit MRU to 64K\")\n\nAdopt the same sanity check for ppp_async_ioctl(PPPIOCSMRU)\n\n[1]:\n\n WARNING: CPU: 1 PID: 11 at mm/page_alloc.c:4543 __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\nModules linked in:\nCPU: 1 PID: 11 Comm: kworker/u4:0 Not tainted 6.8.0-rc2-syzkaller-g41bccc98fb79 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\nWorkqueue: events_unbound flush_to_ldisc\npstate: 204000c5 (nzCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\n lr : __alloc_pages+0xc8/0x698 mm/page_alloc.c:4537\nsp : ffff800093967580\nx29: ffff800093967660 x28: ffff8000939675a0 x27: dfff800000000000\nx26: ffff70001272ceb4 x25: 0000000000000000 x24: ffff8000939675c0\nx23: 0000000000000000 x22: 0000000000060820 x21: 1ffff0001272ceb8\nx20: ffff8000939675e0 x19: 0000000000000010 x18: ffff800093967120\nx17: ffff800083bded5c x16: ffff80008ac97500 x15: 0000000000000005\nx14: 1ffff0001272cebc x13: 0000000000000000 x12: 0000000000000000\nx11: ffff70001272cec1 x10: 1ffff0001272cec0 x9 : 0000000000000001\nx8 : ffff800091c91000 x7 : 0000000000000000 x6 : 000000000000003f\nx5 : 00000000ffffffff x4 : 0000000000000000 x3 : 0000000000000020\nx2 : 0000000000000008 x1 : 0000000000000000 x0 : ffff8000939675e0\nCall trace:\n  __alloc_pages+0x308/0x698 mm/page_alloc.c:4543\n  __alloc_pages_node include/linux/gfp.h:238 [inline]\n  alloc_pages_node include/linux/gfp.h:261 [inline]\n  __kmalloc_large_node+0xbc/0x1fc mm/slub.c:3926\n  __do_kmalloc_node mm/slub.c:3969 [inline]\n  __kmalloc_node_track_caller+0x418/0x620 mm/slub.c:4001\n  kmalloc_reserve+0x17c/0x23c net/core/skbuff.c:590\n  __alloc_skb+0x1c8/0x3d8 net/core/skbuff.c:651\n  __netdev_alloc_skb+0xb8/0x3e8 net/core/skbuff.c:715\n  netdev_alloc_skb include/linux/skbuff.h:3235 [inline]\n  dev_alloc_skb include/linux/skbuff.h:3248 [inline]\n  ppp_async_input drivers/net/ppp/ppp_async.c:863 [inline]\n  ppp_asynctty_receive+0x588/0x186c drivers/net/ppp/ppp_async.c:341\n  tty_ldisc_receive_buf+0x12c/0x15c drivers/tty/tty_buffer.c:390\n  tty_port_default_receive_buf+0x74/0xac drivers/tty/tty_port.c:37\n  receive_buf drivers/tty/tty_buffer.c:444 [inline]\n  flush_to_ldisc+0x284/0x6e4 drivers/tty/tty_buffer.c:494\n  process_one_work+0x694/0x1204 kernel/workqueue.c:2633\n  process_scheduled_works kernel/workqueue.c:2706 [inline]\n  worker_thread+0x938/0xef4 kernel/workqueue.c:2787\n  kthread+0x288/0x310 kernel/kthread.c:388\n  ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:860",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26679",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet: read sk-\u003esk_family once in inet_recv_error()\n\ninet_recv_error() is called without holding the socket lock.\n\nIPv6 socket could mutate to IPv4 with IPV6_ADDRFORM\nsocket option and trigger a KCSAN warning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26687",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/events: close evtchn after mapping cleanup\n\nshutdown_pirq and startup_pirq are not taking the\nirq_mapping_update_lock because they can't due to lock inversion. Both\nare called with the irq_desc-\u003elock being taking. The lock order,\nhowever, is first irq_mapping_update_lock and then irq_desc-\u003elock.\n\nThis opens multiple races:\n- shutdown_pirq can be interrupted by a function that allocates an event\n  channel:\n\n  CPU0                        CPU1\n  shutdown_pirq {\n    xen_evtchn_close(e)\n                              __startup_pirq {\n                                EVTCHNOP_bind_pirq\n                                  -\u003e returns just freed evtchn e\n                                set_evtchn_to_irq(e, irq)\n                              }\n    xen_irq_info_cleanup() {\n      set_evtchn_to_irq(e, -1)\n    }\n  }\n\n  Assume here event channel e refers here to the same event channel\n  number.\n  After this race the evtchn_to_irq mapping for e is invalid (-1).\n\n- __startup_pirq races with __unbind_from_irq in a similar way. Because\n  __startup_pirq doesn't take irq_mapping_update_lock it can grab the\n  evtchn that __unbind_from_irq is currently freeing and cleaning up. In\n  this case even though the event channel is allocated, its mapping can\n  be unset in evtchn_to_irq.\n\nThe fix is to first cleanup the mappings and then close the event\nchannel. In this way, when an event channel gets allocated it's\npotential previous evtchn_to_irq mappings are guaranteed to be unset already.\nThis is also the reverse order of the allocation where first the event\nchannel is allocated and then the mappings are setup.\n\nOn a 5.10 kernel prior to commit 3fcdaf3d7634 (\"xen/events: modify internal\n[un]bind interfaces\"), we hit a BUG like the following during probing of NVMe\ndevices. The issue is that during nvme_setup_io_queues, pci_free_irq\nis called for every device which results in a call to shutdown_pirq.\nWith many nvme devices it's therefore likely to hit this race during\nboot because there will be multiple calls to shutdown_pirq and\nstartup_pirq are running potentially in parallel.\n\n  ------------[ cut here ]------------\n  blkfront: xvda: barrier or flush: disabled; persistent grants: enabled; indirect descriptors: enabled; bounce buffer: enabled\n  kernel BUG at drivers/xen/events/events_base.c:499!\n  invalid opcode: 0000 [#1] SMP PTI\n  CPU: 44 PID: 375 Comm: kworker/u257:23 Not tainted 5.10.201-191.748.amzn2.x86_64 #1\n  Hardware name: Xen HVM domU, BIOS 4.11.amazon 08/24/2006\n  Workqueue: nvme-reset-wq nvme_reset_work\n  RIP: 0010:bind_evtchn_to_cpu+0xdf/0xf0\n  Code: 5d 41 5e c3 cc cc cc cc 44 89 f7 e8 2b 55 ad ff 49 89 c5 48 85 c0 0f 84 64 ff ff ff 4c 8b 68 30 41 83 fe ff 0f 85 60 ff ff ff \u003c0f\u003e 0b 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 0f 1f 44 00 00\n  RSP: 0000:ffffc9000d533b08 EFLAGS: 00010046\n  RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000006\n  RDX: 0000000000000028 RSI: 00000000ffffffff RDI: 00000000ffffffff\n  RBP: ffff888107419680 R08: 0000000000000000 R09: ffffffff82d72b00\n  R10: 0000000000000000 R11: 0000000000000000 R12: 00000000000001ed\n  R13: 0000000000000000 R14: 00000000ffffffff R15: 0000000000000002\n  FS:  0000000000000000(0000) GS:ffff88bc8b500000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000000000000 CR3: 0000000002610001 CR4: 00000000001706e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   ? show_trace_log_lvl+0x1c1/0x2d9\n   ? show_trace_log_lvl+0x1c1/0x2d9\n   ? set_affinity_irq+0xdc/0x1c0\n   ? __die_body.cold+0x8/0xd\n   ? die+0x2b/0x50\n   ? do_trap+0x90/0x110\n   ? bind_evtchn_to_cpu+0xdf/0xf0\n   ? do_error_trap+0x65/0x80\n   ? bind_evtchn_to_cpu+0xdf/0xf0\n   ? exc_invalid_op+0x4e/0x70\n   ? bind_evtchn_to_cpu+0xdf/0xf0\n   ? asm_exc_invalid_op+0x12/0x20\n   ? bind_evtchn_to_cpu+0xdf/0x\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26689",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: prevent use-after-free in encode_cap_msg()\n\nIn fs/ceph/caps.c, in encode_cap_msg(), \"use after free\" error was\ncaught by KASAN at this line - 'ceph_buffer_get(arg-\u003exattr_buf);'. This\nimplies before the refcount could be increment here, it was freed.\n\nIn same file, in \"handle_cap_grant()\" refcount is decremented by this\nline - 'ceph_buffer_put(ci-\u003ei_xattrs.blob);'. It appears that a race\noccurred and resource was freed by the latter line before the former\nline could increment it.\n\nencode_cap_msg() is called by __send_cap() and __send_cap() is called by\nceph_check_caps() after calling __prep_cap(). __prep_cap() is where\narg-\u003exattr_buf is assigned to ci-\u003ei_xattrs.blob. This is the spot where\nthe refcount must be increased to prevent \"use after free\" error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26704",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix double-free of blocks due to wrong extents moved_len\n\nIn ext4_move_extents(), moved_len is only updated when all moves are\nsuccessfully executed, and only discards orig_inode and donor_inode\npreallocations when moved_len is not zero. When the loop fails to exit\nafter successfully moving some extents, moved_len is not updated and\nremains at 0, so it does not discard the preallocations.\n\nIf the moved extents overlap with the preallocated extents, the\noverlapped extents are freed twice in ext4_mb_release_inode_pa() and\next4_process_freed_data() (as described in commit 94d7c16cbbbd (\"ext4:\nFix double-free of blocks with EXT4_IOC_MOVE_EXT\")), and bb_free is\nincremented twice. Hence when trim is executed, a zero-division bug is\ntriggered in mb_update_avg_fragment_size() because bb_free is not zero\nand bb_fragments is zero.\n\nTherefore, update move_len after each extent move to avoid the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26720",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26733",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narp: Prevent overflow in arp_req_get().\n\nsyzkaller reported an overflown write in arp_req_get(). [0]\n\nWhen ioctl(SIOCGARP) is issued, arp_req_get() looks up an neighbour\nentry and copies neigh-\u003eha to struct arpreq.arp_ha.sa_data.\n\nThe arp_ha here is struct sockaddr, not struct sockaddr_storage, so\nthe sa_data buffer is just 14 bytes.\n\nIn the splat below, 2 bytes are overflown to the next int field,\narp_flags.  We initialise the field just after the memcpy(), so it's\nnot a problem.\n\nHowever, when dev-\u003eaddr_len is greater than 22 (e.g. MAX_ADDR_LEN),\narp_netmask is overwritten, which could be set as htonl(0xFFFFFFFFUL)\nin arp_ioctl() before calling arp_req_get().\n\nTo avoid the overflow, let's limit the max length of memcpy().\n\nNote that commit b5f0de6df6dc (\"net: dev: Convert sa_data to flexible\narray in struct sockaddr\") just silenced syzkaller.\n\n[0]:\nmemcpy: detected field-spanning write (size 16) of single field \"r-\u003earp_ha.sa_data\" at net/ipv4/arp.c:1128 (size 14)\nWARNING: CPU: 0 PID: 144638 at net/ipv4/arp.c:1128 arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128\nModules linked in:\nCPU: 0 PID: 144638 Comm: syz-executor.4 Not tainted 6.1.74 #31\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-5 04/01/2014\nRIP: 0010:arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128\nCode: fd ff ff e8 41 42 de fb b9 0e 00 00 00 4c 89 fe 48 c7 c2 20 6d ab 87 48 c7 c7 80 6d ab 87 c6 05 25 af 72 04 01 e8 5f 8d ad fb \u003c0f\u003e 0b e9 6c fd ff ff e8 13 42 de fb be 03 00 00 00 4c 89 e7 e8 a6\nRSP: 0018:ffffc900050b7998 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff88803a815000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffffff8641a44a RDI: 0000000000000001\nRBP: ffffc900050b7a98 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 203a7970636d656d R12: ffff888039c54000\nR13: 1ffff92000a16f37 R14: ffff88803a815084 R15: 0000000000000010\nFS:  00007f172bf306c0(0000) GS:ffff88805aa00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f172b3569f0 CR3: 0000000057f12005 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n arp_ioctl+0x33f/0x4b0 net/ipv4/arp.c:1261\n inet_ioctl+0x314/0x3a0 net/ipv4/af_inet.c:981\n sock_do_ioctl+0xdf/0x260 net/socket.c:1204\n sock_ioctl+0x3ef/0x650 net/socket.c:1321\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x18e/0x220 fs/ioctl.c:856\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x37/0x90 arch/x86/entry/common.c:81\n entry_SYSCALL_64_after_hwframe+0x64/0xce\nRIP: 0033:0x7f172b262b8d\nCode: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f172bf300b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007f172b3abf80 RCX: 00007f172b262b8d\nRDX: 0000000020000000 RSI: 0000000000008954 RDI: 0000000000000003\nRBP: 00007f172b2d3493 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007f172b3abf80 R15: 00007f172bf10000\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26739",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: act_mirred: don't override retval if we already lost the skb\n\nIf we're redirecting the skb, and haven't called tcf_mirred_forward(),\nyet, we need to tell the core to drop the skb by setting the retcode\nto SHOT. If we have called tcf_mirred_forward(), however, the skb\nis out of our hands and returning SHOT will lead to UaF.\n\nMove the retval override to the error path which actually need it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/qedr: Fix qedr_create_user_qp error flow\n\nAvoid the following warning by making sure to free the allocated\nresources in case that qedr_init_user_queue() fail.\n\n-----------[ cut here ]-----------\nWARNING: CPU: 0 PID: 143192 at drivers/infiniband/core/rdma_core.c:874 uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\nModules linked in: tls target_core_user uio target_core_pscsi target_core_file target_core_iblock ib_srpt ib_srp scsi_transport_srp nfsd nfs_acl rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache netfs 8021q garp mrp stp llc ext4 mbcache jbd2 opa_vnic ib_umad ib_ipoib sunrpc rdma_ucm ib_isert iscsi_target_mod target_core_mod ib_iser libiscsi scsi_transport_iscsi rdma_cm iw_cm ib_cm hfi1 intel_rapl_msr intel_rapl_common mgag200 qedr sb_edac drm_shmem_helper rdmavt x86_pkg_temp_thermal drm_kms_helper intel_powerclamp ib_uverbs coretemp i2c_algo_bit kvm_intel dell_wmi_descriptor ipmi_ssif sparse_keymap kvm ib_core rfkill syscopyarea sysfillrect video sysimgblt irqbypass ipmi_si ipmi_devintf fb_sys_fops rapl iTCO_wdt mxm_wmi iTCO_vendor_support intel_cstate pcspkr dcdbas intel_uncore ipmi_msghandler lpc_ich acpi_power_meter mei_me mei fuse drm xfs libcrc32c qede sd_mod ahci libahci t10_pi sg crct10dif_pclmul crc32_pclmul crc32c_intel qed libata tg3\nghash_clmulni_intel megaraid_sas crc8 wmi [last unloaded: ib_srpt]\nCPU: 0 PID: 143192 Comm: fi_rdm_tagged_p Kdump: loaded Not tainted 5.14.0-408.el9.x86_64 #1\nHardware name: Dell Inc. PowerEdge R430/03XKDV, BIOS 2.14.0 01/25/2022\nRIP: 0010:uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\nCode: 5d 41 5c 41 5d 41 5e e9 0f 26 1b dd 48 89 df e8 67 6a ff ff 49 8b 86 10 01 00 00 48 85 c0 74 9c 4c 89 e7 e8 83 c0 cb dd eb 92 \u003c0f\u003e 0b eb be 0f 0b be 04 00 00 00 48 89 df e8 8e f5 ff ff e9 6d ff\nRSP: 0018:ffffb7c6cadfbc60 EFLAGS: 00010286\nRAX: ffff8f0889ee3f60 RBX: ffff8f088c1a5200 RCX: 00000000802a0016\nRDX: 00000000802a0017 RSI: 0000000000000001 RDI: ffff8f0880042600\nRBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000000\nR10: ffff8f11fffd5000 R11: 0000000000039000 R12: ffff8f0d5b36cd80\nR13: ffff8f088c1a5250 R14: ffff8f1206d91000 R15: 0000000000000000\nFS: 0000000000000000(0000) GS:ffff8f11d7c00000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000147069200e20 CR3: 00000001c7210002 CR4: 00000000001706f0\nCall Trace:\n\u003cTASK\u003e\n? show_trace_log_lvl+0x1c4/0x2df\n? show_trace_log_lvl+0x1c4/0x2df\n? ib_uverbs_close+0x1f/0xb0 [ib_uverbs]\n? uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\n? __warn+0x81/0x110\n? uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\n? report_bug+0x10a/0x140\n? handle_bug+0x3c/0x70\n? exc_invalid_op+0x14/0x70\n? asm_exc_invalid_op+0x16/0x20\n? uverbs_destroy_ufile_hw+0xcf/0xf0 [ib_uverbs]\nib_uverbs_close+0x1f/0xb0 [ib_uverbs]\n__fput+0x94/0x250\ntask_work_run+0x5c/0x90\ndo_exit+0x270/0x4a0\ndo_group_exit+0x2d/0x90\nget_signal+0x87c/0x8c0\narch_do_signal_or_restart+0x25/0x100\n? ib_uverbs_ioctl+0xc2/0x110 [ib_uverbs]\nexit_to_user_mode_loop+0x9c/0x130\nexit_to_user_mode_prepare+0xb6/0x100\nsyscall_exit_to_user_mode+0x12/0x40\ndo_syscall_64+0x69/0x90\n? syscall_exit_work+0x103/0x130\n? syscall_exit_to_user_mode+0x22/0x40\n? do_syscall_64+0x69/0x90\n? syscall_exit_work+0x103/0x130\n? syscall_exit_to_user_mode+0x22/0x40\n? do_syscall_64+0x69/0x90\n? do_syscall_64+0x69/0x90\n? common_interrupt+0x43/0xa0\nentry_SYSCALL_64_after_hwframe+0x72/0xdc\nRIP: 0033:0x1470abe3ec6b\nCode: Unable to access opcode bytes at RIP 0x1470abe3ec41.\nRSP: 002b:00007fff13ce9108 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: fffffffffffffffc RBX: 00007fff13ce9218 RCX: 00001470abe3ec6b\nRDX: 00007fff13ce9200 RSI: 00000000c0181b01 RDI: 0000000000000004\nRBP: 00007fff13ce91e0 R08: 0000558d9655da10 R09: 0000558d9655dd00\nR10: 00007fff13ce95c0 R11: 0000000000000246 R12: 00007fff13ce9358\nR13: 0000000000000013 R14: 0000558d9655db50 R15: 00007fff13ce9470\n\u003c/TASK\u003e\n--[ end trace 888a9b92e04c5c97 ]--",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26744",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srpt: Support specifying the srpt_service_guid parameter\n\nMake loading ib_srpt with this parameter set work. The current behavior is\nthat setting that parameter while loading the ib_srpt kernel module\ntriggers the following kernel crash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nCall Trace:\n \u003cTASK\u003e\n parse_one+0x18c/0x1d0\n parse_args+0xe1/0x230\n load_module+0x8de/0xa60\n init_module_from_file+0x8b/0xd0\n idempotent_init_module+0x181/0x240\n __x64_sys_finit_module+0x5a/0xb0\n do_syscall_64+0x5f/0xe0\n entry_SYSCALL_64_after_hwframe+0x6e/0x76",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26747",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: roles: fix NULL pointer issue when put module's reference\n\nIn current design, usb role class driver will get usb_role_switch parent's\nmodule reference after the user get usb_role_switch device and put the\nreference after the user put the usb_role_switch device. However, the\nparent device of usb_role_switch may be removed before the user put the\nusb_role_switch. If so, then, NULL pointer issue will be met when the user\nput the parent module's reference.\n\nThis will save the module pointer in structure of usb_role_switch. Then,\nwe don't need to find module by iterating long relations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26752",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: pass correct message length to ip6_append_data\n\nl2tp_ip6_sendmsg needs to avoid accounting for the transport header\ntwice when splicing more data into an already partially-occupied skbuff.\n\nTo manage this, we check whether the skbuff contains data using\nskb_queue_empty when deciding how much data to append using\nip6_append_data.\n\nHowever, the code which performed the calculation was incorrect:\n\n     ulen = len + skb_queue_empty(\u0026sk-\u003esk_write_queue) ? transhdrlen : 0;\n\n...due to C operator precedence, this ends up setting ulen to\ntranshdrlen for messages with a non-zero length, which results in\ncorrupted packets on the wire.\n\nAdd parentheses to correct the calculation in line with the original\nintent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26763",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-crypt: don't modify the data when using authenticated encryption\n\nIt was said that authenticated encryption could produce invalid tag when\nthe data that is being encrypted is modified [1]. So, fix this problem by\ncopying the data into the clone bio first and then encrypt them inside the\nclone bio.\n\nThis may reduce performance, but it is needed to prevent the user from\ncorrupting the device by writing data with O_DIRECT and modifying them at\nthe same time.\n\n[1] https://lore.kernel.org/all/20240207004723.GA35324@sol.localdomain/T/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26771",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: edma: Add some null pointer checks to the edma_probe\n\ndevm_kasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_find_by_goal()\n\nPlaces the logic for checking if the group's block bitmap is corrupt under\nthe protection of the group lock to avoid allocating blocks from the group\nwith a corrupted block bitmap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_try_best_found()\n\nDetermine if the group block bitmap is corrupted before using ac_b_ex in\next4_mb_try_best_found() to avoid allocating blocks from a group with a\ncorrupted block bitmap in the following concurrency and making the\nsituation worse.\n\next4_mb_regular_allocator\n  ext4_lock_group(sb, group)\n  ext4_mb_good_group\n   // check if the group bbitmap is corrupted\n  ext4_mb_complex_scan_group\n   // Scan group gets ac_b_ex but doesn't use it\n  ext4_unlock_group(sb, group)\n                           ext4_mark_group_bitmap_corrupted(group)\n                           // The block bitmap was corrupted during\n                           // the group unlock gap.\n  ext4_mb_try_best_found\n    ext4_lock_group(ac-\u003eac_sb, group)\n    ext4_mb_use_best_found\n      mb_mark_used\n      // Allocating blocks in block bitmap corrupted group",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26775",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naoe: avoid potential deadlock at set_capacity\n\nMove set_capacity() outside of the section procected by (\u0026d-\u003elock).\nTo avoid possible interrupt unsafe locking scenario:\n\n        CPU0                    CPU1\n        ----                    ----\n[1] lock(\u0026bdev-\u003ebd_size_lock);\n                                local_irq_disable();\n                            [2] lock(\u0026d-\u003elock);\n                            [3] lock(\u0026bdev-\u003ebd_size_lock);\n   \u003cInterrupt\u003e\n[4]  lock(\u0026d-\u003elock);\n\n  *** DEADLOCK ***\n\nWhere [1](\u0026bdev-\u003ebd_size_lock) hold by zram_add()-\u003eset_capacity().\n[2]lock(\u0026d-\u003elock) hold by aoeblk_gdalloc(). And aoeblk_gdalloc()\nis trying to acquire [3](\u0026bdev-\u003ebd_size_lock) at set_capacity() call.\nIn this situation an attempt to acquire [4]lock(\u0026d-\u003elock) from\naoecmd_cfg_rsp() will lead to deadlock.\n\nSo the simplest solution is breaking lock dependency\n[2](\u0026d-\u003elock) -\u003e [3](\u0026bdev-\u003ebd_size_lock) by moving set_capacity()\noutside.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: sis: Error out if pixclock equals zero\n\nThe userspace program could pass any values to the driver through\nioctl() interface. If the driver doesn't check the value of pixclock,\nit may cause divide-by-zero error.\n\nIn sisfb_check_var(), var-\u003epixclock is used as a divisor to caculate\ndrate before it is checked against zero. Fix this by checking it\nat the beginning.\n\nThis is similar to CVE-2022-3061 in i740fb which was fixed by\ncommit 15cf0b8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26778",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: savage: Error out if pixclock equals zero\n\nThe userspace program could pass any values to the driver through\nioctl() interface. If the driver doesn't check the value of pixclock,\nit may cause divide-by-zero error.\n\nAlthough pixclock is checked in savagefb_decode_var(), but it is not\nchecked properly in savagefb_probe(). Fix this by checking whether\npixclock is zero in the function savagefb_check_var() before\ninfo-\u003evar.pixclock is used as the divisor.\n\nThis is similar to CVE-2022-3061 in i740fb which was fixed by\ncommit 15cf0b8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26779",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix race condition on enabling fast-xmit\n\nfast-xmit must only be enabled after the sta has been uploaded to the driver,\notherwise it could end up passing the not-yet-uploaded sta via drv_tx calls\nto the driver, leading to potential crashes because of uninitialized drv_priv\ndata.\nAdd a missing sta-\u003euploaded check and re-check fast xmit after inserting a sta.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: dev-replace: properly validate device names\n\nThere's a syzbot report that device name buffers passed to device\nreplace are not properly checked for string termination which could lead\nto a read out of bounds in getname_kernel().\n\nAdd a helper that validates both source and target device name buffers.\nFor devid as the source initialize the buffer to empty string in case\nsomething tries to read it later.\n\nThis was originally analyzed and fixed in a different way by Edward Adam\nDavis (see links).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26793",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngtp: fix use-after-free and null-ptr-deref in gtp_newlink()\n\nThe gtp_link_ops operations structure for the subsystem must be\nregistered after registering the gtp_net_ops pernet operations structure.\n\nSyzkaller hit 'general protection fault in gtp_genl_dump_pdp' bug:\n\n[ 1010.702740] gtp: GTP module unloaded\n[ 1010.715877] general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] SMP KASAN NOPTI\n[ 1010.715888] KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n[ 1010.715895] CPU: 1 PID: 128616 Comm: a.out Not tainted 6.8.0-rc6-std-def-alt1 #1\n[ 1010.715899] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-alt1 04/01/2014\n[ 1010.715908] RIP: 0010:gtp_newlink+0x4d7/0x9c0 [gtp]\n[ 1010.715915] Code: 80 3c 02 00 0f 85 41 04 00 00 48 8b bb d8 05 00 00 e8 ed f6 ff ff 48 89 c2 48 89 c5 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 4f 04 00 00 4c 89 e2 4c 8b 6d 00 48 b8 00 00 00\n[ 1010.715920] RSP: 0018:ffff888020fbf180 EFLAGS: 00010203\n[ 1010.715929] RAX: dffffc0000000000 RBX: ffff88800399c000 RCX: 0000000000000000\n[ 1010.715933] RDX: 0000000000000001 RSI: ffffffff84805280 RDI: 0000000000000282\n[ 1010.715938] RBP: 000000000000000d R08: 0000000000000001 R09: 0000000000000000\n[ 1010.715942] R10: 0000000000000001 R11: 0000000000000001 R12: ffff88800399cc80\n[ 1010.715947] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000400\n[ 1010.715953] FS:  00007fd1509ab5c0(0000) GS:ffff88805b300000(0000) knlGS:0000000000000000\n[ 1010.715958] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1010.715962] CR2: 0000000000000000 CR3: 000000001c07a000 CR4: 0000000000750ee0\n[ 1010.715968] PKRU: 55555554\n[ 1010.715972] Call Trace:\n[ 1010.715985]  ? __die_body.cold+0x1a/0x1f\n[ 1010.715995]  ? die_addr+0x43/0x70\n[ 1010.716002]  ? exc_general_protection+0x199/0x2f0\n[ 1010.716016]  ? asm_exc_general_protection+0x1e/0x30\n[ 1010.716026]  ? gtp_newlink+0x4d7/0x9c0 [gtp]\n[ 1010.716034]  ? gtp_net_exit+0x150/0x150 [gtp]\n[ 1010.716042]  __rtnl_newlink+0x1063/0x1700\n[ 1010.716051]  ? rtnl_setlink+0x3c0/0x3c0\n[ 1010.716063]  ? is_bpf_text_address+0xc0/0x1f0\n[ 1010.716070]  ? kernel_text_address.part.0+0xbb/0xd0\n[ 1010.716076]  ? __kernel_text_address+0x56/0xa0\n[ 1010.716084]  ? unwind_get_return_address+0x5a/0xa0\n[ 1010.716091]  ? create_prof_cpu_mask+0x30/0x30\n[ 1010.716098]  ? arch_stack_walk+0x9e/0xf0\n[ 1010.716106]  ? stack_trace_save+0x91/0xd0\n[ 1010.716113]  ? stack_trace_consume_entry+0x170/0x170\n[ 1010.716121]  ? __lock_acquire+0x15c5/0x5380\n[ 1010.716139]  ? mark_held_locks+0x9e/0xe0\n[ 1010.716148]  ? kmem_cache_alloc_trace+0x35f/0x3c0\n[ 1010.716155]  ? __rtnl_newlink+0x1700/0x1700\n[ 1010.716160]  rtnl_newlink+0x69/0xa0\n[ 1010.716166]  rtnetlink_rcv_msg+0x43b/0xc50\n[ 1010.716172]  ? rtnl_fdb_dump+0x9f0/0x9f0\n[ 1010.716179]  ? lock_acquire+0x1fe/0x560\n[ 1010.716188]  ? netlink_deliver_tap+0x12f/0xd50\n[ 1010.716196]  netlink_rcv_skb+0x14d/0x440\n[ 1010.716202]  ? rtnl_fdb_dump+0x9f0/0x9f0\n[ 1010.716208]  ? netlink_ack+0xab0/0xab0\n[ 1010.716213]  ? netlink_deliver_tap+0x202/0xd50\n[ 1010.716220]  ? netlink_deliver_tap+0x218/0xd50\n[ 1010.716226]  ? __virt_addr_valid+0x30b/0x590\n[ 1010.716233]  netlink_unicast+0x54b/0x800\n[ 1010.716240]  ? netlink_attachskb+0x870/0x870\n[ 1010.716248]  ? __check_object_size+0x2de/0x3b0\n[ 1010.716254]  netlink_sendmsg+0x938/0xe40\n[ 1010.716261]  ? netlink_unicast+0x800/0x800\n[ 1010.716269]  ? __import_iovec+0x292/0x510\n[ 1010.716276]  ? netlink_unicast+0x800/0x800\n[ 1010.716284]  __sock_sendmsg+0x159/0x190\n[ 1010.716290]  ____sys_sendmsg+0x712/0x880\n[ 1010.716297]  ? sock_write_iter+0x3d0/0x3d0\n[ 1010.716304]  ? __ia32_sys_recvmmsg+0x270/0x270\n[ 1010.716309]  ? lock_acquire+0x1fe/0x560\n[ 1010.716315]  ? drain_array_locked+0x90/0x90\n[ 1010.716324]  ___sys_sendmsg+0xf8/0x170\n[ 1010.716331]  ? sendmsg_copy_msghdr+0x170/0x170\n[ 1010.716337]  ? lockdep_init_map\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetlink: Fix kernel-infoleak-after-free in __skb_datagram_iter\n\nsyzbot reported the following uninit-value access issue [1]:\n\nnetlink_to_full_skb() creates a new `skb` and puts the `skb-\u003edata`\npassed as a 1st arg of netlink_to_full_skb() onto new `skb`. The data\nsize is specified as `len` and passed to skb_put_data(). This `len`\nis based on `skb-\u003eend` that is not data offset but buffer offset. The\n`skb-\u003eend` contains data and tailroom. Since the tailroom is not\ninitialized when the new `skb` created, KMSAN detects uninitialized\nmemory area when copying the data.\n\nThis patch resolved this issue by correct the len from `skb-\u003eend` to\n`skb-\u003elen`, which is the actual data offset.\n\nBUG: KMSAN: kernel-infoleak-after-free in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in copy_to_user_iter lib/iov_iter.c:24 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in iterate_ubuf include/linux/iov_iter.h:29 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in iterate_and_advance include/linux/iov_iter.h:271 [inline]\nBUG: KMSAN: kernel-infoleak-after-free in _copy_to_iter+0x364/0x2520 lib/iov_iter.c:186\n instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n copy_to_user_iter lib/iov_iter.c:24 [inline]\n iterate_ubuf include/linux/iov_iter.h:29 [inline]\n iterate_and_advance2 include/linux/iov_iter.h:245 [inline]\n iterate_and_advance include/linux/iov_iter.h:271 [inline]\n _copy_to_iter+0x364/0x2520 lib/iov_iter.c:186\n copy_to_iter include/linux/uio.h:197 [inline]\n simple_copy_to_iter+0x68/0xa0 net/core/datagram.c:532\n __skb_datagram_iter+0x123/0xdc0 net/core/datagram.c:420\n skb_copy_datagram_iter+0x5c/0x200 net/core/datagram.c:546\n skb_copy_datagram_msg include/linux/skbuff.h:3960 [inline]\n packet_recvmsg+0xd9c/0x2000 net/packet/af_packet.c:3482\n sock_recvmsg_nosec net/socket.c:1044 [inline]\n sock_recvmsg net/socket.c:1066 [inline]\n sock_read_iter+0x467/0x580 net/socket.c:1136\n call_read_iter include/linux/fs.h:2014 [inline]\n new_sync_read fs/read_write.c:389 [inline]\n vfs_read+0x8f6/0xe00 fs/read_write.c:470\n ksys_read+0x20f/0x4c0 fs/read_write.c:613\n __do_sys_read fs/read_write.c:623 [inline]\n __se_sys_read fs/read_write.c:621 [inline]\n __x64_sys_read+0x93/0xd0 fs/read_write.c:621\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was stored to memory at:\n skb_put_data include/linux/skbuff.h:2622 [inline]\n netlink_to_full_skb net/netlink/af_netlink.c:181 [inline]\n __netlink_deliver_tap_skb net/netlink/af_netlink.c:298 [inline]\n __netlink_deliver_tap+0x5be/0xc90 net/netlink/af_netlink.c:325\n netlink_deliver_tap net/netlink/af_netlink.c:338 [inline]\n netlink_deliver_tap_kernel net/netlink/af_netlink.c:347 [inline]\n netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n netlink_unicast+0x10f1/0x1250 net/netlink/af_netlink.c:1368\n netlink_sendmsg+0x1238/0x13d0 net/netlink/af_netlink.c:1910\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n ____sys_sendmsg+0x9c2/0xd60 net/socket.c:2584\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2638\n __sys_sendmsg net/socket.c:2667 [inline]\n __do_sys_sendmsg net/socket.c:2676 [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x307/0x490 net/socket.c:2674\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x44/0x110 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n free_pages_prepare mm/page_alloc.c:1087 [inline]\n free_unref_page_prepare+0xb0/0xa40 mm/page_alloc.c:2347\n free_unref_page_list+0xeb/0x1100 mm/page_alloc.c:2533\n release_pages+0x23d3/0x2410 mm/swap.c:1042\n free_pages_and_swap_cache+0xd9/0xf0 mm/swap_state.c:316\n tlb_batch_pages\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/platform: Create persistent IRQ handlers\n\nThe vfio-platform SET_IRQS ioctl currently allows loopback triggering of\nan interrupt before a signaling eventfd has been configured by the user,\nwhich thereby allows a NULL pointer dereference.\n\nRather than register the IRQ relative to a valid trigger, register all\nIRQs in a disabled state in the device open path.  This allows mask\noperations on the IRQ to nest within the overall enable state governed\nby a valid eventfd signal.  This decouples @masked, protected by the\n@locked spinlock from @trigger, protected via the @igate mutex.\n\nIn doing so, it's guaranteed that changes to @trigger cannot race the\nIRQ handlers because the IRQ handler is synchronously disabled before\nmodifying the trigger, and loopback triggering of the IRQ via ioctl is\nsafe due to serialization with trigger changes via igate.\n\nFor compatibility, request_irq() failures are maintained to be local to\nthe SET_IRQS ioctl rather than a fatal error in the open device path.\nThis allows, for example, a userspace driver with polling mode support\nto continue to work regardless of moving the request_irq() call site.\nThis necessarily blocks all SET_IRQS access to the failed index.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26816",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86, relocs: Ignore relocations in .notes section\n\nWhen building with CONFIG_XEN_PV=y, .text symbols are emitted into\nthe .notes section so that Xen can find the \"startup_xen\" entry point.\nThis information is used prior to booting the kernel, so relocations\nare not useful. In fact, performing relocations against the .notes\nsection means that the KASLR base is exposed since /sys/kernel/notes\nis world-readable.\n\nTo avoid leaking the KASLR base without breaking unprivileged tools that\nare expecting to read /sys/kernel/notes, skip performing relocations in\nthe .notes section. The values readable in .notes are then identical to\nthose found in System.map.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\namdkfd: use calloc instead of kzalloc to avoid integer overflow\n\nThis uses calloc instead of doing the multiplication which might\noverflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26828",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix underflow in parse_server_interfaces()\n\nIn this loop, we step through the buffer and after each item we check\nif the size_left is greater than the minimum size we need.  However,\nthe problem is that \"bytes_left\" is type ssize_t while sizeof() is type\nsize_t.  That means that because of type promotion, the comparison is\ndone as an unsigned and if we have negative bytes left the loop\ncontinues instead of ending.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26839",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix a memleak in init_credit_return\n\nWhen dma_alloc_coherent fails to allocate dd-\u003ecr_base[i].va,\ninit_credit_return should deallocate dd-\u003ecr_base and\ndd-\u003ecr_base[i] that allocated before. Or those resources\nwould be never freed and a memleak is triggered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26840",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: fix memory leak in cachefiles_add_cache()\n\nThe following memory leak was reported after unbinding /dev/cachefiles:\n\n==================================================================\nunreferenced object 0xffff9b674176e3c0 (size 192):\n  comm \"cachefilesd2\", pid 680, jiffies 4294881224\n  hex dump (first 32 bytes):\n    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc ea38a44b):\n    [\u003cffffffff8eb8a1a5\u003e] kmem_cache_alloc+0x2d5/0x370\n    [\u003cffffffff8e917f86\u003e] prepare_creds+0x26/0x2e0\n    [\u003cffffffffc002eeef\u003e] cachefiles_determine_cache_security+0x1f/0x120\n    [\u003cffffffffc00243ec\u003e] cachefiles_add_cache+0x13c/0x3a0\n    [\u003cffffffffc0025216\u003e] cachefiles_daemon_write+0x146/0x1c0\n    [\u003cffffffff8ebc4a3b\u003e] vfs_write+0xcb/0x520\n    [\u003cffffffff8ebc5069\u003e] ksys_write+0x69/0xf0\n    [\u003cffffffff8f6d4662\u003e] do_syscall_64+0x72/0x140\n    [\u003cffffffff8f8000aa\u003e] entry_SYSCALL_64_after_hwframe+0x6e/0x76\n==================================================================\n\nPut the reference count of cache_cred in cachefiles_daemon_unbind() to\nfix the problem. And also put cache_cred in cachefiles_add_cache() error\nbranch to avoid memory leaks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26845",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: core: Add TMF to tmr_list handling\n\nAn abort that is responded to by iSCSI itself is added to tmr_list but does\nnot go to target core. A LUN_RESET that goes through tmr_list takes a\nrefcounter on the abort and waits for completion. However, the abort will\nbe never complete because it was not started in target core.\n\n Unable to locate ITT: 0x05000000 on CID: 0\n Unable to locate RefTaskTag: 0x05000000 on CID: 0.\n wait_for_tasks: Stopping tmf LUN_RESET with tag 0x0 ref_task_tag 0x0 i_state 34 t_state ISTATE_PROCESSING refcnt 2 transport_state active,stop,fabric_stop\n wait for tasks: tmf LUN_RESET with tag 0x0 ref_task_tag 0x0 i_state 34 t_state ISTATE_PROCESSING refcnt 2 transport_state active,stop,fabric_stop\n...\n INFO: task kworker/0:2:49 blocked for more than 491 seconds.\n task:kworker/0:2     state:D stack:    0 pid:   49 ppid:     2 flags:0x00000800\n Workqueue: events target_tmr_work [target_core_mod]\nCall Trace:\n __switch_to+0x2c4/0x470\n _schedule+0x314/0x1730\n schedule+0x64/0x130\n schedule_timeout+0x168/0x430\n wait_for_completion+0x140/0x270\n target_put_cmd_and_wait+0x64/0xb0 [target_core_mod]\n core_tmr_lun_reset+0x30/0xa0 [target_core_mod]\n target_tmr_work+0xc8/0x1b0 [target_core_mod]\n process_one_work+0x2d4/0x5d0\n worker_thread+0x78/0x6c0\n\nTo fix this, only add abort to tmr_list if it will be handled by target\ncore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26846",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fc: do not wait in vain when unloading module\n\nThe module exit path has race between deleting all controllers and\nfreeing 'left over IDs'. To prevent double free a synchronization\nbetween nvme_delete_ctrl and ida_destroy has been added by the initial\ncommit.\n\nThere is some logic around trying to prevent from hanging forever in\nwait_for_completion, though it does not handling all cases. E.g.\nblktests is able to reproduce the situation where the module unload\nhangs forever.\n\nIf we completely rely on the cleanup code executed from the\nnvme_delete_ctrl path, all IDs will be freed eventually. This makes\ncalling ida_destroy unnecessary. We only have to ensure that all\nnvme_delete_ctrl code has been executed before we leave\nnvme_fc_exit_module. This is done by flushing the nvme_delete_wq\nworkqueue.\n\nWhile at it, remove the unused nvme_fc_wq workqueue too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26852",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/ipv6: avoid possible UAF in ip6_route_mpath_notify()\n\nsyzbot found another use-after-free in ip6_route_mpath_notify() [1]\n\nCommit f7225172f25a (\"net/ipv6: prevent use after free in\nip6_route_mpath_notify\") was not able to fix the root cause.\n\nWe need to defer the fib6_info_release() calls after\nip6_route_mpath_notify(), in the cleanup phase.\n\n[1]\nBUG: KASAN: slab-use-after-free in rt6_fill_node+0x1460/0x1ac0\nRead of size 4 at addr ffff88809a07fc64 by task syz-executor.2/23037\n\nCPU: 0 PID: 23037 Comm: syz-executor.2 Not tainted 6.8.0-rc4-syzkaller-01035-gea7f3cfaa588 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x1e7/0x2e0 lib/dump_stack.c:106\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x167/0x540 mm/kasan/report.c:488\n  kasan_report+0x142/0x180 mm/kasan/report.c:601\n rt6_fill_node+0x1460/0x1ac0\n  inet6_rt_notify+0x13b/0x290 net/ipv6/route.c:6184\n  ip6_route_mpath_notify net/ipv6/route.c:5198 [inline]\n  ip6_route_multipath_add net/ipv6/route.c:5404 [inline]\n  inet6_rtm_newroute+0x1d0f/0x2300 net/ipv6/route.c:5517\n  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597\n  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543\n  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367\n  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x221/0x270 net/socket.c:745\n  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584\n  ___sys_sendmsg net/socket.c:2638 [inline]\n  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667\n do_syscall_64+0xf9/0x240\n entry_SYSCALL_64_after_hwframe+0x6f/0x77\nRIP: 0033:0x7f73dd87dda9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f73de6550c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f73dd9ac050 RCX: 00007f73dd87dda9\nRDX: 0000000000000000 RSI: 0000000020000140 RDI: 0000000000000005\nRBP: 00007f73dd8ca47a R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000006e R14: 00007f73dd9ac050 R15: 00007ffdbdeb7858\n \u003c/TASK\u003e\n\nAllocated by task 23037:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:372 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:389\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:3981 [inline]\n  __kmalloc+0x22e/0x490 mm/slub.c:3994\n  kmalloc include/linux/slab.h:594 [inline]\n  kzalloc include/linux/slab.h:711 [inline]\n  fib6_info_alloc+0x2e/0xf0 net/ipv6/ip6_fib.c:155\n  ip6_route_info_create+0x445/0x12b0 net/ipv6/route.c:3758\n  ip6_route_multipath_add net/ipv6/route.c:5298 [inline]\n  inet6_rtm_newroute+0x744/0x2300 net/ipv6/route.c:5517\n  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597\n  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543\n  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\n  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367\n  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg+0x221/0x270 net/socket.c:745\n  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584\n  ___sys_sendmsg net/socket.c:2638 [inline]\n  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667\n do_syscall_64+0xf9/0x240\n entry_SYSCALL_64_after_hwframe+0x6f/0x77\n\nFreed by task 16:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  kasan_save_free_info+0x4e/0x60 mm/kasan/generic.c:640\n  poison_slab_object+0xa6/0xe0 m\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26855",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ice: Fix potential NULL pointer dereference in ice_bridge_setlink()\n\nThe function ice_bridge_setlink() may encounter a NULL pointer dereference\nif nlmsg_find_attr() returns NULL and br_spec is dereferenced subsequently\nin nla_for_each_nested(). To address this issue, add a check to ensure that\nbr_spec is not NULL before proceeding with the nested attribute iteration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: make sure to pull inner header in geneve_rx()\n\nsyzbot triggered a bug in geneve_rx() [1]\n\nIssue is similar to the one I fixed in commit 8d975c15c0cd\n(\"ip6_tunnel: make sure to pull inner header in __ip6_tnl_rcv()\")\n\nWe have to save skb-\u003enetwork_header in a temporary variable\nin order to be able to recompute the network_header pointer\nafter a pskb_inet_may_pull() call.\n\npskb_inet_may_pull() makes sure the needed headers are in skb-\u003ehead.\n\n[1]\nBUG: KMSAN: uninit-value in IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]\n BUG: KMSAN: uninit-value in geneve_rx drivers/net/geneve.c:279 [inline]\n BUG: KMSAN: uninit-value in geneve_udp_encap_recv+0x36f9/0x3c10 drivers/net/geneve.c:391\n  IP_ECN_decapsulate include/net/inet_ecn.h:302 [inline]\n  geneve_rx drivers/net/geneve.c:279 [inline]\n  geneve_udp_encap_recv+0x36f9/0x3c10 drivers/net/geneve.c:391\n  udp_queue_rcv_one_skb+0x1d39/0x1f20 net/ipv4/udp.c:2108\n  udp_queue_rcv_skb+0x6ae/0x6e0 net/ipv4/udp.c:2186\n  udp_unicast_rcv_skb+0x184/0x4b0 net/ipv4/udp.c:2346\n  __udp4_lib_rcv+0x1c6b/0x3010 net/ipv4/udp.c:2422\n  udp_rcv+0x7d/0xa0 net/ipv4/udp.c:2604\n  ip_protocol_deliver_rcu+0x264/0x1300 net/ipv4/ip_input.c:205\n  ip_local_deliver_finish+0x2b8/0x440 net/ipv4/ip_input.c:233\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip_local_deliver+0x21f/0x490 net/ipv4/ip_input.c:254\n  dst_input include/net/dst.h:461 [inline]\n  ip_rcv_finish net/ipv4/ip_input.c:449 [inline]\n  NF_HOOK include/linux/netfilter.h:314 [inline]\n  ip_rcv+0x46f/0x760 net/ipv4/ip_input.c:569\n  __netif_receive_skb_one_core net/core/dev.c:5534 [inline]\n  __netif_receive_skb+0x1a6/0x5a0 net/core/dev.c:5648\n  process_backlog+0x480/0x8b0 net/core/dev.c:5976\n  __napi_poll+0xe3/0x980 net/core/dev.c:6576\n  napi_poll net/core/dev.c:6645 [inline]\n  net_rx_action+0x8b8/0x1870 net/core/dev.c:6778\n  __do_softirq+0x1b7/0x7c5 kernel/softirq.c:553\n  do_softirq+0x9a/0xf0 kernel/softirq.c:454\n  __local_bh_enable_ip+0x9b/0xa0 kernel/softirq.c:381\n  local_bh_enable include/linux/bottom_half.h:33 [inline]\n  rcu_read_unlock_bh include/linux/rcupdate.h:820 [inline]\n  __dev_queue_xmit+0x2768/0x51c0 net/core/dev.c:4378\n  dev_queue_xmit include/linux/netdevice.h:3171 [inline]\n  packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8aef/0x9f10 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  __sys_sendto+0x735/0xa10 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:3819 [inline]\n  slab_alloc_node mm/slub.c:3860 [inline]\n  kmem_cache_alloc_node+0x5cb/0xbc0 mm/slub.c:3903\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n  __alloc_skb+0x352/0x790 net/core/skbuff.c:651\n  alloc_skb include/linux/skbuff.h:1296 [inline]\n  alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6394\n  sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2783\n  packet_alloc_skb net/packet/af_packet.c:2930 [inline]\n  packet_snd net/packet/af_packet.c:3024 [inline]\n  packet_sendmsg+0x70c2/0x9f10 net/packet/af_packet.c:3113\n  sock_sendmsg_nosec net/socket.c:730 [inline]\n  __sock_sendmsg net/socket.c:745 [inline]\n  __sys_sendto+0x735/0xa10 net/socket.c:2191\n  __do_sys_sendto net/socket.c:2203 [inline]\n  __se_sys_sendto net/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26859",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/bnx2x: Prevent access to a freed page in page_pool\n\nFix race condition leading to system crash during EEH error handling\n\nDuring EEH error recovery, the bnx2x driver's transmit timeout logic\ncould cause a race condition when handling reset tasks. The\nbnx2x_tx_timeout() schedules reset tasks via bnx2x_sp_rtnl_task(),\nwhich ultimately leads to bnx2x_nic_unload(). In bnx2x_nic_unload()\nSGEs are freed using bnx2x_free_rx_sge_range(). However, this could\noverlap with the EEH driver's attempt to reset the device using\nbnx2x_io_slot_reset(), which also tries to free SGEs. This race\ncondition can result in system crashes due to accessing freed memory\nlocations in bnx2x_free_rx_sge()\n\n799  static inline void bnx2x_free_rx_sge(struct bnx2x *bp,\n800\t\t\t\tstruct bnx2x_fastpath *fp, u16 index)\n801  {\n802\tstruct sw_rx_page *sw_buf = \u0026fp-\u003erx_page_ring[index];\n803     struct page *page = sw_buf-\u003epage;\n....\nwhere sw_buf was set to NULL after the call to dma_unmap_page()\nby the preceding thread.\n\n    EEH: Beginning: 'slot_reset'\n    PCI 0011:01:00.0#10000: EEH: Invoking bnx2x-\u003eslot_reset()\n    bnx2x: [bnx2x_io_slot_reset:14228(eth1)]IO slot reset initializing...\n    bnx2x 0011:01:00.0: enabling device (0140 -\u003e 0142)\n    bnx2x: [bnx2x_io_slot_reset:14244(eth1)]IO slot reset --\u003e driver unload\n    Kernel attempted to read user page (0) - exploit attempt? (uid: 0)\n    BUG: Kernel NULL pointer dereference on read at 0x00000000\n    Faulting instruction address: 0xc0080000025065fc\n    Oops: Kernel access of bad area, sig: 11 [#1]\n    .....\n    Call Trace:\n    [c000000003c67a20] [c00800000250658c] bnx2x_io_slot_reset+0x204/0x610 [bnx2x] (unreliable)\n    [c000000003c67af0] [c0000000000518a8] eeh_report_reset+0xb8/0xf0\n    [c000000003c67b60] [c000000000052130] eeh_pe_report+0x180/0x550\n    [c000000003c67c70] [c00000000005318c] eeh_handle_normal_event+0x84c/0xa60\n    [c000000003c67d50] [c000000000053a84] eeh_event_handler+0xf4/0x170\n    [c000000003c67da0] [c000000000194c58] kthread+0x1c8/0x1d0\n    [c000000003c67e10] [c00000000000cf64] ret_from_kernel_thread+0x5c/0x64\n\nTo solve this issue, we need to verify page pool allocations before\nfreeing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhsr: Fix uninit-value access in hsr_get_node()\n\nKMSAN reported the following uninit-value access issue [1]:\n\n=====================================================\nBUG: KMSAN: uninit-value in hsr_get_node+0xa2e/0xa40 net/hsr/hsr_framereg.c:246\n hsr_get_node+0xa2e/0xa40 net/hsr/hsr_framereg.c:246\n fill_frame_info net/hsr/hsr_forward.c:577 [inline]\n hsr_forward_skb+0xe12/0x30e0 net/hsr/hsr_forward.c:615\n hsr_dev_xmit+0x1a1/0x270 net/hsr/hsr_device.c:223\n __netdev_start_xmit include/linux/netdevice.h:4940 [inline]\n netdev_start_xmit include/linux/netdevice.h:4954 [inline]\n xmit_one net/core/dev.c:3548 [inline]\n dev_hard_start_xmit+0x247/0xa10 net/core/dev.c:3564\n __dev_queue_xmit+0x33b8/0x5130 net/core/dev.c:4349\n dev_queue_xmit include/linux/netdevice.h:3134 [inline]\n packet_xmit+0x9c/0x6b0 net/packet/af_packet.c:276\n packet_snd net/packet/af_packet.c:3087 [inline]\n packet_sendmsg+0x8b1d/0x9f30 net/packet/af_packet.c:3119\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n __sys_sendto+0x735/0xa10 net/socket.c:2191\n __do_sys_sendto net/socket.c:2203 [inline]\n __se_sys_sendto net/socket.c:2199 [inline]\n __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nUninit was created at:\n slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\n slab_alloc_node mm/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x5e9/0xb10 mm/slub.c:3523\n kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:560\n __alloc_skb+0x318/0x740 net/core/skbuff.c:651\n alloc_skb include/linux/skbuff.h:1286 [inline]\n alloc_skb_with_frags+0xc8/0xbd0 net/core/skbuff.c:6334\n sock_alloc_send_pskb+0xa80/0xbf0 net/core/sock.c:2787\n packet_alloc_skb net/packet/af_packet.c:2936 [inline]\n packet_snd net/packet/af_packet.c:3030 [inline]\n packet_sendmsg+0x70e8/0x9f30 net/packet/af_packet.c:3119\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n __sys_sendto+0x735/0xa10 net/socket.c:2191\n __do_sys_sendto net/socket.c:2203 [inline]\n __se_sys_sendto net/socket.c:2199 [inline]\n __x64_sys_sendto+0x125/0x1c0 net/socket.c:2199\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0x6d/0x140 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nCPU: 1 PID: 5033 Comm: syz-executor334 Not tainted 6.7.0-syzkaller-00562-g9f8413c4a66f #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023\n=====================================================\n\nIf the packet type ID field in the Ethernet header is either ETH_P_PRP or\nETH_P_HSR, but it is not followed by an HSR tag, hsr_get_skb_sequence_nr()\nreads an invalid value as a sequence number. This causes the above issue.\n\nThis patch fixes the issue by returning NULL if the Ethernet header is not\nfollowed by an HSR tag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26874",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Fix a null pointer crash in mtk_drm_crtc_finish_page_flip\n\nIt's possible that mtk_crtc-\u003eevent is NULL in\nmtk_drm_crtc_finish_page_flip().\n\npending_needs_vblank value is set by mtk_crtc-\u003eevent, but in\nmtk_drm_crtc_atomic_flush(), it's is not guarded by the same\nlock in mtk_drm_finish_page_flip(), thus a race condition happens.\n\nConsider the following case:\n\nCPU1                              CPU2\nstep 1:\nmtk_drm_crtc_atomic_begin()\nmtk_crtc-\u003eevent is not null,\n                                  step 1:\n                                  mtk_drm_crtc_atomic_flush:\n                                  mtk_drm_crtc_update_config(\n                                      !!mtk_crtc-\u003eevent)\nstep 2:\nmtk_crtc_ddp_irq -\u003e\nmtk_drm_finish_page_flip:\nlock\nmtk_crtc-\u003eevent set to null,\npending_needs_vblank set to false\nunlock\n                                  pending_needs_vblank set to true,\n\n                                  step 2:\n                                  mtk_crtc_ddp_irq -\u003e\n                                  mtk_drm_finish_page_flip called again,\n                                  pending_needs_vblank is still true\n                                  //null pointer\n\nInstead of guarding the entire mtk_drm_crtc_atomic_flush(), it's more\nefficient to just check if mtk_crtc-\u003eevent is null before use.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26876",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/bridge: adv7511: fix crash on irq during probe\n\nMoved IRQ registration down to end of adv7511_probe().\n\nIf an IRQ already is pending during adv7511_probe\n(before adv7511_cec_init) then cec_received_msg_ts\ncould crash using uninitialized data:\n\n    Unable to handle kernel read from unreadable memory at virtual address 00000000000003d5\n    Internal error: Oops: 96000004 [#1] PREEMPT_RT SMP\n    Call trace:\n     cec_received_msg_ts+0x48/0x990 [cec]\n     adv7511_cec_irq_process+0x1cc/0x308 [adv7511]\n     adv7511_irq_process+0xd8/0x120 [adv7511]\n     adv7511_irq_handler+0x1c/0x30 [adv7511]\n     irq_thread_fn+0x30/0xa0\n     irq_thread+0x14c/0x238\n     kthread+0x190/0x1a8",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26878",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nquota: Fix potential NULL pointer dereference\n\nBelow race may cause NULL pointer dereference\n\nP1\t\t\t\t\tP2\ndquot_free_inode\t\t\tquota_off\n\t\t\t\t\t  drop_dquot_ref\n\t\t\t\t\t   remove_dquot_ref\n\t\t\t\t\t   dquots = i_dquot(inode)\n  dquots = i_dquot(inode)\n  srcu_read_lock\n  dquots[cnt]) != NULL (1)\n\t\t\t\t\t     dquots[type] = NULL (2)\n  spin_lock(\u0026dquots[cnt]-\u003edq_dqb_lock) (3)\n   ....\n\nIf dquot_free_inode(or other routines) checks inode's quota pointers (1)\nbefore quota_off sets it to NULL(2) and use it (3) after that, NULL pointer\ndereference will be triggered.\n\nSo let's fix it by using a temporary pointer to avoid this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm: call the resume method on internal suspend\n\nThere is this reported crash when experimenting with the lvm2 testsuite.\nThe list corruption is caused by the fact that the postsuspend and resume\nmethods were not paired correctly; there were two consecutive calls to the\norigin_postsuspend function. The second call attempts to remove the\n\"hash_list\" entry from a list, while it was already removed by the first\ncall.\n\nFix __dm_internal_resume so that it calls the preresume and resume\nmethods of the table's targets.\n\nIf a preresume method of some target fails, we are in a tricky situation.\nWe can't return an error because dm_internal_resume isn't supposed to\nreturn errors. We can't return success, because then the \"resume\" and\n\"postsuspend\" methods would not be paired correctly. So, we set the\nDMF_SUSPENDED flag and we fake normal suspend - it may confuse userspace\ntools, but it won't cause a kernel crash.\n\n------------[ cut here ]------------\nkernel BUG at lib/list_debug.c:56!\ninvalid opcode: 0000 [#1] PREEMPT SMP\nCPU: 1 PID: 8343 Comm: dmsetup Not tainted 6.8.0-rc6 #4\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014\nRIP: 0010:__list_del_entry_valid_or_report+0x77/0xc0\n\u003csnip\u003e\nRSP: 0018:ffff8881b831bcc0 EFLAGS: 00010282\nRAX: 000000000000004e RBX: ffff888143b6eb80 RCX: 0000000000000000\nRDX: 0000000000000001 RSI: ffffffff819053d0 RDI: 00000000ffffffff\nRBP: ffff8881b83a3400 R08: 00000000fffeffff R09: 0000000000000058\nR10: 0000000000000000 R11: ffffffff81a24080 R12: 0000000000000001\nR13: ffff88814538e000 R14: ffff888143bc6dc0 R15: ffffffffa02e4bb0\nFS:  00000000f7c0f780(0000) GS:ffff8893f0a40000(0000) knlGS:0000000000000000\nCS:  0010 DS: 002b ES: 002b CR0: 0000000080050033\nCR2: 0000000057fb5000 CR3: 0000000143474000 CR4: 00000000000006b0\nCall Trace:\n \u003cTASK\u003e\n ? die+0x2d/0x80\n ? do_trap+0xeb/0xf0\n ? __list_del_entry_valid_or_report+0x77/0xc0\n ? do_error_trap+0x60/0x80\n ? __list_del_entry_valid_or_report+0x77/0xc0\n ? exc_invalid_op+0x49/0x60\n ? __list_del_entry_valid_or_report+0x77/0xc0\n ? asm_exc_invalid_op+0x16/0x20\n ? table_deps+0x1b0/0x1b0 [dm_mod]\n ? __list_del_entry_valid_or_report+0x77/0xc0\n origin_postsuspend+0x1a/0x50 [dm_snapshot]\n dm_table_postsuspend_targets+0x34/0x50 [dm_mod]\n dm_suspend+0xd8/0xf0 [dm_mod]\n dev_suspend+0x1f2/0x2f0 [dm_mod]\n ? table_deps+0x1b0/0x1b0 [dm_mod]\n ctl_ioctl+0x300/0x5f0 [dm_mod]\n dm_compat_ctl_ioctl+0x7/0x10 [dm_mod]\n __x64_compat_sys_ioctl+0x104/0x170\n do_syscall_64+0x184/0x1b0\n entry_SYSCALL_64_after_hwframe+0x46/0x4e\nRIP: 0033:0xf7e6aead\n\u003csnip\u003e\n---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26883",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix stackmap overflow check on 32-bit arches\n\nThe stackmap code relies on roundup_pow_of_two() to compute the number\nof hash buckets, and contains an overflow check by checking if the\nresulting value is 0. However, on 32-bit arches, the roundup code itself\ncan overflow by doing a 32-bit left-shift of an unsigned long value,\nwhich is undefined behaviour, so it is not guaranteed to truncate\nneatly. This was triggered by syzbot on the DEVMAP_HASH type, which\ncontains the same check, copied from the hashtab code.\n\nThe commit in the fixes tag actually attempted to fix this, but the fix\ndid not account for the UB, so the fix only works on CPUs where an\noverflow does result in a neat truncation to zero, which is not\nguaranteed. Checking the value before rounding does not have this\nproblem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix hashtab overflow check on 32-bit arches\n\nThe hashtab code relies on roundup_pow_of_two() to compute the number of\nhash buckets, and contains an overflow check by checking if the\nresulting value is 0. However, on 32-bit arches, the roundup code itself\ncan overflow by doing a 32-bit left-shift of an unsigned long value,\nwhich is undefined behaviour, so it is not guaranteed to truncate\nneatly. This was triggered by syzbot on the DEVMAP_HASH type, which\ncontains the same check, copied from the hashtab code. So apply the same\nfix to hashtab, by moving the overflow check to before the roundup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26894",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: processor_idle: Fix memory leak in acpi_processor_power_exit()\n\nAfter unregistering the CPU idle device, the memory associated with\nit is not freed, leading to a memory leak:\n\nunreferenced object 0xffff896282f6c000 (size 1024):\n  comm \"swapper/0\", pid 1, jiffies 4294893170\n  hex dump (first 32 bytes):\n    00 00 00 00 0b 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc 8836a742):\n    [\u003cffffffff993495ed\u003e] kmalloc_trace+0x29d/0x340\n    [\u003cffffffff9972f3b3\u003e] acpi_processor_power_init+0xf3/0x1c0\n    [\u003cffffffff9972d263\u003e] __acpi_processor_start+0xd3/0xf0\n    [\u003cffffffff9972d2bc\u003e] acpi_processor_start+0x2c/0x50\n    [\u003cffffffff99805872\u003e] really_probe+0xe2/0x480\n    [\u003cffffffff99805c98\u003e] __driver_probe_device+0x78/0x160\n    [\u003cffffffff99805daf\u003e] driver_probe_device+0x1f/0x90\n    [\u003cffffffff9980601e\u003e] __driver_attach+0xce/0x1c0\n    [\u003cffffffff99803170\u003e] bus_for_each_dev+0x70/0xc0\n    [\u003cffffffff99804822\u003e] bus_add_driver+0x112/0x210\n    [\u003cffffffff99807245\u003e] driver_register+0x55/0x100\n    [\u003cffffffff9aee4acb\u003e] acpi_processor_driver_init+0x3b/0xc0\n    [\u003cffffffff990012d1\u003e] do_one_initcall+0x41/0x300\n    [\u003cffffffff9ae7c4b0\u003e] kernel_init_freeable+0x320/0x470\n    [\u003cffffffff99b231f6\u003e] kernel_init+0x16/0x1b0\n    [\u003cffffffff99042e6d\u003e] ret_from_fork+0x2d/0x50\n\nFix this by freeing the CPU idle device after unregistering it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix kmemleak of rdev-\u003eserial\n\nIf kobject_add() is fail in bind_rdev_to_array(), 'rdev-\u003eserial' will be\nalloc not be freed, and kmemleak occurs.\n\nunreferenced object 0xffff88815a350000 (size 49152):\n  comm \"mdadm\", pid 789, jiffies 4294716910\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc f773277a):\n    [\u003c0000000058b0a453\u003e] kmemleak_alloc+0x61/0xe0\n    [\u003c00000000366adf14\u003e] __kmalloc_large_node+0x15e/0x270\n    [\u003c000000002e82961b\u003e] __kmalloc_node.cold+0x11/0x7f\n    [\u003c00000000f206d60a\u003e] kvmalloc_node+0x74/0x150\n    [\u003c0000000034bf3363\u003e] rdev_init_serial+0x67/0x170\n    [\u003c0000000010e08fe9\u003e] mddev_create_serial_pool+0x62/0x220\n    [\u003c00000000c3837bf0\u003e] bind_rdev_to_array+0x2af/0x630\n    [\u003c0000000073c28560\u003e] md_add_new_disk+0x400/0x9f0\n    [\u003c00000000770e30ff\u003e] md_ioctl+0x15bf/0x1c10\n    [\u003c000000006cfab718\u003e] blkdev_ioctl+0x191/0x3f0\n    [\u003c0000000085086a11\u003e] vfs_ioctl+0x22/0x60\n    [\u003c0000000018b656fe\u003e] __x64_sys_ioctl+0xba/0xe0\n    [\u003c00000000e54e675e\u003e] do_syscall_64+0x71/0x150\n    [\u003c000000008b0ad622\u003e] entry_SYSCALL_64_after_hwframe+0x6c/0x74",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndo_sys_name_to_handle(): use kzalloc() to fix kernel-infoleak\n\nsyzbot identified a kernel information leak vulnerability in\ndo_sys_name_to_handle() and issued the following report [1].\n\n[1]\n\"BUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_user+0xbc/0x100 lib/usercopy.c:40\n instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n _copy_to_user+0xbc/0x100 lib/usercopy.c:40\n copy_to_user include/linux/uaccess.h:191 [inline]\n do_sys_name_to_handle fs/fhandle.c:73 [inline]\n __do_sys_name_to_handle_at fs/fhandle.c:112 [inline]\n __se_sys_name_to_handle_at+0x949/0xb10 fs/fhandle.c:94\n __x64_sys_name_to_handle_at+0xe4/0x140 fs/fhandle.c:94\n ...\n\nUninit was created at:\n slab_post_alloc_hook+0x129/0xa70 mm/slab.h:768\n slab_alloc_node mm/slub.c:3478 [inline]\n __kmem_cache_alloc_node+0x5c9/0x970 mm/slub.c:3517\n __do_kmalloc_node mm/slab_common.c:1006 [inline]\n __kmalloc+0x121/0x3c0 mm/slab_common.c:1020\n kmalloc include/linux/slab.h:604 [inline]\n do_sys_name_to_handle fs/fhandle.c:39 [inline]\n __do_sys_name_to_handle_at fs/fhandle.c:112 [inline]\n __se_sys_name_to_handle_at+0x441/0xb10 fs/fhandle.c:94\n __x64_sys_name_to_handle_at+0xe4/0x140 fs/fhandle.c:94\n ...\n\nBytes 18-19 of 20 are uninitialized\nMemory access of size 20 starts at ffff888128a46380\nData copied to user address 0000000020000240\"\n\nPer Chuck Lever's suggestion, use kzalloc() instead of kmalloc() to\nsolve the problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Fix fortify source warning while accessing Eth segment\n\n ------------[ cut here ]------------\n memcpy: detected field-spanning write (size 56) of single field \"eseg-\u003einline_hdr.start\" at /var/lib/dkms/mlnx-ofed-kernel/5.8/build/drivers/infiniband/hw/mlx5/wr.c:131 (size 2)\n WARNING: CPU: 0 PID: 293779 at /var/lib/dkms/mlnx-ofed-kernel/5.8/build/drivers/infiniband/hw/mlx5/wr.c:131 mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n Modules linked in: 8021q garp mrp stp llc rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_umad(OE) mlx5_ib(OE) ib_uverbs(OE) ib_core(OE) mlx5_core(OE) pci_hyperv_intf mlxdevm(OE) mlx_compat(OE) tls mlxfw(OE) psample nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables libcrc32c nfnetlink mst_pciconf(OE) knem(OE) vfio_pci vfio_pci_core vfio_iommu_type1 vfio iommufd irqbypass cuse nfsv3 nfs fscache netfs xfrm_user xfrm_algo ipmi_devintf ipmi_msghandler binfmt_misc crct10dif_pclmul crc32_pclmul polyval_clmulni polyval_generic ghash_clmulni_intel sha512_ssse3 snd_pcsp aesni_intel crypto_simd cryptd snd_pcm snd_timer joydev snd soundcore input_leds serio_raw evbug nfsd auth_rpcgss nfs_acl lockd grace sch_fq_codel sunrpc drm efi_pstore ip_tables x_tables autofs4 psmouse virtio_net net_failover failover floppy\n  [last unloaded: mlx_compat(OE)]\n CPU: 0 PID: 293779 Comm: ssh Tainted: G           OE      6.2.0-32-generic #32~22.04.1-Ubuntu\n Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n RIP: 0010:mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n Code: 0c 01 00 a8 01 75 25 48 8b 75 a0 b9 02 00 00 00 48 c7 c2 10 5b fd c0 48 c7 c7 80 5b fd c0 c6 05 57 0c 03 00 01 e8 95 4d 93 da \u003c0f\u003e 0b 44 8b 4d b0 4c 8b 45 c8 48 8b 4d c0 e9 49 fb ff ff 41 0f b7\n RSP: 0018:ffffb5b48478b570 EFLAGS: 00010046\n RAX: 0000000000000000 RBX: 0000000000000001 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\n RBP: ffffb5b48478b628 R08: 0000000000000000 R09: 0000000000000000\n R10: 0000000000000000 R11: 0000000000000000 R12: ffffb5b48478b5e8\n R13: ffff963a3c609b5e R14: ffff9639c3fbd800 R15: ffffb5b480475a80\n FS:  00007fc03b444c80(0000) GS:ffff963a3dc00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000556f46bdf000 CR3: 0000000006ac6003 CR4: 00000000003706f0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  \u003cTASK\u003e\n  ? show_regs+0x72/0x90\n  ? mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n  ? __warn+0x8d/0x160\n  ? mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n  ? report_bug+0x1bb/0x1d0\n  ? handle_bug+0x46/0x90\n  ? exc_invalid_op+0x19/0x80\n  ? asm_exc_invalid_op+0x1b/0x20\n  ? mlx5_ib_post_send+0x191b/0x1a60 [mlx5_ib]\n  mlx5_ib_post_send_nodrain+0xb/0x20 [mlx5_ib]\n  ipoib_send+0x2ec/0x770 [ib_ipoib]\n  ipoib_start_xmit+0x5a0/0x770 [ib_ipoib]\n  dev_hard_start_xmit+0x8e/0x1e0\n  ? validate_xmit_skb_list+0x4d/0x80\n  sch_direct_xmit+0x116/0x3a0\n  __dev_xmit_skb+0x1fd/0x580\n  __dev_queue_xmit+0x284/0x6b0\n  ? _raw_spin_unlock_irq+0xe/0x50\n  ? __flush_work.isra.0+0x20d/0x370\n  ? push_pseudo_header+0x17/0x40 [ib_ipoib]\n  neigh_connected_output+0xcd/0x110\n  ip_finish_output2+0x179/0x480\n  ? __smp_call_single_queue+0x61/0xa0\n  __ip_finish_output+0xc3/0x190\n  ip_finish_output+0x2e/0xf0\n  ip_output+0x78/0x110\n  ? __pfx_ip_finish_output+0x10/0x10\n  ip_local_out+0x64/0x70\n  __ip_queue_xmit+0x18a/0x460\n  ip_queue_xmit+0x15/0x30\n  __tcp_transmit_skb+0x914/0x9c0\n  tcp_write_xmit+0x334/0x8d0\n  tcp_push_one+0x3c/0x60\n  tcp_sendmsg_locked+0x2e1/0xac0\n  tcp_sendmsg+0x2d/0x50\n  inet_sendmsg+0x43/0x90\n  sock_sendmsg+0x68/0x80\n  sock_write_iter+0x93/0x100\n  vfs_write+0x326/0x3c0\n  ksys_write+0xbd/0xf0\n  ? do_syscall_64+0x69/0x90\n  __x64_sys_write+0x19/0x30\n  do_syscall_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Reset IH OVERFLOW_CLEAR bit\n\nAllows us to detect subsequent IH ring buffer overflows as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing/trigger: Fix to return error if failed to alloc snapshot\n\nFix register_snapshot_trigger() to return error code if it failed to\nallocate a snapshot instead of 0 (success). Unless that, it will register\nsnapshot trigger without an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninet: inet_defrag: prevent sk release while still in use\n\nip_local_out() and other functions can pass skb-\u003esk as function argument.\n\nIf the skb is a fragment and reassembly happens before such function call\nreturns, the sk must not be released.\n\nThis affects skb fragments reassembled via netfilter or similar\nmodules, e.g. openvswitch or ct_act.c, when run as part of tx pipeline.\n\nEric Dumazet made an initial analysis of this bug.  Quoting Eric:\n  Calling ip_defrag() in output path is also implying skb_orphan(),\n  which is buggy because output path relies on sk not disappearing.\n\n  A relevant old patch about the issue was :\n  8282f27449bf (\"inet: frag: Always orphan skbs inside ip_defrag()\")\n\n  [..]\n\n  net/ipv4/ip_output.c depends on skb-\u003esk being set, and probably to an\n  inet socket, not an arbitrary one.\n\n  If we orphan the packet in ipvlan, then downstream things like FQ\n  packet scheduler will not work properly.\n\n  We need to change ip_defrag() to only use skb_orphan() when really\n  needed, ie whenever frag_list is going to be used.\n\nEric suggested to stash sk in fragment queue and made an initial patch.\nHowever there is a problem with this:\n\nIf skb is refragmented again right after, ip_do_fragment() will copy\nhead-\u003esk to the new fragments, and sets up destructor to sock_wfree.\nIOW, we have no choice but to fix up sk_wmem accouting to reflect the\nfully reassembled skb, else wmem will underflow.\n\nThis change moves the orphan down into the core, to last possible moment.\nAs ip_defrag_offset is aliased with sk_buff-\u003esk member, we must move the\noffset into the FRAG_CB, else skb-\u003esk gets clobbered.\n\nThis allows to delay the orphaning long enough to learn if the skb has\nto be queued or if the skb is completing the reasm queue.\n\nIn the former case, things work as before, skb is orphaned.  This is\nsafe because skb gets queued/stolen and won't continue past reasm engine.\n\nIn the latter case, we will steal the skb-\u003esk reference, reattach it to\nthe head skb, and fix up wmem accouting when inet_frag inflates truesize.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: validate the parameters of bo mapping operations more clearly\n\nVerify the parameters of\namdgpu_vm_bo_(map/replace_map/clearing_mappings) in one common place.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix garbage collector racing against connect()\n\nGarbage collector does not take into account the risk of embryo getting\nenqueued during the garbage collection. If such embryo has a peer that\ncarries SCM_RIGHTS, two consecutive passes of scan_children() may see a\ndifferent set of children. Leading to an incorrectly elevated inflight\ncount, and then a dangling pointer within the gc_inflight_list.\n\nsockets are AF_UNIX/SOCK_STREAM\nS is an unconnected socket\nL is a listening in-flight socket bound to addr, not in fdtable\nV's fd will be passed via sendmsg(), gets inflight count bumped\n\nconnect(S, addr)\tsendmsg(S, [V]); close(V)\t__unix_gc()\n----------------\t-------------------------\t-----------\n\nNS = unix_create1()\nskb1 = sock_wmalloc(NS)\nL = unix_find_other(addr)\nunix_state_lock(L)\nunix_peer(S) = NS\n\t\t\t// V count=1 inflight=0\n\n \t\t\tNS = unix_peer(S)\n \t\t\tskb2 = sock_alloc()\n\t\t\tskb_queue_tail(NS, skb2[V])\n\n\t\t\t// V became in-flight\n\t\t\t// V count=2 inflight=1\n\n\t\t\tclose(V)\n\n\t\t\t// V count=1 inflight=1\n\t\t\t// GC candidate condition met\n\n\t\t\t\t\t\tfor u in gc_inflight_list:\n\t\t\t\t\t\t  if (total_refs == inflight_refs)\n\t\t\t\t\t\t    add u to gc_candidates\n\n\t\t\t\t\t\t// gc_candidates={L, V}\n\n\t\t\t\t\t\tfor u in gc_candidates:\n\t\t\t\t\t\t  scan_children(u, dec_inflight)\n\n\t\t\t\t\t\t// embryo (skb1) was not\n\t\t\t\t\t\t// reachable from L yet, so V's\n\t\t\t\t\t\t// inflight remains unchanged\n__skb_queue_tail(L, skb1)\nunix_state_unlock(L)\n\t\t\t\t\t\tfor u in gc_candidates:\n\t\t\t\t\t\t  if (u.inflight)\n\t\t\t\t\t\t    scan_children(u, inc_inflight_move_tail)\n\n\t\t\t\t\t\t// V count=1 inflight=2 (!)\n\nIf there is a GC-candidate listening socket, lock/unlock its state. This\nmakes GC wait until the end of any ongoing connect() to that socket. After\nflipping the lock, a possibly SCM-laden embryo is already enqueued. And if\nthere is another embryo coming, it can not possibly carry SCM_RIGHTS. At\nthis point, unix_inflight() can not happen because unix_gc_lock is already\ntaken. Inflight graph remains unaffected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_debug_files_proc_show()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26929",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix double free of the ha-\u003evp_map pointer\n\nCoverity scan reported potential risk of double free of the pointer\nha-\u003evp_map.  ha-\u003evp_map was freed in qla2x00_mem_alloc(), and again freed\nin function qla2x00_mem_free(ha).\n\nAssign NULL to vp_map and kfree take care of NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix command flush on cable pull\n\nSystem crash due to command failed to flush back to SCSI layer.\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000000\n PGD 0 P4D 0\n Oops: 0000 [#1] SMP NOPTI\n CPU: 27 PID: 793455 Comm: kworker/u130:6 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-372.9.1.el8.x86_64 #1\n Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021\n Workqueue: nvme-wq nvme_fc_connect_ctrl_work [nvme_fc]\n RIP: 0010:__wake_up_common+0x4c/0x190\n Code: 24 10 4d 85 c9 74 0a 41 f6 01 04 0f 85 9d 00 00 00 48 8b 43 08 48 83 c3 08 4c 8d 48 e8 49 8d 41 18 48 39 c3 0f 84 f0 00 00 00 \u003c49\u003e 8b 41 18 89 54 24 08 31 ed 4c 8d 70 e8 45 8b 29 41 f6 c5 04 75\n RSP: 0018:ffff95f3e0cb7cd0 EFLAGS: 00010086\n RAX: 0000000000000000 RBX: ffff8b08d3b26328 RCX: 0000000000000000\n RDX: 0000000000000001 RSI: 0000000000000003 RDI: ffff8b08d3b26320\n RBP: 0000000000000001 R08: 0000000000000000 R09: ffffffffffffffe8\n R10: 0000000000000000 R11: ffff95f3e0cb7a60 R12: ffff95f3e0cb7d20\n R13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000\n FS:  0000000000000000(0000) GS:ffff8b2fdf6c0000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000002f1e410002 CR4: 00000000007706e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n  __wake_up_common_lock+0x7c/0xc0\n  qla_nvme_ls_req+0x355/0x4c0 [qla2xxx]\n qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae1407ca000 from port 21:32:00:02:ac:07:ee:b8 loop_id 0x02 s_id 01:02:00 logout 1 keep 0 els_logo 0\n ? __nvme_fc_send_ls_req+0x260/0x380 [nvme_fc]\n qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:00:02:ac:07:ee:b8 state transitioned from ONLINE to LOST - portid=010200.\n  ? nvme_fc_send_ls_req.constprop.42+0x1a/0x45 [nvme_fc]\n qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320002ac07eeb8. rport ffff8ae598122000 roles 1\n ? nvme_fc_connect_ctrl_work.cold.63+0x1e3/0xa7d [nvme_fc]\n qla2xxx [0000:12:00.1]-f084:3: qlt_free_session_done: se_sess 0000000000000000 / sess ffff8ae14801e000 from port 21:32:01:02:ad:f7:ee:b8 loop_id 0x04 s_id 01:02:01 logout 1 keep 0 els_logo 0\n  ? __switch_to+0x10c/0x450\n ? process_one_work+0x1a7/0x360\n qla2xxx [0000:12:00.1]-207d:3: FCPort 21:32:01:02:ad:f7:ee:b8 state transitioned from ONLINE to LOST - portid=010201.\n  ? worker_thread+0x1ce/0x390\n  ? create_worker+0x1a0/0x1a0\n qla2xxx [0000:12:00.1]-2109:3: qla2x00_schedule_rport_del 21320102adf7eeb8. rport ffff8ae3b2312800 roles 70\n  ? kthread+0x10a/0x120\n qla2xxx [0000:12:00.1]-2112:3: qla_nvme_unregister_remote_port: unregister remoteport on ffff8ae14801e000 21320102adf7eeb8\n  ? set_kthread_struct+0x40/0x40\n qla2xxx [0000:12:00.1]-2110:3: remoteport_delete of ffff8ae14801e000 21320102adf7eeb8 completed.\n  ? ret_from_fork+0x1f/0x40\n qla2xxx [0000:12:00.1]-f086:3: qlt_free_session_done: waiting for sess ffff8ae14801e000 logout\n\nThe system was under memory stress where driver was not able to allocate an\nSRB to carry out error recovery of cable pull.  The failure to flush causes\nupper layer to start modifying scsi_cmnd.  When the system frees up some\nmemory, the subsequent cable pull trigger another command flush. At this\npoint the driver access a null pointer when attempting to DMA unmap the\nSGL.\n\nAdd a check to make sure commands are flush back on session tear down to\nprevent the null pointer access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix deadlock in usb_deauthorize_interface()\n\nAmong the attribute file callback routines in\ndrivers/usb/core/sysfs.c, the interface_authorized_store() function is\nthe only one which acquires a device lock on an ancestor device: It\ncalls usb_deauthorize_interface(), which locks the interface's parent\nUSB device.\n\nThe will lead to deadlock if another process already owns that lock\nand tries to remove the interface, whether through a configuration\nchange or because the device has been disconnected.  As part of the\nremoval procedure, device_del() waits for all ongoing sysfs attribute\ncallbacks to complete.  But usb_deauthorize_interface() can't complete\nuntil the device lock has been released, and the lock won't be\nreleased until the removal has finished.\n\nThe mechanism provided by sysfs to prevent this kind of deadlock is\nto use the sysfs_break_active_protection() function, which tells sysfs\nnot to wait for the attribute callback.\n\nReported-and-tested by: Yue Sun \u003csamsun1006219@gmail.com\u003e\nReported by: xingwei lee \u003cxrivendell7@gmail.com\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add a dc_state NULL check in dc_state_release\n\n[How]\nCheck wheather state is NULL before releasing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26957",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/zcrypt: fix reference counting on zcrypt card objects\n\nTests with hot-plugging crytpo cards on KVM guests with debug\nkernel build revealed an use after free for the load field of\nthe struct zcrypt_card. The reason was an incorrect reference\nhandling of the zcrypt card object which could lead to a free\nof the zcrypt card object while it was still in use.\n\nThis is an example of the slab message:\n\n    kernel: 0x00000000885a7512-0x00000000885a7513 @offset=1298. First byte 0x68 instead of 0x6b\n    kernel: Allocated in zcrypt_card_alloc+0x36/0x70 [zcrypt] age=18046 cpu=3 pid=43\n    kernel:  kmalloc_trace+0x3f2/0x470\n    kernel:  zcrypt_card_alloc+0x36/0x70 [zcrypt]\n    kernel:  zcrypt_cex4_card_probe+0x26/0x380 [zcrypt_cex4]\n    kernel:  ap_device_probe+0x15c/0x290\n    kernel:  really_probe+0xd2/0x468\n    kernel:  driver_probe_device+0x40/0xf0\n    kernel:  __device_attach_driver+0xc0/0x140\n    kernel:  bus_for_each_drv+0x8c/0xd0\n    kernel:  __device_attach+0x114/0x198\n    kernel:  bus_probe_device+0xb4/0xc8\n    kernel:  device_add+0x4d2/0x6e0\n    kernel:  ap_scan_adapter+0x3d0/0x7c0\n    kernel:  ap_scan_bus+0x5a/0x3b0\n    kernel:  ap_scan_bus_wq_callback+0x40/0x60\n    kernel:  process_one_work+0x26e/0x620\n    kernel:  worker_thread+0x21c/0x440\n    kernel: Freed in zcrypt_card_put+0x54/0x80 [zcrypt] age=9024 cpu=3 pid=43\n    kernel:  kfree+0x37e/0x418\n    kernel:  zcrypt_card_put+0x54/0x80 [zcrypt]\n    kernel:  ap_device_remove+0x4c/0xe0\n    kernel:  device_release_driver_internal+0x1c4/0x270\n    kernel:  bus_remove_device+0x100/0x188\n    kernel:  device_del+0x164/0x3c0\n    kernel:  device_unregister+0x30/0x90\n    kernel:  ap_scan_adapter+0xc8/0x7c0\n    kernel:  ap_scan_bus+0x5a/0x3b0\n    kernel:  ap_scan_bus_wq_callback+0x40/0x60\n    kernel:  process_one_work+0x26e/0x620\n    kernel:  worker_thread+0x21c/0x440\n    kernel:  kthread+0x150/0x168\n    kernel:  __ret_from_fork+0x3c/0x58\n    kernel:  ret_from_fork+0xa/0x30\n    kernel: Slab 0x00000372022169c0 objects=20 used=18 fp=0x00000000885a7c88 flags=0x3ffff00000000a00(workingset|slab|node=0|zone=1|lastcpupid=0x1ffff)\n    kernel: Object 0x00000000885a74b8 @offset=1208 fp=0x00000000885a7c88\n    kernel: Redzone  00000000885a74b0: bb bb bb bb bb bb bb bb                          ........\n    kernel: Object   00000000885a74b8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74c8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74d8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74e8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a74f8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n    kernel: Object   00000000885a7508: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 68 4b 6b 6b 6b a5  kkkkkkkkkkhKkkk.\n    kernel: Redzone  00000000885a7518: bb bb bb bb bb bb bb bb                          ........\n    kernel: Padding  00000000885a756c: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a              ZZZZZZZZZZZZ\n    kernel: CPU: 0 PID: 387 Comm: systemd-udevd Not tainted 6.8.0-HF #2\n    kernel: Hardware name: IBM 3931 A01 704 (KVM/Linux)\n    kernel: Call Trace:\n    kernel:  [\u003c00000000ca5ab5b8\u003e] dump_stack_lvl+0x90/0x120\n    kernel:  [\u003c00000000c99d78bc\u003e] check_bytes_and_report+0x114/0x140\n    kernel:  [\u003c00000000c99d53cc\u003e] check_object+0x334/0x3f8\n    kernel:  [\u003c00000000c99d820c\u003e] alloc_debug_processing+0xc4/0x1f8\n    kernel:  [\u003c00000000c99d852e\u003e] get_partial_node.part.0+0x1ee/0x3e0\n    kernel:  [\u003c00000000c99d94ec\u003e] ___slab_alloc+0xaf4/0x13c8\n    kernel:  [\u003c00000000c99d9e38\u003e] __slab_alloc.constprop.0+0x78/0xb8\n    kernel:  [\u003c00000000c99dc8dc\u003e] __kmalloc+0x434/0x590\n    kernel:  [\u003c00000000c9b4c0ce\u003e] ext4_htree_store_dirent+0x4e/0x1c0\n    kernel:  [\u003c00000000c9b908a2\u003e] htree_dirblock_to_tree+0x17a/0x3f0\n    kernel: \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: fix UAF in direct writes\n\nIn production we have been hitting the following warning consistently\n\n------------[ cut here ]------------\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 17 PID: 1800359 at lib/refcount.c:28 refcount_warn_saturate+0x9c/0xe0\nWorkqueue: nfsiod nfs_direct_write_schedule_work [nfs]\nRIP: 0010:refcount_warn_saturate+0x9c/0xe0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __warn+0x9f/0x130\n ? refcount_warn_saturate+0x9c/0xe0\n ? report_bug+0xcc/0x150\n ? handle_bug+0x3d/0x70\n ? exc_invalid_op+0x16/0x40\n ? asm_exc_invalid_op+0x16/0x20\n ? refcount_warn_saturate+0x9c/0xe0\n nfs_direct_write_schedule_work+0x237/0x250 [nfs]\n process_one_work+0x12f/0x4a0\n worker_thread+0x14e/0x3b0\n ? ZSTD_getCParams_internal+0x220/0x220\n kthread+0xdc/0x120\n ? __btf_name_valid+0xa0/0xa0\n ret_from_fork+0x1f/0x30\n\nThis is because we're completing the nfs_direct_request twice in a row.\n\nThe source of this is when we have our commit requests to submit, we\nprocess them and send them off, and then in the completion path for the\ncommit requests we have\n\nif (nfs_commit_end(cinfo.mds))\n\tnfs_direct_write_complete(dreq);\n\nHowever since we're submitting asynchronous requests we sometimes have\none that completes before we submit the next one, so we end up calling\ncomplete on the nfs_direct_request twice.\n\nThe only other place we use nfs_generic_commit_list() is in\n__nfs_commit_inode, which wraps this call in a\n\nnfs_commit_begin();\nnfs_commit_end();\n\nWhich is a common pattern for this style of completion handling, one\nthat is also repeated in the direct code with get_dreq()/put_dreq()\ncalls around where we process events as well as in the completion paths.\n\nFix this by using the same pattern for the commit requests.\n\nBefore with my 200 node rocksdb stress running this warning would pop\nevery 10ish minutes.  With my patch the stress test has been running for\nseveral hours without popping.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfat: fix uninitialized field in nostale filehandles\n\nWhen fat_encode_fh_nostale() encodes file handle without a parent it\nstores only first 10 bytes of the file handle. However the length of the\nfile handle must be a multiple of 4 so the file handle is actually 12\nbytes long and the last two bytes remain uninitialized. This is not\ngreat at we potentially leak uninitialized information with the handle\nto userspace. Properly initialize the full handle length.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau: fix instmem race condition around ptr stores\n\nRunning a lot of VK CTS in parallel against nouveau, once every\nfew hours you might see something like this crash.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nPGD 8000000114e6e067 P4D 8000000114e6e067 PUD 109046067 PMD 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 7 PID: 53891 Comm: deqp-vk Not tainted 6.8.0-rc6+ #27\nHardware name: Gigabyte Technology Co., Ltd. Z390 I AORUS PRO WIFI/Z390 I AORUS PRO WIFI-CF, BIOS F8 11/05/2021\nRIP: 0010:gp100_vmm_pgt_mem+0xe3/0x180 [nouveau]\nCode: c7 48 01 c8 49 89 45 58 85 d2 0f 84 95 00 00 00 41 0f b7 46 12 49 8b 7e 08 89 da 42 8d 2c f8 48 8b 47 08 41 83 c7 01 48 89 ee \u003c48\u003e 8b 40 08 ff d0 0f 1f 00 49 8b 7e 08 48 89 d9 48 8d 75 04 48 c1\nRSP: 0000:ffffac20c5857838 EFLAGS: 00010202\nRAX: 0000000000000000 RBX: 00000000004d8001 RCX: 0000000000000001\nRDX: 00000000004d8001 RSI: 00000000000006d8 RDI: ffffa07afe332180\nRBP: 00000000000006d8 R08: ffffac20c5857ad0 R09: 0000000000ffff10\nR10: 0000000000000001 R11: ffffa07af27e2de0 R12: 000000000000001c\nR13: ffffac20c5857ad0 R14: ffffa07a96fe9040 R15: 000000000000001c\nFS:  00007fe395eed7c0(0000) GS:ffffa07e2c980000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 000000011febe001 CR4: 00000000003706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\n...\n\n ? gp100_vmm_pgt_mem+0xe3/0x180 [nouveau]\n ? gp100_vmm_pgt_mem+0x37/0x180 [nouveau]\n nvkm_vmm_iter+0x351/0xa20 [nouveau]\n ? __pfx_nvkm_vmm_ref_ptes+0x10/0x10 [nouveau]\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n ? __lock_acquire+0x3ed/0x2170\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n nvkm_vmm_ptes_get_map+0xc2/0x100 [nouveau]\n ? __pfx_nvkm_vmm_ref_ptes+0x10/0x10 [nouveau]\n ? __pfx_gp100_vmm_pgt_mem+0x10/0x10 [nouveau]\n nvkm_vmm_map_locked+0x224/0x3a0 [nouveau]\n\nAdding any sort of useful debug usually makes it go away, so I hand\nwrote the function in a line, and debugged the asm.\n\nEvery so often pt-\u003ememory-\u003eptrs is NULL. This ptrs ptr is set in\nthe nv50_instobj_acquire called from nvkm_kmap.\n\nIf Thread A and Thread B both get to nv50_instobj_acquire around\nthe same time, and Thread A hits the refcount_set line, and in\nlockstep thread B succeeds at refcount_inc_not_zero, there is a\nchance the ptrs value won't have been stored since refcount_set\nis unordered. Force a memory barrier here, I picked smp_mb, since\nwe want it on all CPUs and it's write followed by a read.\n\nv2: use paired smp_rmb/smp_wmb.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26993",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: sysfs: Fix reference leak in sysfs_break_active_protection()\n\nThe sysfs_break_active_protection() routine has an obvious reference\nleak in its error path.  If the call to kernfs_find_and_get() fails then\nkn will be NULL, so the companion sysfs_unbreak_active_protection()\nroutine won't get called (and would only cause an access violation by\ntrying to dereference kn-\u003eparent if it was called).  As a result, the\nreference to kobj acquired at the start of the function will never be\nreleased.\n\nFix the leak by adding an explicit kobject_put() call when kn is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26996",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_ncm: Fix UAF ncm object at re-bind after usb ep transport error\n\nWhen ncm function is working and then stop usb0 interface for link down,\neth_stop() is called. At this piont, accidentally if usb transport error\nshould happen in usb_ep_enable(), 'in_ep' and/or 'out_ep' may not be enabled.\n\nAfter that, ncm_disable() is called to disable for ncm unbind\nbut gether_disconnect() is never called since 'in_ep' is not enabled.\n\nAs the result, ncm object is released in ncm unbind\nbut 'dev-\u003eport_usb' associated to 'ncm-\u003eport' is not NULL.\n\nAnd when ncm bind again to recover netdev, ncm object is reallocated\nbut usb0 interface is already associated to previous released ncm object.\n\nTherefore, once usb0 interface is up and eth_start_xmit() is called,\nreleased ncm object is dereferrenced and it might cause use-after-free memory.\n\n[function unlink via configfs]\n  usb0: eth_stop dev-\u003eport_usb=ffffff9b179c3200\n  --\u003e error happens in usb_ep_enable().\n  NCM: ncm_disable: ncm=ffffff9b179c3200\n  --\u003e no gether_disconnect() since ncm-\u003eport.in_ep-\u003eenabled is false.\n  NCM: ncm_unbind: ncm unbind ncm=ffffff9b179c3200\n  NCM: ncm_free: ncm free ncm=ffffff9b179c3200   \u003c-- released ncm\n\n[function link via configfs]\n  NCM: ncm_alloc: ncm alloc ncm=ffffff9ac4f8a000\n  NCM: ncm_bind: ncm bind ncm=ffffff9ac4f8a000\n  NCM: ncm_set_alt: ncm=ffffff9ac4f8a000 alt=0\n  usb0: eth_open dev-\u003eport_usb=ffffff9b179c3200  \u003c-- previous released ncm\n  usb0: eth_start dev-\u003eport_usb=ffffff9b179c3200 \u003c--\n  eth_start_xmit()\n  --\u003e dev-\u003ewrap()\n  Unable to handle kernel paging request at virtual address dead00000000014f\n\nThis patch addresses the issue by checking if 'ncm-\u003enetdev' is not NULL at\nncm_disable() to call gether_disconnect() to deassociate 'dev-\u003eport_usb'.\nIt's more reasonable to check 'ncm-\u003enetdev' to call gether_connect/disconnect\nrather than check 'ncm-\u003eport.in_ep-\u003eenabled' since it might not be enabled\nbut the gether connection might be established.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27008",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: nv04: Fix out of bounds access\n\nWhen Output Resource (dcb-\u003eor) value is assigned in\nfabricate_dcb_output(), there may be out of bounds access to\ndac_users array in case dcb-\u003eor is zero because ffs(dcb-\u003eor) is\nused as index there.\nThe 'or' argument of fabricate_dcb_output() must be interpreted as a\nnumber of bit to set, not value.\n\nUtilize macros from 'enum nouveau_or' in calls instead of hardcoding.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntun: limit printing rate when illegal packet received by tun dev\n\nvhost_worker will call tun call backs to receive packets. If too many\nillegal packets arrives, tun_do_read will keep dumping packet contents.\nWhen console is enabled, it will costs much more cpu time to dump\npacket and soft lockup will be detected.\n\nnet_ratelimit mechanism can be used to limit the dumping rate.\n\nPID: 33036    TASK: ffff949da6f20000  CPU: 23   COMMAND: \"vhost-32980\"\n #0 [fffffe00003fce50] crash_nmi_callback at ffffffff89249253\n #1 [fffffe00003fce58] nmi_handle at ffffffff89225fa3\n #2 [fffffe00003fceb0] default_do_nmi at ffffffff8922642e\n #3 [fffffe00003fced0] do_nmi at ffffffff8922660d\n #4 [fffffe00003fcef0] end_repeat_nmi at ffffffff89c01663\n    [exception RIP: io_serial_in+20]\n    RIP: ffffffff89792594  RSP: ffffa655314979e8  RFLAGS: 00000002\n    RAX: ffffffff89792500  RBX: ffffffff8af428a0  RCX: 0000000000000000\n    RDX: 00000000000003fd  RSI: 0000000000000005  RDI: ffffffff8af428a0\n    RBP: 0000000000002710   R8: 0000000000000004   R9: 000000000000000f\n    R10: 0000000000000000  R11: ffffffff8acbf64f  R12: 0000000000000020\n    R13: ffffffff8acbf698  R14: 0000000000000058  R15: 0000000000000000\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #5 [ffffa655314979e8] io_serial_in at ffffffff89792594\n #6 [ffffa655314979e8] wait_for_xmitr at ffffffff89793470\n #7 [ffffa65531497a08] serial8250_console_putchar at ffffffff897934f6\n #8 [ffffa65531497a20] uart_console_write at ffffffff8978b605\n #9 [ffffa65531497a48] serial8250_console_write at ffffffff89796558\n #10 [ffffa65531497ac8] console_unlock at ffffffff89316124\n #11 [ffffa65531497b10] vprintk_emit at ffffffff89317c07\n #12 [ffffa65531497b68] printk at ffffffff89318306\n #13 [ffffa65531497bc8] print_hex_dump at ffffffff89650765\n #14 [ffffa65531497ca8] tun_do_read at ffffffffc0b06c27 [tun]\n #15 [ffffa65531497d38] tun_recvmsg at ffffffffc0b06e34 [tun]\n #16 [ffffa65531497d68] handle_rx at ffffffffc0c5d682 [vhost_net]\n #17 [ffffa65531497ed0] vhost_worker at ffffffffc0c644dc [vhost]\n #18 [ffffa65531497f10] kthread at ffffffff892d2e72\n #19 [ffffa65531497f50] ret_from_fork at ffffffff89c0022f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Prevent deadlock while disabling aRFS\n\nWhen disabling aRFS under the `priv-\u003estate_lock`, any scheduled\naRFS works are canceled using the `cancel_work_sync` function,\nwhich waits for the work to end if it has already started.\nHowever, while waiting for the work handler, the handler will\ntry to acquire the `state_lock` which is already acquired.\n\nThe worker acquires the lock to delete the rules if the state\nis down, which is not the worker's responsibility since\ndisabling aRFS deletes the rules.\n\nAdd an aRFS state variable, which indicates whether the aRFS is\nenabled and prevent adding rules when the aRFS is disabled.\n\nKernel log:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.7.0-rc4_net_next_mlx5_5483eb2 #1 Tainted: G          I\n------------------------------------------------------\nethtool/386089 is trying to acquire lock:\nffff88810f21ce68 ((work_completion)(\u0026rule-\u003earfs_work)){+.+.}-{0:0}, at: __flush_work+0x74/0x4e0\n\nbut task is already holding lock:\nffff8884a1808cc0 (\u0026priv-\u003estate_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-\u003e #1 (\u0026priv-\u003estate_lock){+.+.}-{3:3}:\n       __mutex_lock+0x80/0xc90\n       arfs_handle_work+0x4b/0x3b0 [mlx5_core]\n       process_one_work+0x1dc/0x4a0\n       worker_thread+0x1bf/0x3c0\n       kthread+0xd7/0x100\n       ret_from_fork+0x2d/0x50\n       ret_from_fork_asm+0x11/0x20\n\n-\u003e #0 ((work_completion)(\u0026rule-\u003earfs_work)){+.+.}-{0:0}:\n       __lock_acquire+0x17b4/0x2c80\n       lock_acquire+0xd0/0x2b0\n       __flush_work+0x7a/0x4e0\n       __cancel_work_timer+0x131/0x1c0\n       arfs_del_rules+0x143/0x1e0 [mlx5_core]\n       mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n       mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n       ethnl_set_channels+0x28f/0x3b0\n       ethnl_default_set_doit+0xec/0x240\n       genl_family_rcv_msg_doit+0xd0/0x120\n       genl_rcv_msg+0x188/0x2c0\n       netlink_rcv_skb+0x54/0x100\n       genl_rcv+0x24/0x40\n       netlink_unicast+0x1a1/0x270\n       netlink_sendmsg+0x214/0x460\n       __sock_sendmsg+0x38/0x60\n       __sys_sendto+0x113/0x170\n       __x64_sys_sendto+0x20/0x30\n       do_syscall_64+0x40/0xe0\n       entry_SYSCALL_64_after_hwframe+0x46/0x4e\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(\u0026priv-\u003estate_lock);\n                               lock((work_completion)(\u0026rule-\u003earfs_work));\n                               lock(\u0026priv-\u003estate_lock);\n  lock((work_completion)(\u0026rule-\u003earfs_work));\n\n *** DEADLOCK ***\n\n3 locks held by ethtool/386089:\n #0: ffffffff82ea7210 (cb_lock){++++}-{3:3}, at: genl_rcv+0x15/0x40\n #1: ffffffff82e94c88 (rtnl_mutex){+.+.}-{3:3}, at: ethnl_default_set_doit+0xd3/0x240\n #2: ffff8884a1808cc0 (\u0026priv-\u003estate_lock){+.+.}-{3:3}, at: mlx5e_ethtool_set_channels+0x53/0x200 [mlx5_core]\n\nstack backtrace:\nCPU: 15 PID: 386089 Comm: ethtool Tainted: G          I        6.7.0-rc4_net_next_mlx5_5483eb2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x60/0xa0\n check_noncircular+0x144/0x160\n __lock_acquire+0x17b4/0x2c80\n lock_acquire+0xd0/0x2b0\n ? __flush_work+0x74/0x4e0\n ? save_trace+0x3e/0x360\n ? __flush_work+0x74/0x4e0\n __flush_work+0x7a/0x4e0\n ? __flush_work+0x74/0x4e0\n ? __lock_acquire+0xa78/0x2c80\n ? lock_acquire+0xd0/0x2b0\n ? mark_held_locks+0x49/0x70\n __cancel_work_timer+0x131/0x1c0\n ? mark_held_locks+0x49/0x70\n arfs_del_rules+0x143/0x1e0 [mlx5_core]\n mlx5e_arfs_disable+0x1b/0x30 [mlx5_core]\n mlx5e_ethtool_set_channels+0xcb/0x200 [mlx5_core]\n ethnl_set_channels+0x28f/0x3b0\n ethnl_default_set_doit+0xec/0x240\n genl_family_rcv_msg_doit+0xd0/0x120\n genl_rcv_msg+0x188/0x2c0\n ? ethn\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: edia: dvbdev: fix a use-after-free\n\nIn dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed\nin several error-handling paths. However, *pdvbdev is not set to NULL\nafter dvbdev's deallocation, causing use-after-frees in many places,\nfor example, in the following call chain:\n\nbudget_register\n  |-\u003e dvb_dmxdev_init\n        |-\u003e dvb_register_device\n  |-\u003e dvb_dmxdev_release\n        |-\u003e dvb_unregister_device\n              |-\u003e dvb_remove_device\n                    |-\u003e dvb_device_put\n                          |-\u003e kref_put\n\nWhen calling dvb_unregister_device, dmxdev-\u003edvbdev (i.e. *pdvbdev in\ndvb_register_device) could point to memory that had been freed in\ndvb_register_device. Thereafter, this pointer is transferred to\nkref_put and triggering a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27046",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfp: flower: handle acti_netdevs allocation failure\n\nThe kmalloc_array() in nfp_fl_lag_do_work() will return null, if\nthe physical memory has run out. As a result, if we dereference\nthe acti_netdevs, the null pointer dereference bugs will happen.\n\nThis patch adds a check to judge whether allocation failure occurs.\nIf it happens, the delayed work will be rescheduled and try again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27054",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: fix double module refcount decrement\n\nOnce the discipline is associated with the device, deleting the device\ntakes care of decrementing the module's refcount.  Doing it manually on\nthis error path causes refcount to artificially decrease on each error\nwhile it should just stay the same.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: usb-storage: Prevent divide-by-0 error in isd200_ata_command\n\nThe isd200 sub-driver in usb-storage uses the HEADS and SECTORS values\nin the ATA ID information to calculate cylinder and head values when\ncreating a CDB for READ or WRITE commands.  The calculation involves\ndivision and modulus operations, which will cause a crash if either of\nthese values is 0.  While this never happens with a genuine device, it\ncould happen with a flawed or subversive emulation, as reported by the\nsyzbot fuzzer.\n\nProtect against this possibility by refusing to bind to the device if\neither the ATA_ID_HEADS or ATA_ID_SECTORS value in the device's ID\ninformation is 0.  This requires isd200_Initialization() to return a\nnegative error code when initialization fails; currently it always\nreturns 0 (even when there is an error).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau: lock the client object tree.\n\nIt appears the client object tree has no locking unless I've missed\nsomething else. Fix races around adding/removing client objects,\nmostly vram bar mappings.\n\n 4562.099306] general protection fault, probably for non-canonical address 0x6677ed422bceb80c: 0000 [#1] PREEMPT SMP PTI\n[ 4562.099314] CPU: 2 PID: 23171 Comm: deqp-vk Not tainted 6.8.0-rc6+ #27\n[ 4562.099324] Hardware name: Gigabyte Technology Co., Ltd. Z390 I AORUS PRO WIFI/Z390 I AORUS PRO WIFI-CF, BIOS F8 11/05/2021\n[ 4562.099330] RIP: 0010:nvkm_object_search+0x1d/0x70 [nouveau]\n[ 4562.099503] Code: 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 48 89 f8 48 85 f6 74 39 48 8b 87 a0 00 00 00 48 85 c0 74 12 \u003c48\u003e 8b 48 f8 48 39 ce 73 15 48 8b 40 10 48 85 c0 75 ee 48 c7 c0 fe\n[ 4562.099506] RSP: 0000:ffffa94cc420bbf8 EFLAGS: 00010206\n[ 4562.099512] RAX: 6677ed422bceb814 RBX: ffff98108791f400 RCX: ffff9810f26b8f58\n[ 4562.099517] RDX: 0000000000000000 RSI: ffff9810f26b9158 RDI: ffff98108791f400\n[ 4562.099519] RBP: ffff9810f26b9158 R08: 0000000000000000 R09: 0000000000000000\n[ 4562.099521] R10: ffffa94cc420bc48 R11: 0000000000000001 R12: ffff9810f02a7cc0\n[ 4562.099526] R13: 0000000000000000 R14: 00000000000000ff R15: 0000000000000007\n[ 4562.099528] FS:  00007f629c5017c0(0000) GS:ffff98142c700000(0000) knlGS:0000000000000000\n[ 4562.099534] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 4562.099536] CR2: 00007f629a882000 CR3: 000000017019e004 CR4: 00000000003706f0\n[ 4562.099541] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 4562.099542] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 4562.099544] Call Trace:\n[ 4562.099555]  \u003cTASK\u003e\n[ 4562.099573]  ? die_addr+0x36/0x90\n[ 4562.099583]  ? exc_general_protection+0x246/0x4a0\n[ 4562.099593]  ? asm_exc_general_protection+0x26/0x30\n[ 4562.099600]  ? nvkm_object_search+0x1d/0x70 [nouveau]\n[ 4562.099730]  nvkm_ioctl+0xa1/0x250 [nouveau]\n[ 4562.099861]  nvif_object_map_handle+0xc8/0x180 [nouveau]\n[ 4562.099986]  nouveau_ttm_io_mem_reserve+0x122/0x270 [nouveau]\n[ 4562.100156]  ? dma_resv_test_signaled+0x26/0xb0\n[ 4562.100163]  ttm_bo_vm_fault_reserved+0x97/0x3c0 [ttm]\n[ 4562.100182]  ? __mutex_unlock_slowpath+0x2a/0x270\n[ 4562.100189]  nouveau_ttm_fault+0x69/0xb0 [nouveau]\n[ 4562.100356]  __do_fault+0x32/0x150\n[ 4562.100362]  do_fault+0x7c/0x560\n[ 4562.100369]  __handle_mm_fault+0x800/0xc10\n[ 4562.100382]  handle_mm_fault+0x17c/0x3e0\n[ 4562.100388]  do_user_addr_fault+0x208/0x860\n[ 4562.100395]  exc_page_fault+0x7f/0x200\n[ 4562.100402]  asm_exc_page_fault+0x26/0x30\n[ 4562.100412] RIP: 0033:0x9b9870\n[ 4562.100419] Code: 85 a8 f7 ff ff 8b 8d 80 f7 ff ff 89 08 e9 18 f2 ff ff 0f 1f 84 00 00 00 00 00 44 89 32 e9 90 fa ff ff 0f 1f 84 00 00 00 00 00 \u003c44\u003e 89 32 e9 f8 f1 ff ff 0f 1f 84 00 00 00 00 00 66 44 89 32 e9 e7\n[ 4562.100422] RSP: 002b:00007fff9ba2dc70 EFLAGS: 00010246\n[ 4562.100426] RAX: 0000000000000004 RBX: 000000000dd65e10 RCX: 000000fff0000000\n[ 4562.100428] RDX: 00007f629a882000 RSI: 00007f629a882000 RDI: 0000000000000066\n[ 4562.100432] RBP: 00007fff9ba2e570 R08: 0000000000000000 R09: 0000000123ddf000\n[ 4562.100434] R10: 0000000000000001 R11: 0000000000000246 R12: 000000007fffffff\n[ 4562.100436] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n[ 4562.100446]  \u003c/TASK\u003e\n[ 4562.100448] Modules linked in: nf_conntrack_netbios_ns nf_conntrack_broadcast nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables libcrc32c nfnetlink cmac bnep sunrpc iwlmvm intel_rapl_msr intel_rapl_common snd_sof_pci_intel_cnl x86_pkg_temp_thermal intel_powerclamp snd_sof_intel_hda_common mac80211 coretemp snd_soc_acpi_intel_match kvm_intel snd_soc_acpi snd_soc_hdac_hda snd_sof_pci snd_sof_xtensa_dsp snd_sof_intel_hda_mlink \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: usbtv: Remove useless locks in usbtv_video_free()\n\nRemove locks calls in usbtv_video_free() because\nare useless and may led to a deadlock as reported here:\nhttps://syzkaller.appspot.com/x/bisect.txt?x=166dc872180000\nAlso remove usbtv_stop() call since it will be called when\nunregistering the device.\n\nBefore 'c838530d230b' this issue would only be noticed if you\ndisconnect while streaming and now it is noticeable even when\ndisconnecting while not streaming.\n\n\n[hverkuil: fix minor spelling mistake in log message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ttpci: fix two memleaks in budget_av_attach\n\nWhen saa7146_register_device and saa7146_vv_init fails, budget_av_attach\nshould free the resources it allocates, like the error-handling of\nttpci_budget_init does. Besides, there are two fixme comment refers to\nsuch deallocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27074",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: go7007: fix a memleak in go7007_load_encoder\n\nIn go7007_load_encoder, bounce(i.e. go-\u003eboot_fw), is allocated without\na deallocation thereafter. After the following call chain:\n\nsaa7134_go7007_init\n  |-\u003e go7007_boot_encoder\n        |-\u003e go7007_load_encoder\n  |-\u003e kfree(go)\n\ngo is freed and thus bounce is leaked.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27075",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvb-frontends: avoid stack overflow warnings with clang\n\nA previous patch worked around a KASAN issue in stv0367, now a similar\nproblem showed up with clang:\n\ndrivers/media/dvb-frontends/stv0367.c:1222:12: error: stack frame size (3624) exceeds limit (2048) in 'stv0367ter_set_frontend' [-Werror,-Wframe-larger-than]\n 1214 | static int stv0367ter_set_frontend(struct dvb_frontend *fe)\n\nRework the stv0367_writereg() function to be simpler and mark both\nregister access functions as noinline_for_stack so the temporary\ni2c_msg structures do not get duplicated on the stack when KASAN_STACK\nis enabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-tpg: fix some memleaks in tpg_alloc\n\nIn tpg_alloc, resources should be deallocated in each and every\nerror-handling paths, since they are allocated in for statements.\nOtherwise there would be memleaks because tpg_free is called only when\ntpg_alloc return 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27388",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: fix some memleaks in gssx_dec_option_array\n\nThe creds and oa-\u003edata need to be freed in the error-handling paths after\ntheir allocation. So this patch add these deallocations in the\ncorresponding paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27396",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: gtp: Fix Use-After-Free in gtp_dellink\n\nSince call_rcu, which is called in the hlist_for_each_entry_rcu traversal\nof gtp_dellink, is not part of the RCU read critical section, it\nis possible that the RCU grace period will pass during the traversal and\nthe key will be free.\n\nTo prevent this, it should be changed to hlist_for_each_entry_safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27398",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix use-after-free bugs caused by sco_sock_timeout\n\nWhen the sco connection is established and then, the sco socket\nis releasing, timeout_work will be scheduled to judge whether\nthe sco disconnection is timeout. The sock will be deallocated\nlater, but it is dereferenced again in sco_sock_timeout. As a\nresult, the use-after-free bugs will happen. The root cause is\nshown below:\n\n    Cleanup Thread               |      Worker Thread\nsco_sock_release                 |\n  sco_sock_close                 |\n    __sco_sock_close             |\n      sco_sock_set_timer         |\n        schedule_delayed_work    |\n  sco_sock_kill                  |    (wait a time)\n    sock_put(sk) //FREE          |  sco_sock_timeout\n                                 |    sock_hold(sk) //USE\n\nThe KASAN report triggered by POC is shown below:\n\n[   95.890016] ==================================================================\n[   95.890496] BUG: KASAN: slab-use-after-free in sco_sock_timeout+0x5e/0x1c0\n[   95.890755] Write of size 4 at addr ffff88800c388080 by task kworker/0:0/7\n...\n[   95.890755] Workqueue: events sco_sock_timeout\n[   95.890755] Call Trace:\n[   95.890755]  \u003cTASK\u003e\n[   95.890755]  dump_stack_lvl+0x45/0x110\n[   95.890755]  print_address_description+0x78/0x390\n[   95.890755]  print_report+0x11b/0x250\n[   95.890755]  ? __virt_addr_valid+0xbe/0xf0\n[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  kasan_report+0x139/0x170\n[   95.890755]  ? update_load_avg+0xe5/0x9f0\n[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  kasan_check_range+0x2c3/0x2e0\n[   95.890755]  sco_sock_timeout+0x5e/0x1c0\n[   95.890755]  process_one_work+0x561/0xc50\n[   95.890755]  worker_thread+0xab2/0x13c0\n[   95.890755]  ? pr_cont_work+0x490/0x490\n[   95.890755]  kthread+0x279/0x300\n[   95.890755]  ? pr_cont_work+0x490/0x490\n[   95.890755]  ? kthread_blkcg+0xa0/0xa0\n[   95.890755]  ret_from_fork+0x34/0x60\n[   95.890755]  ? kthread_blkcg+0xa0/0xa0\n[   95.890755]  ret_from_fork_asm+0x11/0x20\n[   95.890755]  \u003c/TASK\u003e\n[   95.890755]\n[   95.890755] Allocated by task 506:\n[   95.890755]  kasan_save_track+0x3f/0x70\n[   95.890755]  __kasan_kmalloc+0x86/0x90\n[   95.890755]  __kmalloc+0x17f/0x360\n[   95.890755]  sk_prot_alloc+0xe1/0x1a0\n[   95.890755]  sk_alloc+0x31/0x4e0\n[   95.890755]  bt_sock_alloc+0x2b/0x2a0\n[   95.890755]  sco_sock_create+0xad/0x320\n[   95.890755]  bt_sock_create+0x145/0x320\n[   95.890755]  __sock_create+0x2e1/0x650\n[   95.890755]  __sys_socket+0xd0/0x280\n[   95.890755]  __x64_sys_socket+0x75/0x80\n[   95.890755]  do_syscall_64+0xc4/0x1b0\n[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   95.890755]\n[   95.890755] Freed by task 506:\n[   95.890755]  kasan_save_track+0x3f/0x70\n[   95.890755]  kasan_save_free_info+0x40/0x50\n[   95.890755]  poison_slab_object+0x118/0x180\n[   95.890755]  __kasan_slab_free+0x12/0x30\n[   95.890755]  kfree+0xb2/0x240\n[   95.890755]  __sk_destruct+0x317/0x410\n[   95.890755]  sco_sock_release+0x232/0x280\n[   95.890755]  sock_close+0xb2/0x210\n[   95.890755]  __fput+0x37f/0x770\n[   95.890755]  task_work_run+0x1ae/0x210\n[   95.890755]  get_signal+0xe17/0xf70\n[   95.890755]  arch_do_signal_or_restart+0x3f/0x520\n[   95.890755]  syscall_exit_to_user_mode+0x55/0x120\n[   95.890755]  do_syscall_64+0xd1/0x1b0\n[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f\n[   95.890755]\n[   95.890755] The buggy address belongs to the object at ffff88800c388000\n[   95.890755]  which belongs to the cache kmalloc-1k of size 1024\n[   95.890755] The buggy address is located 128 bytes inside of\n[   95.890755]  freed 1024-byte region [ffff88800c388000, ffff88800c388400)\n[   95.890755]\n[   95.890755] The buggy address belongs to the physical page:\n[   95.890755] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88800c38a800 pfn:0xc388\n[   95.890755] head: order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0\n[   95.890755] ano\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27399",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: l2cap: fix null-ptr-deref in l2cap_chan_timeout\n\nThere is a race condition between l2cap_chan_timeout() and\nl2cap_chan_del(). When we use l2cap_chan_del() to delete the\nchannel, the chan-\u003econn will be set to null. But the conn could\nbe dereferenced again in the mutex_lock() of l2cap_chan_timeout().\nAs a result the null pointer dereference bug will happen. The\nKASAN report triggered by POC is shown below:\n\n[  472.074580] ==================================================================\n[  472.075284] BUG: KASAN: null-ptr-deref in mutex_lock+0x68/0xc0\n[  472.075308] Write of size 8 at addr 0000000000000158 by task kworker/0:0/7\n[  472.075308]\n[  472.075308] CPU: 0 PID: 7 Comm: kworker/0:0 Not tainted 6.9.0-rc5-00356-g78c0094a146b #36\n[  472.075308] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu4\n[  472.075308] Workqueue: events l2cap_chan_timeout\n[  472.075308] Call Trace:\n[  472.075308]  \u003cTASK\u003e\n[  472.075308]  dump_stack_lvl+0x137/0x1a0\n[  472.075308]  print_report+0x101/0x250\n[  472.075308]  ? __virt_addr_valid+0x77/0x160\n[  472.075308]  ? mutex_lock+0x68/0xc0\n[  472.075308]  kasan_report+0x139/0x170\n[  472.075308]  ? mutex_lock+0x68/0xc0\n[  472.075308]  kasan_check_range+0x2c3/0x2e0\n[  472.075308]  mutex_lock+0x68/0xc0\n[  472.075308]  l2cap_chan_timeout+0x181/0x300\n[  472.075308]  process_one_work+0x5d2/0xe00\n[  472.075308]  worker_thread+0xe1d/0x1660\n[  472.075308]  ? pr_cont_work+0x5e0/0x5e0\n[  472.075308]  kthread+0x2b7/0x350\n[  472.075308]  ? pr_cont_work+0x5e0/0x5e0\n[  472.075308]  ? kthread_blkcg+0xd0/0xd0\n[  472.075308]  ret_from_fork+0x4d/0x80\n[  472.075308]  ? kthread_blkcg+0xd0/0xd0\n[  472.075308]  ret_from_fork_asm+0x11/0x20\n[  472.075308]  \u003c/TASK\u003e\n[  472.075308] ==================================================================\n[  472.094860] Disabling lock debugging due to kernel taint\n[  472.096136] BUG: kernel NULL pointer dereference, address: 0000000000000158\n[  472.096136] #PF: supervisor write access in kernel mode\n[  472.096136] #PF: error_code(0x0002) - not-present page\n[  472.096136] PGD 0 P4D 0\n[  472.096136] Oops: 0002 [#1] PREEMPT SMP KASAN NOPTI\n[  472.096136] CPU: 0 PID: 7 Comm: kworker/0:0 Tainted: G    B              6.9.0-rc5-00356-g78c0094a146b #36\n[  472.096136] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu4\n[  472.096136] Workqueue: events l2cap_chan_timeout\n[  472.096136] RIP: 0010:mutex_lock+0x88/0xc0\n[  472.096136] Code: be 08 00 00 00 e8 f8 23 1f fd 4c 89 f7 be 08 00 00 00 e8 eb 23 1f fd 42 80 3c 23 00 74 08 48 88\n[  472.096136] RSP: 0018:ffff88800744fc78 EFLAGS: 00000246\n[  472.096136] RAX: 0000000000000000 RBX: 1ffff11000e89f8f RCX: ffffffff8457c865\n[  472.096136] RDX: 0000000000000001 RSI: 0000000000000008 RDI: ffff88800744fc78\n[  472.096136] RBP: 0000000000000158 R08: ffff88800744fc7f R09: 1ffff11000e89f8f\n[  472.096136] R10: dffffc0000000000 R11: ffffed1000e89f90 R12: dffffc0000000000\n[  472.096136] R13: 0000000000000158 R14: ffff88800744fc78 R15: ffff888007405a00\n[  472.096136] FS:  0000000000000000(0000) GS:ffff88806d200000(0000) knlGS:0000000000000000\n[  472.096136] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  472.096136] CR2: 0000000000000158 CR3: 000000000da32000 CR4: 00000000000006f0\n[  472.096136] Call Trace:\n[  472.096136]  \u003cTASK\u003e\n[  472.096136]  ? __die_body+0x8d/0xe0\n[  472.096136]  ? page_fault_oops+0x6b8/0x9a0\n[  472.096136]  ? kernelmode_fixup_or_oops+0x20c/0x2a0\n[  472.096136]  ? do_user_addr_fault+0x1027/0x1340\n[  472.096136]  ? _printk+0x7a/0xa0\n[  472.096136]  ? mutex_lock+0x68/0xc0\n[  472.096136]  ? add_taint+0x42/0xd0\n[  472.096136]  ? exc_page_fault+0x6a/0x1b0\n[  472.096136]  ? asm_exc_page_fault+0x26/0x30\n[  472.096136]  ? mutex_lock+0x75/0xc0\n[  472.096136]  ? mutex_lock+0x88/0xc0\n[  472.096136]  ? mutex_lock+0x75/0xc0\n[  472.096136]  l2cap_chan_timeo\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27401",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirewire: nosy: ensure user_length is taken into account when fetching packet contents\n\nEnsure that packet_buffer_get respects the user_length provided. If\nthe length of the head packet exceeds the user_length, packet_buffer_get\nwill now return 0 to signify to the user that no data were read\nand a larger buffer size is required. Helps prevent user space overflows.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27410",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: reject iftype change with mesh ID change\n\nIt's currently possible to change the mesh ID when the\ninterface isn't yet in mesh mode, at the same time as\nchanging it into mesh mode. This leads to an overwrite\nof data in the wdev-\u003eu union for the interface type it\ncurrently has, causing cfg80211_change_iface() to do\nwrong things when switching.\n\nWe could probably allow setting an interface to mesh\nwhile setting the mesh ID at the same time by doing a\ndifferent order of operations here, but realistically\nthere's no userspace that's going to do this, so just\ndisallow changes in iftype when setting mesh ID.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27419",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Fix data-races around sysctl_net_busy_read\n\nWe need to protect the reader reading the sysctl value because the\nvalue can be changed concurrently.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27436",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Stop parsing channels bits when all channels are found.\n\nIf a usb audio device sets more bits than the amount of channels\nit could write outside of the map array.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2961",
      "Description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32487",
      "Description": "less through 653 allows OS command execution via a newline character in the name of a file, because quoting is mishandled in filename.c. Exploitation typically requires use with attacker-controlled file names, such as the files extracted from an untrusted archive. Exploitation also requires the LESSOPEN environment variable, but this is set by default in many common cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:less-458-7.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33599",
      "Description": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33600",
      "Description": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33601",
      "Description": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33602",
      "Description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-i18ndata-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glibc-locale-2.22-114.34.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:nscd-2.22-114.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34397",
      "Description": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:glib2-tools-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libgio-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libglib-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libgmodule-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libgobject-2_0-0-2.48.2-12.37.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libgthread-2_0-0-2.48.2-12.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34459",
      "Description": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libxml2-2-2.9.4-46.75.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libxml2-tools-2.9.4-46.75.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35195",
      "Description": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:python-requests-2.24.0-8.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35235",
      "Description": "OpenPrinting CUPS is an open source printing system for Linux and other Unix-like operating systems. In versions 2.4.8 and earlier, when starting the cupsd server with a Listen configuration item pointing to a symbolic link, the cupsd process can be caused to perform an arbitrary chmod of the provided argument, providing world-writable access to the target. Given that cupsd is often running as root, this can result in the change of permission of any user or system files to be world writable. Given the aforementioned Ubuntu AppArmor context, on such systems this vulnerability is limited to those files modifiable by the cupsd process. In that specific case it was found to be possible to turn the configuration of the Listen argument into full control over the cupsd.conf and cups-files.conf configuration files. By later setting the User and Group arguments in cups-files.conf, and printing with a printer configured by PPD with a `FoomaticRIPCommandLine` argument, arbitrary user and group (not root) command execution could be achieved, which can further be used on Ubuntu systems to achieve full root command execution. Commit ff1f8a623e090dee8a8aadf12a6a4b25efac143d contains a patch for the issue.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cups-libs-1.7.5-20.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35247",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: region: add owner module and take its refcount\n\nThe current implementation of the fpga region assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the region\nduring programming if the parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_region\nstruct and use it to take the module's refcount. Modify the functions for\nregistering a region to take an additional owner module parameter and\nrename them to avoid conflicts. Use the old function names for helper\nmacros that automatically set the module that registers the region as the\nowner. This ensures compatibility with existing low-level control modules\nand reduces the chances of registering a region without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: check/clear fast rx for non-4addr sta VLAN changes\n\nWhen moving a station out of a VLAN and deleting the VLAN afterwards, the\nfast_rx entry still holds a pointer to the VLAN's netdev, which can cause\nuse-after-free bugs. Fix this by immediately calling ieee80211_check_fast_rx\nafter the VLAN change.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: Flush pages under kvm-\u003elock to fix UAF in svm_register_enc_region()\n\nDo the cache flush of converted pages in svm_register_enc_region() before\ndropping kvm-\u003elock to fix use-after-free issues where region and/or its\narray of pages could be freed by a different task, e.g. if userspace has\n__unregister_enc_region_locked() already queued up for the region.\n\nNote, the \"obvious\" alternative of using local variables doesn't fully\nresolve the bug, as region-\u003epages is also dynamically allocated.  I.e. the\nregion structure itself would be fine, but region-\u003epages could be freed.\n\nFlushing multiple pages under kvm-\u003elock is unfortunate, but the entire\nflow is a rare slow path, and the manual flush is only needed on CPUs that\nlack coherency for encrypted memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm snapshot: fix lockup in dm_exception_table_exit\n\nThere was reported lockup when we exit a snapshot with many exceptions.\nFix this by adding \"cond_resched\" to the loop that frees the exceptions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35807",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix corruption during on-line resize\n\nWe observed a corruption during on-line resize of a file system that is\nlarger than 16 TiB with 4k block size. With having more then 2^32 blocks\nresize_inode is turned off by default by mke2fs. The issue can be\nreproduced on a smaller file system for convenience by explicitly\nturning off resize_inode. An on-line resize across an 8 GiB boundary (the\nsize of a meta block group in this setup) then leads to a corruption:\n\n  dev=/dev/\u003csome_dev\u003e # should be \u003e= 16 GiB\n  mkdir -p /corruption\n  /sbin/mke2fs -t ext4 -b 4096 -O ^resize_inode $dev $((2 * 2**21 - 2**15))\n  mount -t ext4 $dev /corruption\n\n  dd if=/dev/zero bs=4096 of=/corruption/test count=$((2*2**21 - 4*2**15))\n  sha1sum /corruption/test\n  # 79d2658b39dcfd77274e435b0934028adafaab11  /corruption/test\n\n  /sbin/resize2fs $dev $((2*2**21))\n  # drop page cache to force reload the block from disk\n  echo 1 \u003e /proc/sys/vm/drop_caches\n\n  sha1sum /corruption/test\n  # 3c2abc63cbf1a94c9e6977e0fbd72cd832c4d5c3  /corruption/test\n\n2^21 = 2^15*2^6 equals 8 GiB whereof 2^15 is the number of blocks per\nblock group and 2^6 are the number of block groups that make a meta\nblock group.\n\nThe last checksum might be different depending on how the file is laid\nout across the physical blocks. The actual corruption occurs at physical\nblock 63*2^15 = 2064384 which would be the location of the backup of the\nmeta block group's block descriptor. During the on-line resize the file\nsystem will be converted to meta_bg starting at s_first_meta_bg which is\n2 in the example - meaning all block groups after 16 GiB. However, in\next4_flex_group_add we might add block groups that are not part of the\nfirst meta block group yet. In the reproducer we achieved this by\nsubstracting the size of a whole block group from the point where the\nmeta block group would start. This must be considered when updating the\nbackup block group descriptors to follow the non-meta_bg layout. The fix\nis to add a test whether the group to add is already part of the meta\nblock group or not.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35809",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/PM: Drain runtime-idle callbacks before driver removal\n\nA race condition between the .runtime_idle() callback and the .remove()\ncallback in the rtsx_pcr PCI driver leads to a kernel crash due to an\nunhandled page fault [1].\n\nThe problem is that rtsx_pci_runtime_idle() is not expected to be running\nafter pm_runtime_get_sync() has been called, but the latter doesn't really\nguarantee that.  It only guarantees that the suspend and resume callbacks\nwill not be running when it returns.\n\nHowever, if a .runtime_idle() callback is already running when\npm_runtime_get_sync() is called, the latter will notice that the runtime PM\nstatus of the device is RPM_ACTIVE and it will return right away without\nwaiting for the former to complete.  In fact, it cannot wait for\n.runtime_idle() to complete because it may be called from that callback (it\narguably does not make much sense to do that, but it is not strictly\nprohibited).\n\nThus in general, whoever is providing a .runtime_idle() callback needs\nto protect it from running in parallel with whatever code runs after\npm_runtime_get_sync().  [Note that .runtime_idle() will not start after\npm_runtime_get_sync() has returned, but it may continue running then if it\nhas started earlier.]\n\nOne way to address that race condition is to call pm_runtime_barrier()\nafter pm_runtime_get_sync() (not before it, because a nonzero value of the\nruntime PM usage counter is necessary to prevent runtime PM callbacks from\nbeing invoked) to wait for the .runtime_idle() callback to complete should\nit be running at that point.  A suitable place for doing that is in\npci_device_remove() which calls pm_runtime_get_sync() before removing the\ndriver, so it may as well call pm_runtime_barrier() subsequently, which\nwill prevent the race in question from occurring, not just in the rtsx_pcr\ndriver, but in any PCI drivers providing .runtime_idle() callbacks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: fsl: qbman: Use raw spinlock for cgr_lock\n\nsmp_call_function always runs its callback in hard IRQ context, even on\nPREEMPT_RT, where spinlocks can sleep. So we need to use a raw spinlock\nfor cgr_lock to ensure we aren't waiting on a sleeping task.\n\nAlthough this bug has existed for a while, it was not apparent until\ncommit ef2a8d5478b9 (\"net: dpaa: Adjust queue depth on rate change\")\nwhich invokes smp_call_function_single via qman_update_cgr_safe every\ntime a link goes up or down.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: udc: remove warning when queue disabled ep\n\nIt is possible trigger below warning message from mass storage function,\n\nWARNING: CPU: 6 PID: 3839 at drivers/usb/gadget/udc/core.c:294 usb_ep_queue+0x7c/0x104\npc : usb_ep_queue+0x7c/0x104\nlr : fsg_main_thread+0x494/0x1b3c\n\nRoot cause is mass storage function try to queue request from main thread,\nbut other thread may already disable ep when function disable.\n\nAs there is no function failure in the driver, in order to avoid effort\nto fix warning, change WARN_ON_ONCE() in usb_ep_queue() to pr_debug().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35828",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: libertas: fix some memleaks in lbs_allocate_cmd_buffer()\n\nIn the for statement of lbs_allocate_cmd_buffer(), if the allocation of\ncmdarray[i].cmdbuf fails, both cmdarray and cmdarray[i].cmdbuf needs to\nbe freed. Otherwise, there will be memleaks in lbs_allocate_cmd_buffer().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35830",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: tc358743: register v4l2 async device only after successful setup\n\nEnsure the device has been setup correctly before registering the v4l2\nasync device, thus allowing userspace to access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35835",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: fix a double-free in arfs_create_groups\n\nWhen `in` allocated by kvzalloc fails, arfs_create_groups will free\nft-\u003eg and return an error. However, arfs_create_table, the only caller of\narfs_create_groups, will hold this error and call to\nmlx5e_destroy_flow_table, in which the ft-\u003eg will be freed again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix information leak in btrfs_ioctl_logical_to_ino()\n\nSyzbot reported the following information leak for in\nbtrfs_ioctl_logical_to_ino():\n\n  BUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n  BUG: KMSAN: kernel-infoleak in _copy_to_user+0xbc/0x110 lib/usercopy.c:40\n   instrument_copy_to_user include/linux/instrumented.h:114 [inline]\n   _copy_to_user+0xbc/0x110 lib/usercopy.c:40\n   copy_to_user include/linux/uaccess.h:191 [inline]\n   btrfs_ioctl_logical_to_ino+0x440/0x750 fs/btrfs/ioctl.c:3499\n   btrfs_ioctl+0x714/0x1260\n   vfs_ioctl fs/ioctl.c:51 [inline]\n   __do_sys_ioctl fs/ioctl.c:904 [inline]\n   __se_sys_ioctl+0x261/0x450 fs/ioctl.c:890\n   __x64_sys_ioctl+0x96/0xe0 fs/ioctl.c:890\n   x64_sys_call+0x1883/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:17\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n  Uninit was created at:\n   __kmalloc_large_node+0x231/0x370 mm/slub.c:3921\n   __do_kmalloc_node mm/slub.c:3954 [inline]\n   __kmalloc_node+0xb07/0x1060 mm/slub.c:3973\n   kmalloc_node include/linux/slab.h:648 [inline]\n   kvmalloc_node+0xc0/0x2d0 mm/util.c:634\n   kvmalloc include/linux/slab.h:766 [inline]\n   init_data_container+0x49/0x1e0 fs/btrfs/backref.c:2779\n   btrfs_ioctl_logical_to_ino+0x17c/0x750 fs/btrfs/ioctl.c:3480\n   btrfs_ioctl+0x714/0x1260\n   vfs_ioctl fs/ioctl.c:51 [inline]\n   __do_sys_ioctl fs/ioctl.c:904 [inline]\n   __se_sys_ioctl+0x261/0x450 fs/ioctl.c:890\n   __x64_sys_ioctl+0x96/0xe0 fs/ioctl.c:890\n   x64_sys_call+0x1883/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:17\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n  Bytes 40-65535 of 65536 are uninitialized\n  Memory access of size 65536 starts at ffff888045a40000\n\nThis happens, because we're copying a 'struct btrfs_data_container' back\nto user-space. This btrfs_data_container is allocated in\n'init_data_container()' via kvmalloc(), which does not zero-fill the\nmemory.\n\nFix this by using kvzalloc() which zeroes out the memory on allocation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35862",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_network_name_deleted()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in is_valid_oplock_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35864",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_valid_lease_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_valid_oplock_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_stats_proc_show()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_stats_proc_write()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in smb2_reconnect_server()\n\nThe UAF bug is due to smb2_reconnect_server() accessing a session that\nis already being teared down by another thread that is executing\n__cifs_put_smb_ses().  This can happen when (a) the client has\nconnection to the server but no session or (b) another thread ends up\nsetting @ses-\u003eses_status again to something different than\nSES_EXITING.\n\nTo fix this, we need to make sure to unconditionally set\n@ses-\u003eses_status to SES_EXITING and prevent any other threads from\nsetting a new status while we're still tearing it down.\n\nThe following can be reproduced by adding some delay to right after\nthe ipc is freed in __cifs_put_smb_ses() - which will give\nsmb2_reconnect_server() worker a chance to run and then accessing\n@ses-\u003eipc:\n\nkinit ...\nmount.cifs //srv/share /mnt/1 -o sec=krb5,nohandlecache,echo_interval=10\n[disconnect srv]\nls /mnt/1 \u0026\u003e/dev/null\nsleep 30\nkdestroy\n[reconnect srv]\nsleep 10\numount /mnt/1\n...\nCIFS: VFS: Verify user has a krb5 ticket and keyutils is installed\nCIFS: VFS: \\\\srv Send error in SessSetup = -126\nCIFS: VFS: Verify user has a krb5 ticket and keyutils is installed\nCIFS: VFS: \\\\srv Send error in SessSetup = -126\ngeneral protection fault, probably for non-canonical address\n0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 3 PID: 50 Comm: kworker/3:1 Not tainted 6.9.0-rc2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39\n04/01/2014\nWorkqueue: cifsiod smb2_reconnect_server [cifs]\nRIP: 0010:__list_del_entry_valid_or_report+0x33/0xf0\nCode: 4f 08 48 85 d2 74 42 48 85 c9 74 59 48 b8 00 01 00 00 00 00 ad\nde 48 39 c2 74 61 48 b8 22 01 00 00 00 00 74 69 \u003c48\u003e 8b 01 48 39 f8 75\n7b 48 8b 72 08 48 39 c6 0f 85 88 00 00 00 b8\nRSP: 0018:ffffc900001bfd70 EFLAGS: 00010a83\nRAX: dead000000000122 RBX: ffff88810da53838 RCX: 6b6b6b6b6b6b6b6b\nRDX: 6b6b6b6b6b6b6b6b RSI: ffffffffc02f6878 RDI: ffff88810da53800\nRBP: ffff88810da53800 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: ffff88810c064000\nR13: 0000000000000001 R14: ffff88810c064000 R15: ffff8881039cc000\nFS: 0000000000000000(0000) GS:ffff888157c00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fe3728b1000 CR3: 000000010caa4000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? die_addr+0x36/0x90\n ? exc_general_protection+0x1c1/0x3f0\n ? asm_exc_general_protection+0x26/0x30\n ? __list_del_entry_valid_or_report+0x33/0xf0\n __cifs_put_smb_ses+0x1ae/0x500 [cifs]\n smb2_reconnect_server+0x4ed/0x710 [cifs]\n process_one_work+0x205/0x6b0\n worker_thread+0x191/0x360\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe2/0x110\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35877",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm/pat: fix VM_PAT handling in COW mappings\n\nPAT handling won't do the right thing in COW mappings: the first PTE (or,\nin fact, all PTEs) can be replaced during write faults to point at anon\nfolios.  Reliably recovering the correct PFN and cachemode using\nfollow_phys() from PTEs will not work in COW mappings.\n\nUsing follow_phys(), we might just get the address+protection of the anon\nfolio (which is very wrong), or fail on swap/nonswap entries, failing\nfollow_phys() and triggering a WARN_ON_ONCE() in untrack_pfn() and\ntrack_pfn_copy(), not properly calling free_pfn_range().\n\nIn free_pfn_range(), we either wouldn't call memtype_free() or would call\nit with the wrong range, possibly leaking memory.\n\nTo fix that, let's update follow_phys() to refuse returning anon folios,\nand fallback to using the stored PFN inside vma-\u003evm_pgoff for COW mappings\nif we run into that.\n\nWe will now properly handle untrack_pfn() with COW mappings, where we\ndon't need the cachemode.  We'll have to fail fork()-\u003etrack_pfn_copy() if\nthe first page was replaced by an anon folio, though: we'd have to store\nthe cachemode in the VMA to make this work, likely growing the VMA size.\n\nFor now, lets keep it simple and let track_pfn_copy() just fail in that\ncase: it would have failed in the past with swap/nonswap entries already,\nand it would have done the wrong thing with anon folios.\n\nSimple reproducer to trigger the WARN_ON_ONCE() in untrack_pfn():\n\n\u003c--- C reproducer ---\u003e\n #include \u003cstdio.h\u003e\n #include \u003csys/mman.h\u003e\n #include \u003cunistd.h\u003e\n #include \u003cliburing.h\u003e\n\n int main(void)\n {\n         struct io_uring_params p = {};\n         int ring_fd;\n         size_t size;\n         char *map;\n\n         ring_fd = io_uring_setup(1, \u0026p);\n         if (ring_fd \u003c 0) {\n                 perror(\"io_uring_setup\");\n                 return 1;\n         }\n         size = p.sq_off.array + p.sq_entries * sizeof(unsigned);\n\n         /* Map the submission queue ring MAP_PRIVATE */\n         map = mmap(0, size, PROT_READ | PROT_WRITE, MAP_PRIVATE,\n                    ring_fd, IORING_OFF_SQ_RING);\n         if (map == MAP_FAILED) {\n                 perror(\"mmap\");\n                 return 1;\n         }\n\n         /* We have at least one page. Let's COW it. */\n         *map = 0;\n         pause();\n         return 0;\n }\n\u003c--- C reproducer ---\u003e\n\nOn a system with 16 GiB RAM and swap configured:\n # ./iouring \u0026\n # memhog 16G\n # killall iouring\n[  301.552930] ------------[ cut here ]------------\n[  301.553285] WARNING: CPU: 7 PID: 1402 at arch/x86/mm/pat/memtype.c:1060 untrack_pfn+0xf4/0x100\n[  301.553989] Modules linked in: binfmt_misc nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_g\n[  301.558232] CPU: 7 PID: 1402 Comm: iouring Not tainted 6.7.5-100.fc38.x86_64 #1\n[  301.558772] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebu4\n[  301.559569] RIP: 0010:untrack_pfn+0xf4/0x100\n[  301.559893] Code: 75 c4 eb cf 48 8b 43 10 8b a8 e8 00 00 00 3b 6b 28 74 b8 48 8b 7b 30 e8 ea 1a f7 000\n[  301.561189] RSP: 0018:ffffba2c0377fab8 EFLAGS: 00010282\n[  301.561590] RAX: 00000000ffffffea RBX: ffff9208c8ce9cc0 RCX: 000000010455e047\n[  301.562105] RDX: 07fffffff0eb1e0a RSI: 0000000000000000 RDI: ffff9208c391d200\n[  301.562628] RBP: 0000000000000000 R08: ffffba2c0377fab8 R09: 0000000000000000\n[  301.563145] R10: ffff9208d2292d50 R11: 0000000000000002 R12: 00007fea890e0000\n[  301.563669] R13: 0000000000000000 R14: ffffba2c0377fc08 R15: 0000000000000000\n[  301.564186] FS:  0000000000000000(0000) GS:ffff920c2fbc0000(0000) knlGS:0000000000000000\n[  301.564773] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  301.565197] CR2: 00007fea88ee8a20 CR3: 00000001033a8000 CR4: 0000000000750ef0\n[  301.565725] PKRU: 55555554\n[  301.565944] Call Trace:\n[  301.566148]  \u003cTASK\u003e\n[  301.566325]  ? untrack_pfn+0xf4/0x100\n[  301.566618]  ? __warn+0x81/0x130\n[  301.566876]  ? untrack_pfn+0xf4/0x100\n[  3\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35878",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: module: prevent NULL pointer dereference in vsnprintf()\n\nIn of_modalias(), we can get passed the str and len parameters which would\ncause a kernel oops in vsnprintf() since it only allows passing a NULL ptr\nwhen the length is also 0. Also, we need to filter out the negative values\nof the len parameter as these will result in a really huge buffer since\nsnprintf() takes size_t parameter while ours is ssize_t...\n\nFound by Linux Verification Center (linuxtesting.org) with the Svace static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35886",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix infinite recursion in fib6_dump_done().\n\nsyzkaller reported infinite recursive calls of fib6_dump_done() during\nnetlink socket destruction.  [1]\n\nFrom the log, syzkaller sent an AF_UNSPEC RTM_GETROUTE message, and then\nthe response was generated.  The following recvmmsg() resumed the dump\nfor IPv6, but the first call of inet6_dump_fib() failed at kzalloc() due\nto the fault injection.  [0]\n\n  12:01:34 executing program 3:\n  r0 = socket$nl_route(0x10, 0x3, 0x0)\n  sendmsg$nl_route(r0, ... snip ...)\n  recvmmsg(r0, ... snip ...) (fail_nth: 8)\n\nHere, fib6_dump_done() was set to nlk_sk(sk)-\u003ecb.done, and the next call\nof inet6_dump_fib() set it to nlk_sk(sk)-\u003ecb.args[3].  syzkaller stopped\nreceiving the response halfway through, and finally netlink_sock_destruct()\ncalled nlk_sk(sk)-\u003ecb.done().\n\nfib6_dump_done() calls fib6_dump_end() and nlk_sk(sk)-\u003ecb.done() if it\nis still not NULL.  fib6_dump_end() rewrites nlk_sk(sk)-\u003ecb.done() by\nnlk_sk(sk)-\u003ecb.args[3], but it has the same function, not NULL, calling\nitself recursively and hitting the stack guard page.\n\nTo avoid the issue, let's set the destructor after kzalloc().\n\n[0]:\nFAULT_INJECTION: forcing a failure.\nname failslab, interval 1, probability 0, space 0, times 0\nCPU: 1 PID: 432110 Comm: syz-executor.3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl (lib/dump_stack.c:117)\n should_fail_ex (lib/fault-inject.c:52 lib/fault-inject.c:153)\n should_failslab (mm/slub.c:3733)\n kmalloc_trace (mm/slub.c:3748 mm/slub.c:3827 mm/slub.c:3992)\n inet6_dump_fib (./include/linux/slab.h:628 ./include/linux/slab.h:749 net/ipv6/ip6_fib.c:662)\n rtnl_dump_all (net/core/rtnetlink.c:4029)\n netlink_dump (net/netlink/af_netlink.c:2269)\n netlink_recvmsg (net/netlink/af_netlink.c:1988)\n ____sys_recvmsg (net/socket.c:1046 net/socket.c:2801)\n ___sys_recvmsg (net/socket.c:2846)\n do_recvmmsg (net/socket.c:2943)\n __x64_sys_recvmmsg (net/socket.c:3041 net/socket.c:3034 net/socket.c:3034)\n\n[1]:\nBUG: TASK stack guard page was hit at 00000000f2fa9af1 (stack is 00000000b7912430..000000009a436beb)\nstack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 223719 Comm: kworker/1:3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nWorkqueue: events netlink_sock_destruct_work\nRIP: 0010:fib6_dump_done (net/ipv6/ip6_fib.c:570)\nCode: 3c 24 e8 f3 e9 51 fd e9 28 fd ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 41 57 41 56 41 55 41 54 55 48 89 fd \u003c53\u003e 48 8d 5d 60 e8 b6 4d 07 fd 48 89 da 48 b8 00 00 00 00 00 fc ff\nRSP: 0018:ffffc9000d980000 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: ffffffff84405990 RCX: ffffffff844059d3\nRDX: ffff8881028e0000 RSI: ffffffff84405ac2 RDI: ffff88810c02f358\nRBP: ffff88810c02f358 R08: 0000000000000007 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000224 R12: 0000000000000000\nR13: ffff888007c82c78 R14: ffff888007c82c68 R15: ffff888007c82c68\nFS:  0000000000000000(0000) GS:ffff88811b100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffc9000d97fff8 CR3: 0000000102309002 CR4: 0000000000770ef0\nPKRU: 55555554\nCall Trace:\n \u003c#DF\u003e\n \u003c/#DF\u003e\n \u003cTASK\u003e\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n ...\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))\n netlink_sock_destruct (net/netlink/af_netlink.c:401)\n __sk_destruct (net/core/sock.c:2177 (discriminator 2))\n sk_destruct (net/core/sock.c:2224)\n __sk_free (net/core/sock.c:2235)\n sk_free (net/core/sock.c:2246)\n process_one_work (kernel/workqueue.c:3259)\n worker_thread (kernel/workqueue.c:3329 kernel/workqueue.\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35887",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: fix use-after-free bugs caused by ax25_ds_del_timer\n\nWhen the ax25 device is detaching, the ax25_dev_device_down()\ncalls ax25_ds_del_timer() to cleanup the slave_timer. When\nthe timer handler is running, the ax25_ds_del_timer() that\ncalls del_timer() in it will return directly. As a result,\nthe use-after-free bugs could happen, one of the scenarios\nis shown below:\n\n      (Thread 1)          |      (Thread 2)\n                          | ax25_ds_timeout()\nax25_dev_device_down()    |\n  ax25_ds_del_timer()     |\n    del_timer()           |\n  ax25_dev_put() //FREE   |\n                          |  ax25_dev-\u003e //USE\n\nIn order to mitigate bugs, when the device is detaching, use\ntimer_shutdown_sync() to stop the timer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35896",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: validate user input for expected length\n\nI got multiple syzbot reports showing old bugs exposed\nby BPF after commit 20f2505fb436 (\"bpf: Try to avoid kzalloc\nin cgroup/{s,g}etsockopt\")\n\nsetsockopt() @optlen argument should be taken into account\nbefore copying data.\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in do_replace net/ipv4/netfilter/ip_tables.c:1111 [inline]\n BUG: KASAN: slab-out-of-bounds in do_ipt_set_ctl+0x902/0x3dd0 net/ipv4/netfilter/ip_tables.c:1627\nRead of size 96 at addr ffff88802cd73da0 by task syz-executor.4/7238\n\nCPU: 1 PID: 7238 Comm: syz-executor.4 Not tainted 6.9.0-rc2-next-20240403-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  kasan_check_range+0x282/0x290 mm/kasan/generic.c:189\n  __asan_memcpy+0x29/0x70 mm/kasan/shadow.c:105\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  do_replace net/ipv4/netfilter/ip_tables.c:1111 [inline]\n  do_ipt_set_ctl+0x902/0x3dd0 net/ipv4/netfilter/ip_tables.c:1627\n  nf_setsockopt+0x295/0x2c0 net/netfilter/nf_sockopt.c:101\n  do_sock_setsockopt+0x3af/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x72/0x7a\nRIP: 0033:0x7fd22067dde9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fd21f9ff0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fd2207abf80 RCX: 00007fd22067dde9\nRDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000003\nRBP: 00007fd2206ca47a R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000020000880 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fd2207abf80 R15: 00007ffd2d0170d8\n \u003c/TASK\u003e\n\nAllocated by task 7238:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:370 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:4069 [inline]\n  __kmalloc_noprof+0x200/0x410 mm/slub.c:4082\n  kmalloc_noprof include/linux/slab.h:664 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd47/0x1050 kernel/bpf/cgroup.c:1869\n  do_sock_setsockopt+0x6b4/0x720 net/socket.c:2293\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x72/0x7a\n\nThe buggy address belongs to the object at ffff88802cd73da0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 0 bytes inside of\n allocated 1-byte region [ffff88802cd73da0, ffff88802cd73da1)\n\nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88802cd73020 pfn:0x2cd73\nflags: 0xfff80000000000(node=0|zone=1|lastcpupid=0xfff)\npage_type: 0xffffefff(slab)\nraw: 00fff80000000000 ffff888015041280 dead000000000100 dead000000000122\nraw: ffff88802cd73020 000000008080007f 00000001ffffefff 00\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbmon: prevent division by zero in fb_videomode_from_videomode()\n\nThe expression htotal * vtotal can have a zero value on\noverflow. It is necessary to prevent division by zero like in\nfb_var_to_videomode().\n\nFound by Linux Verification Center (linuxtesting.org) with Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: prevent division by zero in blk_rq_stat_sum()\n\nThe expression dst-\u003enr_samples + src-\u003enr_samples may\nhave zero value on overflow. It is necessary to add\na check to avoid division by zero.\n\nFound by Linux Verification Center (linuxtesting.org) with Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix possible memory leak in lpfc_rcv_padisc()\n\nThe call to lpfc_sli4_resume_rpi() in lpfc_rcv_padisc() may return an\nunsuccessful status.  In such cases, the elsiocb is not issued, the\ncompletion is not called, and thus the elsiocb resource is leaked.\n\nCheck return value after calling lpfc_sli4_resume_rpi() and conditionally\nrelease the elsiocb resource.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vc4: don't check if plane-\u003estate-\u003efb == state-\u003efb\n\nCurrently, when using non-blocking commits, we can see the following\nkernel warning:\n\n[  110.908514] ------------[ cut here ]------------\n[  110.908529] refcount_t: underflow; use-after-free.\n[  110.908620] WARNING: CPU: 0 PID: 1866 at lib/refcount.c:87 refcount_dec_not_one+0xb8/0xc0\n[  110.908664] Modules linked in: rfcomm snd_seq_dummy snd_hrtimer snd_seq snd_seq_device cmac algif_hash aes_arm64 aes_generic algif_skcipher af_alg bnep hid_logitech_hidpp vc4 brcmfmac hci_uart btbcm brcmutil bluetooth snd_soc_hdmi_codec cfg80211 cec drm_display_helper drm_dma_helper drm_kms_helper snd_soc_core snd_compress snd_pcm_dmaengine fb_sys_fops sysimgblt syscopyarea sysfillrect raspberrypi_hwmon ecdh_generic ecc rfkill libaes i2c_bcm2835 binfmt_misc joydev snd_bcm2835(C) bcm2835_codec(C) bcm2835_isp(C) v4l2_mem2mem videobuf2_dma_contig snd_pcm bcm2835_v4l2(C) raspberrypi_gpiomem bcm2835_mmal_vchiq(C) videobuf2_v4l2 snd_timer videobuf2_vmalloc videobuf2_memops videobuf2_common snd videodev vc_sm_cma(C) mc hid_logitech_dj uio_pdrv_genirq uio i2c_dev drm fuse dm_mod drm_panel_orientation_quirks backlight ip_tables x_tables ipv6\n[  110.909086] CPU: 0 PID: 1866 Comm: kodi.bin Tainted: G         C         6.1.66-v8+ #32\n[  110.909104] Hardware name: Raspberry Pi 3 Model B Rev 1.2 (DT)\n[  110.909114] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  110.909132] pc : refcount_dec_not_one+0xb8/0xc0\n[  110.909152] lr : refcount_dec_not_one+0xb4/0xc0\n[  110.909170] sp : ffffffc00913b9c0\n[  110.909177] x29: ffffffc00913b9c0 x28: 000000556969bbb0 x27: 000000556990df60\n[  110.909205] x26: 0000000000000002 x25: 0000000000000004 x24: ffffff8004448480\n[  110.909230] x23: ffffff800570b500 x22: ffffff802e03a7bc x21: ffffffecfca68c78\n[  110.909257] x20: ffffff8002b42000 x19: ffffff802e03a600 x18: 0000000000000000\n[  110.909283] x17: 0000000000000011 x16: ffffffffffffffff x15: 0000000000000004\n[  110.909308] x14: 0000000000000fff x13: ffffffed577e47e0 x12: 0000000000000003\n[  110.909333] x11: 0000000000000000 x10: 0000000000000027 x9 : c912d0d083728c00\n[  110.909359] x8 : c912d0d083728c00 x7 : 65646e75203a745f x6 : 746e756f63666572\n[  110.909384] x5 : ffffffed579f62ee x4 : ffffffed579eb01e x3 : 0000000000000000\n[  110.909409] x2 : 0000000000000000 x1 : ffffffc00913b750 x0 : 0000000000000001\n[  110.909434] Call trace:\n[  110.909441]  refcount_dec_not_one+0xb8/0xc0\n[  110.909461]  vc4_bo_dec_usecnt+0x4c/0x1b0 [vc4]\n[  110.909903]  vc4_cleanup_fb+0x44/0x50 [vc4]\n[  110.910315]  drm_atomic_helper_cleanup_planes+0x88/0xa4 [drm_kms_helper]\n[  110.910669]  vc4_atomic_commit_tail+0x390/0x9dc [vc4]\n[  110.911079]  commit_tail+0xb0/0x164 [drm_kms_helper]\n[  110.911397]  drm_atomic_helper_commit+0x1d0/0x1f0 [drm_kms_helper]\n[  110.911716]  drm_atomic_commit+0xb0/0xdc [drm]\n[  110.912569]  drm_mode_atomic_ioctl+0x348/0x4b8 [drm]\n[  110.913330]  drm_ioctl_kernel+0xec/0x15c [drm]\n[  110.914091]  drm_ioctl+0x24c/0x3b0 [drm]\n[  110.914850]  __arm64_sys_ioctl+0x9c/0xd4\n[  110.914873]  invoke_syscall+0x4c/0x114\n[  110.914897]  el0_svc_common+0xd0/0x118\n[  110.914917]  do_el0_svc+0x38/0xd0\n[  110.914936]  el0_svc+0x30/0x8c\n[  110.914958]  el0t_64_sync_handler+0x84/0xf0\n[  110.914979]  el0t_64_sync+0x18c/0x190\n[  110.914996] ---[ end trace 0000000000000000 ]---\n\nThis happens because, although `prepare_fb` and `cleanup_fb` are\nperfectly balanced, we cannot guarantee consistency in the check\nplane-\u003estate-\u003efb == state-\u003efb. This means that sometimes we can increase\nthe refcount in `prepare_fb` and don't decrease it in `cleanup_fb`. The\nopposite can also be true.\n\nIn fact, the struct drm_plane .state shouldn't be accessed directly\nbut instead, the `drm_atomic_get_new_plane_state()` helper function should\nbe used. So, we could stick to this check, but using\n`drm_atomic_get_new_plane_state()`. But actually, this check is not re\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: send: handle path ref underflow in header iterate_inode_ref()\n\nChange BUG_ON to proper error handling if building the path buffer\nfails. The pointers are not printed so we don't accidentally leak kernel\naddresses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: handle chunk tree lookup error in btrfs_relocate_sys_chunks()\n\nThe unhandled case in btrfs_relocate_sys_chunks() loop is a corruption,\nas it could be caused only by two impossible conditions:\n\n- at first the search key is set up to look for a chunk tree item, with\n  offset -1, this is an inexact search and the key-\u003eoffset will contain\n  the correct offset upon a successful search, a valid chunk tree item\n  cannot have an offset -1\n\n- after first successful search, the found_key corresponds to a chunk\n  item, the offset is decremented by 1 before the next loop, it's\n  impossible to find a chunk item there due to alignment and size\n  constraints",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35944",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nVMCI: Fix memcpy() run-time warning in dg_dispatch_as_host()\n\nSyzkaller hit 'WARNING in dg_dispatch_as_host' bug.\n\nmemcpy: detected field-spanning write (size 56) of single field \"\u0026dg_info-\u003emsg\"\nat drivers/misc/vmw_vmci/vmci_datagram.c:237 (size 24)\n\nWARNING: CPU: 0 PID: 1555 at drivers/misc/vmw_vmci/vmci_datagram.c:237\ndg_dispatch_as_host+0x88e/0xa60 drivers/misc/vmw_vmci/vmci_datagram.c:237\n\nSome code commentry, based on my understanding:\n\n544 #define VMCI_DG_SIZE(_dg) (VMCI_DG_HEADERSIZE + (size_t)(_dg)-\u003epayload_size)\n/// This is 24 + payload_size\n\nmemcpy(\u0026dg_info-\u003emsg, dg, dg_size);\n\tDestination = dg_info-\u003emsg ---\u003e this is a 24 byte\n\t\t\t\t\tstructure(struct vmci_datagram)\n\tSource = dg --\u003e this is a 24 byte structure (struct vmci_datagram)\n\tSize = dg_size = 24 + payload_size\n\n{payload_size = 56-24 =32} -- Syzkaller managed to set payload_size to 32.\n\n 35 struct delayed_datagram_info {\n 36         struct datagram_entry *entry;\n 37         struct work_struct work;\n 38         bool in_dg_host_queue;\n 39         /* msg and msg_payload must be together. */\n 40         struct vmci_datagram msg;\n 41         u8 msg_payload[];\n 42 };\n\nSo those extra bytes of payload are copied into msg_payload[], a run time\nwarning is seen while fuzzing with Syzkaller.\n\nOne possible way to fix the warning is to split the memcpy() into\ntwo parts -- one -- direct assignment of msg and second taking care of payload.\n\nGustavo quoted:\n\"Under FORTIFY_SOURCE we should not copy data across multiple members\nin a structure.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndyndbg: fix old BUG_ON in \u003econtrol parser\n\nFix a BUG_ON from 2009.  Even if it looks \"unreachable\" (I didn't\nreally look), lets make sure by removing it, doing pr_err and return\n-EINVAL instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/client: Fully protect modes[] with dev-\u003emode_config.mutex\n\nThe modes[] array contains pointers to modes on the connectors'\nmode lists, which are protected by dev-\u003emode_config.mutex.\nThus we need to extend modes[] the same protection or by the\ntime we use it the elements may already be pointing to\nfreed/reused memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35955",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE -\u003e\n MODULE_STATE_GOING -\u003e MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module-\u003estate becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module-\u003estate has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35956",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix qgroup prealloc rsv leak in subvolume operations\n\nCreate subvolume, create snapshot and delete subvolume all use\nbtrfs_subvolume_reserve_metadata() to reserve metadata for the changes\ndone to the parent subvolume's fs tree, which cannot be mediated in the\nnormal way via start_transaction. When quota groups (squota or qgroups)\nare enabled, this reserves qgroup metadata of type PREALLOC. Once the\noperation is associated to a transaction, we convert PREALLOC to\nPERTRANS, which gets cleared in bulk at the end of the transaction.\n\nHowever, the error paths of these three operations were not implementing\nthis lifecycle correctly. They unconditionally converted the PREALLOC to\nPERTRANS in a generic cleanup step regardless of errors or whether the\noperation was fully associated to a transaction or not. This resulted in\nerror paths occasionally converting this rsv to PERTRANS without calling\nrecord_root_in_trans successfully, which meant that unless that root got\nrecorded in the transaction by some other thread, the end of the\ntransaction would not free that root's PERTRANS, leaking it. Ultimately,\nthis resulted in hitting a WARN in CONFIG_BTRFS_DEBUG builds at unmount\nfor the leaked reservation.\n\nThe fix is to ensure that every qgroup PREALLOC reservation observes the\nfollowing properties:\n\n1. any failure before record_root_in_trans is called successfully\n   results in freeing the PREALLOC reservation.\n2. after record_root_in_trans, we convert to PERTRANS, and now the\n   transaction owns freeing the reservation.\n\nThis patch enforces those properties on the three operations. Without\nit, generic/269 with squotas enabled at mkfs time would fail in ~5-10\nruns on my system. With this patch, it ran successfully 1000 times in a\nrow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix incorrect descriptor free behavior\n\nENA has two types of TX queues:\n- queues which only process TX packets arriving from the network stack\n- queues which only process TX packets forwarded to it by XDP_REDIRECT\n  or XDP_TX instructions\n\nThe ena_free_tx_bufs() cycles through all descriptors in a TX queue\nand unmaps + frees every descriptor that hasn't been acknowledged yet\nby the device (uncompleted TX transactions).\nThe function assumes that the processed TX queue is necessarily from\nthe first category listed above and ends up using napi_consume_skb()\nfor descriptors belonging to an XDP specific queue.\n\nThis patch solves a bug in which, in case of a VF reset, the\ndescriptors aren't freed correctly, leading to crashes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Properly link new fs rules into the tree\n\nPreviously, add_rule_fg would only add newly created rules from the\nhandle into the tree when they had a refcount of 1. On the other hand,\ncreate_flow_handle tries hard to find and reference already existing\nidentical rules instead of creating new ones.\n\nThese two behaviors can result in a situation where create_flow_handle\n1) creates a new rule and references it, then\n2) in a subsequent step during the same handle creation references it\n   again,\nresulting in a rule with a refcount of 2 that is not linked into the\ntree, will have a NULL parent and root and will result in a crash when\nthe flow group is deleted because del_sw_hw_rule, invoked on rule\ndeletion, assumes node-\u003eparent is != NULL.\n\nThis happened in the wild, due to another bug related to incorrect\nhandling of duplicate pkt_reformat ids, which lead to the code in\ncreate_flow_handle incorrectly referencing a just-added rule in the same\nflow handle, resulting in the problem described above. Full details are\nat [1].\n\nThis patch changes add_rule_fg to add new rules without parents into\nthe tree, properly initializing them and avoiding the crash. This makes\nit more consistent with how rules are added to an FTE in\ncreate_flow_handle.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n\nAlthough ipv6_get_ifaddr walks inet6_addr_lst under the RCU lock, it\nstill means hlist_for_each_entry_rcu can return an item that got removed\nfrom the list. The memory itself of such item is not freed thanks to RCU\nbut nothing guarantees the actual content of the memory is sane.\n\nIn particular, the reference count can be zero. This can happen if\nipv6_del_addr is called in parallel. ipv6_del_addr removes the entry\nfrom inet6_addr_lst (hlist_del_init_rcu(\u0026ifp-\u003eaddr_lst)) and drops all\nreferences (__in6_ifa_put(ifp) + in6_ifa_put(ifp)). With bad enough\ntiming, this can happen:\n\n1. In ipv6_get_ifaddr, hlist_for_each_entry_rcu returns an entry.\n\n2. Then, the whole ipv6_del_addr is executed for the given entry. The\n   reference count drops to zero and kfree_rcu is scheduled.\n\n3. ipv6_get_ifaddr continues and tries to increments the reference count\n   (in6_ifa_hold).\n\n4. The rcu is unlocked and the entry is freed.\n\n5. The freed entry is returned.\n\nPrevent increasing of the reference count in such case. The name\nin6_ifa_hold_safe is chosen to mimic the existing fib6_info_hold_safe.\n\n[   41.506330] refcount_t: addition on 0; use-after-free.\n[   41.506760] WARNING: CPU: 0 PID: 595 at lib/refcount.c:25 refcount_warn_saturate+0xa5/0x130\n[   41.507413] Modules linked in: veth bridge stp llc\n[   41.507821] CPU: 0 PID: 595 Comm: python3 Not tainted 6.9.0-rc2.main-00208-g49563be82afa #14\n[   41.508479] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n[   41.509163] RIP: 0010:refcount_warn_saturate+0xa5/0x130\n[   41.509586] Code: ad ff 90 0f 0b 90 90 c3 cc cc cc cc 80 3d c0 30 ad 01 00 75 a0 c6 05 b7 30 ad 01 01 90 48 c7 c7 38 cc 7a 8c e8 cc 18 ad ff 90 \u003c0f\u003e 0b 90 90 c3 cc cc cc cc 80 3d 98 30 ad 01 00 0f 85 75 ff ff ff\n[   41.510956] RSP: 0018:ffffbda3c026baf0 EFLAGS: 00010282\n[   41.511368] RAX: 0000000000000000 RBX: ffff9e9c46914800 RCX: 0000000000000000\n[   41.511910] RDX: ffff9e9c7ec29c00 RSI: ffff9e9c7ec1c900 RDI: ffff9e9c7ec1c900\n[   41.512445] RBP: ffff9e9c43660c9c R08: 0000000000009ffb R09: 00000000ffffdfff\n[   41.512998] R10: 00000000ffffdfff R11: ffffffff8ca58a40 R12: ffff9e9c4339a000\n[   41.513534] R13: 0000000000000001 R14: ffff9e9c438a0000 R15: ffffbda3c026bb48\n[   41.514086] FS:  00007fbc4cda1740(0000) GS:ffff9e9c7ec00000(0000) knlGS:0000000000000000\n[   41.514726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   41.515176] CR2: 000056233b337d88 CR3: 000000000376e006 CR4: 0000000000370ef0\n[   41.515713] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   41.516252] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   41.516799] Call Trace:\n[   41.517037]  \u003cTASK\u003e\n[   41.517249]  ? __warn+0x7b/0x120\n[   41.517535]  ? refcount_warn_saturate+0xa5/0x130\n[   41.517923]  ? report_bug+0x164/0x190\n[   41.518240]  ? handle_bug+0x3d/0x70\n[   41.518541]  ? exc_invalid_op+0x17/0x70\n[   41.520972]  ? asm_exc_invalid_op+0x1a/0x20\n[   41.521325]  ? refcount_warn_saturate+0xa5/0x130\n[   41.521708]  ipv6_get_ifaddr+0xda/0xe0\n[   41.522035]  inet6_rtm_getaddr+0x342/0x3f0\n[   41.522376]  ? __pfx_inet6_rtm_getaddr+0x10/0x10\n[   41.522758]  rtnetlink_rcv_msg+0x334/0x3d0\n[   41.523102]  ? netlink_unicast+0x30f/0x390\n[   41.523445]  ? __pfx_rtnetlink_rcv_msg+0x10/0x10\n[   41.523832]  netlink_rcv_skb+0x53/0x100\n[   41.524157]  netlink_unicast+0x23b/0x390\n[   41.524484]  netlink_sendmsg+0x1f2/0x440\n[   41.524826]  __sys_sendto+0x1d8/0x1f0\n[   41.525145]  __x64_sys_sendto+0x1f/0x30\n[   41.525467]  do_syscall_64+0xa5/0x1b0\n[   41.525794]  entry_SYSCALL_64_after_hwframe+0x72/0x7a\n[   41.526213] RIP: 0033:0x7fbc4cfcea9a\n[   41.526528] Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c0 75 15 b8 2c 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 7e c3 0f 1f 44 00 00 41 54 48 83 ec 30 44 89\n[   41.527942] RSP: 002b:00007f\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35976",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n\nsyzbot reported an illegal copy in xsk_setsockopt() [1]\n\nMake sure to validate setsockopt() @optlen parameter.\n\n[1]\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in xsk_setsockopt+0x909/0xa40 net/xdp/xsk.c:1420\nRead of size 4 at addr ffff888028c6cde3 by task syz-executor.0/7549\n\nCPU: 0 PID: 7549 Comm: syz-executor.0 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  xsk_setsockopt+0x909/0xa40 net/xdp/xsk.c:1420\n  do_sock_setsockopt+0x3af/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7fb40587de69\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb40665a0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fb4059abf80 RCX: 00007fb40587de69\nRDX: 0000000000000005 RSI: 000000000000011b RDI: 0000000000000006\nRBP: 00007fb4058ca47a R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020001980 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fb4059abf80 R15: 00007fff57ee4d08\n \u003c/TASK\u003e\n\nAllocated by task 7549:\n  kasan_save_stack mm/kasan/common.c:47 [inline]\n  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:370 [inline]\n  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387\n  kasan_kmalloc include/linux/kasan.h:211 [inline]\n  __do_kmalloc_node mm/slub.c:3966 [inline]\n  __kmalloc+0x233/0x4a0 mm/slub.c:3979\n  kmalloc include/linux/slab.h:632 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd2f/0x1040 kernel/bpf/cgroup.c:1869\n  do_sock_setsockopt+0x6b4/0x720 net/socket.c:2293\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfb/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nThe buggy address belongs to the object at ffff888028c6cde0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 1 bytes to the right of\n allocated 2-byte region [ffff888028c6cde0, ffff888028c6cde2)\n\nThe buggy address belongs to the physical page:\npage:ffffea0000a31b00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888028c6c9c0 pfn:0x28c6c\nanon flags: 0xfff00000000800(slab|node=0|zone=1|lastcpupid=0x7ff)\npage_type: 0xffffffff()\nraw: 00fff00000000800 ffff888014c41280 0000000000000000 dead000000000001\nraw: ffff888028c6c9c0 0000000080800057 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 6648, tgid 6644 (syz-executor.0), ts 133906047828, free_ts 133859922223\n  set_page_owner include/linux/page_owner.h:31 [inline]\n  post_alloc_hook+0x1ea/0x210 mm/page_alloc.c:1533\n  prep_new_page mm/page_alloc.c:\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35979",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nraid1: fix use-after-free for original bio in raid1_write_request()\n\nr1_bio-\u003ebios[] is used to record new bios that will be issued to\nunderlying disks, however, in raid1_write_request(), r1_bio-\u003ebios[]\nwill set to the original bio temporarily. Meanwhile, if blocked rdev\nis set, free_r1bio() will be called causing that all r1_bio-\u003ebios[]\nto be freed:\n\nraid1_write_request()\n r1_bio = alloc_r1bio(mddev, bio); -\u003e r1_bio-\u003ebios[] is NULL\n for (i = 0;  i \u003c disks; i++) -\u003e for each rdev in conf\n  // first rdev is normal\n  r1_bio-\u003ebios[0] = bio; -\u003e set to original bio\n  // second rdev is blocked\n  if (test_bit(Blocked, \u0026rdev-\u003eflags))\n   break\n\n if (blocked_rdev)\n  free_r1bio()\n   put_all_bios()\n    bio_put(r1_bio-\u003ebios[0]) -\u003e original bio is freed\n\nTest scripts:\n\nmdadm -CR /dev/md0 -l1 -n4 /dev/sd[abcd] --assume-clean\nfio -filename=/dev/md0 -ioengine=libaio -rw=write -bs=4k -numjobs=1 \\\n    -iodepth=128 -name=test -direct=1\necho blocked \u003e /sys/block/md0/md/rd2/state\n\nTest result:\n\nBUG bio-264 (Not tainted): Object already free\n-----------------------------------------------------------------------------\n\nAllocated in mempool_alloc_slab+0x24/0x50 age=1 cpu=1 pid=869\n kmem_cache_alloc+0x324/0x480\n mempool_alloc_slab+0x24/0x50\n mempool_alloc+0x6e/0x220\n bio_alloc_bioset+0x1af/0x4d0\n blkdev_direct_IO+0x164/0x8a0\n blkdev_write_iter+0x309/0x440\n aio_write+0x139/0x2f0\n io_submit_one+0x5ca/0xb70\n __do_sys_io_submit+0x86/0x270\n __x64_sys_io_submit+0x22/0x30\n do_syscall_64+0xb1/0x210\n entry_SYSCALL_64_after_hwframe+0x6c/0x74\nFreed in mempool_free_slab+0x1f/0x30 age=1 cpu=1 pid=869\n kmem_cache_free+0x28c/0x550\n mempool_free_slab+0x1f/0x30\n mempool_free+0x40/0x100\n bio_free+0x59/0x80\n bio_put+0xf0/0x220\n free_r1bio+0x74/0xb0\n raid1_make_request+0xadf/0x1150\n md_handle_request+0xc7/0x3b0\n md_submit_bio+0x76/0x130\n __submit_bio+0xd8/0x1d0\n submit_bio_noacct_nocheck+0x1eb/0x5c0\n submit_bio_noacct+0x169/0xd40\n submit_bio+0xee/0x1d0\n blkdev_direct_IO+0x322/0x8a0\n blkdev_write_iter+0x309/0x440\n aio_write+0x139/0x2f0\n\nSince that bios for underlying disks are not allocated yet, fix this\nproblem by using mempool_free() directly to free the r1_bio.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: smbus: fix NULL function pointer dereference\n\nBaruch reported an OOPS when using the designware controller as target\nonly. Target-only modes break the assumption of one transfer function\nalways being available. Fix this by always checking the pointer in\n__i2c_transfer.\n\n[wsa: dropped the simplification in core-smbus to avoid theoretical regressions]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent lock-up\n\nThe flag I2C_HID_READ_PENDING is used to serialize I2C operations.\nHowever, this is not necessary, because I2C core already has its own\nlocking for that.\n\nMore importantly, this flag can cause a lock-up: if the flag is set in\ni2c_hid_xfer() and an interrupt happens, the interrupt handler\n(i2c_hid_irq) will check this flag and return immediately without doing\nanything, then the interrupt handler will be invoked again in an\ninfinite loop.\n\nSince interrupt handler is an RT task, it takes over the CPU and the\nflag-clearing task never gets scheduled, thus we have a lock-up.\n\nDelete this unnecessary flag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix lock ordering potential deadlock in cifs_sync_mid_result\n\nCoverity spotted that the cifs_sync_mid_result function could deadlock\n\n\"Thread deadlock (ORDER_REVERSAL) lock_order: Calling spin_lock acquires\nlock TCP_Server_Info.srv_lock while holding lock TCP_Server_Info.mid_lock\"\n\nAddresses-Coverity: 1590401 (\"Thread deadlock (ORDER_REVERSAL)\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/arm/malidp: fix a possible null pointer dereference\n\nIn malidp_mw_connector_reset, new memory is allocated with kzalloc, but\nno check is performed. In order to prevent null pointer dereferencing,\nensure that mw_state is checked before calling\n__drm_atomic_helper_connector_reset.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nppdev: Add an error check in register_device\n\nIn register_device, the return value of ida_simple_get is unchecked,\nin witch ida_simple_get will use an invalid index value.\n\nTo address this issue, index should be checked after ida_simple_get. When\nthe index value is abnormal, a warning message should be printed, the port\nshould be dropped, and the value should be recorded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix possible out-of-bounds in gsm0_receive()\n\nAssuming the following:\n- side A configures the n_gsm in basic option mode\n- side B sends the header of a basic option mode frame with data length 1\n- side A switches to advanced option mode\n- side B sends 2 data bytes which exceeds gsm-\u003elen\n  Reason: gsm-\u003elen is not used in advanced option mode.\n- side A switches to basic option mode\n- side B keeps sending until gsm0_receive() writes past gsm-\u003ebuf\n  Reason: Neither gsm-\u003estate nor gsm-\u003elen have been reset after\n  reconfiguration.\n\nFix this by changing gsm-\u003ecount to gsm-\u003elen comparison from equal to less\nthan. Also add upper limit checks against the constant MAX_MRU in\ngsm0_receive() and gsm1_receive() to harden against memory corruption of\ngsm-\u003elen and gsm-\u003emru.\n\nAll other checks remain as we still need to limit the data according to the\nuser configuration and actual payload size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36017",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: Correct nested IFLA_VF_VLAN_LIST attribute validation\n\nEach attribute inside a nested IFLA_VF_VLAN_LIST is assumed to be a\nstruct ifla_vf_vlan_info so the size of such attribute needs to be at least\nof sizeof(struct ifla_vf_vlan_info) which is 14 bytes.\nThe current size validation in do_setvfinfo is against NLA_HDRLEN (4 bytes)\nwhich is less than sizeof(struct ifla_vf_vlan_info) so this validation\nis not enough and a too small attribute might be cast to a\nstruct ifla_vf_vlan_info, this might result in an out of bands\nread access when accessing the saved (casted) entry in ivvl.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36025",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix off by one in qla_edif_app_getstats()\n\nThe app_reply-\u003eelem[] array is allocated earlier in this function and it\nhas app_req.num_ports elements.  Thus this \u003e comparison needs to be \u003e= to\nprevent memory corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36029",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdhci-msm: pervent access to suspended controller\n\nGeneric sdhci code registers LED device and uses host-\u003eruntime_suspended\nflag to protect access to it. The sdhci-msm driver doesn't set this flag,\nwhich causes a crash when LED is accessed while controller is runtime\nsuspended. Fix this by setting the flag correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36479",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: bridge: add owner module and take its refcount\n\nThe current implementation of the fpga bridge assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the bridge if\nthe parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_bridge\nstruct and use it to take the module's refcount. Modify the function for\nregistering a bridge to take an additional owner module parameter and\nrename it to avoid conflicts. Use the old function name for a helper macro\nthat automatically sets the module that registers the bridge as the owner.\nThis ensures compatibility with existing low-level control modules and\nreduces the chances of registering a bridge without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga bridge.\n\nOther changes: opportunistically move put_device() from __fpga_bridge_get()\nto fpga_bridge_get() and of_fpga_bridge_get() to improve code clarity since\nthe bridge device is taken in these functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36592",
      "Description": "** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: qca: add missing firmware sanity checks\n\nAdd the missing sanity checks when parsing the firmware files before\ndownloading them to avoid accessing and corrupting memory beyond the\nvmalloced buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36894",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_fs: Fix race between aio_cancel() and AIO request complete\n\nFFS based applications can utilize the aio_cancel() callback to dequeue\npending USB requests submitted to the UDC.  There is a scenario where the\nFFS application issues an AIO cancel call, while the UDC is handling a\nsoft disconnect.  For a DWC3 based implementation, the callstack looks\nlike the following:\n\n    DWC3 Gadget                               FFS Application\ndwc3_gadget_soft_disconnect()              ...\n  --\u003e dwc3_stop_active_transfers()\n    --\u003e dwc3_gadget_giveback(-ESHUTDOWN)\n      --\u003e ffs_epfile_async_io_complete()   ffs_aio_cancel()\n        --\u003e usb_ep_free_request()            --\u003e usb_ep_dequeue()\n\nThere is currently no locking implemented between the AIO completion\nhandler and AIO cancel, so the issue occurs if the completion routine is\nrunning in parallel to an AIO cancel call coming from the FFS application.\nAs the completion call frees the USB request (io_data-\u003ereq) the FFS\napplication is also referencing it for the usb_ep_dequeue() call.  This can\nlead to accessing a stale/hanging pointer.\n\ncommit b566d38857fc (\"usb: gadget: f_fs: use io_data-\u003estatus consistently\")\nrelocated the usb_ep_free_request() into ffs_epfile_async_io_complete().\nHowever, in order to properly implement locking to mitigate this issue, the\nspinlock can't be added to ffs_epfile_async_io_complete(), as\nusb_ep_dequeue() (if successfully dequeuing a USB request) will call the\nfunction driver's completion handler in the same context.  Hence, leading\ninto a deadlock.\n\nFix this issue by moving the usb_ep_free_request() back to\nffs_user_copy_worker(), and ensuring that it explicitly sets io_data-\u003ereq\nto NULL after freeing it within the ffs-\u003eeps_lock.  This resolves the race\ncondition above, as the ffs_aio_cancel() routine will not continue\nattempting to dequeue a request that has already been freed, or the\nffs_user_copy_work() not freeing the USB request until the AIO cancel is\ndone referencing it.\n\nThis fix depends on\n  commit b566d38857fc (\"usb: gadget: f_fs: use io_data-\u003estatus\n  consistently\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: llcp: fix nfc_llcp_setsockopt() unsafe copies\n\nsyzbot reported unsafe calls to copy_from_sockptr() [1]\n\nUse copy_safe_from_sockptr() instead.\n\n[1]\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\nRead of size 4 at addr ffff88801caa1ec3 by task syz-executor459/5078\n\nCPU: 0 PID: 5078 Comm: syz-executor459 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\n  do_sock_setsockopt+0x3b1/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfd/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7f7fac07fd89\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff660eb788 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f7fac07fd89\nRDX: 0000000000000000 RSI: 0000000000000118 RDI: 0000000000000004\nRBP: 0000000000000000 R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020000a80 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36917",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix overflow in blk_ioctl_discard()\n\nThere is no check for overflow of 'start + len' in blk_ioctl_discard().\nHung task occurs if submit an discard ioctl with the following param:\n  start = 0x80000000000ff000, len = 0x8000000000fff000;\nAdd the overflow validation now.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bnx2fc: Remove spin_lock_bh while releasing resources after upload\n\nThe session resources are used by FW and driver when session is offloaded,\nonce session is uploaded these resources are not used. The lock is not\nrequired as these fields won't be used any longer. The offload and upload\ncalls are sequential, hence lock is not required.\n\nThis will suppress following BUG_ON():\n\n[  449.843143] ------------[ cut here ]------------\n[  449.848302] kernel BUG at mm/vmalloc.c:2727!\n[  449.853072] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[  449.858712] CPU: 5 PID: 1996 Comm: kworker/u24:2 Not tainted 5.14.0-118.el9.x86_64 #1\nRebooting.\n[  449.867454] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.3.4 11/08/2016\n[  449.876966] Workqueue: fc_rport_eq fc_rport_work [libfc]\n[  449.882910] RIP: 0010:vunmap+0x2e/0x30\n[  449.887098] Code: 00 65 8b 05 14 a2 f0 4a a9 00 ff ff 00 75 1b 55 48 89 fd e8 34 36 79 00 48 85 ed 74 0b 48 89 ef 31 f6 5d e9 14 fc ff ff 5d c3 \u003c0f\u003e 0b 0f 1f 44 00 00 41 57 41 56 49 89 ce 41 55 49 89 fd 41 54 41\n[  449.908054] RSP: 0018:ffffb83d878b3d68 EFLAGS: 00010206\n[  449.913887] RAX: 0000000080000201 RBX: ffff8f4355133550 RCX: 000000000d400005\n[  449.921843] RDX: 0000000000000001 RSI: 0000000000001000 RDI: ffffb83da53f5000\n[  449.929808] RBP: ffff8f4ac6675800 R08: ffffb83d878b3d30 R09: 00000000000efbdf\n[  449.937774] R10: 0000000000000003 R11: ffff8f434573e000 R12: 0000000000001000\n[  449.945736] R13: 0000000000001000 R14: ffffb83da53f5000 R15: ffff8f43d4ea3ae0\n[  449.953701] FS:  0000000000000000(0000) GS:ffff8f529fc80000(0000) knlGS:0000000000000000\n[  449.962732] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  449.969138] CR2: 00007f8cf993e150 CR3: 0000000efbe10003 CR4: 00000000003706e0\n[  449.977102] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  449.985065] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  449.993028] Call Trace:\n[  449.995756]  __iommu_dma_free+0x96/0x100\n[  450.000139]  bnx2fc_free_session_resc+0x67/0x240 [bnx2fc]\n[  450.006171]  bnx2fc_upload_session+0xce/0x100 [bnx2fc]\n[  450.011910]  bnx2fc_rport_event_handler+0x9f/0x240 [bnx2fc]\n[  450.018136]  fc_rport_work+0x103/0x5b0 [libfc]\n[  450.023103]  process_one_work+0x1e8/0x3c0\n[  450.027581]  worker_thread+0x50/0x3b0\n[  450.031669]  ? rescuer_thread+0x370/0x370\n[  450.036143]  kthread+0x149/0x170\n[  450.039744]  ? set_kthread_struct+0x40/0x40\n[  450.044411]  ret_from_fork+0x22/0x30\n[  450.048404] Modules linked in: vfat msdos fat xfs nfs_layout_nfsv41_files rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver dm_service_time qedf qed crc8 bnx2fc libfcoe libfc scsi_transport_fc intel_rapl_msr intel_rapl_common x86_pkg_temp_thermal intel_powerclamp dcdbas rapl intel_cstate intel_uncore mei_me pcspkr mei ipmi_ssif lpc_ich ipmi_si fuse zram ext4 mbcache jbd2 loop nfsv3 nfs_acl nfs lockd grace fscache netfs irdma ice sd_mod t10_pi sg ib_uverbs ib_core 8021q garp mrp stp llc mgag200 i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt mxm_wmi fb_sys_fops cec crct10dif_pclmul ahci crc32_pclmul bnx2x drm ghash_clmulni_intel libahci rfkill i40e libata megaraid_sas mdio wmi sunrpc lrw dm_crypt dm_round_robin dm_multipath dm_snapshot dm_bufio dm_mirror dm_region_hash dm_log dm_zero dm_mod linear raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid6_pq libcrc32c crc32c_intel raid1 raid0 iscsi_ibft squashfs be2iscsi bnx2i cnic uio cxgb4i cxgb4 tls\n[  450.048497]  libcxgbi libcxgb qla4xxx iscsi_boot_sysfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi edd ipmi_devintf ipmi_msghandler\n[  450.159753] ---[ end trace 712de2c57c64abc8 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/9p: fix uninitialized values during inode evict\n\nIf an iget fails due to not being able to retrieve information\nfrom the server then the inode structure is only partially\ninitialized.  When the inode gets evicted, references to\nuninitialized structures (like fscache cookies) were being\nmade.\n\nThis patch checks for a bad_inode before doing anything other\nthan clearing the inode from the cache.  Since the inode is\nbad, it shouldn't have any state associated with it that needs\nto be written back (and there really isn't a way to complete\nthose anyways).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbna: ensure the copied buf is NUL terminated\n\nCurrently, we allocate a nbytes-sized kernel buffer and copy nbytes from\nuserspace to that buffer. Later, we use sscanf on this buffer but we don't\nensure that the string is terminated inside the buffer, this can lead to\nOOB read when using sscanf. Fix this issue by using memdup_user_nul\ninstead of memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, skmsg: Fix NULL pointer dereference in sk_psock_skb_ingress_enqueue\n\nFix NULL pointer data-races in sk_psock_skb_ingress_enqueue() which\nsyzbot reported [1].\n\n[1]\nBUG: KCSAN: data-race in sk_psock_drop / sk_psock_skb_ingress_enqueue\n\nwrite to 0xffff88814b3278b8 of 8 bytes by task 10724 on cpu 1:\n sk_psock_stop_verdict net/core/skmsg.c:1257 [inline]\n sk_psock_drop+0x13e/0x1f0 net/core/skmsg.c:843\n sk_psock_put include/linux/skmsg.h:459 [inline]\n sock_map_close+0x1a7/0x260 net/core/sock_map.c:1648\n unix_release+0x4b/0x80 net/unix/af_unix.c:1048\n __sock_release net/socket.c:659 [inline]\n sock_close+0x68/0x150 net/socket.c:1421\n __fput+0x2c1/0x660 fs/file_table.c:422\n __fput_sync+0x44/0x60 fs/file_table.c:507\n __do_sys_close fs/open.c:1556 [inline]\n __se_sys_close+0x101/0x1b0 fs/open.c:1541\n __x64_sys_close+0x1f/0x30 fs/open.c:1541\n do_syscall_64+0xd3/0x1d0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nread to 0xffff88814b3278b8 of 8 bytes by task 10713 on cpu 0:\n sk_psock_data_ready include/linux/skmsg.h:464 [inline]\n sk_psock_skb_ingress_enqueue+0x32d/0x390 net/core/skmsg.c:555\n sk_psock_skb_ingress_self+0x185/0x1e0 net/core/skmsg.c:606\n sk_psock_verdict_apply net/core/skmsg.c:1008 [inline]\n sk_psock_verdict_recv+0x3e4/0x4a0 net/core/skmsg.c:1202\n unix_read_skb net/unix/af_unix.c:2546 [inline]\n unix_stream_read_skb+0x9e/0xf0 net/unix/af_unix.c:2682\n sk_psock_verdict_data_ready+0x77/0x220 net/core/skmsg.c:1223\n unix_stream_sendmsg+0x527/0x860 net/unix/af_unix.c:2339\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x140/0x180 net/socket.c:745\n ____sys_sendmsg+0x312/0x410 net/socket.c:2584\n ___sys_sendmsg net/socket.c:2638 [inline]\n __sys_sendmsg+0x1e9/0x280 net/socket.c:2667\n __do_sys_sendmsg net/socket.c:2676 [inline]\n __se_sys_sendmsg net/socket.c:2674 [inline]\n __x64_sys_sendmsg+0x46/0x50 net/socket.c:2674\n do_syscall_64+0xd3/0x1d0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nvalue changed: 0xffffffff83d7feb0 -\u003e 0x0000000000000000\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 0 PID: 10713 Comm: syz-executor.4 Tainted: G        W          6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024\n\nPrior to this, commit 4cd12c6065df (\"bpf, sockmap: Fix NULL pointer\ndereference in sk_psock_verdict_data_ready()\") fixed one NULL pointer\nsimilarly due to no protection of saved_data_ready. Here is another\ndifferent caller causing the same issue because of the same reason. So\nwe should protect it with sk_callback_lock read lock because the writer\nside in the sk_psock_drop() uses \"write_lock_bh(\u0026sk-\u003esk_callback_lock);\".\n\nTo avoid errors that could happen in future, I move those two pairs of\nlock into the sk_psock_data_ready(), which is suggested by John Fastabend.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36940",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: core: delete incorrect free in pinctrl_enable()\n\nThe \"pctldev\" struct is allocated in devm_pinctrl_register_and_init().\nIt's a devm_ managed pointer that is freed by devm_pinctrl_dev_release(),\nso freeing it in pinctrl_enable() will lead to a double free.\n\nThe devm_pinctrl_dev_release() function frees the pindescs and destroys\nthe mutex as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36941",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: don't free NULL coalescing rule\n\nIf the parsing fails, we can dereference a NULL pointer here.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36949",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\namd/amdkfd: sync all devices to wait all processes being evicted\n\nIf there are more than one device doing reset in parallel, the first\ndevice will call kfd_suspend_all_processes() to evict all processes\non all devices, this call takes time to finish. other device will\nstart reset and recover without waiting. if the process has not been\nevicted before doing recover, it will be restored, then caused page\nfault.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirewire: ohci: mask bus reset interrupts between ISR and bottom half\n\nIn the FireWire OHCI interrupt handler, if a bus reset interrupt has\noccurred, mask bus reset interrupts until bus_reset_work has serviced and\ncleared the interrupt.\n\nNormally, we always leave bus reset interrupts masked. We infer the bus\nreset from the self-ID interrupt that happens shortly thereafter. A\nscenario where we unmask bus reset interrupts was introduced in 2008 in\na007bb857e0b26f5d8b73c2ff90782d9c0972620: If\nOHCI_PARAM_DEBUG_BUSRESETS (8) is set in the debug parameter bitmask, we\nwill unmask bus reset interrupts so we can log them.\n\nirq_handler logs the bus reset interrupt. However, we can't clear the bus\nreset event flag in irq_handler, because we won't service the event until\nlater. irq_handler exits with the event flag still set. If the\ncorresponding interrupt is still unmasked, the first bus reset will\nusually freeze the system due to irq_handler being called again each\ntime it exits. This freeze can be reproduced by loading firewire_ohci\nwith \"modprobe firewire_ohci debug=-1\" (to enable all debugging output).\nApparently there are also some cases where bus_reset_work will get called\nsoon enough to clear the event, and operation will continue normally.\n\nThis freeze was first reported a few months after a007bb85 was committed,\nbut until now it was never fixed. The debug level could safely be set\nto -1 through sysfs after the module was loaded, but this would be\nineffectual in logging bus reset interrupts since they were only\nunmasked during initialization.\n\nirq_handler will now leave the event flag set but mask bus reset\ninterrupts, so irq_handler won't be called again and there will be no\nfreeze. If OHCI_PARAM_DEBUG_BUSRESETS is enabled, bus_reset_work will\nunmask the interrupt after servicing the event, so future interrupts\nwill be caught as desired.\n\nAs a side effect to this change, OHCI_PARAM_DEBUG_BUSRESETS can now be\nenabled through sysfs in addition to during initial module loading.\nHowever, when enabled through sysfs, logging of bus reset interrupts will\nbe effective only starting with the second bus reset, after\nbus_reset_work has executed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vmwgfx: Fix invalid reads in fence signaled events\n\nCorrectly set the length of the drm_event to the size of the structure\nthat's actually used.\n\nThe length of the drm_event was set to the parent structure instead of\nto the drm_vmw_event_fence which is supposed to be read. drm_read\nuses the length parameter to copy the event to the user space thus\nresuling in oob reads.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/9p: only translate RWX permissions for plain 9P2000\n\nGarbage in plain 9P2000's perm bits is allowed through, which causes it\nto be able to set (among others) the suid bit. This was presumably not\nthe intent since the unix extended bits are handled explicitly and\nconditionally on .u.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfpga: manager: add owner module and take its refcount\n\nThe current implementation of the fpga manager assumes that the low-level\nmodule registers a driver for the parent device and uses its owner pointer\nto take the module's refcount. This approach is problematic since it can\nlead to a null pointer dereference while attempting to get the manager if\nthe parent device does not have a driver.\n\nTo address this problem, add a module owner pointer to the fpga_manager\nstruct and use it to take the module's refcount. Modify the functions for\nregistering the manager to take an additional owner module parameter and\nrename them to avoid conflicts. Use the old function names for helper\nmacros that automatically set the module that registers the manager as the\nowner. This ensures compatibility with existing low-level control modules\nand reduces the chances of registering a manager without setting the owner.\n\nAlso, update the documentation to keep it consistent with the new interface\nfor registering an fpga manager.\n\nOther changes: opportunistically move put_device() from __fpga_mgr_get() to\nfpga_mgr_get() and of_fpga_mgr_get() to improve code clarity since the\nmanager device is taken in these functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37354",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix crash on racing fsync and size-extending write into prealloc\n\nWe have been seeing crashes on duplicate keys in\nbtrfs_set_item_key_safe():\n\n  BTRFS critical (device vdb): slot 4 key (450 108 8192) new key (450 108 8192)\n  ------------[ cut here ]------------\n  kernel BUG at fs/btrfs/ctree.c:2620!\n  invalid opcode: 0000 [#1] PREEMPT SMP PTI\n  CPU: 0 PID: 3139 Comm: xfs_io Kdump: loaded Not tainted 6.9.0 #6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\n  RIP: 0010:btrfs_set_item_key_safe+0x11f/0x290 [btrfs]\n\nWith the following stack trace:\n\n  #0  btrfs_set_item_key_safe (fs/btrfs/ctree.c:2620:4)\n  #1  btrfs_drop_extents (fs/btrfs/file.c:411:4)\n  #2  log_one_extent (fs/btrfs/tree-log.c:4732:9)\n  #3  btrfs_log_changed_extents (fs/btrfs/tree-log.c:4955:9)\n  #4  btrfs_log_inode (fs/btrfs/tree-log.c:6626:9)\n  #5  btrfs_log_inode_parent (fs/btrfs/tree-log.c:7070:8)\n  #6  btrfs_log_dentry_safe (fs/btrfs/tree-log.c:7171:8)\n  #7  btrfs_sync_file (fs/btrfs/file.c:1933:8)\n  #8  vfs_fsync_range (fs/sync.c:188:9)\n  #9  vfs_fsync (fs/sync.c:202:9)\n  #10 do_fsync (fs/sync.c:212:9)\n  #11 __do_sys_fdatasync (fs/sync.c:225:9)\n  #12 __se_sys_fdatasync (fs/sync.c:223:1)\n  #13 __x64_sys_fdatasync (fs/sync.c:223:1)\n  #14 do_syscall_x64 (arch/x86/entry/common.c:52:14)\n  #15 do_syscall_64 (arch/x86/entry/common.c:83:7)\n  #16 entry_SYSCALL_64+0xaf/0x14c (arch/x86/entry/entry_64.S:121)\n\nSo we're logging a changed extent from fsync, which is splitting an\nextent in the log tree. But this split part already exists in the tree,\ntriggering the BUG().\n\nThis is the state of the log tree at the time of the crash, dumped with\ndrgn (https://github.com/osandov/drgn/blob/main/contrib/btrfs_tree.py)\nto get more details than btrfs_print_leaf() gives us:\n\n  \u003e\u003e\u003e print_extent_buffer(prog.crashed_thread().stack_trace()[0][\"eb\"])\n  leaf 33439744 level 0 items 72 generation 9 owner 18446744073709551610\n  leaf 33439744 flags 0x100000000000000\n  fs uuid e5bd3946-400c-4223-8923-190ef1f18677\n  chunk uuid d58cb17e-6d02-494a-829a-18b7d8a399da\n          item 0 key (450 INODE_ITEM 0) itemoff 16123 itemsize 160\n                  generation 7 transid 9 size 8192 nbytes 8473563889606862198\n                  block group 0 mode 100600 links 1 uid 0 gid 0 rdev 0\n                  sequence 204 flags 0x10(PREALLOC)\n                  atime 1716417703.220000000 (2024-05-22 15:41:43)\n                  ctime 1716417704.983333333 (2024-05-22 15:41:44)\n                  mtime 1716417704.983333333 (2024-05-22 15:41:44)\n                  otime 17592186044416.000000000 (559444-03-08 01:40:16)\n          item 1 key (450 INODE_REF 256) itemoff 16110 itemsize 13\n                  index 195 namelen 3 name: 193\n          item 2 key (450 XATTR_ITEM 1640047104) itemoff 16073 itemsize 37\n                  location key (0 UNKNOWN.0 0) type XATTR\n                  transid 7 data_len 1 name_len 6\n                  name: user.a\n                  data a\n          item 3 key (450 EXTENT_DATA 0) itemoff 16020 itemsize 53\n                  generation 9 type 1 (regular)\n                  extent data disk byte 303144960 nr 12288\n                  extent data offset 0 nr 4096 ram 12288\n                  extent compression 0 (none)\n          item 4 key (450 EXTENT_DATA 4096) itemoff 15967 itemsize 53\n                  generation 9 type 2 (prealloc)\n                  prealloc data disk byte 303144960 nr 12288\n                  prealloc data offset 4096 nr 8192\n          item 5 key (450 EXTENT_DATA 8192) itemoff 15914 itemsize 53\n                  generation 9 type 2 (prealloc)\n                  prealloc data disk byte 303144960 nr 12288\n                  prealloc data offset 8192 nr 4096\n  ...\n\nSo the real problem happened earlier: notice that items 4 (4k-12k) and 5\n(8k-12k) overlap. Both are prealloc extents. Item 4 straddles i_size and\nitem 5 starts at i_size.\n\nHere is the state of \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37370",
      "Description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:krb5-1.16.3-46.15.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:krb5-client-1.16.3-46.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-37371",
      "Description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:krb5-1.16.3-46.15.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:krb5-client-1.16.3-46.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38428",
      "Description": "url.c in GNU Wget through 1.24.5 mishandles semicolons in the userinfo subcomponent of a URI, and thus there may be insecure behavior in which data that was supposed to be in the userinfo subcomponent is misinterpreted to be part of the host subcomponent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:wget-1.14-21.19.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38544",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Fix seg fault in rxe_comp_queue_pkt\n\nIn rxe_comp_queue_pkt() an incoming response packet skb is enqueued to the\nresp_pkts queue and then a decision is made whether to run the completer\ntask inline or schedule it. Finally the skb is dereferenced to bump a 'hw'\nperformance counter. This is wrong because if the completer task is\nalready running in a separate thread it may have already processed the skb\nand freed it which can cause a seg fault.  This has been observed\ninfrequently in testing at high scale.\n\nThis patch fixes this by changing the order of enqueuing the packet until\nafter the counter is accessed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38545",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Fix UAF for cq async event\n\nThe refcount of CQ is not protected by locks. When CQ asynchronous\nevents and CQ destruction are concurrent, CQ may have been released,\nwhich will cause UAF.\n\nUse the xa_lock() to protect the CQ refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38546",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: vc4: Fix possible null pointer dereference\n\nIn vc4_hdmi_audio_init() of_get_address() may return\nNULL which is later dereferenced. Fix this bug by adding NULL check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38549",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: Add 0 size check to mtk_drm_gem_obj\n\nAdd a check to mtk_drm_gem_init if we attempt to allocate a GEM object\nof 0 bytes. Currently, no such check exists and the kernel will panic if\na userspace application attempts to allocate a 0x0 GBM buffer.\n\nTested by attempting to allocate a 0x0 GBM buffer on an MT8188 and\nverifying that we now return EINVAL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38552",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix potential index out of bounds in color transformation function\n\nFixes index out of bounds issue in the color transformation function.\nThe issue could occur when the index 'i' exceeds the number of transfer\nfunction points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, an error message is\nlogged and the function returns false to indicate an error.\n\nReported by smatch:\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:405 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.red' 1025 \u003c= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:406 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.green' 1025 \u003c= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:407 cm_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.blue' 1025 \u003c= s32max",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38553",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fec: remove .ndo_poll_controller to avoid deadlocks\n\nThere is a deadlock issue found in sungem driver, please refer to the\ncommit ac0a230f719b (\"eth: sungem: remove .ndo_poll_controller to avoid\ndeadlocks\"). The root cause of the issue is that netpoll is in atomic\ncontext and disable_irq() is called by .ndo_poll_controller interface\nof sungem driver, however, disable_irq() might sleep. After analyzing\nthe implementation of fec_poll_controller(), the fec driver should have\nthe same issue. Due to the fec driver uses NAPI for TX completions, the\n.ndo_poll_controller is unnecessary to be implemented in the fec driver,\nso fec_poll_controller() can be safely removed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38565",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ar5523: enable proper endpoint verification\n\nSyzkaller reports [1] hitting a warning about an endpoint in use\nnot having an expected type to it.\n\nFix the issue by checking for the existence of all proper\nendpoints with their according types intact.\n\nSadly, this patch has not been tested on real hardware.\n\n[1] Syzkaller report:\n------------[ cut here ]------------\nusb 1-1: BOGUS urb xfer, pipe 3 != type 1\nWARNING: CPU: 0 PID: 3643 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n \u003cTASK\u003e\n ar5523_cmd+0x41b/0x780 drivers/net/wireless/ath/ar5523/ar5523.c:275\n ar5523_cmd_read drivers/net/wireless/ath/ar5523/ar5523.c:302 [inline]\n ar5523_host_available drivers/net/wireless/ath/ar5523/ar5523.c:1376 [inline]\n ar5523_probe+0x14b0/0x1d10 drivers/net/wireless/ath/ar5523/ar5523.c:1655\n usb_probe_interface+0x30f/0x7f0 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_set_configuration+0x101d/0x1900 drivers/usb/core/message.c:2170\n usb_generic_driver_probe+0xbe/0x100 drivers/usb/core/generic.c:238\n usb_probe_device+0xd8/0x2c0 drivers/usb/core/driver.c:293\n call_driver_probe drivers/base/dd.c:560 [inline]\n really_probe+0x249/0xb90 drivers/base/dd.c:639\n __driver_probe_device+0x1df/0x4d0 drivers/base/dd.c:778\n driver_probe_device+0x4c/0x1a0 drivers/base/dd.c:808\n __device_attach_driver+0x1d4/0x2e0 drivers/base/dd.c:936\n bus_for_each_drv+0x163/0x1e0 drivers/base/bus.c:427\n __device_attach+0x1e4/0x530 drivers/base/dd.c:1008\n bus_probe_device+0x1e8/0x2a0 drivers/base/bus.c:487\n device_add+0xbd9/0x1e90 drivers/base/core.c:3517\n usb_new_device.cold+0x685/0x10ad drivers/usb/core/hub.c:2573\n hub_port_connect drivers/usb/core/hub.c:5353 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5497 [inline]\n port_event drivers/usb/core/hub.c:5653 [inline]\n hub_event+0x26cb/0x45d0 drivers/usb/core/hub.c:5735\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38567",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: carl9170: add a proper sanity check for endpoints\n\nSyzkaller reports [1] hitting a warning which is caused by presence\nof a wrong endpoint type at the URB sumbitting stage. While there\nwas a check for a specific 4th endpoint, since it can switch types\nbetween bulk and interrupt, other endpoints are trusted implicitly.\nSimilar warning is triggered in a couple of other syzbot issues [2].\n\nFix the issue by doing a comprehensive check of all endpoints\ntaking into account difference between high- and full-speed\nconfiguration.\n\n[1] Syzkaller report:\n...\nWARNING: CPU: 0 PID: 4721 at drivers/usb/core/urb.c:504 usb_submit_urb+0xed6/0x1880 drivers/usb/core/urb.c:504\n...\nCall Trace:\n \u003cTASK\u003e\n carl9170_usb_send_rx_irq_urb+0x273/0x340 drivers/net/wireless/ath/carl9170/usb.c:504\n carl9170_usb_init_device drivers/net/wireless/ath/carl9170/usb.c:939 [inline]\n carl9170_usb_firmware_finish drivers/net/wireless/ath/carl9170/usb.c:999 [inline]\n carl9170_usb_firmware_step2+0x175/0x240 drivers/net/wireless/ath/carl9170/usb.c:1028\n request_firmware_work_func+0x130/0x240 drivers/base/firmware_loader/main.c:1107\n process_one_work+0x9bf/0x1710 kernel/workqueue.c:2289\n worker_thread+0x669/0x1090 kernel/workqueue.c:2436\n kthread+0x2e8/0x3a0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308\n \u003c/TASK\u003e\n\n[2] Related syzkaller crashes:",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38578",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\necryptfs: Fix buffer size for tag 66 packet\n\nThe 'TAG 66 Packet Format' description is missing the cipher code and\nchecksum fields that are packed into the message packet. As a result,\nthe buffer allocated for the packet is 3 bytes too small and\nwrite_tag_66_packet() will write up to 3 bytes past the end of the\nbuffer.\n\nFix this by increasing the size of the allocation so the whole packet\nwill always fit in the buffer.\n\nThis fixes the below kasan slab-out-of-bounds bug:\n\n  BUG: KASAN: slab-out-of-bounds in ecryptfs_generate_key_packet_set+0x7d6/0xde0\n  Write of size 1 at addr ffff88800afbb2a5 by task touch/181\n\n  CPU: 0 PID: 181 Comm: touch Not tainted 6.6.13-gnu #1 4c9534092be820851bb687b82d1f92a426598dc6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2/GNU Guix 04/01/2014\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x4c/0x70\n   print_report+0xc5/0x610\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   ? kasan_complete_mode_report_info+0x44/0x210\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   kasan_report+0xc2/0x110\n   ? ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   __asan_store1+0x62/0x80\n   ecryptfs_generate_key_packet_set+0x7d6/0xde0\n   ? __pfx_ecryptfs_generate_key_packet_set+0x10/0x10\n   ? __alloc_pages+0x2e2/0x540\n   ? __pfx_ovl_open+0x10/0x10 [overlay 30837f11141636a8e1793533a02e6e2e885dad1d]\n   ? dentry_open+0x8f/0xd0\n   ecryptfs_write_metadata+0x30a/0x550\n   ? __pfx_ecryptfs_write_metadata+0x10/0x10\n   ? ecryptfs_get_lower_file+0x6b/0x190\n   ecryptfs_initialize_file+0x77/0x150\n   ecryptfs_create+0x1c2/0x2f0\n   path_openat+0x17cf/0x1ba0\n   ? __pfx_path_openat+0x10/0x10\n   do_filp_open+0x15e/0x290\n   ? __pfx_do_filp_open+0x10/0x10\n   ? __kasan_check_write+0x18/0x30\n   ? _raw_spin_lock+0x86/0xf0\n   ? __pfx__raw_spin_lock+0x10/0x10\n   ? __kasan_check_write+0x18/0x30\n   ? alloc_fd+0xf4/0x330\n   do_sys_openat2+0x122/0x160\n   ? __pfx_do_sys_openat2+0x10/0x10\n   __x64_sys_openat+0xef/0x170\n   ? __pfx___x64_sys_openat+0x10/0x10\n   do_syscall_64+0x60/0xd0\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n  RIP: 0033:0x7f00a703fd67\n  Code: 25 00 00 41 00 3d 00 00 41 00 74 37 64 8b 04 25 18 00 00 00 85 c0 75 5b 44 89 e2 48 89 ee bf 9c ff ff ff b8 01 01 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 0f 87 85 00 00 00 48 83 c4 68 5d 41 5c c3 0f 1f\n  RSP: 002b:00007ffc088e30b0 EFLAGS: 00000246 ORIG_RAX: 0000000000000101\n  RAX: ffffffffffffffda RBX: 00007ffc088e3368 RCX: 00007f00a703fd67\n  RDX: 0000000000000941 RSI: 00007ffc088e48d7 RDI: 00000000ffffff9c\n  RBP: 00007ffc088e48d7 R08: 0000000000000001 R09: 0000000000000000\n  R10: 00000000000001b6 R11: 0000000000000246 R12: 0000000000000941\n  R13: 0000000000000000 R14: 00007ffc088e48d7 R15: 00007f00a7180040\n   \u003c/TASK\u003e\n\n  Allocated by task 181:\n   kasan_save_stack+0x2f/0x60\n   kasan_set_track+0x29/0x40\n   kasan_save_alloc_info+0x25/0x40\n   __kasan_kmalloc+0xc5/0xd0\n   __kmalloc+0x66/0x160\n   ecryptfs_generate_key_packet_set+0x6d2/0xde0\n   ecryptfs_write_metadata+0x30a/0x550\n   ecryptfs_initialize_file+0x77/0x150\n   ecryptfs_create+0x1c2/0x2f0\n   path_openat+0x17cf/0x1ba0\n   do_filp_open+0x15e/0x290\n   do_sys_openat2+0x122/0x160\n   __x64_sys_openat+0xef/0x170\n   do_syscall_64+0x60/0xd0\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38579",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: bcm - Fix pointer arithmetic\n\nIn spu2_dump_omd() value of ptr is increased by ciph_key_len\ninstead of hash_iv_len which could lead to going beyond the\nbuffer boundaries.\nFix this bug by changing ciph_key_len to hash_iv_len.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38580",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nepoll: be better about file lifetimes\n\nepoll can call out to vfs_poll() with a file pointer that may race with\nthe last 'fput()'. That would make f_count go down to zero, and while\nthe ep-\u003emtx locking means that the resulting file pointer tear-down will\nbe blocked until the poll returns, it means that f_count is already\ndead, and any use of it won't actually get a reference to the file any\nmore: it's dead regardless.\n\nMake sure we have a valid ref on the file pointer before we call down to\nvfs_poll() from the epoll routines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38597",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neth: sungem: remove .ndo_poll_controller to avoid deadlocks\n\nErhard reports netpoll warnings from sungem:\n\n  netpoll_send_skb_on_dev(): eth0 enabled interrupts in poll (gem_start_xmit+0x0/0x398)\n  WARNING: CPU: 1 PID: 1 at net/core/netpoll.c:370 netpoll_send_skb+0x1fc/0x20c\n\ngem_poll_controller() disables interrupts, which may sleep.\nWe can't sleep in netpoll, it has interrupts disabled completely.\nStrangely, gem_poll_controller() doesn't even poll the completions,\nand instead acts as if an interrupt has fired so it just schedules\nNAPI and exits. None of this has been necessary for years, since\nnetpoll invokes NAPI directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n \u003cTASK\u003e\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev-\u003eresync_min\n while (j \u003c max_sectors)\n  sectors = raid10_sync_request(mddev, j, \u0026skipped)\n   if (!md_bitmap_start_sync(..., \u0026sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38601",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Fix a race between readers and resize checks\n\nThe reader code in rb_get_reader_page() swaps a new reader page into the\nring buffer by doing cmpxchg on old-\u003elist.prev-\u003enext to point it to the\nnew page. Following that, if the operation is successful,\nold-\u003elist.next-\u003eprev gets updated too. This means the underlying\ndoubly-linked list is temporarily inconsistent, page-\u003eprev-\u003enext or\npage-\u003enext-\u003eprev might not be equal back to page for some page in the\nring buffer.\n\nThe resize operation in ring_buffer_resize() can be invoked in parallel.\nIt calls rb_check_pages() which can detect the described inconsistency\nand stop further tracing:\n\n[  190.271762] ------------[ cut here ]------------\n[  190.271771] WARNING: CPU: 1 PID: 6186 at kernel/trace/ring_buffer.c:1467 rb_check_pages.isra.0+0x6a/0xa0\n[  190.271789] Modules linked in: [...]\n[  190.271991] Unloaded tainted modules: intel_uncore_frequency(E):1 skx_edac(E):1\n[  190.272002] CPU: 1 PID: 6186 Comm: cmd.sh Kdump: loaded Tainted: G            E      6.9.0-rc6-default #5 158d3e1e6d0b091c34c3b96bfd99a1c58306d79f\n[  190.272011] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552c-rebuilt.opensuse.org 04/01/2014\n[  190.272015] RIP: 0010:rb_check_pages.isra.0+0x6a/0xa0\n[  190.272023] Code: [...]\n[  190.272028] RSP: 0018:ffff9c37463abb70 EFLAGS: 00010206\n[  190.272034] RAX: ffff8eba04b6cb80 RBX: 0000000000000007 RCX: ffff8eba01f13d80\n[  190.272038] RDX: ffff8eba01f130c0 RSI: ffff8eba04b6cd00 RDI: ffff8eba0004c700\n[  190.272042] RBP: ffff8eba0004c700 R08: 0000000000010002 R09: 0000000000000000\n[  190.272045] R10: 00000000ffff7f52 R11: ffff8eba7f600000 R12: ffff8eba0004c720\n[  190.272049] R13: ffff8eba00223a00 R14: 0000000000000008 R15: ffff8eba067a8000\n[  190.272053] FS:  00007f1bd64752c0(0000) GS:ffff8eba7f680000(0000) knlGS:0000000000000000\n[  190.272057] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  190.272061] CR2: 00007f1bd6662590 CR3: 000000010291e001 CR4: 0000000000370ef0\n[  190.272070] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  190.272073] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  190.272077] Call Trace:\n[  190.272098]  \u003cTASK\u003e\n[  190.272189]  ring_buffer_resize+0x2ab/0x460\n[  190.272199]  __tracing_resize_ring_buffer.part.0+0x23/0xa0\n[  190.272206]  tracing_resize_ring_buffer+0x65/0x90\n[  190.272216]  tracing_entries_write+0x74/0xc0\n[  190.272225]  vfs_write+0xf5/0x420\n[  190.272248]  ksys_write+0x67/0xe0\n[  190.272256]  do_syscall_64+0x82/0x170\n[  190.272363]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[  190.272373] RIP: 0033:0x7f1bd657d263\n[  190.272381] Code: [...]\n[  190.272385] RSP: 002b:00007ffe72b643f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[  190.272391] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f1bd657d263\n[  190.272395] RDX: 0000000000000002 RSI: 0000555a6eb538e0 RDI: 0000000000000001\n[  190.272398] RBP: 0000555a6eb538e0 R08: 000000000000000a R09: 0000000000000000\n[  190.272401] R10: 0000555a6eb55190 R11: 0000000000000246 R12: 00007f1bd6662500\n[  190.272404] R13: 0000000000000002 R14: 00007f1bd6667c00 R15: 0000000000000002\n[  190.272412]  \u003c/TASK\u003e\n[  190.272414] ---[ end trace 0000000000000000 ]---\n\nNote that ring_buffer_resize() calls rb_check_pages() only if the parent\ntrace_buffer has recording disabled. Recent commit d78ab792705c\n(\"tracing: Stop current tracer when resizing buffer\") causes that it is\nnow always the case which makes it more likely to experience this issue.\n\nThe window to hit this race is nonetheless very small. To help\nreproducing it, one can add a delay loop in rb_get_reader_page():\n\n ret = rb_head_page_replace(reader, cpu_buffer-\u003ereader_page);\n if (!ret)\n \tgoto spin;\n for (unsigned i = 0; i \u003c 1U \u003c\u003c 26; i++)  /* inserted delay loop */\n \t__asm__ __volatile__ (\"\" : : : \"memory\");\n rb_list_head(reader-\u003elist.next)-\u003eprev = \u0026cpu_buffer-\u003ereader_page-\u003elist;\n\n.. \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38608",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix netif state handling\n\nmlx5e_suspend cleans resources only if netif_device_present() returns\ntrue. However, mlx5e_resume changes the state of netif, via\nmlx5e_nic_enable, only if reg_state == NETREG_REGISTERED.\nIn the below case, the above leads to NULL-ptr Oops[1] and memory\nleaks:\n\nmlx5e_probe\n _mlx5e_resume\n  mlx5e_attach_netdev\n   mlx5e_nic_enable  \u003c-- netdev not reg, not calling netif_device_attach()\n  register_netdev \u003c-- failed for some reason.\nERROR_FLOW:\n _mlx5e_suspend \u003c-- netif_device_present return false, resources aren't freed :(\n\nHence, clean resources in this case as well.\n\n[1]\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 0 P4D 0\nOops: 0010 [#1] SMP\nCPU: 2 PID: 9345 Comm: test-ovs-ct-gen Not tainted 6.5.0_for_upstream_min_debug_2023_09_05_16_01 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nRIP: 0010:0x0\nCode: Unable to access opcode bytes at0xffffffffffffffd6.\nRSP: 0018:ffff888178aaf758 EFLAGS: 00010246\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x20/0x60\n ? page_fault_oops+0x14c/0x3c0\n ? exc_page_fault+0x75/0x140\n ? asm_exc_page_fault+0x22/0x30\n notifier_call_chain+0x35/0xb0\n blocking_notifier_call_chain+0x3d/0x60\n mlx5_blocking_notifier_call_chain+0x22/0x30 [mlx5_core]\n mlx5_core_uplink_netdev_event_replay+0x3e/0x60 [mlx5_core]\n mlx5_mdev_netdev_track+0x53/0x60 [mlx5_ib]\n mlx5_ib_roce_init+0xc3/0x340 [mlx5_ib]\n __mlx5_ib_add+0x34/0xd0 [mlx5_ib]\n mlx5r_probe+0xe1/0x210 [mlx5_ib]\n ? auxiliary_match_id+0x6a/0x90\n auxiliary_bus_probe+0x38/0x80\n ? driver_sysfs_add+0x51/0x80\n really_probe+0xc9/0x3e0\n ? driver_probe_device+0x90/0x90\n __driver_probe_device+0x80/0x160\n driver_probe_device+0x1e/0x90\n __device_attach_driver+0x7d/0x100\n bus_for_each_drv+0x80/0xd0\n __device_attach+0xbc/0x1f0\n bus_probe_device+0x86/0xa0\n device_add+0x637/0x840\n __auxiliary_device_add+0x3b/0xa0\n add_adev+0xc9/0x140 [mlx5_core]\n mlx5_rescan_drivers_locked+0x22a/0x310 [mlx5_core]\n mlx5_register_device+0x53/0xa0 [mlx5_core]\n mlx5_init_one_devl_locked+0x5c4/0x9c0 [mlx5_core]\n mlx5_init_one+0x3b/0x60 [mlx5_core]\n probe_one+0x44c/0x730 [mlx5_core]\n local_pci_probe+0x3e/0x90\n pci_device_probe+0xbf/0x210\n ? kernfs_create_link+0x5d/0xa0\n ? sysfs_do_create_link_sd+0x60/0xc0\n really_probe+0xc9/0x3e0\n ? driver_probe_device+0x90/0x90\n __driver_probe_device+0x80/0x160\n driver_probe_device+0x1e/0x90\n __device_attach_driver+0x7d/0x100\n bus_for_each_drv+0x80/0xd0\n __device_attach+0xbc/0x1f0\n pci_bus_add_device+0x54/0x80\n pci_iov_add_virtfn+0x2e6/0x320\n sriov_enable+0x208/0x420\n mlx5_core_sriov_configure+0x9e/0x200 [mlx5_core]\n sriov_numvfs_store+0xae/0x1a0\n kernfs_fop_write_iter+0x10c/0x1a0\n vfs_write+0x291/0x3c0\n ksys_write+0x5f/0xe0\n do_syscall_64+0x3d/0x90\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n CR2: 0000000000000000\n ---[ end trace 0000000000000000  ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38618",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: timer: Set lower bound of start tick time\n\nCurrently ALSA timer doesn't have the lower limit of the start tick\ntime, and it allows a very small size, e.g. 1 tick with 1ns resolution\nfor hrtimer.  Such a situation may lead to an unexpected RCU stall,\nwhere  the callback repeatedly queuing the expire update, as reported\nby fuzzer.\n\nThis patch introduces a sanity check of the timer start tick time, so\nthat the system returns an error when a too small start size is set.\nAs of this patch, the lower limit is hard-coded to 100us, which is\nsmall enough but can still work somehow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38619",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb-storage: alauda: Check whether the media is initialized\n\nThe member \"uzonesize\" of struct alauda_info will remain 0\nif alauda_init_media() fails, potentially causing divide errors\nin alauda_read_data() and alauda_write_lba().\n- Add a member \"media_initialized\" to struct alauda_info.\n- Change a condition in alauda_check_media() to ensure the\n  first initialization.\n- Add an error check for the return value of alauda_init_media().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38621",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: stk1160: fix bounds checking in stk1160_copy_video()\n\nThe subtract in this condition is reversed.  The -\u003elength is the length\nof the buffer.  The -\u003ebytesused is how many bytes we have copied thus\nfar.  When the condition is reversed that means the result of the\nsubtraction is always negative but since it's unsigned then the result\nis a very high positive value.  That means the overflow check is never\ntrue.\n\nAdditionally, the -\u003ebytesused doesn't actually work for this purpose\nbecause we're not writing to \"buf-\u003emem + buf-\u003ebytesused\".  Instead, the\nmath to calculate the destination where we are writing is a bit\ninvolved.  You calculate the number of full lines already written,\nmultiply by two, skip a line if necessary so that we start on an odd\nnumbered line, and add the offset into the line.\n\nTo fix this buffer overflow, just take the actual destination where we\nare writing, if the offset is already out of bounds print an error and\nreturn.  Otherwise, write up to buf-\u003elength bytes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38627",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nstm class: Fix a double free in stm_register_device()\n\nThe put_device(\u0026stm-\u003edev) call will trigger stm_device_release() which\nfrees \"stm\" so the vfree(stm) on the next line is a double free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38659",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nenic: Validate length of nl attributes in enic_set_vf_port\n\nenic_set_vf_port assumes that the nl attribute IFLA_PORT_PROFILE\nis of length PORT_PROFILE_MAX and that the nl attributes\nIFLA_PORT_INSTANCE_UUID, IFLA_PORT_HOST_UUID are of length PORT_UUID_MAX.\nThese attributes are validated (in the function do_setlink in rtnetlink.c)\nusing the nla_policy ifla_port_policy. The policy defines IFLA_PORT_PROFILE\nas NLA_STRING, IFLA_PORT_INSTANCE_UUID as NLA_BINARY and\nIFLA_PORT_HOST_UUID as NLA_STRING. That means that the length validation\nusing the policy is for the max size of the attributes and not on exact\nsize so the length of these attributes might be less than the sizes that\nenic_set_vf_port expects. This might cause an out of bands\nread access in the memcpys of the data of these\nattributes in enic_set_vf_port.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38661",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/ap: Fix crash in AP internal function modify_bitmap()\n\nA system crash like this\n\n  Failing address: 200000cb7df6f000 TEID: 200000cb7df6f403\n  Fault in home space mode while using kernel ASCE.\n  AS:00000002d71bc007 R3:00000003fe5b8007 S:000000011a446000 P:000000015660c13d\n  Oops: 0038 ilc:3 [#1] PREEMPT SMP\n  Modules linked in: mlx5_ib ...\n  CPU: 8 PID: 7556 Comm: bash Not tainted 6.9.0-rc7 #8\n  Hardware name: IBM 3931 A01 704 (LPAR)\n  Krnl PSW : 0704e00180000000 0000014b75e7b606 (ap_parse_bitmap_str+0x10e/0x1f8)\n  R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3\n  Krnl GPRS: 0000000000000001 ffffffffffffffc0 0000000000000001 00000048f96b75d3\n  000000cb00000100 ffffffffffffffff ffffffffffffffff 000000cb7df6fce0\n  000000cb7df6fce0 00000000ffffffff 000000000000002b 00000048ffffffff\n  000003ff9b2dbc80 200000cb7df6fcd8 0000014bffffffc0 000000cb7df6fbc8\n  Krnl Code: 0000014b75e7b5fc: a7840047            brc     8,0000014b75e7b68a\n  0000014b75e7b600: 18b2                lr      %r11,%r2\n  #0000014b75e7b602: a7f4000a            brc     15,0000014b75e7b616\n  \u003e0000014b75e7b606: eb22d00000e6        laog    %r2,%r2,0(%r13)\n  0000014b75e7b60c: a7680001            lhi     %r6,1\n  0000014b75e7b610: 187b                lr      %r7,%r11\n  0000014b75e7b612: 84960021            brxh    %r9,%r6,0000014b75e7b654\n  0000014b75e7b616: 18e9                lr      %r14,%r9\n  Call Trace:\n  [\u003c0000014b75e7b606\u003e] ap_parse_bitmap_str+0x10e/0x1f8\n  ([\u003c0000014b75e7b5dc\u003e] ap_parse_bitmap_str+0xe4/0x1f8)\n  [\u003c0000014b75e7b758\u003e] apmask_store+0x68/0x140\n  [\u003c0000014b75679196\u003e] kernfs_fop_write_iter+0x14e/0x1e8\n  [\u003c0000014b75598524\u003e] vfs_write+0x1b4/0x448\n  [\u003c0000014b7559894c\u003e] ksys_write+0x74/0x100\n  [\u003c0000014b7618a440\u003e] __do_syscall+0x268/0x328\n  [\u003c0000014b761a3558\u003e] system_call+0x70/0x98\n  INFO: lockdep is turned off.\n  Last Breaking-Event-Address:\n  [\u003c0000014b75e7b636\u003e] ap_parse_bitmap_str+0x13e/0x1f8\n  Kernel panic - not syncing: Fatal exception: panic_on_oops\n\noccured when /sys/bus/ap/a[pq]mask was updated with a relative mask value\n(like +0x10-0x12,+60,-90) with one of the numeric values exceeding INT_MAX.\n\nThe fix is simple: use unsigned long values for the internal variables. The\ncorrect checks are already in place in the function but a simple int for\nthe internal variables was used with the possibility to overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38780",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf/sw-sync: don't enable IRQ from sync_print_obj()\n\nSince commit a6aa8fca4d79 (\"dma-buf/sw-sync: Reduce irqsave/irqrestore from\nknown context\") by error replaced spin_unlock_irqrestore() with\nspin_unlock_irq() for both sync_debugfs_show() and sync_print_obj() despite\nsync_print_obj() is called from sync_debugfs_show(), lockdep complains\ninconsistent lock state warning.\n\nUse plain spin_{lock,unlock}() for sync_print_obj(), for\nsync_debugfs_show() is already using spin_{lock,unlock}_irq().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39301",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/9p: fix uninit-value in p9_client_rpc()\n\nSyzbot with the help of KMSAN reported the following error:\n\nBUG: KMSAN: uninit-value in trace_9p_client_res include/trace/events/9p.h:146 [inline]\nBUG: KMSAN: uninit-value in p9_client_rpc+0x1314/0x1340 net/9p/client.c:754\n trace_9p_client_res include/trace/events/9p.h:146 [inline]\n p9_client_rpc+0x1314/0x1340 net/9p/client.c:754\n p9_client_create+0x1551/0x1ff0 net/9p/client.c:1031\n v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c:410\n v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c:122\n legacy_get_tree+0x114/0x290 fs/fs_context.c:662\n vfs_get_tree+0xa7/0x570 fs/super.c:1797\n do_new_mount+0x71f/0x15e0 fs/namespace.c:3352\n path_mount+0x742/0x1f20 fs/namespace.c:3679\n do_mount fs/namespace.c:3692 [inline]\n __do_sys_mount fs/namespace.c:3898 [inline]\n __se_sys_mount+0x725/0x810 fs/namespace.c:3875\n __x64_sys_mount+0xe4/0x150 fs/namespace.c:3875\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nUninit was created at:\n __alloc_pages+0x9d6/0xe70 mm/page_alloc.c:4598\n __alloc_pages_node include/linux/gfp.h:238 [inline]\n alloc_pages_node include/linux/gfp.h:261 [inline]\n alloc_slab_page mm/slub.c:2175 [inline]\n allocate_slab mm/slub.c:2338 [inline]\n new_slab+0x2de/0x1400 mm/slub.c:2391\n ___slab_alloc+0x1184/0x33d0 mm/slub.c:3525\n __slab_alloc mm/slub.c:3610 [inline]\n __slab_alloc_node mm/slub.c:3663 [inline]\n slab_alloc_node mm/slub.c:3835 [inline]\n kmem_cache_alloc+0x6d3/0xbe0 mm/slub.c:3852\n p9_tag_alloc net/9p/client.c:278 [inline]\n p9_client_prepare_req+0x20a/0x1770 net/9p/client.c:641\n p9_client_rpc+0x27e/0x1340 net/9p/client.c:688\n p9_client_create+0x1551/0x1ff0 net/9p/client.c:1031\n v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c:410\n v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c:122\n legacy_get_tree+0x114/0x290 fs/fs_context.c:662\n vfs_get_tree+0xa7/0x570 fs/super.c:1797\n do_new_mount+0x71f/0x15e0 fs/namespace.c:3352\n path_mount+0x742/0x1f20 fs/namespace.c:3679\n do_mount fs/namespace.c:3692 [inline]\n __do_sys_mount fs/namespace.c:3898 [inline]\n __se_sys_mount+0x725/0x810 fs/namespace.c:3875\n __x64_sys_mount+0xe4/0x150 fs/namespace.c:3875\n do_syscall_64+0xd5/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\n\nIf p9_check_errors() fails early in p9_client_rpc(), req-\u003erc.tag\nwill not be properly initialized. However, trace_9p_client_res()\nends up trying to print it out anyway before p9_client_rpc()\nfinishes.\n\nFix this issue by assigning default values to p9_fcall fields\nsuch as 'tag' and (just in case KMSAN unearths something new) 'id'\nduring the tag allocation stage.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39475",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: savage: Handle err return when savagefb_check_var failed\n\nThe commit 04e5eac8f3ab(\"fbdev: savage: Error out if pixclock equals zero\")\nchecks the value of pixclock to avoid divide-by-zero error. However\nthe function savagefb_probe doesn't handle the error return of\nsavagefb_check_var. When pixclock is 0, it will cause divide-by-zero error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:cluster-md-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:dlm-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:gfs2-kmp-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:kernel-default-4.12.14-122.222.1",
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:ocfs2-kmp-default-4.12.14-122.222.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-4032",
      "Description": "The \"ipaddress\" module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \"globally reachable\" or \"private\". This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn't be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-4741",
      "Description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-12-sp5-sap-v20240727-x86-64:libopenssl1_1-1.1.1d-2.107.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}