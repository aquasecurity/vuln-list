{
  "Title": "Security update for the Linux Kernel RT (Live Patch 16 for SLE 15 SP5)",
  "Tracking": {
    "ID": "SUSE-SU-2024:2411-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2024-07-11T12:03:53Z",
    "CurrentReleaseDate": "2024-07-11T12:03:53Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2024-07-11T12:03:53Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for the Linux Kernel RT (Live Patch 16 for SLE 15 SP5)",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for the Linux Kernel 5.15.21-150500_13_58 fixes one issue.\n\nThe following security issue was fixed:\n\n- CVE-2024-26923: Fixed false-positive lockdep splat for spin_lock() in __unix_gc() (bsc#1223683).\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-2024-2411,SUSE-SLE-Module-Live-Patching-15-SP5-2024-2411",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "kernel-livepatch-5_14_21-150500_13_58-rt-2-150500.11.6.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Live Patching 15 SP5",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2024/suse-su-20242411-1/",
      "Description": "Link for SUSE-SU-2024:2411-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2024-July/018925.html",
      "Description": "E-Mail link for SUSE-SU-2024:2411-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1223683",
      "Description": "SUSE Bug 1223683"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-26923/",
      "Description": "SUSE CVE CVE-2024-26923 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2024-26923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix garbage collector racing against connect()\n\nGarbage collector does not take into account the risk of embryo getting\nenqueued during the garbage collection. If such embryo has a peer that\ncarries SCM_RIGHTS, two consecutive passes of scan_children() may see a\ndifferent set of children. Leading to an incorrectly elevated inflight\ncount, and then a dangling pointer within the gc_inflight_list.\n\nsockets are AF_UNIX/SOCK_STREAM\nS is an unconnected socket\nL is a listening in-flight socket bound to addr, not in fdtable\nV's fd will be passed via sendmsg(), gets inflight count bumped\n\nconnect(S, addr)\tsendmsg(S, [V]); close(V)\t__unix_gc()\n----------------\t-------------------------\t-----------\n\nNS = unix_create1()\nskb1 = sock_wmalloc(NS)\nL = unix_find_other(addr)\nunix_state_lock(L)\nunix_peer(S) = NS\n\t\t\t// V count=1 inflight=0\n\n \t\t\tNS = unix_peer(S)\n \t\t\tskb2 = sock_alloc()\n\t\t\tskb_queue_tail(NS, skb2[V])\n\n\t\t\t// V became in-flight\n\t\t\t// V count=2 inflight=1\n\n\t\t\tclose(V)\n\n\t\t\t// V count=1 inflight=1\n\t\t\t// GC candidate condition met\n\n\t\t\t\t\t\tfor u in gc_inflight_list:\n\t\t\t\t\t\t  if (total_refs == inflight_refs)\n\t\t\t\t\t\t    add u to gc_candidates\n\n\t\t\t\t\t\t// gc_candidates={L, V}\n\n\t\t\t\t\t\tfor u in gc_candidates:\n\t\t\t\t\t\t  scan_children(u, dec_inflight)\n\n\t\t\t\t\t\t// embryo (skb1) was not\n\t\t\t\t\t\t// reachable from L yet, so V's\n\t\t\t\t\t\t// inflight remains unchanged\n__skb_queue_tail(L, skb1)\nunix_state_unlock(L)\n\t\t\t\t\t\tfor u in gc_candidates:\n\t\t\t\t\t\t  if (u.inflight)\n\t\t\t\t\t\t    scan_children(u, inc_inflight_move_tail)\n\n\t\t\t\t\t\t// V count=1 inflight=2 (!)\n\nIf there is a GC-candidate listening socket, lock/unlock its state. This\nmakes GC wait until the end of any ongoing connect() to that socket. After\nflipping the lock, a possibly SCM-laden embryo is already enqueued. And if\nthere is another embryo coming, it can not possibly carry SCM_RIGHTS. At\nthis point, unix_inflight() can not happen because unix_gc_lock is already\ntaken. Inflight graph remains unaffected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-26923.html",
          "Description": "CVE-2024-26923"
        },
        {
          "URL": "https://bugzilla.suse.com/1223384",
          "Description": "SUSE Bug 1223384"
        },
        {
          "URL": "https://bugzilla.suse.com/1223683",
          "Description": "SUSE Bug 1223683"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Live Patching 15 SP5:kernel-livepatch-5_14_21-150500_13_58-rt-2-150500.11.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}