{
  "Title": "SUSE-IU-2024:529-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2024:529-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2024-06-12T01:00:00Z",
    "CurrentReleaseDate": "2024-06-12T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-02-10T01:02:07Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2024:529-1 / google/sles-15-sp4-chost-byos-v20240612-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-15-sp4-chost-byos-v20240612-x86-64 contains the following changes:\nPackage aaa_base was updated:\n\n- modify git-47-04210f8df15da0ba4d741cfe1693af06f5978a1d.patch  to also fix the typo to set JAVA_BINDIR in the csh variant\n  of the alljava profile script (bsc#1221361)\n\n- modify git-47-04210f8df15da0ba4d741cfe1693af06f5978a1d.patch\n  drop the stderr redirection for csh (bsc#1221361)\n- add git-49-3f8f26123d91f70c644677a323134fc79318c818.patch\n  drop sysctl.d/50-default-s390.conf (bsc#1211721)\n- add aaa_base-preinstall.patch\n  make sure the script does not exit with 1 if a file\n  with content is found (bsc#1222547)\n\n- add patch git-48-477bc3c05fcdabf9319e84278a1cba2c12c9ed5a.patch\n  home and end button not working from ssh client (bsc#1221407)\n- use autosetup in prep stage of specfile\n\n- silence the output in the case of broken symlinks (bsc#1218232)\n\nPackage audit-secondary was updated:\n\n- Fix plugin termination when using systemd service units (bsc#1215377)  * add auditd.service-fix-plugin-termination.patch\n\nPackage ca-certificates was updated:\n\n- Update to version 2+git20240416.98ae794 (bsc#1221184):  * Use flock to serialize calls (boo#1188500)\n  * Make certbundle.run container friendly\n  * Create /var/lib/ca-certificates if needed\n\nPackage catatonit was updated:\n\n- Update to catatonit v0.2.0.  * Change license to GPL-2.0-or-later.\n- Remove upstreamed patches:\n  - 99bb9048f.patch\n\nPackage coreutils was updated:\n\n- ls: avoid triggering automounts (bsc#1221632)  - add coreutils-ls-avoid-triggering-automounts.patch\n\n- tail: fix tailing sysfs files where PAGE_SIZE \u0026gt; BUFSIZ (bsc#1219321)\n  - add coreutils-tail-fix-tailing-sysfs-files-where-PAGE_SIZE-BUFSIZ.patch\n\nPackage cups was updated:\n\n- cups-2.2.7-CVE-2024-35235.patch is derived  from the upstream patch against master (CUPS 2.5)\n  to behave backward compatible for CUPS 2.2.7\n  in SLE15 and openSUSE Leap 15 to fix CVE-2024-35235\n  \u0026quot;cupsd Listen port arbitrary chmod 0140777\u0026quot;\n  without the more secure but backward-incompatible behaviour\n  of the upstream patch for CUPS 2.5\n  that ignores domain sockets specified in 'Listen' entries\n  in /etc/cups/cupsd.conf when cupsd is lauched via systemd\n  (in particular when launched on-demand by systemd)\n  https://github.com/OpenPrinting/cups/security/advisories/GHSA-vvwp-mv6j-hw6f\n  bsc#1225365\n\n- cups-2.2.7-web-ui-kerberos-authentication.patch, update\n  patch to handle local 'Negotiate' authentication response\n  for cli clients. (bsc#1223179).\n\n- Remove '--enable-debug-printfs' from configure options, see\n  https://github.com/OpenPrinting/cups/issues/875\n  (bsc#1217119).\n\nPackage curl was updated:\n\n- Security fix: [bsc#1221665, CVE-2024-2004]  * Usage of disabled protocol\n  * Add curl-CVE-2024-2004.patch\n\n- Security fix: [bsc#1221667, CVE-2024-2398]\n  * curl: HTTP/2 push headers memory-leak\n  * Add curl-CVE-2024-2398.patch\n\nPackage docker was updated:\n\n- Add patch to fix bsc#1220339  * 0007-daemon-overlay2-remove-world-writable-permission-fro.patch\n- rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * 0006-Vendor-in-latest-buildkit-v0.11-branch-including-CVE.patch\n\n- Allow to disable apparmor support (ALP supports only SELinux)\n\nPackage e2fsprogs was updated:\n\nEA Inode handling fixes:- ext2fs-avoid-re-reading-inode-multiple-times.patch: ext2fs: avoid re-reading\n  inode multiple times (bsc#1223596)\n- e2fsck-fix-potential-out-of-bounds-read-in-inc_ea_in.patch: e2fsck: fix\n  potential out-of-bounds read in inc_ea_inode_refs() (bsc#1223596)\n- e2fsck-add-more-checks-for-ea-inode-consistency.patch: e2fsck: add more\n  checks for ea inode consistency (bsc#1223596)\n- e2fsck-fix-golden-output-of-several-tests.patch: e2fsck: fix golden output of\n  several tests (bsc#1223596)\n\nPackage glibc was updated:\n\n- nscd-netgroup-cache-timeout.patch: Use time_t for return type of  addgetnetgrentX (CVE-2024-33602, bsc#1223425)\n\n- ulp-prologue-into-asm-functions.patch: Avoid creating ULP prologue\n  for _start routine (bsc#1221940)\n\n- glibc-CVE-2024-33599-nscd-Stack-based-buffer-overflow-in-n.patch:\n  nscd: Stack-based buffer overflow in netgroup cache\n  (CVE-2024-33599, bsc#1223423, BZ #31677)\n- glibc-CVE-2024-33600-nscd-Avoid-null-pointer-crashes-after.patch:\n  nscd: Avoid null pointer crashes after notfound response\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33600-nscd-Do-not-send-missing-not-found-re.patch:\n  nscd: Do not send missing not-found response in addgetnetgrentX\n  (CVE-2024-33600, bsc#1223424, BZ #31678)\n- glibc-CVE-2024-33601-CVE-2024-33602-nscd-netgroup-Use-two.patch:\n  netgroup: Use two buffers in addgetnetgrentX (CVE-2024-33601,\n  CVE-2024-33602, bsc#1223425, BZ #31680)\n\n- iconv-iso-2022-cn-ext.patch: iconv: ISO-2022-CN-EXT: fix out-of-bound\n  writes when writing escape sequence (CVE-2024-2961, bsc#1222992)\n\n- duplocale-global-locale.patch: duplocale: protect use of global locale\n  (bsc#1220441, BZ #23970)\n\n- qsort-invalid-cmp.patch: qsort: handle degenerated compare function\n  (bsc#1218866)\n\n- getaddrinfo-eai-memory.patch: getaddrinfo: translate ENOMEM to\n  EAI_MEMORY (bsc#1217589, BZ #31163)\n\n- aarch64-rawmemchr-unwind.patch: aarch64: correct CFI in rawmemchr\n  (bsc#1217445, BZ #31113)\n\nPackage google-guest-agent was updated:\n\n- Update to version 20240314.00 (bsc#1221900, bsc#1221901)  * NetworkManager: only set secondary interfaces as up (#378)\n  * address manager: make sure we check for oldMetadata (#375)\n  * network: early setup network (#374)\n  * NetworkManager: fix ipv6 and ipv4 mode attribute (#373)\n  * Network Manager: make sure we clean up ifcfg files (#371)\n  * metadata script runner: fix script download (#370)\n  * oslogin: avoid adding extra empty line at the end of /etc/security/group.conf (#369)\n  * Dynamic vlan (#361)\n  * Check for nil response (#366)\n  * Create NetworkManager implementation (#362)\n  * Skip interface manager on Windows (#363)\n  * network: remove ignore setup (#360)\n  * Create wicked network service implementation and its respective unit (#356)\n  * Update metadata script runner, add tests (#357)\n  * Refactor guest-agent to use common retry util (#355)\n  * Flush logs before exiting #358 (#359)\n- Refresh patches for new version\n  * dont_overwrite_ifcfg.patch\n\n- No need for double %setup.\n\n- Use %patch -P N instead of deprecated %patchN.\n\nPackage google-guest-configs was updated:\n\n- Update to version 20240307.00 (bsc#1221146, bsc#1221900, bsc#1221901)  * Support dot in NVMe device ids (#68)\n- from version 20240304.00\n  * google_set_hostname: Extract rsyslog service name\n    with a regexp for valid systemd unit names (#67)\n- from version 20240228.00\n  * Remove quintonamore from OWNERS (#64)\n- from version 20240119.00\n  * Setup smp affinity for IRQs and XPS on A3+ VMs (#63)\n\n- Update to version 20231214.00\n  * set multiqueue: A3 check set timeout the MDS call in 1s (#62)\n- from version 20231103.00\n  * Update owners (#61)\n  * Update owners (#58)\n\n- Update to version 20230929.00\n  * Update multinic filter to pick only pci devices (#59)\n\nPackage google-guest-oslogin was updated:\n\n- Fix file permissions for google_authorized_principals binary (bsc#1222171)\n- Update to version 20240311.00 (bsc#1218548, bsc#1221900, bsc#1221901)\n  * pam: Bring back pam's account management implementation (#133)\n  * Change error messages when checking login policy (#129)\n  * Remove quintonamore from OWNERS (#128)\n\nPackage google-osconfig-agent was updated:\n\n- Update to version 20240320.00 (bsc#1221900, bsc#1221901)  * Enable OSConfig agent to read GPG keys files with multiple entities (#537)\n- from version 20240314.00\n  * Update OWNERS file to replace mahmoudn GitHub\n    username by personal email GitHub username (#534)\n- from version 20240313.01\n  * Bump google.golang.org/protobuf from 1.30.0 to 1.33.0 in /e2e_tests (#535)\n- from version 20240313.00\n  * Adds a console and gcloud example policies (#533)\n- from version 20240228.00\n  * GuestPolicies e2e: Remove ed package if exist for zypper\n    startup_script in recipe-steps tests (#532)\n- from version 20240126.00\n  * Fix Enterprise Linux Recipe-Steps tests to install\n    info dependency package in the startup-script (#530)\n- from version 20240125.01\n  * Fix SUSE pkg-update and pkg-no-update e2e tests (#529)\n- from version 20240125.00\n  * Fix zypper patch info parser to consider conflicts-pkgs float versions (#528)\n- from version 20240123.01\n  * Fix SUSE package update e2e tests to use another existing package (#527)\n- from version 20240123.00\n  * Update cis-exclude-check-once-a-day.yaml (#526)\n\n- Update to version 20231219.00\n  * Bump golang.org/x/crypto from 0.14.0 to 0.17.0 (#524)\n- from version 20231207.01\n  * Some change to create an agent release (#523)\n- from version 20231207.00\n  * Some change to create an agent release (#522)\n- from version 20231205.00\n  * Some change to create an agent release (#521)\n- from version 20231130.02\n  * Merge pull request #519 from Gulio/just-release\n  * Merge branch 'master' into just-release\n  * Some change to create an agent release\n  * Some change to create an agent release\n- from version 20231130.00\n  * Some change to create an agent release (#518)\n- from version 20231129.00\n  * Fix parse yum updates to consider the packages under\n    installing-dependencies keyword (#502)\n  * Update feature names in the README file (#517)\n- from version 20231128.00\n  * Updating owners (#508)\n- from version 20231127.00\n  * Move OS policy CIS examples under the console folder (#514)\n- from version 20231123.01\n  * Adds three more OS Policy examples to CIS folder (#509)\n  * Added ekrementeskii and MahmoudNada0 to OWNERS (#505)\n- from version 20231123.00\n  * docs(osconfig):add OS policy examples for CIS scanning (#503)\n- from version 20231121.02\n  * Added SCODE to Windows error description (#504)\n- from version 20231121.01\n  * Update OWNERS (#501)\n  * Update go version to 1.21 (#507)\n- from version 20231121.00\n  * Call fqdn (#481)\n- from version 20231116.00\n  * Removing obsolete MS Windows 2019 images (#500)\n- from version 20231107.00\n  * Update owners. (#498)\n- from version 20231103.02\n  * Increasing test timeouts (#499)\n  * Update OWNERS (#497)\n- from version 20231103.01\n  * Bump google.golang.org/grpc from 1.53.0 to 1.56.3 in /e2e_tests (#493)\n  * Bump google.golang.org/grpc from 1.53.0 to 1.56.3 (#494)\n- from version 20231103.00\n  * Removing deprecated Win for containers OSs (#496)\n- from version 20231027.00\n  * Shortening the reported image names (#495)\n- from version 20231025.00\n  * Merge pull request #492 from GoogleCloudPlatform/michaljankowiak-patch-1\n  * Merge branch 'master' into michaljankowiak-patch-1\n  * Fixing name changes\n  * Fixing rename issue\n  * Fixed formatting\n  * Fixed formatting\n  * Fixing formatting\n  * Removing support for RHEL 6, adding RHEL 9\n  * Removing support for RHEL 6, adding for RHEL 9\n  * Removing support for RHEL 6 and adding for RHEL 9\n  * Removing step needed for RHEL 6\n  * Fixing build issues\n  * Removing nonexistent images and adding new ones\n- from version 20231024.00\n  * Removing obsolete OS images and adding new ones (#491)\n- from version 20231020.00\n  * Change debug messages when parsing zypper patch output (#490)\n- from version 20231013.00\n  * Bump golang.org/x/net from 0.7.0 to 0.17.0 (#489)\n- from version 20231010.00\n  * Revert \u0026quot;Added [main] section with gpgcheck to\n    the agent-managed repo file (#484)\u0026quot; (#488)\n- from version 20231003.00\n  * Bump google.golang.org/grpc from 1.42.0 to 1.53.0 in /e2e_tests (#478)\n- from version 20230920.00\n  * Update OWNERS (#485)\n- from version 20230912.00\n  * Added [main] section with gpgcheck to the agent-managed repo file (#484)\n  * Migrate empty interface to any (#483)\n\n- Bump the golang compiler version to 1.21 (bsc#1216546)\n\n- Update to version 20230829.00\n  * Added burov, dowgird, paulinakania and Gulio to OWNERS (#482)\n  \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; ./google-osconfig-agent.changes.new\n\nPackage growpart-rootgrow was updated:\n\n- Update to version 1.0.7 (bsc#1219941)  + Support root to be in a btrfs snapshot\n  + 1.0.6 had different implementation for btrfs in snapshot support\n\nPackage hwdata was updated:\n\n- update to 0.380:  * Update pci, usb and vendor ids\n\n- update to 0.379:\n  * Update pci, usb and vendor ids\n\nPackage iputils was updated:\n\n- Backport proposed fix for regression in upstream commit 4db1de6 (bsc#1224877)  0002-arping-Fix-unsolicited-ARP-regressions-on-c-1.patch\n\n- Backport upstream fix for bsc#1224877\n  4db1de6 (\u0026quot;arping: Fix 1s delay on exit for unsolicited arpings\u0026quot;)\n  0001-arping-Fix-1s-delay-on-exit-for-unsolicited-arpings.patch\n\nPackage kernel-default was updated:\n\n- pstore: inode: Only d_invalidate() is needed (bsc#1223705  CVE-2024-27389).\n- commit bbe965a\n\n- media: edia: dvbdev: fix a use-after-free (CVE-2024-27043\n  bsc#1223824).\n- commit e3d9ce5\n\n- Update\n  patches.suse/ext4-fix-bug-in-extents-parsing-when-eh_entries-0-an.patch\n  (bsc#1206881 bsc#1223475 CVE-2022-48631).\n- commit 718df1c\n\n- md/raid5: fix atomicity violation in raid5_cache_count\n  (bsc#1219169, CVE-2024-23307).\n- commit d2d22f0\n\n- kABI workaround for cec_adapter (CVE-2024-23848 bsc#1219104).\n- media: cec: core: avoid confusing \u0026quot;transmit timed out\u0026quot; message\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: core: avoid recursive cec_claim_log_addrs\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: cec-api: add locking in cec_release()\n  (CVE-2024-23848 bsc#1219104).\n- media: cec: cec-adap: always cancel work in cec_transmit_msg_fh\n  (CVE-2024-23848 bsc#1219104).\n- commit 5f84bce\n\n- media: cec: abort if the current transmit was canceled\n  (CVE-2024-23848 bsc#1219104).\n- commit f23b730\n\n- Update\n  patches.suse/gpio-mockup-fix-NULL-pointer-dereference-when-removi.patch\n  (git-fixes CVE-2022-48663 bsc#1223523).\n- commit fb50f4d\n\n- Update\n  patches.suse/cgroup-cgroup_get_from_id-must-check-the-looked-up-kn-is-a-directory.patch\n  (bsc#1203906 CVE-2022-48638 bsc#1223522).\n- commit 1b1d545\n\n- Update\n  patches.suse/sfc-fix-TX-channel-offset-when-using-legacy-interrup.patch\n  (git-fixes CVE-2022-48647 bsc#1223519).\n- commit 2df3009\n\n- Update\n  patches.suse/smb3-fix-temporary-data-corruption-in-insert-range.patch\n  (bsc#1193629 CVE-2022-48667 bsc#1223518).\n- commit 2544640\n\n- Update\n  patches.suse/bnxt-prevent-skb-UAF-after-handing-over-to-PTP-worke.patch\n  (jsc#SLE-18978 CVE-2022-48637 bsc#1223517).\n- commit 8af9f52\n\n- Update\n  patches.suse/smb3-fix-temporary-data-corruption-in-collapse-range.patch\n  (bsc#1193629 CVE-2022-48668 bsc#1223516).\n- commit ea57df6\n\n- drm/i915/gem: Really move i915_gem_context.link under ref\n  protection (CVE-2022-48662 bsc#1223505).\n- commit 1ea0422\n\n- Update\n  patches.suse/scsi-qla2xxx-Fix-memory-leak-in-__qlt_24xx_handle_ab.patch\n  (bsc#1203935 CVE-2022-48650 bsc#1223509).\n- commit ecd523c\n\n- Update\n  patches.suse/sfc-fix-null-pointer-dereference-in-efx_hard_start_x.patch\n  (git-fixes CVE-2022-48648 bsc#1223503).\n- commit 2cd307a\n\n- Update\n  patches.suse/gpiolib-cdev-Set-lineevent_state-irq-after-IRQ-regis.patch\n  (git-fixes CVE-2022-48660 bsc#1223487).\n- commit 30d7811\n\n- Update\n  patches.suse/arm64-topology-fix-possible-overflow-in-amu_fie_setu.patch\n  (git-fixes CVE-2022-48657 bsc#1223484).\n- commit d7e1659\n\n- Update\n  patches.suse/netfilter-nfnetlink_osf-fix-possible-bogus-match-in-.patch\n  (bsc#1204614 CVE-2022-48654 bsc#1223482).\n- commit a8a2952\n\n- Update\n  patches.suse/dmaengine-ti-k3-udma-private-Fix-refcount-leak-bug-i.patch\n  (git-fixes CVE-2022-48656 bsc#1223479).\n- commit 90546f3\n\n- Update\n  patches.suse/ice-Don-t-double-unplug-aux-on-peer-initiated-reset.patch\n  (git-fixes CVE-2022-48653 bsc#1223474).\n- commit dba84ad\n\n- ipvlan: Fix out-of-bound bugs caused by unset skb-\u0026gt;mac_header\n  (bsc#1223513 CVE-2022-48651).\n- commit c96a663\n\n- Update patches.suse/firmware-arm_scmi-Harden-accesses-to-the-reset-domai.patch (git-fixes CVE-2022-48655 bsc#1223477)\n- commit 2dabafb\n\n- Call flush_delayed_fput() from nfsd main-loop (bsc#1223380).\n- commit 18e662b\n\n- Update\n  patches.suse/spi-spi-zynqmp-gqspi-Handle-error-for-dma_set_mask.patch\n  (git-fixes CVE-2021-47047 bsc#1220761).\n- commit 1f6461d\n\n- crypto: lib/mpi - Fix unexpected pointer access in mpi_ec_init\n  (CVE-2023-52616 bsc#1221612).\n- commit 6fa74bc\n\n- x86/boot: Ignore relocations in .notes sections in walk_relocs() too (bsc#1222624 CVE-2024-26816).\n- commit 9c9dbbd\n\n- x86, relocs: Ignore relocations in .notes section (bsc#1222624 CVE-2024-26816).\n- commit 9bcfc48\n\n- Update\n  patches.suse/aoe-fix-the-potential-use-after-free-problem-in-aoec.patch\n  (bsc#1218562 CVE-2023-6270 CVE-2024-26898 bsc#1223016).\n- commit 5a56f33\n\n- Update\n  patches.suse/Bluetooth-rfcomm-Fix-null-ptr-deref-in-rfcomm_check_.patch\n  (bsc#1219170 CVE-2024-22099 CVE-2024-26903 bsc#1223187).\n- commit 1a4ee0a\n\n- Update\n  patches.suse/0001-fs-hugetlb-fix-NULL-pointer-dereference-in-hugetlbs_.patch\n  (bsc#1219264 CVE-2024-0841 CVE-2024-26688 bsc#1222482).\n- Update\n  patches.suse/btrfs-fix-double-free-of-anonymous-device-after-snap.patch\n  (bsc#1219126 CVE-2024-23850 CVE-2024-26792 bsc#1222430).\n- Update\n  patches.suse/net-sched-act_mirred-don-t-override-retval-if-we-alr.patch\n  (CVE-2024-26733 bsc#1222585 CVE-2024-26739 bsc#1222559).\n- commit ac0df3e\n\n- Update\n  patches.suse/ALSA-gus-fix-null-pointer-dereference-on-pointer-blo.patch\n  (git-fixes CVE-2021-47207 bsc#1222790).\n- Update\n  patches.suse/ALSA-usb-audio-fix-null-pointer-dereference-on-point.patch\n  (bsc#1192354 CVE-2021-47211 bsc#1222869).\n- Update\n  patches.suse/RDMA-core-Set-send-and-receive-CQ-before-forwarding-.patch\n  (jsc#SLE-19249 CVE-2021-47196 bsc#1222773).\n- Update\n  patches.suse/arm64-dts-qcom-msm8998-Fix-CPU-L2-idle-state-latency.patch\n  (git-fixes CVE-2021-47187 bsc#1222703).\n- Update\n  patches.suse/cfg80211-call-cfg80211_stop_ap-when-switch-from-P2P_.patch\n  (git-fixes CVE-2021-47194 bsc#1222829).\n- Update\n  patches.suse/clk-sunxi-ng-Unregister-clocks-resets-when-unbinding.patch\n  (git-fixes CVE-2021-47205 bsc#1222888).\n- Update\n  patches.suse/drm-prime-Fix-use-after-free-in-mmap-with-drm_gem_tt.patch\n  (git-fixes CVE-2021-47200 bsc#1222838).\n- Update\n  patches.suse/i40e-Fix-NULL-ptr-dereference-on-VSI-filter-sync.patch\n  (jsc#SLE-18378 CVE-2021-47184 bsc#1222666).\n- Update\n  patches.suse/iavf-free-q_vectors-before-queues-in-iavf_disable_vf.patch\n  (jsc#SLE-18385 CVE-2021-47201 bsc#1222792).\n- Update\n  patches.suse/msft-hv-2480-x86-hyperv-Fix-NULL-deref-in-set_hv_tscchange_cb-if-.patch\n  (git-fixes CVE-2021-47217 bsc#1222836).\n- Update\n  patches.suse/net-dpaa2-eth-fix-use-after-free-in-dpaa2_eth_remove.patch\n  (git-fixes CVE-2021-47204 bsc#1222787).\n- Update\n  patches.suse/net-mlx5-Update-error-handler-for-UCTX-and-UMEM.patch\n  (jsc#SLE-19253 CVE-2021-47212 bsc#1222709).\n- Update\n  patches.suse/net-mlx5e-CT-Fix-multiple-allocations-and-memleak-of.patch\n  (jsc#SLE-19253 CVE-2021-47199 bsc#1222785).\n- Update\n  patches.suse/net-mlx5e-kTLS-Fix-crash-in-RX-resync-flow.patch\n  (jsc#SLE-19253 CVE-2021-47215 bsc#1222704).\n- Update\n  patches.suse/net-mlx5e-nullify-cq-dbg-pointer-in-mlx5_debug_cq_re.patch\n  (jsc#SLE-19253 CVE-2021-47197 bsc#1222776).\n- Update\n  patches.suse/sched-fair-Prevent-dead-task-groups-from-regaining-cfs_rq-s.patch\n  (bsc#1192837 CVE-2021-47209 bsc#1222796).\n- Update patches.suse/scsi-advansys-Fix-kernel-pointer-leak.patch\n  (git-fixes CVE-2021-47216 bsc#1222876).\n- Update\n  patches.suse/scsi-core-sysfs-Fix-hang-when-device-state-is-set-via-sysfs\n  (git-fixes CVE-2021-47192 bsc#1222867).\n- Update\n  patches.suse/scsi-lpfc-Fix-list_add-corruption-in-lpfc_drain_txq.patch\n  (bsc#1190576 CVE-2021-47203 bsc#1222881).\n- Update\n  patches.suse/scsi-lpfc-Fix-use-after-free-in-lpfc_unreg_rpi-routi.patch\n  (bsc#1192145 CVE-2021-47198 bsc#1222883).\n- Update\n  patches.suse/scsi-pm80xx-Fix-memory-leak-during-rmmod.patch\n  (git-fixes CVE-2021-47193 bsc#1222879).\n- Update\n  patches.suse/scsi-scsi_debug-Fix-out-of-bound-read-in-resp_readcap16.patch\n  (git-fixes CVE-2021-47191 bsc#1222866).\n- Update\n  patches.suse/scsi-scsi_debug-Fix-out-of-bound-read-in-resp_report_tgtpgs.patch\n  (git-fixes CVE-2021-47219 bsc#1222824).\n- Update patches.suse/scsi-ufs-core-Improve-SCSI-abort-handling\n  (git-fixes CVE-2021-47188 bsc#1222671).\n- Update\n  patches.suse/selinux-fix-NULL-pointer-dereference-when-hashtab-al.patch\n  (git-fixes CVE-2021-47218 bsc#1222791).\n- Update\n  patches.suse/thermal-Fix-NULL-pointer-dereferences-in-of_thermal_.patch\n  (stable-5.14.21 CVE-2021-47202 bsc#1222878).\n- Update\n  patches.suse/tty-tty_buffer-Fix-the-softlockup-issue-in-flush_to_.patch\n  (git-fixes CVE-2021-47185 bsc#1222669).\n- Update\n  patches.suse/usb-host-ohci-tmio-check-return-value-after-calling-.patch\n  (git-fixes CVE-2021-47206 bsc#1222894).\n- Update\n  patches.suse/usb-typec-tipd-Remove-WARN_ON-in-tps6598x_block_read.patch\n  (git-fixes CVE-2021-47210 bsc#1222901).\n- commit 48b69db\n\n- wifi: iwlwifi: fix a memory corruption (CVE-2024-26610\n  bsc#1221299).\n- commit e7967c5\n\n- xen/events: close evtchn after mapping cleanup (CVE-2024-26687,\n  bsc#1222435).\n- commit eb41ab9\n\n- Update patches.suse/arp-Prevent-overflow-in-arp_req_get.patch\n- fix build warning\n- commit b98055d\n\n- ext4: regenerate buddy after block freeing failed if under fc\n  replay (bsc#1220342 CVE-2024-26601).\n- commit c12e20f\n\n- blacklist.conf: Blacklist 83e80a6e3543f3\n- commit 62a580e\n\n- fs/aio: Check IOCB_AIO_RW before the struct aio_kiocb conversion\n  (bsc#1222721 CVE-2024-26764).\n- commit b81d662\n\n- fs/aio: Restrict kiocb_set_cancel_fn() to I/O submitted via\n  libaio (bsc#1222721 CVE-2024-26764).\n- commit 6f0ed6e\n\n- ext4: avoid allocating blocks from corrupted group in\n  ext4_mb_try_best_found() (bsc#1222618 CVE-2024-26773).\n- commit 821043d\n\n- Update patches.suse/thermal-Fix-NULL-pointer-dereferences-in-of_thermal_.patch (stable-5.14.21 CVE-2021-47202 bsc#1222878)\n- commit 9b2ed28\n\n- Update references in\n  patches.suse/ocfs2-Avoid-touching-renamed-directory-if-parent-doe.patch\n  (bsc#1221044 bsc#1221088 CVE-2023-52591 CVE-2023-52590).\n- commit 6a6852e\n\n- Update patches.suse/spi-fix-use-after-free-of-the-add_lock-mutex.patch (git-fixes CVE-2021-47195 bsc#1222832)\n- commit e8d48f1\n\n- IB/hfi1: Fix sdma.h tx-\u0026gt;num_descs off-by-one error (bsc#1222726 CVE-2024-26766)\n- commit dc4bba0\n\n- scsi: Update max_hw_sectors on rescan (bsc#1216223).\n- ibmvfc: make 'max_sectors' a module option (bsc#1216223).\n- commit af79c3f\n\n- md/raid5: fix atomicity violation in raid5_cache_count\n  (bsc#1219169, CVE-2024-23307).\n- commit 7709383\n\n- Update\n  patches.suse/btrfs-fix-memory-ordering-between-normal-and-ordered-work-functions.patch\n  (git-fixes CVE-2021-47189 bsc#1222706).\n- commit 95bc72d\n\n- Update\n  patches.suse/tty-tty_buffer-Fix-the-softlockup-issue-in-flush_to_.patch\n  (git-fixes CVE-2021-47185).\n- commit de9e1db\n\n- Update\n  patches.suse/scsi-lpfc-Fix-link-down-processing-to-address-NULL-p.patch\n  (bsc#1192145 CVE-2021-47183 bsc#1222664).\n- commit 720685d\n\n- Update\n  patches.suse/scsi-core-Fix-scsi_mode_sense-buffer-length-handling.patch\n  (git-fixes CVE-2021-47182 bsc#1222662).\n- commit 641c737\n\n- Update\n  patches.suse/usb-musb-tusb6010-check-return-value-after-calling-p.patch\n  (git-fixes CVE-2021-47181 bsc#1222660).\n- commit 27da195\n\n- ceph: prevent use-after-free in encode_cap_msg() (CVE-2024-26689\n  bsc#1222503).\n- commit c307f9b\n\n- tty: n_gsm: require CAP_NET_ADMIN to attach N_GSM0710 ldisc\n  (bsc#1222619).\n- commit 900d642\n\n- arp: Prevent overflow in arp_req_get() (CVE-2024-26733\n  bsc#1222585).\n- commit aed9764\n\n- net/sched: act_mirred: don't override retval if we already\n  lost the skb (CVE-2024-26733 bsc#1222585).\n- commit 57213f3\n\n- Update\n  patches.suse/btrfs-do-not-ASSERT-if-the-newly-created-subvolume-a.patch\n  (bsc#1219126 CVE-2024-23850 CVE-2024-26727 bsc#1222536).\n- commit 9619dfe\n\n- ext4: fix double-free of blocks due to wrong extents moved_len\n  (bsc#1222422 CVE-2024-26704).\n- commit 4e96ad3\n\n- fs,hugetlb: fix NULL pointer dereference in hugetlbs_fill_super\n  (bsc#1219264 CVE-2024-0841).\n- commit aa8204a\n\n- nfsd: Fix error cleanup path in nfsd_rename() (bsc#1221044\n  CVE-2023-52591).\n- commit a849be1\n\n- scsi: pm80xx: Avoid leaking tags when processing\n  OPC_INB_SET_CONTROLLER_CONFIG command (bsc#1220883\n  cve-2023-52500).\n- commit fc88013\n\n- Update\n  patches.suse/netfilter-nftables-exthdr-fix-4-byte-stack-OOB-write.patch\n  (CVE-2023-4881 bsc#1215221 CVE-2023-52628 bsc#1222117).\n- commit fd3aabc\n\n- selinux: saner handling of policy reloads (bsc#1222230 bsc#1221044\n  CVE-2023-52591).\n- commit 66a189d\n\n- bpf, sockmap: Prevent lock inversion deadlock in map delete elem\n  (bsc#1209657 CVE-2023-0160).\n- commit 989b8c6\n\n- blacklist.conf: omit reverted sockmap deadlock fix\n- commit 397323e\n\n- x86/sev: Harden #VC instruction emulation somewhat (CVE-2024-25742 bsc#1221725).\n- commit 2e3eba1\n\n- netfilter: nf_tables: disallow anonymous set with timeout flag\n  (CVE-2024-26642 bsc#1221830).\n- commit 02a907f\n\n- netfilter: ctnetlink: fix possible refcount leak in\n  ctnetlink_create_conntrack() (CVE-2023-7192 bsc#1218479).\n- commit 0b47032\n\n- README.BRANCH: Remove copy of branch name\n- commit 4834fba\n\n- README.BRANCH: Remove copy of branch name\n- commit 704bda3\n\n- ipv6: init the accept_queue's spinlocks in inet6_create\n  (bsc#1221293 CVE-2024-26614).\n- commit 0ab8c0f\n\n- tcp: make sure init the accept_queue's spinlocks once\n  (bsc#1221293 CVE-2024-26614).\n- commit 943f002\n\n- powerpc/mm: Fix null-pointer dereference in pgtable_cache_add\n  (CVE-2023-52607 bsc#1221061).\n- commit 36feafa\n\n- Update\n  patches.suse/HID-intel-ish-hid-ipc-Disable-and-reenable-ACPI-GPE-.patch\n  (git-fixes CVE-2023-52519 bsc#1220920).\n- Update\n  patches.suse/HID-sony-Fix-a-potential-memory-leak-in-sony_probe.patch\n  (git-fixes CVE-2023-52529 bsc#1220929).\n- Update\n  patches.suse/IB-hfi1-Fix-bugs-with-non-PAGE_SIZE-end-multi-iovec-.patch\n  (git-fixes CVE-2023-52474 bsc#1220445).\n- Update\n  patches.suse/RDMA-siw-Fix-connection-failure-handling.patch\n  (git-fixes CVE-2023-52513 bsc#1221022).\n- Update\n  patches.suse/RDMA-srp-Do-not-call-scsi_done-from-srp_abort.patch\n  (git-fixes CVE-2023-52515 bsc#1221048).\n- Update\n  patches.suse/Revert-tty-n_gsm-fix-UAF-in-gsm_cleanup_mux.patch\n  (git-fixes CVE-2023-52564 bsc#1220938).\n- Update\n  patches.suse/bpf-Check-rcu_read_lock_trace_held-before-calling-bp.patch\n  (bsc#1220251 CVE-2023-52447 CVE-2023-52621 bsc#1222073).\n- Update\n  patches.suse/ieee802154-ca8210-Fix-a-potential-UAF-in-ca8210_prob.patch\n  (git-fixes CVE-2023-52510 bsc#1220898).\n- Update\n  patches.suse/net-nfc-llcp-Add-lock-when-modifying-device-list.patch\n  (git-fixes CVE-2023-52524 bsc#1220927).\n- Update\n  patches.suse/net-usb-smsc75xx-Fix-uninit-value-access-in-__smsc75.patch\n  (git-fixes CVE-2023-52528 bsc#1220843).\n- Update\n  patches.suse/nfc-nci-assert-requested-protocol-is-valid.patch\n  (git-fixes CVE-2023-52507 bsc#1220833).\n- Update\n  patches.suse/nilfs2-fix-potential-use-after-free-in-nilfs_gccache.patch\n  (git-fixes CVE-2023-52566 bsc#1220940).\n- Update\n  patches.suse/nvme-fc-Prevent-null-pointer-dereference-in-nvme_fc_.patch\n  (bsc#1214842 CVE-2023-52508 bsc#1221015).\n- Update\n  patches.suse/nvmet-tcp-Fix-a-kernel-panic-when-host-sends-an-inva.patch\n  (bsc#1217987 bsc#1217988 bsc#1217989 CVE-2023-6535 CVE-2023-6536\n  CVE-2023-6356 CVE-2023-52454 bsc#1220320).\n- Update\n  patches.suse/platform-x86-think-lmi-Fix-reference-leak.patch\n  (git-fixes CVE-2023-52520 bsc#1220921).\n- Update\n  patches.suse/ravb-Fix-use-after-free-issue-in-ravb_tx_timeout_wor.patch\n  (bsc#1212514 CVE-2023-35827 CVE-2023-52509 bsc#1220836).\n- Update\n  patches.suse/ring-buffer-Do-not-attempt-to-read-past-commit.patch\n  (git-fixes CVE-2023-52501 bsc#1220885).\n- Update\n  patches.suse/serial-8250_port-Check-IRQ-data-before-use.patch\n  (git-fixes CVE-2023-52567 bsc#1220839).\n- Update\n  patches.suse/spi-sun6i-fix-race-between-DMA-RX-transfer-completio.patch\n  (git-fixes CVE-2023-52517 bsc#1221055).\n- Update\n  patches.suse/spi-sun6i-reduce-DMA-RX-transfer-width-to-single-byt.patch\n  (git-fixes CVE-2023-52511 bsc#1221012).\n- Update\n  patches.suse/wifi-mwifiex-Fix-oob-check-condition-in-mwifiex_proc.patch\n  (git-fixes CVE-2023-52525 bsc#1220840).\n- Update\n  patches.suse/x86-alternatives-disable-kasan-in-apply_alternatives.patch\n  (git-fixes CVE-2023-52504 bsc#1221553).\n- Update\n  patches.suse/x86-srso-fix-sbpb-enablement-for-spec_rstack_overflow-off.patch\n  (git-fixes CVE-2023-52575 bsc#1220871).\n- commit 5f353b0\n\n- Update patches.suse/0001-mmc-moxart_remove-Fix-UAF.patch\n  (bsc#1194516 CVE-2022-0487 CVE-2022-48626 bsc#1220366).\n- Update\n  patches.suse/crypto-qcom-rng-ensure-buffer-for-generate-is-comple.patch\n  (git-fixes CVE-2022-48629 bsc#1220989).\n- Update\n  patches.suse/crypto-qcom-rng-fix-infinite-loop-on-requests-not-mu.patch\n  (git-fixes CVE-2022-48630 bsc#1220990).\n- commit f8cf886\n\n- Update\n  patches.suse/ALSA-hda-intel-sdw-acpi-harden-detection-of-controll.patch\n  (git-fixes CVE-2021-46926 bsc#1220478).\n- Update\n  patches.suse/ALSA-rawmidi-fix-the-uninitalized-user_pversion.patch\n  (git-fixes CVE-2021-47096 bsc#1220981).\n- Update\n  patches.suse/IB-qib-Fix-memory-leak-in-qib_user_sdma_queue_pkts.patch\n  (git-fixes CVE-2021-47104 bsc#1220960).\n- Update\n  patches.suse/Input-elantech-fix-stack-out-of-bound-access-in-elan.patch\n  (git-fixes CVE-2021-47097 bsc#1220982).\n- Update\n  patches.suse/KVM-x86-mmu-Don-t-advance-iterator-after-restart-due.patch\n  (git-fixes CVE-2021-47094 bsc#1221551).\n- Update patches.suse/NFSD-Fix-READDIR-buffer-overflow.patch\n  (git-fixes bsc#1196346 CVE-2021-47107 bsc#1220965).\n- Update\n  patches.suse/asix-fix-uninit-value-in-asix_mdio_read.patch\n  (git-fixes CVE-2021-47101 bsc#1220987).\n- Update\n  patches.suse/drm-mediatek-hdmi-Perform-NULL-pointer-check-for-mtk.patch\n  (git-fixes CVE-2021-47108 bsc#1220986).\n- Update\n  patches.suse/hwmon-lm90-Prevent-integer-overflow-underflow-in-hys.patch\n  (git-fixes CVE-2021-47098 bsc#1220983).\n- Update\n  patches.suse/ipmi-Fix-UAF-when-uninstall-ipmi_si-and-ipmi_msghand.patch\n  (git-fixes CVE-2021-47100 bsc#1220985).\n- Update\n  patches.suse/ipmi-ssif-initialize-ssif_info-client-early.patch\n  (bsc#1193490 CVE-2021-47095 bsc#1220979).\n- Update\n  patches.suse/mac80211-fix-locking-in-ieee80211_start_ap-error-pat.patch\n  (git-fixes CVE-2021-47091 bsc#1220959).\n- Update\n  patches.suse/net-fix-use-after-free-in-tw_timer_handler.patch\n  (bsc#1217195 CVE-2021-46936 bsc#1220439).\n- Update\n  patches.suse/net-marvell-prestera-fix-incorrect-structure-access.patch\n  (git-fixes CVE-2021-47102 bsc#1221009).\n- Update\n  patches.suse/net-smc-fix-kernel-panic-caused-by-race-of-smc_sock\n  (git-fixes CVE-2021-46925 bsc#1220466).\n- Update\n  patches.suse/nitro_enclaves-Use-get_user_pages_unlocked-call-to-handle-mmap-assert.patch\n  (git fixes (mm/gup) CVE-2021-46927 bsc#1220443).\n- Update\n  patches.suse/platform-x86-intel_pmc_core-fix-memleak-on-registrat.patch\n  (git-fixes CVE-2021-47093 bsc#1220978).\n- Update patches.suse/sctp-use-call_rcu-to-free-endpoint.patch\n  (CVE-2022-20154 bsc#1200599 CVE-2021-46929 bsc#1220482).\n- Update patches.suse/tee-optee-Fix-incorrect-page-free-bug.patch\n  (jsc#SLE-21844 CVE-2021-47087 bsc#1220954).\n- Update\n  patches.suse/tun-avoid-double-free-in-tun_free_netdev.patch\n  (bsc#1209635 CVE-2022-4744 git-fixes CVE-2021-47082\n  bsc#1220969).\n- Update\n  patches.suse/usb-gadget-f_fs-Clear-ffs_eventfd-in-ffs_data_clear.patch\n  (git-fixes CVE-2021-46933 bsc#1220487).\n- Update patches.suse/usb-mtu3-fix-list_head-check-warning.patch\n  (git-fixes CVE-2021-46930 bsc#1220484).\n- Update\n  patches.suse/veth-ensure-skb-entering-GRO-are-not-cloned.patch\n  (git-fixes CVE-2021-47099 bsc#1220955).\n- commit b15f74e\n\n- wifi: ath10k: fix NULL pointer dereference in\n  ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev() (bsc#1218336\n  CVE-2023-7042).\n- commit 1784f9f\n\n- x86/sev: Harden #VC instruction emulation somewhat (CVE-2024-25742 bsc#1221725).\n- commit 02ed75a\n\n- dmaengine: fix NULL pointer in channel unregistration function (bsc#1221276 CVE-2023-52492)\n- commit f21c2ab\n\n- Bluetooth: rfcomm: Fix null-ptr-deref in rfcomm_check_security\n  (bsc#1219170 CVE-2024-22099).\n- commit ece27a6\n\n- perf/x86/lbr: Filter vsyscall addresses (bsc#1220703,\n  CVE-2023-52476).\n- commit c52b506\n\n- fs: introduce lock_rename_child() helper (bsc#1221044\n  CVE-2023-52591).\n  Refresh patches.suse/fs-Establish-locking-order-for-unrelated-directories.patch\n- commit 86376e0\n\n- rename(): avoid a deadlock in the case of parents having no\n  common ancestor (bsc#1221044 CVE-2023-52591).\n- commit 16e3098\n\n- kill lock_two_inodes() (bsc#1221044 CVE-2023-52591).\n- commit 8b8deef\n\n- rename(): fix the locking of subdirectories (bsc#1221044\n  CVE-2023-52591).\n- commit 146d81f\n\n- f2fs: Avoid reading renamed directory if parent does not change\n  (bsc#1221044 CVE-2023-52591).\n- commit 5344280\n\n- ext4: don't access the source subdirectory content on\n  same-directory rename (bsc#1221044 CVE-2023-52591).\n- commit b2b6374\n\n- ext2: Avoid reading renamed directory if parent does not change\n  (bsc#1221044 CVE-2023-52591).\n- commit 2edcc11\n\n- udf_rename(): only access the child content on cross-directory\n  rename (bsc#1221044 CVE-2023-52591).\n- commit 0257614\n\n- ocfs2: Avoid touching renamed directory if parent does not\n  change (bsc#1221044 CVE-2023-52591).\n- commit e786f3a\n\n- reiserfs: Avoid touching renamed directory if parent does not\n  change (git-fixes bsc#1221044 CVE-2023-52591).\n  Refresh patches.suse/reiserfs-add-check-to-detect-corrupted-directory-entry.patch\n  Refresh patches.suse/reiserfs-don-t-panic-on-bad-directory-entries.patch\n- commit 523ddca\n\n- fs: don't assume arguments are non-NULL (bsc#1221044\n  CVE-2023-52591).\n- commit 2177893\n\n- fs: Restrict lock_two_nondirectories() to non-directory inodes\n  (bsc#1221044 CVE-2023-52591).\n- commit a59a7cb\n\n- fs: ocfs2: check status values (bsc#1221044 CVE-2023-52591).\n- commit 8c6576f\n\n- perf/x86/intel/uncore: Fix NULL pointer dereference issue in\n  upi_fill_topology() (bsc#1220237, CVE-2023-52450).\n- commit 246b58a\n\n- x86/mmio: Disable KVM mitigation when X86_FEATURE_CLEAR_CPU_BUF is  set (bsc#1213456 CVE-2023-28746).\n- commit 4fed4e6\n\n- Sort upstream patches\n- Refresh\n  patches.suse/Documentation-hw-vuln-Add-documentation-for-RFDS.patch.\n- Refresh\n  patches.suse/KVM-x86-Export-RFDS_NO-and-RFDS_CLEAR-to-guests.patch.\n- Refresh\n  patches.suse/x86-entry-ia32-Ensure-s32-is-sign-extended-to-s64.patch.\n- Refresh\n  patches.suse/x86-rfds-Mitigate-Register-File-Data-Sampling-RFDS.patch.\n- commit f172e12\n\n- Refresh patches.kabi/team-Hide-new-member-header-ops.patch.\n  Fix for kABI workaround.\n- commit 6ba2f5d\n\n- ceph: fix deadlock or deadcode of misusing dget() (bsc#1221058\n  CVE-2023-52583).\n- commit 1a81018\n\n- netfs: Only call folio_start_fscache() one time for each folio\n  (CVE-2023-52582 bsc#1220878).\n- commit dfd082b\n\n- Refresh\n  patches.suse/mm-ima-kexec-of-use-memblock_free_late-from-ima_free.patch.\n  Fix:\n  * Section mismatch (function ima_free_kexec_buffer()) in modpost: vmlinux.o in ima_free_kexec_buffer()\n  WARNING: modpost: vmlinux.o(.text+0xac1250): Section mismatch in reference from the function ima_free_kexec_buffer() to the function .init.text:__memblock_free_late()\n- commit 5522f01\n\n- Update\n  patches.suse/usb-hub-Guard-against-accesses-to-uninitialized-BOS-.patch\n  (bsc#1220790 CVE-2023-52477).\n- commit d33bab7\n\n- drm/radeon: check the alloc_workqueue return value in radeon_crtc_init() (bsc#1220413 CVE-2023-52470).\n- commit 9d7d799\n\n- drivers/amd/pm: fix a use-after-free in kv_parse_power_table (bsc#1220411 CVE-2023-52469).\n- commit f4f0cf4\n\n- group-source-files.pl: Quote filenames (boo#1221077).\n  The kernel source now contains a file with a space in the name.\n  Add quotes in group-source-files.pl to avoid splitting the filename.\n  Also use -print0 / -0 when updating timestamps.\n- commit a005e42\n\n- mm,ima,kexec,of: use memblock_free_late from\n  ima_free_kexec_buffer (bsc#1220872 CVE-2023-52576).\n- commit b1b1c9a\n\n- phy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP (bsc#1220340,CVE-2024-26600)\n- commit 78e2b4a\n\n- erofs: fix lz4 inplace decompression (CVE-2023-52497\n  bsc#1220879).\n- commit ddeedf9\n\n- ACPI: extlog: fix NULL pointer dereference check (bsc#1221039\n  CVE-2023-52605).\n- commit 635c481\n\n- kernel-binary: Fix i386 build\n  Fixes: 89eaf4cdce05 (\u0026quot;rpm templates: Move macro definitions below buildrequires\u0026quot;)\n- commit f7c6351\n\n- btrfs: remove BUG() after failure to insert delayed dir index\n  item (bsc#1220918 CVE-2023-52569).\n- btrfs: improve error message after failure to add delayed dir\n  index item (bsc#1220918 CVE-2023-52569).\n- commit 53e1d2d\n\n- net: nfc: fix races in nfc_llcp_sock_get() and\n  nfc_llcp_sock_get_sn() (CVE-2023-52502 bsc#1220831).\n- commit 8c33586\n\n- kabi: team: Hide new member header_ops (bsc#1220870\n  CVE-2023-52574).\n- commit 9f49992\n\n- KVM: s390: fix setting of fpc register (git-fixes bsc#1220392\n  bsc#1221040 CVE-2023-52597).\n- commit a90b87c\n\n- kernel-binary: vdso: fix filelist for non-usrmerged kernel\n  Fixes: a6ad8af207e6 (\u0026quot;rpm templates: Always define usrmerged\u0026quot;)\n- commit fb3f221\n\n- bpf, sockmap: Reject sk_msg egress redirects to non-TCP sockets\n  (bsc#1220926 CVE-2023-52523).\n- commit 90d9f50\n\n- aoe: fix the potential use-after-free problem in aoecmd_cfg_pkts\n  (bsc#1218562 CVE-2023-6270).\n- commit 57a4cd4\n\n- efivarfs: force RO when remounting if SetVariable is not\n  supported (bsc#1220328 CVE-2023-52463).\n- commit eed7fb0\n\n- iommu/vt-d: Avoid memory allocation in iommu_suspend()\n  (CVE-2023-52559 bsc#1220933).\n- commit c9b01ef\n\n- Refresh patches.suse/0001-powerpc-pseries-memhp-Fix-access-beyond-end-of-drmem.patch.\n  - update to upstream version\n  - rename to same name as SLE15 SP5\n- commit 1d2def1\n\n- KVM: x86: Export RFDS_NO and RFDS_CLEAR to guests (bsc#1213456 CVE-2023-28746).\n- commit 4aebf4f\n\n- x86/rfds: Mitigate Register File Data Sampling (RFDS)  (bsc#1213456 CVE-2023-28746).\n- Update config files.\n- commit 29c1c99\n\n- Documentation/hw-vuln: Add documentation for RFDS (bsc#1213456 CVE-2023-28746).\n- commit 81de603\n\n- ravb: Fix use-after-free issue in ravb_tx_timeout_work()\n  (bsc#1212514 CVE-2023-35827).\n- team: fix null-ptr-deref when team device type is changed\n  (bsc#1220870 CVE-2023-52574).\n- commit 2cc53f5\n\n- Update\n  patches.suse/ice-xsk-return-xsk-buffers-back-to-pool-when-cleanin.patch\n  (jsc#SLE-18375 bsc#1220961 CVE-2021-47105).\n- Update patches.suse/net-mana-Fix-TX-CQE-error-handling.patch\n  (bsc#1215986 bsc#1220932 CVE-2023-52532).\n- Update\n  patches.suse/net-mlx5e-Wrap-the-tx-reporter-dump-callback-to-extr.patch\n  (jsc#SLE-19253 bsc#1220486 CVE-2021-46931).\n  Added CVE references.\n- commit 3e396c2\n\n- Update patches.suse/i2c-validate-user-data-in-compat-ioctl.patch\n  (git-fixes bsc#1220469 CVE-2021-46934).\n  Add bug and CVE references.\n- commit 3a04060\n\n- wifi: mac80211: fix potential key use-after-free (CVE-2023-52530\n  bsc#1220930).\n- commit 3feca94\n\n- Update patch reference for iwlwifi fix (CVE-2023-52531 bsc#1220931)\n- commit bde87cf\n\n- Update patch reference for pinctrl fix (CVE-2021-47083 bsc#1220917)\n- commit b608623\n\n- drm/bridge: sii902x: Fix probing race issue (bsc#1220736 CVE-2024-26607).\n- commit 70198c4\n\n- Update\n  patches.suse/vt-fix-memory-overlapping-when-deleting-chars-in-the.patch\n  (git-fixes bsc#1220845 CVE-2022-48627).\n- Update\n  patches.suse/x86-srso-add-srso-mitigation-for-hygon-processors.patch\n  (git-fixes bsc#1220735 CVE-2023-52482).\n  Add CVE references.\n- commit dcdac38\n\n- mfd: syscon: Fix null pointer dereference in\n  of_syscon_register() (bsc#1220433 CVE-2023-52467).\n- commit b0262b8\n\n- bpf: Fix re-attachment branch in bpf_tracing_prog_attach\n  (bsc#1220254 CVE-2024-26591).\n- commit fc948d3\n\n- selftests/bpf: Add test for alu on PTR_TO_FLOW_KEYS (bsc#1220255\n  CVE-2024-26589).\n- bpf: Reject variable offset alu on PTR_TO_FLOW_KEYS (bsc#1220255\n  CVE-2024-26589).\n- commit 8a833ce\n\n- iommu/arm-smmu-v3: Fix soft lockup triggered by arm_smmu_mm_invalidate_range (CVE-2023-52484 bsc#1220797).\n- commit 2229de3\n\n- tls: fix race between tx work scheduling and socket close\n  (CVE-2024-26585 bsc#1220187).\n- commit 1306bff\n\n- kabi: restore return type of dst_ops::gc() callback\n  (CVE-2023-52340 bsc#1219295).\n- ipv6: remove max_size check inline with ipv4 (CVE-2023-52340\n  bsc#1219295).\n- commit b8eec42\n\n- netfilter: nf_tables: fix 64-bit load issue in\n  nft_byteorder_eval() (CVE-2024-0607 bsc#1218915).\n- netfilter: nf_tables: fix pointer math issue in\n  nft_byteorder_eval() (CVE-2024-0607 bsc#1218915).\n- commit e095cd0\n\n- netfilter: nft_set_pipapo: skip inactive elements during set\n  walk (CVE-2023-6817 bsc#1218195).\n- commit 4032aa7\n\n- tomoyo: fix UAF write bug in tomoyo_write_control() (bsc#1220825\n  CVE-2024-26622).\n- commit c8e5b38\n\n- doc/README.SUSE: Update information about module support status\n  (jsc#PED-5759)\n  Following the code change in SLE15-SP6 to have externally supported\n  modules no longer taint the kernel, update the respective documentation\n  in README.SUSE:\n  * Describe that support status can be obtained at runtime for each\n  module from /sys/module/$MODULE/supported and for the entire system\n  from /sys/kernel/supported. This provides a way how to now check that\n  the kernel has any externally supported modules loaded.\n  * Remove a mention that externally supported modules taint the kernel,\n  but keep the information about bit 16 (X) and add a note that it is\n  still tracked per module and can be read from\n  /sys/module/$MODULE/taint. This per-module information also appears in\n  Oopses.\n- commit 9ed8107\n\n- btrfs: fix double free of anonymous device after snapshot\n  creation failure (bsc#1219126 CVE-2024-23850).\n- commit 257a534\n\n- btrfs: do not ASSERT() if the newly created subvolume already\n  got read (bsc#1219126 CVE-2024-23850).\n- commit a2ac581\n\n- bpf: Minor cleanup around stack bounds (bsc#1220257\n  CVE-2023-52452).\n- bpf: Fix accesses to uninit stack slots (bsc#1220257\n  CVE-2023-52452).\n- bpf: Guard stack limits against 32bit overflow (git-fixes).\n- bpf: Fix verification of indirect var-off stack access\n  (git-fixes).\n- commit 7d03125\n\n- serial: 8250: omap: Don't skip resource freeing if\n  pm_runtime_resume_and_get() failed (bsc#1220350 CVE-2023-52457).\n- commit c82f528\n\n- serial: imx: fix tx statemachine deadlock (bsc#1220364\n  CVE-2023-52456).\n- commit cd9f92c\n\n- powerpc/pseries/memhp: Fix access beyond end of drmem array\n  (bsc#1220250,CVE-2023-52451).\n- commit fdc7254\n\n- Update patch reference for input fix (CVE-2021-46932 bsc#1220444)\n- commit e44e0b1\n\n- Update patches.suse/i2c-Fix-a-potential-use-after-free.patch\n  (git-fixes bsc#1220409 CVE-2019-25162).\n  Add bug and CVE references.\n- commit 6df4ebd\n\n- efivarfs: force RO when remounting if SetVariable is not\n  supported (bsc#1220328 CVE-2023-52463).\n- commit 3cfef52\n\n- btrfs: fix double free of anonymous device after snapshot\n  creation failure (bsc#1219126 CVE-2024-23850).\n- commit f8ba729\n\n- mtd: Fix gluebi NULL pointer dereference caused by ftl notifier\n  (bsc#1220238 CVE-2023-52449).\n- commit c132b67\n\n- fs/mount_setattr: always cleanup mount_kattr (bsc#1220457\n  CVE-2021-46923).\n- commit 89afe2f\n\n- kABI: bpf: map_fd_put_ptr() signature kABI workaround\n  (bsc#1220251 CVE-2023-52447).\n- kABI: bpf: struct bpf_map kABI workaround (bsc#1220251\n  CVE-2023-52447).\n- kABI: bpf: map_fd_put_ptr() signature kABI workaround\n  (bsc#1220251 CVE-2023-52447).\n- kABI: bpf: struct bpf_map kABI workaround (bsc#1220251\n  CVE-2023-52447).\n- commit bec1c61\n\n- selftests/bpf: Test outer map update operations in syscall\n  program (bsc#1220251 CVE-2023-52447).\n- selftests/bpf: Add test cases for inner map (bsc#1220251\n  CVE-2023-52447).\n- bpf: Defer the free of inner map when necessary (bsc#1220251\n  CVE-2023-52447).\n- Refresh patches.suse/kABI-padding-for-bpf.patch\n- bpf: Set need_defer as false when clearing fd array during\n  map free (bsc#1220251 CVE-2023-52447).\n- bpf: Add map and need_defer parameters to .map_fd_put_ptr()\n  (bsc#1220251 CVE-2023-52447).\n- bpf: Check rcu_read_lock_trace_held() before calling bpf map\n  helpers (bsc#1220251 CVE-2023-52447).\n- rcu-tasks: Provide rcu_trace_implies_rcu_gp() (bsc#1220251\n  CVE-2023-52447).\n- selftests/bpf: Test outer map update operations in syscall\n  program (bsc#1220251 CVE-2023-52447).\n- selftests/bpf: Add test cases for inner map (bsc#1220251\n  CVE-2023-52447).\n- bpf: Defer the free of inner map when necessary (bsc#1220251\n  CVE-2023-52447).\n- Refresh patches.suse/kABI-padding-for-bpf.patch\n- bpf: Set need_defer as false when clearing fd array during\n  map free (bsc#1220251 CVE-2023-52447).\n- bpf: Add map and need_defer parameters to .map_fd_put_ptr()\n  (bsc#1220251 CVE-2023-52447).\n- bpf: Check rcu_read_lock_trace_held() before calling bpf map\n  helpers (bsc#1220251 CVE-2023-52447).\n- rcu-tasks: Provide rcu_trace_implies_rcu_gp() (bsc#1220251\n  CVE-2023-52447).\n- commit aa6db76\n\n- Update patch reference for HID fix (CVE-2023-52478 bsc#1220796)\n- commit 4aec836\n\n- Update patch reference for input fix (CVE-2023-52475 bsc#1220649)\n- commit 00a87c8\n\n- KVM: arm64: vgic-its: Avoid potential UAF in LPI translation\n  cache (bsc#1220326, CVE-2024-26598).\n- commit 74fd0dd\n\n- x86/fpu: Stop relying on userspace for info to fault in xsave buffer (bsc#1220335, CVE-2024-26603).\n- commit 4cbbdbf\n\n- Update patch reference for NFC fix (CVE-2021-46924 bsc#1220459)\n- commit 8ac32a8\n\n- media: pvrusb2: fix use after free on context disconnection\n  (CVE-2023-52445 bsc#1220241).\n- commit e4643a5\n\n- uio: Fix use-after-free in uio_open (bsc#1220140\n  CVE-2023-52439).\n- commit fbf52b1\n\n- apparmor: avoid crash when parsed profile name is empty\n  (CVE-2023-52443 bsc#1220240).\n- commit 732bc93\n\n- btrfs: do not ASSERT() if the newly created subvolume already\n  got read (bsc#1219126 CVE-2024-23850).\n- commit 087f1fb\n\n- sched/membarrier: reduce the ability to hammer on sys_membarrier\n  (git-fixes, bsc#1220398, CVE-2024-26602).\n- commit 6f61ce3\n\n- i2c: i801: Fix block process call transactions (bsc#1220009\n  CVE-2024-26593).\n- commit 1b64da9\n\n- mlxsw: spectrum_acl_tcam: Fix stack corruption (bsc#1220243\n  CVE-2024-26586).\n- mlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in\n  error path (bsc#1220344 CVE-2024-26595).\n- commit 6e8b589\n\n- EDAC/thunderx: Fix possible out-of-bounds string access (bsc#1220330, CVE-2023-52464)\n- commit 369d1fd\n\n- Drop 2 git-fixes patches which are suspicious to introduce regression\n  reported in bsc#1219073,\n  - patches.suse/md-Set-MD_BROKEN-for-RAID1-and-RAID10-9631.patch.\n  - patches.suse/md-raid1-free-the-r1bio-before-waiting-for-blocked-r-992d.patch.\n- Refresh patches.suse/md-display-timeout-error.patch for the above\n  change.\n- commit 4ecd26a\n\n- gfs2: Fix kernel NULL pointer dereference in gfs2_rgrp_dump\n  (bsc#1220253 CVE-2023-52448).\n- commit 12cdab5\n\n- rpm templates: Always define usrmerged\n  usrmerged is now defined in kernel-spec-macros and not the distribution.\n  Only check if it's defined in kernel-spec-macros, not everywhere where\n  it's used.\n- commit a6ad8af\n\n- nvme: remove nvme_alloc_request and nvme_alloc_request_qid\n  (bsc#1214064).\n  Refresh:\n  - patches.suse/nvme-tcp-delay-error-recovery-until-the-next-kato.patch\n- commit 6fc2117\n\n- rpm templates: Move macro definitions below buildrequires\n  Many of the rpm macros defined in the kernel packages depend directly or\n  indirectly on script execution. OBS cannot execute scripts which means\n  values of these macros cannot be used in tags that are required for OBS\n  to see such as package name, buildrequires or buildarch.\n  Accumulate macro definitions that are not directly expanded by mkspec\n  below buildrequires and buildarch to make this distinction clear.\n- commit 89eaf4c\n\n- rpm/check-for-config-changes: add GCC_ASM_GOTO_OUTPUT_WORKAROUND to IGNORED_CONFIGS_RE\n  Introduced by commit 68fb3ca0e408 (\u0026quot;update workarounds for gcc \u0026quot;asm\n  goto\u0026quot; issue\u0026quot;).\n- commit be1bdab\n\n- net: openvswitch: limit the number of recursions from action\n  sets (bsc#1219835 CVE-2024-1151).\n- commit ed2fd55\n\n- README.BRANCH: use correct mail for Roy\n- commit 6f3c32f\n\n- compute-PATCHVERSION: Do not produce output when awk fails\n  compute-PATCHVERSION uses awk to produce a shell script that is\n  subsequently executed to update shell variables which are then printed\n  as the patchversion.\n  Some versions of awk, most notably bysybox-gawk do not understand the\n  awk program and fail to run. This results in no script generated as\n  output, and printing the initial values of the shell variables as\n  the patchversion.\n  When the awk program fails to run produce 'exit 1' as the shell script\n  to run instead. That prevents printing the stale values, generates no\n  output, and generates invalid rpm spec file down the line. Then the\n  problem is flagged early and should be easier to diagnose.\n- commit 8ef8383\n\n- nvme: move nvme_stop_keep_alive() back to original position\n  (bsc#1211515).\n- commit b945fa0\n\n- x86/asm: Add _ASM_RIP() macro for x86-64 (%rip) suffix (git-fixes).\n- commit 636fc4c\n\n- KVM: VMX: Move VERW closer to VMentry for MDS mitigation (git-fixes).\n- KVM: VMX: Use BT+JNC, i.e. EFLAGS.CF to select VMRESUME vs. VMLAUNCH (git-fixes).\n- x86/bugs: Use ALTERNATIVE() instead of mds_user_clear static key (git-fixes).\n  Also add the removed mds_user_clear symbol to kABI severities as it is\n  exposed just for KVM module and is generally a core kernel component so\n  removing it is low risk.\n- x86/entry_32: Add VERW just before userspace transition (git-fixes).\n- x86/entry_64: Add VERW just before userspace transition (git-fixes).\n- x86/bugs: Add asm helpers for executing VERW (git-fixes).\n- commit 5b0be3c\n\n- netfilter: nf_tables: disallow rule removal from chain binding\n  (bsc#1218216 CVE-2023-5197).\n- commit d7a1a4d\n\n- netfilter: nf_tables: skip bound chain in netns release path\n  (bsc#1218216 CVE-2023-5197).\n- commit af879c8\n\n- nvme: start keep-alive after admin queue setup (bsc#1211515).\n- commit 13f904b\n\n- net/rds: Fix UBSAN: array-index-out-of-bounds in rds_cmsg_recv\n  (bsc#1219127 CVE-2024-23849).\n- commit 43577c1\n\n- kernel-binary: Move build script to the end\n  All other spec templates have the build script at the end, only\n  kernel-binary has it in the middle. Align with the other templates.\n- commit 98cbdd0\n\n- rpm templates: Aggregate subpackage descriptions\n  While in some cases the package tags, description, scriptlets and\n  filelist are located together in other cases they are all across the\n  spec file. Aggregate the information related to a subpackage in one\n  place.\n- commit 8eeb08c\n\n- rpm templates: sort rpm tags\n  The rpm tags in kernel spec files are sorted at random.\n  Make the order of rpm tags somewhat more consistent across rpm spec\n  templates.\n- commit 8875c35\n\n- dm: limit the number of targets and parameter size area\n  (bsc#1219827, bsc#1219146, CVE-2023-52429, CVE-2024-23851).\n- commit 26dc83e\n\n- Fix unresolved hunks in README.BRANCH\n- commit 99bb861\n\n- NFS: avoid infinite loop in pnfs_update_layout (bsc#1219633).\n- commit b6a1f9a\n\nPackage krb5 was updated:\n\n- Fix memory leaks, add patch 0012-Fix-two-unlikely-memory-leaks.patch  * CVE-2024-26458, bsc#1220770\n  * CVE-2024-26461, bsc#1220771\n\nPackage less was updated:\n\n- Fix CVE-2024-32487, mishandling of \\n character in paths when  LESSOPEN is set leads to OS command execution\n  (CVE-2024-32487, bsc#1222849)\n  * CVE-2024-32487.patch\n\n- Fix CVE-2022-48624, LESSCLOSE handling in less does not quote shell\n  metacharacters, bsc#1219901\n  * CVE-2022-48624.patch\n\nPackage avahi was updated:\n\n- Add avahi-CVE-2023-38471.patch: Extract host name using  avahi_unescape_label (bsc#1216594, CVE-2023-38471).\n- Add avahi-CVE-2023-38469.patch: Reject overly long TXT resource\n  records (bsc#1216598, CVE-2023-38469).\n\nPackage util-linux was updated:\n\n- Properly neutralize escape sequences in wall  (util-linux-CVE-2024-28085.patch, bsc#1221831, CVE-2024-28085,\n  and its prerequisites: util-linux-fputs_careful1.patch,\n  util-linux-wall-migrate-to-memstream.patch\n  util-linux-fputs_careful2.patch).\n\nPackage c-ares was updated:\n\n- CVE-2024-25629.patch: fix out of bounds read in ares__read_line()  (bsc#1220279, CVE-2024-25629)\n\nPackage expat was updated:\n\n- Security fix (boo#1221289, CVE-2024-28757): XML Entity Expansion  attack when there is isolated use of external parsers.\n  * Added expat-CVE-2024-28757.patch\n\n- Security fix:\n  * (CVE-2023-52425, bsc#1219559) denial of service (resource\n    consumption) caused by processing large tokens.\n  - Added patch expat-CVE-2023-52425-1.patch\n  - Added patch expat-CVE-2023-52425-2.patch\n  - Added patch expat-CVE-2023-52425-backport-parser-changes.patch\n  - Added patch expat-CVE-2023-52425-fix-tests.patch\n\nPackage gcc13 was updated:\n\n- Add gcc13-pr111731.patch to fix unwinding for JIT code.  [bsc#1221239]\n\n- Revert libgccjit dependency change.  [boo#1220724]\n\n- Fix libgccjit-devel dependency, a newer shared library is OK.\n- Fix libgccjit dependency, the corresponding compiler isn't required.\n\n- Use %patch -P N instead of %patchN.\n\n- Add gcc13-sanitizer-remove-crypt-interception.patch to remove\n  crypt and crypt_r interceptors.  The crypt API change in SLE15 SP3\n  breaks them.  [bsc#1219520]\n\n- Update to gcc-13 branch head, 67ac78caf31f7cb3202177e642, git8285\n- Add gcc13-pr88345-min-func-alignment.diff to add support for\n  - fmin-function-alignment.  [bsc#1214934]\n\n- Use %{_target_cpu} to determine host and build.\n\n- Update to gcc-13 branch head, fc7d87e0ffadca49bec29b2107, git8250\n  * Includes fix for building TVM.  [boo#1218492]\n\n- Add cross-X-newlib-devel requires to newlib cross compilers.\n  [boo#1219031]\n\n- Package m2rte.so plugin in the gcc13-m2 sub-package rather than\n  in gcc13-devel.  [boo#1210959]\n- Require libstdc++6-devel-gcc13 from gcc13-m2 as m2 programs\n  are linked against libstdc++6.\n\n- Update to gcc-13 branch head, 36ddb5230f56a30317630a928, git8205\n\n- Update to gcc-13 branch head, 741743c028dc00f27b9c8b1d5, git8109\n  * Includes fix for building mariadb on i686.  [bsc#1217667]\n  * Remove pr111411.patch contained in the update.\n\n- Avoid update-alternatives dependency for accelerator crosses.\n- Package tool links to llvm in cross-amdgcn-gcc13 rather than in\n  cross-amdgcn-newlib13-devel since that also has the dependence.\n- Depend on llvmVER instead of llvm with VER equal to\n  %product_libs_llvm_ver where available and adjust tool discovery\n  accordingly.  This should also properly trigger re-builds when\n  the patchlevel version of llvmVER changes, possibly changing\n  the binary names we link to.  [bsc#1217450]\n\nPackage glib2 was updated:\n\n- Add patches to fix CVE-2024-34397 (boo#1224044):  glib2-CVE-2024-34397.patch (glgo#GNOME/glib#3268).\n  glib2-fix-ibus-regression.patch (glgo#GNOME/glib#3353)\n\nPackage gnutls was updated:\n\n- Security fix: [bsc#1221747, CVE-2024-28835]  * gnutls: certtool crash when verifying a certificate chain\n  * Add gnutls-CVE-2024-28835.patch\n\n- Security fix: [bsc#1221746, CVE-2024-28834]\n  * gnutls: side-channel in the deterministic ECDSA\n  * Add gnutls-CVE-2024-28834.patch\n\n- jitterentropy: Release the memory of the entropy collector when\n  using jitterentropy with phtreads as there is also a\n  pre-intitization done in the main thread. [bsc#1221242]\n  * Add gnutls-FIPS-jitterentropy-deinit-threads.patch\n\nPackage ncurses was updated:\n\n- Add patch ncurses-6.1-bsc1220061.patch (bsc#1220061, CVE-2023-45918)  * Backport from ncurses-6.4-20230615.patch\n    improve checks in convert_string() for corrupt terminfo entry\n\nPackage nghttp2 was updated:\n\n- security update- added patches\n  fix CVE-2024-28182 [bsc#1221399], HTTP/2 CONTINUATION frames can be utilized for DoS attacks\n  + nghttp2-CVE-2024-28182-1.patch\n  fix CVE-2024-28182-2 [bsc#1221399], HTTP/2 CONTINUATION frames can be utilized for DoS attacks\n  + nghttp2-CVE-2024-28182-2.patch\n\nPackage openssl-1_1 was updated:\n\n- Security fix: [bsc#1222548, CVE-2024-2511]  * Fix unconstrained session cache growth in TLSv1.3\n  * Add openssl-CVE-2024-2511.patch\n\nPackage protobuf was updated:\n\n- update to 25.1:  * Raise warnings for deprecated python syntax usages\n  * Add support for extensions in CRuby, JRuby, and FFI Ruby\n  * Add support for options in CRuby, JRuby and FFI (#14594)\n- update to 25.0:\n  * Implement proto2/proto3 with editions\n  * Defines Protobuf compiler version strings as macros and\n    separates out suffix string definition.\n  * Add utf8_validation feature back to the global feature set.\n  * Setting up version updater to prepare for poison pills and\n    embedding version info into C++, Python and Java gencode.\n  * Merge the protobuf and upb Bazel repos\n  * Editions: Introduce functionality to protoc for generating\n    edition feature set defaults.\n  * Editions: Migrate edition strings to enum in C++ code.\n  * Create a reflection helper for ExtensionIdentifier.\n  * Editions: Provide an API for C++ generators to specify their\n    features.\n  * Editions: Refactor feature resolution to use an intermediate\n    message.\n  * Publish extension declarations with declaration\n    verifications.\n  * Editions: Stop propagating partially resolved feature sets to\n    plugins.\n  * Editions: Migrate string_field_validation to a C++ feature\n  * Editions: Include defaults for any features in the generated\n    pool.\n  * Protoc: parser rejects explicit use of map_entry option\n  * Protoc: validate that reserved range start is before end\n  * Protoc: support identifiers as reserved names in addition to\n    string literals (only in editions)\n  * Drop support for Bazel 5.\n  * Allow code generators to specify whether or not they support\n    editions.\n  [#] C++\n  * Set `PROTOBUF_EXPORT` on\n    `InternalOutOfLineDeleteMessageLite()`\n  * Update stale checked-in files\n  * Apply PROTOBUF_NOINLINE to declarations of some functions\n    that want it.\n  * Implement proto2/proto3 with editions\n  * Make JSON UTF-8 boundary check inclusive of the largest\n    possible UTF-8 character.\n  * Reduce `Map::size_type` to 32-bits. Protobuf containers can't\n    have more than that\n  * Defines Protobuf compiler version strings as macros and\n    separates out suffix string definition.\n  * Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated\n    oneof accessors.\n  * Fix bug in reflection based Swap of map fields.\n  * Add utf8_validation feature back to the global feature set.\n  * Setting up version updater to prepare for poison pills and\n    embedding version info into C++, Python and Java gencode.\n  * Add prefetching to arena allocations.\n  * Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated\n    repeated and map field accessors.\n  * Editions: Migrate edition strings to enum in C++ code.\n  * Create a reflection helper for ExtensionIdentifier.\n  * Editions: Provide an API for C++ generators to specify their\n    features.\n  * Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated\n    string field accessors.\n  * Editions: Refactor feature resolution to use an intermediate\n    message.\n  * Fixes for 32-bit MSVC.\n  * Publish extension declarations with declaration\n    verifications.\n  * Export the constants in protobuf's any.h to support DLL\n    builds.\n  * Implement AbslStringify for the Descriptor family of types.\n  * Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated\n    message field accessors.\n  * Editions: Stop propagating partially resolved feature sets to\n    plugins.\n  * Editions: Migrate string_field_validation to a C++ feature\n  * Editions: Include defaults for any features in the generated\n    pool.\n  * Introduce C++ feature for UTF8 validation.\n  * Protoc: validate that reserved range start is before end\n  * Remove option to disable the table-driven parser in protoc.\n  * Lock down ctype=CORD in proto file.\n  * Support split repeated fields.\n  * In OSS mode omit some extern template specializations.\n  * Allow code generators to specify whether or not they support\n    editions.\n  [#] Java\n  * Implement proto2/proto3 with editions\n  * Remove synthetic oneofs from Java gencode field accessor\n    tables.\n  * Timestamps.parse: Add error handling for invalid\n    hours/minutes in the timezone offset.\n  * Defines Protobuf compiler version strings as macros and\n    separates out suffix string definition.\n  * Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated\n    oneof accessors.\n  * Add missing debugging version info to Protobuf Java gencode\n    when multiple files are generated.\n  * Fix a bad cast in putBuilderIfAbsent when already present due\n    to using the result of put() directly (which is null if it\n    currently has no value)\n  * Setting up version updater to prepare for poison pills and\n    embedding version info into C++, Python and Java gencode.\n  * Fix a NPE in putBuilderIfAbsent due to using the result of\n    put() directly (which is null if it currently has no value)\n  * Update Kotlin compiler to escape package names\n  * Add MapFieldBuilder and change codegen to generate it and the\n    put{field}BuilderIfAbsent method.\n  * Introduce recursion limit in Java text format parsing\n  * Consider the protobuf.Any invalid if typeUrl.split(\u0026quot;/\u0026quot;)\n    returns an empty array.\n  * Mark `FieldDescriptor.hasOptionalKeyword()` as deprecated.\n  * Fixed Python memory leak in map lookup.\n  * Loosen upb for json name conflict check in proto2 between\n    json name and field\n  * Defines Protobuf compiler version strings as macros and\n    separates out suffix string definition.\n  * Add `ABSL_ATTRIBUTE_LIFETIME_BOUND` attribute on generated\n    oneof accessors.\n  * Ensure Timestamp.ToDatetime(tz) has correct offset\n  * Do not check required field for upb python MergeFrom\n  * Setting up version updater to prepare for poison pills and\n    embedding version info into C++, Python and Java gencode.\n  * Merge the protobuf and upb Bazel repos\n  * Comparing a proto message with an object of unknown returns\n    NotImplemented\n  * Emit __slots__ in pyi output as a tuple rather than a list\n    for --pyi_out.\n  * Fix a bug that strips options from descriptor.proto in\n    Python.\n  * Raise warings for message.UnknownFields() usages and navigate\n    to the new add\n  * Add protobuf python keyword support in path for stub\n    generator.\n  * Add tuple support to set Struct\n  * ### Python C-Extension (Default)\n  * Comparing a proto message with an object of unknown returns\n    NotImplemented\n  * Check that ffi-compiler loads before using it to define\n    tasks.\n  [#] UPB (Python/PHP/Ruby C-Extension)\n  * Include .inc files directly instead of through a filegroup\n  * Loosen upb for json name conflict check in proto2 between\n    json name and field\n  * Add utf8_validation feature back to the global feature set.\n  * Do not check required field for upb python MergeFrom\n  * Merge the protobuf and upb Bazel repos\n  * Added malloc_trim() calls to Python allocator so RSS will\n    decrease when memory is freed\n  * Upb: fix a Python memory leak in ByteSize()\n  * Support ASAN detection on clang\n  * Upb: bugfix for importing a proto3 enum from within a proto2\n    file\n  * Expose methods needed by Ruby FFI using UPB_API\n  * Fix `PyUpb_Message_MergeInternal` segfault\n\n- build against modern python on sle15\n\n- Build with source and target levels 8\n  * fixes build with JDK21\n- Install the pom file with the new %%mvn_install_pom macro\n- Do not install the pom-only artifacts, since the %%mvn_install_pom\n  macro resolves the variables at the install time\n\n- update to 23.4:\n  * Add dllexport_decl for generated default instance.\n  * Deps: Update Guava to 32.0.1\n\n- update to 23.3:\n  C++\n  * Regenerate stale files\n  * Use the same ABI for static and shared libraries on non-\n    Windows platforms\n  * Add a workaround for GCC constexpr bug\n  Objective-C\n  * Regenerate stale files\n  UPB (Python/PHP/Ruby C-Extension)\n  * Fixed a bug in `upb_Map_Delete()` that caused crashes in\n    map.delete(k) for Ruby when string-keyed maps were in use.\n  Compiler\n  * Add missing header to Objective-c generator\n  * Add a workaround for GCC constexpr bug\n  Java\n  * Rollback of: Simplify protobuf Java message builder by\n    removing methods that calls the super class only.\n  Csharp\n  * [C#] Replace regex that validates descriptor names\n- drop 0001-Use-the-same-ABI-for-static-and-shared-libraries-on-.patch (upstream)\n\n- Add patch to fix linking ThreadSafeArena:\n  * 0001-Use-the-same-ABI-for-static-and-shared-libraries-on-.patch\n- Drop the protobuf-source package, no longer used\n\n- update to 22.5:\n  C++\n  * Add missing cstdint header\n  * Fix: missing -DPROTOBUF_USE_DLLS in pkg-config (#12700)\n  * Avoid using string(JOIN..., which requires cmake 3.12\n  * Explicitly include GTest package in examples\n  * Bump Abseil submodule to 20230125.3 (#12660)\n- update to 22.4:\n  C++\n  * Fix libprotoc: export useful symbols from .so\n  * Fix btree issue in map tests.\n  Python\n  * Fix bug in _internal_copy_files where the rule would fail in\n    downstream repositories.\n  Other\n  * Bump utf8_range to version with working pkg-config (#12584)\n  * Fix declared dependencies for pkg-config\n  * Update abseil dependency and reorder dependencies to ensure\n    we use the version specified in protobuf_deps.\n  * Turn off clang::musttail on i386\n\n- drop python2 handling\n- fix version handling and package the private libs again\n\n- Fix confusion in versions\n\n- Mention the rpmlintrc file in the spec.\n\n- Make possible to build on older systems, like SLE12 that miss\n  some of the used macros.\n\n- update to v22.3\n  UPB (Python/PHP/Ruby C-Extension)\n  * Remove src prefix from proto import\n  * Fix .gitmodules to use the correct absl branch\n  * Remove erroneous dependency on googletest\n- update to 22.2:\n  Java\n  * Add version to intra proto dependencies and add kotlin stdlib\n    dependency\n  * Add $ back for osgi header\n  * Remove $ in pom files\n- update to 22.1:\n  * Add visibility of plugin.proto to python directory\n  * Strip \u0026quot;src\u0026quot; from file name of plugin.proto\n  * Add OSGi headers to pom files.\n  * Remove errorprone dependency from kotlin protos.\n  * Version protoc according to the compiler version number.\n- update to 22.0:\n  * This version includes breaking changes to: Cpp.\n    Please refer to the migration guide for information:\n    https://protobuf.dev/support/migration/#compiler-22\n  * [Cpp] Migrate to Abseil's logging library.\n  * [Cpp] `proto2::Map::value_type` changes to `std::pair`.\n  * [Cpp] Mark final ZeroCopyInputStream, ZeroCopyOutputStream,\n    and DefaultFieldComparator classes.\n  * [Cpp] Add a dependency on Abseil (#10416)\n  * [Cpp] Remove all autotools usage (#10132)\n  * [Cpp] Add C++20 reserved keywords\n  * [Cpp] Dropped C++11 Support\n  * [Cpp] Delete Arena::Init\n  * [Cpp] Replace JSON parser with new implementation\n  * [Cpp] Make RepeatedField::GetArena non-const in order to\n    support split RepeatedFields.\n  * long list of bindings specific fixes see\n    https://github.com/protocolbuffers/protobuf/releases/tag/v22.0\n- python sub packages version is set 4.22.3 as defined in\n  python/google/protobuf/__init__.py to stay compatible\n- skip python2 builds by default\n- drop patches:\n  * 10355.patch,\n  * gcc12-disable-__constinit-with-c++-11.patch (merged upstream)\n- added patches:\n  * add-missing-stdint-header.patch   added for compile fixes\n\n- Enable LTO (boo#1133277).\n\n- update to v21.12:\n  * Python\n  * Fix broken enum ranges (#11171)\n  * Stop requiring extension fields to have a sythetic oneof (#11091)\n  * Python runtime 4.21.10 not works generated code can not load valid\n    proto.\n\n- update to 21.11:\n  * Python\n  * Add license file to pypi wheels (#10936)\n  * Fix round-trip bug (#10158)\n\n- update to 21.10:\n  * Java\n  * Use bit-field int values in buildPartial to skip work on unset groups of\n    fields. (#10960)\n  * Mark nested builder as clean after clear is called (#10984)\n\n- update to 21.9:\n  * Ruby\n  * Replace libc strdup usage with internal impl to restore musl compat (#10818)\n  * Auto capitalize enums name in Ruby (#10454) (#10763)\n  * Other\n  * Fix for grpc.tools #17995 \u0026amp; protobuf #7474 (handle UTF-8 paths in argumentfile) (#10721)\n  * C++\n  * 21.x No longer define no_threadlocal on OpenBSD (#10743)\n  * Java\n  * Mark default instance as immutable first to avoid race during static initialization of default instances (#10771)\n  * Refactoring java full runtime to reuse sub-message builders and prepare to\n    migrate parsing logic from parse constructor to builder.\n  * Move proto wireformat parsing functionality from the private \u0026quot;parsing\n    constructor\u0026quot; to the Builder class.\n  * Change the Lite runtime to prefer merging from the wireformat into mutable\n    messages rather than building up a new immutable object before merging. This\n    way results in fewer allocations and copy operations.\n  * Make message-type extensions merge from wire-format instead of building up\n    instances and merging afterwards. This has much better performance.\n  * Fix TextFormat parser to build up recurring (but supposedly not repeated)\n    sub-messages directly from text rather than building a new sub-message and\n    merging the fully formed message into the existing field.\n\n- update to 21.6:\n  C++:\n  * Reduce memory consumption of MessageSet parsing\n\n- update to 21.5:\n  PHP\n  * Added getContainingOneof and getRealContainingOneof to descriptor.\n  * fix PHP readonly legacy files for nested messages\n  Python\n  * Fixed comparison of maps in Python.\n\n- add 10355.patch to fix soversioning\n\n- update to 21.4:\n  * Reduce the required alignment of ArenaString from 8 to 4\n\n- update to 21.3:\n  * C++\n  * Add header search paths to Protobuf-C++.podspec (#10024)\n  * Fixed Visual Studio constinit errors (#10232)\n  * Fix #9947: make the ABI compatible between debug and non-debug builds (#10271)\n  * UPB\n  * Allow empty package names (fixes behavior regression in 4.21.0)\n  * Fix a SEGV bug when comparing a non-materialized sub-message (#10208)\n  * Fix several bugs in descriptor mapping containers (eg. descriptor.services_by_name)\n  * for x in mapping now yields keys rather than values, to match Python\n    conventions and the behavior of the old library.\n  * Lookup operations now correctly reject unhashable types as map keys.\n  * We implement repr() to use the same format as dict.\n  * Fix maps to use the ScalarMapContainer class when appropriate\n  * Fix bug when parsing an unknown value in a proto2 enum extension (protocolbuffers/upb#717)\n  * PHP\n  * Add \u0026quot;readonly\u0026quot; as a keyword for PHP and add previous classnames to descriptor pool (#10041)\n  * Python\n  * Make //:protobuf_python and //:well_known_types_py_pb2 public (#10118)\n  * Bazel\n  * Add back a filegroup for :well_known_protos (#10061)\n\n- Update to 21.2:\n- C++\n  - cmake: Call get_filename_component() with DIRECTORY mode instead of PATH mode (#9614)\n  - Escape GetObject macro inside protoc-generated code (#9739)\n  - Update CMake configuration to add a dependency on Abseil (#9793)\n  - Fix cmake install targets (#9822)\n  - Use __constinit only in GCC 12.2 and up (#9936)\n- Java\n  - Update protobuf_version.bzl to separate protoc and per-language java â¦ (#9900)\n- Python\n  - Increment python major version to 4 in version.json for python upb (#9926)\n  - The C extension module for Python has been rewritten to use the upb library.\n  - This is expected to deliver significant performance benefits, especially when\n    parsing large payloads. There are some minor breaking changes, but these\n    should not impact most users. For more information see:\n    https://developers.google.com/protocol-buffers/docs/news/2022-05-06#python-updates\n- PHP\n  - [PHP] fix PHP build system (#9571)\n  - Fix building packaged PHP extension (#9727)\n  - fix: reserve \u0026quot;ReadOnly\u0026quot; keyword for PHP 8.1 and add compatibility (#9633)\n  - fix: phpdoc syntax for repeatedfield parameters (#9784)\n  - fix: phpdoc for repeatedfield (#9783)\n  - Change enum string name for reserved words (#9780)\n  - chore: [PHP] fix phpdoc for MapField keys (#9536)\n  - Fixed PHP SEGV by not writing to shared memory for zend_class_entry. (#9996)\n- Ruby\n  - Allow pre-compiled binaries for ruby 3.1.0 (#9566)\n  - Implement respond_to? in RubyMessage (#9677)\n  - [Ruby] Fix RepeatedField#last, #first inconsistencies (#9722)\n  - Do not use range based UTF-8 validation in truffleruby (#9769)\n  - Improve range handling logic of RepeatedField (#9799)\n- Other\n  - Fix invalid dependency manifest when using descriptor_set_out (#9647)\n  - Remove duplicate java generated code (#9909)\n\n- Do not use %%autosetup, but %%setup and %%patch on other line\n  * Allows building on SLE-12-SP5\n\n- Add temporary patch gcc12-disable-__constinit-with-c++-11.patch\n  that addresses gh#protocolbuffers/protobuf#9916.\n\nPackage python3 was updated:\n\n- Add bpo38361-syslog-no-slash-ident.patch (bsc#1222109,  gh#python/cpython!16557) fixes syslog making default \u0026quot;ident\u0026quot;\n  from sys.argv[0].\n\n- (bsc#1219666, CVE-2023-6597) Add\n  CVE-2023-6597-TempDir-cleaning-symlink.patch (patch from\n  gh#python/cpython!99930) fixing symlink bug in cleanup of\n  tempfile.TemporaryDirectory.\n- Merge together bpo-36576-skip_tests_for_OpenSSL-111.patch into\n  skip_SSL_tests.patch, and make them include all conditionals.\n\nPackage libzypp was updated:\n\n- Don't try to refresh volatile media as long as raw metadata are  present (bsc#1223094)\n- version 17.32.5 (32)\n\n- Fix creation of sibling cache dirs with too restrictive mode\n  (bsc#1222398)\n  Some install workflows in YAST may lead to too restrictive (0700)\n  raw cache directories in case of newly created repos. Later\n  commands running with user privileges may not be able to access\n  these repos.\n- version 17.32.4 (32)\n\n- Update RepoStatus fromCookieFile according to the files mtime\n  (bsc#1222086)\n- TmpFile: Don't call chmod if makeSibling failed.\n- version 17.32.3 (32)\n\n- Fixup New VendorSupportOption flag VendorSupportSuperseded\n  (jsc#OBS-301, jsc#PED-8014)\n  Fixed the name of the keyword to \u0026quot;support_superseded\u0026quot; as it was\n  agreed on in jsc#OBS-301.\n- version 17.32.2 (32)\n\n- Add resolver option 'removeUnneeded' to file weak remove jobs\n  for unneeded packages (bsc#1175678)\n- version 17.32.1 (32)\n\n- Add resolver option 'removeOrphaned' for distupgrade\n  (bsc#1221525)\n- New VendorSupportOption flag VendorSupportSuperseded\n  (jsc#OBS-301, jsc#PED-8014)\n- Tests: fix vsftpd.conf where SUSE and Fedora use different\n  defaults (fixes #522)\n- Add default stripe minimum (#529)\n- Don't expose std::optional where YAST/PK explicitly use c++11.\n- Digest: Avoid using the deprecated OPENSSL_config.\n- version 17.32.0 (32)\n\n- ProblemSolution::skipsPatchesOnly overload to handout the\n  patches.\n- Remove https-\u0026gt;http redirection exceptions for\n  download.opensuse.org.\n- version 17.31.32 (22)\n\nPackage shadow was updated:\n\n- bsc#1176006: Fix chage date miscalculation  Add shadow-bsc1176006-chage-date.patch\n- bsc#1188307: Fix passwd segfault\n  Add shadow-bsc1188307-passwd-segfault.patch\n- bsc#1203823: Remove pam_keyinit from PAM config files\n  Remove pam_keyinit from PAM configuration.\n  This was introduced for bsc#1144060.\n\nPackage openssh was updated:\n\n- Add patches from upstream to change the default value of  UpdateHostKeys to Yes (unless VerifyHostKeyDNS is enabled).\n  This makes ssh update the known_hosts stored keys with all\n  published versions by the server (after it's authenticated\n  with an existing key), which will allow to identify the\n  server with a different key if the existing key is considered\n  insecure at some point in the future (bsc#1222831).\n  * 0001-upstream-enable-UpdateHostkeys-by-default-when-the.patch\n  * 0002-upstream-disable-UpdateHostkeys-by-default-if.patch\n\n- Add patches openssh-7.7p1-seccomp_getuid.patch and\n  openssh-bsc1216474-s390-leave-fds-open.patch\n  (bsc#1216474, bsc#1218871)\n\n- Fix hostbased ssh login failing occasionally with \u0026quot;signature\n  unverified: incorrect signature\u0026quot; by fixing a typo in patch\n  (bsc#1221123):\n  * openssh-7.8p1-role-mls.patch\n\nPackage pam-config was updated:\n\n- Fix pam_gnome_keyring module for AUTH.  [pam-config-fix-pam_gnome_keyring.patch, bsc#1219767]\n\nPackage perl-Bootloader was updated:\n\n- merge gh#openSUSE/perl-bootloader#166- log grub2-install errors correctly (bsc#1221470)\n- 0.947\n\n- merge gh#openSUSE/perl-bootloader#161\n- support old grub versions (\u0026lt;= 2.02) that used /usr/lib\n  (bsc#1218842)\n- create EFI boot fallback directory if necessary\n- 0.946\n\nPackage perl was updated:\n\n- fix space calculation issues in pp_pack.c [bnc#1082216]  [CVE-2018-6913]\n  * new patch: perl-pack-overflow.diff\n- fix heap buffer overflow in regexec.c [bnc#1082233]\n  [CVE-2018-6798]\n  new patch: perl-regexec-heap-overflow.diff\n- make Net::FTP work with TLS 1.3 [bnc#1213638]\n  new patch: perl-net-ftp-tls13.diff\n\nPackage python-idna was updated:\n\n- Add CVE-2024-3651.patch, backported from upstream commit  gh#kjd/idna#172/commits/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\n  (bsc#1222842, CVE-2024-3651)\n\nPackage python-requests was updated:\n\n- Add CVE-2024-35195.patch (CVE-2024-35195, bsc#1224788)- Add httpbin.patch to fix a test failure caused by the previous patch.\n\nPackage rpm-ndb was updated:\n\nPackage runc was updated:\n\n- Add upstream patch \u0026lt;https://github.com/opencontainers/runc/pull/4219\u0026gt; to  properly fix -ENOSYS stub on ppc64le. bsc#1192051 bsc#1221050\n  + 0001-bsc1221050-libct-seccomp-patchbpf-rm-duplicated-code.patch\n  + 0002-bsc1221050-seccomp-patchbpf-rename-nativeArch-linuxA.patch\n  + 0003-bsc1221050-seccomp-patchbpf-always-include-native-ar.patch\n\nPackage sed was updated:\n\n- 0001-sed-set-correct-umask-on-temporary-files.patch  Fix for bsc#1221218\n\nPackage 000release-packages:sle-module-basesystem-release was updated:\n\nPackage 000release-packages:sle-module-containers-release was updated:\n\nPackage 000release-packages:sle-module-public-cloud-release was updated:\n\nPackage 000release-packages:sle-module-server-applications-release was updated:\n\nPackage sudo was updated:\n\n- Fix NOPASSWD issue introduced by patches for CVE-2023-42465  [bsc#1221151, bsc#1221134]\n  * Update sudo-CVE-2023-42465-1of2.patch sudo-CVE-2023-42465-2of2.patch\n  * Enable running regression selftests during build time.\n\nPackage supportutils was updated:\n\n- Changes in version 3.1.30  + Added -V key:value pair option (bsc#1222021, PED-8211)\n  + Avoid getting duplicate kernel verifications in boot.text (pr#193)\n  + Suppress file descriptor leak warnings from lvm commands (pr#192, bsc#1220082)\n  + Includes container log timestamps (pr#197)\n\n- Changes to version 3.1.29\n  + Extended scaling for performance (bsc#1214713)\n  + Fixed kdumptool output error (bsc#1218632)\n  + Corrected podman ID errors (bsc#1218812)\n  + Duplicate non root podman entries removed (bsc#1218814)\n  + Corrected get_sles_ver for SLE Micro (bsc#1219241)\n  + Check nvidida-persistenced state (bsc#1219639)\n\nPackage suseconnect-ng was updated:\n\n- Update to version 1.9.0  * Fix certificate import for Yast when using a registration proxy with\n    self-signed SSL certificate (bsc#1223107)\n\n- Update to version 1.8.0\n  * Allow \u0026quot;--rollback\u0026quot; flag to run on readonly filesystem (bsc#1220679)\n\nPackage systemd-default-settings was updated:\n\n- Import 0.10  5088997 SLE: Disable pids controller limit under user instances (jsc#SLE-10123)\n\n- Import 0.9\n  bb859bf user@.service: Disable controllers by default (jsc#PED-2276)\n\n- The usage of drop-ins is now the official way for configuring systemd and its\n  various daemons on Factory/ALP. Hence the early drop-ins SUSE specific\n  \u0026quot;feature\u0026quot; has been abandoned.\n\n- Import 0.8\n  f34372f User priority '26' for SLE-Micro\n  c8b6f0a Revert \u0026quot;Convert more drop-ins into early ones\u0026quot;\n\n- Import commit 6b8dde1d4f867aff713af6d6830510a84fad58d2\n  6b8dde1 Convert more drop-ins into early ones\n\nPackage systemd-presets-branding-SLE was updated:\n\nPackage systemd-presets-common-SUSE was updated:\n\n- Split hcn-init.service to hcn-init-NetworkManager and hcn-init-wicked  (bsc#1200731 ltc#198485 https://github.com/ibm-power-utilities/powerpc-utils/pull/84)\n  Support both the old and new service to avoid complex version interdependency.\n\nPackage systemd-rpm-macros was updated:\n\n- Bump version to 15\n- Order packages that requires systemd after systemd-sysvcompat when this part\n  of the transaction (bsc#1217964)\n  systemd-sysvcompat has been introduced recently and contains the compatibility\n  scripts used to support SysV init scripts. Make sure that the packages ordered\n  after systemd are also ordered after systemd-sysvcompat so theirs rpm\n  scriptlets can still rely on the compat scripts.\n  On distributions where systemd-sysvcompat doesn't exist, the new ordering\n  constraint should be a nop.\n\nPackage util-linux-systemd was updated:\n\n- Properly neutralize escape sequences in wall  (util-linux-CVE-2024-28085.patch, bsc#1221831, CVE-2024-28085,\n  and its prerequisites: util-linux-fputs_careful1.patch,\n  util-linux-wall-migrate-to-memstream.patch\n  util-linux-fputs_careful2.patch).\n\n- Add upstream patch\n  more-exit-if-POLLERR-and-POLLHUP-on-stdin-is-received.patch\n  bsc#1220117 - L3-Question: Processes not cleaned up after failed SSH session are using up 100% CPU\n\n- Add upstream patch\n  util-linux-libuuid-avoid-truncate-clocks.txt-to-improve-perform.patch\n  bsc#1207987 gh#util-linux/util-linux@1d98827edde4\n\nPackage vim was updated:\n\n- Updated to version 9.1 with patch level 0330, fixes the following problems  * Fixing bsc#1220763 - vim gets Segmentation fault after updating to version 9.1.0111-150500.20.9.1\n- refreshed vim-7.3-filetype_spec.patch\n- refreshed vim-7.3-filetype_ftl.patch\n- Update spec.skeleton to use autosetup in place of setup macro.\n- for the complete list of changes see\n  https://github.com/vim/vim/compare/v9.1.0111...v9.1.0330\n\n- Updated to version 9.1 with patch level 0111, fixes the following security problems\n  * Fixing bsc#1217316 (CVE-2023-48231) - VUL-0: CVE-2023-48231: vim: Use-After-Free in win_close()\n  * Fixing bsc#1217320 (CVE-2023-48232) - VUL-0: CVE-2023-48232: vim: Floating point Exception in adjust_plines_for_skipcol()\n  * Fixing bsc#1217321 (CVE-2023-48233) - VUL-0: CVE-2023-48233: vim: overflow with count for :s command\n  * Fixing bsc#1217324 (CVE-2023-48234) - VUL-0: CVE-2023-48234: vim: overflow in nv_z_get_count\n  * Fixing bsc#1217326 (CVE-2023-48235) - VUL-0: CVE-2023-48235: vim: overflow in ex address parsing\n  * Fixing bsc#1217329 (CVE-2023-48236) - VUL-0: CVE-2023-48236: vim: overflow in get_number\n  * Fixing bsc#1217330 (CVE-2023-48237) - VUL-0: CVE-2023-48237: vim: overflow in shift_line\n  * Fixing bsc#1217432 (CVE-2023-48706) - VUL-0: CVE-2023-48706: vim: heap-use-after-free in ex_substitute\n  * Fixing bsc#1219581 (CVE-2024-22667) - VUL-0: CVE-2024-22667: vim: stack-based buffer overflow in did_set_langmap function in map.c\n  * Fixing bsc#1215005 (CVE-2023-4750) - VUL-0: CVE-2023-4750: vim: Heap use-after-free in function bt_quickfix\n- for the complete list of changes see\n  https://github.com/vim/vim/compare/v9.0.2103...v9.1.0111\n\nPackage wicked was updated:\n\n- client: fix ifreload to pull UP ports/links again when the config  of their master/lower changed (bsc#1224100,gh#openSUSE/wicked#1014).\n  [+ 0001-ifreload-pull-UP-again-on-master-lower-changes-bsc1224100.patch]\n\n- Update to version 0.6.75:\n  - cleanup: fix ni_fsm_state_t enum-int-mismatch warnings\n  - cleanup: fix overflow warnings in a socket testcase on i586\n  - ifcheck: report new and deleted configs as changed (bsc#1218926)\n  - man: improve ARP configuration options in the wicked-config.5\n  - bond: add ports when master is UP to avoid port MTU revert (bsc#1219108)\n  - cleanup: fix interface dependencies and shutdown order (bsc#1205604)\n  - Remove port arrays from bond,team,bridge,ovs-bridge (redundant)\n    and consistently use config and state info attached to the port\n    interface as in rtnetlink(7).\n  - Cleanup ifcfg parsing, schema configuration and service properties\n  - Migrate ports in xml config and policies already applied in nanny\n  - Remove \u0026quot;missed config\u0026quot; generation from finite state machine, which\n    is completed while parsing the config or while xml config migration.\n  - Issue a warning when \u0026quot;lower\u0026quot; interface (e.g. eth0) config is missed\n    while parsing config depending on it (e.g. eth0.42 vlan).\n  - Resolve ovs master to the effective bridge in config and wickedd\n  - Implement netif-check-state require checks using system relations\n    from wickedd/kernel instead of config relations for ifdown and add\n    linkDown and deleteDevice checks to all master and lower references.\n  - Add a `wicked \u0026lt;ifup|ifdown|ifreload\u0026gt; --dry-run â¦` option to show the\n    system/config interface hierarchies as notice with +/- marked\n    interfaces to setup and/or shutdown.\n- Removed patches included in the source archive:\n  [- 0001-addrconf-fix-fallback-lease-drop-bsc-1220996.patch]\n  [- 0002-extensions-nbft-replace-nvme-show-nbft-with-nvme-nbf.patch]\n  [- 0003-move-all-attribute-definitions-to-compiler-h.patch]\n  [- 0004-hide-secrets-in-debug-log-bsc-1221194.patch]\n  [- 0005-client-do-to-not-convert-sec-to-msec-twice-bsc-1222105.patch]\n\n- client: do not convert sec to msec twice (bsc#1222105)\n  [+ 0005-client-do-to-not-convert-sec-to-msec-twice-bsc-1222105.patch]\n\n- addrconf: fix fallback-lease drop (bsc#1220996)\n  [+ 0001-addrconf-fix-fallback-lease-drop-bsc-1220996.patch]\n- extensions/nbft: use upstream `nvme nbft show` (bsc#1221358)\n  [+ 0002-extensions-nbft-replace-nvme-show-nbft-with-nvme-nbf.patch]\n- hide secrets in debug log (bsc#1221194)\n  [+ 0003-move-all-attribute-definitions-to-compiler-h.patch]\n  [+ 0004-hide-secrets-in-debug-log-bsc-1221194.patch]\n\nPackage xen was updated:\n\n- Update to Xen 4.16.6 security bug fix release (bsc#1027519)  xen-4.16.6-testing-src.tar.bz2\n  * No upstream changelog found in sources or webpage\n- bsc#1221984 - VUL-0: CVE-2023-46842: xen: x86 HVM hypercalls may\n  trigger Xen bug check (XSA-454)\n- bsc#1222302 - VUL-0: CVE-2024-31142: xen: x86: Incorrect logic\n  for BTC/SRSO mitigations (XSA-455)\n- bsc#1222453 - VUL-0: CVE-2024-2201: xen: x86: Native Branch\n  History Injection (XSA-456)\n- Dropped patches contained in new tarball\n  64e5b4ac-x86-AMD-extend-Zenbleed-check.patch\n  64e6459b-revert-VMX-sanitize-rIP-before-reentering.patch\n  64eef7e9-x86-reporting-spurious-i8259-interrupts.patch\n  64f71f50-Arm-handle-cache-flush-at-top.patch\n  65087000-x86-spec-ctrl-SPEC_CTRL_EXIT_TO_XEN-confusion.patch\n  65087001-x86-spec-ctrl-fold-DO_SPEC_CTRL_EXIT_TO_XEN.patch\n  65087002-x86-spec-ctrl-SPEC_CTRL-ENTRY-EXIT-asm-macros.patch\n  65087003-x86-spec-ctrl-SPEC_CTRL-ENTER-EXIT-comments.patch\n  65087004-x86-entry-restore_all_xen-stack_end.patch\n  65087005-x86-entry-track-IST-ness-of-entry.patch\n  65087006-x86-spec-ctrl-VERW-on-IST-exit-to-Xen.patch\n  65087007-x86-AMD-Zen-1-2-predicates.patch\n  65087008-x86-spec-ctrl-Zen1-DIV-leakage.patch\n  650abbfe-x86-shadow-defer-PV-top-level-release.patch\n  65263470-AMD-IOMMU-flush-TLB-when-flushing-DTE.patch\n  65263471-libfsimage-xfs-remove-dead-code.patch\n  65263472-libfsimage-xfs-amend-mask32lo.patch\n  65263473-libfsimage-xfs-sanity-check-superblock.patch\n  65263474-libfsimage-xfs-compile-time-check.patch\n  65263475-pygrub-remove-unnecessary-hypercall.patch\n  65263476-pygrub-small-refactors.patch\n  65263477-pygrub-open-output-files-earlier.patch\n  65263478-libfsimage-function-to-preload-plugins.patch\n  65263479-pygrub-deprivilege.patch\n  6526347a-libxl-allow-bootloader-restricted-mode.patch\n  6526347b-libxl-limit-bootloader-when-restricted.patch\n  6526347c-SVM-fix-AMD-DR-MASK-context-switch-asymmetry.patch\n  6526347d-x86-PV-auditing-of-guest-breakpoints.patch\n  65536847-AMD-IOMMU-correct-level-for-quarantine-pt.patch\n  65536848-x86-spec-ctrl-remove-conditional-IRQs-on-ness.patch\n  xsa440.patch\n  xsa449.patch\n  xsa451.patch\n  xsa452-1.patch\n  xsa452-2.patch\n  xsa452-3.patch\n  xsa452-4.patch\n  xsa452-5.patch\n  xsa452-6.patch\n  xsa452-7.patch\n  xsa453-1.patch\n  xsa453-2.patch\n  xsa453-3.patch\n  xsa453-4.patch\n  xsa453-5.patch\n  xsa453-6.patch\n  xsa453-7.patch\n  xsa453-8.patch\n  xsa454-1.patch\n  xsa454-2.patch\n\n- bsc#1221332 - VUL-0: CVE-2023-28746: xen: x86: Register File Data\n  Sampling (XSA-452)\n  xsa452-1.patch\n  xsa452-2.patch\n  xsa452-3.patch\n  xsa452-4.patch\n  xsa452-5.patch\n  xsa452-6.patch\n  xsa452-7.patch\n- bsc#1221334 - VUL-0: CVE-2024-2193: xen: GhostRace: Speculative\n  Race Conditions (XSA-453)\n  xsa453-1.patch\n  xsa453-2.patch\n  xsa453-3.patch\n  xsa453-4.patch\n  xsa453-5.patch\n  xsa453-6.patch\n  xsa453-7.patch\n  xsa453-8.patch\n\n- bsc#1219885 - VUL-0: CVE-2023-46841: xen: x86: shadow stack vs\n  exceptions from emulation stubs (XSA-451)\n  xsa451.patch\n\nPackage zypper was updated:\n\n- Do not try to refresh repo metadata as non-root user  (bsc#1222086)\n  Instead show refresh stats and hint how to update them.\n- man: Explain how to protect orphaned packages by collecting\n  them in a plaindir repo.\n- packages: Add --autoinstalled and --userinstalled options to\n  list them.\n- Don't print 'reboot required' message if download-only or\n  dry-run (fixes #529)\n  Instead point out that a reboot would be required if the option\n  was not used.\n- Resepect zypper.conf option `showAlias` search commands\n  (bsc#1221963)\n  Repository::asUserString (or Repository::label) respects the\n  zypper.conf option, while name/alias return the property.\n- version 1.14.71\n\n- dup: New option --remove-orphaned to remove all orphaned\n  packages in dup (bsc#1221525)\n- version 1.14.70\n\n- info,summary: Support VendorSupportOption flag\n  VendorSupportSuperseded (jsc#OBS-301, jsc#PED-8014)\n- BuildRequires:  libzypp-devel \u0026gt;= 17.32.0.\n  API cleanup and changes for VendorSupportSuperseded.\n- Show active dry-run/download-only at the commit propmpt.\n- patch: Add --skip-not-applicable-patches option (closes #514)\n- Fix printing detailed solver problem description.\n  The problem description() is one rule out possibly many in\n  completeProblemInfo() the solver has chosen to represent the\n  problem. So either description or completeProblemInfo should be\n  printed, but not both.\n- Fix bash-completion to work with right adjusted numbers in the\n  1st column too (closes #505)\n- Set libzypp shutdown request signal on Ctrl+C (fixes #522)\n- lr REPO: In the detailed view show all baseurls not just the\n  first one (bsc#1218171)\n- version 1.14.69\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "aaa_base-84.87+git20180409.04c9dae-150300.10.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "audit-3.0.6-150400.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ca-certificates-2+git20240416.98ae794-150300.4.3.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "catatonit-0.2.0-150300.10.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "containerd-1.7.10-150000.108.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "containerd-ctr-1.7.10-150000.108.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "coreutils-8.32-150400.9.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cups-config-2.2.7-150000.3.59.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.0.1-150400.5.44.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-24.0.7_ce-150000.198.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "e2fsprogs-1.46.4-150400.3.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.31-150300.83.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-2.31-150300.83.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-base-2.31-150300.83.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-agent-20240314.00-150000.1.46.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20240307.00-150400.13.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-oslogin-20240311.00-150000.1.43.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20240320.00-150000.1.33.5",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "growpart-rootgrow-1.0.7-150000.1.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "hwdata-0.380-150000.3.68.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "iputils-20211215-150400.3.8.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-5.14.21-150400.24.119.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-1.19.2-150400.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "less-590-150400.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libaudit1-3.0.6-150400.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libauparse0-3.0.6-150400.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-client3-0.8-150400.7.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-common3-0.8-150400.7.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libblkid1-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcares2-1.19.1-150000.3.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcom_err2-1.46.4-150400.3.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcups2-2.2.7-150000.3.59.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.0.1-150400.5.44.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libexpat1-2.4.4-150400.3.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libext2fs2-1.46.4-150400.3.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfdisk1-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-13.2.1+git8285-150000.1.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.70.5-150400.3.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgnutls30-3.7.3-150400.4.44.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libmount1-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libncurses6-6.1-150000.5.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libnghttp2-14-1.40.0-150200.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1l-150400.7.66.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-150300.10.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsemanage1-3.1-150400.3.4.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsmartcols1-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-13.2.1+git8285-150000.1.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libuuid1-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-17.32.5-150400.3.64.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "login_defs-4.8.1-150400.10.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ncurses-utils-6.1-150000.5.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-8.4p1-150300.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-clients-8.4p1-150300.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-common-8.4p1-150300.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-server-8.4p1-150300.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-1_1-1.1.1l-150400.7.66.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-config-1.1-150200.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-5.26.1-150300.17.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-Bootloader-0.947-150400.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-base-5.26.1-150300.17.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.6.15-150300.10.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.6.15-150300.10.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-idna-2.6-150000.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-requests-2.25.1-150300.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "rpm-ndb-4.14.3-150400.59.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "runc-1.1.12-150000.64.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sed-4.4-150300.13.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shadow-4.8.1-150400.10.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shim-15.8-150300.4.20.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sudo-1.9.9-150400.4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "supportutils-3.1.30-150300.7.35.30.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ng-1.9.0-150400.3.31.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "system-group-audit-3.0.6-150400.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-default-settings-0.10-150300.3.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-default-settings-branding-SLE-0.10-150300.3.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-presets-branding-SLE-15.1-150100.20.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-presets-common-SUSE-15-150100.8.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-rpm-macros-15-150000.7.39.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "terminfo-6.1-150000.5.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "terminfo-base-6.1-150000.5.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-systemd-2.37.2-150400.8.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.0330-150000.5.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.0330-150000.5.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-0.6.75-150400.3.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-service-0.6.75-150400.3.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xen-libs-4.16.6_02-150400.4.55.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xfsprogs-5.13.0-150400.3.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.71-150400.3.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-15-sp4-chost-byos-v20240612-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2018-6798",
      "Description": "An issue was discovered in Perl 5.22 through 5.26. Matching a crafted locale dependent regular expression can cause a heap-based buffer over-read and potentially information disclosure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:perl-5.26.1-150300.17.17.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:perl-base-5.26.1-150300.17.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2018-6913",
      "Description": "Heap-based buffer overflow in the pack function in Perl before 5.26.2 allows context-dependent attackers to execute arbitrary code via a large item count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:perl-5.26.1-150300.17.17.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:perl-base-5.26.1-150300.17.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.5",
        "Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2019-25162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: Fix a potential use after free\n\nFree the adap structure only after we are done using it.\nThis patch just moves the put_device() down a bit to avoid the\nuse after free.\n\n[wsa: added comment to the code, added Fixes tag]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/mount_setattr: always cleanup mount_kattr\n\nMake sure that finish_mount_kattr() is called after mount_kattr was\nsuccesfully built in both the success and failure case to prevent\nleaking any references we took when we built it.  We returned early if\npath lookup failed thereby risking to leak an additional reference we\ntook when building mount_kattr when an idmapped mount was requested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: st21nfca: Fix memory leak in device probe and remove\n\n'phy-\u003epending_skb' is alloced when device probe, but forgot to free\nin the error handling path and remove path, this cause memory leak\nas follows:\n\nunreferenced object 0xffff88800bc06800 (size 512):\n  comm \"8\", pid 11775, jiffies 4295159829 (age 9.032s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c00000000d66c09ce\u003e] __kmalloc_node_track_caller+0x1ed/0x450\n    [\u003c00000000c93382b3\u003e] kmalloc_reserve+0x37/0xd0\n    [\u003c000000005fea522c\u003e] __alloc_skb+0x124/0x380\n    [\u003c0000000019f29f9a\u003e] st21nfca_hci_i2c_probe+0x170/0x8f2\n\nFix it by freeing 'pending_skb' in error and remove.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: fix kernel panic caused by race of smc_sock\n\nA crash occurs when smc_cdc_tx_handler() tries to access smc_sock\nbut smc_release() has already freed it.\n\n[ 4570.695099] BUG: unable to handle page fault for address: 000000002eae9e88\n[ 4570.696048] #PF: supervisor write access in kernel mode\n[ 4570.696728] #PF: error_code(0x0002) - not-present page\n[ 4570.697401] PGD 0 P4D 0\n[ 4570.697716] Oops: 0002 [#1] PREEMPT SMP NOPTI\n[ 4570.698228] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.16.0-rc4+ #111\n[ 4570.699013] Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS 8c24b4c 04/0\n[ 4570.699933] RIP: 0010:_raw_spin_lock+0x1a/0x30\n\u003c...\u003e\n[ 4570.711446] Call Trace:\n[ 4570.711746]  \u003cIRQ\u003e\n[ 4570.711992]  smc_cdc_tx_handler+0x41/0xc0\n[ 4570.712470]  smc_wr_tx_tasklet_fn+0x213/0x560\n[ 4570.712981]  ? smc_cdc_tx_dismisser+0x10/0x10\n[ 4570.713489]  tasklet_action_common.isra.17+0x66/0x140\n[ 4570.714083]  __do_softirq+0x123/0x2f4\n[ 4570.714521]  irq_exit_rcu+0xc4/0xf0\n[ 4570.714934]  common_interrupt+0xba/0xe0\n\nThough smc_cdc_tx_handler() checked the existence of smc connection,\nsmc_release() may have already dismissed and released the smc socket\nbefore smc_cdc_tx_handler() further visits it.\n\nsmc_cdc_tx_handler()           |smc_release()\nif (!conn)                     |\n                               |\n                               |smc_cdc_tx_dismiss_slots()\n                               |      smc_cdc_tx_dismisser()\n                               |\n                               |sock_put(\u0026smc-\u003esk) \u003c- last sock_put,\n                               |                      smc_sock freed\nbh_lock_sock(\u0026smc-\u003esk) (panic) |\n\nTo make sure we won't receive any CDC messages after we free the\nsmc_sock, add a refcount on the smc_connection for inflight CDC\nmessage(posted to the QP but haven't received related CQE), and\ndon't release the smc_connection until all the inflight CDC messages\nhaven been done, for both success or failed ones.\n\nUsing refcount on CDC messages brings another problem: when the link\nis going to be destroyed, smcr_link_clear() will reset the QP, which\nthen remove all the pending CQEs related to the QP in the CQ. To make\nsure all the CQEs will always come back so the refcount on the\nsmc_connection can always reach 0, smc_ib_modify_qp_reset() was replaced\nby smc_ib_modify_qp_error().\nAnd remove the timeout in smc_wr_tx_wait_no_pending_sends() since we\nneed to wait for all pending WQEs done, or we may encounter use-after-\nfree when handling CQEs.\n\nFor IB device removal routine, we need to wait for all the QPs on that\ndevice been destroyed before we can destroy CQs on the device, or\nthe refcount on smc_connection won't reach 0 and smc_sock cannot be\nreleased.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46926",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: intel-sdw-acpi: harden detection of controller\n\nThe existing code currently sets a pointer to an ACPI handle before\nchecking that it's actually a SoundWire controller. This can lead to\nissues where the graph walk continues and eventually fails, but the\npointer was set already.\n\nThis patch changes the logic so that the information provided to\nthe caller is set when a controller is found.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnitro_enclaves: Use get_user_pages_unlocked() call to handle mmap assert\n\nAfter commit 5b78ed24e8ec (\"mm/pagemap: add mmap_assert_locked()\nannotations to find_vma*()\"), the call to get_user_pages() will trigger\nthe mmap assert.\n\nstatic inline void mmap_assert_locked(struct mm_struct *mm)\n{\n\tlockdep_assert_held(\u0026mm-\u003emmap_lock);\n\tVM_BUG_ON_MM(!rwsem_is_locked(\u0026mm-\u003emmap_lock), mm);\n}\n\n[   62.521410] kernel BUG at include/linux/mmap_lock.h:156!\n...........................................................\n[   62.538938] RIP: 0010:find_vma+0x32/0x80\n...........................................................\n[   62.605889] Call Trace:\n[   62.608502]  \u003cTASK\u003e\n[   62.610956]  ? lock_timer_base+0x61/0x80\n[   62.614106]  find_extend_vma+0x19/0x80\n[   62.617195]  __get_user_pages+0x9b/0x6a0\n[   62.620356]  __gup_longterm_locked+0x42d/0x450\n[   62.623721]  ? finish_wait+0x41/0x80\n[   62.626748]  ? __kmalloc+0x178/0x2f0\n[   62.629768]  ne_set_user_memory_region_ioctl.isra.0+0x225/0x6a0 [nitro_enclaves]\n[   62.635776]  ne_enclave_ioctl+0x1cf/0x6d7 [nitro_enclaves]\n[   62.639541]  __x64_sys_ioctl+0x82/0xb0\n[   62.642620]  do_syscall_64+0x3b/0x90\n[   62.645642]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nUse get_user_pages_unlocked() when setting the enclave memory regions.\nThat's a similar pattern as mmap_read_lock() used together with\nget_user_pages().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: mtu3: fix list_head check warning\n\nThis is caused by uninitialization of list_head.\n\nBUG: KASAN: use-after-free in __list_del_entry_valid+0x34/0xe4\n\nCall trace:\ndump_backtrace+0x0/0x298\nshow_stack+0x24/0x34\ndump_stack+0x130/0x1a8\nprint_address_description+0x88/0x56c\n__kasan_report+0x1b8/0x2a0\nkasan_report+0x14/0x20\n__asan_load8+0x9c/0xa0\n__list_del_entry_valid+0x34/0xe4\nmtu3_req_complete+0x4c/0x300 [mtu3]\nmtu3_gadget_stop+0x168/0x448 [mtu3]\nusb_gadget_unregister_driver+0x204/0x3a0\nunregister_gadget_item+0x44/0xa4",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Wrap the tx reporter dump callback to extract the sq\n\nFunction mlx5e_tx_reporter_dump_sq() casts its void * argument to struct\nmlx5e_txqsq *, but in TX-timeout-recovery flow the argument is actually\nof type struct mlx5e_tx_timeout_ctx *.\n\n mlx5_core 0000:08:00.1 enp8s0f1: TX timeout detected\n mlx5_core 0000:08:00.1 enp8s0f1: TX timeout on queue: 1, SQ: 0x11ec, CQ: 0x146d, SQ Cons: 0x0 SQ Prod: 0x1, usecs since last trans: 21565000\n BUG: stack guard page was hit at 0000000093f1a2de (stack is 00000000b66ea0dc..000000004d932dae)\n kernel stack overflow (page fault): 0000 [#1] SMP NOPTI\n CPU: 5 PID: 95 Comm: kworker/u20:1 Tainted: G W OE 5.13.0_mlnx #1\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n Workqueue: mlx5e mlx5e_tx_timeout_work [mlx5_core]\n RIP: 0010:mlx5e_tx_reporter_dump_sq+0xd3/0x180\n [mlx5_core]\n Call Trace:\n mlx5e_tx_reporter_dump+0x43/0x1c0 [mlx5_core]\n devlink_health_do_dump.part.91+0x71/0xd0\n devlink_health_report+0x157/0x1b0\n mlx5e_reporter_tx_timeout+0xb9/0xf0 [mlx5_core]\n ? mlx5e_tx_reporter_err_cqe_recover+0x1d0/0x1d0\n [mlx5_core]\n ? mlx5e_health_queue_dump+0xd0/0xd0 [mlx5_core]\n ? update_load_avg+0x19b/0x550\n ? set_next_entity+0x72/0x80\n ? pick_next_task_fair+0x227/0x340\n ? finish_task_switch+0xa2/0x280\n   mlx5e_tx_timeout_work+0x83/0xb0 [mlx5_core]\n   process_one_work+0x1de/0x3a0\n   worker_thread+0x2d/0x3c0\n ? process_one_work+0x3a0/0x3a0\n   kthread+0x115/0x130\n ? kthread_park+0x90/0x90\n   ret_from_fork+0x1f/0x30\n --[ end trace 51ccabea504edaff ]---\n RIP: 0010:mlx5e_tx_reporter_dump_sq+0xd3/0x180\n PKRU: 55555554\n Kernel panic - not syncing: Fatal exception\n Kernel Offset: disabled\n end Kernel panic - not syncing: Fatal exception\n\nTo fix this bug add a wrapper for mlx5e_tx_reporter_dump_sq() which\nextracts the sq from struct mlx5e_tx_timeout_ctx and set it as the\nTX-timeout-recovery flow dump callback.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: appletouch - initialize work before device registration\n\nSyzbot has reported warning in __flush_work(). This warning is caused by\nwork-\u003efunc == NULL, which means missing work initialization.\n\nThis may happen, since input_dev-\u003eclose() calls\ncancel_work_sync(\u0026dev-\u003ework), but dev-\u003ework initalization happens _after_\ninput_register_device() call.\n\nSo this patch moves dev-\u003ework initialization before registering input\ndevice",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_fs: Clear ffs_eventfd in ffs_data_clear.\n\nffs_data_clear is indirectly called from both ffs_fs_kill_sb and\nffs_ep0_release, so it ends up being called twice when userland closes ep0\nand then unmounts f_fs.\nIf userland provided an eventfd along with function's USB descriptors, it\nends up calling eventfd_ctx_put as many times, causing a refcount\nunderflow.\nNULL-ify ffs_eventfd to prevent these extraneous eventfd_ctx_put calls.\n\nAlso, set epfiles to NULL right after de-allocating it, for readability.\n\nFor completeness, ffs_data_clear actually ends up being called thrice, the\nlast call being before the whole ffs structure gets freed, so when this\nspecific sequence happens there is a second underflow happening (but not\nbeing reported):\n\n/sys/kernel/debug/tracing# modprobe usb_f_fs\n/sys/kernel/debug/tracing# echo ffs_data_clear \u003e set_ftrace_filter\n/sys/kernel/debug/tracing# echo function \u003e current_tracer\n/sys/kernel/debug/tracing# echo 1 \u003e tracing_on\n(setup gadget, run and kill function userland process, teardown gadget)\n/sys/kernel/debug/tracing# echo 0 \u003e tracing_on\n/sys/kernel/debug/tracing# cat trace\n smartcard-openp-436     [000] .....  1946.208786: ffs_data_clear \u003c-ffs_data_closed\n smartcard-openp-431     [000] .....  1946.279147: ffs_data_clear \u003c-ffs_data_closed\n smartcard-openp-431     [000] .n...  1946.905512: ffs_data_clear \u003c-ffs_data_put\n\nWarning output corresponding to above trace:\n[ 1946.284139] WARNING: CPU: 0 PID: 431 at lib/refcount.c:28 refcount_warn_saturate+0x110/0x15c\n[ 1946.293094] refcount_t: underflow; use-after-free.\n[ 1946.298164] Modules linked in: usb_f_ncm(E) u_ether(E) usb_f_fs(E) hci_uart(E) btqca(E) btrtl(E) btbcm(E) btintel(E) bluetooth(E) nls_ascii(E) nls_cp437(E) vfat(E) fat(E) bcm2835_v4l2(CE) bcm2835_mmal_vchiq(CE) videobuf2_vmalloc(E) videobuf2_memops(E) sha512_generic(E) videobuf2_v4l2(E) sha512_arm(E) videobuf2_common(E) videodev(E) cpufreq_dt(E) snd_bcm2835(CE) brcmfmac(E) mc(E) vc4(E) ctr(E) brcmutil(E) snd_soc_core(E) snd_pcm_dmaengine(E) drbg(E) snd_pcm(E) snd_timer(E) snd(E) soundcore(E) drm_kms_helper(E) cec(E) ansi_cprng(E) rc_core(E) syscopyarea(E) raspberrypi_cpufreq(E) sysfillrect(E) sysimgblt(E) cfg80211(E) max17040_battery(OE) raspberrypi_hwmon(E) fb_sys_fops(E) regmap_i2c(E) ecdh_generic(E) rfkill(E) ecc(E) bcm2835_rng(E) rng_core(E) vchiq(CE) leds_gpio(E) libcomposite(E) fuse(E) configfs(E) ip_tables(E) x_tables(E) autofs4(E) ext4(E) crc16(E) mbcache(E) jbd2(E) crc32c_generic(E) sdhci_iproc(E) sdhci_pltfm(E) sdhci(E)\n[ 1946.399633] CPU: 0 PID: 431 Comm: smartcard-openp Tainted: G         C OE     5.15.0-1-rpi #1  Debian 5.15.3-1\n[ 1946.417950] Hardware name: BCM2835\n[ 1946.425442] Backtrace:\n[ 1946.432048] [\u003cc08d60a0\u003e] (dump_backtrace) from [\u003cc08d62ec\u003e] (show_stack+0x20/0x24)\n[ 1946.448226]  r7:00000009 r6:0000001c r5:c04a948c r4:c0a64e2c\n[ 1946.458412] [\u003cc08d62cc\u003e] (show_stack) from [\u003cc08d9ae0\u003e] (dump_stack+0x28/0x30)\n[ 1946.470380] [\u003cc08d9ab8\u003e] (dump_stack) from [\u003cc0123500\u003e] (__warn+0xe8/0x154)\n[ 1946.482067]  r5:c04a948c r4:c0a71dc8\n[ 1946.490184] [\u003cc0123418\u003e] (__warn) from [\u003cc08d6948\u003e] (warn_slowpath_fmt+0xa0/0xe4)\n[ 1946.506758]  r7:00000009 r6:0000001c r5:c0a71dc8 r4:c0a71e04\n[ 1946.517070] [\u003cc08d68ac\u003e] (warn_slowpath_fmt) from [\u003cc04a948c\u003e] (refcount_warn_saturate+0x110/0x15c)\n[ 1946.535309]  r8:c0100224 r7:c0dfcb84 r6:ffffffff r5:c3b84c00 r4:c24a17c0\n[ 1946.546708] [\u003cc04a937c\u003e] (refcount_warn_saturate) from [\u003cc0380134\u003e] (eventfd_ctx_put+0x48/0x74)\n[ 1946.564476] [\u003cc03800ec\u003e] (eventfd_ctx_put) from [\u003cbf5464e8\u003e] (ffs_data_clear+0xd0/0x118 [usb_f_fs])\n[ 1946.582664]  r5:c3b84c00 r4:c2695b00\n[ 1946.590668] [\u003cbf546418\u003e] (ffs_data_clear [usb_f_fs]) from [\u003cbf547cc0\u003e] (ffs_data_closed+0x9c/0x150 [usb_f_fs])\n[ 1946.609608]  r5:bf54d014 r4:c2695b00\n[ 1946.617522] [\u003cbf547c24\u003e] (ffs_data_closed [usb_f_fs]) from [\u003cbf547da0\u003e] (ffs_fs_kill_sb+0x2c/0x30 [usb_f_fs])\n[ 1946.636217]  r7:c0dfcb\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: validate user data in compat ioctl\n\nWrong user data may cause warning in i2c_transfer(), ex: zero msgs.\nUserspace should not be able to trigger warnings, so this patch adds\nvalidation checks for user data in compact ioctl to prevent reported\nwarnings",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-46936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix use-after-free in tw_timer_handler\n\nA real world panic issue was found as follow in Linux 5.4.\n\n    BUG: unable to handle page fault for address: ffffde49a863de28\n    PGD 7e6fe62067 P4D 7e6fe62067 PUD 7e6fe63067 PMD f51e064067 PTE 0\n    RIP: 0010:tw_timer_handler+0x20/0x40\n    Call Trace:\n     \u003cIRQ\u003e\n     call_timer_fn+0x2b/0x120\n     run_timer_softirq+0x1ef/0x450\n     __do_softirq+0x10d/0x2b8\n     irq_exit+0xc7/0xd0\n     smp_apic_timer_interrupt+0x68/0x120\n     apic_timer_interrupt+0xf/0x20\n\nThis issue was also reported since 2017 in the thread [1],\nunfortunately, the issue was still can be reproduced after fixing\nDCCP.\n\nThe ipv4_mib_exit_net is called before tcp_sk_exit_batch when a net\nnamespace is destroyed since tcp_sk_ops is registered befrore\nipv4_mib_ops, which means tcp_sk_ops is in the front of ipv4_mib_ops\nin the list of pernet_list. There will be a use-after-free on\nnet-\u003emib.net_statistics in tw_timer_handler after ipv4_mib_exit_net\nif there are some inflight time-wait timers.\n\nThis bug is not introduced by commit f2bf415cfed7 (\"mib: add net to\nNET_ADD_STATS_BH\") since the net_statistics is a global variable\ninstead of dynamic allocation and freeing. Actually, commit\n61a7e26028b9 (\"mib: put net statistics on struct net\") introduces\nthe bug since it put net statistics on struct net and free it when\nnet namespace is destroyed.\n\nMoving init_ipv4_mibs() to the front of tcp_init() to fix this bug\nand replace pr_crit() with panic() since continuing is meaningless\nwhen init_ipv4_mibs() fails.\n\n[1] https://groups.google.com/g/syzkaller/c/p1tn-_Kc6l4/m/smuL_FMAAgAJ?pli=1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47047",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-zynqmp-gqspi: return -ENOMEM if dma_map_single fails\n\nThe spi controller supports 44-bit address space on AXI in DMA mode,\nso set dma_addr_t width to 44-bit to avoid using a swiotlb mapping.\nIn addition, if dma_map_single fails, it should return immediately\ninstead of continuing doing the DMA operation which bases on invalid\naddress.\n\nThis fixes the following crash which occurs in reading a big block\nfrom flash:\n\n[  123.633577] zynqmp-qspi ff0f0000.spi: swiotlb buffer is full (sz: 4194304 bytes), total 32768 (slots), used 0 (slots)\n[  123.644230] zynqmp-qspi ff0f0000.spi: ERR:rxdma:memory not mapped\n[  123.784625] Unable to handle kernel paging request at virtual address 00000000003fffc0\n[  123.792536] Mem abort info:\n[  123.795313]   ESR = 0x96000145\n[  123.798351]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  123.803655]   SET = 0, FnV = 0\n[  123.806693]   EA = 0, S1PTW = 0\n[  123.809818] Data abort info:\n[  123.812683]   ISV = 0, ISS = 0x00000145\n[  123.816503]   CM = 1, WnR = 1\n[  123.819455] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000805047000\n[  123.825887] [00000000003fffc0] pgd=0000000803b45003, p4d=0000000803b45003, pud=0000000000000000\n[  123.834586] Internal error: Oops: 96000145 [#1] PREEMPT SMP",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: mediatek: fix global-out-of-bounds issue\n\nWhen eint virtual eint number is greater than gpio number,\nit maybe produce 'desc[eint_n]' size globle-out-of-bounds issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47087",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntee: optee: Fix incorrect page free bug\n\nPointer to the allocated pages (struct page *page) has already\nprogressed towards the end of allocation. It is incorrect to perform\n__free_pages(page, order) using this pointer as we would free any\narbitrary pages. Fix this by stop modifying the page pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47091",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: fix locking in ieee80211_start_ap error path\n\nWe need to hold the local-\u003emtx to release the channel context,\nas even encoded by the lockdep_assert_held() there. Fix it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: intel_pmc_core: fix memleak on registration failure\n\nIn case device registration fails during module initialisation, the\nplatform device structure needs to be freed using platform_device_put()\nto properly free all resources (e.g. the device name).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47094",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: Don't advance iterator after restart due to yielding\n\nAfter dropping mmu_lock in the TDP MMU, restart the iterator during\ntdp_iter_next() and do not advance the iterator.  Advancing the iterator\nresults in skipping the top-level SPTE and all its children, which is\nfatal if any of the skipped SPTEs were not visited before yielding.\n\nWhen zapping all SPTEs, i.e. when min_level == root_level, restarting the\niter and then invoking tdp_iter_next() is always fatal if the current gfn\nhas as a valid SPTE, as advancing the iterator results in try_step_side()\nskipping the current gfn, which wasn't visited before yielding.\n\nSprinkle WARNs on iter-\u003eyielded being true in various helpers that are\noften used in conjunction with yielding, and tag the helper with\n__must_check to reduce the probabily of improper usage.\n\nFailing to zap a top-level SPTE manifests in one of two ways.  If a valid\nSPTE is skipped by both kvm_tdp_mmu_zap_all() and kvm_tdp_mmu_put_root(),\nthe shadow page will be leaked and KVM will WARN accordingly.\n\n  WARNING: CPU: 1 PID: 3509 at arch/x86/kvm/mmu/tdp_mmu.c:46 [kvm]\n  RIP: 0010:kvm_mmu_uninit_tdp_mmu+0x3e/0x50 [kvm]\n  Call Trace:\n   \u003cTASK\u003e\n   kvm_arch_destroy_vm+0x130/0x1b0 [kvm]\n   kvm_destroy_vm+0x162/0x2a0 [kvm]\n   kvm_vcpu_release+0x34/0x60 [kvm]\n   __fput+0x82/0x240\n   task_work_run+0x5c/0x90\n   do_exit+0x364/0xa10\n   ? futex_unqueue+0x38/0x60\n   do_group_exit+0x33/0xa0\n   get_signal+0x155/0x850\n   arch_do_signal_or_restart+0xed/0x750\n   exit_to_user_mode_prepare+0xc5/0x120\n   syscall_exit_to_user_mode+0x1d/0x40\n   do_syscall_64+0x48/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nIf kvm_tdp_mmu_zap_all() skips a gfn/SPTE but that SPTE is then zapped by\nkvm_tdp_mmu_put_root(), KVM triggers a use-after-free in the form of\nmarking a struct page as dirty/accessed after it has been put back on the\nfree list.  This directly triggers a WARN due to encountering a page with\npage_count() == 0, but it can also lead to data corruption and additional\nerrors in the kernel.\n\n  WARNING: CPU: 7 PID: 1995658 at arch/x86/kvm/../../../virt/kvm/kvm_main.c:171\n  RIP: 0010:kvm_is_zone_device_pfn.part.0+0x9e/0xd0 [kvm]\n  Call Trace:\n   \u003cTASK\u003e\n   kvm_set_pfn_dirty+0x120/0x1d0 [kvm]\n   __handle_changed_spte+0x92e/0xca0 [kvm]\n   __handle_changed_spte+0x63c/0xca0 [kvm]\n   __handle_changed_spte+0x63c/0xca0 [kvm]\n   __handle_changed_spte+0x63c/0xca0 [kvm]\n   zap_gfn_range+0x549/0x620 [kvm]\n   kvm_tdp_mmu_put_root+0x1b6/0x270 [kvm]\n   mmu_free_root_page+0x219/0x2c0 [kvm]\n   kvm_mmu_free_roots+0x1b4/0x4e0 [kvm]\n   kvm_mmu_unload+0x1c/0xa0 [kvm]\n   kvm_arch_destroy_vm+0x1f2/0x5c0 [kvm]\n   kvm_put_kvm+0x3b1/0x8b0 [kvm]\n   kvm_vcpu_release+0x4e/0x70 [kvm]\n   __fput+0x1f7/0x8c0\n   task_work_run+0xf8/0x1a0\n   do_exit+0x97b/0x2230\n   do_group_exit+0xda/0x2a0\n   get_signal+0x3be/0x1e50\n   arch_do_signal_or_restart+0x244/0x17f0\n   exit_to_user_mode_prepare+0xcb/0x120\n   syscall_exit_to_user_mode+0x1d/0x40\n   do_syscall_64+0x4d/0x90\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nNote, the underlying bug existed even before commit 1af4a96025b3 (\"KVM:\nx86/mmu: Yield in TDU MMU iter even if no SPTES changed\") moved calls to\ntdp_mmu_iter_cond_resched() to the beginning of loops, as KVM could still\nincorrectly advance past a top-level entry when yielding on a lower-level\nentry.  But with respect to leaking shadow pages, the bug was introduced\nby yielding before processing the current gfn.\n\nAlternatively, tdp_mmu_iter_cond_resched() could simply fall through, or\ncallers could jump to their \"retry\" label.  The downside of that approach\nis that tdp_mmu_iter_cond_resched() _must_ be called before anything else\nin the loop, and there's no easy way to enfornce that requirement.\n\nIdeally, KVM would handling the cond_resched() fully within the iterator\nmacro (the code is actually quite clean) and avoid this entire class of\nbugs, but that is extremely difficult do wh\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47095",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipmi: ssif: initialize ssif_info-\u003eclient early\n\nDuring probe ssif_info-\u003eclient is dereferenced in error path. However,\nit is set when some of the error checking has already been done. This\ncauses following kernel crash if an error path is taken:\n\n[   30.645593][  T674] ipmi_ssif 0-000e: ipmi_ssif: Not probing, Interface already present\n[   30.657616][  T674] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000088\n...\n[   30.657723][  T674] pc : __dev_printk+0x28/0xa0\n[   30.657732][  T674] lr : _dev_err+0x7c/0xa0\n...\n[   30.657772][  T674] Call trace:\n[   30.657775][  T674]  __dev_printk+0x28/0xa0\n[   30.657778][  T674]  _dev_err+0x7c/0xa0\n[   30.657781][  T674]  ssif_probe+0x548/0x900 [ipmi_ssif 62ce4b08badc1458fd896206d9ef69a3c31f3d3e]\n[   30.657791][  T674]  i2c_device_probe+0x37c/0x3c0\n...\n\nInitialize ssif_info-\u003eclient before any error path can be taken. Clear\ni2c_client data in the error path to prevent the dangling pointer from\nleaking.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47096",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: rawmidi - fix the uninitalized user_pversion\n\nThe user_pversion was uninitialized for the user space file structure\nin the open function, because the file private structure use\nkmalloc for the allocation.\n\nThe kernel ALSA sequencer code clears the file structure, so no additional\nfixes are required.\n\nBugLink: https://github.com/alsa-project/alsa-lib/issues/178",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: elantech - fix stack out of bound access in elantech_change_report_id()\n\nThe array param[] in elantech_change_report_id() must be at least 3\nbytes, because elantech_read_reg_params() is calling ps2_command() with\nPSMOUSE_CMD_GETINFO, that is going to access 3 bytes from param[], but\nit's defined in the stack as an array of 2 bytes, therefore we have a\npotential stack out-of-bounds access here, also confirmed by KASAN:\n\n[    6.512374] BUG: KASAN: stack-out-of-bounds in __ps2_command+0x372/0x7e0\n[    6.512397] Read of size 1 at addr ffff8881024d77c2 by task kworker/2:1/118\n\n[    6.512416] CPU: 2 PID: 118 Comm: kworker/2:1 Not tainted 5.13.0-22-generic #22+arighi20211110\n[    6.512428] Hardware name: LENOVO 20T8000QGE/20T8000QGE, BIOS R1AET32W (1.08 ) 08/14/2020\n[    6.512436] Workqueue: events_long serio_handle_event\n[    6.512453] Call Trace:\n[    6.512462]  show_stack+0x52/0x58\n[    6.512474]  dump_stack+0xa1/0xd3\n[    6.512487]  print_address_description.constprop.0+0x1d/0x140\n[    6.512502]  ? __ps2_command+0x372/0x7e0\n[    6.512516]  __kasan_report.cold+0x7d/0x112\n[    6.512527]  ? _raw_write_lock_irq+0x20/0xd0\n[    6.512539]  ? __ps2_command+0x372/0x7e0\n[    6.512552]  kasan_report+0x3c/0x50\n[    6.512564]  __asan_load1+0x6a/0x70\n[    6.512575]  __ps2_command+0x372/0x7e0\n[    6.512589]  ? ps2_drain+0x240/0x240\n[    6.512601]  ? dev_printk_emit+0xa2/0xd3\n[    6.512612]  ? dev_vprintk_emit+0xc5/0xc5\n[    6.512621]  ? __kasan_check_write+0x14/0x20\n[    6.512634]  ? mutex_lock+0x8f/0xe0\n[    6.512643]  ? __mutex_lock_slowpath+0x20/0x20\n[    6.512655]  ps2_command+0x52/0x90\n[    6.512670]  elantech_ps2_command+0x4f/0xc0 [psmouse]\n[    6.512734]  elantech_change_report_id+0x1e6/0x256 [psmouse]\n[    6.512799]  ? elantech_report_trackpoint.constprop.0.cold+0xd/0xd [psmouse]\n[    6.512863]  ? ps2_command+0x7f/0x90\n[    6.512877]  elantech_query_info.cold+0x6bd/0x9ed [psmouse]\n[    6.512943]  ? elantech_setup_ps2+0x460/0x460 [psmouse]\n[    6.513005]  ? psmouse_reset+0x69/0xb0 [psmouse]\n[    6.513064]  ? psmouse_attr_set_helper+0x2a0/0x2a0 [psmouse]\n[    6.513122]  ? phys_pmd_init+0x30e/0x521\n[    6.513137]  elantech_init+0x8a/0x200 [psmouse]\n[    6.513200]  ? elantech_init_ps2+0xf0/0xf0 [psmouse]\n[    6.513249]  ? elantech_query_info+0x440/0x440 [psmouse]\n[    6.513296]  ? synaptics_send_cmd+0x60/0x60 [psmouse]\n[    6.513342]  ? elantech_query_info+0x440/0x440 [psmouse]\n[    6.513388]  ? psmouse_try_protocol+0x11e/0x170 [psmouse]\n[    6.513432]  psmouse_extensions+0x65d/0x6e0 [psmouse]\n[    6.513476]  ? psmouse_try_protocol+0x170/0x170 [psmouse]\n[    6.513519]  ? mutex_unlock+0x22/0x40\n[    6.513526]  ? ps2_command+0x7f/0x90\n[    6.513536]  ? psmouse_probe+0xa3/0xf0 [psmouse]\n[    6.513580]  psmouse_switch_protocol+0x27d/0x2e0 [psmouse]\n[    6.513624]  psmouse_connect+0x272/0x530 [psmouse]\n[    6.513669]  serio_driver_probe+0x55/0x70\n[    6.513679]  really_probe+0x190/0x720\n[    6.513689]  driver_probe_device+0x160/0x1f0\n[    6.513697]  device_driver_attach+0x119/0x130\n[    6.513705]  ? device_driver_attach+0x130/0x130\n[    6.513713]  __driver_attach+0xe7/0x1a0\n[    6.513720]  ? device_driver_attach+0x130/0x130\n[    6.513728]  bus_for_each_dev+0xfb/0x150\n[    6.513738]  ? subsys_dev_iter_exit+0x10/0x10\n[    6.513748]  ? _raw_write_unlock_bh+0x30/0x30\n[    6.513757]  driver_attach+0x2d/0x40\n[    6.513764]  serio_handle_event+0x199/0x3d0\n[    6.513775]  process_one_work+0x471/0x740\n[    6.513785]  worker_thread+0x2d2/0x790\n[    6.513794]  ? process_one_work+0x740/0x740\n[    6.513802]  kthread+0x1b4/0x1e0\n[    6.513809]  ? set_kthread_struct+0x80/0x80\n[    6.513816]  ret_from_fork+0x22/0x30\n\n[    6.513832] The buggy address belongs to the page:\n[    6.513838] page:00000000bc35e189 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1024d7\n[    6.513847] flags: 0x17ffffc0000000(node=0|zone=2|lastcpupid=0x1fffff)\n[    6.513860] raw: 0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47098",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (lm90) Prevent integer overflow/underflow in hysteresis calculations\n\nCommit b50aa49638c7 (\"hwmon: (lm90) Prevent integer underflows of\ntemperature calculations\") addressed a number of underflow situations\nwhen writing temperature limits. However, it missed one situation, seen\nwhen an attempt is made to set the hysteresis value to MAX_LONG and the\ncritical temperature limit is negative.\n\nUse clamp_val() when setting the hysteresis temperature to ensure that\nthe provided value can never overflow or underflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47099",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nveth: ensure skb entering GRO are not cloned.\n\nAfter commit d3256efd8e8b (\"veth: allow enabling NAPI even without XDP\"),\nif GRO is enabled on a veth device and TSO is disabled on the peer\ndevice, TCP skbs will go through the NAPI callback. If there is no XDP\nprogram attached, the veth code does not perform any share check, and\nshared/cloned skbs could enter the GRO engine.\n\nIgnat reported a BUG triggered later-on due to the above condition:\n\n[   53.970529][    C1] kernel BUG at net/core/skbuff.c:3574!\n[   53.981755][    C1] invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\n[   53.982634][    C1] CPU: 1 PID: 19 Comm: ksoftirqd/1 Not tainted 5.16.0-rc5+ #25\n[   53.982634][    C1] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n[   53.982634][    C1] RIP: 0010:skb_shift+0x13ef/0x23b0\n[   53.982634][    C1] Code: ea 03 0f b6 04 02 48 89 fa 83 e2 07 38 d0\n7f 08 84 c0 0f 85 41 0c 00 00 41 80 7f 02 00 4d 8d b5 d0 00 00 00 0f\n85 74 f5 ff ff \u003c0f\u003e 0b 4d 8d 77 20 be 04 00 00 00 4c 89 44 24 78 4c 89\nf7 4c 89 8c\n[   53.982634][    C1] RSP: 0018:ffff8881008f7008 EFLAGS: 00010246\n[   53.982634][    C1] RAX: 0000000000000000 RBX: ffff8881180b4c80 RCX: 0000000000000000\n[   53.982634][    C1] RDX: 0000000000000002 RSI: ffff8881180b4d3c RDI: ffff88810bc9cac2\n[   53.982634][    C1] RBP: ffff8881008f70b8 R08: ffff8881180b4cf4 R09: ffff8881180b4cf0\n[   53.982634][    C1] R10: ffffed1022999e5c R11: 0000000000000002 R12: 0000000000000590\n[   53.982634][    C1] R13: ffff88810f940c80 R14: ffff88810f940d50 R15: ffff88810bc9cac0\n[   53.982634][    C1] FS:  0000000000000000(0000) GS:ffff888235880000(0000) knlGS:0000000000000000\n[   53.982634][    C1] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   53.982634][    C1] CR2: 00007ff5f9b86680 CR3: 0000000108ce8004 CR4: 0000000000170ee0\n[   53.982634][    C1] Call Trace:\n[   53.982634][    C1]  \u003cTASK\u003e\n[   53.982634][    C1]  tcp_sacktag_walk+0xaba/0x18e0\n[   53.982634][    C1]  tcp_sacktag_write_queue+0xe7b/0x3460\n[   53.982634][    C1]  tcp_ack+0x2666/0x54b0\n[   53.982634][    C1]  tcp_rcv_established+0x4d9/0x20f0\n[   53.982634][    C1]  tcp_v4_do_rcv+0x551/0x810\n[   53.982634][    C1]  tcp_v4_rcv+0x22ed/0x2ed0\n[   53.982634][    C1]  ip_protocol_deliver_rcu+0x96/0xaf0\n[   53.982634][    C1]  ip_local_deliver_finish+0x1e0/0x2f0\n[   53.982634][    C1]  ip_sublist_rcv_finish+0x211/0x440\n[   53.982634][    C1]  ip_list_rcv_finish.constprop.0+0x424/0x660\n[   53.982634][    C1]  ip_list_rcv+0x2c8/0x410\n[   53.982634][    C1]  __netif_receive_skb_list_core+0x65c/0x910\n[   53.982634][    C1]  netif_receive_skb_list_internal+0x5f9/0xcb0\n[   53.982634][    C1]  napi_complete_done+0x188/0x6e0\n[   53.982634][    C1]  gro_cell_poll+0x10c/0x1d0\n[   53.982634][    C1]  __napi_poll+0xa1/0x530\n[   53.982634][    C1]  net_rx_action+0x567/0x1270\n[   53.982634][    C1]  __do_softirq+0x28a/0x9ba\n[   53.982634][    C1]  run_ksoftirqd+0x32/0x60\n[   53.982634][    C1]  smpboot_thread_fn+0x559/0x8c0\n[   53.982634][    C1]  kthread+0x3b9/0x490\n[   53.982634][    C1]  ret_from_fork+0x22/0x30\n[   53.982634][    C1]  \u003c/TASK\u003e\n\nAddress the issue by skipping the GRO stage for shared or cloned skbs.\nTo reduce the chance of OoO, try to unclone the skbs before giving up.\n\nv1 -\u003e v2:\n - use avoid skb_copy and fallback to netif_receive_skb  - Eric",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipmi: Fix UAF when uninstall ipmi_si and ipmi_msghandler module\n\nHi,\n\nWhen testing install and uninstall of ipmi_si.ko and ipmi_msghandler.ko,\nthe system crashed.\n\nThe log as follows:\n[  141.087026] BUG: unable to handle kernel paging request at ffffffffc09b3a5a\n[  141.087241] PGD 8fe4c0d067 P4D 8fe4c0d067 PUD 8fe4c0f067 PMD 103ad89067 PTE 0\n[  141.087464] Oops: 0010 [#1] SMP NOPTI\n[  141.087580] CPU: 67 PID: 668 Comm: kworker/67:1 Kdump: loaded Not tainted 4.18.0.x86_64 #47\n[  141.088009] Workqueue: events 0xffffffffc09b3a40\n[  141.088009] RIP: 0010:0xffffffffc09b3a5a\n[  141.088009] Code: Bad RIP value.\n[  141.088009] RSP: 0018:ffffb9094e2c3e88 EFLAGS: 00010246\n[  141.088009] RAX: 0000000000000000 RBX: ffff9abfdb1f04a0 RCX: 0000000000000000\n[  141.088009] RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\n[  141.088009] RBP: 0000000000000000 R08: ffff9abfffee3cb8 R09: 00000000000002e1\n[  141.088009] R10: ffffb9094cb73d90 R11: 00000000000f4240 R12: ffff9abfffee8700\n[  141.088009] R13: 0000000000000000 R14: ffff9abfdb1f04a0 R15: ffff9abfdb1f04a8\n[  141.088009] FS:  0000000000000000(0000) GS:ffff9abfffec0000(0000) knlGS:0000000000000000\n[  141.088009] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  141.088009] CR2: ffffffffc09b3a30 CR3: 0000008fe4c0a001 CR4: 00000000007606e0\n[  141.088009] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  141.088009] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  141.088009] PKRU: 55555554\n[  141.088009] Call Trace:\n[  141.088009]  ? process_one_work+0x195/0x390\n[  141.088009]  ? worker_thread+0x30/0x390\n[  141.088009]  ? process_one_work+0x390/0x390\n[  141.088009]  ? kthread+0x10d/0x130\n[  141.088009]  ? kthread_flush_work_fn+0x10/0x10\n[  141.088009]  ? ret_from_fork+0x35/0x40] BUG: unable to handle kernel paging request at ffffffffc0b28a5a\n[  200.223240] PGD 97fe00d067 P4D 97fe00d067 PUD 97fe00f067 PMD a580cbf067 PTE 0\n[  200.223464] Oops: 0010 [#1] SMP NOPTI\n[  200.223579] CPU: 63 PID: 664 Comm: kworker/63:1 Kdump: loaded Not tainted 4.18.0.x86_64 #46\n[  200.224008] Workqueue: events 0xffffffffc0b28a40\n[  200.224008] RIP: 0010:0xffffffffc0b28a5a\n[  200.224008] Code: Bad RIP value.\n[  200.224008] RSP: 0018:ffffbf3c8e2a3e88 EFLAGS: 00010246\n[  200.224008] RAX: 0000000000000000 RBX: ffffa0799ad6bca0 RCX: 0000000000000000\n[  200.224008] RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\n[  200.224008] RBP: 0000000000000000 R08: ffff9fe43fde3cb8 R09: 00000000000000d5\n[  200.224008] R10: ffffbf3c8cb53d90 R11: 00000000000f4240 R12: ffff9fe43fde8700\n[  200.224008] R13: 0000000000000000 R14: ffffa0799ad6bca0 R15: ffffa0799ad6bca8\n[  200.224008] FS:  0000000000000000(0000) GS:ffff9fe43fdc0000(0000) knlGS:0000000000000000\n[  200.224008] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  200.224008] CR2: ffffffffc0b28a30 CR3: 00000097fe00a002 CR4: 00000000007606e0\n[  200.224008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  200.224008] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  200.224008] PKRU: 55555554\n[  200.224008] Call Trace:\n[  200.224008]  ? process_one_work+0x195/0x390\n[  200.224008]  ? worker_thread+0x30/0x390\n[  200.224008]  ? process_one_work+0x390/0x390\n[  200.224008]  ? kthread+0x10d/0x130\n[  200.224008]  ? kthread_flush_work_fn+0x10/0x10\n[  200.224008]  ? ret_from_fork+0x35/0x40\n[  200.224008] kernel fault(0x1) notification starting on CPU 63\n[  200.224008] kernel fault(0x1) notification finished on CPU 63\n[  200.224008] CR2: ffffffffc0b28a5a\n[  200.224008] ---[ end trace c82a412d93f57412 ]---\n\nThe reason is as follows:\nT1: rmmod ipmi_si.\n    -\u003eipmi_unregister_smi()\n        -\u003e ipmi_bmc_unregister()\n            -\u003e __ipmi_bmc_unregister()\n                -\u003e kref_put(\u0026bmc-\u003eusecount, cleanup_bmc_device);\n                    -\u003e schedule_work(\u0026bmc-\u003eremove_work);\n\nT2: rmmod ipmi_msghandl\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nasix: fix uninit-value in asix_mdio_read()\n\nasix_read_cmd() may read less than sizeof(smsr) bytes and in this case\nsmsr will be uninitialized.\n\nFail log:\nBUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]\nBUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497\nBUG: KMSAN: uninit-value in asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497\n asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]\n asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497\n asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47102",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: marvell: prestera: fix incorrect structure access\n\nIn line:\n\tupper = info-\u003eupper_dev;\nWe access upper_dev field, which is related only for particular events\n(e.g. event == NETDEV_CHANGEUPPER). So, this line cause invalid memory\naccess for another events,\nwhen ptr is not netdev_notifier_changeupper_info.\n\nThe KASAN logs are as follows:\n\n[   30.123165] BUG: KASAN: stack-out-of-bounds in prestera_netdev_port_event.constprop.0+0x68/0x538 [prestera]\n[   30.133336] Read of size 8 at addr ffff80000cf772b0 by task udevd/778\n[   30.139866]\n[   30.141398] CPU: 0 PID: 778 Comm: udevd Not tainted 5.16.0-rc3 #6\n[   30.147588] Hardware name: DNI AmazonGo1 A7040 board (DT)\n[   30.153056] Call trace:\n[   30.155547]  dump_backtrace+0x0/0x2c0\n[   30.159320]  show_stack+0x18/0x30\n[   30.162729]  dump_stack_lvl+0x68/0x84\n[   30.166491]  print_address_description.constprop.0+0x74/0x2b8\n[   30.172346]  kasan_report+0x1e8/0x250\n[   30.176102]  __asan_load8+0x98/0xe0\n[   30.179682]  prestera_netdev_port_event.constprop.0+0x68/0x538 [prestera]\n[   30.186847]  prestera_netdev_event_handler+0x1b4/0x1c0 [prestera]\n[   30.193313]  raw_notifier_call_chain+0x74/0xa0\n[   30.197860]  call_netdevice_notifiers_info+0x68/0xc0\n[   30.202924]  register_netdevice+0x3cc/0x760\n[   30.207190]  register_netdev+0x24/0x50\n[   30.211015]  prestera_device_register+0x8a0/0xba0 [prestera]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/qib: Fix memory leak in qib_user_sdma_queue_pkts()\n\nThe wrong goto label was used for the error case and missed cleanup of the\npkt allocation.\n\nAddresses-Coverity-ID: 1493352 (\"Resource leak\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47105",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: xsk: return xsk buffers back to pool when cleaning the ring\n\nCurrently we only NULL the xdp_buff pointer in the internal SW ring but\nwe never give it back to the xsk buffer pool. This means that buffers\ncan be leaked out of the buff pool and never be used again.\n\nAdd missing xsk_buff_free() call to the routine that is supposed to\nclean the entries that are left in the ring so that these buffers in the\numem can be used by other sockets.\n\nAlso, only go through the space that is actually left to be cleaned\ninstead of a whole ring.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47107",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix READDIR buffer overflow\n\nIf a client sends a READDIR count argument that is too small (say,\nzero), then the buffer size calculation in the new init_dirlist\nhelper functions results in an underflow, allowing the XDR stream\nfunctions to write beyond the actual buffer.\n\nThis calculation has always been suspect. NFSD has never sanity-\nchecked the READDIR count argument, but the old entry encoders\nmanaged the problem correctly.\n\nWith the commits below, entry encoding changed, exposing the\nunderflow to the pointer arithmetic in xdr_reserve_space().\n\nModern NFS clients attempt to retrieve as much data as possible\nfor each READDIR request. Also, we have no unit tests that\nexercise the behavior of READDIR at the lower bound of @count\nvalues. Thus this case was missed during testing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47108",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: hdmi: Perform NULL pointer check for mtk_hdmi_conf\n\nIn commit 41ca9caaae0b\n(\"drm/mediatek: hdmi: Add check for CEA modes only\") a check\nfor CEA modes was added to function mtk_hdmi_bridge_mode_valid()\nin order to address possible issues on MT8167;\nmoreover, with commit c91026a938c2\n(\"drm/mediatek: hdmi: Add optional limit on maximal HDMI mode clock\")\nanother similar check was introduced.\n\nUnfortunately though, at the time of writing, MT8173 does not provide\nany mtk_hdmi_conf structure and this is crashing the kernel with NULL\npointer upon entering mtk_hdmi_bridge_mode_valid(), which happens as\nsoon as a HDMI cable gets plugged in.\n\nTo fix this regression, add a NULL pointer check for hdmi-\u003econf in the\nsaid function, restoring HDMI functionality and avoiding NULL pointer\nkernel panics.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47181",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: musb: tusb6010: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47182",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix scsi_mode_sense() buffer length handling\n\nSeveral problems exist with scsi_mode_sense() buffer length handling:\n\n 1) The allocation length field of the MODE SENSE(10) command is 16-bits,\n    occupying bytes 7 and 8 of the CDB. With this command, access to mode\n    pages larger than 255 bytes is thus possible. However, the CDB\n    allocation length field is set by assigning len to byte 8 only, thus\n    truncating buffer length larger than 255.\n\n 2) If scsi_mode_sense() is called with len smaller than 8 with\n    sdev-\u003euse_10_for_ms set, or smaller than 4 otherwise, the buffer length\n    is increased to 8 and 4 respectively, and the buffer is zero filled\n    with these increased values, thus corrupting the memory following the\n    buffer.\n\nFix these 2 problems by using put_unaligned_be16() to set the allocation\nlength field of MODE SENSE(10) CDB and by returning an error when len is\ntoo small.\n\nFurthermore, if len is larger than 255B, always try MODE SENSE(10) first,\neven if the device driver did not set sdev-\u003euse_10_for_ms. In case of\ninvalid opcode error for MODE SENSE(10), access to mode pages larger than\n255 bytes are not retried using MODE SENSE(6). To avoid buffer length\noverflows for the MODE_SENSE(10) case, check that len is smaller than 65535\nbytes.\n\nWhile at it, also fix the folowing:\n\n * Use get_unaligned_be16() to retrieve the mode data length and block\n   descriptor length fields of the mode sense reply header instead of using\n   an open coded calculation.\n\n * Fix the kdoc dbd argument explanation: the DBD bit stands for Disable\n   Block Descriptor, which is the opposite of what the dbd argument\n   description was.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47183",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix link down processing to address NULL pointer dereference\n\nIf an FC link down transition while PLOGIs are outstanding to fabric well\nknown addresses, outstanding ABTS requests may result in a NULL pointer\ndereference. Driver unload requests may hang with repeated \"2878\" log\nmessages.\n\nThe Link down processing results in ABTS requests for outstanding ELS\nrequests. The Abort WQEs are sent for the ELSs before the driver had set\nthe link state to down. Thus the driver is sending the Abort with the\nexpectation that an ABTS will be sent on the wire. The Abort request is\nstalled waiting for the link to come up. In some conditions the driver may\nauto-complete the ELSs thus if the link does come up, the Abort completions\nmay reference an invalid structure.\n\nFix by ensuring that Abort set the flag to avoid link traffic if issued due\nto conditions where the link failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47184",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix NULL ptr dereference on VSI filter sync\n\nRemove the reason of null pointer dereference in sync VSI filters.\nAdded new I40E_VSI_RELEASING flag to signalize deleting and releasing\nof VSI resources to sync this thread with sync filters subtask.\nWithout this patch it is possible to start update the VSI filter list\nafter VSI is removed, that's causing a kernel oops.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47185",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: tty_buffer: Fix the softlockup issue in flush_to_ldisc\n\nWhen running ltp testcase(ltp/testcases/kernel/pty/pty04.c) with arm64, there is a soft lockup,\nwhich look like this one:\n\n  Workqueue: events_unbound flush_to_ldisc\n  Call trace:\n   dump_backtrace+0x0/0x1ec\n   show_stack+0x24/0x30\n   dump_stack+0xd0/0x128\n   panic+0x15c/0x374\n   watchdog_timer_fn+0x2b8/0x304\n   __run_hrtimer+0x88/0x2c0\n   __hrtimer_run_queues+0xa4/0x120\n   hrtimer_interrupt+0xfc/0x270\n   arch_timer_handler_phys+0x40/0x50\n   handle_percpu_devid_irq+0x94/0x220\n   __handle_domain_irq+0x88/0xf0\n   gic_handle_irq+0x84/0xfc\n   el1_irq+0xc8/0x180\n   slip_unesc+0x80/0x214 [slip]\n   tty_ldisc_receive_buf+0x64/0x80\n   tty_port_default_receive_buf+0x50/0x90\n   flush_to_ldisc+0xbc/0x110\n   process_one_work+0x1d4/0x4b0\n   worker_thread+0x180/0x430\n   kthread+0x11c/0x120\n\nIn the testcase pty04, The first process call the write syscall to send\ndata to the pty master. At the same time, the workqueue will do the\nflush_to_ldisc to pop data in a loop until there is no more data left.\nWhen the sender and workqueue running in different core, the sender sends\ndata fastly in full time which will result in workqueue doing work in loop\nfor a long time and occuring softlockup in flush_to_ldisc with kernel\nconfigured without preempt. So I add need_resched check and cond_resched\nin the flush_to_ldisc loop to avoid it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47187",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: dts: qcom: msm8998: Fix CPU/L2 idle state latency and residency\n\nThe entry/exit latency and minimum residency in state for the idle\nstates of MSM8998 were ..bad: first of all, for all of them the\ntimings were written for CPU sleep but the min-residency-us param\nwas miscalculated (supposedly, while porting this from downstream);\nThen, the power collapse states are setting PC on both the CPU\ncluster *and* the L2 cache, which have different timings: in the\nspecific case of L2 the times are higher so these ones should be\ntaken into account instead of the CPU ones.\n\nThis parameter misconfiguration was not giving particular issues\nbecause on MSM8998 there was no CPU scaling at all, so cluster/L2\npower collapse was rarely (if ever) hit.\nWhen CPU scaling is enabled, though, the wrong timings will produce\nSoC unstability shown to the user as random, apparently error-less,\nsudden reboots and/or lockups.\n\nThis set of parameters are stabilizing the SoC when CPU scaling is\nON and when power collapse is frequently hit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47188",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Improve SCSI abort handling\n\nThe following has been observed on a test setup:\n\nWARNING: CPU: 4 PID: 250 at drivers/scsi/ufs/ufshcd.c:2737 ufshcd_queuecommand+0x468/0x65c\nCall trace:\n ufshcd_queuecommand+0x468/0x65c\n scsi_send_eh_cmnd+0x224/0x6a0\n scsi_eh_test_devices+0x248/0x418\n scsi_eh_ready_devs+0xc34/0xe58\n scsi_error_handler+0x204/0x80c\n kthread+0x150/0x1b4\n ret_from_fork+0x10/0x30\n\nThat warning is triggered by the following statement:\n\n\tWARN_ON(lrbp-\u003ecmd);\n\nFix this warning by clearing lrbp-\u003ecmd from the abort handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47189",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix memory ordering between normal and ordered work functions\n\nOrdered work functions aren't guaranteed to be handled by the same thread\nwhich executed the normal work functions. The only way execution between\nnormal/ordered functions is synchronized is via the WORK_DONE_BIT,\nunfortunately the used bitops don't guarantee any ordering whatsoever.\n\nThis manifested as seemingly inexplicable crashes on ARM64, where\nasync_chunk::inode is seen as non-null in async_cow_submit which causes\nsubmit_compressed_extents to be called and crash occurs because\nasync_chunk::inode suddenly became NULL. The call trace was similar to:\n\n    pc : submit_compressed_extents+0x38/0x3d0\n    lr : async_cow_submit+0x50/0xd0\n    sp : ffff800015d4bc20\n\n    \u003cregisters omitted for brevity\u003e\n\n    Call trace:\n     submit_compressed_extents+0x38/0x3d0\n     async_cow_submit+0x50/0xd0\n     run_ordered_work+0xc8/0x280\n     btrfs_work_helper+0x98/0x250\n     process_one_work+0x1f0/0x4ac\n     worker_thread+0x188/0x504\n     kthread+0x110/0x114\n     ret_from_fork+0x10/0x18\n\nFix this by adding respective barrier calls which ensure that all\naccesses preceding setting of WORK_DONE_BIT are strictly ordered before\nsetting the flag. At the same time add a read barrier after reading of\nWORK_DONE_BIT in run_ordered_work which ensures all subsequent loads\nwould be strictly ordered after reading the bit. This in turn ensures\nare all accesses before WORK_DONE_BIT are going to be strictly ordered\nbefore any access that can occur in ordered_func.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47191",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix out-of-bound read in resp_readcap16()\n\nThe following warning was observed running syzkaller:\n\n[ 3813.830724] sg_write: data in/out 65466/242 bytes for SCSI command 0x9e-- guessing data in;\n[ 3813.830724]    program syz-executor not setting count and/or reply_len properly\n[ 3813.836956] ==================================================================\n[ 3813.839465] BUG: KASAN: stack-out-of-bounds in sg_copy_buffer+0x157/0x1e0\n[ 3813.841773] Read of size 4096 at addr ffff8883cf80f540 by task syz-executor/1549\n[ 3813.846612] Call Trace:\n[ 3813.846995]  dump_stack+0x108/0x15f\n[ 3813.847524]  print_address_description+0xa5/0x372\n[ 3813.848243]  kasan_report.cold+0x236/0x2a8\n[ 3813.849439]  check_memory_region+0x240/0x270\n[ 3813.850094]  memcpy+0x30/0x80\n[ 3813.850553]  sg_copy_buffer+0x157/0x1e0\n[ 3813.853032]  sg_copy_from_buffer+0x13/0x20\n[ 3813.853660]  fill_from_dev_buffer+0x135/0x370\n[ 3813.854329]  resp_readcap16+0x1ac/0x280\n[ 3813.856917]  schedule_resp+0x41f/0x1630\n[ 3813.858203]  scsi_debug_queuecommand+0xb32/0x17e0\n[ 3813.862699]  scsi_dispatch_cmd+0x330/0x950\n[ 3813.863329]  scsi_request_fn+0xd8e/0x1710\n[ 3813.863946]  __blk_run_queue+0x10b/0x230\n[ 3813.864544]  blk_execute_rq_nowait+0x1d8/0x400\n[ 3813.865220]  sg_common_write.isra.0+0xe61/0x2420\n[ 3813.871637]  sg_write+0x6c8/0xef0\n[ 3813.878853]  __vfs_write+0xe4/0x800\n[ 3813.883487]  vfs_write+0x17b/0x530\n[ 3813.884008]  ksys_write+0x103/0x270\n[ 3813.886268]  __x64_sys_write+0x77/0xc0\n[ 3813.886841]  do_syscall_64+0x106/0x360\n[ 3813.887415]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nThis issue can be reproduced with the following syzkaller log:\n\nr0 = openat(0xffffffffffffff9c, \u0026(0x7f0000000040)='./file0\\x00', 0x26e1, 0x0)\nr1 = syz_open_procfs(0xffffffffffffffff, \u0026(0x7f0000000000)='fd/3\\x00')\nopen_by_handle_at(r1, \u0026(0x7f00000003c0)=ANY=[@ANYRESHEX], 0x602000)\nr2 = syz_open_dev$sg(\u0026(0x7f0000000000), 0x0, 0x40782)\nwrite$binfmt_aout(r2, \u0026(0x7f0000000340)=ANY=[@ANYBLOB=\"00000000deff000000000000000000000000000000000000000000000000000047f007af9e107a41ec395f1bded7be24277a1501ff6196a83366f4e6362bc0ff2b247f68a972989b094b2da4fb3607fcf611a22dd04310d28c75039d\"], 0x126)\n\nIn resp_readcap16() we get \"int alloc_len\" value -1104926854, and then pass\nthe huge arr_len to fill_from_dev_buffer(), but arr is only 32 bytes. This\nleads to OOB in sg_copy_buffer().\n\nTo solve this issue, define alloc_len as u32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47192",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: sysfs: Fix hang when device state is set via sysfs\n\nThis fixes a regression added with:\n\ncommit f0f82e2476f6 (\"scsi: core: Fix capacity set to zero after\nofflinining device\")\n\nThe problem is that after iSCSI recovery, iscsid will call into the kernel\nto set the dev's state to running, and with that patch we now call\nscsi_rescan_device() with the state_mutex held. If the SCSI error handler\nthread is just starting to test the device in scsi_send_eh_cmnd() then it's\ngoing to try to grab the state_mutex.\n\nWe are then stuck, because when scsi_rescan_device() tries to send its I/O\nscsi_queue_rq() calls -\u003e scsi_host_queue_ready() -\u003e scsi_host_in_recovery()\nwhich will return true (the host state is still in recovery) and I/O will\njust be requeued. scsi_send_eh_cmnd() will then never be able to grab the\nstate_mutex to finish error handling.\n\nTo prevent the deadlock move the rescan-related code to after we drop the\nstate_mutex.\n\nThis also adds a check for if we are already in the running state. This\nprevents extra scans and helps the iscsid case where if the transport class\nhas already onlined the device during its recovery process then we don't\nneed userspace to do it again plus possibly block that daemon.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47193",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Fix memory leak during rmmod\n\nDriver failed to release all memory allocated. This would lead to memory\nleak during driver removal.\n\nProperly free memory when the module is removed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47194",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncfg80211: call cfg80211_stop_ap when switch from P2P_GO type\n\nIf the userspace tools switch from NL80211_IFTYPE_P2P_GO to\nNL80211_IFTYPE_ADHOC via send_msg(NL80211_CMD_SET_INTERFACE), it\ndoes not call the cleanup cfg80211_stop_ap(), this leads to the\ninitialization of in-use data. For example, this path re-init the\nsdata-\u003eassigned_chanctx_list while it is still an element of\nassigned_vifs list, and makes that linked list corrupt.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47195",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: fix use-after-free of the add_lock mutex\n\nCommit 6098475d4cb4 (\"spi: Fix deadlock when adding SPI controllers on\nSPI buses\") introduced a per-controller mutex. But mutex_unlock() of\nsaid lock is called after the controller is already freed:\n\n  spi_unregister_controller(ctlr)\n  -\u003e put_device(\u0026ctlr-\u003edev)\n    -\u003e spi_controller_release(dev)\n  -\u003e mutex_unlock(\u0026ctrl-\u003eadd_lock)\n\nMove the put_device() after the mutex_unlock().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47196",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/core: Set send and receive CQ before forwarding to the driver\n\nPreset both receive and send CQ pointers prior to call to the drivers and\noverwrite it later again till the mlx4 is going to be changed do not\noverwrite ibqp properties.\n\nThis change is needed for mlx5, because in case of QP creation failure, it\nwill go to the path of QP destroy which relies on proper CQ pointers.\n\n BUG: KASAN: use-after-free in create_qp.cold+0x164/0x16e [mlx5_ib]\n Write of size 8 at addr ffff8880064c55c0 by task a.out/246\n\n CPU: 0 PID: 246 Comm: a.out Not tainted 5.15.0+ #291\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n Call Trace:\n  dump_stack_lvl+0x45/0x59\n  print_address_description.constprop.0+0x1f/0x140\n  kasan_report.cold+0x83/0xdf\n  create_qp.cold+0x164/0x16e [mlx5_ib]\n  mlx5_ib_create_qp+0x358/0x28a0 [mlx5_ib]\n  create_qp.part.0+0x45b/0x6a0 [ib_core]\n  ib_create_qp_user+0x97/0x150 [ib_core]\n  ib_uverbs_handler_UVERBS_METHOD_QP_CREATE+0x92c/0x1250 [ib_uverbs]\n  ib_uverbs_cmd_verbs+0x1c38/0x3150 [ib_uverbs]\n  ib_uverbs_ioctl+0x169/0x260 [ib_uverbs]\n  __x64_sys_ioctl+0x866/0x14d0\n  do_syscall_64+0x3d/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\n Allocated by task 246:\n  kasan_save_stack+0x1b/0x40\n  __kasan_kmalloc+0xa4/0xd0\n  create_qp.part.0+0x92/0x6a0 [ib_core]\n  ib_create_qp_user+0x97/0x150 [ib_core]\n  ib_uverbs_handler_UVERBS_METHOD_QP_CREATE+0x92c/0x1250 [ib_uverbs]\n  ib_uverbs_cmd_verbs+0x1c38/0x3150 [ib_uverbs]\n  ib_uverbs_ioctl+0x169/0x260 [ib_uverbs]\n  __x64_sys_ioctl+0x866/0x14d0\n  do_syscall_64+0x3d/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\n Freed by task 246:\n  kasan_save_stack+0x1b/0x40\n  kasan_set_track+0x1c/0x30\n  kasan_set_free_info+0x20/0x30\n  __kasan_slab_free+0x10c/0x150\n  slab_free_freelist_hook+0xb4/0x1b0\n  kfree+0xe7/0x2a0\n  create_qp.part.0+0x52b/0x6a0 [ib_core]\n  ib_create_qp_user+0x97/0x150 [ib_core]\n  ib_uverbs_handler_UVERBS_METHOD_QP_CREATE+0x92c/0x1250 [ib_uverbs]\n  ib_uverbs_cmd_verbs+0x1c38/0x3150 [ib_uverbs]\n  ib_uverbs_ioctl+0x169/0x260 [ib_uverbs]\n  __x64_sys_ioctl+0x866/0x14d0\n  do_syscall_64+0x3d/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47197",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: nullify cq-\u003edbg pointer in mlx5_debug_cq_remove()\n\nPrior to this patch in case mlx5_core_destroy_cq() failed it proceeds\nto rest of destroy operations. mlx5_core_destroy_cq() could be called again\nby user and cause additional call of mlx5_debug_cq_remove().\ncq-\u003edbg was not nullify in previous call and cause the crash.\n\nFix it by nullify cq-\u003edbg pointer after removal.\n\nAlso proceed to destroy operations only if FW return 0\nfor MLX5_CMD_OP_DESTROY_CQ command.\n\ngeneral protection fault, probably for non-canonical address 0x2000300004058: 0000 [#1] SMP PTI\nCPU: 5 PID: 1228 Comm: python Not tainted 5.15.0-rc5_for_upstream_min_debug_2021_10_14_11_06 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nRIP: 0010:lockref_get+0x1/0x60\nCode: 5d e9 53 ff ff ff 48 8d 7f 70 e8 0a 2e 48 00 c7 85 d0 00 00 00 02\n00 00 00 c6 45 70 00 fb 5d c3 c3 cc cc cc cc cc cc cc cc 53 \u003c48\u003e 8b 17\n48 89 fb 85 d2 75 3d 48 89 d0 bf 64 00 00 00 48 89 c1 48\nRSP: 0018:ffff888137dd7a38 EFLAGS: 00010206\nRAX: 0000000000000000 RBX: ffff888107d5f458 RCX: 00000000fffffffe\nRDX: 000000000002c2b0 RSI: ffffffff8155e2e0 RDI: 0002000300004058\nRBP: ffff888137dd7a88 R08: 0002000300004058 R09: ffff8881144a9f88\nR10: 0000000000000000 R11: 0000000000000000 R12: ffff8881141d4000\nR13: ffff888137dd7c68 R14: ffff888137dd7d58 R15: ffff888137dd7cc0\nFS:  00007f4644f2a4c0(0000) GS:ffff8887a2d40000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055b4500f4380 CR3: 0000000114f7a003 CR4: 0000000000170ea0\nCall Trace:\n  simple_recursive_removal+0x33/0x2e0\n  ? debugfs_remove+0x60/0x60\n  debugfs_remove+0x40/0x60\n  mlx5_debug_cq_remove+0x32/0x70 [mlx5_core]\n  mlx5_core_destroy_cq+0x41/0x1d0 [mlx5_core]\n  devx_obj_cleanup+0x151/0x330 [mlx5_ib]\n  ? __pollwait+0xd0/0xd0\n  ? xas_load+0x5/0x70\n  ? xa_load+0x62/0xa0\n  destroy_hw_idr_uobject+0x20/0x80 [ib_uverbs]\n  uverbs_destroy_uobject+0x3b/0x360 [ib_uverbs]\n  uobj_destroy+0x54/0xa0 [ib_uverbs]\n  ib_uverbs_cmd_verbs+0xaf2/0x1160 [ib_uverbs]\n  ? uverbs_finalize_object+0xd0/0xd0 [ib_uverbs]\n  ib_uverbs_ioctl+0xc4/0x1b0 [ib_uverbs]\n  __x64_sys_ioctl+0x3e4/0x8e0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47198",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix use-after-free in lpfc_unreg_rpi() routine\n\nAn error is detected with the following report when unloading the driver:\n  \"KASAN: use-after-free in lpfc_unreg_rpi+0x1b1b\"\n\nThe NLP_REG_LOGIN_SEND nlp_flag is set in lpfc_reg_fab_ctrl_node(), but the\nflag is not cleared upon completion of the login.\n\nThis allows a second call to lpfc_unreg_rpi() to proceed with nlp_rpi set\nto LPFC_RPI_ALLOW_ERROR.  This results in a use after free access when used\nas an rpi_ids array index.\n\nFix by clearing the NLP_REG_LOGIN_SEND nlp_flag in\nlpfc_mbx_cmpl_fc_reg_login().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47199",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: CT, Fix multiple allocations and memleak of mod acts\n\nCT clear action offload adds additional mod hdr actions to the\nflow's original mod actions in order to clear the registers which\nhold ct_state.\nWhen such flow also includes encap action, a neigh update event\ncan cause the driver to unoffload the flow and then reoffload it.\n\nEach time this happens, the ct clear handling adds that same set\nof mod hdr actions to reset ct_state until the max of mod hdr\nactions is reached.\n\nAlso the driver never releases the allocated mod hdr actions and\ncausing a memleak.\n\nFix above two issues by moving CT clear mod acts allocation\ninto the parsing actions phase and only use it when offloading the rule.\nThe release of mod acts will be done in the normal flow_put().\n\n backtrace:\n    [\u003c000000007316e2f3\u003e] krealloc+0x83/0xd0\n    [\u003c00000000ef157de1\u003e] mlx5e_mod_hdr_alloc+0x147/0x300 [mlx5_core]\n    [\u003c00000000970ce4ae\u003e] mlx5e_tc_match_to_reg_set_and_get_id+0xd7/0x240 [mlx5_core]\n    [\u003c0000000067c5fa17\u003e] mlx5e_tc_match_to_reg_set+0xa/0x20 [mlx5_core]\n    [\u003c00000000d032eb98\u003e] mlx5_tc_ct_entry_set_registers.isra.0+0x36/0xc0 [mlx5_core]\n    [\u003c00000000fd23b869\u003e] mlx5_tc_ct_flow_offload+0x272/0x1f10 [mlx5_core]\n    [\u003c000000004fc24acc\u003e] mlx5e_tc_offload_fdb_rules.part.0+0x150/0x620 [mlx5_core]\n    [\u003c00000000dc741c17\u003e] mlx5e_tc_encap_flows_add+0x489/0x690 [mlx5_core]\n    [\u003c00000000e92e49d7\u003e] mlx5e_rep_update_flows+0x6e4/0x9b0 [mlx5_core]\n    [\u003c00000000f60f5602\u003e] mlx5e_rep_neigh_update+0x39a/0x5d0 [mlx5_core]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47200",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/prime: Fix use after free in mmap with drm_gem_ttm_mmap\n\ndrm_gem_ttm_mmap() drops a reference to the gem object on success. If\nthe gem object's refcount == 1 on entry to drm_gem_prime_mmap(), that\ndrop will free the gem object, and the subsequent drm_gem_object_get()\nwill be a UAF. Fix by grabbing a reference before calling the mmap\nhelper.\n\nThis issue was forseen when the reference dropping was adding in\ncommit 9786b65bc61ac (\"drm/ttm: fix mmap refcounting\"):\n  \"For that to work properly the drm_gem_object_get() call in\n  drm_gem_ttm_mmap() must be moved so it happens before calling\n  obj-\u003efuncs-\u003emmap(), otherwise the gem refcount would go down\n  to zero.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47201",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: free q_vectors before queues in iavf_disable_vf\n\niavf_free_queues() clears adapter-\u003enum_active_queues, which\niavf_free_q_vectors() relies on, so swap the order of these two function\ncalls in iavf_disable_vf(). This resolves a panic encountered when the\ninterface is disabled and then later brought up again after PF\ncommunication is restored.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47202",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: Fix NULL pointer dereferences in of_thermal_ functions\n\nof_parse_thermal_zones() parses the thermal-zones node and registers a\nthermal_zone device for each subnode. However, if a thermal zone is\nconsuming a thermal sensor and that thermal sensor device hasn't probed\nyet, an attempt to set trip_point_*_temp for that thermal zone device\ncan cause a NULL pointer dereference. Fix it.\n\n console:/sys/class/thermal/thermal_zone87 # echo 120000 \u003e trip_point_0_temp\n ...\n Unable to handle kernel NULL pointer dereference at virtual address 0000000000000020\n ...\n Call trace:\n  of_thermal_set_trip_temp+0x40/0xc4\n  trip_point_temp_store+0xc0/0x1dc\n  dev_attr_store+0x38/0x88\n  sysfs_kf_write+0x64/0xc0\n  kernfs_fop_write_iter+0x108/0x1d0\n  vfs_write+0x2f4/0x368\n  ksys_write+0x7c/0xec\n  __arm64_sys_write+0x20/0x30\n  el0_svc_common.llvm.7279915941325364641+0xbc/0x1bc\n  do_el0_svc+0x28/0xa0\n  el0_svc+0x14/0x24\n  el0_sync_handler+0x88/0xec\n  el0_sync+0x1c0/0x200\n\nWhile at it, fix the possible NULL pointer dereference in other\nfunctions as well: of_thermal_get_temp(), of_thermal_set_emul_temp(),\nof_thermal_get_trend().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47203",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix list_add() corruption in lpfc_drain_txq()\n\nWhen parsing the txq list in lpfc_drain_txq(), the driver attempts to pass\nthe requests to the adapter. If such an attempt fails, a local \"fail_msg\"\nstring is set and a log message output.  The job is then added to a\ncompletions list for cancellation.\n\nProcessing of any further jobs from the txq list continues, but since\n\"fail_msg\" remains set, jobs are added to the completions list regardless\nof whether a wqe was passed to the adapter.  If successfully added to\ntxcmplq, jobs are added to both lists resulting in list corruption.\n\nFix by clearing the fail_msg string after adding a job to the completions\nlist. This stops the subsequent jobs from being added to the completions\nlist unless they had an appropriate failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47204",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dpaa2-eth: fix use-after-free in dpaa2_eth_remove\n\nAccess to netdev after free_netdev() will cause use-after-free bug.\nMove debug log before free_netdev() call to avoid it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47205",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: sunxi-ng: Unregister clocks/resets when unbinding\n\nCurrently, unbinding a CCU driver unmaps the device's MMIO region, while\nleaving its clocks/resets and their providers registered. This can cause\na page fault later when some clock operation tries to perform MMIO. Fix\nthis by separating the CCU initialization from the memory allocation,\nand then using a devres callback to unregister the clocks and resets.\n\nThis also fixes a memory leak of the `struct ccu_reset`, and uses the\ncorrect owner (the specific platform driver) for the clocks and resets.\n\nEarly OF clock providers are never unregistered, and limited error\nhandling is possible, so they are mostly unchanged. The error reporting\nis made more consistent by moving the message inside of_sunxi_ccu_probe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47206",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: host: ohci-tmio: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47207",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: gus: fix null pointer dereference on pointer block\n\nThe pointer block return from snd_gf1_dma_next_block could be\nnull, so there is a potential null pointer dereference issue.\nFix this by adding a null check before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47209",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/fair: Prevent dead task groups from regaining cfs_rq's\n\nKevin is reporting crashes which point to a use-after-free of a cfs_rq\nin update_blocked_averages(). Initial debugging revealed that we've\nlive cfs_rq's (on_list=1) in an about to be kfree()'d task group in\nfree_fair_sched_group(). However, it was unclear how that can happen.\n\nHis kernel config happened to lead to a layout of struct sched_entity\nthat put the 'my_q' member directly into the middle of the object\nwhich makes it incidentally overlap with SLUB's freelist pointer.\nThat, in combination with SLAB_FREELIST_HARDENED's freelist pointer\nmangling, leads to a reliable access violation in form of a #GP which\nmade the UAF fail fast.\n\nMichal seems to have run into the same issue[1]. He already correctly\ndiagnosed that commit a7b359fc6a37 (\"sched/fair: Correctly insert\ncfs_rq's to list on unthrottle\") is causing the preconditions for the\nUAF to happen by re-adding cfs_rq's also to task groups that have no\nmore running tasks, i.e. also to dead ones. His analysis, however,\nmisses the real root cause and it cannot be seen from the crash\nbacktrace only, as the real offender is tg_unthrottle_up() getting\ncalled via sched_cfs_period_timer() via the timer interrupt at an\ninconvenient time.\n\nWhen unregister_fair_sched_group() unlinks all cfs_rq's from the dying\ntask group, it doesn't protect itself from getting interrupted. If the\ntimer interrupt triggers while we iterate over all CPUs or after\nunregister_fair_sched_group() has finished but prior to unlinking the\ntask group, sched_cfs_period_timer() will execute and walk the list of\ntask groups, trying to unthrottle cfs_rq's, i.e. re-add them to the\ndying task group. These will later -- in free_fair_sched_group() -- be\nkfree()'ed while still being linked, leading to the fireworks Kevin\nand Michal are seeing.\n\nTo fix this race, ensure the dying task group gets unlinked first.\nHowever, simply switching the order of unregistering and unlinking the\ntask group isn't sufficient, as concurrent RCU walkers might still see\nit, as can be seen below:\n\n    CPU1:                                      CPU2:\n      :                                        timer IRQ:\n      :                                          do_sched_cfs_period_timer():\n      :                                            :\n      :                                            distribute_cfs_runtime():\n      :                                              rcu_read_lock();\n      :                                              :\n      :                                              unthrottle_cfs_rq():\n    sched_offline_group():                             :\n      :                                                walk_tg_tree_from(…,tg_unthrottle_up,…):\n      list_del_rcu(\u0026tg-\u003elist);                           :\n (1)  :                                                  list_for_each_entry_rcu(child, \u0026parent-\u003echildren, siblings)\n      :                                                    :\n (2)  list_del_rcu(\u0026tg-\u003esiblings);                         :\n      :                                                    tg_unthrottle_up():\n      unregister_fair_sched_group():                         struct cfs_rq *cfs_rq = tg-\u003ecfs_rq[cpu_of(rq)];\n        :                                                    :\n        list_del_leaf_cfs_rq(tg-\u003ecfs_rq[cpu]);               :\n        :                                                    :\n        :                                                    if (!cfs_rq_is_decayed(cfs_rq) || cfs_rq-\u003enr_running)\n (3)    :                                                        list_add_leaf_cfs_rq(cfs_rq);\n      :                                                      :\n      :                                                    :\n      :                                                  :\n      :                                                :\n      :                           \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47210",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tipd: Remove WARN_ON in tps6598x_block_read\n\nCalling tps6598x_block_read with a higher than allowed len can be\nhandled by just returning an error. There's no need to crash systems\nwith panic-on-warn enabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47211",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: fix null pointer dereference on pointer cs_desc\n\nThe pointer cs_desc return from snd_usb_find_clock_source could\nbe null, so there is a potential null pointer dereference issue.\nFix this by adding a null check before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47212",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Update error handler for UCTX and UMEM\n\nIn the fast unload flow, the device state is set to internal error,\nwhich indicates that the driver started the destroy process.\nIn this case, when a destroy command is being executed, it should return\nMLX5_CMD_STAT_OK.\nFix MLX5_CMD_OP_DESTROY_UCTX and MLX5_CMD_OP_DESTROY_UMEM to return OK\ninstead of EIO.\n\nThis fixes a call trace in the umem release process -\n[ 2633.536695] Call Trace:\n[ 2633.537518]  ib_uverbs_remove_one+0xc3/0x140 [ib_uverbs]\n[ 2633.538596]  remove_client_context+0x8b/0xd0 [ib_core]\n[ 2633.539641]  disable_device+0x8c/0x130 [ib_core]\n[ 2633.540615]  __ib_unregister_device+0x35/0xa0 [ib_core]\n[ 2633.541640]  ib_unregister_device+0x21/0x30 [ib_core]\n[ 2633.542663]  __mlx5_ib_remove+0x38/0x90 [mlx5_ib]\n[ 2633.543640]  auxiliary_bus_remove+0x1e/0x30 [auxiliary]\n[ 2633.544661]  device_release_driver_internal+0x103/0x1f0\n[ 2633.545679]  bus_remove_device+0xf7/0x170\n[ 2633.546640]  device_del+0x181/0x410\n[ 2633.547606]  mlx5_rescan_drivers_locked.part.10+0x63/0x160 [mlx5_core]\n[ 2633.548777]  mlx5_unregister_device+0x27/0x40 [mlx5_core]\n[ 2633.549841]  mlx5_uninit_one+0x21/0xc0 [mlx5_core]\n[ 2633.550864]  remove_one+0x69/0xe0 [mlx5_core]\n[ 2633.551819]  pci_device_remove+0x3b/0xc0\n[ 2633.552731]  device_release_driver_internal+0x103/0x1f0\n[ 2633.553746]  unbind_store+0xf6/0x130\n[ 2633.554657]  kernfs_fop_write+0x116/0x190\n[ 2633.555567]  vfs_write+0xa5/0x1a0\n[ 2633.556407]  ksys_write+0x4f/0xb0\n[ 2633.557233]  do_syscall_64+0x5b/0x1a0\n[ 2633.558071]  entry_SYSCALL_64_after_hwframe+0x65/0xca\n[ 2633.559018] RIP: 0033:0x7f9977132648\n[ 2633.559821] Code: 89 02 48 c7 c0 ff ff ff ff eb b3 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 8d 05 55 6f 2d 00 8b 00 85 c0 75 17 b8 01 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 58 c3 0f 1f 80 00 00 00 00 41 54 49 89 d4 55\n[ 2633.562332] RSP: 002b:00007fffb1a83888 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[ 2633.563472] RAX: ffffffffffffffda RBX: 000000000000000c RCX: 00007f9977132648\n[ 2633.564541] RDX: 000000000000000c RSI: 000055b90546e230 RDI: 0000000000000001\n[ 2633.565596] RBP: 000055b90546e230 R08: 00007f9977406860 R09: 00007f9977a54740\n[ 2633.566653] R10: 0000000000000000 R11: 0000000000000246 R12: 00007f99774056e0\n[ 2633.567692] R13: 000000000000000c R14: 00007f9977400880 R15: 000000000000000c\n[ 2633.568725] ---[ end trace 10b4fe52945e544d ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47215",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: kTLS, Fix crash in RX resync flow\n\nFor the TLS RX resync flow, we maintain a list of TLS contexts\nthat require some attention, to communicate their resync information\nto the HW.\nHere we fix list corruptions, by protecting the entries against\nmovements coming from resync_handle_seq_match(), until their resync\nhandling in napi is fully completed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47216",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: advansys: Fix kernel pointer leak\n\nPointers should be printed with %p or %px rather than cast to 'unsigned\nlong' and printed with %lx.\n\nChange %lx to %p to print the hashed pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47217",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/hyperv: Fix NULL deref in set_hv_tscchange_cb() if Hyper-V setup fails\n\nCheck for a valid hv_vp_index array prior to derefencing hv_vp_index when\nsetting Hyper-V's TSC change callback.  If Hyper-V setup failed in\nhyperv_init(), the kernel will still report that it's running under\nHyper-V, but will have silently disabled nearly all functionality.\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000010\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] SMP\n  CPU: 4 PID: 1 Comm: swapper/0 Not tainted 5.15.0-rc2+ #75\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n  RIP: 0010:set_hv_tscchange_cb+0x15/0xa0\n  Code: \u003c8b\u003e 04 82 8b 15 12 17 85 01 48 c1 e0 20 48 0d ee 00 01 00 f6 c6 08\n  ...\n  Call Trace:\n   kvm_arch_init+0x17c/0x280\n   kvm_init+0x31/0x330\n   vmx_init+0xba/0x13a\n   do_one_initcall+0x41/0x1c0\n   kernel_init_freeable+0x1f2/0x23b\n   kernel_init+0x16/0x120\n   ret_from_fork+0x22/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47218",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: fix NULL-pointer dereference when hashtab allocation fails\n\nWhen the hash table slot array allocation fails in hashtab_init(),\nh-\u003esize is left initialized with a non-zero value, but the h-\u003ehtable\npointer is NULL. This may then cause a NULL pointer dereference, since\nthe policydb code relies on the assumption that even after a failed\nhashtab_init(), hashtab_map() and hashtab_destroy() can be safely called\non it. Yet, these detect an empty hashtab only by looking at the size.\n\nFix this by making sure that hashtab_init() always leaves behind a valid\nempty hashtab when the allocation fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47219",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_debug: Fix out-of-bound read in resp_report_tgtpgs()\n\nThe following issue was observed running syzkaller:\n\nBUG: KASAN: slab-out-of-bounds in memcpy include/linux/string.h:377 [inline]\nBUG: KASAN: slab-out-of-bounds in sg_copy_buffer+0x150/0x1c0 lib/scatterlist.c:831\nRead of size 2132 at addr ffff8880aea95dc8 by task syz-executor.0/9815\n\nCPU: 0 PID: 9815 Comm: syz-executor.0 Not tainted 4.19.202-00874-gfc0fe04215a9 #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xe4/0x14a lib/dump_stack.c:118\n print_address_description+0x73/0x280 mm/kasan/report.c:253\n kasan_report_error mm/kasan/report.c:352 [inline]\n kasan_report+0x272/0x370 mm/kasan/report.c:410\n memcpy+0x1f/0x50 mm/kasan/kasan.c:302\n memcpy include/linux/string.h:377 [inline]\n sg_copy_buffer+0x150/0x1c0 lib/scatterlist.c:831\n fill_from_dev_buffer+0x14f/0x340 drivers/scsi/scsi_debug.c:1021\n resp_report_tgtpgs+0x5aa/0x770 drivers/scsi/scsi_debug.c:1772\n schedule_resp+0x464/0x12f0 drivers/scsi/scsi_debug.c:4429\n scsi_debug_queuecommand+0x467/0x1390 drivers/scsi/scsi_debug.c:5835\n scsi_dispatch_cmd+0x3fc/0x9b0 drivers/scsi/scsi_lib.c:1896\n scsi_request_fn+0x1042/0x1810 drivers/scsi/scsi_lib.c:2034\n __blk_run_queue_uncond block/blk-core.c:464 [inline]\n __blk_run_queue+0x1a4/0x380 block/blk-core.c:484\n blk_execute_rq_nowait+0x1c2/0x2d0 block/blk-exec.c:78\n sg_common_write.isra.19+0xd74/0x1dc0 drivers/scsi/sg.c:847\n sg_write.part.23+0x6e0/0xd00 drivers/scsi/sg.c:716\n sg_write+0x64/0xa0 drivers/scsi/sg.c:622\n __vfs_write+0xed/0x690 fs/read_write.c:485\nkill_bdev:block_device:00000000e138492c\n vfs_write+0x184/0x4c0 fs/read_write.c:549\n ksys_write+0x107/0x240 fs/read_write.c:599\n do_syscall_64+0xc2/0x560 arch/x86/entry/common.c:293\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nWe get 'alen' from command its type is int. If userspace passes a large\nlength we will get a negative 'alen'.\n\nSwitch n, alen, and rlen to u32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-0487",
      "Description": "A use-after-free vulnerability was found in rtsx_usb_ms_drv_remove in drivers/memstick/host/rtsx_usb_ms.c in memstick in the Linux kernel. In this flaw, a local attacker with a user privilege may impact system Confidentiality. This flaw affects kernel versions prior to 5.14 rc1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2022-20154",
      "Description": "In lock_sock_nested of sock.c, there is a possible use after free due to a race condition. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-174846563References: Upstream kernel",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.4",
        "Vector": "AV:L/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2022-4744",
      "Description": "A double-free flaw was found in the Linux kernel's TUN/TAP device driver functionality in how a user registers the device when the register_netdevice function fails (NETDEV_REGISTER notifier). This flaw allows a local user to crash or potentially escalate their privileges on the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48624",
      "Description": "close_altfile in filename.c in less before 606 omits shell_quote calls for LESSCLOSE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:less-590-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48627",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt: fix memory overlapping when deleting chars in the buffer\n\nA memory overlapping copy occurs when deleting a long line. This memory\noverlapping copy can cause data corruption when scr_memcpyw is optimized\nto memcpy because memcpy does not ensure its behavior if the destination\nbuffer overlaps with the source buffer. The line buffer is not always\nbroken, because the memcpy utilizes the hardware acceleration, whose\nresult is not deterministic.\n\nFix this problem by using replacing the scr_memcpyw with scr_memmovew.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48629",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qcom-rng - ensure buffer for generate is completely filled\n\nThe generate function in struct rng_alg expects that the destination\nbuffer is completely filled if the function returns 0. qcom_rng_read()\ncan run into a situation where the buffer is partially filled with\nrandomness and the remaining part of the buffer is zeroed since\nqcom_rng_generate() doesn't check the return value. This issue can\nbe reproduced by running the following from libkcapi:\n\n    kcapi-rng -b 9000000 \u003e OUTFILE\n\nThe generated OUTFILE will have three huge sections that contain all\nzeros, and this is caused by the code where the test\n'val \u0026 PRNG_STATUS_DATA_AVAIL' fails.\n\nLet's fix this issue by ensuring that qcom_rng_read() always returns\nwith a full buffer if the function returns success. Let's also have\nqcom_rng_generate() return the correct value.\n\nHere's some statistics from the ent project\n(https://www.fourmilab.ch/random/) that shows information about the\nquality of the generated numbers:\n\n    $ ent -c qcom-random-before\n    Value Char Occurrences Fraction\n      0           606748   0.067416\n      1            33104   0.003678\n      2            33001   0.003667\n    ...\n    253   �        32883   0.003654\n    254   �        33035   0.003671\n    255   �        33239   0.003693\n\n    Total:       9000000   1.000000\n\n    Entropy = 7.811590 bits per byte.\n\n    Optimum compression would reduce the size\n    of this 9000000 byte file by 2 percent.\n\n    Chi square distribution for 9000000 samples is 9329962.81, and\n    randomly would exceed this value less than 0.01 percent of the\n    times.\n\n    Arithmetic mean value of data bytes is 119.3731 (127.5 = random).\n    Monte Carlo value for Pi is 3.197293333 (error 1.77 percent).\n    Serial correlation coefficient is 0.159130 (totally uncorrelated =\n    0.0).\n\nWithout this patch, the results of the chi-square test is 0.01%, and\nthe numbers are certainly not random according to ent's project page.\nThe results improve with this patch:\n\n    $ ent -c qcom-random-after\n    Value Char Occurrences Fraction\n      0            35432   0.003937\n      1            35127   0.003903\n      2            35424   0.003936\n    ...\n    253   �        35201   0.003911\n    254   �        34835   0.003871\n    255   �        35368   0.003930\n\n    Total:       9000000   1.000000\n\n    Entropy = 7.999979 bits per byte.\n\n    Optimum compression would reduce the size\n    of this 9000000 byte file by 0 percent.\n\n    Chi square distribution for 9000000 samples is 258.77, and randomly\n    would exceed this value 42.24 percent of the times.\n\n    Arithmetic mean value of data bytes is 127.5006 (127.5 = random).\n    Monte Carlo value for Pi is 3.141277333 (error 0.01 percent).\n    Serial correlation coefficient is 0.000468 (totally uncorrelated =\n    0.0).\n\nThis change was tested on a Nexus 5 phone (msm8974 SoC).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48630",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qcom-rng - fix infinite loop on requests not multiple of WORD_SZ\n\nThe commit referenced in the Fixes tag removed the 'break' from the else\nbranch in qcom_rng_read(), causing an infinite loop whenever 'max' is\nnot a multiple of WORD_SZ. This can be reproduced e.g. by running:\n\n    kcapi-rng -b 67 \u003e/dev/null\n\nThere are many ways to fix this without adding back the 'break', but\nthey all seem more awkward than simply adding it back, so do just that.\n\nTested on a machine with Qualcomm Amberwing processor.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48631",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug in extents parsing when eh_entries == 0 and eh_depth \u003e 0\n\nWhen walking through an inode extents, the ext4_ext_binsearch_idx() function\nassumes that the extent header has been previously validated.  However, there\nare no checks that verify that the number of entries (eh-\u003eeh_entries) is\nnon-zero when depth is \u003e 0.  And this will lead to problems because the\nEXT_FIRST_INDEX() and EXT_LAST_INDEX() will return garbage and result in this:\n\n[  135.245946] ------------[ cut here ]------------\n[  135.247579] kernel BUG at fs/ext4/extents.c:2258!\n[  135.249045] invalid opcode: 0000 [#1] PREEMPT SMP\n[  135.250320] CPU: 2 PID: 238 Comm: tmp118 Not tainted 5.19.0-rc8+ #4\n[  135.252067] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b-rebuilt.opensuse.org 04/01/2014\n[  135.255065] RIP: 0010:ext4_ext_map_blocks+0xc20/0xcb0\n[  135.256475] Code:\n[  135.261433] RSP: 0018:ffffc900005939f8 EFLAGS: 00010246\n[  135.262847] RAX: 0000000000000024 RBX: ffffc90000593b70 RCX: 0000000000000023\n[  135.264765] RDX: ffff8880038e5f10 RSI: 0000000000000003 RDI: ffff8880046e922c\n[  135.266670] RBP: ffff8880046e9348 R08: 0000000000000001 R09: ffff888002ca580c\n[  135.268576] R10: 0000000000002602 R11: 0000000000000000 R12: 0000000000000024\n[  135.270477] R13: 0000000000000000 R14: 0000000000000024 R15: 0000000000000000\n[  135.272394] FS:  00007fdabdc56740(0000) GS:ffff88807dd00000(0000) knlGS:0000000000000000\n[  135.274510] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  135.276075] CR2: 00007ffc26bd4f00 CR3: 0000000006261004 CR4: 0000000000170ea0\n[  135.277952] Call Trace:\n[  135.278635]  \u003cTASK\u003e\n[  135.279247]  ? preempt_count_add+0x6d/0xa0\n[  135.280358]  ? percpu_counter_add_batch+0x55/0xb0\n[  135.281612]  ? _raw_read_unlock+0x18/0x30\n[  135.282704]  ext4_map_blocks+0x294/0x5a0\n[  135.283745]  ? xa_load+0x6f/0xa0\n[  135.284562]  ext4_mpage_readpages+0x3d6/0x770\n[  135.285646]  read_pages+0x67/0x1d0\n[  135.286492]  ? folio_add_lru+0x51/0x80\n[  135.287441]  page_cache_ra_unbounded+0x124/0x170\n[  135.288510]  filemap_get_pages+0x23d/0x5a0\n[  135.289457]  ? path_openat+0xa72/0xdd0\n[  135.290332]  filemap_read+0xbf/0x300\n[  135.291158]  ? _raw_spin_lock_irqsave+0x17/0x40\n[  135.292192]  new_sync_read+0x103/0x170\n[  135.293014]  vfs_read+0x15d/0x180\n[  135.293745]  ksys_read+0xa1/0xe0\n[  135.294461]  do_syscall_64+0x3c/0x80\n[  135.295284]  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nThis patch simply adds an extra check in __ext4_ext_check(), verifying that\neh_entries is not 0 when eh_depth is \u003e 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48637",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt: prevent skb UAF after handing over to PTP worker\n\nWhen reading the timestamp is required bnxt_tx_int() hands\nover the ownership of the completed skb to the PTP worker.\nThe skb should not be used afterwards, as the worker may\nrun before the rest of our code and free the skb, leading\nto a use-after-free.\n\nSince dev_kfree_skb_any() accepts NULL make the loss of\nownership more obvious and set skb to NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48638",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncgroup: cgroup_get_from_id() must check the looked-up kn is a directory\n\ncgroup has to be one kernfs dir, otherwise kernel panic is caused,\nespecially cgroup id is provide from userspace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48647",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsfc: fix TX channel offset when using legacy interrupts\n\nIn legacy interrupt mode the tx_channel_offset was hardcoded to 1, but\nthat's not correct if efx_sepparate_tx_channels is false. In that case,\nthe offset is 0 because the tx queues are in the single existing channel\nat index 0, together with the rx queue.\n\nWithout this fix, as soon as you try to send any traffic, it tries to\nget the tx queues from an uninitialized channel getting these errors:\n  WARNING: CPU: 1 PID: 0 at drivers/net/ethernet/sfc/tx.c:540 efx_hard_start_xmit+0x12e/0x170 [sfc]\n  [...]\n  RIP: 0010:efx_hard_start_xmit+0x12e/0x170 [sfc]\n  [...]\n  Call Trace:\n   \u003cIRQ\u003e\n   dev_hard_start_xmit+0xd7/0x230\n   sch_direct_xmit+0x9f/0x360\n   __dev_queue_xmit+0x890/0xa40\n  [...]\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000020\n  [...]\n  RIP: 0010:efx_hard_start_xmit+0x153/0x170 [sfc]\n  [...]\n  Call Trace:\n   \u003cIRQ\u003e\n   dev_hard_start_xmit+0xd7/0x230\n   sch_direct_xmit+0x9f/0x360\n   __dev_queue_xmit+0x890/0xa40\n  [...]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48648",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsfc: fix null pointer dereference in efx_hard_start_xmit\n\nTrying to get the channel from the tx_queue variable here is wrong\nbecause we can only be here if tx_queue is NULL, so we shouldn't\ndereference it. As the above comment in the code says, this is very\nunlikely to happen, but it's wrong anyway so let's fix it.\n\nI hit this issue because of a different bug that caused tx_queue to be\nNULL. If that happens, this is the error message that we get here:\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000020\n  [...]\n  RIP: 0010:efx_hard_start_xmit+0x153/0x170 [sfc]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix memory leak in __qlt_24xx_handle_abts()\n\nCommit 8f394da36a36 (\"scsi: qla2xxx: Drop TARGET_SCF_LOOKUP_LUN_FROM_TAG\")\nmade the __qlt_24xx_handle_abts() function return early if\ntcm_qla2xxx_find_cmd_by_tag() didn't find a command, but it missed to clean\nup the allocated memory for the management command.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48651",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: Fix out-of-bound bugs caused by unset skb-\u003emac_header\n\nIf an AF_PACKET socket is used to send packets through ipvlan and the\ndefault xmit function of the AF_PACKET socket is changed from\ndev_queue_xmit() to packet_direct_xmit() via setsockopt() with the option\nname of PACKET_QDISC_BYPASS, the skb-\u003emac_header may not be reset and\nremains as the initial value of 65535, this may trigger slab-out-of-bounds\nbugs as following:\n\n=================================================================\nUG: KASAN: slab-out-of-bounds in ipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nPU: 2 PID: 1768 Comm: raw_send Kdump: loaded Not tainted 6.0.0-rc4+ #6\nardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33\nall Trace:\nprint_address_description.constprop.0+0x1d/0x160\nprint_report.cold+0x4f/0x112\nkasan_report+0xa3/0x130\nipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]\nipvlan_start_xmit+0x29/0xa0 [ipvlan]\n__dev_direct_xmit+0x2e2/0x380\npacket_direct_xmit+0x22/0x60\npacket_snd+0x7c9/0xc40\nsock_sendmsg+0x9a/0xa0\n__sys_sendto+0x18a/0x230\n__x64_sys_sendto+0x74/0x90\ndo_syscall_64+0x3b/0x90\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe root cause is:\n  1. packet_snd() only reset skb-\u003emac_header when sock-\u003etype is SOCK_RAW\n     and skb-\u003eprotocol is not specified as in packet_parse_headers()\n\n  2. packet_direct_xmit() doesn't reset skb-\u003emac_header as dev_queue_xmit()\n\nIn this case, skb-\u003emac_header is 65535 when ipvlan_xmit_mode_l2() is\ncalled. So when ipvlan_xmit_mode_l2() gets mac header with eth_hdr() which\nuse \"skb-\u003ehead + skb-\u003emac_header\", out-of-bound access occurs.\n\nThis patch replaces eth_hdr() with skb_eth_hdr() in ipvlan_xmit_mode_l2()\nand reset mac header in multicast to solve this out-of-bound bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48653",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Don't double unplug aux on peer initiated reset\n\nIn the IDC callback that is accessed when the aux drivers request a reset,\nthe function to unplug the aux devices is called.  This function is also\ncalled in the ice_prepare_for_reset function. This double call is causing\na \"scheduling while atomic\" BUG.\n\n[  662.676430] ice 0000:4c:00.0 rocep76s0: cqp opcode = 0x1 maj_err_code = 0xffff min_err_code = 0x8003\n\n[  662.676609] ice 0000:4c:00.0 rocep76s0: [Modify QP Cmd Error][op_code=8] status=-29 waiting=1 completion_err=1 maj=0xffff min=0x8003\n\n[  662.815006] ice 0000:4c:00.0 rocep76s0: ICE OICR event notification: oicr = 0x10000003\n\n[  662.815014] ice 0000:4c:00.0 rocep76s0: critical PE Error, GLPE_CRITERR=0x00011424\n\n[  662.815017] ice 0000:4c:00.0 rocep76s0: Requesting a reset\n\n[  662.815475] BUG: scheduling while atomic: swapper/37/0/0x00010002\n\n[  662.815475] BUG: scheduling while atomic: swapper/37/0/0x00010002\n[  662.815477] Modules linked in: rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache netfs rfkill 8021q garp mrp stp llc vfat fat rpcrdma intel_rapl_msr intel_rapl_common sunrpc i10nm_edac rdma_ucm nfit ib_srpt libnvdimm ib_isert iscsi_target_mod x86_pkg_temp_thermal intel_powerclamp coretemp target_core_mod snd_hda_intel ib_iser snd_intel_dspcfg libiscsi snd_intel_sdw_acpi scsi_transport_iscsi kvm_intel iTCO_wdt rdma_cm snd_hda_codec kvm iw_cm ipmi_ssif iTCO_vendor_support snd_hda_core irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel snd_hwdep snd_seq snd_seq_device rapl snd_pcm snd_timer isst_if_mbox_pci pcspkr isst_if_mmio irdma intel_uncore idxd acpi_ipmi joydev isst_if_common snd mei_me idxd_bus ipmi_si soundcore i2c_i801 mei ipmi_devintf i2c_smbus i2c_ismt ipmi_msghandler acpi_power_meter acpi_pad rv(OE) ib_uverbs ib_cm ib_core xfs libcrc32c ast i2c_algo_bit drm_vram_helper drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm_ttm_helpe\n r ttm\n[  662.815546]  nvme nvme_core ice drm crc32c_intel i40e t10_pi wmi pinctrl_emmitsburg dm_mirror dm_region_hash dm_log dm_mod fuse\n[  662.815557] Preemption disabled at:\n[  662.815558] [\u003c0000000000000000\u003e] 0x0\n[  662.815563] CPU: 37 PID: 0 Comm: swapper/37 Kdump: loaded Tainted: G S         OE     5.17.1 #2\n[  662.815566] Hardware name: Intel Corporation D50DNP/D50DNP, BIOS SE5C6301.86B.6624.D18.2111021741 11/02/2021\n[  662.815568] Call Trace:\n[  662.815572]  \u003cIRQ\u003e\n[  662.815574]  dump_stack_lvl+0x33/0x42\n[  662.815581]  __schedule_bug.cold.147+0x7d/0x8a\n[  662.815588]  __schedule+0x798/0x990\n[  662.815595]  schedule+0x44/0xc0\n[  662.815597]  schedule_preempt_disabled+0x14/0x20\n[  662.815600]  __mutex_lock.isra.11+0x46c/0x490\n[  662.815603]  ? __ibdev_printk+0x76/0xc0 [ib_core]\n[  662.815633]  device_del+0x37/0x3d0\n[  662.815639]  ice_unplug_aux_dev+0x1a/0x40 [ice]\n[  662.815674]  ice_schedule_reset+0x3c/0xd0 [ice]\n[  662.815693]  irdma_iidc_event_handler.cold.7+0xb6/0xd3 [irdma]\n[  662.815712]  ? bitmap_find_next_zero_area_off+0x45/0xa0\n[  662.815719]  ice_send_event_to_aux+0x54/0x70 [ice]\n[  662.815741]  ice_misc_intr+0x21d/0x2d0 [ice]\n[  662.815756]  __handle_irq_event_percpu+0x4c/0x180\n[  662.815762]  handle_irq_event_percpu+0xf/0x40\n[  662.815764]  handle_irq_event+0x34/0x60\n[  662.815766]  handle_edge_irq+0x9a/0x1c0\n[  662.815770]  __common_interrupt+0x62/0x100\n[  662.815774]  common_interrupt+0xb4/0xd0\n[  662.815779]  \u003c/IRQ\u003e\n[  662.815780]  \u003cTASK\u003e\n[  662.815780]  asm_common_interrupt+0x1e/0x40\n[  662.815785] RIP: 0010:cpuidle_enter_state+0xd6/0x380\n[  662.815789] Code: 49 89 c4 0f 1f 44 00 00 31 ff e8 65 d7 95 ff 45 84 ff 74 12 9c 58 f6 c4 02 0f 85 64 02 00 00 31 ff e8 ae c5 9c ff fb 45 85 f6 \u003c0f\u003e 88 12 01 00 00 49 63 d6 4c 2b 24 24 48 8d 04 52 48 8d 04 82 49\n[  662.815791] RSP: 0018:ff2c2c4f18edbe80 EFLAGS: 00000202\n[  662.815793] RAX: ff280805df140000 RBX: 0000000000000002 RCX: 000000000000001f\n[  662.815795] RDX: 0000009a52da2d08 R\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48654",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nfnetlink_osf: fix possible bogus match in nf_osf_find()\n\nnf_osf_find() incorrectly returns true on mismatch, this leads to\ncopying uninitialized memory area in nft_osf which can be used to leak\nstale kernel stack data to userspace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48655",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scmi: Harden accesses to the reset domains\n\nAccessing reset domains descriptors by the index upon the SCMI drivers\nrequests through the SCMI reset operations interface can potentially\nlead to out-of-bound violations if the SCMI driver misbehave.\n\nAdd an internal consistency check before any such domains descriptors\naccesses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48656",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: k3-udma-private: Fix refcount leak bug in of_xudma_dev_get()\n\nWe should call of_node_put() for the reference returned by\nof_parse_phandle() in fail path or when it is not used anymore.\nHere we only need to move the of_node_put() before the check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48657",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: topology: fix possible overflow in amu_fie_setup()\n\ncpufreq_get_hw_max_freq() returns max frequency in kHz as *unsigned int*,\nwhile freq_inv_set_max_ratio() gets passed this frequency in Hz as 'u64'.\nMultiplying max frequency by 1000 can potentially result in overflow --\nmultiplying by 1000ULL instead should avoid that...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48660",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: cdev: Set lineevent_state::irq after IRQ register successfully\n\nWhen running gpio test on nxp-ls1028 platform with below command\ngpiomon --num-events=3 --rising-edge gpiochip1 25\nThere will be a warning trace as below:\nCall trace:\nfree_irq+0x204/0x360\nlineevent_free+0x64/0x70\ngpio_ioctl+0x598/0x6a0\n__arm64_sys_ioctl+0xb4/0x100\ninvoke_syscall+0x5c/0x130\n......\nel0t_64_sync+0x1a0/0x1a4\nThe reason of this issue is that calling request_threaded_irq()\nfunction failed, and then lineevent_free() is invoked to release\nthe resource. Since the lineevent_state::irq was already set, so\nthe subsequent invocation of free_irq() would trigger the above\nwarning call trace. To fix this issue, set the lineevent_state::irq\nafter the IRQ register successfully.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48662",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gem: Really move i915_gem_context.link under ref protection\n\ni915_perf assumes that it can use the i915_gem_context reference to\nprotect its i915-\u003egem.contexts.list iteration. However, this requires\nthat we do not remove the context from the list until after we drop the\nfinal reference and release the struct. If, as currently, we remove the\ncontext from the list during context_close(), the link.next pointer may\nbe poisoned while we are holding the context reference and cause a GPF:\n\n[ 4070.573157] i915 0000:00:02.0: [drm:i915_perf_open_ioctl [i915]] filtering on ctx_id=0x1fffff ctx_id_mask=0x1fffff\n[ 4070.574881] general protection fault, probably for non-canonical address 0xdead000000000100: 0000 [#1] PREEMPT SMP\n[ 4070.574897] CPU: 1 PID: 284392 Comm: amd_performance Tainted: G            E     5.17.9 #180\n[ 4070.574903] Hardware name: Intel Corporation NUC7i5BNK/NUC7i5BNB, BIOS BNKBL357.86A.0052.2017.0918.1346 09/18/2017\n[ 4070.574907] RIP: 0010:oa_configure_all_contexts.isra.0+0x222/0x350 [i915]\n[ 4070.574982] Code: 08 e8 32 6e 10 e1 4d 8b 6d 50 b8 ff ff ff ff 49 83 ed 50 f0 41 0f c1 04 24 83 f8 01 0f 84 e3 00 00 00 85 c0 0f 8e fa 00 00 00 \u003c49\u003e 8b 45 50 48 8d 70 b0 49 8d 45 50 48 39 44 24 10 0f 85 34 fe ff\n[ 4070.574990] RSP: 0018:ffffc90002077b78 EFLAGS: 00010202\n[ 4070.574995] RAX: 0000000000000002 RBX: 0000000000000002 RCX: 0000000000000000\n[ 4070.575000] RDX: 0000000000000001 RSI: ffffc90002077b20 RDI: ffff88810ddc7c68\n[ 4070.575004] RBP: 0000000000000001 R08: ffff888103242648 R09: fffffffffffffffc\n[ 4070.575008] R10: ffffffff82c50bc0 R11: 0000000000025c80 R12: ffff888101bf1860\n[ 4070.575012] R13: dead0000000000b0 R14: ffffc90002077c04 R15: ffff88810be5cabc\n[ 4070.575016] FS:  00007f1ed50c0780(0000) GS:ffff88885ec80000(0000) knlGS:0000000000000000\n[ 4070.575021] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 4070.575025] CR2: 00007f1ed5590280 CR3: 000000010ef6f005 CR4: 00000000003706e0\n[ 4070.575029] Call Trace:\n[ 4070.575033]  \u003cTASK\u003e\n[ 4070.575037]  lrc_configure_all_contexts+0x13e/0x150 [i915]\n[ 4070.575103]  gen8_enable_metric_set+0x4d/0x90 [i915]\n[ 4070.575164]  i915_perf_open_ioctl+0xbc0/0x1500 [i915]\n[ 4070.575224]  ? asm_common_interrupt+0x1e/0x40\n[ 4070.575232]  ? i915_oa_init_reg_state+0x110/0x110 [i915]\n[ 4070.575290]  drm_ioctl_kernel+0x85/0x110\n[ 4070.575296]  ? update_load_avg+0x5f/0x5e0\n[ 4070.575302]  drm_ioctl+0x1d3/0x370\n[ 4070.575307]  ? i915_oa_init_reg_state+0x110/0x110 [i915]\n[ 4070.575382]  ? gen8_gt_irq_handler+0x46/0x130 [i915]\n[ 4070.575445]  __x64_sys_ioctl+0x3c4/0x8d0\n[ 4070.575451]  ? __do_softirq+0xaa/0x1d2\n[ 4070.575456]  do_syscall_64+0x35/0x80\n[ 4070.575461]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n[ 4070.575467] RIP: 0033:0x7f1ed5c10397\n[ 4070.575471] Code: 3c 1c e8 1c ff ff ff 85 c0 79 87 49 c7 c4 ff ff ff ff 5b 5d 4c 89 e0 41 5c c3 66 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d a9 da 0d 00 f7 d8 64 89 01 48\n[ 4070.575478] RSP: 002b:00007ffd65c8d7a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n[ 4070.575484] RAX: ffffffffffffffda RBX: 0000000000000006 RCX: 00007f1ed5c10397\n[ 4070.575488] RDX: 00007ffd65c8d7c0 RSI: 0000000040106476 RDI: 0000000000000006\n[ 4070.575492] RBP: 00005620972f9c60 R08: 000000000000000a R09: 0000000000000005\n[ 4070.575496] R10: 000000000000000d R11: 0000000000000246 R12: 000000000000000a\n[ 4070.575500] R13: 000000000000000d R14: 0000000000000000 R15: 00007ffd65c8d7c0\n[ 4070.575505]  \u003c/TASK\u003e\n[ 4070.575507] Modules linked in: nls_ascii(E) nls_cp437(E) vfat(E) fat(E) i915(E) x86_pkg_temp_thermal(E) intel_powerclamp(E) crct10dif_pclmul(E) crc32_pclmul(E) crc32c_intel(E) aesni_intel(E) crypto_simd(E) intel_gtt(E) cryptd(E) ttm(E) rapl(E) intel_cstate(E) drm_kms_helper(E) cfbfillrect(E) syscopyarea(E) cfbimgblt(E) intel_uncore(E) sysfillrect(E) mei_me(E) sysimgblt(E) i2c_i801(E) fb_sys_fops(E) mei(E) intel_pch_thermal(E) i2c_smbus\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48663",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: mockup: fix NULL pointer dereference when removing debugfs\n\nWe now remove the device's debugfs entries when unbinding the driver.\nThis now causes a NULL-pointer dereference on module exit because the\nplatform devices are unregistered *after* the global debugfs directory\nhas been recursively removed. Fix it by unregistering the devices first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48667",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix temporary data corruption in insert range\n\ninsert range doesn't discard the affected cached region\nso can risk temporarily corrupting file data.\n\nAlso includes some minor cleanup (avoiding rereading\ninode size repeatedly unnecessarily) to make it clearer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48668",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix temporary data corruption in collapse range\n\ncollapse range doesn't discard the affected cached region\nso can risk temporarily corrupting the file data. This\nfixes xfstest generic/031\n\nI also decided to merge a minor cleanup to this into the same patch\n(avoiding rereading inode size repeatedly unnecessarily) to make it\nclearer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-0160",
      "Description": "A deadlock flaw was found in the Linux kernel's BPF subsystem. This flaw allows a local user to potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-28746",
      "Description": "Information exposure through microarchitectural state after transient execution from some register files for some Intel(R) Atom(R) Processors may allow an authenticated user to potentially enable information disclosure via local access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:xen-libs-4.16.6_02-150400.4.55.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-35827",
      "Description": "An issue was discovered in the Linux kernel through 6.3.8. A use-after-free was found in ravb_remove in drivers/net/ethernet/renesas/ravb_main.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38469",
      "Description": "A vulnerability was found in Avahi, where a reachable assertion exists in avahi_dns_packet_append_record.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libavahi-client3-0.8-150400.7.16.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libavahi-common3-0.8-150400.7.16.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-38471",
      "Description": "A vulnerability was found in Avahi. A reachable assertion exists in the dbus_set_host_name function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libavahi-client3-0.8-150400.7.16.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libavahi-common3-0.8-150400.7.16.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-42465",
      "Description": "Sudo before 1.9.15 might allow row hammer attacks (for authentication bypass or privilege escalation) because application logic sometimes is based on not equaling an error value (instead of equaling a success value), and because the values do not resist flips of a single bit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:sudo-1.9.9-150400.4.36.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-45918",
      "Description": "** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: none. Reason: This candidate was withdrawn by its CNA. Further investigation showed that it was not a security issue. Notes: none.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libncurses6-6.1-150000.5.24.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:ncurses-utils-6.1-150000.5.24.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:terminfo-6.1-150000.5.24.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:terminfo-base-6.1-150000.5.24.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-46841",
      "Description": "Recent x86 CPUs offer functionality named Control-flow Enforcement\nTechnology (CET).  A sub-feature of this are Shadow Stacks (CET-SS).\nCET-SS is a hardware feature designed to protect against Return Oriented\nProgramming attacks. When enabled, traditional stacks holding both data\nand return addresses are accompanied by so called \"shadow stacks\",\nholding little more than return addresses.  Shadow stacks aren't\nwritable by normal instructions, and upon function returns their\ncontents are used to check for possible manipulation of a return address\ncoming from the traditional stack.\n\nIn particular certain memory accesses need intercepting by Xen.  In\nvarious cases the necessary emulation involves kind of replaying of\nthe instruction.  Such replaying typically involves filling and then\ninvoking of a stub.  Such a replayed instruction may raise an\nexceptions, which is expected and dealt with accordingly.\n\nUnfortunately the interaction of both of the above wasn't right:\nRecovery involves removal of a call frame from the (traditional) stack.\nThe counterpart of this operation for the shadow stack was missing.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:xen-libs-4.16.6_02-150400.4.55.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-46842",
      "Description": "Unlike 32-bit PV guests, HVM guests may switch freely between 64-bit and\nother modes.  This in particular means that they may set registers used\nto pass 32-bit-mode hypercall arguments to values outside of the range\n32-bit code would be able to set them to.\n\nWhen processing of hypercalls takes a considerable amount of time,\nthe hypervisor may choose to invoke a hypercall continuation.  Doing so\ninvolves putting (perhaps updated) hypercall arguments in respective\nregisters.  For guests not running in 64-bit mode this further involves\na certain amount of translation of the values.\n\nUnfortunately internal sanity checking of these translated values\nassumes high halves of registers to always be clear when invoking a\nhypercall.  When this is found not to be the case, it triggers a\nconsistency check in the hypervisor and causes a crash.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:xen-libs-4.16.6_02-150400.4.55.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4750",
      "Description": "Use After Free in GitHub repository vim/vim prior to 9.0.1857.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48231",
      "Description": "Vim is an open source command line text editor. When closing a window, vim may try to access already freed window structure. Exploitation beyond crashing the application has not been shown to be viable. This issue has been addressed in commit `25aabc2b` which has been included in release version 9.0.2106. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48232",
      "Description": "Vim is an open source command line text editor. A floating point exception may occur when calculating the line offset for overlong lines and smooth scrolling is enabled and the cpo-settings include the 'n' flag. This may happen when a window border is present and when the wrapped line continues on the next physical line directly in the window border because the 'cpo' setting includes the 'n' flag. Only users with non-default settings are affected and the exception should only result in a crash. This issue has been addressed in commit `cb0b99f0` which has been included in release version 9.0.2107. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48233",
      "Description": "Vim is an open source command line text editor. If the count after the :s command is larger than what fits into a (signed) long variable, abort with e_value_too_large. Impact is low, user interaction is required and a crash may not even happen in all situations. This issue has been addressed in commit `ac6378773` which has been included in release version 9.0.2108. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48234",
      "Description": "Vim is an open source command line text editor. When getting the count for a normal mode z command, it may overflow for large counts given. Impact is low, user interaction is required and a crash may not even happen in all situations. This issue has been addressed in commit `58f9befca1` which has been included in release version 9.0.2109. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48235",
      "Description": "Vim is an open source command line text editor. When parsing relative ex addresses one may unintentionally cause an\noverflow. Ironically this happens in the existing overflow check, because the line number becomes negative and LONG_MAX - lnum will cause the overflow. Impact is low, user interaction is required and a crash may not even happen in all situations. This issue has been addressed in commit `060623e` which has been included in release version 9.0.2110. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48236",
      "Description": "Vim is an open source command line text editor. When using the z= command, the user may overflow the count with values larger\nthan MAX_INT. Impact is low, user interaction is required and a crash may not even happen in all situations. This vulnerability has been addressed in commit `73b2d379` which has been included in release version 9.0.2111. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48237",
      "Description": "Vim is an open source command line text editor. In affected versions when shifting lines in operator pending mode and using a very large value, it may be possible to overflow the size of integer. Impact is low, user interaction is required and a crash may not even happen in all situations. This issue has been addressed in commit `6bf131888` which has been included in version 9.0.2112. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-48706",
      "Description": "Vim is a UNIX editor that, prior to version 9.0.2121, has a heap-use-after-free vulnerability. When executing a `:s` command for the very first time and using a sub-replace-special atom inside the substitution part, it is possible that the recursive `:s` call causes free-ing of memory which may later then be accessed by the initial `:s` command. The user must intentionally execute the payload and the whole process is a bit tricky to do since it seems to work only reliably for the very first :s command. It may also cause a crash of Vim. Version 9.0.2121 contains a fix for this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4881",
      "Description": "** REJECT ** CVE-2023-4881 was wrongly assigned to a bug that was deemed to be a non-security issue by the Linux kernel security team.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-5197",
      "Description": "A use-after-free vulnerability in the Linux kernel's netfilter: nf_tables component can be exploited to achieve local privilege escalation.\n\nAddition and removal of rules from chain bindings within the same transaction causes leads to use-after-free.\n\nWe recommend upgrading past commit f15f29fd4779be8a418b66e9d52979bb6d6c2325.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52340",
      "Description": "The IPv6 implementation in the Linux kernel before 6.3 has a net/ipv6/route.c max_size threshold that can be consumed easily, e.g., leading to a denial of service (network is unreachable errors) when IPv6 packets are sent in a loop via a raw socket.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52425",
      "Description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libexpat1-2.4.4-150400.3.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52429",
      "Description": "dm_table_create in drivers/md/dm-table.c in the Linux kernel through 6.7.4 can attempt to (in alloc_targets) allocate more than INT_MAX bytes, and crash, because of a missing check for struct dm_ioctl.target_count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52439",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuio: Fix use-after-free in uio_open\n\ncore-1\t\t\t\tcore-2\n-------------------------------------------------------\nuio_unregister_device\t\tuio_open\n\t\t\t\tidev = idr_find()\ndevice_unregister(\u0026idev-\u003edev)\nput_device(\u0026idev-\u003edev)\nuio_device_release\n\t\t\t\tget_device(\u0026idev-\u003edev)\nkfree(idev)\nuio_free_minor(minor)\n\t\t\t\tuio_release\n\t\t\t\tput_device(\u0026idev-\u003edev)\n\t\t\t\tkfree(idev)\n-------------------------------------------------------\n\nIn the core-1 uio_unregister_device(), the device_unregister will kfree\nidev when the idev-\u003edev kobject ref is 1. But after core-1\ndevice_unregister, put_device and before doing kfree, the core-2 may\nget_device. Then:\n1. After core-1 kfree idev, the core-2 will do use-after-free for idev.\n2. When core-2 do uio_release and put_device, the idev will be double\n   freed.\n\nTo address this issue, we can get idev atomic \u0026 inc idev reference with\nminor_lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52443",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: avoid crash when parsed profile name is empty\n\nWhen processing a packed profile in unpack_profile() described like\n\n \"profile :ns::samba-dcerpcd /usr/lib*/samba/{,samba/}samba-dcerpcd {...}\"\n\na string \":samba-dcerpcd\" is unpacked as a fully-qualified name and then\npassed to aa_splitn_fqname().\n\naa_splitn_fqname() treats \":samba-dcerpcd\" as only containing a namespace.\nThus it returns NULL for tmpname, meanwhile tmpns is non-NULL. Later\naa_alloc_profile() crashes as the new profile name is NULL now.\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 6 PID: 1657 Comm: apparmor_parser Not tainted 6.7.0-rc2-dirty #16\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014\nRIP: 0010:strlen+0x1e/0xa0\nCall Trace:\n \u003cTASK\u003e\n ? strlen+0x1e/0xa0\n aa_policy_init+0x1bb/0x230\n aa_alloc_profile+0xb1/0x480\n unpack_profile+0x3bc/0x4960\n aa_unpack+0x309/0x15e0\n aa_replace_profiles+0x213/0x33c0\n policy_update+0x261/0x370\n profile_replace+0x20e/0x2a0\n vfs_write+0x2af/0xe00\n ksys_write+0x126/0x250\n do_syscall_64+0x46/0xf0\n entry_SYSCALL_64_after_hwframe+0x6e/0x76\n \u003c/TASK\u003e\n---[ end trace 0000000000000000 ]---\nRIP: 0010:strlen+0x1e/0xa0\n\nIt seems such behaviour of aa_splitn_fqname() is expected and checked in\nother places where it is called (e.g. aa_remove_profiles). Well, there\nis an explicit comment \"a ns name without a following profile is allowed\"\ninside.\n\nAFAICS, nothing can prevent unpacked \"name\" to be in form like\n\":samba-dcerpcd\" - it is passed from userspace.\n\nDeny the whole profile set replacement in such case and inform user with\nEPROTO and an explaining message.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52445",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: pvrusb2: fix use after free on context disconnection\n\nUpon module load, a kthread is created targeting the\npvr2_context_thread_func function, which may call pvr2_context_destroy\nand thus call kfree() on the context object. However, that might happen\nbefore the usb hub_event handler is able to notify the driver. This\npatch adds a sanity check before the invalid read reported by syzbot,\nwithin the context disconnection call stack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52447",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Defer the free of inner map when necessary\n\nWhen updating or deleting an inner map in map array or map htab, the map\nmay still be accessed by non-sleepable program or sleepable program.\nHowever bpf_map_fd_put_ptr() decreases the ref-counter of the inner map\ndirectly through bpf_map_put(), if the ref-counter is the last one\n(which is true for most cases), the inner map will be freed by\nops-\u003emap_free() in a kworker. But for now, most .map_free() callbacks\ndon't use synchronize_rcu() or its variants to wait for the elapse of a\nRCU grace period, so after the invocation of ops-\u003emap_free completes,\nthe bpf program which is accessing the inner map may incur\nuse-after-free problem.\n\nFix the free of inner map by invoking bpf_map_free_deferred() after both\none RCU grace period and one tasks trace RCU grace period if the inner\nmap has been removed from the outer map before. The deferment is\naccomplished by using call_rcu() or call_rcu_tasks_trace() when\nreleasing the last ref-counter of bpf map. The newly-added rcu_head\nfield in bpf_map shares the same storage space with work field to\nreduce the size of bpf_map.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52448",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix kernel NULL pointer dereference in gfs2_rgrp_dump\n\nSyzkaller has reported a NULL pointer dereference when accessing\nrgd-\u003erd_rgl in gfs2_rgrp_dump().  This can happen when creating\nrgd-\u003erd_gl fails in read_rindex_entry().  Add a NULL pointer check in\ngfs2_rgrp_dump() to prevent that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52449",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: Fix gluebi NULL pointer dereference caused by ftl notifier\n\nIf both ftl.ko and gluebi.ko are loaded, the notifier of ftl\ntriggers NULL pointer dereference when trying to access\n'gluebi-\u003edesc' in gluebi_read().\n\nubi_gluebi_init\n  ubi_register_volume_notifier\n    ubi_enumerate_volumes\n      ubi_notify_all\n        gluebi_notify    nb-\u003enotifier_call()\n          gluebi_create\n            mtd_device_register\n              mtd_device_parse_register\n                add_mtd_device\n                  blktrans_notify_add   not-\u003eadd()\n                    ftl_add_mtd         tr-\u003eadd_mtd()\n                      scan_header\n                        mtd_read\n                          mtd_read_oob\n                            mtd_read_oob_std\n                              gluebi_read   mtd-\u003eread()\n                                gluebi-\u003edesc - NULL\n\nDetailed reproduction information available at the Link [1],\n\nIn the normal case, obtain gluebi-\u003edesc in the gluebi_get_device(),\nand access gluebi-\u003edesc in the gluebi_read(). However,\ngluebi_get_device() is not executed in advance in the\nftl_add_mtd() process, which leads to NULL pointer dereference.\n\nThe solution for the gluebi module is to run jffs2 on the UBI\nvolume without considering working with ftl or mtdblock [2].\nTherefore, this problem can be avoided by preventing gluebi from\ncreating the mtdblock device after creating mtd partition of the\ntype MTD_UBIVOLUME.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52450",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/intel/uncore: Fix NULL pointer dereference issue in upi_fill_topology()\n\nGet logical socket id instead of physical id in discover_upi_topology()\nto avoid out-of-bound access on 'upi = \u0026type-\u003etopology[nid][idx];' line\nthat leads to NULL pointer dereference in upi_fill_topology()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52451",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/memhp: Fix access beyond end of drmem array\n\ndlpar_memory_remove_by_index() may access beyond the bounds of the\ndrmem lmb array when the LMB lookup fails to match an entry with the\ngiven DRC index. When the search fails, the cursor is left pointing to\n\u0026drmem_info-\u003elmbs[drmem_info-\u003en_lmbs], which is one element past the\nlast valid entry in the array. The debug message at the end of the\nfunction then dereferences this pointer:\n\n        pr_debug(\"Failed to hot-remove memory at %llx\\n\",\n                 lmb-\u003ebase_addr);\n\nThis was found by inspection and confirmed with KASAN:\n\n  pseries-hotplug-mem: Attempting to hot-remove LMB, drc index 1234\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in dlpar_memory+0x298/0x1658\n  Read of size 8 at addr c000000364e97fd0 by task bash/949\n\n  dump_stack_lvl+0xa4/0xfc (unreliable)\n  print_report+0x214/0x63c\n  kasan_report+0x140/0x2e0\n  __asan_load8+0xa8/0xe0\n  dlpar_memory+0x298/0x1658\n  handle_dlpar_errorlog+0x130/0x1d0\n  dlpar_store+0x18c/0x3e0\n  kobj_attr_store+0x68/0xa0\n  sysfs_kf_write+0xc4/0x110\n  kernfs_fop_write_iter+0x26c/0x390\n  vfs_write+0x2d4/0x4e0\n  ksys_write+0xac/0x1a0\n  system_call_exception+0x268/0x530\n  system_call_vectored_common+0x15c/0x2ec\n\n  Allocated by task 1:\n   kasan_save_stack+0x48/0x80\n   kasan_set_track+0x34/0x50\n   kasan_save_alloc_info+0x34/0x50\n   __kasan_kmalloc+0xd0/0x120\n   __kmalloc+0x8c/0x320\n   kmalloc_array.constprop.0+0x48/0x5c\n   drmem_init+0x2a0/0x41c\n   do_one_initcall+0xe0/0x5c0\n   kernel_init_freeable+0x4ec/0x5a0\n   kernel_init+0x30/0x1e0\n   ret_from_kernel_user_thread+0x14/0x1c\n\n  The buggy address belongs to the object at c000000364e80000\n   which belongs to the cache kmalloc-128k of size 131072\n  The buggy address is located 0 bytes to the right of\n   allocated 98256-byte region [c000000364e80000, c000000364e97fd0)\n\n  ==================================================================\n  pseries-hotplug-mem: Failed to hot-remove memory at 0\n\nLog failed lookups with a separate message and dereference the\ncursor only when it points to a valid entry.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52452",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix accesses to uninit stack slots\n\nPrivileged programs are supposed to be able to read uninitialized stack\nmemory (ever since 6715df8d5) but, before this patch, these accesses\nwere permitted inconsistently. In particular, accesses were permitted\nabove state-\u003eallocated_stack, but not below it. In other words, if the\nstack was already \"large enough\", the access was permitted, but\notherwise the access was rejected instead of being allowed to \"grow the\nstack\". This undesired rejection was happening in two places:\n- in check_stack_slot_within_bounds()\n- in check_stack_range_initialized()\nThis patch arranges for these accesses to be permitted. A bunch of tests\nthat were relying on the old rejection had to change; all of them were\nchanged to add also run unprivileged, in which case the old behavior\npersists. One tests couldn't be updated - global_func16 - because it\ncan't run unprivileged for other reasons.\n\nThis patch also fixes the tracking of the stack size for variable-offset\nreads. This second fix is bundled in the same commit as the first one\nbecause they're inter-related. Before this patch, writes to the stack\nusing registers containing a variable offset (as opposed to registers\nwith fixed, known values) were not properly contributing to the\nfunction's needed stack size. As a result, it was possible for a program\nto verify, but then to attempt to read out-of-bounds data at runtime\nbecause a too small stack had been allocated for it.\n\nEach function tracks the size of the stack it needs in\nbpf_subprog_info.stack_depth, which is maintained by\nupdate_stack_depth(). For regular memory accesses, check_mem_access()\nwas calling update_state_depth() but it was passing in only the fixed\npart of the offset register, ignoring the variable offset. This was\nincorrect; the minimum possible value of that register should be used\ninstead.\n\nThis tracking is now fixed by centralizing the tracking of stack size in\ngrow_stack_state(), and by lifting the calls to grow_stack_state() to\ncheck_stack_access_within_bounds() as suggested by Andrii. The code is\nnow simpler and more convincingly tracks the correct maximum stack size.\ncheck_stack_range_initialized() can now rely on enough stack having been\nallocated for the access; this helps with the fix for the first issue.\n\nA few tests were changed to also check the stack depth computation. The\none that fails without this patch is verifier_var_off:stack_write_priv_vs_unpriv.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52456",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: imx: fix tx statemachine deadlock\n\nWhen using the serial port as RS485 port, the tx statemachine is used to\ncontrol the RTS pin to drive the RS485 transceiver TX_EN pin. When the\nTTY port is closed in the middle of a transmission (for instance during\nuserland application crash), imx_uart_shutdown disables the interface\nand disables the Transmission Complete interrupt. afer that,\nimx_uart_stop_tx bails on an incomplete transmission, to be retriggered\nby the TC interrupt. This interrupt is disabled and therefore the tx\nstatemachine never transitions out of SEND. The statemachine is in\ndeadlock now, and the TX_EN remains low, making the interface useless.\n\nimx_uart_stop_tx now checks for incomplete transmission AND whether TC\ninterrupts are enabled before bailing to be retriggered. This makes sure\nthe state machine handling is reached, and is properly set to\nWAIT_AFTER_SEND.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52457",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250: omap: Don't skip resource freeing if pm_runtime_resume_and_get() failed\n\nReturning an error code from .remove() makes the driver core emit the\nlittle helpful error message:\n\n\tremove callback returned a non-zero value. This will be ignored.\n\nand then remove the device anyhow. So all resources that were not freed\nare leaked in this case. Skipping serial8250_unregister_port() has the\npotential to keep enough of the UART around to trigger a use-after-free.\n\nSo replace the error return (and with it the little helpful error\nmessage) by a more useful error message and continue to cleanup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52463",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefivarfs: force RO when remounting if SetVariable is not supported\n\nIf SetVariable at runtime is not supported by the firmware we never assign\na callback for that function. At the same time mount the efivarfs as\nRO so no one can call that.  However, we never check the permission flags\nwhen someone remounts the filesystem as RW. As a result this leads to a\ncrash looking like this:\n\n$ mount -o remount,rw /sys/firmware/efi/efivars\n$ efi-updatevar -f PK.auth PK\n\n[  303.279166] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[  303.280482] Mem abort info:\n[  303.280854]   ESR = 0x0000000086000004\n[  303.281338]   EC = 0x21: IABT (current EL), IL = 32 bits\n[  303.282016]   SET = 0, FnV = 0\n[  303.282414]   EA = 0, S1PTW = 0\n[  303.282821]   FSC = 0x04: level 0 translation fault\n[  303.283771] user pgtable: 4k pages, 48-bit VAs, pgdp=000000004258c000\n[  303.284913] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n[  303.286076] Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP\n[  303.286936] Modules linked in: qrtr tpm_tis tpm_tis_core crct10dif_ce arm_smccc_trng rng_core drm fuse ip_tables x_tables ipv6\n[  303.288586] CPU: 1 PID: 755 Comm: efi-updatevar Not tainted 6.3.0-rc1-00108-gc7d0c4695c68 #1\n[  303.289748] Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.04-00627-g88336918701d 04/01/2023\n[  303.291150] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  303.292123] pc : 0x0\n[  303.292443] lr : efivar_set_variable_locked+0x74/0xec\n[  303.293156] sp : ffff800008673c10\n[  303.293619] x29: ffff800008673c10 x28: ffff0000037e8000 x27: 0000000000000000\n[  303.294592] x26: 0000000000000800 x25: ffff000002467400 x24: 0000000000000027\n[  303.295572] x23: ffffd49ea9832000 x22: ffff0000020c9800 x21: ffff000002467000\n[  303.296566] x20: 0000000000000001 x19: 00000000000007fc x18: 0000000000000000\n[  303.297531] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaac807ab54\n[  303.298495] x14: ed37489f673633c0 x13: 71c45c606de13f80 x12: 47464259e219acf4\n[  303.299453] x11: ffff000002af7b01 x10: 0000000000000003 x9 : 0000000000000002\n[  303.300431] x8 : 0000000000000010 x7 : ffffd49ea8973230 x6 : 0000000000a85201\n[  303.301412] x5 : 0000000000000000 x4 : ffff0000020c9800 x3 : 00000000000007fc\n[  303.302370] x2 : 0000000000000027 x1 : ffff000002467400 x0 : ffff000002467000\n[  303.303341] Call trace:\n[  303.303679]  0x0\n[  303.303938]  efivar_entry_set_get_size+0x98/0x16c\n[  303.304585]  efivarfs_file_write+0xd0/0x1a4\n[  303.305148]  vfs_write+0xc4/0x2e4\n[  303.305601]  ksys_write+0x70/0x104\n[  303.306073]  __arm64_sys_write+0x1c/0x28\n[  303.306622]  invoke_syscall+0x48/0x114\n[  303.307156]  el0_svc_common.constprop.0+0x44/0xec\n[  303.307803]  do_el0_svc+0x38/0x98\n[  303.308268]  el0_svc+0x2c/0x84\n[  303.308702]  el0t_64_sync_handler+0xf4/0x120\n[  303.309293]  el0t_64_sync+0x190/0x194\n[  303.309794] Code: ???????? ???????? ???????? ???????? (????????)\n[  303.310612] ---[ end trace 0000000000000000 ]---\n\nFix this by adding a .reconfigure() function to the fs operations which\nwe can use to check the requested flags and deny anything that's not RO\nif the firmware doesn't implement SetVariable at runtime.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52464",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nEDAC/thunderx: Fix possible out-of-bounds string access\n\nEnabling -Wstringop-overflow globally exposes a warning for a common bug\nin the usage of strncat():\n\n  drivers/edac/thunderx_edac.c: In function 'thunderx_ocx_com_threaded_isr':\n  drivers/edac/thunderx_edac.c:1136:17: error: 'strncat' specified bound 1024 equals destination size [-Werror=stringop-overflow=]\n   1136 |                 strncat(msg, other, OCX_MESSAGE_SIZE);\n        |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   ...\n   1145 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);\n   ...\n   1150 |                                 strncat(msg, other, OCX_MESSAGE_SIZE);\n\n   ...\n\nApparently the author of this driver expected strncat() to behave the\nway that strlcat() does, which uses the size of the destination buffer\nas its third argument rather than the length of the source buffer. The\nresult is that there is no check on the size of the allocated buffer.\n\nChange it to strlcat().\n\n  [ bp: Trim compiler output, fixup commit message. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52467",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: syscon: Fix null pointer dereference in of_syscon_register()\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52469",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/amd/pm: fix a use-after-free in kv_parse_power_table\n\nWhen ps allocated by kzalloc equals to NULL, kv_parse_power_table\nfrees adev-\u003epm.dpm.ps that allocated before. However, after the control\nflow goes through the following call chains:\n\nkv_parse_power_table\n  |-\u003e kv_dpm_init\n        |-\u003e kv_dpm_sw_init\n\t      |-\u003e kv_dpm_fini\n\nThe adev-\u003epm.dpm.ps is used in the for loop of kv_dpm_fini after its\nfirst free in kv_parse_power_table and causes a use-after-free bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52470",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: check the alloc_workqueue return value in radeon_crtc_init()\n\ncheck the alloc_workqueue return value in radeon_crtc_init()\nto avoid null-ptr-deref.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52474",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests\n\nhfi1 user SDMA request processing has two bugs that can cause data\ncorruption for user SDMA requests that have multiple payload iovecs\nwhere an iovec other than the tail iovec does not run up to the page\nboundary for the buffer pointed to by that iovec.a\n\nHere are the specific bugs:\n1. user_sdma_txadd() does not use struct user_sdma_iovec-\u003eiov.iov_len.\n   Rather, user_sdma_txadd() will add up to PAGE_SIZE bytes from iovec\n   to the packet, even if some of those bytes are past\n   iovec-\u003eiov.iov_len and are thus not intended to be in the packet.\n2. user_sdma_txadd() and user_sdma_send_pkts() fail to advance to the\n   next iovec in user_sdma_request-\u003eiovs when the current iovec\n   is not PAGE_SIZE and does not contain enough data to complete the\n   packet. The transmitted packet will contain the wrong data from the\n   iovec pages.\n\nThis has not been an issue with SDMA packets from hfi1 Verbs or PSM2\nbecause they only produce iovecs that end short of PAGE_SIZE as the tail\niovec of an SDMA request.\n\nFixing these bugs exposes other bugs with the SDMA pin cache\n(struct mmu_rb_handler) that get in way of supporting user SDMA requests\nwith multiple payload iovecs whose buffers do not end at PAGE_SIZE. So\nthis commit fixes those issues as well.\n\nHere are the mmu_rb_handler bugs that non-PAGE_SIZE-end multi-iovec\npayload user SDMA requests can hit:\n1. Overlapping memory ranges in mmu_rb_handler will result in duplicate\n   pinnings.\n2. When extending an existing mmu_rb_handler entry (struct mmu_rb_node),\n   the mmu_rb code (1) removes the existing entry under a lock, (2)\n   releases that lock, pins the new pages, (3) then reacquires the lock\n   to insert the extended mmu_rb_node.\n\n   If someone else comes in and inserts an overlapping entry between (2)\n   and (3), insert in (3) will fail.\n\n   The failure path code in this case unpins _all_ pages in either the\n   original mmu_rb_node or the new mmu_rb_node that was inserted between\n   (2) and (3).\n3. In hfi1_mmu_rb_remove_unless_exact(), mmu_rb_node-\u003erefcount is\n   incremented outside of mmu_rb_handler-\u003elock. As a result, mmu_rb_node\n   could be evicted by another thread that gets mmu_rb_handler-\u003elock and\n   checks mmu_rb_node-\u003erefcount before mmu_rb_node-\u003erefcount is\n   incremented.\n4. Related to #2 above, SDMA request submission failure path does not\n   check mmu_rb_node-\u003erefcount before freeing mmu_rb_node object.\n\n   If there are other SDMA requests in progress whose iovecs have\n   pointers to the now-freed mmu_rb_node(s), those pointers to the\n   now-freed mmu_rb nodes will be dereferenced when those SDMA requests\n   complete.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52475",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: powermate - fix use-after-free in powermate_config_complete\n\nsyzbot has found a use-after-free bug [1] in the powermate driver. This\nhappens when the device is disconnected, which leads to a memory free from\nthe powermate_device struct.  When an asynchronous control message\ncompletes after the kfree and its callback is invoked, the lock does not\nexist anymore and hence the bug.\n\nUse usb_kill_urb() on pm-\u003econfig to cancel any in-progress requests upon\ndevice disconnection.\n\n[1] https://syzkaller.appspot.com/bug?extid=0434ac83f907a1dbdd1e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52476",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/lbr: Filter vsyscall addresses\n\nWe found that a panic can occur when a vsyscall is made while LBR sampling\nis active. If the vsyscall is interrupted (NMI) for perf sampling, this\ncall sequence can occur (most recent at top):\n\n    __insn_get_emulate_prefix()\n    insn_get_emulate_prefix()\n    insn_get_prefixes()\n    insn_get_opcode()\n    decode_branch_type()\n    get_branch_type()\n    intel_pmu_lbr_filter()\n    intel_pmu_handle_irq()\n    perf_event_nmi_handler()\n\nWithin __insn_get_emulate_prefix() at frame 0, a macro is called:\n\n    peek_nbyte_next(insn_byte_t, insn, i)\n\nWithin this macro, this dereference occurs:\n\n    (insn)-\u003enext_byte\n\nInspecting registers at this point, the value of the next_byte field is the\naddress of the vsyscall made, for example the location of the vsyscall\nversion of gettimeofday() at 0xffffffffff600000. The access to an address\nin the vsyscall region will trigger an oops due to an unhandled page fault.\n\nTo fix the bug, filtering for vsyscalls can be done when\ndetermining the branch type. This patch will return\na \"none\" branch if a kernel address if found to lie in the\nvsyscall region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52477",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: hub: Guard against accesses to uninitialized BOS descriptors\n\nMany functions in drivers/usb/core/hub.c and drivers/usb/core/hub.h\naccess fields inside udev-\u003ebos without checking if it was allocated and\ninitialized. If usb_get_bos_descriptor() fails for whatever\nreason, udev-\u003ebos will be NULL and those accesses will result in a\ncrash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000018\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 5 PID: 17818 Comm: kworker/5:1 Tainted: G W 5.15.108-18910-gab0e1cb584e1 #1 \u003cHASH:1f9e 1\u003e\nHardware name: Google Kindred/Kindred, BIOS Google_Kindred.12672.413.0 02/03/2021\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:hub_port_reset+0x193/0x788\nCode: 89 f7 e8 20 f7 15 00 48 8b 43 08 80 b8 96 03 00 00 03 75 36 0f b7 88 92 03 00 00 81 f9 10 03 00 00 72 27 48 8b 80 a8 03 00 00 \u003c48\u003e 83 78 18 00 74 19 48 89 df 48 8b 75 b0 ba 02 00 00 00 4c 89 e9\nRSP: 0018:ffffab740c53fcf8 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffffa1bc5f678000 RCX: 0000000000000310\nRDX: fffffffffffffdff RSI: 0000000000000286 RDI: ffffa1be9655b840\nRBP: ffffab740c53fd70 R08: 00001b7d5edaa20c R09: ffffffffb005e060\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: ffffab740c53fd3e R14: 0000000000000032 R15: 0000000000000000\nFS: 0000000000000000(0000) GS:ffffa1be96540000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000018 CR3: 000000022e80c005 CR4: 00000000003706e0\nCall Trace:\nhub_event+0x73f/0x156e\n? hub_activate+0x5b7/0x68f\nprocess_one_work+0x1a2/0x487\nworker_thread+0x11a/0x288\nkthread+0x13a/0x152\n? process_one_work+0x487/0x487\n? kthread_associate_blkcg+0x70/0x70\nret_from_fork+0x1f/0x30\n\nFall back to a default behavior if the BOS descriptor isn't accessible\nand skip all the functionalities that depend on it: LPM support checks,\nSuper Speed capabilitiy checks, U1/U2 states setup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52478",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: logitech-hidpp: Fix kernel crash on receiver USB disconnect\n\nhidpp_connect_event() has *four* time-of-check vs time-of-use (TOCTOU)\nraces when it races with itself.\n\nhidpp_connect_event() primarily runs from a workqueue but it also runs\non probe() and if a \"device-connected\" packet is received by the hw\nwhen the thread running hidpp_connect_event() from probe() is waiting on\nthe hw, then a second thread running hidpp_connect_event() will be\nstarted from the workqueue.\n\nThis opens the following races (note the below code is simplified):\n\n1. Retrieving + printing the protocol (harmless race):\n\n\tif (!hidpp-\u003eprotocol_major) {\n\t\thidpp_root_get_protocol_version()\n\t\thidpp-\u003eprotocol_major = response.rap.params[0];\n\t}\n\nWe can actually see this race hit in the dmesg in the abrt output\nattached to rhbz#2227968:\n\n[ 3064.624215] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.\n[ 3064.658184] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.\n\nTesting with extra logging added has shown that after this the 2 threads\ntake turn grabbing the hw access mutex (send_mutex) so they ping-pong\nthrough all the other TOCTOU cases managing to hit all of them:\n\n2. Updating the name to the HIDPP name (harmless race):\n\n\tif (hidpp-\u003ename == hdev-\u003ename) {\n\t\t...\n\t\thidpp-\u003ename = new_name;\n\t}\n\n3. Initializing the power_supply class for the battery (problematic!):\n\nhidpp_initialize_battery()\n{\n        if (hidpp-\u003ebattery.ps)\n                return 0;\n\n\tprobe_battery(); /* Blocks, threads take turns executing this */\n\n\thidpp-\u003ebattery.desc.properties =\n\t\tdevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\n\n\thidpp-\u003ebattery.ps =\n\t\tdevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\t\t\t\t\t   \u0026hidpp-\u003ebattery.desc, cfg);\n}\n\n4. Creating delayed input_device (potentially problematic):\n\n\tif (hidpp-\u003edelayed_input)\n\t\treturn;\n\n\thidpp-\u003edelayed_input = hidpp_allocate_input(hdev);\n\nThe really big problem here is 3. Hitting the race leads to the following\nsequence:\n\n\thidpp-\u003ebattery.desc.properties =\n\t\tdevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\n\n\thidpp-\u003ebattery.ps =\n\t\tdevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\t\t\t\t\t   \u0026hidpp-\u003ebattery.desc, cfg);\n\n\t...\n\n\thidpp-\u003ebattery.desc.properties =\n\t\tdevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\n\n\thidpp-\u003ebattery.ps =\n\t\tdevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\t\t\t\t\t   \u0026hidpp-\u003ebattery.desc, cfg);\n\nSo now we have registered 2 power supplies for the same battery,\nwhich looks a bit weird from userspace's pov but this is not even\nthe really big problem.\n\nNotice how:\n\n1. This is all devm-maganaged\n2. The hidpp-\u003ebattery.desc struct is shared between the 2 power supplies\n3. hidpp-\u003ebattery.desc.properties points to the result from the second\n   devm_kmemdup()\n\nThis causes a use after free scenario on USB disconnect of the receiver:\n1. The last registered power supply class device gets unregistered\n2. The memory from the last devm_kmemdup() call gets freed,\n   hidpp-\u003ebattery.desc.properties now points to freed memory\n3. The first registered power supply class device gets unregistered,\n   this involves sending a remove uevent to userspace which invokes\n   power_supply_uevent() to fill the uevent data\n4. power_supply_uevent() uses hidpp-\u003ebattery.desc.properties which\n   now points to freed memory leading to backtraces like this one:\n\nSep 22 20:01:35 eric kernel: BUG: unable to handle page fault for address: ffffb2140e017f08\n...\nSep 22 20:01:35 eric kernel: Workqueue: usb_hub_wq hub_event\nSep 22 20:01:35 eric kernel: RIP: 0010:power_supply_uevent+0xee/0x1d0\n...\nSep 22 20:01:35 eric kernel:  ? asm_exc_page_fault+0x26/0x30\nSep 22 20:01:35 eric kernel:  ? power_supply_uevent+0xee/0x1d0\nSep 22 20:01:35 eric kernel:  ? power_supply_uevent+0x10d/0x1d0\nSep 22 20:01:35 eric kernel:  dev_uevent+0x10f/0x2d0\nSep 22 20:01:35 eric kernel:  kobject_uevent_env+0x291/0x680\nSep 22 20:01:35 eric kernel:  \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52482",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/srso: Add SRSO mitigation for Hygon processors\n\nAdd mitigation for the speculative return stack overflow vulnerability\nwhich exists on Hygon processors too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52484",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/arm-smmu-v3: Fix soft lockup triggered by arm_smmu_mm_invalidate_range\n\nWhen running an SVA case, the following soft lockup is triggered:\n--------------------------------------------------------------------\nwatchdog: BUG: soft lockup - CPU#244 stuck for 26s!\npstate: 83400009 (Nzcv daif +PAN -UAO +TCO +DIT -SSBS BTYPE=--)\npc : arm_smmu_cmdq_issue_cmdlist+0x178/0xa50\nlr : arm_smmu_cmdq_issue_cmdlist+0x150/0xa50\nsp : ffff8000d83ef290\nx29: ffff8000d83ef290 x28: 000000003b9aca00 x27: 0000000000000000\nx26: ffff8000d83ef3c0 x25: da86c0812194a0e8 x24: 0000000000000000\nx23: 0000000000000040 x22: ffff8000d83ef340 x21: ffff0000c63980c0\nx20: 0000000000000001 x19: ffff0000c6398080 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: ffff3000b4a3bbb0\nx14: ffff3000b4a30888 x13: ffff3000b4a3cf60 x12: 0000000000000000\nx11: 0000000000000000 x10: 0000000000000000 x9 : ffffc08120e4d6bc\nx8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000048cfa\nx5 : 0000000000000000 x4 : 0000000000000001 x3 : 000000000000000a\nx2 : 0000000080000000 x1 : 0000000000000000 x0 : 0000000000000001\nCall trace:\n arm_smmu_cmdq_issue_cmdlist+0x178/0xa50\n __arm_smmu_tlb_inv_range+0x118/0x254\n arm_smmu_tlb_inv_range_asid+0x6c/0x130\n arm_smmu_mm_invalidate_range+0xa0/0xa4\n __mmu_notifier_invalidate_range_end+0x88/0x120\n unmap_vmas+0x194/0x1e0\n unmap_region+0xb4/0x144\n do_mas_align_munmap+0x290/0x490\n do_mas_munmap+0xbc/0x124\n __vm_munmap+0xa8/0x19c\n __arm64_sys_munmap+0x28/0x50\n invoke_syscall+0x78/0x11c\n el0_svc_common.constprop.0+0x58/0x1c0\n do_el0_svc+0x34/0x60\n el0_svc+0x2c/0xd4\n el0t_64_sync_handler+0x114/0x140\n el0t_64_sync+0x1a4/0x1a8\n--------------------------------------------------------------------\n\nNote that since 6.6-rc1 the arm_smmu_mm_invalidate_range above is renamed\nto \"arm_smmu_mm_arch_invalidate_secondary_tlbs\", yet the problem remains.\n\nThe commit 06ff87bae8d3 (\"arm64: mm: remove unused functions and variable\nprotoypes\") fixed a similar lockup on the CPU MMU side. Yet, it can occur\nto SMMU too, since arm_smmu_mm_arch_invalidate_secondary_tlbs() is called\ntypically next to MMU tlb flush function, e.g.\n\ttlb_flush_mmu_tlbonly {\n\t\ttlb_flush {\n\t\t\t__flush_tlb_range {\n\t\t\t\t// check MAX_TLBI_OPS\n\t\t\t}\n\t\t}\n\t\tmmu_notifier_arch_invalidate_secondary_tlbs {\n\t\t\tarm_smmu_mm_arch_invalidate_secondary_tlbs {\n\t\t\t\t// does not check MAX_TLBI_OPS\n\t\t\t}\n\t\t}\n\t}\n\nClone a CMDQ_MAX_TLBI_OPS from the MAX_TLBI_OPS in tlbflush.h, since in an\nSVA case SMMU uses the CPU page table, so it makes sense to align with the\ntlbflush code. Then, replace per-page TLBI commands with a single per-asid\nTLBI command, if the request size hits this threshold.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52492",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: fix NULL pointer in channel unregistration function\n\n__dma_async_device_channel_register() can fail. In case of failure,\nchan-\u003elocal is freed (with free_percpu()), and chan-\u003elocal is nullified.\nWhen dma_async_device_unregister() is called (because of managed API or\nintentionally by DMA controller driver), channels are unconditionally\nunregistered, leading to this NULL pointer:\n[    1.318693] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\n[...]\n[    1.484499] Call trace:\n[    1.486930]  device_del+0x40/0x394\n[    1.490314]  device_unregister+0x20/0x7c\n[    1.494220]  __dma_async_device_channel_unregister+0x68/0xc0\n\nLook at dma_async_device_register() function error path, channel device\nunregistration is done only if chan-\u003elocal is not NULL.\n\nThen add the same condition at the beginning of\n__dma_async_device_channel_unregister() function, to avoid NULL pointer\nissue whatever the API used to reach this function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52497",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix lz4 inplace decompression\n\nCurrently EROFS can map another compressed buffer for inplace\ndecompression, that was used to handle the cases that some pages of\ncompressed data are actually not in-place I/O.\n\nHowever, like most simple LZ77 algorithms, LZ4 expects the compressed\ndata is arranged at the end of the decompressed buffer and it\nexplicitly uses memmove() to handle overlapping:\n  __________________________________________________________\n |_ direction of decompression --\u003e ____ |_ compressed data _|\n\nAlthough EROFS arranges compressed data like this, it typically maps two\nindividual virtual buffers so the relative order is uncertain.\nPreviously, it was hardly observed since LZ4 only uses memmove() for\nshort overlapped literals and x86/arm64 memmove implementations seem to\ncompletely cover it up and they don't have this issue.  Juhyung reported\nthat EROFS data corruption can be found on a new Intel x86 processor.\nAfter some analysis, it seems that recent x86 processors with the new\nFSRM feature expose this issue with \"rep movsb\".\n\nLet's strictly use the decompressed buffer for lz4 inplace\ndecompression for now.  Later, as an useful improvement, we could try\nto tie up these two buffers together in the correct order.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52501",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Do not attempt to read past \"commit\"\n\nWhen iterating over the ring buffer while the ring buffer is active, the\nwriter can corrupt the reader. There's barriers to help detect this and\nhandle it, but that code missed the case where the last event was at the\nvery end of the page and has only 4 bytes left.\n\nThe checks to detect the corruption by the writer to reads needs to see the\nlength of the event. If the length in the first 4 bytes is zero then the\nlength is stored in the second 4 bytes. But if the writer is in the process\nof updating that code, there's a small window where the length in the first\n4 bytes could be zero even though the length is only 4 bytes. That will\ncause rb_event_length() to read the next 4 bytes which could happen to be off the\nallocated page.\n\nTo protect against this, fail immediately if the next event pointer is\nless than 8 bytes from the end of the commit (last byte of data), as all\nevents must be a minimum of 8 bytes anyway.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52502",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: fix races in nfc_llcp_sock_get() and nfc_llcp_sock_get_sn()\n\nSili Luo reported a race in nfc_llcp_sock_get(), leading to UAF.\n\nGetting a reference on the socket found in a lookup while\nholding a lock should happen before releasing the lock.\n\nnfc_llcp_sock_get_sn() has a similar problem.\n\nFinally nfc_llcp_recv_snl() needs to make sure the socket\nfound by nfc_llcp_sock_from_sn() does not disappear.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52504",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/alternatives: Disable KASAN in apply_alternatives()\n\nFei has reported that KASAN triggers during apply_alternatives() on\na 5-level paging machine:\n\n\tBUG: KASAN: out-of-bounds in rcu_is_watching()\n\tRead of size 4 at addr ff110003ee6419a0 by task swapper/0/0\n\t...\n\t__asan_load4()\n\trcu_is_watching()\n\ttrace_hardirqs_on()\n\ttext_poke_early()\n\tapply_alternatives()\n\t...\n\nOn machines with 5-level paging, cpu_feature_enabled(X86_FEATURE_LA57)\ngets patched. It includes KASAN code, where KASAN_SHADOW_START depends on\n__VIRTUAL_MASK_SHIFT, which is defined with cpu_feature_enabled().\n\nKASAN gets confused when apply_alternatives() patches the\nKASAN_SHADOW_START users. A test patch that makes KASAN_SHADOW_START\nstatic, by replacing __VIRTUAL_MASK_SHIFT with 56, works around the issue.\n\nFix it for real by disabling KASAN while the kernel is patching alternatives.\n\n[ mingo: updated the changelog ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52507",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: assert requested protocol is valid\n\nThe protocol is used in a bit mask to determine if the protocol is\nsupported. Assert the provided protocol is less than the maximum\ndefined so it doesn't potentially perform a shift-out-of-bounds and\nprovide a clearer error for undefined protocols vs unsupported ones.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52508",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fc: Prevent null pointer dereference in nvme_fc_io_getuuid()\n\nThe nvme_fc_fcp_op structure describing an AEN operation is initialized with a\nnull request structure pointer. An FC LLDD may make a call to\nnvme_fc_io_getuuid passing a pointer to an nvmefc_fcp_req for an AEN operation.\n\nAdd validation of the request structure pointer before dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52510",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nieee802154: ca8210: Fix a potential UAF in ca8210_probe\n\nIf of_clk_add_provider() fails in ca8210_register_ext_clock(),\nit calls clk_unregister() to release priv-\u003eclk and returns an\nerror. However, the caller ca8210_probe() then calls ca8210_remove(),\nwhere priv-\u003eclk is freed again in ca8210_unregister_ext_clock(). In\nthis case, a use-after-free may happen in the second time we call\nclk_unregister().\n\nFix this by removing the first clk_unregister(). Also, priv-\u003eclk could\nbe an error code on failure of clk_register_fixed_rate(). Use\nIS_ERR_OR_NULL to catch this case in ca8210_unregister_ext_clock().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52511",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: sun6i: reduce DMA RX transfer width to single byte\n\nThrough empirical testing it has been determined that sometimes RX SPI\ntransfers with DMA enabled return corrupted data. This is down to single\nor even multiple bytes lost during DMA transfer from SPI peripheral to\nmemory. It seems the RX FIFO within the SPI peripheral can become\nconfused when performing bus read accesses wider than a single byte to it\nduring an active SPI transfer.\n\nThis patch reduces the width of individual DMA read accesses to the\nRX FIFO to a single byte to mitigate that issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52513",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix connection failure handling\n\nIn case immediate MPA request processing fails, the newly\ncreated endpoint unlinks the listening endpoint and is\nready to be dropped. This special case was not handled\ncorrectly by the code handling the later TCP socket close,\ncausing a NULL dereference crash in siw_cm_work_handler()\nwhen dereferencing a NULL listener. We now also cancel\nthe useless MPA timeout, if immediate MPA request\nprocessing fails.\n\nThis patch furthermore simplifies MPA processing in general:\nScheduling a useless TCP socket read in sk_data_ready() upcall\nis now surpressed, if the socket is already moved out of\nTCP_ESTABLISHED state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52515",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srp: Do not call scsi_done() from srp_abort()\n\nAfter scmd_eh_abort_handler() has called the SCSI LLD eh_abort_handler\ncallback, it performs one of the following actions:\n* Call scsi_queue_insert().\n* Call scsi_finish_command().\n* Call scsi_eh_scmd_add().\nHence, SCSI abort handlers must not call scsi_done(). Otherwise all\nthe above actions would trigger a use-after-free. Hence remove the\nscsi_done() call from srp_abort(). Keep the srp_free_req() call\nbefore returning SUCCESS because we may not see the command again if\nSUCCESS is returned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52517",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: sun6i: fix race between DMA RX transfer completion and RX FIFO drain\n\nPreviously the transfer complete IRQ immediately drained to RX FIFO to\nread any data remaining in FIFO to the RX buffer. This behaviour is\ncorrect when dealing with SPI in interrupt mode. However in DMA mode the\ntransfer complete interrupt still fires as soon as all bytes to be\ntransferred have been stored in the FIFO. At that point data in the FIFO\nstill needs to be picked up by the DMA engine. Thus the drain procedure\nand DMA engine end up racing to read from RX FIFO, corrupting any data\nread. Additionally the RX buffer pointer is never adjusted according to\nDMA progress in DMA mode, thus calling the RX FIFO drain procedure in DMA\nmode is a bug.\nFix corruptions in DMA RX mode by draining RX FIFO only in interrupt mode.\nAlso wait for completion of RX DMA when in DMA mode before returning to\nensure all data has been copied to the supplied memory buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52519",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: intel-ish-hid: ipc: Disable and reenable ACPI GPE bit\n\nThe EHL (Elkhart Lake) based platforms provide a OOB (Out of band)\nservice, which allows to wakup device when the system is in S5 (Soft-Off\nstate). This OOB service can be enabled/disabled from BIOS settings. When\nenabled, the ISH device gets PME wake capability. To enable PME wakeup,\ndriver also needs to enable ACPI GPE bit.\n\nOn resume, BIOS will clear the wakeup bit. So driver need to re-enable it\nin resume function to keep the next wakeup capability. But this BIOS\nclearing of wakeup bit doesn't decrement internal OS GPE reference count,\nso this reenabling on every resume will cause reference count to overflow.\n\nSo first disable and reenable ACPI GPE bit using acpi_disable_gpe().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52520",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: think-lmi: Fix reference leak\n\nIf a duplicate attribute is found using kset_find_obj(), a reference\nto that attribute is returned which needs to be disposed accordingly\nusing kobject_put(). Move the setting name validation into a separate\nfunction to allow for this change without having to duplicate the\ncleanup code for this setting.\nAs a side note, a very similar bug was fixed in\ncommit 7295a996fdab (\"platform/x86: dell-sysman: Fix reference leak\"),\nso it seems that the bug was copied from that driver.\n\nCompile-tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52523",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Reject sk_msg egress redirects to non-TCP sockets\n\nWith a SOCKMAP/SOCKHASH map and an sk_msg program user can steer messages\nsent from one TCP socket (s1) to actually egress from another TCP\nsocket (s2):\n\ntcp_bpf_sendmsg(s1)\t\t// = sk_prot-\u003esendmsg\n  tcp_bpf_send_verdict(s1)\t// __SK_REDIRECT case\n    tcp_bpf_sendmsg_redir(s2)\n      tcp_bpf_push_locked(s2)\n\ttcp_bpf_push(s2)\n\t  tcp_rate_check_app_limited(s2) // expects tcp_sock\n\t  tcp_sendmsg_locked(s2)\t // ditto\n\nThere is a hard-coded assumption in the call-chain, that the egress\nsocket (s2) is a TCP socket.\n\nHowever in commit 122e6c79efe1 (\"sock_map: Update sock type checks for\nUDP\") we have enabled redirects to non-TCP sockets. This was done for the\nsake of BPF sk_skb programs. There was no indention to support sk_msg\nsend-to-egress use case.\n\nAs a result, attempts to send-to-egress through a non-TCP socket lead to a\ncrash due to invalid downcast from sock to tcp_sock:\n\n BUG: kernel NULL pointer dereference, address: 000000000000002f\n ...\n Call Trace:\n  \u003cTASK\u003e\n  ? show_regs+0x60/0x70\n  ? __die+0x1f/0x70\n  ? page_fault_oops+0x80/0x160\n  ? do_user_addr_fault+0x2d7/0x800\n  ? rcu_is_watching+0x11/0x50\n  ? exc_page_fault+0x70/0x1c0\n  ? asm_exc_page_fault+0x27/0x30\n  ? tcp_tso_segs+0x14/0xa0\n  tcp_write_xmit+0x67/0xce0\n  __tcp_push_pending_frames+0x32/0xf0\n  tcp_push+0x107/0x140\n  tcp_sendmsg_locked+0x99f/0xbb0\n  tcp_bpf_push+0x19d/0x3a0\n  tcp_bpf_sendmsg_redir+0x55/0xd0\n  tcp_bpf_send_verdict+0x407/0x550\n  tcp_bpf_sendmsg+0x1a1/0x390\n  inet_sendmsg+0x6a/0x70\n  sock_sendmsg+0x9d/0xc0\n  ? sockfd_lookup_light+0x12/0x80\n  __sys_sendto+0x10e/0x160\n  ? syscall_enter_from_user_mode+0x20/0x60\n  ? __this_cpu_preempt_check+0x13/0x20\n  ? lockdep_hardirqs_on+0x82/0x110\n  __x64_sys_sendto+0x1f/0x30\n  do_syscall_64+0x38/0x90\n  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nReject selecting a non-TCP sockets as redirect target from a BPF sk_msg\nprogram to prevent the crash. When attempted, user will receive an EACCES\nerror from send/sendto/sendmsg() syscall.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52524",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: llcp: Add lock when modifying device list\n\nThe device list needs its associated lock held when modifying it, or the\nlist could become corrupted, as syzbot discovered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52525",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mwifiex: Fix oob check condition in mwifiex_process_rx_packet\n\nOnly skip the code path trying to access the rfc1042 headers when the\nbuffer is too small, so the driver can still process packets without\nrfc1042 headers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52528",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Fix uninit-value access in __smsc75xx_read_reg\n\nsyzbot reported the following uninit-value access issue:\n\n=====================================================\nBUG: KMSAN: uninit-value in smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:975 [inline]\nBUG: KMSAN: uninit-value in smsc75xx_bind+0x5c9/0x11e0 drivers/net/usb/smsc75xx.c:1482\nCPU: 0 PID: 8696 Comm: kworker/0:3 Not tainted 5.8.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nWorkqueue: usb_hub_wq hub_event\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x21c/0x280 lib/dump_stack.c:118\n kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:121\n __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:215\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:975 [inline]\n smsc75xx_bind+0x5c9/0x11e0 drivers/net/usb/smsc75xx.c:1482\n usbnet_probe+0x1152/0x3f90 drivers/net/usb/usbnet.c:1737\n usb_probe_interface+0xece/0x1550 drivers/usb/core/driver.c:374\n really_probe+0xf20/0x20b0 drivers/base/dd.c:529\n driver_probe_device+0x293/0x390 drivers/base/dd.c:701\n __device_attach_driver+0x63f/0x830 drivers/base/dd.c:807\n bus_for_each_drv+0x2ca/0x3f0 drivers/base/bus.c:431\n __device_attach+0x4e2/0x7f0 drivers/base/dd.c:873\n device_initial_probe+0x4a/0x60 drivers/base/dd.c:920\n bus_probe_device+0x177/0x3d0 drivers/base/bus.c:491\n device_add+0x3b0e/0x40d0 drivers/base/core.c:2680\n usb_set_configuration+0x380f/0x3f10 drivers/usb/core/message.c:2032\n usb_generic_driver_probe+0x138/0x300 drivers/usb/core/generic.c:241\n usb_probe_device+0x311/0x490 drivers/usb/core/driver.c:272\n really_probe+0xf20/0x20b0 drivers/base/dd.c:529\n driver_probe_device+0x293/0x390 drivers/base/dd.c:701\n __device_attach_driver+0x63f/0x830 drivers/base/dd.c:807\n bus_for_each_drv+0x2ca/0x3f0 drivers/base/bus.c:431\n __device_attach+0x4e2/0x7f0 drivers/base/dd.c:873\n device_initial_probe+0x4a/0x60 drivers/base/dd.c:920\n bus_probe_device+0x177/0x3d0 drivers/base/bus.c:491\n device_add+0x3b0e/0x40d0 drivers/base/core.c:2680\n usb_new_device+0x1bd4/0x2a30 drivers/usb/core/hub.c:2554\n hub_port_connect drivers/usb/core/hub.c:5208 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5348 [inline]\n port_event drivers/usb/core/hub.c:5494 [inline]\n hub_event+0x5e7b/0x8a70 drivers/usb/core/hub.c:5576\n process_one_work+0x1688/0x2140 kernel/workqueue.c:2269\n worker_thread+0x10bc/0x2730 kernel/workqueue.c:2415\n kthread+0x551/0x590 kernel/kthread.c:292\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:293\n\nLocal variable ----buf.i87@smsc75xx_bind created at:\n __smsc75xx_read_reg drivers/net/usb/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485/0x11e0 drivers/net/usb/smsc75xx.c:1482\n __smsc75xx_read_reg drivers/net/usb/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers/net/usb/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485/0x11e0 drivers/net/usb/smsc75xx.c:1482\n\nThis issue is caused because usbnet_read_cmd() reads less bytes than requested\n(zero byte in the reproducer). In this case, 'buf' is not properly filled.\n\nThis patch fixes the issue by returning -ENODATA if usbnet_read_cmd() reads\nless bytes than requested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52529",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: sony: Fix a potential memory leak in sony_probe()\n\nIf an error occurs after a successful usb_alloc_urb() call, usb_free_urb()\nshould be called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52530",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix potential key use-after-free\n\nWhen ieee80211_key_link() is called by ieee80211_gtk_rekey_add()\nbut returns 0 due to KRACK protection (identical key reinstall),\nieee80211_gtk_rekey_add() will still return a pointer into the\nkey, in a potential use-after-free. This normally doesn't happen\nsince it's only called by iwlwifi in case of WoWLAN rekey offload\nwhich has its own KRACK protection, but still better to fix, do\nthat by returning an error code and converting that to success on\nthe cfg80211 boundary only, leaving the error for bad callers of\nieee80211_gtk_rekey_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52531",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm-\u003envm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm-\u003envm_data-\u003ebands[0].channels = mvm-\u003envm_data-\u003echannels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm-\u003envm_data-\u003ebands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm-\u003envm_data-\u003echannels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52532",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix TX CQE error handling\n\nFor an unknown TX CQE error type (probably from a newer hardware),\nstill free the SKB, update the queue tail, etc., otherwise the\naccounting will be wrong.\n\nAlso, TX errors can be triggered by injecting corrupted packets, so\nreplace the WARN_ONCE to ratelimited error logging.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52559",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Avoid memory allocation in iommu_suspend()\n\nThe iommu_suspend() syscore suspend callback is invoked with IRQ disabled.\nAllocating memory with the GFP_KERNEL flag may re-enable IRQs during\nthe suspend callback, which can cause intermittent suspend/hibernation\nproblems with the following kernel traces:\n\nCalling iommu_suspend+0x0/0x1d0\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 15 at kernel/time/timekeeping.c:868 ktime_get+0x9b/0xb0\n...\nCPU: 0 PID: 15 Comm: rcu_preempt Tainted: G     U      E      6.3-intel #r1\nRIP: 0010:ktime_get+0x9b/0xb0\n...\nCall Trace:\n \u003cIRQ\u003e\n tick_sched_timer+0x22/0x90\n ? __pfx_tick_sched_timer+0x10/0x10\n __hrtimer_run_queues+0x111/0x2b0\n hrtimer_interrupt+0xfa/0x230\n __sysvec_apic_timer_interrupt+0x63/0x140\n sysvec_apic_timer_interrupt+0x7b/0xa0\n \u003c/IRQ\u003e\n \u003cTASK\u003e\n asm_sysvec_apic_timer_interrupt+0x1f/0x30\n...\n------------[ cut here ]------------\nInterrupts enabled after iommu_suspend+0x0/0x1d0\nWARNING: CPU: 0 PID: 27420 at drivers/base/syscore.c:68 syscore_suspend+0x147/0x270\nCPU: 0 PID: 27420 Comm: rtcwake Tainted: G     U  W   E      6.3-intel #r1\nRIP: 0010:syscore_suspend+0x147/0x270\n...\nCall Trace:\n \u003cTASK\u003e\n hibernation_snapshot+0x25b/0x670\n hibernate+0xcd/0x390\n state_store+0xcf/0xe0\n kobj_attr_store+0x13/0x30\n sysfs_kf_write+0x3f/0x50\n kernfs_fop_write_iter+0x128/0x200\n vfs_write+0x1fd/0x3c0\n ksys_write+0x6f/0xf0\n __x64_sys_write+0x1d/0x30\n do_syscall_64+0x3b/0x90\n entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\nGiven that only 4 words memory is needed, avoid the memory allocation in\niommu_suspend().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52564",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"tty: n_gsm: fix UAF in gsm_cleanup_mux\"\n\nThis reverts commit 9b9c8195f3f0d74a826077fc1c01b9ee74907239.\n\nThe commit above is reverted as it did not solve the original issue.\n\ngsm_cleanup_mux() tries to free up the virtual ttys by calling\ngsm_dlci_release() for each available DLCI. There, dlci_put() is called to\ndecrease the reference counter for the DLCI via tty_port_put() which\nfinally calls gsm_dlci_free(). This already clears the pointer which is\nbeing checked in gsm_cleanup_mux() before calling gsm_dlci_release().\nTherefore, it is not necessary to clear this pointer in gsm_cleanup_mux()\nas done in the reverted commit. The commit introduces a null pointer\ndereference:\n \u003cTASK\u003e\n ? __die+0x1f/0x70\n ? page_fault_oops+0x156/0x420\n ? search_exception_tables+0x37/0x50\n ? fixup_exception+0x21/0x310\n ? exc_page_fault+0x69/0x150\n ? asm_exc_page_fault+0x26/0x30\n ? tty_port_put+0x19/0xa0\n gsmtty_cleanup+0x29/0x80 [n_gsm]\n release_one_tty+0x37/0xe0\n process_one_work+0x1e6/0x3e0\n worker_thread+0x4c/0x3d0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe1/0x110\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x2f/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n \u003c/TASK\u003e\n\nThe actual issue is that nothing guards dlci_put() from being called\nmultiple times while the tty driver was triggered but did not yet finished\ncalling gsm_dlci_free().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52566",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential use after free in nilfs_gccache_submit_read_data()\n\nIn nilfs_gccache_submit_read_data(), brelse(bh) is called to drop the\nreference count of bh when the call to nilfs_dat_translate() fails.  If\nthe reference count hits 0 and its owner page gets unlocked, bh may be\nfreed.  However, bh-\u003eb_page is dereferenced to put the page after that,\nwhich may result in a use-after-free bug.  This patch moves the release\noperation after unlocking and putting the page.\n\nNOTE: The function in question is only called in GC, and in combination\nwith current userland tools, address translation using DAT does not occur\nin that function, so the code path that causes this issue will not be\nexecuted.  However, it is possible to run that code path by intentionally\nmodifying the userland GC library or by calling the GC ioctl directly.\n\n[konishi.ryusuke@gmail.com: NOTE added to the commit log]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52567",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250_port: Check IRQ data before use\n\nIn case the leaf driver wants to use IRQ polling (irq = 0) and\nIIR register shows that an interrupt happened in the 8250 hardware\nthe IRQ data can be NULL. In such a case we need to skip the wake\nevent as we came to this path from the timer interrupt and quite\nlikely system is already awake.\n\nWithout this fix we have got an Oops:\n\n    serial8250: ttyS0 at I/O 0x3f8 (irq = 0, base_baud = 115200) is a 16550A\n    ...\n    BUG: kernel NULL pointer dereference, address: 0000000000000010\n    RIP: 0010:serial8250_handle_irq+0x7c/0x240\n    Call Trace:\n     ? serial8250_handle_irq+0x7c/0x240\n     ? __pfx_serial8250_timeout+0x10/0x10",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52569",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: remove BUG() after failure to insert delayed dir index item\n\nInstead of calling BUG() when we fail to insert a delayed dir index item\ninto the delayed node's tree, we can just release all the resources we\nhave allocated/acquired before and return the error to the caller. This is\nfine because all existing call chains undo anything they have done before\ncalling btrfs_insert_delayed_dir_index() or BUG_ON (when creating pending\nsnapshots in the transaction commit path).\n\nSo remove the BUG() call and do proper error handling.\n\nThis relates to a syzbot report linked below, but does not fix it because\nit only prevents hitting a BUG(), it does not fix the issue where somehow\nwe attempt to use twice the same index number for different index items.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52574",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nteam: fix null-ptr-deref when team device type is changed\n\nGet a null-ptr-deref bug as follows with reproducer [1].\n\nBUG: kernel NULL pointer dereference, address: 0000000000000228\n...\nRIP: 0010:vlan_dev_hard_header+0x35/0x140 [8021q]\n...\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x24/0x70\n ? page_fault_oops+0x82/0x150\n ? exc_page_fault+0x69/0x150\n ? asm_exc_page_fault+0x26/0x30\n ? vlan_dev_hard_header+0x35/0x140 [8021q]\n ? vlan_dev_hard_header+0x8e/0x140 [8021q]\n neigh_connected_output+0xb2/0x100\n ip6_finish_output2+0x1cb/0x520\n ? nf_hook_slow+0x43/0xc0\n ? ip6_mtu+0x46/0x80\n ip6_finish_output+0x2a/0xb0\n mld_sendpack+0x18f/0x250\n mld_ifc_work+0x39/0x160\n process_one_work+0x1e6/0x3f0\n worker_thread+0x4d/0x2f0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe5/0x120\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n\n[1]\n$ teamd -t team0 -d -c '{\"runner\": {\"name\": \"loadbalance\"}}'\n$ ip link add name t-dummy type dummy\n$ ip link add link t-dummy name t-dummy.100 type vlan id 100\n$ ip link add name t-nlmon type nlmon\n$ ip link set t-nlmon master team0\n$ ip link set t-nlmon nomaster\n$ ip link set t-dummy up\n$ ip link set team0 up\n$ ip link set t-dummy.100 down\n$ ip link set t-dummy.100 master team0\n\nWhen enslave a vlan device to team device and team device type is changed\nfrom non-ether to ether, header_ops of team device is changed to\nvlan_header_ops. That is incorrect and will trigger null-ptr-deref\nfor vlan-\u003ereal_dev in vlan_dev_hard_header() because team device is not\na vlan device.\n\nCache eth_header_ops in team_setup(), then assign cached header_ops to\nheader_ops of team net device when its type is changed from non-ether\nto ether to fix the bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52575",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52576",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm, kexec, ima: Use memblock_free_late() from ima_free_kexec_buffer()\n\nThe code calling ima_free_kexec_buffer() runs long after the memblock\nallocator has already been torn down, potentially resulting in a use\nafter free in memblock_isolate_range().\n\nWith KASAN or KFENCE, this use after free will result in a BUG\nfrom the idle task, and a subsequent kernel panic.\n\nSwitch ima_free_kexec_buffer() over to memblock_free_late() to avoid\nthat bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52582",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Only call folio_start_fscache() one time for each folio\n\nIf a network filesystem using netfs implements a clamp_length()\nfunction, it can set subrequest lengths smaller than a page size.\n\nWhen we loop through the folios in netfs_rreq_unlock_folios() to\nset any folios to be written back, we need to make sure we only\ncall folio_start_fscache() once for each folio.\n\nOtherwise, this simple testcase:\n\n  mount -o fsc,rsize=1024,wsize=1024 127.0.0.1:/export /mnt/nfs\n  dd if=/dev/zero of=/mnt/nfs/file.bin bs=4096 count=1\n  1+0 records in\n  1+0 records out\n  4096 bytes (4.1 kB, 4.0 KiB) copied, 0.0126359 s, 324 kB/s\n  echo 3 \u003e /proc/sys/vm/drop_caches\n  cat /mnt/nfs/file.bin \u003e /dev/null\n\nwill trigger an oops similar to the following:\n\n  page dumped because: VM_BUG_ON_FOLIO(folio_test_private_2(folio))\n  ------------[ cut here ]------------\n  kernel BUG at include/linux/netfs.h:44!\n  ...\n  CPU: 5 PID: 134 Comm: kworker/u16:5 Kdump: loaded Not tainted 6.4.0-rc5\n  ...\n  RIP: 0010:netfs_rreq_unlock_folios+0x68e/0x730 [netfs]\n  ...\n  Call Trace:\n    netfs_rreq_assess+0x497/0x660 [netfs]\n    netfs_subreq_terminated+0x32b/0x610 [netfs]\n    nfs_netfs_read_completion+0x14e/0x1a0 [nfs]\n    nfs_read_completion+0x2f9/0x330 [nfs]\n    rpc_free_task+0x72/0xa0 [sunrpc]\n    rpc_async_release+0x46/0x70 [sunrpc]\n    process_one_work+0x3bd/0x710\n    worker_thread+0x89/0x610\n    kthread+0x181/0x1c0\n    ret_from_fork+0x29/0x50",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52583",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix deadlock or deadcode of misusing dget()\n\nThe lock order is incorrect between denty and its parent, we should\nalways make sure that the parent get the lock first.\n\nBut since this deadcode is never used and the parent dir will always\nbe set from the callers, let's just remove it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nreiserfs: Avoid touching renamed directory if parent does not change\n\nThe VFS will not be locking moved directory if its parent does not\nchange. Change reiserfs rename code to avoid touching renamed directory\nif its parent does not change as without locking that can corrupt the\nfilesystem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52597",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: s390: fix setting of fpc register\n\nkvm_arch_vcpu_ioctl_set_fpu() allows to set the floating point control\n(fpc) register of a guest cpu. The new value is tested for validity by\ntemporarily loading it into the fpc register.\n\nThis may lead to corruption of the fpc register of the host process:\nif an interrupt happens while the value is temporarily loaded into the fpc\nregister, and within interrupt context floating point or vector registers\nare used, the current fp/vx registers are saved with save_fpu_regs()\nassuming they belong to user space and will be loaded into fp/vx registers\nwhen returning to user space.\n\ntest_fp_ctl() restores the original user space / host process fpc register\nvalue, however it will be discarded, when returning to user space.\n\nIn result the host process will incorrectly continue to run with the value\nthat was supposed to be used for a guest cpu.\n\nFix this by simply removing the test. There is another test right before\nthe SIE context is entered which will handles invalid values.\n\nThis results in a change of behaviour: invalid values will now be accepted\ninstead of that the ioctl fails with -EINVAL. This seems to be acceptable,\ngiven that this interface is most likely not used anymore, and this is in\naddition the same behaviour implemented with the memory mapped interface\n(replace invalid values with zero) - see sync_regs() in kvm-s390.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52605",
      "Description": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52607",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/mm: Fix null-pointer dereference in pgtable_cache_add\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52616",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: lib/mpi - Fix unexpected pointer access in mpi_ec_init\n\nWhen the mpi_ec_ctx structure is initialized, some fields are not\ncleared, causing a crash when referencing the field when the\nstructure was released. Initially, this issue was ignored because\nmemory for mpi_ec_ctx is allocated with the __GFP_ZERO flag.\nFor example, this error will be triggered when calculating the\nZa value for SM2 separately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6270",
      "Description": "A flaw was found in the ATA over Ethernet (AoE) driver in the Linux kernel. The aoecmd_cfg_pkts() function improperly updates the refcnt on `struct net_device`, and a use-after-free can be triggered by racing between the free on the struct and the access through the `skbtxq` global queue. This could lead to a denial of service condition or potential code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6356",
      "Description": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver and causing kernel panic and a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6535",
      "Description": "A flaw was found in the Linux kernel's NVMe driver. This issue may allow an unauthenticated malicious actor to send a set of crafted TCP packages when using NVMe over TCP, leading the NVMe driver to a NULL pointer dereference in the NVMe driver, causing kernel panic and a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6597",
      "Description": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:python3-3.6.15-150300.10.60.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6817",
      "Description": "A use-after-free vulnerability in the Linux kernel's netfilter: nf_tables component can be exploited to achieve local privilege escalation.\n\nThe function nft_pipapo_walk did not skip inactive elements during set walk which could lead double deactivations of PIPAPO (Pile Packet Policies) elements, leading to use-after-free.\n\nWe recommend upgrading past commit 317eb9685095678f2c9f5a8189de698c5354316a.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7042",
      "Description": "A null pointer dereference vulnerability was found in ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev() in drivers/net/wireless/ath/ath10k/wmi-tlv.c in the Linux kernel. This issue could be exploited to trigger a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7192",
      "Description": "A memory leak problem was found in ctnetlink_create_conntrack in net/netfilter/nf_conntrack_netlink.c in the Linux Kernel. This issue may allow a local attacker with CAP_NET_ADMIN privileges to cause a denial of service (DoS) attack due to a refcount overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0607",
      "Description": "A flaw was found in the Netfilter subsystem in the Linux kernel. The issue is in the nft_byteorder_eval() function, where the code iterates through a loop and writes to the `dst` array. On each iteration, 8 bytes are written, but `dst` is an array of u32, so each element only has space for 4 bytes. That means every iteration overwrites part of the previous element corrupting this array of u32. This flaw allows a local user to cause a denial of service or potentially break NetFilter functionality.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-0841",
      "Description": "A null pointer dereference flaw was found in the hugetlbfs_fill_super function in the Linux kernel hugetlbfs (HugeTLB pages) functionality. This issue may allow a local user to crash the system or potentially escalate their privileges on the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-1151",
      "Description": "A vulnerability was reported in the Open vSwitch sub-component in the Linux Kernel. The flaw occurs when a recursive operation of code push recursively calls into the code block. The OVS module does not validate the stack depth, pushing too many frames and causing a stack overflow. As a result, this can lead to a crash or other related issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2004",
      "Description": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:curl-8.0.1-150400.5.44.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libcurl4-8.0.1-150400.5.44.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2193",
      "Description": "A Speculative Race Condition (SRC) vulnerability that impacts modern CPU architectures supporting speculative execution (related to Spectre V1) has been disclosed. An unauthenticated attacker can exploit this vulnerability to disclose arbitrary data from the CPU using race conditions to access the speculative executable code paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:xen-libs-4.16.6_02-150400.4.55.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2201",
      "Description": "A cross-privilege Spectre v2 vulnerability allows attackers to bypass all deployed mitigations, including the recent Fine(IBT), and to leak arbitrary Linux kernel memory on Intel systems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:xen-libs-4.16.6_02-150400.4.55.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-22099",
      "Description": "NULL Pointer Dereference vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (net, bluetooth modules) allows Overflow Buffers. This vulnerability is associated with program files /net/bluetooth/rfcomm/core.C.\n\nThis issue affects Linux kernel: v2.6.12-rc2.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-22667",
      "Description": "Vim before 9.0.2142 has a stack-based buffer overflow because did_set_langmap in map.c calls sprintf to write to the error buffer that is passed down to the option callback functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-9.1.0330-150000.5.63.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:vim-data-common-9.1.0330-150000.5.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23307",
      "Description": "Integer Overflow or Wraparound vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (md, raid, raid5 modules) allows Forced Integer Overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23848",
      "Description": "In the Linux kernel through 6.7.1, there is a use-after-free in cec_queue_msg_fh, related to drivers/media/cec/core/cec-adap.c and drivers/media/cec/core/cec-api.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23849",
      "Description": "In rds_recv_track_latency in net/rds/af_rds.c in the Linux kernel through 6.7.1, there is an off-by-one error for an RDS_MSG_RX_DGRAM_TRACE_MAX comparison, resulting in out-of-bounds access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23850",
      "Description": "In btrfs_get_root_ref in fs/btrfs/disk-io.c in the Linux kernel through 6.7.1, there can be an assertion failure and crash because a subvolume can be read out too soon after its root item is inserted upon subvolume creation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2398",
      "Description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:curl-8.0.1-150400.5.44.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libcurl4-8.0.1-150400.5.44.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2511",
      "Description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libopenssl1_1-1.1.1l-150400.7.66.2",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:openssl-1_1-1.1.1l-150400.7.66.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-25629",
      "Description": "c-ares is a C library for asynchronous DNS requests. `ares__read_line()` is used to parse local configuration files such as `/etc/resolv.conf`, `/etc/nsswitch.conf`, the `HOSTALIASES` file, and if using a c-ares version prior to 1.27.0, the `/etc/hosts` file. If any of these configuration files has an embedded `NULL` character as the first character in a new line, it can lead to attempting to read memory prior to the start of the given buffer which may result in a crash. This issue is fixed in c-ares 1.27.0. No known workarounds exist.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libcares2-1.19.1-150000.3.26.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-25742",
      "Description": "In the Linux kernel before 6.9, an untrusted hypervisor can inject virtual interrupt 29 (#VC) at any point in time and can trigger its handler. This affects AMD SEV-SNP and AMD SEV-ES.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26458",
      "Description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:krb5-1.19.2-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26461",
      "Description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:krb5-1.19.2-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26585",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between tx work scheduling and socket close\n\nSimilarly to previous commit, the submitting thread (recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete().\nReorder scheduling the work before calling complete().\nThis seems more logical in the first place, as it's\nthe inverse order of what the submitting thread will do.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26586",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix stack corruption\n\nWhen tc filters are first added to a net device, the corresponding local\nport gets bound to an ACL group in the device. The group contains a list\nof ACLs. In turn, each ACL points to a different TCAM region where the\nfilters are stored. During forwarding, the ACLs are sequentially\nevaluated until a match is found.\n\nOne reason to place filters in different regions is when they are added\nwith decreasing priorities and in an alternating order so that two\nconsecutive filters can never fit in the same region because of their\nkey usage.\n\nIn Spectrum-2 and newer ASICs the firmware started to report that the\nmaximum number of ACLs in a group is more than 16, but the layout of the\nregister that configures ACL groups (PAGT) was not updated to account\nfor that. It is therefore possible to hit stack corruption [1] in the\nrare case where more than 16 ACLs in a group are required.\n\nFix by limiting the maximum ACL group size to the minimum between what\nthe firmware reports and the maximum ACLs that fit in the PAGT register.\n\nAdd a test case to make sure the machine does not crash when this\ncondition is hit.\n\n[1]\nKernel panic - not syncing: stack-protector: Kernel stack is corrupted in: mlxsw_sp_acl_tcam_group_update+0x116/0x120\n[...]\n dump_stack_lvl+0x36/0x50\n panic+0x305/0x330\n __stack_chk_fail+0x15/0x20\n mlxsw_sp_acl_tcam_group_update+0x116/0x120\n mlxsw_sp_acl_tcam_group_region_attach+0x69/0x110\n mlxsw_sp_acl_tcam_vchunk_get+0x492/0xa20\n mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0\n mlxsw_sp_acl_rule_add+0x47/0x240\n mlxsw_sp_flower_replace+0x1a9/0x1d0\n tc_setup_cb_add+0xdc/0x1c0\n fl_hw_replace_filter+0x146/0x1f0\n fl_change+0xc17/0x1360\n tc_new_tfilter+0x472/0xb90\n rtnetlink_rcv_msg+0x313/0x3b0\n netlink_rcv_skb+0x58/0x100\n netlink_unicast+0x244/0x390\n netlink_sendmsg+0x1e4/0x440\n ____sys_sendmsg+0x164/0x260\n ___sys_sendmsg+0x9a/0xe0\n __sys_sendmsg+0x7a/0xc0\n do_syscall_64+0x40/0xe0\n entry_SYSCALL_64_after_hwframe+0x63/0x6b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26589",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Reject variable offset alu on PTR_TO_FLOW_KEYS\n\nFor PTR_TO_FLOW_KEYS, check_flow_keys_access() only uses fixed off\nfor validation. However, variable offset ptr alu is not prohibited\nfor this ptr kind. So the variable offset is not checked.\n\nThe following prog is accepted:\n\n  func#0 @0\n  0: R1=ctx() R10=fp0\n  0: (bf) r6 = r1                       ; R1=ctx() R6_w=ctx()\n  1: (79) r7 = *(u64 *)(r6 +144)        ; R6_w=ctx() R7_w=flow_keys()\n  2: (b7) r8 = 1024                     ; R8_w=1024\n  3: (37) r8 /= 1                       ; R8_w=scalar()\n  4: (57) r8 \u0026= 1024                    ; R8_w=scalar(smin=smin32=0,\n  smax=umax=smax32=umax32=1024,var_off=(0x0; 0x400))\n  5: (0f) r7 += r8\n  mark_precise: frame0: last_idx 5 first_idx 0 subseq_idx -1\n  mark_precise: frame0: regs=r8 stack= before 4: (57) r8 \u0026= 1024\n  mark_precise: frame0: regs=r8 stack= before 3: (37) r8 /= 1\n  mark_precise: frame0: regs=r8 stack= before 2: (b7) r8 = 1024\n  6: R7_w=flow_keys(smin=smin32=0,smax=umax=smax32=umax32=1024,var_off\n  =(0x0; 0x400)) R8_w=scalar(smin=smin32=0,smax=umax=smax32=umax32=1024,\n  var_off=(0x0; 0x400))\n  6: (79) r0 = *(u64 *)(r7 +0)          ; R0_w=scalar()\n  7: (95) exit\n\nThis prog loads flow_keys to r7, and adds the variable offset r8\nto r7, and finally causes out-of-bounds access:\n\n  BUG: unable to handle page fault for address: ffffc90014c80038\n  [...]\n  Call Trace:\n   \u003cTASK\u003e\n   bpf_dispatcher_nop_func include/linux/bpf.h:1231 [inline]\n   __bpf_prog_run include/linux/filter.h:651 [inline]\n   bpf_prog_run include/linux/filter.h:658 [inline]\n   bpf_prog_run_pin_on_cpu include/linux/filter.h:675 [inline]\n   bpf_flow_dissect+0x15f/0x350 net/core/flow_dissector.c:991\n   bpf_prog_test_run_flow_dissector+0x39d/0x620 net/bpf/test_run.c:1359\n   bpf_prog_test_run kernel/bpf/syscall.c:4107 [inline]\n   __sys_bpf+0xf8f/0x4560 kernel/bpf/syscall.c:5475\n   __do_sys_bpf kernel/bpf/syscall.c:5561 [inline]\n   __se_sys_bpf kernel/bpf/syscall.c:5559 [inline]\n   __x64_sys_bpf+0x73/0xb0 kernel/bpf/syscall.c:5559\n   do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n   do_syscall_64+0x3f/0x110 arch/x86/entry/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x63/0x6b\n\nFix this by rejecting ptr alu with variable offset on flow_keys.\nApplying the patch rejects the program with \"R7 pointer arithmetic\non flow_keys prohibited\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix re-attachment branch in bpf_tracing_prog_attach\n\nThe following case can cause a crash due to missing attach_btf:\n\n1) load rawtp program\n2) load fentry program with rawtp as target_fd\n3) create tracing link for fentry program with target_fd = 0\n4) repeat 3\n\nIn the end we have:\n\n- prog-\u003eaux-\u003edst_trampoline == NULL\n- tgt_prog == NULL (because we did not provide target_fd to link_create)\n- prog-\u003eaux-\u003eattach_btf == NULL (the program was loaded with attach_prog_fd=X)\n- the program was loaded for tgt_prog but we have no way to find out which one\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000058\n    Call Trace:\n     \u003cTASK\u003e\n     ? __die+0x20/0x70\n     ? page_fault_oops+0x15b/0x430\n     ? fixup_exception+0x22/0x330\n     ? exc_page_fault+0x6f/0x170\n     ? asm_exc_page_fault+0x22/0x30\n     ? bpf_tracing_prog_attach+0x279/0x560\n     ? btf_obj_id+0x5/0x10\n     bpf_tracing_prog_attach+0x439/0x560\n     __sys_bpf+0x1cf4/0x2de0\n     __x64_sys_bpf+0x1c/0x30\n     do_syscall_64+0x41/0xf0\n     entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\nReturn -EINVAL in this situation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26593",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: i801: Fix block process call transactions\n\nAccording to the Intel datasheets, software must reset the block\nbuffer index twice for block process call transactions: once before\nwriting the outgoing data to the buffer, and once again before\nreading the incoming data from the buffer.\n\nThe driver is currently missing the second reset, causing the wrong\nportion of the block buffer to be read.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in error path\n\nWhen calling mlxsw_sp_acl_tcam_region_destroy() from an error path after\nfailing to attach the region to an ACL group, we hit a NULL pointer\ndereference upon 'region-\u003egroup-\u003etcam' [1].\n\nFix by retrieving the 'tcam' pointer using mlxsw_sp_acl_to_tcam().\n\n[1]\nBUG: kernel NULL pointer dereference, address: 0000000000000000\n[...]\nRIP: 0010:mlxsw_sp_acl_tcam_region_destroy+0xa0/0xd0\n[...]\nCall Trace:\n mlxsw_sp_acl_tcam_vchunk_get+0x88b/0xa20\n mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0\n mlxsw_sp_acl_rule_add+0x47/0x240\n mlxsw_sp_flower_replace+0x1a9/0x1d0\n tc_setup_cb_add+0xdc/0x1c0\n fl_hw_replace_filter+0x146/0x1f0\n fl_change+0xc17/0x1360\n tc_new_tfilter+0x472/0xb90\n rtnetlink_rcv_msg+0x313/0x3b0\n netlink_rcv_skb+0x58/0x100\n netlink_unicast+0x244/0x390\n netlink_sendmsg+0x1e4/0x440\n ____sys_sendmsg+0x164/0x260\n ___sys_sendmsg+0x9a/0xe0\n __sys_sendmsg+0x7a/0xc0\n do_syscall_64+0x40/0xe0\n entry_SYSCALL_64_after_hwframe+0x63/0x6b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: vgic-its: Avoid potential UAF in LPI translation cache\n\nThere is a potential UAF scenario in the case of an LPI translation\ncache hit racing with an operation that invalidates the cache, such\nas a DISCARD ITS command. The root of the problem is that\nvgic_its_check_cache() does not elevate the refcount on the vgic_irq\nbefore dropping the lock that serializes refcount changes.\n\nHave vgic_its_check_cache() raise the refcount on the returned vgic_irq\nand add the corresponding decrement after queueing the interrupt.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26600",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: phy-omap-usb2: Fix NULL pointer dereference for SRP\n\nIf the external phy working together with phy-omap-usb2 does not implement\nsend_srp(), we may still attempt to call it. This can happen on an idle\nEthernet gadget triggering a wakeup for example:\n\nconfigfs-gadget.g1 gadget.0: ECM Suspend\nconfigfs-gadget.g1 gadget.0: Port suspended. Triggering wakeup\n...\nUnable to handle kernel NULL pointer dereference at virtual address\n00000000 when execute\n...\nPC is at 0x0\nLR is at musb_gadget_wakeup+0x1d4/0x254 [musb_hdrc]\n...\nmusb_gadget_wakeup [musb_hdrc] from usb_gadget_wakeup+0x1c/0x3c [udc_core]\nusb_gadget_wakeup [udc_core] from eth_start_xmit+0x3b0/0x3d4 [u_ether]\neth_start_xmit [u_ether] from dev_hard_start_xmit+0x94/0x24c\ndev_hard_start_xmit from sch_direct_xmit+0x104/0x2e4\nsch_direct_xmit from __dev_queue_xmit+0x334/0xd88\n__dev_queue_xmit from arp_solicit+0xf0/0x268\narp_solicit from neigh_probe+0x54/0x7c\nneigh_probe from __neigh_event_send+0x22c/0x47c\n__neigh_event_send from neigh_resolve_output+0x14c/0x1c0\nneigh_resolve_output from ip_finish_output2+0x1c8/0x628\nip_finish_output2 from ip_send_skb+0x40/0xd8\nip_send_skb from udp_send_skb+0x124/0x340\nudp_send_skb from udp_sendmsg+0x780/0x984\nudp_sendmsg from __sys_sendto+0xd8/0x158\n__sys_sendto from ret_fast_syscall+0x0/0x58\n\nLet's fix the issue by checking for send_srp() and set_vbus() before\ncalling them. For USB peripheral only cases these both could be NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26601",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: regenerate buddy after block freeing failed if under fc replay\n\nThis mostly reverts commit 6bd97bf273bd (\"ext4: remove redundant\nmb_regenerate_buddy()\") and reintroduces mb_regenerate_buddy(). Based on\ncode in mb_free_blocks(), fast commit replay can end up marking as free\nblocks that are already marked as such. This causes corruption of the\nbuddy bitmap so we need to regenerate it in that case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26602",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/membarrier: reduce the ability to hammer on sys_membarrier\n\nOn some systems, sys_membarrier can be very expensive, causing overall\nslowdowns for everything.  So put a lock on the path in order to\nserialize the accesses to prevent the ability for this to be called at\ntoo high of a frequency and saturate the machine.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26603",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Stop relying on userspace for info to fault in xsave buffer\n\nBefore this change, the expected size of the user space buffer was\ntaken from fx_sw-\u003exstate_size. fx_sw-\u003exstate_size can be changed\nfrom user-space, so it is possible construct a sigreturn frame where:\n\n * fx_sw-\u003exstate_size is smaller than the size required by valid bits in\n   fx_sw-\u003exfeatures.\n * user-space unmaps parts of the sigrame fpu buffer so that not all of\n   the buffer required by xrstor is accessible.\n\nIn this case, xrstor tries to restore and accesses the unmapped area\nwhich results in a fault. But fault_in_readable succeeds because buf +\nfx_sw-\u003exstate_size is within the still mapped area, so it goes back and\ntries xrstor again. It will spin in this loop forever.\n\nInstead, fault in the maximum size which can be touched by XRSTOR (taken\nfrom fpstate-\u003euser_size).\n\n[ dhansen: tweak subject / changelog ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26607",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/bridge: sii902x: Fix probing race issue\n\nA null pointer dereference crash has been observed rarely on TI\nplatforms using sii9022 bridge:\n\n[   53.271356]  sii902x_get_edid+0x34/0x70 [sii902x]\n[   53.276066]  sii902x_bridge_get_edid+0x14/0x20 [sii902x]\n[   53.281381]  drm_bridge_get_edid+0x20/0x34 [drm]\n[   53.286305]  drm_bridge_connector_get_modes+0x8c/0xcc [drm_kms_helper]\n[   53.292955]  drm_helper_probe_single_connector_modes+0x190/0x538 [drm_kms_helper]\n[   53.300510]  drm_client_modeset_probe+0x1f0/0xbd4 [drm]\n[   53.305958]  __drm_fb_helper_initial_config_and_unlock+0x50/0x510 [drm_kms_helper]\n[   53.313611]  drm_fb_helper_initial_config+0x48/0x58 [drm_kms_helper]\n[   53.320039]  drm_fbdev_dma_client_hotplug+0x84/0xd4 [drm_dma_helper]\n[   53.326401]  drm_client_register+0x5c/0xa0 [drm]\n[   53.331216]  drm_fbdev_dma_setup+0xc8/0x13c [drm_dma_helper]\n[   53.336881]  tidss_probe+0x128/0x264 [tidss]\n[   53.341174]  platform_probe+0x68/0xc4\n[   53.344841]  really_probe+0x188/0x3c4\n[   53.348501]  __driver_probe_device+0x7c/0x16c\n[   53.352854]  driver_probe_device+0x3c/0x10c\n[   53.357033]  __device_attach_driver+0xbc/0x158\n[   53.361472]  bus_for_each_drv+0x88/0xe8\n[   53.365303]  __device_attach+0xa0/0x1b4\n[   53.369135]  device_initial_probe+0x14/0x20\n[   53.373314]  bus_probe_device+0xb0/0xb4\n[   53.377145]  deferred_probe_work_func+0xcc/0x124\n[   53.381757]  process_one_work+0x1f0/0x518\n[   53.385770]  worker_thread+0x1e8/0x3dc\n[   53.389519]  kthread+0x11c/0x120\n[   53.392750]  ret_from_fork+0x10/0x20\n\nThe issue here is as follows:\n\n- tidss probes, but is deferred as sii902x is still missing.\n- sii902x starts probing and enters sii902x_init().\n- sii902x calls drm_bridge_add(). Now the sii902x bridge is ready from\n  DRM's perspective.\n- sii902x calls sii902x_audio_codec_init() and\n  platform_device_register_data()\n- The registration of the audio platform device causes probing of the\n  deferred devices.\n- tidss probes, which eventually causes sii902x_bridge_get_edid() to be\n  called.\n- sii902x_bridge_get_edid() tries to use the i2c to read the edid.\n  However, the sii902x driver has not set up the i2c part yet, leading\n  to the crash.\n\nFix this by moving the drm_bridge_add() to the end of the\nsii902x_init(), which is also at the very end of sii902x_probe().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26610",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: fix a memory corruption\n\niwl_fw_ini_trigger_tlv::data is a pointer to a __le32, which means that\nif we copy to iwl_fw_ini_trigger_tlv::data + offset while offset is in\nbytes, we'll write past the buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26614",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: make sure init the accept_queue's spinlocks once\n\nWhen I run syz's reproduction C program locally, it causes the following\nissue:\npvqspinlock: lock 0xffff9d181cd5c660 has corrupted value 0x0!\nWARNING: CPU: 19 PID: 21160 at __pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\nRIP: 0010:__pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)\nCode: 73 56 3a ff 90 c3 cc cc cc cc 8b 05 bb 1f 48 01 85 c0 74 05 c3 cc cc cc cc 8b 17 48 89 fe 48 c7 c7\n30 20 ce 8f e8 ad 56 42 ff \u003c0f\u003e 0b c3 cc cc cc cc 0f 0b 0f 1f 40 00 90 90 90 90 90 90 90 90 90\nRSP: 0018:ffffa8d200604cb8 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9d1ef60e0908\nRDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffff9d1ef60e0900\nRBP: ffff9d181cd5c280 R08: 0000000000000000 R09: 00000000ffff7fff\nR10: ffffa8d200604b68 R11: ffffffff907dcdc8 R12: 0000000000000000\nR13: ffff9d181cd5c660 R14: ffff9d1813a3f330 R15: 0000000000001000\nFS:  00007fa110184640(0000) GS:ffff9d1ef60c0000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000000 CR3: 000000011f65e000 CR4: 00000000000006f0\nCall Trace:\n\u003cIRQ\u003e\n  _raw_spin_unlock (kernel/locking/spinlock.c:186)\n  inet_csk_reqsk_queue_add (net/ipv4/inet_connection_sock.c:1321)\n  inet_csk_complete_hashdance (net/ipv4/inet_connection_sock.c:1358)\n  tcp_check_req (net/ipv4/tcp_minisocks.c:868)\n  tcp_v4_rcv (net/ipv4/tcp_ipv4.c:2260)\n  ip_protocol_deliver_rcu (net/ipv4/ip_input.c:205)\n  ip_local_deliver_finish (net/ipv4/ip_input.c:234)\n  __netif_receive_skb_one_core (net/core/dev.c:5529)\n  process_backlog (./include/linux/rcupdate.h:779)\n  __napi_poll (net/core/dev.c:6533)\n  net_rx_action (net/core/dev.c:6604)\n  __do_softirq (./arch/x86/include/asm/jump_label.h:27)\n  do_softirq (kernel/softirq.c:454 kernel/softirq.c:441)\n\u003c/IRQ\u003e\n\u003cTASK\u003e\n  __local_bh_enable_ip (kernel/softirq.c:381)\n  __dev_queue_xmit (net/core/dev.c:4374)\n  ip_finish_output2 (./include/net/neighbour.h:540 net/ipv4/ip_output.c:235)\n  __ip_queue_xmit (net/ipv4/ip_output.c:535)\n  __tcp_transmit_skb (net/ipv4/tcp_output.c:1462)\n  tcp_rcv_synsent_state_process (net/ipv4/tcp_input.c:6469)\n  tcp_rcv_state_process (net/ipv4/tcp_input.c:6657)\n  tcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1929)\n  __release_sock (./include/net/sock.h:1121 net/core/sock.c:2968)\n  release_sock (net/core/sock.c:3536)\n  inet_wait_for_connect (net/ipv4/af_inet.c:609)\n  __inet_stream_connect (net/ipv4/af_inet.c:702)\n  inet_stream_connect (net/ipv4/af_inet.c:748)\n  __sys_connect (./include/linux/file.h:45 net/socket.c:2064)\n  __x64_sys_connect (net/socket.c:2073 net/socket.c:2070 net/socket.c:2070)\n  do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:82)\n  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)\n  RIP: 0033:0x7fa10ff05a3d\n  Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89\n  c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d ab a3 0e 00 f7 d8 64 89 01 48\n  RSP: 002b:00007fa110183de8 EFLAGS: 00000202 ORIG_RAX: 000000000000002a\n  RAX: ffffffffffffffda RBX: 0000000020000054 RCX: 00007fa10ff05a3d\n  RDX: 000000000000001c RSI: 0000000020000040 RDI: 0000000000000003\n  RBP: 00007fa110183e20 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000202 R12: 00007fa110184640\n  R13: 0000000000000000 R14: 00007fa10fe8b060 R15: 00007fff73e23b20\n\u003c/TASK\u003e\n\nThe issue triggering process is analyzed as follows:\nThread A                                       Thread B\ntcp_v4_rcv\t//receive ack TCP packet       inet_shutdown\n  tcp_check_req                                  tcp_disconnect //disconnect sock\n  ...                                              tcp_set_state(sk, TCP_CLOSE)\n    inet_csk_complete_hashdance                ...\n      inet_csk_reqsk_queue_add         \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26622",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntomoyo: fix UAF write bug in tomoyo_write_control()\n\nSince tomoyo_write_control() updates head-\u003ewrite_buf when write()\nof long lines is requested, we need to fetch head-\u003ewrite_buf after\nhead-\u003eio_sem is held.  Otherwise, concurrent write() requests can\ncause use-after-free-write and double-free problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26642",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: disallow anonymous set with timeout flag\n\nAnonymous sets are never used with timeout from userspace, reject this.\nException to this rule is NFT_SET_EVAL to ensure legacy meters still work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26687",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/events: close evtchn after mapping cleanup\n\nshutdown_pirq and startup_pirq are not taking the\nirq_mapping_update_lock because they can't due to lock inversion. Both\nare called with the irq_desc-\u003elock being taking. The lock order,\nhowever, is first irq_mapping_update_lock and then irq_desc-\u003elock.\n\nThis opens multiple races:\n- shutdown_pirq can be interrupted by a function that allocates an event\n  channel:\n\n  CPU0                        CPU1\n  shutdown_pirq {\n    xen_evtchn_close(e)\n                              __startup_pirq {\n                                EVTCHNOP_bind_pirq\n                                  -\u003e returns just freed evtchn e\n                                set_evtchn_to_irq(e, irq)\n                              }\n    xen_irq_info_cleanup() {\n      set_evtchn_to_irq(e, -1)\n    }\n  }\n\n  Assume here event channel e refers here to the same event channel\n  number.\n  After this race the evtchn_to_irq mapping for e is invalid (-1).\n\n- __startup_pirq races with __unbind_from_irq in a similar way. Because\n  __startup_pirq doesn't take irq_mapping_update_lock it can grab the\n  evtchn that __unbind_from_irq is currently freeing and cleaning up. In\n  this case even though the event channel is allocated, its mapping can\n  be unset in evtchn_to_irq.\n\nThe fix is to first cleanup the mappings and then close the event\nchannel. In this way, when an event channel gets allocated it's\npotential previous evtchn_to_irq mappings are guaranteed to be unset already.\nThis is also the reverse order of the allocation where first the event\nchannel is allocated and then the mappings are setup.\n\nOn a 5.10 kernel prior to commit 3fcdaf3d7634 (\"xen/events: modify internal\n[un]bind interfaces\"), we hit a BUG like the following during probing of NVMe\ndevices. The issue is that during nvme_setup_io_queues, pci_free_irq\nis called for every device which results in a call to shutdown_pirq.\nWith many nvme devices it's therefore likely to hit this race during\nboot because there will be multiple calls to shutdown_pirq and\nstartup_pirq are running potentially in parallel.\n\n  ------------[ cut here ]------------\n  blkfront: xvda: barrier or flush: disabled; persistent grants: enabled; indirect descriptors: enabled; bounce buffer: enabled\n  kernel BUG at drivers/xen/events/events_base.c:499!\n  invalid opcode: 0000 [#1] SMP PTI\n  CPU: 44 PID: 375 Comm: kworker/u257:23 Not tainted 5.10.201-191.748.amzn2.x86_64 #1\n  Hardware name: Xen HVM domU, BIOS 4.11.amazon 08/24/2006\n  Workqueue: nvme-reset-wq nvme_reset_work\n  RIP: 0010:bind_evtchn_to_cpu+0xdf/0xf0\n  Code: 5d 41 5e c3 cc cc cc cc 44 89 f7 e8 2b 55 ad ff 49 89 c5 48 85 c0 0f 84 64 ff ff ff 4c 8b 68 30 41 83 fe ff 0f 85 60 ff ff ff \u003c0f\u003e 0b 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 0f 1f 44 00 00\n  RSP: 0000:ffffc9000d533b08 EFLAGS: 00010046\n  RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000006\n  RDX: 0000000000000028 RSI: 00000000ffffffff RDI: 00000000ffffffff\n  RBP: ffff888107419680 R08: 0000000000000000 R09: ffffffff82d72b00\n  R10: 0000000000000000 R11: 0000000000000000 R12: 00000000000001ed\n  R13: 0000000000000000 R14: 00000000ffffffff R15: 0000000000000002\n  FS:  0000000000000000(0000) GS:ffff88bc8b500000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000000000000 CR3: 0000000002610001 CR4: 00000000001706e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   ? show_trace_log_lvl+0x1c1/0x2d9\n   ? show_trace_log_lvl+0x1c1/0x2d9\n   ? set_affinity_irq+0xdc/0x1c0\n   ? __die_body.cold+0x8/0xd\n   ? die+0x2b/0x50\n   ? do_trap+0x90/0x110\n   ? bind_evtchn_to_cpu+0xdf/0xf0\n   ? do_error_trap+0x65/0x80\n   ? bind_evtchn_to_cpu+0xdf/0xf0\n   ? exc_invalid_op+0x4e/0x70\n   ? bind_evtchn_to_cpu+0xdf/0xf0\n   ? asm_exc_invalid_op+0x12/0x20\n   ? bind_evtchn_to_cpu+0xdf/0x\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26689",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: prevent use-after-free in encode_cap_msg()\n\nIn fs/ceph/caps.c, in encode_cap_msg(), \"use after free\" error was\ncaught by KASAN at this line - 'ceph_buffer_get(arg-\u003exattr_buf);'. This\nimplies before the refcount could be increment here, it was freed.\n\nIn same file, in \"handle_cap_grant()\" refcount is decremented by this\nline - 'ceph_buffer_put(ci-\u003ei_xattrs.blob);'. It appears that a race\noccurred and resource was freed by the latter line before the former\nline could increment it.\n\nencode_cap_msg() is called by __send_cap() and __send_cap() is called by\nceph_check_caps() after calling __prep_cap(). __prep_cap() is where\narg-\u003exattr_buf is assigned to ci-\u003ei_xattrs.blob. This is the spot where\nthe refcount must be increased to prevent \"use after free\" error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26704",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix double-free of blocks due to wrong extents moved_len\n\nIn ext4_move_extents(), moved_len is only updated when all moves are\nsuccessfully executed, and only discards orig_inode and donor_inode\npreallocations when moved_len is not zero. When the loop fails to exit\nafter successfully moving some extents, moved_len is not updated and\nremains at 0, so it does not discard the preallocations.\n\nIf the moved extents overlap with the preallocated extents, the\noverlapped extents are freed twice in ext4_mb_release_inode_pa() and\next4_process_freed_data() (as described in commit 94d7c16cbbbd (\"ext4:\nFix double-free of blocks with EXT4_IOC_MOVE_EXT\")), and bb_free is\nincremented twice. Hence when trim is executed, a zero-division bug is\ntriggered in mb_update_avg_fragment_size() because bb_free is not zero\nand bb_fragments is zero.\n\nTherefore, update move_len after each extent move to avoid the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26733",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narp: Prevent overflow in arp_req_get().\n\nsyzkaller reported an overflown write in arp_req_get(). [0]\n\nWhen ioctl(SIOCGARP) is issued, arp_req_get() looks up an neighbour\nentry and copies neigh-\u003eha to struct arpreq.arp_ha.sa_data.\n\nThe arp_ha here is struct sockaddr, not struct sockaddr_storage, so\nthe sa_data buffer is just 14 bytes.\n\nIn the splat below, 2 bytes are overflown to the next int field,\narp_flags.  We initialise the field just after the memcpy(), so it's\nnot a problem.\n\nHowever, when dev-\u003eaddr_len is greater than 22 (e.g. MAX_ADDR_LEN),\narp_netmask is overwritten, which could be set as htonl(0xFFFFFFFFUL)\nin arp_ioctl() before calling arp_req_get().\n\nTo avoid the overflow, let's limit the max length of memcpy().\n\nNote that commit b5f0de6df6dc (\"net: dev: Convert sa_data to flexible\narray in struct sockaddr\") just silenced syzkaller.\n\n[0]:\nmemcpy: detected field-spanning write (size 16) of single field \"r-\u003earp_ha.sa_data\" at net/ipv4/arp.c:1128 (size 14)\nWARNING: CPU: 0 PID: 144638 at net/ipv4/arp.c:1128 arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128\nModules linked in:\nCPU: 0 PID: 144638 Comm: syz-executor.4 Not tainted 6.1.74 #31\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-5 04/01/2014\nRIP: 0010:arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128\nCode: fd ff ff e8 41 42 de fb b9 0e 00 00 00 4c 89 fe 48 c7 c2 20 6d ab 87 48 c7 c7 80 6d ab 87 c6 05 25 af 72 04 01 e8 5f 8d ad fb \u003c0f\u003e 0b e9 6c fd ff ff e8 13 42 de fb be 03 00 00 00 4c 89 e7 e8 a6\nRSP: 0018:ffffc900050b7998 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff88803a815000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffffff8641a44a RDI: 0000000000000001\nRBP: ffffc900050b7a98 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 203a7970636d656d R12: ffff888039c54000\nR13: 1ffff92000a16f37 R14: ffff88803a815084 R15: 0000000000000010\nFS:  00007f172bf306c0(0000) GS:ffff88805aa00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f172b3569f0 CR3: 0000000057f12005 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n arp_ioctl+0x33f/0x4b0 net/ipv4/arp.c:1261\n inet_ioctl+0x314/0x3a0 net/ipv4/af_inet.c:981\n sock_do_ioctl+0xdf/0x260 net/socket.c:1204\n sock_ioctl+0x3ef/0x650 net/socket.c:1321\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x18e/0x220 fs/ioctl.c:856\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x37/0x90 arch/x86/entry/common.c:81\n entry_SYSCALL_64_after_hwframe+0x64/0xce\nRIP: 0033:0x7f172b262b8d\nCode: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f172bf300b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007f172b3abf80 RCX: 00007f172b262b8d\nRDX: 0000000020000000 RSI: 0000000000008954 RDI: 0000000000000003\nRBP: 00007f172b2d3493 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007f172b3abf80 R15: 00007f172bf10000\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26764",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/aio: Restrict kiocb_set_cancel_fn() to I/O submitted via libaio\n\nIf kiocb_set_cancel_fn() is called for I/O submitted via io_uring, the\nfollowing kernel warning appears:\n\nWARNING: CPU: 3 PID: 368 at fs/aio.c:598 kiocb_set_cancel_fn+0x9c/0xa8\nCall trace:\n kiocb_set_cancel_fn+0x9c/0xa8\n ffs_epfile_read_iter+0x144/0x1d0\n io_read+0x19c/0x498\n io_issue_sqe+0x118/0x27c\n io_submit_sqes+0x25c/0x5fc\n __arm64_sys_io_uring_enter+0x104/0xab0\n invoke_syscall+0x58/0x11c\n el0_svc_common+0xb4/0xf4\n do_el0_svc+0x2c/0xb0\n el0_svc+0x2c/0xa4\n el0t_64_sync_handler+0x68/0xb4\n el0t_64_sync+0x1a4/0x1a8\n\nFix this by setting the IOCB_AIO_RW flag for read and write I/O that is\nsubmitted by libaio.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26766",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix sdma.h tx-\u003enum_descs off-by-one error\n\nUnfortunately the commit `fd8958efe877` introduced another error\ncausing the `descs` array to overflow. This reults in further crashes\neasily reproducible by `sendmsg` system call.\n\n[ 1080.836473] general protection fault, probably for non-canonical address 0x400300015528b00a: 0000 [#1] PREEMPT SMP PTI\n[ 1080.869326] RIP: 0010:hfi1_ipoib_build_ib_tx_headers.constprop.0+0xe1/0x2b0 [hfi1]\n--\n[ 1080.974535] Call Trace:\n[ 1080.976990]  \u003cTASK\u003e\n[ 1081.021929]  hfi1_ipoib_send_dma_common+0x7a/0x2e0 [hfi1]\n[ 1081.027364]  hfi1_ipoib_send_dma_list+0x62/0x270 [hfi1]\n[ 1081.032633]  hfi1_ipoib_send+0x112/0x300 [hfi1]\n[ 1081.042001]  ipoib_start_xmit+0x2a9/0x2d0 [ib_ipoib]\n[ 1081.046978]  dev_hard_start_xmit+0xc4/0x210\n--\n[ 1081.148347]  __sys_sendmsg+0x59/0xa0\n\ncrash\u003e ipoib_txreq 0xffff9cfeba229f00\nstruct ipoib_txreq {\n  txreq = {\n    list = {\n      next = 0xffff9cfeba229f00,\n      prev = 0xffff9cfeba229f00\n    },\n    descp = 0xffff9cfeba229f40,\n    coalesce_buf = 0x0,\n    wait = 0xffff9cfea4e69a48,\n    complete = 0xffffffffc0fe0760 \u003chfi1_ipoib_sdma_complete\u003e,\n    packet_len = 0x46d,\n    tlen = 0x0,\n    num_desc = 0x0,\n    desc_limit = 0x6,\n    next_descq_idx = 0x45c,\n    coalesce_idx = 0x0,\n    flags = 0x0,\n    descs = {{\n        qw = {0x8024000120dffb00, 0x4}  # SDMA_DESC0_FIRST_DESC_FLAG (bit 63)\n      }, {\n        qw = {  0x3800014231b108, 0x4}\n      }, {\n        qw = { 0x310000e4ee0fcf0, 0x8}\n      }, {\n        qw = {  0x3000012e9f8000, 0x8}\n      }, {\n        qw = {  0x59000dfb9d0000, 0x8}\n      }, {\n        qw = {  0x78000e02e40000, 0x8}\n      }}\n  },\n  sdma_hdr =  0x400300015528b000,  \u003c\u003c\u003c invalid pointer in the tx request structure\n  sdma_status = 0x0,                   SDMA_DESC0_LAST_DESC_FLAG (bit 62)\n  complete = 0x0,\n  priv = 0x0,\n  txq = 0xffff9cfea4e69880,\n  skb = 0xffff9d099809f400\n}\n\nIf an SDMA send consists of exactly 6 descriptors and requires dword\npadding (in the 7th descriptor), the sdma_txreq descriptor array is not\nproperly expanded and the packet will overflow into the container\nstructure. This results in a panic when the send completion runs. The\nexact panic varies depending on what elements of the container structure\nget corrupted. The fix is to use the correct expression in\n_pad_sdma_tx_descs() to test the need to expand the descriptor array.\n\nWith this patch the crashes are no longer reproducible and the machine is\nstable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid allocating blocks from corrupted group in ext4_mb_try_best_found()\n\nDetermine if the group block bitmap is corrupted before using ac_b_ex in\next4_mb_try_best_found() to avoid allocating blocks from a group with a\ncorrupted block bitmap in the following concurrency and making the\nsituation worse.\n\next4_mb_regular_allocator\n  ext4_lock_group(sb, group)\n  ext4_mb_good_group\n   // check if the group bbitmap is corrupted\n  ext4_mb_complex_scan_group\n   // Scan group gets ac_b_ex but doesn't use it\n  ext4_unlock_group(sb, group)\n                           ext4_mark_group_bitmap_corrupted(group)\n                           // The block bitmap was corrupted during\n                           // the group unlock gap.\n  ext4_mb_try_best_found\n    ext4_lock_group(ac-\u003eac_sb, group)\n    ext4_mb_use_best_found\n      mb_mark_used\n      // Allocating blocks in block bitmap corrupted group",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26816",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86, relocs: Ignore relocations in .notes section\n\nWhen building with CONFIG_XEN_PV=y, .text symbols are emitted into\nthe .notes section so that Xen can find the \"startup_xen\" entry point.\nThis information is used prior to booting the kernel, so relocations\nare not useful. In fact, performing relocations against the .notes\nsection means that the KASLR base is exposed since /sys/kernel/notes\nis world-readable.\n\nTo avoid leaking the KASLR base without breaking unprivileged tools that\nare expecting to read /sys/kernel/notes, skip performing relocations in\nthe .notes section. The values readable in .notes are then identical to\nthose found in System.map.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: edia: dvbdev: fix a use-after-free\n\nIn dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed\nin several error-handling paths. However, *pdvbdev is not set to NULL\nafter dvbdev's deallocation, causing use-after-frees in many places,\nfor example, in the following call chain:\n\nbudget_register\n  |-\u003e dvb_dmxdev_init\n        |-\u003e dvb_register_device\n  |-\u003e dvb_dmxdev_release\n        |-\u003e dvb_unregister_device\n              |-\u003e dvb_remove_device\n                    |-\u003e dvb_device_put\n                          |-\u003e kref_put\n\nWhen calling dvb_unregister_device, dmxdev-\u003edvbdev (i.e. *pdvbdev in\ndvb_register_device) could point to memory that had been freed in\ndvb_register_device. Thereafter, this pointer is transferred to\nkref_put and triggering a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27389",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npstore: inode: Only d_invalidate() is needed\n\nUnloading a modular pstore backend with records in pstorefs would\ntrigger the dput() double-drop warning:\n\n  WARNING: CPU: 0 PID: 2569 at fs/dcache.c:762 dput.part.0+0x3f3/0x410\n\nUsing the combo of d_drop()/dput() (as mentioned in\nDocumentation/filesystems/vfs.rst) isn't the right approach here, and\nleads to the reference counting problem seen above. Use d_invalidate()\nand update the code to not bother checking for error codes that can\nnever happen.\n\n---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:kernel-default-5.14.21-150400.24.119.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28085",
      "Description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libblkid1-2.37.2-150400.8.29.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libfdisk1-2.37.2-150400.8.29.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libmount1-2.37.2-150400.8.29.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libsmartcols1-2.37.2-150400.8.29.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libuuid1-2.37.2-150400.8.29.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:util-linux-2.37.2-150400.8.29.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:util-linux-systemd-2.37.2-150400.8.29.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28182",
      "Description": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libnghttp2-14-1.40.0-150200.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28757",
      "Description": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libexpat1-2.4.4-150400.3.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28834",
      "Description": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libgnutls30-3.7.3-150400.4.44.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28835",
      "Description": "A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the \"certtool --verify-chain\" command.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libgnutls30-3.7.3-150400.4.44.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2961",
      "Description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-base-2.31-150300.83.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-31142",
      "Description": "Because of a logical error in XSA-407 (Branch Type Confusion), the\nmitigation is not applied properly when it is intended to be used.\nXSA-434 (Speculative Return Stack Overflow) uses the same\ninfrastructure, so is equally impacted.\n\nFor more details, see:\n  https://xenbits.xen.org/xsa/advisory-407.html\n  https://xenbits.xen.org/xsa/advisory-434.html\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:xen-libs-4.16.6_02-150400.4.55.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32487",
      "Description": "less through 653 allows OS command execution via a newline character in the name of a file, because quoting is mishandled in filename.c. Exploitation typically requires use with attacker-controlled file names, such as the files extracted from an untrusted archive. Exploitation also requires the LESSOPEN environment variable, but this is set by default in many common cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:less-590-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33599",
      "Description": "nscd: Stack-based buffer overflow in netgroup cache\n\nIf the Name Service Cache Daemon's (nscd) fixed size cache is exhausted\nby client requests then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow.  This flaw was introduced\nin glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-base-2.31-150300.83.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33600",
      "Description": "nscd: Null pointer crashes after notfound response\n\nIf the Name Service Cache Daemon's (nscd) cache fails to add a not-found\nnetgroup response to the cache, the client request can result in a null\npointer dereference.  This flaw was introduced in glibc 2.15 when the\ncache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-base-2.31-150300.83.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33601",
      "Description": "nscd: netgroup cache may terminate daemon on memory allocation failure\n\nThe Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or\nxrealloc and these functions may terminate the process due to a memory\nallocation failure resulting in a denial of service to the clients.  The\nflaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-base-2.31-150300.83.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-33602",
      "Description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings\n\nThe Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory\nwhen the NSS callback does not store all strings in the provided buffer.\nThe flaw was introduced in glibc 2.15 when the cache was added to nscd.\n\nThis vulnerability is only present in the nscd binary.\n\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-2.31-150300.83.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:glibc-locale-base-2.31-150300.83.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-34397",
      "Description": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libglib-2_0-0-2.70.5-150400.3.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35195",
      "Description": "Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:python3-requests-2.25.1-150300.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35235",
      "Description": "OpenPrinting CUPS is an open source printing system for Linux and other Unix-like operating systems. In versions 2.4.8 and earlier, when starting the cupsd server with a Listen configuration item pointing to a symbolic link, the cupsd process can be caused to perform an arbitrary chmod of the provided argument, providing world-writable access to the target. Given that cupsd is often running as root, this can result in the change of permission of any user or system files to be world writable. Given the aforementioned Ubuntu AppArmor context, on such systems this vulnerability is limited to those files modifiable by the cupsd process. In that specific case it was found to be possible to turn the configuration of the Listen argument into full control over the cupsd.conf and cups-files.conf configuration files. By later setting the User and Group arguments in cups-files.conf, and printing with a printer configured by PPD with a `FoomaticRIPCommandLine` argument, arbitrary user and group (not root) command execution could be achieved, which can further be used on Ubuntu systems to achieve full root command execution. Commit ff1f8a623e090dee8a8aadf12a6a4b25efac143d contains a patch for the issue.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:cups-config-2.2.7-150000.3.59.1",
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:libcups2-2.2.7-150000.3.59.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-3651",
      "Description": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-chost-byos-v20240612-x86-64:python3-idna-2.6-150000.3.3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}