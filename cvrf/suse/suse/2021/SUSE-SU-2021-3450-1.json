{
  "Title": "Security update for javapackages-tools, javassist, mysql-connector-java, protobuf, python-python-gflags",
  "Tracking": {
    "ID": "SUSE-SU-2021:3450-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2021-10-15T11:53:32Z",
    "CurrentReleaseDate": "2021-10-15T11:53:32Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2021-10-15T11:53:32Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for javapackages-tools, javassist, mysql-connector-java, protobuf, python-python-gflags",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for javapackages-tools, javassist, mysql-connector-java, protobuf, python-python-gflags contains the following fixes:\n\nChanges in mysql-connector-java:\n- Restrict license to GPL-2.0-only\n- Fix README adjustments\n- Depend on log4j rather than log4j-mini and adjust log4j dependencies to\n  account for the lack of log4j12 Provides in some code streams.\n- Add missing Group tag\n- Update to 8.0.25 (SOC-11543)\n  Changes in 8.0.25\n    * No functional changes: version alignment with MySQL Server 8.0.25.\n  Changes in 8.0.24\n    * Bug#102188 (32526663), AccessControlException with AuthenticationLdapSaslClientPlugin.\n    * Bug#22508715, SETSESSIONMAXROWS() CALL ON CLOSED CONNECTION RESULTS IN NPE.\n    * Bug#102131 (32338451), UPDATABLERESULTSET NPE WHEN USING DERIVED QUERIES OR VIEWS.\n    * Bug#101596 (32151143), GET THE 'HOST' PROPERTY ERROR AFTER CALLING TRANSFORMPROPERTIES() METHOD.\n    * Bug#20391832, SETOBJECT() FOR TYPES.TIME RESULTS IN EXCEPTION WHEN VALUE HAS FRACTIONAL PART.\n    * Bug#97730 (31699993), xdev api: ConcurrentModificationException at Session.close.\n    * Bug#99708 (31510398), mysql-connector-java 8.0.20 ASSERTION FAILED: Unknown message type: 57 s.close.\n    * Bug#32122553, EXTRA BYTE IN COM_STMT_EXECUTE.\n    * Bug#101558 (32141210), NULLPOINTEREXCEPTION WHEN EXECUTING INVALID QUERY WITH USEUSAGEADVISOR ENABLED.\n    * Bug#102076 (32329915), CONTRIBUTION: MYSQL JDBC DRIVER RESULTSET.GETLONG() THROWS NUMBEROUTOFRANGE.\n    * Bug#31747910, BUG 30474158 FIX IMPROVES JDBC COMPLIANCE BUT CHANGES DEFAULT RESULTSETTYPE HANDLING.\n    * Bug#102321 (32405590), CALLING RESULTSETMETADATA.GETCOLUMNCLASSNAME RETURNS WRONG VALUE FOR DATETIME.\n    * WL#14453, Pluggable authentication: new default behavior \u0026 user-less authentications.\n    * WL#14392, Improve timeout error messages [classic].\n    * WL#14202, XProtocol: Support connection close notification.\n  Changes in 8.0.23\n    * Bug#21789378, FORCED TO SET SERVER TIMEZONE IN CONNECT STRING.\n    * Bug#95644 (30573281), JDBC GETDATE/GETTIME/GETTIMESTAMP INTERFACE BEHAVIOR CHANGE AFTER UPGRADE 8.0.\n    * Bug#94457 (29402209), CONNECTOR/J RESULTSET.GETOBJECT( ..., OFFSETDATETIME.CLASS ) THROWS.\n    * Bug#76775 (20959249), FRACTIONAL SECONDS IN TIME VALUES ARE NOT AVAILABLE VIA JDBC.\n    * Bug#99013 (31074051), AN EXTRA HOUR GETS ADDED TO THE TIMESTAMP WHEN SUBTRACTING INTERVAL 'N' DAYS.\n    * Bug#98695 (30962953), EXECUTION OF 'LOAD DATA LOCAL INFILE' COMMAND THROUGH JDBC FOR DATETIME COLUMN.\n    * Bug#101413 (32099505), JAVA.TIME.LOCALDATETIME CANNOT BE CAST TO JAVA.SQL.TIMESTAMP.\n    * Bug#101242 (32046007), CANNOT USE BYTEARRAYINPUTSTREAM AS ARGUMENTS IN PREPARED STATEMENTS AN MORE.\n    * WL#14274, Support for authentication_ldap_sasl_client(SCRAM-SHA-256) authentication plugin.\n    * WL#14206, Support for authentication_ldap_sasl_client(GSSAPI) authentication plugin.\n    * WL#14207, Replace language in APIs and source code/docs.\n  Changes in 8.0.22\n    * Bug#98667 (31711961), 'All pipe instances are busy' exception on multiple connections to named Pipe.\n    * Bug#96309 (31699357), MultiHost in loadbalance may lead to a TPS reduction during a quick switch.\n    * Bug#99076 (31083755), Unclear exception/error when connecting with jdbc:mysql to a mysqlx port.\n    * Bug#96870 (30304764), Contribution: Allow to disable AbandonedConnectionCleanupThread completely.\n    * WL#14115, Support for authentication_ldap_sasl_client (SCRAM-SHA-1) authentication plugin.\n    * WL#14096, Add option to specify LOAD DATA LOCAL allow list folder.\n    * WL#13780, Skip system-wide trust and key stores (incl. X DevAPI client certs).\n    * WL#14017, XProtocol -- support for configurable compression algorithms.\n    * Bug#92903 (28834903), MySQL Connector/j should support wildcard names or alternative names.\n    * Bug#99767 (31443178), Contribution: Check SubjectAlternativeName for TLS instead of commonName.\n    * Bug#93444 (29015453), LOCALDATETIME PARAMETER VA UES ALTERED WHEN CLIENT AND SERVER TIMEZONES DIFFER.\n    * WL#14052, Remove asynchronous variant of X Protocol.\n    * Bug#99713 (31418928), NPE DURING COM.MYSQL.CJ.SERVERPREPAREDQUERYBINDVALUE.STOREDATE().\n    * WL#14068, Remove legacy integration with JBoss.\n  Changes in 8.0.21\n    * WL#14051, Upgrade Protocol Buffers dependency to protobuf-java-3.11.4.\n    * WL#14042, Upgrade testsuite to JUnit 5.\n    * Bug#98237 (30911870),  PREPAREDSTATEMENT.SETOBJECT(I, 'FALSE', TYPES.BOOLEAN) ALWAYS SETS TRUE OR 1.\n    * WL#13008, DevAPI: Add schema validation to create collection.\n  Changes in 8.0.20\n    * Bug#30805426, IN CASE OF ISAUTHMETHODSWITCHREQUESTPACKET , TOSERVERS \u003e 1 ARE IGNORED.\n    * Bug#97714 (30570249), Contribution: Expose elapsed time for query interceptor\n    * Bug#97724 (30570721), Contribution: Allow \\'3.\\' formatted numbers.\n    * Bug#98536 (30877755), SIMPLEDATEFORMAT COULD CACHE A WRONG CALENDAR.\n      Fix for Bug#91112 (28125069), AGAIN WRONG JAVA.SQL.DATE.\n    * Bug#30474158, CONNECTOR/J 8 DOES NOT HONOR THE REQUESTED RESULTSETTYPE SCROLL_INSENSITIVE ETC.\n    * Bug#98445 (30832513), Connection option clientInfoProvider=ClientInfoProviderSP causes NPE.\n    * WL#12248, DevAPI: Connection compression.\n    * Bug#30636056, ResultSetUtil.resultSetToMap() can be unsafe to use.\n    * Bug#97757 (30584907), NULLPOINTEREXCEPTION WITH CACHERESULTSETMETADATA=TRUE AND EXECUTEQUERY OF 'SET'.\n  Changes in 8.0.19\n    * WL#13346, Support for mult-host and failover.\n    * Bug#97413 (30477722), DATABASEMETADATA IS BROKEN AFTER SERVER WL#13528.\n    * WL#13367, DNS SRV support.\n    * WL#12736, DevAPI: Specify TLS ciphers to be used by a client or session.\n    * Bug#96383 (30119545) RS.GETTIMESTAMP() HAS * DIFFERENT RESULTS FOR TIME FIELDS WITH USECURSORFETCH=TRUE.\n    * Bug#96059 (29999318), ERROR STREAMING MULTI RESULTSETS WITH MYSQL-CONNECTOR-JAVA 8.0.X.\n    * Bug#96442 (30151808), INCORRECT DATE ERROR WHEN CALLING GETMETADATA ON PREPARED STATEMENT.\n  Changes in 8.0.18\n    * WL#13347, Connectors should handle expired password sandbox without SET operations.\n    * Bug#84098 (25223123), endless loop in LoadBalancedAutoCommitInterceptor.\n    * Bug#23721537, MULTI-SELECT WITH EXECUTEASYNC() GIVES IMPROPER ERROR.\n    * Bug#95741 (29898567), METADATA QUERY USES UPPER() AROUND NUMERIC EXPRESSION.\n    * Bug#20913289, PSTMT.EXECUTEUPDATE() FAILS WHEN SQL MODE IS NO_BACKSLASH_ESCAPES.\n    * Bug#80441 (22850444), SYNTAX ERROR ON RESULTSET.UPDATEROW() WITH SQL_MODE NO_BACKSLASH_ESCAPES.\n  Changes in 8.0.17\n    * WL#13210, Generate Javadocs via ant.\n    * WL#12247, DevAPI: indexing array fields.\n    * WL#12726, DevAPI: Add overlaps and not_overlaps as operator.\n    * Bug#95503 (29821029), Operator IN not mapping consistently to the right X Plugin operation.\n    * WL#12942, Update README.md and add new CONTRIBUTING.md.\n    * WL#13125, Support fully qualified hostnames longer than 60 characters.\n    * Bug#95210 (29807741), ClassCastException in BlobFromLocator when connecting as jdbc:mysql:replication.\n    * Bug#29591275, THE JAR FILE NEEDS TO CONTAIN A README AND LICENSE FILE.\n    * WL#13124, Support new utf8mb4 bin collation.\n    * WL#13009, DevAPI: Deprecate methods.\n    * WL#11101, Remove de-cache and close of SSPSs on double call to close().\n    * Bug#89133 (27356869)  CONTRIBUTION: UPDATE DA ABASEMETADATA.JAVA.\n    * Bug#11891000, DABATASEMETADATA.GETTABLES() IGNORES THE SCHEMA_PATTERN ARGUMENT.\n    * Bug#94101 (29277648), SETTING LOGSLOWQUERIES SHOULD NOT AUTOMATICALLY ENABLE PROFILESQL FOR QUERIES.\n    * Bug#74690 (20010454), PROFILEREVENT HOSTNAME HAS NO GETTER().\n    * Bug#70677 (17640628), CONNECTOR J WITH PROFILESQL - LOG CONTAINS LOTS OF STACKTRACE DATA.\n    * Bug#41172 (11750577), PROFILEREVENT.PACK() THROWS ARRAYINDEXOUTOFBOUNDSEXCEPTION.\n    * Bug#27453692, CHARACTERS GET GARBLED IN CONCAT() IN PS WHEN USECURSORFETCH=TRUE.\n    * Bug#94585 (29452669), GETTABLENAME() RETURNS NULL FOR A QUERY HAVING COUNT(*) WITH JDBC DRIVER V8.0.12.\n    * Bug#94442 (29446059), RESULTSETIMPL.GETDOUBLE IS INEFFICIENT BECAUSE OF BIGDECIMAL (RE)CONSTRUCTIONS.\n  Changes in 8.0.16\n    * WL#12825, Remove third-party libraries from sources and bundles.\n    * Bug#93590 (29054329), javax.net.ssl.SSLException: closing inbound before receiving peer's close_notify.\n    * Bug#94414 (29384853), Connector/J RPM package have version number in path.\n    * Bug#27786499, REDUNDANT FILES IN DEBIAN PACKAGE FOR DEBIAN9(COMMUNITY PACKAGE) FOR CJAVA.\n    * WL#12246, DevAPI: Prepared statement support.\n    * WL#10839, Adjust c/J tests to the new 'ON' default for explicit_defaults_for_timestamp.\n    * Bug#29329326, PLEASE AVOID SHOW PROCESSLIST IF POSSIBLE.\n    * WL#12460, DevAPI: Support new session reset functionality.\n    * WL#12459, DevAPI: Support connection-attributes.\n    * Bug#25650385, GETBYTE() RETURNS ERROR FOR BINARY() FLD.\n    * Bug#27784363, MYSQL 8.0 JDBC DRIVER THROWS NUMBERFORMATEXCEPTION FOR TEXT DATA\n    * Bug#93007 (28860051), LoadBalancedConnectionProxy.getGlobalBlacklist bug.\n    * Bug#29186870, CONNECTOR/J REGRESSION: NOT RETURNING PRECISION GETPROCEDURECOLUMNS.\n    * Bug#22038729, X DEVAPI: ANY API CALL AFTER A FAILED CALL PROC() RESULTS IN HANG.\n    * Bug#29244101, ADD MAPPING FOR UTF8MB4_ZH_0900_AS_CS COLLATION.\n    * Bug#92819 (28834959), EXPRPARSER THROWS WRONGARGUMENTEXCEPTION WHEN PARSING EMPTY JSON ARRAY.\n    * Bug#21921956, X DEVAPI: EXPRESSION PARSE ERROR WITH UNARY OPERATOR.\n    * Bug#94031 (29257922), WRONG JSON_UNQUOTE WORKAROUND.\n    * Bug#22931700, BINDINGS.GETBOOLEAN() ALWAYS RETURNS FALSE.\n    * Bug#25650912, ERROR MESSAGE NOT CLEAR WHEN WE PASS A CHAR DATA TO ANY TABLE API.\n    * Bug#25642021, CHANGEUSER() FAILS WHEN ENABLEPACKETDEBUG=TRUE.\n  Changes in 8.0.15\n    * Bug#94051 (29261254), Not recommended default for 'allowLoadLocalInfile'.\n  Changes in 8.0.14\n    * WL#12298, Connectors: Expose metadata about source and binaries in unified way.\n    * Bug#93111 (28894344), ConnectionUrl.java contains char U+00A7 (section sign).\n    * WL#12621, DevAPI: Handling of Default Schema.\n    * Bug#93340 (28970166), C/J BUILD SCRIPT IS TOO VERBOSE\n    * WL#12462, DevAPI: Be prepared for initial notice on connection.\n    * Bug#28924137, WL#12463:IF COLLECTION DOESN'T EXIST, COLL.COUNT() IS GIVING A WRONG ERROR MESSAGE.\n    * WL#12463, DevAPI: Standardize count method.\n    * Bug#92508 (28747636), mysql-connector in bootclasspath causing memory leak.\n    * Bug#25650514, UPDATEROW() CALL FAILS WITH NPE WHEN SSPS=TRUE AND TABLE HAS MULTI-FLD KEY.\n    * Bug#25650482, REFRESHROW() CALL AFTER UPDATEROW() API FAILS WHEN USESERVERPREPSTMTS=TRUE.\n    * Bug#92536 (28692243), UPDATEING SERVER SIDE PREPSTMTS RESULTSET FAIL.\n    * Bug#92625 (28731795), CONTRIBUTION: FIX OBSERVED NPE IN CLEARINPUTSTREAM.\n    * Bug#23045642, ADDING NO-DOC (MYSQLCONNJ-696) RESULTS IN EXCEPTION.\n    * Bug#91065 (28101003), ZERODATETIMEBEHAVIOR=CONVERT_TO_NULL SHOULD NOT APPLY TO 00:00:00 TIME COLUMNS.\n    * Bug#92574 (28706219), WHEN CONVERTING FROM VARCHAR TO JAVA BOOLEAN, 'N' IS NOT SUPPORTED.\n    * Bug#25642226, CHANGEUSER() NOT SETTING THE DATABASE PROPERLY WITH SHA USER.\n    * Bug#28606708, NAMED PIPE CONNECTION FOR X PROTOCOL RETURNS NPE, EXPECTED PROPER ERROR MESSAGE.\n  Changes in 8.0.13\n    * Bug#91317 (28207422), Wrong defaults on collation mappings.\n    * WL#12245, DevAPI: Implement connect timeout.\n    * Bug#21774249, UNIT TEST FAILS WITH ERROR ' 'CEST' IS UNRECOGNIZED TIME ZONE'.\n    * WL#11857, DevAPI: Implement connection pooling for xprotocol.\n    * Bug#91873 (28444461), REMOVE USEOLDUTF8BEHAVIOR CONNECTION PROPERTY.\n    * Bug#92264 (28594434), JSONPARSER PUTS UNNECESSARY MAXIMUM LIMIT ON JSONNUMBER TO 10 DIGITS.\n    * WL#12110, Extend PropertyDefinitions.PropertyKey usage.\n    * Bug#81063 (23098159), w/ rewriteBatchedStatements, when 2 tables involved, the rewriting not correct.\n    * Bug#84813 (25501750), rewriteBatchedStatements fails in INSERT.\n    * Bug#81196 (23227334), CONNECTOR/J NOT FOLLOWING DATABASE CHARACTER SET.\n    * Bug#72609 (18749544), SETDATE() NOT USING A PROLEPTIC GREGORIAN CALENDAR.\n    * Bug#87534 (26730196), UNION ALL query fails when useServerPrepStmts=true on database connection.\n    * Bug#89948 (27658489), Batched statements are not committed for useLocalTransactionState=true.\n    * BUG#22305979, WRONG RECORD UPDATED IF SENDFRACTIONALSECONDS=FALSE AND SMT IS SCROLLABLE.\n    * Bug#27102307, CHANGE USESSL AND VERIFYSERVERCERTIFICATE TO SSLMODE OPTION.\n    * Bug#28150662, CONNECTOR/J 8 MALFORMED DATABASE URL EXCEPTION WHIT CORRECT URL STRING.\n    * Bug#91421 (28246270), ALLOWED VALUES FOR ZERODATETIMEBEHAVIOR ARE INCOMPATIBLE WITH NETBEANS.\n    * Bug#23045604, XSESSION.GETURI() RETURNS NPE.\n    * Bug#21914769, NPE WHEN TRY TO EXECUTE INVALID JSON STRING.\n    * Bug#BUG#90887 (28034570), DATABASEMETADATAUSINGINFOSCHEMA#GETTABLES FAILS IF METHOD ARGUMENTS ARE NULL.\n    * Bug#28207088, C/JAVA: UPDATECLOB(INT COLUMNLABEL, JAVA.SQL.CLOB CLOB) IS FAILING.\n    * Bug#27629553, NPE FROM GETSESSION() FOR SSL CONNECTION WHEN NO PASSWORD PASSED.\n  Changes in 8.0.12\n    * Bug#28208000, MASTER : HANG IN ASYNCHRONOUS SELECT TEST.\n    * WL#10544, Update MySQL 8.0 keywords list.\n    * WL#11858, DevAPI: Core API v1 alignment.\n    * Bug#27652379, NPE FROM GETSESSION(PROPERTIES) WHEN HOST PARAMETER IS GIVEN IN SMALL LETTER.\n    * BUG#87600 (26724154), CONNECTOR THROWS 'MALFORMED DATABASE URL' ON NON MYSQL CONNECTION-URLS.\n    * BUG#26089880, GETCONNECTION('MYSQLX://..') RETURNS NON-X PROTOCOL CONNECTION.\n    * WL#11876, Improve connection properties design.\n    * WL#11933, Connector/J 8.0 X DevAPI reference documentation update.\n    * WL#11860, Ensure \u003e= 75% code coverage.\n    * Bug#90753 (27977617), WAIT_TIMEOUT EXCEEDED MESSAGE NOT TRIGGERED.\n    * Bug#85941 (25924324), WASNULL NOT SET AFTER GETBYTES IS CALLED.\n    * Bug#28066709, COLLECTION.CREATEINDEX() TEST IS BROKEN AFTER WL#11808 IMPLEMENTATION.\n    * Bug#90872 (28027459), FILTERPARAMS CLASS IS NOT NEEDED.\n    * Bug#27522054, POSSIBLE ASYNC XPROTOCOL MESSAGE HANDLING PERF ISSUE.\n      The 'xdevapi.useAsyncProtocol' connection property default value is changed to 'false'.\n  Changes in 8.0.11\n    * WL#11293, DevAPI: Support new locking modes : NOWAIT and SKIP LOCKED.\n    * Bug#90029 (27678308), FAILURE WHEN GETTING GEOMCOLLECTION COLUMN TYPE.\n    * BUG#90024 (27677574), SOME TESTS FAILED AGAINST MYSQL 8.0.5 BECAUSE OF DEPRECATED FEATURES REMOVAL.\n    * Bug#86741 (26314325), Multi-Host connection with autocommit=0 getAutoCommit maybe wrong.\n    * Bug#27231383, PROVIDE MAVEN-FRIENDLY COMMERCIAL PACKAGES WITHOUT '-BIN'.\n    * Bug#26819691, SETTING PACKETDEBUGBUFFERSIZE=0 RESULTS IN CONNECTION FAILURE.\n    * Bug#88227 (27029657), Connector/J 5.1.44 cannot be used against MySQL 5.7.20 without warnings.\n    * Bug#27374581, CONNECTION FAILS WHEN GPL SERVER STARTED WITH TLS-VERSION=TLSV1.2.\n    * WL#11419, DevAPI: New document _id generation support.\n    * WL#11620, Change caching_sha2_password padding.\n    * WL#11604, DevAPI: Add SHA256_MEMORY support.\n    * BUG#86278 (26092824), SUPPORT CUSTOM CONSTRUCTION OF SSLSOCKET DURING CONNECTION ESTABLISHMENT.\n    * BUG#27226293, JSONNUMBER.GETINTEGER() \u0026 NUMBERFORMATEXCEPTION.\n    * WL#10527, Clean up Protocol and Session interfaces.\n  Changes in 8.0.9\n    * WL#11469, Update license header in GPL packages.\n    * BUG#27247349, WL#11208 : UNIQUE DOES NOT GIVE ERROR EVEN THOUGH IT IS NOT SUPPORTED.\n    * WL#11208, DevAPI: Collection.createIndex.\n    * WL#10156, Add setters/getters for connection properties to MysqlDataSource,\n      MysqlXADataSource and MysqlConnectionPoolDataSource.\n    * WL#11401, DevAPI: Remove configuration API.\n    * WL#10619, Ensure compatibility with new data dictionary.\n    * BUG#27217264, WL#10937: NULL POINTER EXCEPTION WHEN NULL IS PASSED AS _ID IN COLL.REPLACEONE.\n    * WL#10937, DevAPI: ReplaceOne, AddOrReplaceOne, GetOne, RemoveOne.\n    * Bug#26723646, JSON_MERGE() FUNCTION IS DEPRECATED IN MYSQL 8.0.\n    * Bug#27185332, WL#11210:ERROR IS THROWN WHEN NESTED EMPTY DOCUMENTS ARE INSERTED TO COLLECTION.\n    * Bug#27151601, WL#11210: DOCUMENT PATCH EXPRESSIONS ARE NOT SUPPORTED.\n    * WL#11210, DevAPI: Modify/MergePatch.\n    * Bug#79612 (22362474), CONNECTION ATTRIBUTES LOST WHEN CONNECTING WITHOUT DEFAULT DATABASE.\n    * WL#10152, Enable TLSv1.2 on mysqlx.\n    * Bug#27131768, NULL POINTER EXCEPTION IN CONNECTION.\n    * Bug#88232 (27047676), c/J does not rollback transaction when autoReconnect=true.\n    * Bug#88242 (27040063), autoReconnect and socketTimeout JDBC option makes wrong order of client packet.\n    * Bug#88021 (26939943), High GC pressure when driver configured with serversideprepared statements.\n    * Bug#26724085, CHARSET MAPPING TO BE UPDATED FOR MYSQL 8.0.3.\n    * Bug#87704 (26771560), THE STREAM GETS THE RESULT SET ?THE DRIVER SIDE GET WRONG ABOUT GETLONG().\n    * Bug#24924097, SERVER GREETING ERROR ISN'T RECOGNIZED DURING HANDSHAKE.\n    * Bug#26748909, MASTER : ERROR - NO OPERATIONS ALLOWED AFTER STATEMENT CLOSED FOR TOSTRING().\n    * Bug#26266731, CONCUR_UPDATABLE RESULTSET OPERATIONS FAIL AGAINST 8.0 FOR BOOLEAN COLUMN.\n    * WL#11239, DevAPI: Remove create table implementation.\n    * Bug#27131100, WL#11212 : SAVEPOINT CREATING WITH EMPTY STRING AND SPACE AS NAME.\n    * WL#11212, DevAPI: transaction save-points.\n    * WL#11060, Support new SHA-256 authentication system.\n    * Bug#87826 (26846249), MYSQL JDBC CONNECTOR/J DATABASEMETADATA NULL PATTERN HANDLING IS NON-COMPLIANT.\n    * WL#11163, Extract parameter setters, serverPrepare() and serverExecute() to core classes.\n    * BUG#26995710, WL#11161 : NULL POINTER EXCEPTION IN EXECUTEBATCH() AND CLOSE().\n    * WL#11161, Unify query bindings.\n    * WL#8469, Don't extract query text from packets when possible.\n  Changes in 8.0.8\n    * BUG#26722030, TEST FAILING DUE TO BINARY LOGGING ENABLED BY DEFAULT IN MYSQL 8.0.3.\n    * BUG#26722018, TESTS FAILING DUE TO CHANGE IN INFORMATION_SCHEMA.INNODB_SYS_* NAMING.\n    * BUG#26750807, MASTER : NULL POINTER EXCEPTION IN SCHEMA.DROPVIEW(NULL).\n    * BUG#26750705, MASTER : ERROR - UNSUPPORTED CONVERSION FROM TIME TO JAVA.SQL.DATE.\n    * WL#10620, DevAPI: SHA256 Authentication support.\n    * WL#10936, DevAPI: Row locking for Crud.Find.\n    * WL#9868, DevAPI: Configuration handling interface.\n    * WL#10935, DevAPI: Array or Object 'contains' operator.\n    * WL#9875, Prepare c/J 8.0 for DEB and RPM builds.\n    * BUG#26259384, CALLABLE STATEMENT GIVES ERROR IN C/JAVA WHEN RUN AGAINST MYSQL 8.0.\n    * Bug#26393132, NULLPOINTEREXCEPTION IS THROWN WHEN TRIED TO DROP A NULL COLLECTION.\n    * WL#10532, DevAPI: Cleanup Drop APIs.\n    * Bug#87429 (26633984), repeated close of ServerPreparedStatement causes memory leak.\n    * Bug#87379 (26646676), Perform actual TLS capabilities check when restricting TLSv1.2.\n    * Bug#85601 (25777822), Unit notation is missing in the description of the property involved in the time.\n    * Bug#87153 (26501245), INCORRECT RESULT OF DBMD.GETVERSIONCOLUMNS() AGAINST MYSQL 8.0.2+.\n    * Bug#78313 (21931572), proxies not handling Object.equals(Object) calls correctly.\n    * Bug#85885 (25874048), resultSetConcurrency and resultSetType are swapped in call to prepareStatement.\n    * Bug#74932 (20066806), ConnectionImp Doesn't Close Server Prepared Statement (PreparedStatement Leak).\n    * WL#10536, Deprecating COM_SHUTDOWN.\n    * Bug#25946965, UPDATE THE TIME ZONE MAPPINGS WITH LATEST TZ DATABASES.\n    * Bug#20182108, INCLUDE CUSTOM LOAD BALANCING STRATEGY USING PLUGIN API.\n    * Bug#26440544, CONNECTOR/J SHOULD NOT USE TX_{READ_ONLY,ISOLATION} WHICH IS PLANNED FOR REMOVAL.\n    * Bug#26399958, UNABLE TO CONNECT TO MYSQL 8.0.3.\n    * Bug#25650305, GETDATE(),GETTIME() AND GETTIMESTAMP() CALL WITH NULL CALENDAR RETURNS NPE.\n  Changes in 8.0.7\n    * Bug#26227653, WL#10528 DIFF BEHAVIOUR WHEN SYSTEM PROP JAVAX.NET.SSL.TRUSTSTORETYPE IS SET.\n    * WL#10528, DevAPI: Ensure all connectors are secure by default.\n    * WL#8305, Remove internal dependency on connection objects.\n    * Bug#22972057, X DEVAPI: CLIENT HANGS AFTER CONNECTION FAILURE.\n    * Bug#26140577, GIS TESTS ARE FAILING WITH MYSQL 8.0.1.\n    * WL#10765, DevAPI: Forbid modify() and remove() with no condition.\n    * Bug#26090721, CONNECTION FAILING WHEN SERVER STARTED WITH COLLATION UTF8MB4_DE_PB_0900_AI_CI.\n    * WL#10781, enum-based connection properties.\n    * Bug#73775 (19531384), DBMD.getProcedureColumns()/.getFunctionColumns() fail to filter by columnPattern.\n    * Bug#84324 (25321524), CallableStatement.extractProcedureName() not work when catalog name with dash.\n    * Bug#79561 (22333996), NullPointerException when calling a fully qualified stored procedure.\n    * Bug#84783 (25490163), query timeout is not working(thread hang).\n    * Bug#70704 (17653733), Deadlock using UpdatableResultSet.\n    * Bug#66430 (16714868), setCatalog on connection leaves ServerPreparedStatement cache for old catalog.\n    * Bug#70808 (17757070), Set sessionVariables in a single query.\n    * Bug#77192 (21170603), Description for the Property replicationConnetionGroup Missing from the Manual.\n    * Bug#83834 (25101890), Typo in Connector/J error message.\n    * WL#10531, Support utf8mb4 as default charset.\n    * Bug#85555 (25757019), useConfigs Can't find configuration template named, in mysql-connector-java 6.x\n    * WL#10529, Move version number to 8.0.\n    * WL#10530, DevAPI: Remove XSession, rename NodeSession to Session.\n    * Bug#23510958, CONCURRENT ASYNC OPERATIONS RESULT IN HANG.\n    * Bug#23597281, GETNODESESSION() CALL WITH SSL PARAMETERS RETURNS CJCOMMUNICATIONSEXCEPTION.\n    * Bug#25207784, C/J DOESN'T FOLLOW THE FINAL X DEVAPI MY-193 SPECIFICATION.\n    * Bug#25494338, ENABLEDSSLCIPHERSUITES PARAMETER NOT WORKING AS EXPECTED WITH X-PLUGIN.\n    * Bug#84084 (25215008), JAVA.LANG.ARRAYINDEXOUTOFBOUNDSEXCEPTION ON ATTEMPT TO GET VALUE FROM RESULTSET.\n    * WL#10553, Add mapping for Japanese utf8mb4 collation.\n    * Bug#25575103, NPE FROM CREATETABLE() WHEN SOME OF THE INPUTS ARE NULL.\n    * Bug#25575156, NPE FROM CREATEVIEW() WHEN SOME OF THE INPUTS ARE NULL.\n    * Bug#25636947, CONNECTION USING MYSQL CLIENT FAILS IF WE USE THE SSL CERTIFICATES FROM C/J SRC.\n    * Bug#25687718, INCORRECT TIME ZONE IDENTIFIER IN STATEMENTREGRESSIONTEST.\n    * Bug#25556597, RESULTSETTEST.TESTPADDING UNIT TEST IS FAILING IN 5.1.41 RELEASE PACKAGE.\n    * Bug#25517837, CONNECT PERFORMNACE DEGRADED BY 10% IN 5.1.41.\n    * Bug#25504578, CONNECT FAILS WHEN CONNECTIONCOLLATION=ISO-8859-13.\n    * Bug#25438355, Improper automatic deserialization of binary data.\n    * Bug#70785 (17756825), MySQL Connector/J inconsistent init state for autocommit.\n    * Bug#66884: Property 'elideSetAutoCommits' temporarily  defaults to 'false' until this bug is fixed.\n    * Bug#75615 (21181249), Incorrect implementation of Connection.setNetworkTimeout().\n    * Bug#81706 (23535001), NullPointerException in driver.\n    * Bug#83052 (25048543), static method in com.mysql.jdbc.Util relies on null object.\n    * Bug#69526 (17035755), 'Abandoned connection cleanup thread' at mysql-connector-java-5.1.25.\n    * Bug#82826 (24942672), Unneeded version requirement for javax.net.ssl Import-Package on OSGi MANIFEST.MF.\n  Changes in 6.0.6\n    * Added Core TLS/SSL options for the mysqlx URI scheme.\n    * Updated collations map.\n    * Bug#24350526, UNEXPECTED BEHAVIOUR OF IS_NUMBER_SIGNED API IN C/JAVA.\n    * Bug#82707 (24512766), WRONG MILLI SECOND VALUE RETURNED FROM TIMESTAMP COLUMN.\n    * Bug#82005 (23702040), JDBCDATEVALUEFACTORY FAILS TO PARSE SOME DATES.\n    * Bug#83725 (25056803), NPE IN XPROTOCOL.GETPLUGINVERSION() WITH MYSQL 5.7.17.\n    * Bug#24525461, UPDATABLE RESULTSET FEATURE FAILS WHEN USESERVERPREPSTMTS=TRUE.\n    * Bug#24527173, QUERY EXECUTION USING PREPARED STMT FAILS WHEN USECURSORFETCH=TRUE.\n    * Bug#82964 (24658016), JSR-310 DATA TYPES CREATED THROUGH JAVA.SQL TYPES.\n    * Bug#81202 (23188159), RESULTSETIMPL.GETOBJECT THROWS NULLPOINTEREXCEPTION WHEN FIELD IS NULL.\n    * Bug#22931277, COLUMN.GETTYPE() RETURNS ERROR FOR VALID DATATYPES.\n    * BUG#24471057, UPDATE FAILS WHEN THE NEW VALUE IS OF TYPE DBDOC WHICH HAS ARRAY IN IT.\n    * Bug#81691 (23519211), GETLASTDOCUMENTIDS() DOESN'T REPORT IDS PROVIDED BY USER.\n    * Bug#82826 (24942672), Unneeded version requirement for javax.net.ssl Import-Package on OSGi MANIFEST.MF.\n  Changes in 6.0.5\n    * BUG#82896 (24613062), Unexpected behavior on attempt to connect to JDBC driver with unsupported URL.\n    * Added client-side failover during XSession initialization for multi-router configuration.\n    * Removed Extension interface. All extension classes now implement their specific interfaces.\n    * Bug#22988922, GETLENGTH() RETURNS -1 FOR LONGBLOB AND LONGTEXT FIELDS.\n    * Bug#24619829, NEW FAILURES IN C/JAVA UNITTESTS AGAINST MYSQL 8.0.\n    * Bug#75209 (20212882), Set useLocalTransactionState may result in partially committed transaction.\n    * Bug#48346 (11756431), Communications link failure when reading compressed data with compressed=true.\n    * Bug#80631 (22891845), ResultSet.getString return garbled result with json type data.\n    * Bug#64188 (13702433), MysqlXAConnection.MYSQL_ERROR_CODES_TO_XA_ERROR_CODES is missing XA error codes.\n    * Bug#72632 (18759269), NullPointerException for invalid JDBC URL.\n    * Bug#82115 (23743956), Some exceptions are intercepted twice or fail to set the init cause.\n    * Bug#78685 (21938551), Wrong results when retrieving the value of a BIT column as an integer.\n    * Bug#80615 (22954007), prepared statement leak when rewriteBatchedStatements=true and useServerPrepStmt.\n    * Extended X DevAPI with flexible parameter lists.\n    * Added a virtual NodeSession to X DevAPI. \n  Changes in 6.0.4\n    * X DevAPI URL prefix changed from 'mysql:x:' to 'mysqlx:'.\n    * Bug#24301468 X DEVAPI SSL CONNECTION FAILS ON WINDOWS\n    * The X DevAPI Table object now represents both database tables and views.\n    * Added support for matching against pattern for X DevAPI list_objects calls.\n    * Added Schema.getCollections(String pattern) and Schema.getTables(String pattern) interface methods.\n    * Switched to 'mysqlx' namespace for X DevAPI StmtExecute messages.\n      This change is incompatible to MySQL server versions \u003c 5.7.14.\n    * Bug#82046 (23743947), MYSQL CONNECTOR JAVA OSGI METADATA BROKEN.\n    * Bug#21690043, CONNECT FAILS WHEN PASSWORD IS BLANK.\n    * Bug#22931433, GETTING VALUE OF BIT COLUMN RESULTS IN EXCEPTION.\n  Changes in 6.0.3\n    * Bug#23535571, EXCESSIVE MEMORY USAGE WHEN ENABLEPACKETDEBUG=TRUE.\n    * Bug#23212347, ALL API CALLS ON RESULTSET METADATA RESULTS IN NPE WHEN USESERVERPREPSTMTS=TRUE.\n    * Bug#23201930, CLIENT HANG WHEN RSLT CUNCURRENCY=CONCUR_UPDATABLE AND RSLTSET TYPE=FORWARD_ONLY.\n    * Bug#23188498, CLIENT HANG WHILE USING SERVERPREPSTMT WHEN PROFILESQL=TRUE AND USEIS=TRUE.\n    * Bug#22678872, NPE DURING UPDATE WITH FABRIC.\n    * Bug#71131 (18068303), Poor error message in CallableStatement.java.\n    * Bug#59462 (16736619), ConcurrentModificationException inside ConnectionImpl.closeAllOpenStatements().\n    * Bug#22848249, LOADBALANCECONNECTIONGROUPMANAGER.REMOVEHOST() NOT WORKING AS EXPECTED.\n    * Bug#22730682, ARRAYINDEXOUTOFBOUNDSEXCEPTION FROM CONNECTIONGROUPMANAGER.REMOVEHOST().\n    * Bug#77171 (21181466), On every connect getting sql_mode from server creates unnecessary exception.\n    * Bug#79343 (22353759), NPE in TimeUtil.loadTimeZoneMappings causing server time zone value unrecognized.\n    * Bug#22038729, X DevAPI: Any API call after a failed CALL PROC() results in hang\n    * Replace Schema.drop(), Collection.drop() by X DevAPI's session.dropSchema() and session.dropCollection().\n    * Added session.dropTable().\n    * Bug#22932078, GETTIMESTAMP() RETURNS WRONG VALUE FOR FRACTIONAL PART\n    * Extracted packet readers from MysqlaProtocol.\n    * Bug#22972057, X protocol CLIENT HANGS AFTER CONNECTION FAILURE\n    * Bug#23044312, NullPointerException in X protocol AsyncMessageReader due to race condition\n    * Returned support for MySQL 5.5 and 5.6.\n  Changes in 6.0.2\n    * Deprecate the EOF packet.\n    * Bug#75956, Inserting timestamps using a server PreparedStatement and useLegacyDatetimeCode=false\n    * Bug#22385172, CONNECTOR/J MANIFEST DOES NOT EXPOSE FABRIC (OSGi).\n    * Bug#22598938, FABRICMYSQLDATASOURCE.GETCONNECTION() NPE AFTER SWITCHOVER.\n    * Bug#21286268, CONNECTOR/J REPLICATION USE MASTER IF SLAVE IS UNAVAILABLE.\n    * Bug#21296840 \u0026 Bug#17910835, Server information in a group from Fabric is not refreshed after expired TTL.\n    * Bug#56122 (11763419), JDBC4 functionality failure when using replication connections.\n    * Added support for TLSv1.1 and TLSv1.2\n    * Bug#78961 (22096981), Can't call MySQL procedure with InOut parameters in Fabric environment.\n    * Bug#56100 (11763401), Replication driver routes DML statements to read-only slaves.\n    * StandardSSLSocketFactory implements SocketMetadata.\n    * Bug#21978216, GETTYPEINFO REPORT MAXIMUM PRECISION OF 255 FOR VARBINARY.\n    * Bug#78706 (21947042), Prefer TLS where supported by MySQL Server.\n    * Bug#21934573, FABRIC CODE INVOLVED IN THREAD DEADLOCK.\n    * Bug#21876798, CONNECTOR/J WITH MYSQL FABRIC AND SPRING PRODUCES PROXY ERROR.\n  Changes in 6.0.1\n    * Removed useJvmCharsetConverters connection property. JVM charset converters are now used in all cases.\n    * Refactored value decoding and removed all date/time connection properties\n    * Refactored connection properties\n    * Assume existence of INFORMATION_SCHEMA.PARAMETERS (and thus MySQL 5.5) when preparing stored procedure calls.\n    * Removed retainStatementAfterResultSetClose connection property.\n    * Null-merge of Bug#54095 (11761585) fix.\n    * Removed support code for MySQL server versions \u003c 5.7.\n    * Bug#76859 (20969312), DBMD getColumns using I_S doesn't have column IS_GENERATEDCOLUMN as per JDBC 4.1.\n    * Added support for GENERATED COLUMNS.\n    * Update Time Zone mappings with IANA Time Zone database tsdata2015f and Unicode CLDR v.28.\n    * Update DatabaseMetaData SQL keywords.\n    * Added tests for Optimizer hints syntax introduced in MySQL 5.7.7.\n    * Bug#21860833, JSON DATA TYPE DOESN'T WORK WITH SSPS.\n    * Added support for JSON data type.\n    * Added support for JDBC 4.2 new features.\n    * Bug#16634180, LOCK WAIT TIMEOUT EXCEEDED CAUSES SQLEXCEPTION, SHOULD CAUSE SQLTRANSIENTEXCEPTION\n    * Bug#75849 (20536592), NPE in abortInternal() method on line 1358 of ConnectionImpl.\n    * Bug#78106 (21648826), Potential memory leak with inflater.\n    * Bug#78225 (21697684), DEFAULT NO_AUTO_CREATE_USER SQL_MODE BEHAVIOR BROKE SOME TESTS\n    * Bug#77665 (21415165), JDBC fails to connect with MySQL 5.0.\n    * Bug#77681 (21429909), rewrite replace sql like insert when rewriteBatchedStatements=true (contribution).\n    * Bug#77449 (21304726) Add 'truncateFractionalSeconds=true|false' property (contribution).\n    * Bug#50348 (11758179), mysql connector/j 5.1.10 render the wrong value for dateTime column in GMT DB.\n    * Bug#75670 (20433047), Connection fails with 'Public Key Retrieval is not allowed' for native auth.\n    * Bug#76187 (20675539), getTypeInfo report maximum precision of 255 for varchar.\n    * Add test for new syntax 'ALTER TABLE ... DISCARD|IMPORT PARTITION ...' introduced in MySQL 5.7.4.\n    * Bug#20727196, GETPROCEDURECOLUMNS() RETURNS EXCEPTION FOR FUNCTION WHICH RETURNS ENUM/SET TYPE.\n    * Bug#19803348, GETPROCEDURES() RETURNS INCORRECT OUTPUT WHEN USEINFORMATIONSCHEMA=FALSE.\n    * Bug#21215151, DATABASEMETADATA.GETCATALOGS() FAILS TO SORT RESULTS.\n    * Bug#72630 (18758686), NullPointerException during handshake in some situations\n    * Bug#20825727, CONNECT FAILURE WHEN TRY TO CONNECT SHA USER WITH DIFFERENT CHARSET.\n    * Flag RowDataDynamic.isInterrupted removed as it isn't needed.\n    * Bug#20518653, XSL FILES IN PACKAGES\n    * Bug#20804635, GETTIME() AND GETDATE() FUNCTIONS FAILS WHEN FRACTIONAL PART EXISTS\n    * Bug#62452 (16444069), NPE thrown in JDBC4MySQLPooledException when statement is closed.\n    * BUG#70927 (17810800), Connector/J COM_CHANGE_USER handling is broken\n    * Bug#75335 (20283655), Maven artifact for Connector/J is missing source jar.\n    * BUG#75592 (20408891), 'SHOW VARIABLES WHERE' is expensive.\n    * Bug#75113 (20821888), Fail in failover of the connection in MySQL fabric\n    * Bug#72077 (18425861), Fabric connection with username to a server with disabled auth throws NPE\n    * Add test for already fixed Bug#72546 (18719760), C/J Fabric createGroup() throws ClassCastException\n    * Bug#77217 (21184949), ClassCastException when executing a streaming PreparedStatement with Fabric\n    * Bug#19536760, GETSTRING() CALL AFTER RS.RELATIVE() RETURNS NULLPOINTEREXCEPTION\n    * BUG#20453712, CLOB.SETSTRING() WITH VALID INPUT RETURNS EXCEPTION\n    * BUG#20453671, CLOB.POSITION() API CALL WITH CLOB INPUT RETURNS EXCEPTION\n    * Bug#20685022, SSL CONNECTION TO MYSQL 5.7.6 COMMUNITY SERVER FAILS.\n    * Bug#20606107, TEST FAILURES WHEN RUNNING AGAINST 5.7.6 SERVER VERSION\n    * Bug#20533907, BUG#20204783 FIX EXPOSES WRONG BEAHAVIORS IN FAILOVER CONNECTIONS.\n    * Bug#20504139, GETFUNCTIONCOLUMNS() AND GETPROCEDURECOLUMNS() RETURNS ERROR FOR VALID INPUTS.\n    * Expose PreparedStatment.ParseInfo for external usage, with no capture of the connection\n    * Bug#75309 (20272931), mysql connector/J driver in streaming mode will in the blocking state.\n    * New property 'readOnlyPropagatesToServer' controls the implicit propagation of read only transaction access mode to server.\n    * Bug#54095 (11761585), Unnecessary call in newSetTimestampInternal.\n    * Bug#67760 (15936413), Deadlock when concurrently executing prepared statements with Timestamp objects.\n    * Bug#71084 (18028319), Wrong java.sql.Date stored if client and server time zones differ.\n    * Bug#75080 (20217686), NullPointerException during setTimestamp on Fabric connection.\n    * Bug#75168 (20204783), loadBalanceExceptionChecker interface cannot work using JDBC4/JDK7.\n    * Bug#73595 (19465516), Replace usage of StringBuffer in JDBC driver.\n    * Bug#18925727, SQL INJECTION IN MYSQL JDBC DRIVER.\n    * Bug#74998 (20112694), readRemainingMultiPackets not computed correctly for rows larger than 16 MB.\n    * Bug#73012 (19219158), Precedence between timezone options is unclear.\n    * Implement support for connecting through SOCKS proxies (WL#8105).\n    * Ant buildfile reworked to fix incompatibilities with latest Eclipse\n    * Bug#18474141, TESTSUITE.FABRIC TEST CASES FAIL IF NO FABRIC.TESTSUITE PROPERTIES PROVIDED\n    * Bug#19383371, CONNECT USING MYSQL_OLD_PASSWORD USER FAILS WHEN PWD IS BLANK\n    * Bug#17441747, C/J DOESN'T SUPPORT XA RECOVER OUTPUT FORMAT CHANGED IN MYSQL 5.7.\n    * Bug#19145408, Error messages may not be interpreted according to the proper character set\n    * Bug#19505524, UNIT TEST SUITE DOES NOT CONSIDER ALL THE PARAMETERS PASSED TO BUILD.XML.\n    * Bug#73474 (19365473), Invalid empty line in MANIFEST.MF\n    * Bug#70436 (17527948), Incorrect mapping of windows timezone to Olson timezone.\n    * Bug73163 (19171665), IndexOutOfBoundsException thrown preparing statement.\n    * Added support for gb18030 character set\n    * Bug#73663 (19479242), utf8mb4 does not work for connector/j \u003e=5.1.13\n    * Bug#73594 (19450418), ClassCastException in MysqlXADataSource if pinGlobalTxToPhysicalConnection=true\n    * Bug#19354014, changeUser() call results in 'packets out of order' error when useCompression=true.\n    * Bug#73577 (19443777), CHANGEUSER() CALL WITH USECOMPRESSION=TRUE COULD LEAD TO IO FREEZE\n    * Bug#19172037, TEST FAILURES WHEN RUNNING AGAINST 5.6.20 SERVER VERSION\n    * Bug#71923 (18344403), Incorrect generated keys if ON DUPLICATE KEY UPDATE not exact.\n    * Bug#72502 (18691866), NullPointerException in isInterfaceJdbc() when using DynaTrace\n    * Bug#72890 (18970520), Java jdbc driver returns incorrect return code when it's part of XA transaction.\n    * Fabric client now supports Fabric 1.5. Older versions are no longer supported.\n    * Bug#71672 (18232840), Every SQL statement is checked if it contains 'ON DUPLICATE KEY UPDATE' or not.\n    * Bug#73070 (19034681), Preparing a stored procedure call with Fabric results in an exception\n    * Bug#73053 (19022745), Endless loop in MysqlIO.clearInputStream due to Linux kernel bug.\n    * Bug#18869381, CHANGEUSER() FOR SHA USER RESULTS IN NULLPOINTEREXCEPTION\n    * Bug#62577 (16722757), XA connection fails with ClassCastException\n    * Bug#18852587, CONNECT WITH A USER CREATED USING SHA256_PASSWORD PLUGIN FAILS WHEN PWD IS BLANK\n    * Bug#18852682, TEST TESTSHA256PASSWORDPLUGIN FAILS WHEN EXECUTE AGAINST COMMERCIAL SERVER\n    * failing tests when running test suite with Java 6+.\n    * Bug#72712 (18836319), No way to configure Connector JDBC to not do extra queries on connection\n- Adjust log4j/log4j-mini dependencies to account for the lack of\n  log4j12/log4jmini12 Provides in some code streams.\n\nChanges in javapackages-tools:\n- Can't assume non-existence of python38 macros in Leap.\n  gh#openSUSE/python-rpm-macros#107\n  Test for suse_version instead. Only Tumbleweed has and needs the\n  python_subpackage_only support.\n\n- Fix typo in spec file sitearch -\u003e sitelib\n\n- Fix the python subpackage generation\n  gh#openSUSE/python-rpm-macros#79\n\n- Support python subpackages for each flavor\n  gh#openSUSE/python-rpm-macros#66\n- Replace old nose with pytest gh#fedora-java/javapackages#86\n\n- when building extra flavor, BuildRequire javapackages-filesystem:\n  /etc/java is being cleaned out of the filesystems package.\n\n- Upgrade to version 5.3.1\n- Define _rpmmacrodir for distributions that don't have it\n\n- Use %{_rpmmacrodir} instead of %{_libexecdir}/rpm/macros.d: this\n  just happens to overlap in some distros.\n\n- Rename gradle-local and ivy-local to javapackages-gradle and\n  javapackages-ivy and let them depend only on javapackages-tools\n  and javapackages-local. These packages only install files\n  produced during the javapackages-tools build. The dependencies\n  will be pulled by gradle-local, ivy-local and maven-local\n  meta-packages built in a separate spec file.\n\n- Split maven-local meta-package out of javapackages-tools spec\n  file\n\n- Make the ivy-local and maven-local sub-packages depend on the\n  right stuff, so that they actually can be used for building\n\n- Provide both com.sun:tools and sun.jdk:jconsole that are part of\n  standard OpenJDK installation. These provides cannot be generated\n  from metadata due to build sequence.\n\n  + fix directories for eclipse.conf too\n\n- Make the javapackages-local package depend on java-devel. It is\n  used for package building and this avoids each package to require\n  java-devel itself.\n\n- Replace the occurences of /usr/lib by libdir in configuration\n  files too\n\n- Update to version 5.3.0\n- Modified patch:\n- Build the :extras flavour as noarch\n    + we did not bump epoch of OpenJDK packages in SUSE\n    + fix a potential generation of unresolvable requires\n    + adapt the tests to not expect the epoch\n\n- Switch to multibuild layout\n\n- Update to version 5.2.0+git20180620.70fa2258:\n  * Rename the async kwarg in call_script to wait (reverses the logic)\n  * Actually bump version to 5.3.0 snapshot\n  * Bump version in VERSION file\n  * [man] s/Pacakge/Package/g\n  * Fix typos in README\n  * Fix configure-base.sh after filesystem macro split\n  * Split filesystem macros to separate macro file\n  * Introduce javapackages-filesystem package\n  * [java-functions] extend ABRT Java agent options\n  * change abrt-java-connector upstream URL\n  * Remove resolverSettings/prefixes from XMvn config\n  * Add macros to allow passing arbitrary options to XMvn\n  * [spec] Bump package version to 5.1.0\n  * Allow specifying custom repo when calling xmvn-install\n\n- Update to version 5.0.0+git20180104.9367c8f6:\n  * [java-functions] Avoid colons in jar names\n  * Workaround for SCL enable scripts not working with -e\n  * Second argument to pom_xpath_inject is mandatory\n  * [mvn_artifact] Provide more helpful error messages\n  * Fix traceback on corrupt zipfile\n  * [test] Add reproducer for rhbz#1481005\n  * [spec] Fix default JRE path\n  * [readme] Fix typo\n  * Add initial content to README.md (#21)\n  * Decouple JAVA_HOME setting from java command alternatives\n\n- Fix url to correct one https://github.com/fedora-java/javapackages\n\n- Split to python and non-python edition for smaller depgraph\n- Fix abs2rel shebang:\n- Fix Requires on subpackages to point to javapackages-tools proper\n\n- Update to version 4.7.0+git20170331.ef4057e7:\n  * Reimplement abs2rel in Python\n  * Don't expand {scl} in macro definitions\n  * Install expanded rpmfc attr files\n  * [spec] Avoid file conflicts between in SCL\n  * Fix macros.d directory ownership\n  * Make %ant macro enable SCL when needed\n  * [spec] Fix file conflicts between SCL and non-SCL packages\n  * Fix ownership of ivyxmldir\n  * [test] Force locale for python processes\n  * Don't include timestamp in generated pom.properties\n  * We switch to /usr/lib/ location for macros\n- Try to reduce some dependencies bsc#1036025\n\n- python-lxml 3.5.0 introduces validation for xml comments, and \n  one of the comments created in this package were not valid.\n  This patch fixes the problem.  It backported from upstream and\n  should be in the next release.\n  https://github.com/mizdebsk/javapackages/commit/84211c0ee761e93ee507f5d37e9fc80ec377e89d\n\n- Version update to 4.6.0:\n  * various bugfixes for maven tooling\n  * introduction to gradle-local package for gradle packaging\n\n- Drop dependency over source-highlight as it causes build cycle\n\n- Try to break buildcycle detected on Factory\n\n- Fix build on SLE11\n\n- Use python-devel instead of pkgconfig to build on sle11\n\n- Add python-javapackages as requirement for main package\n\n- Update requires on python packages to properly have all the needed\n  dependencies on runtime\n\n- Install macros to /etc/rpm as we do in SUSE:\n- Cleanup with spec-cleaner\n\n- Fix rpmlint errors\n- Enable maven-local\n- Avoid unsatisfiable dependencies\n- Enable unit tests\n- Update to version 4.4.0\n\n- create directories for java, so that ant build works\n- Add virtual provide jpackage-utils-java9 to be able to\n  distinguish the presence of java9 compatibility\n\n- fix bashisms\n\n- SLES patch for ZipFile, having no attribute '__exit__' which was causing \n  ecj build failures\n\n- set correct libxslt package when building for SLES\n\nChanges in javassist:\n    + Add OSGi manifest to the javassist.jar\n    - Allow building on systems that do not have java 9 or higher\n\n- Install and package the maven pom and metadata files\n\n- BuildRequire at least Java 9. This version uses APIs introduced\n  in Java 9\n\n- Replace old $RPM_* shell vars by macros.\n\n- Version update to 3.23.1:\n  * 3.23.1 Github PR #171\n  * 3.23   Fix leaking file handlers in ClassPool and removed\n           ClassPath.close(). Github issue #165\n  * 3.22   Java 9 supports.\n           JIRA JASSIST-261.\n\n- Specify java target and source version 1.6 in order to allow\n  building with jdk9\n    - fix javadoc errors that are fatal with jdk9\n\n- Version update to 3.21.0:\n  * various compiler settings\n  * Require java \u003e= 1.6\n\n- Update to version 3.19.0\n  * Including a number of bug fixes and Java 8 supports.\n- Clean up specfile\n- Remove redundant %clean section\n- Build for java API 1.5\n- Remove unzip requirement\n- Update home page and download source Urls\n\nChanges in protobuf:\n- Update to 3.17.3:\n  C++\n  * Introduce FieldAccessListener.\n  * Stop emitting boilerplate {Copy/Merge}From in each ProtoBuf class\n  * Provide stable versions of SortAndUnique().\n  * Make sure to cache proto3 optional message fields when they are cleared.\n  * Expose UnsafeArena methods to Reflection.\n  * Use std::string::empty() rather than std::string::size() \u003e 0.\n  * [Protoc] C++ Resolved an issue where NO_DESTROY and CONSTINIT are in incorrect order (#8296)\n  * Fix PROTOBUF_CONSTINIT macro redefinition (#8323)\n  * Delete StringPiecePod (#8353)\n  * Create a CMake option to control whether or not RTTI is enabled (#8347)\n  * Make util::Status more similar to absl::Status (#8405)\n  * The ::pb namespace is no longer exposed due to conflicts.\n  * Allow MessageDifferencer::TreatAsSet() (and friends) to override previous\n  calls instead of crashing.\n  * Reduce the size of generated proto headers for protos with string or\n  bytes fields.\n  * Move arena() operation on uncommon path to out-of-line routine\n  * For iterator-pair function parameter types, take both iterators by value.\n  * Code-space savings and perhaps some modest performance improvements in\n  * RepeatedPtrField.\n  * Eliminate nullptr check from every tag parse.\n  * Remove unused _$name$cached_byte_size fields.\n  * Serialize extension ranges together when not broken by a proto field in the\n  middle.\n  * Do out-of-line allocation and deallocation of string object in ArenaString.\n  * Streamline ParseContext::ParseMessage to avoid code bloat and improve\n  performance.\n  * New member functions RepeatedField::Assign, RepeatedPtrField::{Add, Assign}.\n  on an error path.\n  * util::DefaultFieldComparator will be final in a future version of protobuf.\n  * Subclasses should inherit from SimpleFieldComparator instead.\n  Kotlin\n  * Introduce support for Kotlin protos (#8272)\n  * Restrict extension setter and getter operators to non-nullable T.\n  Java\n  * Fixed parser to check that we are at a proper limit when a sub-message has\n  finished parsing.\n  * updating GSON and Guava to more recent versions (#8524)\n  * Reduce the time spent evaluating isExtensionNumber by storing the extension\n  ranges in a TreeMap for faster queries. This is particularly relevant for\n  protos which define a large number of extension ranges, for example when\n  each tag is defined as an extension.\n  * Fix java bytecode estimation logic for optional fields.\n  * Optimize Descriptor.isExtensionNumber.\n  * deps: update JUnit and Truth (#8319)\n  * Detect invalid overflow of byteLimit and return InvalidProtocolBufferException as documented.\n  * Exceptions thrown while reading from an InputStream in parseFrom are now\n  included as causes.\n  * Support potentially more efficient proto parsing from RopeByteStrings.\n  * Clarify runtime of ByteString.Output.toStringBuffer().\n  * Added UnsafeByteOperations to protobuf-lite (#8426)\n  Python\n  * Add MethodDescriptor.CopyToProto() (#8327)\n  * Remove unused python_protobuf.{cc,h} (#8513)\n  * Start publishing python aarch64 manylinux wheels normally (#8530)\n  * Fix constness issue detected by MSVC standard conforming mode (#8568)\n  * Make JSON parsing match C++ and Java when multiple fields from the same\n  oneof are present and all but one is null.\n  * Fix some constness / char literal issues being found by MSVC standard conforming mode (#8344)\n  * Switch on 'new' buffer API (#8339)\n  * Enable crosscompiling aarch64 python wheels under dockcross manylinux docker image (#8280)\n  * Fixed a bug in text format where a trailing colon was printed for repeated field.\n  * When TextFormat encounters a duplicate message map key, replace the current\n  one instead of merging.\n  Ruby\n  * Add support for proto3 json_name in compiler and field definitions (#8356)\n  * Fixed memory leak of Ruby arena objects. (#8461)\n  * Fix source gem compilation (#8471)\n  * Fix various exceptions in Ruby on 64-bit Windows (#8563)\n  * Fix crash when calculating Message hash values on 64-bit Windows (#8565)\n  General\n  * Support M1 (#8557)\n\n- Update to 3.15.8:\n  - Fixed memory leak of Ruby arena objects (#8461)\n\n- update to 3.15.7:\n  C++\n  * Remove the ::pb namespace (alias) (#8423)\n  Ruby\n  * Fix unbounded memory growth for Ruby \u003c2.7 (#8429)\n  * Fixed message equality in cases where the message type is different (#8434)\n\n- Can't assume non-existence of python38 macros in Leap.\n  gh#openSUSE/python-rpm-macros#107\n  Test for suse_version instead. Only Tumbleweed has and needs the\n  python_subpackage_only support.\n\n- update to 3.15.6:\n  Ruby\n  * Fixed bug in string comparison logic (#8386)\n  * Fixed quadratic memory use in array append (#8379)\n  * Fixed SEGV when users pass nil messages (#8363)\n  * Fixed quadratic memory usage when appending to arrays (#8364)\n  * Ruby \u003c2.7 now uses WeakMap too, which prevents memory leaks. (#8341)\n  * Fix for FieldDescriptor.get(msg) (#8330)\n  * Bugfix for Message.[] for repeated or map fields (#8313)\n  PHP\n  * read_property() handler is not supposed to return NULL (#8362)\n  Protocol Compiler\n  * Optional fields for proto3 are enabled by default, and no longer require\n    the --experimental_allow_proto3_optional flag.\n  C++\n  * Do not disable RTTI by default in the CMake build (#8377)\n  * Create a CMake option to control whether or not RTTI is enabled (#8361)\n  * Fix PROTOBUF_CONSTINIT macro redefinition (#8323)\n  * MessageDifferencer: fixed bug when using custom ignore with multiple\n    unknown fields\n  * Use init_seg in MSVC to push initialization to an earlier phase.\n  * Runtime no longer triggers -Wsign-compare warnings.\n  * Fixed -Wtautological-constant-out-of-range-compare warning.\n  * DynamicCastToGenerated works for nullptr input for even if RTTI is disabled\n  * Arena is refactored and optimized.\n  * Clarified/specified that the exact value of Arena::SpaceAllocated() is an\n    implementation detail users must not rely on. It should not be used in\n    unit tests.\n  * Change the signature of Any::PackFrom() to return false on error.\n  * Add fast reflection getter API for strings.\n  * Constant initialize the global message instances\n  * Avoid potential for missed wakeup in UnknownFieldSet\n  * Now Proto3 Oneof fields have 'has' methods for checking their presence in\n    C++.\n  * Bugfix for NVCC\n  * Return early in _InternalSerialize for empty maps.\n  * Adding functionality for outputting map key values in proto path logging\n    output (does not affect comparison logic) and stop printing 'value' in the\n    path. The modified print functionality is in the\n    MessageDifferencer::StreamReporter.\n  * Fixed https://github.com/protocolbuffers/protobuf/issues/8129\n  * Ensure that null char symbol, package and file names do not result in a\n    crash.\n  * Constant initialize the global message instances\n  * Pretty print 'max' instead of numeric values in reserved ranges.\n  * Removed remaining instances of std::is_pod, which is deprecated in C++20.\n  * Changes to reduce code size for unknown field handling by making uncommon\n    cases out of line.\n  * Fix std::is_pod deprecated in C++20 (#7180)\n  * Fix some -Wunused-parameter warnings (#8053)\n  * Fix detecting file as directory on zOS issue #8051 (#8052)\n  * Don't include sys/param.h for _BYTE_ORDER (#8106)\n  * remove CMAKE_THREAD_LIBS_INIT from pkgconfig CFLAGS (#8154)\n  * Fix TextFormatMapTest.DynamicMessage issue#5136 (#8159)\n  * Fix for compiler warning issue#8145 (#8160)\n  * fix: support deprecated enums for GCC \u003c 6 (#8164)\n  * Fix some warning when compiling with Visual Studio 2019 on x64 target (#8125)\n  Python\n  * Provided an override for the reverse() method that will reverse the internal\n    collection directly instead of using the other methods of the BaseContainer.\n  * MessageFactory.CreateProtoype can be overridden to customize class creation.\n  * Fix PyUnknownFields memory leak (#7928)\n  * Add macOS big sur compatibility (#8126)\n  JavaScript\n  * Generate `getDescriptor` methods with `*` as their `this` type.\n  * Enforce `let/const` for generated messages.\n  * js/binary/utils.js: Fix jspb.utils.joinUnsignedDecimalString to work with\n    negative bitsLow and low but non-zero bitsHigh parameter. (#8170)\n  PHP\n  * Added support for PHP 8. (#8105)\n  * unregister INI entries and fix invalid read on shutdown (#8042)\n  * Fix PhpDoc comments for message accessors to include '|null'. (#8136)\n  * fix: convert native PHP floats to single precision (#8187)\n  * Fixed PHP to support field numbers \u003e=2**28. (#8235)\n  * feat: add support for deprecated fields to PHP compiler (#8223)\n  * Protect against stack overflow if the user derives from Message. (#8248)\n  * Fixed clone for Message, RepeatedField, and MapField. (#8245)\n  * Updated upb to allow nonzero offset minutes in JSON timestamps. (#8258)\n  Ruby\n  * Added support for Ruby 3. (#8184)\n  * Rewrote the data storage layer to be based on upb_msg objects from the\n    upb library. This should lead to much better parsing performance,\n    particularly for large messages. (#8184).\n  * Fill out JRuby support (#7923)\n  * [Ruby] Fix: (SIGSEGV) gRPC-Ruby issue on Windows. memory alloc infinite\n    recursion/run out of memory (#8195)\n  * Fix jruby support to handle messages nested more than 1 level deep (#8194)\n  Java\n  * Avoid possible UnsupportedOperationException when using CodedInputSteam\n    with a direct ByteBuffer.\n  * Make Durations.comparator() and Timestamps.comparator() Serializable.\n  * Add more detailed error information for dynamic message field type\n    validation failure\n  * Removed declarations of functions declared in java_names.h from\n    java_helpers.h.\n  * Now Proto3 Oneof fields have 'has' methods for checking their presence in\n    Java.\n  * Annotates Java proto generated *_FIELD_NUMBER constants.\n  * Add -assumevalues to remove JvmMemoryAccessor on Android.\n  C#\n  * Fix parsing negative Int32Value that crosses segment boundary (#8035)\n  * Change ByteString to use memory and support unsafe create without copy (#7645)\n  * Optimize MapField serialization by removing MessageAdapter (#8143)\n  * Allow FileDescriptors to be parsed with extension registries (#8220)\n  * Optimize writing small strings (#8149)\n\n- Updated URL to https://github.com/protocolbuffers/protobuf\n- Update to v3.14.0\n  Protocol Compiler\n  * The proto compiler no longer requires a .proto filename when it is not\n    generating code.\n  * Added flag `--deterministic_output` to `protoc --encode=...`.\n  * Fixed deadlock when using google.protobuf.Any embedded in aggregate options.\n  C++\n  * Arenas are now unconditionally enabled. cc_enable_arenas no longer has\n    any effect.\n  * Removed inlined string support, which is incompatible with arenas.\n  * Fix a memory corruption bug in reflection when mixing optional and\n    non-optional fields.\n  * Make SpaceUsed() calculation more thorough for map fields.\n  * Add stack overflow protection for text format with unknown field values.\n  * FieldPath::FollowAll() now returns a bool to signal if an out-of-bounds\n    error was encountered.\n  * Performance improvements for Map.\n  * Minor formatting fix when dumping a descriptor to .proto format with\n    DebugString.\n  * UBSAN fix in RepeatedField\n  * When running under ASAN, skip a test that makes huge allocations.\n  * Fixed a crash that could happen when creating more than 256 extensions in\n    a single message.\n  * Fix a crash in BuildFile when passing in invalid descriptor proto.\n  * Parser security fix when operating with CodedInputStream.\n  * Warn against the use of AllowUnknownExtension.\n  * Migrated to C++11 for-range loops instead of index-based loops where\n    possible. This fixes a lot of warnings when compiling with -Wsign-compare.\n  * Fix segment fault for proto3 optional\n  * Adds a CMake option to build `libprotoc` separately\n  Java\n  * Bugfix in mergeFrom() when a oneof has multiple message fields.\n  * Fix RopeByteString.RopeInputStream.read() returning -1 when told to read\n    0 bytes when not at EOF.\n  * Redefine remove(Object) on primitive repeated field Lists to avoid\n    autoboxing.\n  * Support '\\u' escapes in textformat string literals.\n  * Trailing empty spaces are no longer ignored for FieldMask.\n  * Fix FieldMaskUtil.subtract to recursively remove mask.\n  * Mark enums with `@java.lang.Deprecated` if the proto enum has option\n    `deprecated = true;`.\n  * Adding forgotten duration.proto to the lite library\n  Python\n  * Print google.protobuf.NullValue as null instead of 'NULL_VALUE' when it is\n    used outside WKT Value/Struct.\n  * Fix bug occurring when attempting to deep copy an enum type in python 3.\n  * Add a setuptools extension for generating Python protobufs\n  * Remove uses of pkg_resources in non-namespace packages\n  * [bazel/py] Omit google/__init__.py from the Protobuf runtime\n  * Removed the unnecessary setuptools package dependency for Python package\n  * Fix PyUnknownFields memory leak\n  PHP\n  * Added support for '==' to the PHP C extension\n  * Added `==` operators for Map and Array\n  * Native C well-known types\n  * Optimized away hex2bin() call in generated code\n  * New version of upb, and a new hash function wyhash in third_party\n  * add missing hasOneof method to check presence of oneof fields\n  Go:\n  * Update go_package options to reference google.golang.org/protobuf module.\n  C#:\n  * annotate ByteString.CopyFrom(ReadOnlySpan\u003cbyte\u003e) as SecuritySafeCritical\n  * Fix C# optional field reflection when there are regular fields too\n  * Fix parsing negative Int32Value that crosses segment boundary\n  Javascript:\n  * JS: parse (un)packed fields conditionally\n- from version 3.13.0\n  PHP:\n  * The C extension is completely rewritten. The new C extension has significantly\n    better parsing performance and fixes a handful of conformance issues. It will\n    also make it easier to add support for more features like proto2 and proto3 presence.\n  * The new C extension does not support PHP 5.x. PHP 5.x users can still use pure-PHP.\n  C++:\n  * Removed deprecated unsafe arena string accessors\n  * Enabled heterogeneous lookup for std::string keys in maps.\n  * Removed implicit conversion from StringPiece to std::string\n  * Fix use-after-destroy bug when the Map is allocated in the arena.\n  * Improved the randomness of map ordering\n  * Added stack overflow protection for text format with unknown fields\n  * Use std::hash for proto maps to help with portability.\n  * Added more Windows macros to proto whitelist.\n  * Arena constructors for map entry messages are now marked 'explicit'\n    (for regular messages they were already explicit).\n  * Fix subtle aliasing bug in RepeatedField::Add\n  * Fix mismatch between MapEntry ByteSize and Serialize with respect to unset\n    fields.\n  Python:\n  * JSON format conformance fixes:\n    * Reject lowercase t for Timestamp json format.\n    * Print full_name directly for extensions (no camelCase).\n    * Reject boolean values for integer fields.\n    * Reject NaN, Infinity, -Infinity that is not quoted.\n    * Base64 fixes for bytes fields: accept URL-safe base64 and missing padding.\n  * Bugfix for fields/files named 'async' or 'await'.\n  * Improved the error message when AttributeError is returned from __getattr__\n    in EnumTypeWrapper.\n  Java:\n  * Fixed a bug where setting optional proto3 enums with setFooValue() would\n    not mark the value as present.\n  * Add Subtract function to FieldMaskUtil.\n  C#:\n  * Dropped support for netstandard1.0 (replaced by support for netstandard1.1).\n    This was required to modernize the parsing stack to use the `Span\u003cbyte\u003e`\n    type internally\n  * Add `ParseFrom(ReadOnlySequence\u003cbyte\u003e)` method to enable GC friendly\n    parsing with reduced allocations and buffer copies\n  * Add support for serialization directly to a `IBufferWriter\u003cbyte\u003e` or\n    to a `Span\u003cbyte\u003e` to enable GC friendly serialization.\n    The new API is available as extension methods on the `IMessage` type\n  * Add `GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE` define to make\n    generated code compatible with old C# compilers (pre-roslyn compilers\n    from .NET framework and old versions of mono) that do not support\n    ref structs. Users that are still on a legacy stack that does\n    not support C# 7.2 compiler might need to use the new define\n    in their projects to be able to build the newly generated code\n  * Due to the major overhaul of parsing and serialization internals,\n    it is recommended to regenerate your generated code to achieve the best\n    performance (the legacy generated code will still work, but might incur\n    a slight performance penalty).\n\n- Fix the python subpackage generation\n  gh#openSUSE/python-rpm-macros#79\n\n- Support multiple python3 flavors gh#openSUSE/python-rpm-macros#66\n\n- Update to version 3.12.3; notable changes since 3.11.4:\n  Protocol Compiler\n  * [experimental] Singular, non-message typed fields in proto3 now support\n    presence tracking. This is enabled by adding the 'optional' field label and\n    passing the --experimental_allow_proto3_optional flag to protoc.\n    * For usage info, see docs/field_presence.md.\n    * During this experimental phase, code generators should update to support\n      proto3 presence, see docs/implementing_proto3_presence.md for instructions.\n  * Allow duplicate symbol names when multiple descriptor sets are passed on\n    the command-line, to match the behavior when multiple .proto files are passed.\n  * Deterministic `protoc --descriptor_set_out` (#7175)\n  Objective-C\n  * Tweak the union used for Extensions to support old generated code. #7573\n  * Fix for the :protobuf_objc target in the Bazel BUILD file. (#7538)\n    if p['result'] == 'FAIL': \n  * [experimental] ObjC Proto3 optional support (#7421)\n  * Block subclassing of generated classes (#7124)\n  * Use references to Obj C classes instead of names in descriptors. (#7026)\n  * Revisit how the WKTs are bundled with ObjC. (#7173)\n  C++\n  * Simplified the template export macros to fix the build for mingw32. (#7539)\n  * [experimental] Added proto3 presence support.\n  * New descriptor APIs to support proto3 presence.\n  * Enable Arenas by default on all .proto files.\n  * Documented that users are not allowed to subclass Message or MessageLite.\n  * Mark generated classes as final; inheriting from protos is strongly discouraged.\n  * Add stack overflow protection for text format with unknown fields.\n  * Add accessors for map key and value FieldDescriptors.\n  * Add FieldMaskUtil::FromFieldNumbers().\n  * MessageDifferencer: use ParsePartial() on Any fields so the diff does not\n    fail when there are missing required fields.\n  * ReflectionOps::Merge(): lookup messages in the right factory, if it can.\n  * Added Descriptor::WellKnownTypes enum and Descriptor::well_known_type()\n    accessor as an easier way of determining if a message is a Well-Known Type.\n  * Optimized RepeatedField::Add() when it is used in a loop.\n  * Made proto move/swap more efficient.\n  * De-virtualize the GetArena() method in MessageLite.\n  * Improves performance of json_stream_parser.cc by factor 1000 (#7230)\n  * bug: #7076 undefine Windows OUT and OPTIONAL macros (#7087)\n  * Fixed a bug in FieldDescriptor::DebugString() that would erroneously print\n    an 'optional' label for a field in a oneof.\n  * Fix bug in parsing bool extensions that assumed they are always 1 byte.\n  * Fix off-by-one error in FieldOptions::ByteSize() when extensions are present.\n  * Clarified the comments to show an example of the difference between\n    Descriptor::extension and DescriptorPool::FindAllExtensions.\n  * Add a compiler option 'code_size' to force optimize_for=code_size on all\n    protos where this is possible.\n  Ruby\n  * Re-add binary gems for Ruby 2.3 and 2.4. These are EOL upstream, however\n    many people still use them and dropping support will require more\n    coordination.\n  * [experimental] Implemented proto3 presence for Ruby. (#7406)\n  * Stop building binary gems for ruby \u003c2.5 (#7453)\n  * Fix for wrappers with a zero value (#7195)\n  * Fix for JSON serialization of 0/empty-valued wrapper types (#7198)\n  * Call 'Class#new' over rb_class_new_instance in decoding (#7352)\n  * Build extensions for Ruby 2.7 (#7027)\n  * assigning 'nil' to submessage should clear the field. (#7397)\n  Java\n  * [experimental] Added proto3 presence support.\n  * Mark java enum _VALUE constants as @Deprecated if the enum field is deprecated\n  * reduce \u003cclinit\u003e size for enums with allow_alias set to true.\n  * Sort map fields alphabetically by the field's key when printing textproto.\n  * Fixed a bug in map sorting that appeared in -rc1 and -rc2 (#7508).\n  * TextFormat.merge() handles Any as top level type.\n  * Throw a descriptive IllegalArgumentException when calling\n    getValueDescriptor() on enum special value UNRECOGNIZED instead of\n    ArrayIndexOutOfBoundsException.\n  * Fixed an issue with JsonFormat.printer() where setting printingEnumsAsInts()\n    would override the configuration passed into includingDefaultValueFields().\n  * Implement overrides of indexOf() and contains() on primitive lists returned\n    for repeated fields to avoid autoboxing the list contents.\n  * Add overload to FieldMaskUtil.fromStringList that accepts a descriptor.\n  * [bazel] Move Java runtime/toolchains into //java (#7190)\n  Python\n  * [experimental] Added proto3 presence support.\n  * [experimental] fast import protobuf module, only works with cpp generated code linked in.\n  * Truncate 'float' fields to 4 bytes of precision in setters for pure-Python\n    implementation (C++ extension was already doing this).\n  * Fixed a memory leak in C++ bindings.\n  * Added a deprecation warning when code tries to create Descriptor objects\n    directly.\n  * Fix unintended comparison between bytes and string in descriptor.py.\n  * Avoid printing excess digits for float fields in TextFormat.\n  * Remove Python 2.5 syntax compatibility from the proto compiler generated _pb2.py module code.\n  * Drop 3.3, 3.4 and use single version docker images for all python tests (#7396)\n  JavaScript\n  * Fix js message pivot selection (#6813)\n  PHP\n  * Persistent Descriptor Pool (#6899)\n  * Implement lazy loading of php class for proto messages (#6911)\n  * Correct @return in Any.unpack docblock (#7089)\n  * Ignore unknown enum value when ignore_unknown specified (#7455)\n  C#\n  * [experimental] Add support for proto3 presence fields in C# (#7382)\n  * Mark GetOption API as obsolete and expose the 'GetOptions()' method on descriptors instead (#7491)\n  * Remove Has/Clear members for C# message fields in proto2 (#7429)\n  * Enforce recursion depth checking for unknown fields (#7132)\n  * Fix conformance test failures for Google.Protobuf (#6910)\n  * Cleanup various bits of Google.Protobuf (#6674)\n  * Fix latest ArgumentException for C# extensions (#6938)\n  * Remove unnecessary branch from ReadTag (#7289)\n  Other\n  * Add a proto_lang_toolchain for javalite (#6882)\n  * [bazel] Update gtest and deprecate //external:{gtest,gtest_main} (#7237)\n  * Add application note for explicit presence tracking. (#7390)\n  * Howto doc for implementing proto3 presence in a code generator. (#7407)\n\n- Python: Add requirement on python-six\n\n- Update to version 3.11.4; notable changes since 3.9.2:\n  * C++: Make serialization method naming consistent\n  * C++: Moved ShutdownProtobufLibrary() to message_lite.h. For\n         backward compatibility a declaration is still available\n         in stubs/common.h, but users should prefer message_lite.h\n  * C++: Removed non-namespace macro EXPECT_OK()\n  * C++: Removed mathlimits.h from stubs in favor of using\n         std::numeric_limits from C++11\n  * C++: Support direct pickling of nested messages\n  * C++: Disable extension code gen for C#\n  * C++: Switch the proto parser to the faster MOMI parser\n  * C++: Unused imports of files defining descriptor extensions\n         will now be reported\n  * C++: Add proto2::util::RemoveSubranges to remove multiple\n         subranges in linear time\n  * C++: Support 32 bit values for ProtoStreamObjectWriter to Struct\n  * C++: Removed the internal-only header coded_stream_inl.h and\n         the internal-only methods defined there\n  * C++: Enforced no SWIG wrapping of descriptor_database.h\n         (other headers already had this restriction)\n  * C++: Implementation of the equivalent of the MOMI parser for\n         serialization. This removes one of the two serialization\n         routines, by making the fast array serialization routine\n         completely general. SerializeToCodedStream can now be\n         implemented in terms of the much much faster array\n         serialization. The array serialization regresses slightly,\n         but when array serialization is not possible this wins big\n  * C++: Add move constructor for Reflection's SetString\n  * Java: Remove the usage of MethodHandle, so that Android users\n          prior to API version 26 can use protobuf-java\n  * Java: Publish ProGuard config for javalite\n  * Java: Include unknown fields when merging proto3 messages in\n          Java lite builders\n  * Java: Have oneof enums implement a separate interface (other\n          than EnumLite) for clarity\n  * Java: Opensource Android Memory Accessors\n  * Java: Change ProtobufArrayList to use Object[] instead of\n          ArrayList for 5-10% faster parsing\n  * Java: Make a copy of JsonFormat.TypeRegistry at the protobuf\n          top level package. This will eventually replace\n          JsonFormat.TypeRegistry\n  * Java: Add Automatic-Module-Name entries to the Manifest\n  * Python: Add float_precision option in json format printer\n  * Python: Optionally print bytes fields as messages in unknown\n            fields, if possible\n  * Python: Experimental code gen (fast import protobuf module)\n            which only work with cpp generated code linked in\n  * Python: Add descriptor methods in descriptor_pool are deprecated\n  * Python: Added delitem for Python extension dict\n  * JavaScript: Remove guard for Symbol iterator for jspb.Map\n  * JavaScript: Remove deprecated boolean option to getResultBase64String()\n  * JavaScript: Change the parameter types of binaryReaderFn in\n                ExtensionFieldBinaryInfo to (number, ?, ?)\n  * JavaScript: Create dates.ts and time_of_days.ts to mirror Java\n                versions. This is a near-identical conversion of\n                c.g.type.util.{Dates,TimeOfDays} respectively\n  * JavaScript: Migrate moneys to TypeScript\n  * PHP: Increase php7.4 compatibility\n  * PHP: Implement lazy loading of php class for proto messages\n  * Ruby: Support hashes for struct initializers\n  * C#: Experimental proto2 support is now officially available\n  * C#: Change _Extensions property to normal body rather than expression\n  * Objective C: Remove OSReadLittle* due to alignment requirements\n  * Other: Override CocoaPods module to lowercase\n  * further bugfixes and optimisations\n\n- Use tarball provided by upstream\n- Small package cleanup\n\n- Updated to version 3.9.2 (bsc#1162343)\n   (Objective-C)\n  * Remove OSReadLittle* due to alignment requirements. (#6678)\n  * Don't use unions and instead use memcpy for the type swaps. (#6672)\n\n- Package also the protobuf-bom pom file\n\n- Update to new upstream release 3.9.1\n  * Optimized the implementation of RepeatedPtrFieldBase.\n  * Added delimited parse and serialize util.\n  * Added FieldDescriptor::PrintableNameForExtension() and\n    DescriptorPool::FindExtensionByPrintableName(). The latter\n    will replace Reflection::FindKnownExtensionByName().\n  * Created a new Add method in repeated field that allows adding\n    a range of elements all at once.\n  * Drop building wheel for Python 3.4.\n\n- Specify java source and target levels in order to build\n  compatible protobuf-java binaries\n\n- Update to new upstream release 3.8.0\n  * Introduced new MOMI (maybe-outside-memory-interval) parser.\n  * Added use of C++ override keyword where appropriate.\n  * Always declare enums to be int-sized.\n  * Append '_' to C++ reserved keywords for message, enum, extension.\n\n- Disable LTO (boo#1133277).\n\n- fixes build with Bazel 0.22.0.\n\n- Add protobuf-source package - some programs using gRPC and\n  protobuf need protobuf definitions which are included inside the\n  source code, but are not included in the devel package.\n\n- Add maven pom files to the protobuf-java package\n\n- update to version v3.6.1:\n  * PHP namespaces for nested messages and enums (#4536)\n  * Allows the json marshaller to be passed json marshal options (#4252)\n  * Make sure to delete temporary maps used by FileDescriptorTables\n  * fix python cpp kokoro build\n  * Change C# reflection to avoid using expression trees\n  * Updated checked-in generated code\n  * Removed unused variables in repeated_scalar_container.cc\n  * Removed unused code pertaining to shared_ptr\n  * Include no_package.proto in Python test\n  * Only check filenames when end with .py in _CalledFromGeneratedFile() (#4262)\n  * Convert descriptortype to type for upb_msgval_sizeof (#4357)\n  * Removed duplicate using statement from ReflectionUtil.cs\n  * Add support for power ppc64le\n  * Cat the test-suite.log on errors for presubits\n  * Address review comments\n  * Add third-party RPC implementation: raster - a network framework supports pbrpc by 'service' keyword.\n  * Delete javanano kokoro build configs.\n  * Updated Ruby conformance test failure list\n  * Removed use of some type traits\n  * Adopt php_metadata_namespace in php code generator (#4622)\n  * Move to Xcode 9.3 which also means a High Sierra image.\n  * Add protoc release script for Linux build.\n  * protoc-artifacts: Avoid storing temporary files and use fewer layers\n  * Rewrite go_benchmark\n  * Add files to build ruby artifact for mac on kokoro (#4814)\n  * Remove javanano.\n  * Comment out unused command from release script.\n  * Avoid direct check of class name (#4601)\n  * The JsonParseOptions::ignore_unknown_fields option behavior treats\n  * Fix php memory leak test (#4692)\n  * Fix benchmark build\n  * Add VS2017 optional component dependency details to the C# readme (#4128)\n  * Fix initialization with Visual Studio\n  * For windows, all python version should use /MT (#4468)\n  * use brew install instead of easy_install in OSX (#4537)\n  * Sync upb change (#4373)\n  * Always add -std=c++11 for mac (#4684)\n  * Add kokoro build status badges.\n  * Removed unrecognized option from no_package.proto\n  * Fixed up proto3_lite_unittest.cc\n  * Update Xcode settings\n  * Cleanup LICENSE file.\n  * Remove js_embed binary. (#4709)\n  * Fixed JS parsing of unspecified map keys\n  * Update version number to 3.6.0\n  * Deliberately call simple code to avoid Unity linker pruning\n  * Revert 'Move `compiler/plugin.pb.cc` to libprotobuf with the other WKT sources.'\n  * protoc-artifacts: Use ENTRYPOINT to enable devtoolset-1.1\n  * MinGW build failed\n  * Support using MSVC intrinsics in Log2FloorNonZero\n  * Fix array constructor in c extension for compatibility (#4667)\n  * Add space between class name and concat message (#4577)\n  * fix python\n  * Add performance.md and add instruction for linking tcmalloc\n  * Add script for run and upload the benchmark result to bq\n  * Add test for failing write of raw pointer to output stream\n  * [objectivec] Fix memory leak of exceptions raised by RaiseException() (#4556)\n  * Remove stray indent on normal imports.\n  * Fix python ext build on kokoro (#4527)\n  * Add compile test sources for to test include order.\n  * Fixed a Visual Studio 2017 build error. (#4488)\n  * fix linux kokoro build in docker\n  * Fixes MSVC compiler warning C4800 'Forcing value to bool 'true' or 'false'' (#4350)\n  * Updated Docker setup to use GCC 4.8\n  * Remove broken build status icons.\n  * Run autogen.sh in release script.\n  * Output *_pb2_grpc.py when use_grpc_plugin=True\n  * Adopt ruby_package in ruby generated code. (#4627)\n  * Cygwin build failed\n  * Work around an 'old runtime' issue with reflection\n  * Added Kokoro protoc release build for OS X (#4770)\n  * Updated change log for 3.6.1 release\n  * Move methods out of class (#4697)\n  * Fix to allow AOT compilers to play nicely with reflection\n  * Update Makefile.am for Java lite files.\n  * Added map_lite_test.proto to fix LiteTest\n  * Introduce a compatiblity shim to support .NET 3.5 delegate creation\n  * Revert 'Removed mention of Buffer in byteSourceToUint8Array'\n  * Add gogo benchmark\n  * Set ext.no_native = true for non mac platform\n  * Removed atomicops.h since it is no longer used\n  * Rename a shadowed variable.\n  * Add kokoro bazel configs for 3.6.x branch.\n  * Deleted scoped_ptr.h\n  * Check the message to be encoded is the wrong type. (#4885) (#4949)\n  * protoc-artifacts: Avoid checking out protobuf code\n  * Add conformance test for null value in list JSON\n  * Build ruby gem on kokoro (#4819)\n  * Try using a new version of Visual Studio on AppVeyor\n  * Make ruby release configs consistent with protoc.\n  * fix for API change in PHP 7.3 (#4898)\n  * Add .proto files to extract_includes.bat\n  * Update protoc build scripts.\n  * Blacklist all WELL_KNOWN_PROTOS from Bazel C++ code generation.\n  * Additional support for building and deploying ppcle_64 artifacts\n  * Fix php tests\n  * Cleanup + documentation for Java Lite runtime.\n  * Added Kokoro Windows release build config for protoc (#4766)\n  * typo\n  * fix golang kokoro linux build\n  * Fix spelling error of __GNUC_MINOR__\n  * Update code to work for Xcode 10b1 (#4729)\n  * Added pyext/thread_unsafe_shared_ptr.h\n  * Added missing .inc files to BUILD\n  * js message support for jstype string on integers (#4332)\n  * Improve error message when googletest is missing.\n  * Make assertEquals pass for message (#4947)\n  * Sync internal benchmark changes\n  * Removed some unused C++ source files\n  * Fix missing LIBPROTOC_EXPORT.\n  * Added new test source files to Makefile.am\n  * Update php version to 3.6.0 (#4736)\n  * Fix RepeatedField#delete_if (#4292)\n  * Merge branch (#4466)\n  * Implement array constructor in php c extension.\n  * protoc-artifacts: Update centos base from 6.6 to 6.9\n  * PHP array constructors for protobuf messages (#4530)\n  * Fix problem: cmake build failed in c++11  by clang\n  * Don't assume Windows builds use MSVC.\n  * Use legacy name in php runtime (#4741)\n  * Add file option php_metadata_namespace and ruby_package (#4609)\n  * Fix cpp benchmark dependency on mac\n  * Use the first enum value instead of 0 in DefaultValueObjectWriter::FindEnumDefault\n  * Check return value on write of raw pointer\n  * Delete unused directories.\n  * Replace //:protoc and similar default macro arguments with\n  * Add extra C# file to Makefile.am\n  * includes the expected class in the exception, otherwise the error is harder to track down (#3371)\n  * Update instructions about getting protobuf source.\n  * Add cpp tests under release docker image.\n  * fix java benchmark, fix dashboard build\n  * `update_file_lists.sh` depends on Bash features, thus needs Bash sebang.\n  * Rename build_artifacts.cfg to release.cfg (#4818)\n  * Fix bug: whether always_print_enums_as_ints is true or false, it always print the default value of enums as strings\n  * source code info for interpreted options; fix source code info for extension range options (#4342)\n  * Updated version numbers to 3.6.1\n  * Trim imports for bundled generated protos.\n  * Require C++11 and pass -std=c++11\n  * Remove the iOS Test App.\n  * fix duplicate mkdir in update_file_lists.sh\n  * Updated csharp/README.md to reflect testing changes\n  * Fix bazel build of examples.\n  * Add missing ruby/tests/test_ruby_package.proto\n  * Fix cpp_distcheck\n  * Updated the change log with changes for 3.6.0\n  * some fix\n  * CMake: Update CXX Standard management\n  * Add the files added in #4485.\n  * Change to deal all messages in one loop\n  * Fix php conformance test.\n  * Add __init__.py files to compiler and util subpackages (#4117)\n  * Updated .gitignore to exclude downloaded gmock/ directory\n  * Fix error in Clang UndefinedBehaviorSanitizer\n  * Work around MSVC issue with std::atomic initialization (#4777)\n  * Updated conformance failure lists\n  * Add back GeneratedClassName to public (#4686)\n  * Add continuous test for ruby 2.3, 2.4 and 2.5 (#4829)\n  * Throw error if user want to access message properties (#4603)\n  * fix json_decode call parameters (#4381)\n  * Move `compiler/plugin.pb.cc` to libprotobuf with the other WKT sources.\n  * PHP: fixed typo in message.c\n  * Add go benchmark\n  * Allow list values to be null when parsing\n  * Added instruction for existing ZLIB configuration\n  * Fix 32bit php tests\n  * Removed javanano from post_process_dist.sh\n  * Don't generate imports for the WKTs unless generating the WKTs.\n  * For encoding upb needs descriptor type instead of type. (#4354)\n  * Include googletest as a submodule (#3993)\n  * Write messages to backing field in generated C# cloning code (#4440)\n  * Integrated internal changes from Google\n- bump soname version\n\nupdate to version v3.5.2:\n  * Update release date\n  * Disable pip cache when testing uploaded packages\n  * Replace private timelib_update_ts with public date_timestamp_get\n  * Remove py2.6 support.\n  * Cherrypick for csharp, including:\n  * Update changelog\n  * Update changelog for 3.5.1\n  * Fix uploading binary wheel.\n  * Fix memory leak when creating map field via array.\n  * Update rake file to build of 2.1.6.\n  * Avoid using php_date_get_date_ce() in case date extension is not\n  * Update protoc-artfacts\n  * Fix string::back() usage in googletest.cc\n  * Fix memory leak in php7\n  * Support ruby2.5\n  * io_win32: support non-ASCII paths\n  * Explicitly propagate the status of Flush().\n  * Add discard unknown API in ruby. (#3990)\n  * Update version for 3.5.0.post1\n  * remove nullptr\n  * Fix more memory leak for php c extension (#4211)\n  * Bumping number to fix ruby 2.1 on mac\n  * io_win32_unittest: remove incorrect error check\n  * Fix memory leak when creating repeated field via array.\n  * Update version number for php c extension (#3896)\n  * Fix file permission for python package.\n  * Create containing directory before generating well_known_types_embed.cc\n  * Replace C++11 only method std::map::at\n  * Recursively clear unknown fields in submessages. (#3982)\n  * Update version number to 3.5.1\n  * io_win32_unittest: fix condition in GetCwdAsUtf8\n  * Add release log\n  * io_win32_unittest: use CWD as last tempdir\n  * Add PROTOBUF_ENABLE_TIMESTAMP to let user decide whether timestamp util\n  * Add support for Windows ARM64 build\n  * Add protobuf-all in post release\n  * Use fully qualifed name for DescriptorPool in Any.php to avoid name (#3886)\n  * Add _file_desc_by_toplevel_extension back\n  * Fix setup.py for windows build.\n  * io_win32_unittest: make //:win32_test run again\n  * Provide discardUnknonwnFields API in php (#3976)\n  * Update php c extension version number to 3.5.0.1\n  * Fix ruby gc_test in ruby 2.4 (#4011)\n  * Remove duplicate typedef. (#3975)\n  * Accept DatetimeInterface in fromDatetime\n  * io_win32: add more encoding-related tests\n  * Bump version number to 3.5.2\n  * Bump protoc-artifact version for a patch rebuild\n  * Call php method via function name instead of calling directly.\n  * Well known types are not initialized properly. (#4139)\n  * Use matching enum type for IsPOD.\n  * Fix several more memory leak\n  * Fix for php5.5\n  * Add backslach to make class explict in global namespace\n\n  * Fix compile error undefined reference to\n    `google::protobuf::internal::Release_CompareAndSwap(long volatile*, long, long)'\n    on s390x https://github.com/google/protobuf/issues/3937\n\n- Conditionalize python2 and python3 in order to be able to build\n  without python2 present in distribution\n  * Use singlespec macros to simplify the logic\n- Run fdupes on python modules to avoid duplicates\n- Remove shebangs from import-only code\n\n- Update to new upstream release 3.5.0\n  * Proto3 messages are now preserving unknown fields by default.\n    If you rely on unknowns fields being dropped, use\n    DiscardUnknownFields() explicitly.\n  * Deprecated the unsafe_arena_release_* and\n    unsafe_arena_add_allocated_* methods for string fields.\n  * Added move constructor and move assignment to RepeatedField,\n    RepeatedPtrField and google::protobuf::Any.\n  * Added perfect forwarding in Arena::CreateMessage.\n  * In-progress experimental support for implicit weak fields\n    with lite protos. This feature allows the linker to strip out\n    more unused messages and reduce binary size.\n- Rename %soname to %sover to better reflect its use.\n\n- Install LICENSE\n\n- Update to 3.3.0 :\n  * C++:\n    * Fixed map fields serialization of DynamicMessage to correctly serialize\n      both key and value regardless of their presence.\n    * Parser now rejects field number 0 correctly.\n    * New API Message::SpaceUsedLong() that’s equivalent to\n      Message::SpaceUsed() but returns the value in size_t.\n    * JSON support\n      - New flag always_print_enums_as_ints in JsonPrintOptions.\n      - New flag preserve_proto_field_names in JsonPrintOptions. It will instruct\n        the JSON printer to use the original field name declared in the .proto\n        file instead of converting them to lowerCamelCase when printing JSON.\n      - JsonPrintOptions.always_print_primtive_fields now works for oneof message\n        fields.\n      - Fixed a bug that doesn’t allow different fields to set the same json_name\n        value.\n      - Fixed a performance bug that causes excessive memory copy when printing\n        large messages.\n    * Various performance optimizations.\n  * Java:\n    * Map field setters eagerly validate inputs and throw NullPointerExceptions\n      as appropriate.\n    * Added ByteBuffer overloads to the generated parsing methods and the Parser\n      interface.\n    * proto3 enum's getNumber() method now throws on UNRECOGNIZED values.\n    * Output of JsonFormat is now locale independent.\n  * Python:\n    * Added FindServiceByName() in the pure-Python DescriptorPool. This works only\n      for descriptors added with DescriptorPool.Add(). Generated descriptor_pool\n      does not support this yet.\n    * Added a descriptor_pool parameter for parsing Any in text_format.Parse().\n    * descriptor_pool.FindFileContainingSymbol() now is able to find nested\n      extensions.\n    * Extending empty [] to repeated field now sets parent message presence.\n- Update to 3.2.0 :\n  * Added protoc version number to protoc plugin protocol. It can be used by\n    protoc plugin to detect which version of protoc is used with the plugin and\n    mitigate known problems in certain version of protoc.\n  * C++:\n    * The default parsing byte size limit has been raised from 64MB to 2GB.\n    * Added rvalue setters for non-arena string fields.\n    * Enabled debug logging for Android.\n    * Fixed a double-free problem when using Reflection::SetAllocatedMessage()\n      with extension fields.\n    * Fixed several deterministic serialization bugs:\n      * MessageLite::SerializeAsString() now respects the global deterministic\n        serialization flag.\n      * Extension fields are serialized deterministically as well.  Fixed protocol\n        compiler to correctly report importing-self as an error.\n    * Fixed FileDescriptor::DebugString() to print custom options correctly.\n    * Various performance/codesize optimizations and cleanups.\n  * Java:\n    * The default parsing byte size limit has been raised from 64MB to 2GB.\n    * Added recursion limit when parsing JSON.\n    * Fixed a bug that enumType.getDescriptor().getOptions() doesn't have custom\n      options.\n    * Fixed generated code to support field numbers up to 2^29-1.\n  * Python:\n    * You can now assign NumPy scalars/arrays (np.int32, np.int64) to protobuf\n      fields, and assigning other numeric types has been optimized for\n      performance.\n    * Pure-Python: message types are now garbage-collectable.\n    * Python/C++: a lot of internal cleanup/refactoring.\n- Increase soname to 13\n- Generate python2-protobuf and python3-protobuf packages in Factory\n- Make the python2-protobuf package provide and obsolete python-protobuf\n  to make the transition smooth in Tumbleweed\n\n- Fix an issue with setup.py where some files are built on the\n  first invocation, but only copied on the second. This resulted\n  in an incomplete protobuf-python package.\n\n- Update to protobuf v3.1.0. Protobuf v3.0.0 introduceced a new\n  version of the protocol buffer language, proto3, which supersedes\n  proto2.\n  The protoc compiler is able to read old proto2 protocol definitions,\n  and defaults to the proto2 syntax if a syntax is not specified, thus\n  packages can be recompiled to link to the new library. For backwards\n  compatibility, the old library version is available from the\n  protobuf2 package.\n  As the API for proto2 is not compatible to the proto3 API, proto3\n  should only be used for new Protocol Buffers, whereas current users\n  are advised to keep using proto2. For a detailed list of changes,\n  see https://github.com/google/protobuf/releases\n\n- Use py_sitedir for library installation with setup.py install\n\n- Drop protobuf-libs as it is just workaround for rpmlint issue\n\n- Cleanup specfile:\n  * remove any conditionals for versions predating SLES 12/Leap 42.x\n  * add Provides: protobuf-libs to fix rpmlint warning\n\nChanges in python-python-gflags:\n- Don't provide python2-gflags, singlespec packages should use\n  correct name.\n\n- Provide python-gflags in the python2 package\n\n- Fix URL.\n\n- Update to version 3.1.1\n  * Added PEP8 style method/function aliases.\n- Update to version 3.1.0\n  * Python3 compatibility\n  * Removed UnrecognizedFlag exception.\n  * Replaced flags.DuplicateFlag with flags.DuplicateFlagError.\n  * Moved the validators.Error class to exceptions.ValidationError.\n  * Renamed IllegalFlagValue to IllegalFlagValueError.\n  * Removed MutualExclusionValidator class, in favor of flags.MarkFlagsAsMutualExclusive.\n  * Removed FlagValues.AddValidator method.\n  * Removed _helpers.GetMainModule.\n  * Use xml.dom.minidom to create XML strings, instead of manual crafting.\n  * Declared PEP8-style names.\n  * Added examples.\n- Update to version 3.0.7\n  * Removed the unused method ShortestUniquePrefixes.\n  * Removed _GetCallingModule function alias.\n- Update to version 3.0.6\n  * Declared pypi package classifiers.\n  * Added support for CLIF flag processing (not included in python-gflags repo\n    yet).\n- Update to version 3.0.5\n  * Added a warning when FLAGS.SetDefault is used after flags were parsed.\n  * Added new function: MarkFlagsAsRequired.\n- Update to version 3.0.4\n  * One more fix for setup.py - this time about third_party package.\n- Update to version 3.0.3\n  * Fixed setup.py.\n  * --noflag if argument is given is no longer allowed.\n  * Python3 compatibility: removed need for cgi import.\n  * Disallowed unparsed flag usage after FLAGS.Reset()\n- Update to version 3.0.2\n  * Fix MANIFEST.in to include all relevant files.\n- Update to version 3.0.1\n  * Some changes for python3 compatibility.\n  * Automatically generate ordering operations for Flag.\n  * Add optional comma compatibility to whitespace-separated list flags.\n  * A lot of potentially backwards incompatible changes since 2.0.\n  * This version is NOT recommended to use in production. Some of the files and\n    documentation has been lost during export; this will be fixed in next\n    versions.\n- Fix source URL\n- Implement single-spec version\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "HPE-Helion-OpenStack-8-2021-3450,Image SLES12-SP4-SAP-Azure-2021-3450,Image SLES12-SP4-SAP-Azure-BYOS-2021-3450,Image SLES12-SP4-SAP-Azure-LI-BYOS-Production-2021-3450,Image SLES12-SP4-SAP-Azure-VLI-BYOS-Production-2021-3450,Image SLES12-SP4-SAP-EC2-HVM-2021-3450,Image SLES12-SP4-SAP-EC2-HVM-BYOS-2021-3450,Image SLES12-SP4-SAP-GCE-2021-3450,Image SLES12-SP4-SAP-GCE-BYOS-2021-3450,Image SLES12-SP5-Azure-SAP-BYOS-2021-3450,Image SLES12-SP5-Azure-SAP-On-Demand-2021-3450,Image SLES12-SP5-EC2-SAP-BYOS-2021-3450,Image SLES12-SP5-EC2-SAP-On-Demand-2021-3450,Image SLES12-SP5-GCE-SAP-BYOS-2021-3450,Image SLES12-SP5-GCE-SAP-On-Demand-2021-3450,Image SLES12-SP5-OCI-BYOS-SAP-BYOS-2021-3450,Image SLES12-SP5-SAP-Azure-LI-BYOS-Production-2021-3450,Image SLES12-SP5-SAP-Azure-VLI-BYOS-Production-2021-3450,SUSE-2021-3450,SUSE-OpenStack-Cloud-8-2021-3450,SUSE-OpenStack-Cloud-9-2021-3450,SUSE-OpenStack-Cloud-Crowbar-8-2021-3450,SUSE-OpenStack-Cloud-Crowbar-9-2021-3450,SUSE-SLE-SDK-12-SP5-2021-3450",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "HPE Helion OpenStack 8",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mysql-connector-java-8.0.25-5.10.1",
        "RelatesToProductReference": "HPE Helion OpenStack 8",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure-LI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure-LI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure-VLI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-Azure-VLI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-EC2-HVM",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-EC2-HVM",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-EC2-HVM-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-EC2-HVM-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-GCE",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-GCE",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-GCE-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP4-SAP-GCE-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-Azure-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-Azure-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-Azure-SAP-On-Demand",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-Azure-SAP-On-Demand",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-EC2-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-EC2-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-EC2-SAP-On-Demand",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-EC2-SAP-On-Demand",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-GCE-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-GCE-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-GCE-SAP-On-Demand",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-GCE-SAP-On-Demand",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-OCI-BYOS-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-OCI-BYOS-SAP-BYOS",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-SAP-Azure-LI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-SAP-Azure-LI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-SAP-Azure-VLI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-tools-5.3.1-14.3.1",
        "RelatesToProductReference": "Image SLES12-SP5-SAP-Azure-VLI-BYOS-Production",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Software Development Kit 12 SP5",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mysql-connector-java-8.0.25-5.10.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Software Development Kit 12 SP5",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "protobuf-devel-3.17.3-7.6.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Software Development Kit 12 SP5",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud 8",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mysql-connector-java-8.0.25-5.10.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud 8",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud 9",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mysql-connector-java-8.0.25-5.10.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud 9",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud Crowbar 8",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mysql-connector-java-8.0.25-5.10.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud Crowbar 8",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "javapackages-filesystem-5.3.1-14.3.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud Crowbar 9",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mysql-connector-java-8.0.25-5.10.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud Crowbar 9",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2021/suse-su-20213450-1/",
      "Description": "Link for SUSE-SU-2021:3450-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2021-October/009599.html",
      "Description": "E-Mail link for SUSE-SU-2021:3450-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1036025",
      "Description": "SUSE Bug 1036025"
    },
    {
      "URL": "https://bugzilla.suse.com/1133277",
      "Description": "SUSE Bug 1133277"
    },
    {
      "URL": "https://bugzilla.suse.com/1162343",
      "Description": "SUSE Bug 1162343"
    }
  ],
  "Vulnerabilities": null
}