{
  "Title": "Security update for go1.20",
  "Tracking": {
    "ID": "SUSE-SU-2023:2105-2",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2023-05-08T14:30:55Z",
    "CurrentReleaseDate": "2023-05-08T14:30:55Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2023-05-08T14:30:55Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for go1.20",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for go1.20 fixes the following issues:\n\nUpdate to 1.20.4 (bnc#1206346):\n- CVE-2023-24539: Fixed an improper sanitization of CSS values (boo#1211029).\n- CVE-2023-24540: Fixed an improper handling of JavaScript whitespace (boo#1211030).\n- CVE-2023-29400: Fixed an improper handling of empty HTML attributes (boo#1211031).\n- runtime: automatically bump RLIMIT_NOFILE on Unix.\n- crypto/subtle: xor fails when run with race+purego.\n- cmd/compile: encoding/binary.PutUint16 sometimes doesn't write.\n- cmd/compile: internal compiler error: cannot call SetType(go.shape.int) on v (type int).\n- cmd/compile: miscompilation in star-tex.org/x/cmd/star-tex.\n- net/http: FileServer no longer serves content for POST.\n- crypto/tls: TLSv1.3 connection fails with invalid PSK binder.\n- cmd/compile: incorrect inline function variable.\n- cmd/compile: Unified IR exports table is binary unstable in presence of generics.\n- go/internal/gcimporter: lookupGorootExport should use the go command from build.Default.GOROOT.\n\nNon-security fixes:\n\n- Reverted go1.x Suggests go1.x-race (boo#1210963).\n- Re-enabled binary stripping and debuginfo (boo#1210938).\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "Container bci/golang:latest-2023-2105,SUSE-2023-2105,SUSE-SLE-Product-RT-15-SP3-2023-2105",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "go1.20-1.20.4-150000.1.11.1",
        "RelatesToProductReference": "Container bci/golang:latest",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "go1.20-1.20.4-150000.1.11.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Real Time 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "go1.20-doc-1.20.4-150000.1.11.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Real Time 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "go1.20-race-1.20.4-150000.1.11.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Real Time 15 SP3",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2023/suse-su-20232105-2/",
      "Description": "Link for SUSE-SU-2023:2105-2"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2023-May/014784.html",
      "Description": "E-Mail link for SUSE-SU-2023:2105-2"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1206346",
      "Description": "SUSE Bug 1206346"
    },
    {
      "URL": "https://bugzilla.suse.com/1210127",
      "Description": "SUSE Bug 1210127"
    },
    {
      "URL": "https://bugzilla.suse.com/1210128",
      "Description": "SUSE Bug 1210128"
    },
    {
      "URL": "https://bugzilla.suse.com/1210129",
      "Description": "SUSE Bug 1210129"
    },
    {
      "URL": "https://bugzilla.suse.com/1210130",
      "Description": "SUSE Bug 1210130"
    },
    {
      "URL": "https://bugzilla.suse.com/1210938",
      "Description": "SUSE Bug 1210938"
    },
    {
      "URL": "https://bugzilla.suse.com/1210963",
      "Description": "SUSE Bug 1210963"
    },
    {
      "URL": "https://bugzilla.suse.com/1211029",
      "Description": "SUSE Bug 1211029"
    },
    {
      "URL": "https://bugzilla.suse.com/1211030",
      "Description": "SUSE Bug 1211030"
    },
    {
      "URL": "https://bugzilla.suse.com/1211031",
      "Description": "SUSE Bug 1211031"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-24534/",
      "Description": "SUSE CVE CVE-2023-24534 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-24536/",
      "Description": "SUSE CVE CVE-2023-24536 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-24537/",
      "Description": "SUSE CVE CVE-2023-24537 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-24538/",
      "Description": "SUSE CVE CVE-2023-24538 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-24539/",
      "Description": "SUSE CVE CVE-2023-24539 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-24540/",
      "Description": "SUSE CVE CVE-2023-24540 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-29400/",
      "Description": "SUSE CVE CVE-2023-29400 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2023-24534",
      "Description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-24534.html",
          "Description": "CVE-2023-24534"
        },
        {
          "URL": "https://bugzilla.suse.com/1210127",
          "Description": "SUSE Bug 1210127"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-24536",
      "Description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-24536.html",
          "Description": "CVE-2023-24536"
        },
        {
          "URL": "https://bugzilla.suse.com/1210128",
          "Description": "SUSE Bug 1210128"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-24537",
      "Description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-24537.html",
          "Description": "CVE-2023-24537"
        },
        {
          "URL": "https://bugzilla.suse.com/1210129",
          "Description": "SUSE Bug 1210129"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-24538",
      "Description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-24538.html",
          "Description": "CVE-2023-24538"
        },
        {
          "URL": "https://bugzilla.suse.com/1210130",
          "Description": "SUSE Bug 1210130"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-24539",
      "Description": "Angle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-24539.html",
          "Description": "CVE-2023-24539"
        },
        {
          "URL": "https://bugzilla.suse.com/1211029",
          "Description": "SUSE Bug 1211029"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-24540",
      "Description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-24540.html",
          "Description": "CVE-2023-24540"
        },
        {
          "URL": "https://bugzilla.suse.com/1211030",
          "Description": "SUSE Bug 1211030"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-29400",
      "Description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-29400.html",
          "Description": "CVE-2023-29400"
        },
        {
          "URL": "https://bugzilla.suse.com/1211031",
          "Description": "SUSE Bug 1211031"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/golang:latest:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-doc-1.20.4-150000.1.11.1",
            "SUSE Linux Enterprise Real Time 15 SP3:go1.20-race-1.20.4-150000.1.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}