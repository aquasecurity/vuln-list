{
  "Title": "Feature update for haproxy",
  "Tracking": {
    "ID": "SUSE-FU-2023:2117-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2023-05-05T20:27:49Z",
    "CurrentReleaseDate": "2023-05-05T20:27:49Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2023-05-05T20:27:49Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Feature update for haproxy",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for haproxy fixes the following issues:\n\nUpdate to version 2.0.31 (jsc#PED-3821):\n\n* BUG/CRITICAL: http: properly reject empty http header field names\n* CI: github: don't warn on deprecated openssl functions on windows\n* DOC: proxy-protocol: fix wrong byte in provided example\n* DOC: config: 'http-send-name-header' option may be used in default section\n* DOC: config: fix option spop-check proxy compatibility\n* BUG/MEDIUM: cache: use the correct time reference when comparing dates\n* BUG/MEDIUM: stick-table: do not leave entries in end of window during purge\n* BUG/MEDIUM: ssl: wrong eviction from the session cache tree\n* BUG/MINOR: http-ana: make set-status also update txn-\u003estatus\n* BUG/MINOR: http-fetch: Don't block HTTP sample fetch eval in HTTP_MSG_ERROR state\n* BUG/MINOR: promex: Don't forget to consume the request on error\n* BUG/MINOR: resolvers: Wait the resolution execution for a do_resolv action\n* BUG/MAJOR: buf: Fix copy of wrapping output data when a buffer is realigned\n* BUILD: makefile: sort the features list\n* BUILD: makefile: build the features list dynamically\n* BUG/MINOR: pool/stats: Use ullong to report total pool usage in bytes in stats\n* BUG/MEDIUM: mux-h2: Refuse interim responses with end-stream flag set\n* LICENSE: wurfl: clarify the dummy library license.\n* BUG/MEDIUM: resolvers: Use tick_first() to update the resolvers task timeout\n* BUG/MEDIUM: mworker: fix segv in early failure of mworker mode with peers\n* BUG/MINOR: ssl: Fix potential overflow\n* BUG/MEDIUM: ssl: Verify error codes can exceed 63\n* CI: github: change 'ubuntu-latest' to 'ubuntu-20.04'\n* SCRIPTS: announce-release: add a link to the data plane API\n* [RELEASE] Released version 2.0.30\n* Revert 'CI: determine actual LibreSSL version dynamically'\n* DOC: config: clarify the -m dir and -m dom pattern matching methods\n* DOC: config: clarify the fact that 'retries' is not just for connections\n* DOC: config: explain how default matching method for ACL works\n* DOC: config: clarify the fact that SNI should not be used in HTTP scenarios\n* DOC: config: provide some configuration hints for 'http-reuse'\n* BUILD: listener: fix build warning on global_listener_rwlock without threads\n* BUILD: peers: Remove unused variables\n* BUG/MEDIUM: peers: messages about unkown tables not correctly ignored\n* BUG/MINOR: http_ana/txn: don't re-initialize txn and req var lists\n* BUG/MEDIUM: listener: Fix race condition when updating the global mngmt task\n* CI: emit the compiler's version in the build reports\n* CI: add monthly gcc cross compile jobs\n* BUG/MEDIUM: stick-table: fix a race condition when updating the expiration task\n* BUG/MAJOR: stick-table: don't process store-response rules for applets\n* DOC: management: add forgotten 'show startup-logs'\n* CI: Replace the deprecated `::set-output` command by writing to $GITHUB_OUTPUT in workflow definition\n* CI: Replace the deprecated `::set-output` command by writing to $GITHUB_OUTPUT in matrix.py\n* BUG/MAJOR: stick-tables: do not try to index a server name for applets\n* DOC: configuration: missing 'if' in tcp-request content example\n* BUILD: http_fetch: silence an uninitiialized warning with gcc-4/5/6 at -Os\n* BUG/MINOR: http-fetch: Update method after a prefetch in smp_fetch_meth()\n* BUG/MEDIUM: lua: handle stick table implicit arguments right.\n* BUILD: cfgparse: Fix GCC warning about a variable used after realloc\n* BUILD: fix compilation for OpenSSL-3.0.0-alpha17\n* BUG/MINOR: log: improper behavior when escaping log data\n* SCRIPTS: announce-release: update some URLs to https\n* BUG/MEDIUM: captures: free() an error capture out of the proxy lock\n* BUG/MEDIUM: proxy: ensure pause_proxy() and resume_proxy() own PROXY_LOCK\n* BUG/MINOR: signals/poller: ensure wakeup from signals\n* BUG/MINOR: signals/poller: set the poller timeout to 0 when there are signals\n* BUG/MINOR: h1: Support headers case adjustment for TCP proxies\n* REGTESTS: http_request_buffer: Add a barrier to not mix up log messages\n* BUG/MEDIUM: peers: Don't start resync on reload if local peer is not up-to-date\n* BUG/MEDIUM: peers: Don't use resync timer when local resync is in progress\n* BUG/MEDIUM: peers: Add connect and server timeut to peers proxy\n* BUG/MEDIUM: spoe: Properly update streams waiting for a ACK in async mode\n* DOC: configuration: do-resolve doesn't work with a port in the string\n* BUG/MINOR: resolvers: return the correct value in resolvers_finalize_config()\n* BUG/MEDIUM: mux-h2: do not fiddle with -\u003edsi to indicate demux is idle\n* BUILD: http: silence an uninitialized warning affecting gcc-5\n* BUG/MEDIUM: proxy: Perform a custom copy for default server settings\n* REORG: server: Export srv_settings_cpy() function\n* MINOR: server: Constify source server to copy its settings\n* BUG/MINOR: peers: Use right channel flag to consider the peer as connected\n* BUG/MEDIUM: peers: limit reconnect attempts of the old process on reload\n* MINOR: peers: Use a dedicated reconnect timeout when stopping the local peer\n* BUG/MINOR: ssl: free the fields in srv-\u003essl_ctx\n* BUG/MINOR: sockpair: wrong return value for fd_send_uxst()\n* BUG/MINOR: backend: Fallback on RR algo if balance on source is impossible\n* BUG/MINOR: peers: fix possible NULL dereferences at config parsing\n* BUG/MINOR: peers/config: always fill the bind_conf's argument\n* BUG/MINOR: http-fetch: Use integer value when possible in 'method' sample fetch\n* BUG/MINOR: http-ana: Set method to HTTP_METH_OTHER when an HTTP txn is created\n* BUG/MINOR: server: do not enable DNS resolution on disabled proxies\n* BUILD: compiler: implement unreachable for older compilers too\n* REGTESTS: http_request_buffer: Increase client timeout to wait 'slow' clients\n* REGTESTS: abortonclose: Add a barrier to not mix up log messages\n* BUG/MINOR: conn_stream: do not confirm a connection from the frontend path\n* DOC: peers: fix port number and addresses on new peers section format\n* DOC: peers: clarify when entry expiration date is renewed.\n* DOC: peers: indicate that some server settings are not usable\n* SCRIPTS: make publish-release try to launch make-releases-json\n* SCRIPTS: add make-releases-json to recreate a releases.json file in download dirs\n* BUG/MEDIUM: sample: Fix adjusting size in word converter\n* BUG/MEDIUM: peers: prevent unitialized multiple listeners on peers section\n* BUG/MEDIUM: peers: fix segfault using multiple bind on peers sections\n* BUG/MEDIUM: http: Properly reject non-HTTP/1.x protocols\n* BUG/MINOR: peers: fix error reporting of 'bind' lines\n* REGTESTS: abortonclose: Fix some race conditions\n* BUILD: fix build warning on solaris based systems with __maybe_unused.\n* CI: determine actual LibreSSL version dynamically\n* [RELEASE] Released version 2.0.29\n* BUG/MINOR: ssl: fix build on development versions of openssl-1.1.x\n* CLEANUP: mux-h1: Fix comments and error messages for global options\n* BUG/MEDIUM: wdt: don't trigger the watchdog when p is unitialized\n* BUG/MINOR: server: Make SRV_STATE_LINE_MAXLEN value from 512 to 2kB (2000 bytes).\n* DOC: fix typo 'ant' for 'and' in INSTALL\n* BUG/MINOR: map/cli: make sure patterns don't vanish under 'show map''s init\n* BUG/MINOR: map/cli: protect the backref list during 'show map' errors\n* BUG/MEDIUM: cli: make 'show cli sockets' really yield\n* BUG/MINOR: mux-h2: mark the stream as open before processing it not after\n* SCRIPTS: announce-release: add URL of dev packages\n* CI: github actions: update LibreSSL to 3.5.2\n* BUILD: sockpair: do not set unused flag\n* BUILD: proto_uxst: do not set unused flag\n* BUG/MINOR: pools: make sure to also destroy shared pools in pool_destroy_all()\n* REGTESTS: fix the race conditions in be2dec.vtc ad field.vtc\n* DOC: remove my name from the config doc\n* BUG/MINOR: cache: Disable cache if applet creation fails\n* SCRIPTS: announce-release: add shortened links to pending issues\n* DOC: lua: update a few doc URLs\n* SCRIPTS: announce-release: update the doc's URL\n* BUG/MEDIUM: compression: Don't forget to update htx_sl and http_msg flags\n* BUG/MEDIUM: mux-h1: Don't request more room on partial trailers\n* BUG/MINOR: mux-h2: use timeout http-request as a fallback for http-keep-alive\n* BUG/MINOR: mux-h2: do not use timeout http-keep-alive on backend side\n* BUG/MINOR: cache: do not display expired entries in 'show cache'\n* BUG/MINOR: mux-h2: do not send GOAWAY if SETTINGS were not sent\n* CI: Update to actions/cache@v3\n* CI: Update to actions/checkout@v3\n* BUG/MEDIUM: http-act: Don't replace URI if path is not found or invalid\n* BUG/MAJOR: mux_pt: always report the connection error to the conn_stream\n* DOC: reflect H2 timeout changes\n* BUG/MEDIUM: mux-h2: make use of http-request and keep-alive timeouts\n* MEDIUM: mux-h2: slightly relax timeout management rules\n* BUG/MEDIUM: stream-int: do not rely on the connection error once established\n* BUG/MINOR: tools: url2sa reads too far when no port nor path\n* BUG/MEDIUM: mux-h1: only turn CO_FL_ERROR to CS_FL_ERROR with empty ibuf\n* CI: github actions: switch to LibreSSL-3.5.1\n* BUILD: dns: fix backport of previous dns fix\n* BUG/MAJOR: dns: multi-thread concurrency issue on UDP socket\n* Revert 'BUG/MAJOR: mux-pt: Always destroy the backend connection on detach'\n* BUG/MINOR: tools: fix url2sa return value with IPv4\n* [RELEASE] Released version 2.0.28\n* DOC: Fix usage/examples of deprecated ACLs\n* BUG/MINOR: stream: make the call_rate only count the no-progress calls\n* DOC: use the req.ssl_sni in examples\n* DOC: ssl: req_ssl_sni needs implicit TLS\n* BUG/MAJOR: mux-pt: Always destroy the backend connection on detach\n* BUG/MEDIUM: mcli: Properly handle errors and timeouts during reponse processing\n* DEBUG: cache: Update underlying buffer when loading HTX message in cache applet\n* BUG/MINOR: promex: Set conn-stream/channel EOI flags at the end of request\n* BUG/MINOR: cache: Set conn-stream/channel EOI flags at the end of request\n* BUG/MINOR: stats: Set conn-stream/channel EOI flags at the end of request\n* BUG/MINOR: hlua: Set conn-stream/channel EOI flags at the end of request\n* BUG/MINOR: cli: shows correct mode in 'show sess'\n* BUG/MAJOR: sched: prevent rare concurrent wakeup of multi-threaded tasks\n* CLEANUP: atomic: add a fetch-and-xxx variant for common operations\n* CI: github actions: use cache for SSL libs\n* CI: github actions: add the output of $CC -dM -E-\n* BUG/MEDIUM: stream: Abort processing if response buffer allocation fails\n* BUG/MAJOR: mux-h2: Be sure to always report HTX parsing error to the app layer\n* BUG/MEDIUM: mux-h1: Don't wake h1s if mux is blocked on lack of output buffer\n* BUG/MINOR: tools: url2sa reads ipv4 too far\n* BUG/MINOR: mailers: negotiate SMTP, not ESMTP\n* CI: ssl: keep the old method for ancient OpenSSL versions\n* CI: ssl: do not needlessly build the OpenSSL docs\n* CI: ssl: enable parallel builds for OpenSSL on Linux\n* BUG/MEDIUM: resolvers: Really ignore trailing dot in domain names\n* BUG/MINOR: mworker: fix a FD leak of a sockpair upon a failed reload\n* BUG/MEDIUM: mworker: close unused transferred FDs on load failure\n* MINOR: sock: move the unused socket cleaning code into its own function\n* BUG/MAJOR: spoe: properly detach all agents when releasing the applet\n* BUG/MAJOR: http/htx: prevent unbounded loop in http_manage_server_side_cookies\n* BUG/MINOR: mworker: does not erase the pidfile upon reload\n* BUG/MEDIUM: mworker: don't lose the stats socket on failed reload\n* BUG/MEDIUM: mcli: always realign wrapping buffers before parsing them\n* BUG/MEDIUM: mcli: do not try to parse empty buffers\n* BUG/MINOR: cli: avoid O(bufsize) parsing cost on pipelined commands\n* MINOR: channel: add new function co_getdelim() to support multiple delimiters\n* MEDIUM: cli: yield between each pipelined command\n* [RELEASE] Released version 2.0.27\n* BUG/MEDIUM: htx: Adjust length to add DATA block in an empty HTX buffer\n* BUG/MEDIUM: cli: Never wait for more data on client shutdown\n* BUILD/MINOR: fix solaris build with clang.\n* BUG/MEDIUM: mworker: don't use _getsocks in wait mode\n* BUG/MEDIUM: http-ana: Preserve response's FLT_END analyser on L7 retry\n* BUG/MINOR: cli: fix _getsocks with musl libc\n* CLEANUP: ssl: make ssl_sock_free_srv_ctx() zero the pointers after free\n* BUILD: makefile: add -Wno-atomic-alignment to work around clang abusive warning\n* DOC: fix misspelled keyword 'resolve_retries' in resolvers\n* BUILD: ssl: unbreak the build with newer libressl\n* BUILD: cli: clear a maybe-unused  warning on some older compilers\n* BUG/MINOR: http: fix recent regression on authorization in legacy mode\n* Revert 'BUG/MEDIUM: resolvers: always check a valid item in query_list'\n* BUG/MINOR: backend: restore the SF_SRV_REUSED flag original purpose\n* BUG/MINOR: backend: do not set sni on connection reuse\n* BUG/MEDIUM: mworker/cli: crash when trying to access an old PID in prompt mode\n* DOC: config: Specify %Ta is only available in HTTP mode\n* DOC: spoe: Clarify use of the event directive in spoe-message section\n* MINOR: ssl: make tlskeys_list_get_next() take a list element\n* CLEANUP: ssl: Remove useless local variable in tlskeys_list_get_next()\n* CLEANUP: ssl: Remove useless loop in tlskeys_list_get_next()\n* BUG/MEDIUM: cli: Properly set stream analyzers to process one command at a time\n* MINOR: cli: 'show version' displays the current process version\n* BUILD: general: always pass unsigned chars to is* functions\n* CLEANUP: peers: Remove unused static function `free_dcache_tx`\n* CLEANUP: peers: Remove unused static function `free_dcache`\n* REGTESTS: mark the abns test as broken again\n* BUILD: scripts/build-ssl.sh: use 'uname' instead of ${TRAVIS_OS_NAME}\n* BUILD: makefile: add entries to build common debugging tools\n* CI: Github Actions: temporarily disable BoringSSL builds\n* CI: Github Actions: switch to LibreSSL-3.3.3\n* CI: github actions: update LibreSSL to 3.2.5\n* Revert 'CI: Pin VTest to a known good commit'\n* CI: github actions: switch to stable LibreSSL release\n* CI: Fix the coverity builds\n* CI: Fix DEBUG_STRICT definition for Coverity\n* CI: Pin VTest to a known good commit\n* CI: github actions: build several popular 'contrib' tools\n* CI: GitHub Actions: enable daily Coverity scan\n* CI: github actions: enable 51degrees feature\n* CI: github actions: update LibreSSL to 3.3.0\n* CI: Clean up Windows CI\n* CI: Pass the github.event_name to matrix.py\n* CI: Github Action: run 'apt-get update' before packages restore\n* CI: Github Actions: enable BoringSSL builds\n* CI: Github Actions: remove LibreSSL-3.0.2 builds\n* CI: Github Actions: enable prometheus exporter\n* CI: Stop hijacking the hosts file\n* CI: Expand use of GitHub Actions for CI\n* [RELEASE] Released version 2.0.26\n* BUG/MEDIUM: ssl: abort with the correct SSL error when SNI not found\n* BUG/MINOR: shctx: do not look for available blocks when the first one is enough\n* BUG/MEDIUM: shctx: leave the block allocator when enough blocks are found\n* BUG/MEDIUM: mux-h2: always process a pending shut read\n* BUG/MEDIUM: ssl: backend TLS resumption with sni and TLSv1.3\n* CLEANUP: ssl: Release cached SSL sessions on deinit\n* MINOR: mux-h2: perform a full cycle shutdown+drain on close\n* MINOR: connection: add a new CO_FL_WANT_DRAIN flag to force drain on close\n* BUG/MINOR: stick-table/cli: Check for invalid ipv6 key\n* BUG/MEDIUM: connection: make cs_shutr/cs_shutw//cs_close() idempotent\n* BUG/MINOR: mux-h2: Fix H2_CF_DEM_SHORT_READ value\n* BUG/MINOR: mworker: doesn't launch the program postparser\n* BUG/MEDIUM: conn-stream: Don't reset CS flags on close\n* BUG/MINOR: http-ana: Apply stop to the current section for http-response rules\n* DOC: config: Fix typo in ssl_fc_unique_id description\n* BUG/MEDIUM: mux-h1: Fix H1C_F_ST_SILENT_SHUT value\n* BUG/MEDIUM: stream-int: Defrag HTX message in si_cs_recv() if necessary\n* MINOR: htx: Add a function to know if the free space wraps\n* MINOR: htx: Add an HTX flag to know when a message is fragmented\n* BUG/MINOR: tcpcheck: Improve LDAP response parsing to fix LDAP check\n* MINOR: stream: Improve dump of bogus streams\n* DOC: config: Fix alphabetical order of fc_* samples\n* BUG/MINOR: http: Authorization value can have multiple spaces after the scheme\n* BUG/MEDIUM: http-ana: Drain request data waiting the tarpit timeout expiration\n* CLEANUP: resolvers: replace all LIST_DELETE with LIST_DEL_INIT\n* CLEANUP: always initialize the answer_list\n* CLEANUP: resolvers: do not export resolv_purge_resolution_answer_records()\n* BUG/MEDIUM: mux-h1: Perform a connection shutdown when the h1c is released\n* BUG/MINOR: mux-h1: Save shutdown mode if the shutdown is delayed\n* BUG/MINOR: mux-h2: do not prevent from sending a final GOAWAY frame\n* BUG/MEDIUM: resolvers: always check a valid item in query_list\n* BUILD: resolvers: avoid a possible warning on null-deref\n* MINOR: resolvers: merge address and target into a union 'data'\n* BUG/MEDIUM: resolvers: use correct storage for the target address\n* BUG/MEDIUM: resolvers: fix truncated TLD consecutive to the API fix\n* MINOR: resolvers: fix the resolv_dn_label_to_str() API about trailing zero\n* BUG/MINOR: resolvers: do not reject host names of length 255 in SRV records\n* BUG/MEDIUM: resolver: make sure to always use the correct hostname length\n* MINOR: resolvers: fix the resolv_str_to_dn_label() API about trailing zero\n* BUG/MEDIUM: sample: properly verify that variables cast to sample\n* MINOR: sample: provide a generic var-to-sample conversion function\n* CLEANUP: sample: uninline sample_conv_var2smp_str()\n* CLEANUP: sample: rename sample_conv_var2smp() to *_sint\n* BUG/MEDIUM: stream: Keep FLT_END analyzers if a stream detects a channel error\n* BUG/MEDIUM: mux_h2: Handle others remaining read0 cases on partial frames\n* BUG/MEDIUM: http-ana: Clear request analyzers when applying redirect rule\n* BUG/MEDIUM: filters: Fix a typo when a filter is attached blocking the release\n* BUG/MINOR: filters: Set right FLT_END analyser depending on channel\n* BUG/MINOR: filters: Always set FLT_END analyser when CF_FLT_ANALYZE flag is set\n* BUG/MEDIUM: http-ana: Reset channels analysers when returning an error\n* BUG/MINOR: stream: Don't release a stream if FLT_END is still registered\n* BUG/MINOR: tcp-rules: Stop content rules eval on read error and end-of-input\n* BUG/MAJOR: lua: use task_wakeup() to properly run a task once\n* BUG/MEDIUM: lua: fix wakeup condition from sleep()\n* DOC: peers: fix doc 'enable' statement on 'peers' sections\n* BUG/MINOR: mux-h1/mux-fcgi: Sanitize TE header to only send 'trailers'\n* BUG/MEDIUM: stream: Stop waiting for more data if SI is blocked on RXBLK_ROOM\n* BUG/MEDIUM: stream-int: Notify stream that the mux wants more room to xfer data\n* BUG/MEDIUM: mux-h1: Adjust conditions to ask more space in the channel buffer\n* BUG/MINOR: server: allow 'enable health' only if check configured\n* Revert 'REGTESTS: mark http_abortonclose as broken'\n* BUG/MEDIUM: stream-int: Don't block SI on a channel policy if EOI is reached\n* MEDIUM: actions: Fix block ACL.\n* BUG/MINOR: stats: fix the POST requests processing in legacy mode\n* BUG/MEDIUM: http: check for a channel pending data before waiting\n* BUG/MINOR: cli/payload: do not search for args inside payload\n* BUG/MINOR: compat: make sure __WORDSIZE is always defined\n* BUG/MINOR: systemd: ExecStartPre must use -Ws\n* [RELEASE] Released version 2.0.25\n* REGTESTS: mark http_abortonclose as broken\n* MINOR: action: Use a generic function to check validity of an action rule list\n* Revert 'BUG/MINOR: stream-int: Don't block reads in si_update_rx() if chn may receive'\n* BUG/MAJOR: htx: fix missing header name length check in htx_add_header/trailer\n* CLEANUP: htx: remove comments about 'must be \u003c 256 MB'\n* BUG/MINOR: config: reject configs using HTTP with bufsize \u003e= 256 MB\n* DOC: configuration: remove wrong tcp-request examples in tcp-response\n* CLEANUP: Add missing include guard to signal.h\n* BUG/MINOR: tools: Fix loop condition in dump_text()\n* BUG/MINOR threads: Use get_(local|gm)time instead of (local|gm)time\n* BUG/MINOR: ebtree: remove dependency on incorrect macro for bits per long\n* BUG/MINOR: lua: use strlcpy2() not strncpy() to copy sample keywords\n* MINOR: compiler: implement an ONLY_ONCE() macro\n* BUG/MEDIUM: base64: check output boundaries within base64{dec,urldec}\n* REGTESTS: abortonclose: after retries, 503 is expected, not close\n* BUG/MEDIUM: sock: really fix detection of early connection failures in for 2.3-\n* [RELEASE] Released version 2.0.24\n* REGTESTS: add a test to prevent h2 desync attacks\n* BUG/MAJOR: h2: enforce stricter syntax checks on the :method pseudo-header\n* DOC/MINOR: fix typo in management document\n* MINOR: mux-h1/proxy: Add a proxy option to disable clear h2 upgrade\n* DOC: config: Fix 'http-response send-spoe-group' documentation\n* DOC: Improve the lua documentation\n* BUG/MEDIUM: spoe: Fix policy to close applets when SPOE connections are queued\n* BUG/MEDIUM: spoe: Create a SPOE applet if necessary when the last one is released\n* MINOR: spoe: Add a pointer on the filter config in the spoe_agent structure\n* BUG/MINOR: server: update last_change on maint-\u003eready transitions too\n* BUG/MINOR: connection: Add missing error labels to conn_err_code_str\n* BUG/MEDIUM: mux-h2: Handle remaining read0 cases on partial frames\n* BUG/MINOR: mux-h2: Obey dontlognull option during the preface\n* BUG/MINOR: systemd: must check the configuration using -Ws\n* BUG/MINOR: mworker: do not export HAPROXY_MWORKER_REEXEC across programs\n* BUG/MEDIUM: mworker: do not register an exit handler if exit is expected\n* BUILD: add detection of missing important CFLAGS\n* BUG/MEDIUM: tcp-check: Do not dereference inexisting connection\n* [RELEASE] Released version 2.0.23\n* BUG/MINOR: server: Forbid to set fqdn on the CLI if SRV resolution is enabled\n* BUG/MINOR: server-state: load SRV resolution only if params match the config\n* CLEANUP: pools: remove now unused seq and pool_free_list\n* BUG/MAJOR: pools: fix possible race with free() in the lockless variant\n* MEDIUM: pools: use a single pool_gc() function for locked and lockless\n* MEDIUM: memory: make pool_gc() run under thread isolation\n* BUG/MEDIUM: pools: Always update free_list in pool_gc().\n* MINOR: pools: do not maintain the lock during pool_flush()\n* BUG/MINOR: pools: fix a possible memory leak in the lockless pool_flush()\n* MINOR: pools/debug: slightly relax DEBUG_DONT_SHARE_POOLS\n* Revert 'MINOR: tcp-act: Add set-src/set-src-port for 'tcp-request content' rules'\n* BUG/MINOR: peers: fix data_type bit computation more than 32 data_types\n* MINOR: resolvers: Reset server IP on error in resolv_get_ip_from_response()\n* BUG/MINOR: resolvers: Reset server IP when no ip is found in the response\n* DOC: config: use CREATE USER for mysql-check\n* DOC: peers: fix the protocol tag name in the doc\n* DOC: stick-table: add missing documentation about gpt0 stored type\n* BUG/MINOR: stick-table: fix several printf sign errors dumping tables\n* BUG/MINOR: cli: fix server name output in 'show fd'\n* BUG/MEDIUM: sock: make sure to never miss early connection failures\n* BUG/MINOR: server/cli: Fix locking in function processing 'set server' command\n* BUG/MEDIUM: server/cli: Fix ABBA deadlock when fqdn is set from the CLI\n* BUG/MINOR: resolvers: answser item list was randomly purged or errors\n* DOC: config: Add missing actions in 'tcp-request session' documentation\n* MINOR: tcp-act: Add set-src/set-src-port for 'tcp-request content' rules\n* BUG/MAJOR: server: fix deadlock when changing maxconn via agent-check\n* BUG/MEDIUM: spoe: Register pre/post analyzers in start_analyze callback function\n* BUG/MEDIUM: dns: send messages on closed/reused fd if fd was detected broken\n* MINOR: mux-h2: obey http-ignore-probes during the preface\n* BUG/MAJOR: queue: set SF_ASSIGNED when setting strm-\u003etarget on dequeue\n* BUG/MINOR: mworker: fix typo in chroot error message\n* BUG/MINOR: ssl: use atomic ops to update global shctx stats\n* BUG/MEDIUM: shctx: use at least thread-based locking on USE_PRIVATE_CACHE\n* BUG/MINOR: stick-table: insert srv in used_name tree even with fixed id\n* DOC: lua: Add a warning about buffers modification in HTTP\n* BUG/MAJOR: htx: Fix htx_defrag() when an HTX block is expanded\n* BUG/MEDIUM: dns: reset file descriptor if send returns an error\n* BUG/MEDIUM: compression: Add a flag to know the filter is still processing data\n* BUG/MINOR: ssl: OCSP stapling does not work if expire too far in the future\n* BUG/MINOR: proxy: Missing calloc return value check in chash_init_server_tree\n* BUG/MINOR: http: Missing calloc return value check in make_arg_list\n* BUG/MINOR: http: Missing calloc return value check while parsing redirect rule\n* BUG/MINOR: worker: Missing calloc return value check in mworker_env_to_proc_list\n* BUG/MINOR: compression: Missing calloc return value check in comp_append_type/algo\n* BUG/MINOR: http: Missing calloc return value check while parsing tcp-request rule\n* BUG/MINOR: http: Missing calloc return value check while parsing tcp-request/tcp-response\n* BUG/MINOR: proxy: Missing calloc return value check in proxy_defproxy_cpy\n* BUG/MINOR: proxy: Missing calloc return value check in proxy_parse_declare\n* BUG/MINOR: http: Missing calloc return value check in parse_http_req_capture\n* BUG/MINOR: ssl: Missing calloc return value check in ssl_init_single_engine\n* BUG/MINOR: peers: Missing calloc return value check in peers_register_table\n* BUG/MINOR: server: Missing calloc return value check in srv_parse_source\n* BUG/MINOR: http-ana: Handle L7 retries on refused early data before K/A aborts\n* BUG/MINOR: http-comp: Preserve HTTP_MSGF_COMPRESSIONG flag on the response\n* BUG/MEDIUM: filters: Exec pre/post analysers only one time per filter\n* BUG/MAJOR: server: prevent deadlock when using 'set maxconn server'\n* BUG/MEDIUM: ebtree: Invalid read when looking for dup entry\n* REGTESTS: Add script to test abortonclose option\n* MEDIUM: mux-h1: Don't block reads when waiting for the other side\n* BUG/MINOR: stream-int: Don't block reads in si_update_rx() if chn may receive\n* MINOR: channel: Rely on HTX version if appropriate in channel_may_recv()\n* BUG/MINOR: http_fetch: fix possible uninit sockaddr in fetch_url_ip/port\n* BUG/MINOR: stream: Reset stream final state and si error type on L7 retry\n* BUG/MINOR: stream: properly clear the previous error mask on L7 retries\n* BUG/MINOR: stream: Decrement server current session counter on L7 retry\n* BUG/MEDIUM: cli: prevent memory leak on write errors\n* BUG/MINOR: hlua: Don't rely on top of the stack when using Lua buffers\n* MINOR: hlua: Add error message relative to the Channel manipulation and HTTP mode\n* MINOR: peers: add informative flags about resync process for debugging\n* BUG/MEDIUM: peers: reset tables stage flags stages on new conns\n* BUG/MEDIUM: peers: re-work updates lookup during the sync on the fly\n* BUG/MEDIUM: peers: reset commitupdate value in new conns\n* BUG/MEDIUM: peers: reset starting point if peers appears longly disconnected\n* BUG/MEDIUM: peers: stop considering ack messages teaching a full resync\n* BUG/MEDIUM: peers: register last acked value as origin receiving a resync req\n* BUG/MEDIUM: peers: initialize resync timer to get an initial full resync\n* BUG/MINOR: applet: Notify the other side if data were consumed by an applet\n* BUG/MINOR: htx: Preserve HTX flags when draining data from an HTX message\n* BUG/MEDIUM: peers: re-work refcnt on table to protect against flush\n* BUG/MEDIUM: peers: re-work connection to new process during reload.\n* BUG/MINOR: peers: remove useless table check if initial resync is finished\n* BUG/MEDIUM: mux-h2: Properly handle shutdowns when received with data\n* BUG/MINOR: mworker: don't use oldpids[] anymore for reload\n* BUG/MINOR: mworker/init: don't reset nb_oldpids in non-mworker cases\n* BUG/MEDIUM: config: fix cpu-map notation with both process and threads\n* BUG/MEDIUM: mux-h2: Fix dfl calculation when merging CONTINUATION frames\n* BUG/MAJOR: mux-h2: Properly detect too large frames when decoding headers\n* BUG/MINOR: server: free srv.lb_nodes in free_server\n* BUG/MINOR: mux-h1: Release idle server H1 connection if data are received\n* BUG/MINOR: logs: Report the true number of retries if there was no connection\n* BUG/MINOR: http_htx: Remove BUG_ON() from http_get_stline() function\n* BUG/MINOR: http-fetch: Make method smp safe if headers were already forwarded\n* BUG/MEDIUM: threads: Ignore current thread to end its harmless period\n* BUG/MEDIUM: sample: Fix adjusting size in field converter\n* DOC: clarify that compression works for HTTP/2\n* BUG/MINOR: tools: fix parsing 'us' unit for timers\n* DOC: Explicitly state only IPv4 are supported by forwardfor/originalto options\n* [RELEASE] Released version 2.0.22\n* BUG/MEDIUM: resolvers: Don't release resolution from a requester callbacks\n* MINOR: resolvers: Directly call srvrq_update_srv_state() when possible\n* MINOR: resolvers: Add function to change the srv status based on SRV resolution\n* MINOR: resolvers: Purge answer items when a SRV resolution triggers an error\n* MINOR: resolvers: Use a function to remove answers attached to a resolution\n* BUG/MINOR: resolvers: Unlink DNS resolution to set RMAINT on SRV resolution\n* BUG/MAJOR: dns: disabled servers through SRV records never recover\n* BUG/MAJOR: dns: fix null pointer dereference in snr_update_srv_status\n* BUG/MINOR: http_fetch: make hdr_ip() resistant to empty fields\n* BUILD: tcp: use IPPROTO_IPV6 instead of SOL_IPV6 on FreeBSD/MacOS\n* BUG/MINOR: tcp: fix silent-drop workaround for IPv6\n* BUG/MINOR: stats: Apply proper styles in HTML status page.\n* BUG/MEDIUM: mux-h1: make h1_shutw_conn() idempotent\n* BUG/MINOR: http_fetch: make hdr_ip() reject trailing characters\n* MINOR: tools: make url2ipv4 return the exact number of bytes parsed\n* BUG/MEDIUM: thread: Fix a deadlock if an isolated thread is marked as harmless\n* BUG/MEDIUM: time: make sure to always initialize the global tick\n* BUG/MEDIUM: lua: Always init the lua stack before referencing the context\n* BUG/MEDIUM: debug/lua: Use internal hlua function to dump the lua traceback\n* MINOR: lua: Slightly improve function dumping the lua traceback\n* MINOR/BUG: mworker/cli: do not use the unix_bind prefix for the master CLI socket\n* BUG/MEDIUM: freq_ctr/threads: use the global_now_ms variable\n* MINOR: time: also provide a global, monotonic global_now_ms timer\n* [RELEASE] Released version 2.0.21\n* BUG/MINOR: freq_ctr/threads: make use of the last updated global time\n* MINOR: time: export the global_now variable\n* BUG/MINOR: resolvers: Add missing case-insensitive comparisons of DNS hostnames\n* BUG/MINOR: resolvers: Reset server address on DNS error only on status change\n* BUG/MINOR: resolvers: Consider server to have no IP on DNS resolution error\n* CLEANUP: tcp-rules: add missing actions in the tcp-request error message\n* BUG/MINOR: session: Add some forgotten tests on session's listener\n* BUG/MINOR: proxy/session: Be sure to have a listener to increment its counters\n* BUG/MEDIUM: filters: Set CF_FL_ANALYZE on channels when filters are attached\n* BUG/MEDIUM: session: NULL dereference possible when accessing the listener\n* BUG/MINOR: ssl: don't truncate the file descriptor to 16 bits in debug mode\n* BUG/MINOR: hlua: Don't strip last non-LWS char in hlua_pushstrippedstring()\n* BUG/MEDIUM: dns: Consider the fact that dns answers are case-insensitive\n* BUG/MINOR: http-ana: Don't increment HTTP error counter on read error/timeout\n* DOC: spoe: Add a note about fragmentation support in HAProxy\n* BUG/MEDIUM: spoe: Kill applets if there are pending connections and nbthread \u003e 1\n* BUG/MINOR: connection: Use the client's dst family for adressless servers\n* BUG/MINOR: tcp-act: Don't forget to set the original port for IPv4 set-dst rule\n* BUG/MINOR: http-ana: Only consider dst address to process originalto option\n* BUG/MINOR: mux-h1: Immediately report H1C errors from h1_snd_buf()\n* BUG/MEDIUM: resolvers: Reset address for unresolved servers\n* BUG/MEDIUM: resolvers: Reset server address and port for obselete SRV records\n* BUG/MINOR: resolvers: new callback to properly handle SRV record errors\n* BUG/MINOR: proxy: wake up all threads when sending the hard-stop signal\n* BUG/MEDIUM: cli/shutdown sessions: make it thread-safe\n* BUG/MEDIUM: proxy: use thread-safe stream killing on hard-stop\n* BUG/MEDIUM: vars: make functions vars_get_by_{name,desc} thread-safe\n* BUG/MINOR: sample: secure convs that accept base64 string and var name as args\n* BUG/MEDIUM: mux-h1: Fix handling of responses to CONNECT other than 200-ok\n* BUG/MINOR: server: Be sure to cut the last parsed field of a server-state line\n* BUG/MINOR: server: Init params before parsing a new server-state line\n* BUG/MINOR: sample: Always consider zero size string samples as unsafe\n* BUG/MINOR: checks: properly handle wrapping time in __health_adjust()\n* BUG/MINOR: session: atomically increment the tracked sessions counter\n* BUG/MINOR: server: Remove RMAINT from admin state when loading server state\n* CLEANUP: channel: fix comment in ci_putblk.\n* BUG/MINOR: server: Don't call fopen() with server-state filepath set to NULL\n* BUG/MINOR: cfgparse: do not mention 'addr:port' as supported on proxy lines\n* BUG/MEDIUM: config: don't pick unset values from last defaults section\n* CLEANUP: deinit: release global and per-proxy server-state variables on deinit\n* BUG/MINOR: server: Fix server-state-file-name directive\n* BUG/MINOR: backend: hold correctly lock when killing idle conn\n* BUG/MINOR: tools: Fix a memory leak on error path in parse_dotted_uints()\n* BUG/MINOR: server: re-align state file fields number\n* BUG/MEDIUM: mux-h1: Always set CS_FL_EOI for response in MSG_DONE state\n* BUG/MEDIUM: mux-h2: Be sure to enter in demux loop even if dbuf is empty\n* BUG/MEDIUM: mux-h2: do not quit the demux loop before setting END_REACHED\n* BUG/MEDIUM: mux-h2: handle remaining read0 cases\n* BUILD: Makefile: move REGTESTST_TYPE default setting\n* BUG/MINOR: xxhash: make sure armv6 uses memcpy()\n* BUG/MEDIUM: ssl: check a connection's status before computing a handshake\n* BUG/MINOR: stick-table: Always call smp_fetch_src() with a valid arg list\n* DOC: management: fix 'show resolvers' alphabetical ordering\n* BUG/MINOR: config: fix leak on proxy.conn_src.bind_hdr_name\n* BUG/MEDIUM: filters/htx: Fix data forwarding when payload length is unknown\n* BUG/MEDIUM: stats: add missing INF_BUILD_INFO definition\n* BUILD/MINOR: lua: define _GNU_SOURCE for LLONG_MAX\n* BUG/MEDIUM: mux-h2: fix read0 handling on partial frames\n* BUG/MINOR: mworker: define _GNU_SOURCE for strsignal()\n* BUG/MINOR: peers: Wrong 'new_conn' value for 'show peers' CLI command.\n* BUG/MINOR: init: Use a dynamic buffer to set HAPROXY_CFGFILES env variable\n* BUG/MINOR: sample: Memory leak of sample_expr structure in case of error\n* BUG/MINOR: sample: check alloc_trash_chunk return value in concat()\n* [RELEASE] Released version 2.0.20\n* BUG/MINOR: sample: fix concat() converter's corruption with non-string variables\n* DOC: Add maintainers for the Prometheus exporter\n* SCRIPTS: announce-release: fix typo in help message\n* DOC: fix some spelling issues over multiple files\n* MINOR: contrib/prometheus-exporter: export build_info\n* BUILD: Makefile: exclude broken tests by default\n* BUG/MINOR: srv: do not init address if backend is disabled\n* SCRIPTS: make announce release support preparing announces before tag exists\n* SCRIPTS: improve announce-release to support different tag and versions\n* BUG/MINOR: cfgparse: Fail if the strdup() for `rule-\u003ebe.name` for `use_backend` fails\n* MINOR: atomic: don't use ; to separate instruction on aarch64.\n* BUILD: hpack: hpack-tbl-t.h uses VAR_ARRAY but does not include compiler.h\n* BUILD: plock: remove dead code that causes a warning in gcc 11\n* CONTRIB: halog: fix signed/unsigned build warnings on counts and timestamps\n* CONTRIB: halog: mark the has_zero* functions unused\n* CONTRIB: halog: fix build issue caused by %L printf format\n* BUG/MEDIUM: http-ana: Never for sending data in TUNNEL mode\n* BUG/MINOR: mux-h1: Don't set CS_FL_EOI too early for protocol upgrade requests\n* BUILD: Makefile: have 'make clean' destroy .o/.a/.s in contrib subdirs as well\n* REGTESTS: make use of HAPROXY_ARGS and pass -dM by default\n* CLEANUP: contrib/prometheus-exporter: typo fixes for ssl reuse metric\n* CLEANUP: lua: Remove declaration of an inexistant function\n* BUG/MEDIUM: lb-leastconn: Reposition a server using the right eweight\n* BUG/MINOR: tools: Reject size format not starting by a digit\n* BUG/MINOR: tools: make parse_time_err() more strict on the timer validity\n* DOC: email change of the DeviceAtlas maintainer\n* BUG/MEDIUM: spoa/python: Fixing references to None\n* BUG/MEDIUM: spoa/python: Fixing PyObject_Call positional arguments\n* BUG/MINOR: spoa/python: Cleanup ipaddress objects if initialization fails\n* BUG/MINOR: spoa/python: Cleanup references for failed Module Addobject operations\n* DOC: spoa/python: Fixing typos in comments\n* DOC: spoa/python: Rephrasing memory related error messages\n* DOC: spoa/python: Fixing typo in IP related error messages\n* BUG/MAJOR: spoa/python: Fixing return None\n* DOC/MINOR: Fix formatting in Management Guide\n* BUG/MINOR: lua: warn when registering action, conv, sf, cli or applet multiple times\n* MINOR: cli: add a function to look up a CLI service description\n* MINOR: actions: add a function returning a service pointer from its name\n* MINOR: actions: Export actions lookup functions\n* BUG/MINOR: lua: Some lua init operation are processed unsafe\n* BUG/MINOR: lua: Post init register function are not executed beyond the first one\n* BUG/MINOR: lua: lua-load doesn't check its parameters\n* MINOR: plock: use an ARMv8 instruction barrier for the pause instruction\n* DOC: config: Move req.hdrs and req.hdrs_bin in L7 samples fetches section\n* BUG/MAJOR: peers: fix partial message decoding\n* BUG/MAJOR: filters: Always keep all offsets up to date during data filtering\n* BUG/MINOR: http-ana: Don't wait for the body of CONNECT requests\n* BUG/MEDIUM: filters: Forward all filtered data at the end of http filtering\n* BUILD: http-htx: fix build warning regarding long type in printf\n* MINOR: cfgparse: tighten the scope of newnameserver variable, free it on error.\n* MINOR: spoe: Don't close connection in sync mode on processing timeout\n* BUG/MAJOR: spoe: Be sure to remove all references on a released spoe applet\n* BUG/MINOR: http-fetch: Fix calls w/o parentheses of the cookie sample fetches\n* BUG/MINOR: http-fetch: Extract cookie value even when no cookie name\n* BUG/MEDIUM: peers: fix decoding of multi-byte length in stick-table messages\n* BUG/MINOR: peers: Missing TX cache entries reset.\n* BUG/MINOR: peers: Do not ignore a protocol error for dictionary entries.\n* BUG/MINOR: lua: set buffer size during map lookups\n* BUG/MINOR: pattern: a sample marked as const could be written\n* [RELEASE] Released version 2.0.19\n* BUG/MINOR: http-htx: Just warn if payload of an errorfile doesn't match the C-L\n* MINOR: http-htx: Add understandable errors for the errorfiles parsing\n* BUG/MEDIUM: stick-table: limit the time spent purging old entries\n* BUG/MINOR: filters: Skip disabled proxies during startup only\n* BUG/MEDIUM: mux-pt: Release the tasklet during an HTTP upgrade\n* MINOR: server: Copy configuration file and line for server templates\n* BUG/MINOR: server: Set server without addr but with dns in RMAINT on startup\n* BUG/MEDIUM: filters: Don't try to init filters for disabled proxies\n* BUG/MINOR: cache: Inverted variables in http_calc_maxage function\n* BUG/MINOR: lua: initialize sample before using it\n* BUG/MINOR: server: fix down_time report for stats\n* BUG/MINOR: server: fix srv downtime calcul on starting\n* BUG/MINOR: log: fix memory leak on logsrv parse error\n* BUG/MINOR: extcheck: add missing checks on extchk_setenv()\n* BUG/MAJOR: mux-h2: Don't try to send data if we know it is no longer possible\n* BUG/MINOR: http-ana: Don't send payload for internal responses to HEAD requests\n* BUG/MEDIUM: server: support changing the slowstart value from state-file\n* BUG/MINOR: queue: properly report redistributed connections\n* BUG/MINOR: peers: Possible unexpected peer seesion reset after collisions.\n* BUG/MEDIUM: lb: Always lock the server when calling server_{take,drop}_conn\n* BUG/MEDIUM: mux-h1: Get the session from the H1S when capturing bad messages\n* BUG/MEDIUM: spoe: Unset variable instead of set it if no data provided\n* BUG/MEDIUM: task: bound the number of tasks picked from the wait queue at once\n* MINOR: fd: report an error message when failing initial allocations\n* BUG/MINOR: mux-h2: do not stop outgoing connections on stopping\n* BUG/MINOR: init: only keep rlim_fd_cur if max is unlimited\n* BUG/MEDIUM: h1: Always try to receive more in h1_rcv_buf().\n* BUG/MINOR: http-htx: Expect no body for 204/304 internal HTTP responses\n* BUG/MEDIUM: mux-h2: Don't handle pending read0 too early on streams\n* BUG/MINOR: mux-h1: Always set the session on frontend h1 stream\n* BUG/MINOR: peers: Inconsistency when dumping peer status codes.\n* MINOR: hlua: Display debug messages on stderr only in debug mode\n* BUG/MINOR: stats: fix validity of the json schema\n* MINOR: counters: fix a typo in comment\n* BUG/MEDIUM: queue: make pendconn_cond_unlink() really thread-safe\n* BUG/MINOR: Fix several leaks of 'log_tag' in init().\n* BUILD: makefile: Fix building with closefrom() support enabled\n* DOC: ssl: crt-list negative filters are only a hint\n* [RELEASE] Released version 2.0.18\n* REGTEST: make map_regm_with_backref require 1.7\n* REGTEST: make abns_socket.vtc require 1.8\n* REGTEST: fix host part in balance-uri-path-only.vtc\n* REGTESTS: add a few load balancing tests\n* DOC: agent-check: fix typo in 'fail' word expected reply\n* DOC: spoa-server: fix false friends `actually`\n* BUG/MEDIUM: listeners: do not pause foreign listeners\n* BUG/MINOR: config: Fix memory leak on config parse listen\n* BUG/MINOR: Fix memory leaks cfg_parse_peers\n* BUG/MEDIUM: h2: report frame bits only for handled types\n* BUG/MINOR: http-fetch: Don't set the sample type during the htx prefetch\n* BUG/MINOR: server: report correct error message for invalid port on 'socks4'\n* BUG/MINOR: ssl: verifyhost is case sensitive\n* BUG/MEDIUM: ssl: does not look for all SNIs before chosing a certificate\n* BUG/MEDIUM: http-ana: Don't wait to send 1xx responses received from servers\n* BUG/MEDIUM: pattern: Renew the pattern expression revision when it is pruned\n* BUILD: threads: better workaround for late loading of libgcc_s\n* BUG/MEDIUM: mux-h1: always apply the timeout on half-closed connections\n* BUG/MINOR: auth: report valid crypto(3) support depending on build options\n* CLEANUP: Update .gitignore\n* MINOR: Commit .gitattributes\n* BUILD: thread: limit the libgcc_s workaround to glibc only\n* BUG/MINOR: threads: work around a libgcc_s issue with chrooting\n* BUG/MEDIUM: ssl: check OCSP calloc in ssl_sock_load_ocsp()\n* BUG/MEDIUM: doc: Fix replace-path action description\n* BUG/MINOR: startup: haproxy -s cause 100% cpu\n* BUG/MEDIUM: contrib/spoa-server: Fix ipv4_address used instead of ipv6_address\n* BUG/MINOR: contrib/spoa-server: Updating references to free in case of failure\n* BUG/MINOR: contrib/spoa-server: Do not free reference to NULL\n* BUG/MINOR: contrib/spoa-server: Ensure ip address references are freed\n* BUG/MAJOR: contrib/spoa-server: Fix unhandled python call leading to memory leak\n* DOC: cache: Use '\u003cname\u003e' instead of '\u003cid\u003e' in error message\n* BUG/MINOR: reload: do not fail when no socket is sent\n* BUG/MEDIUM: htx: smp_prefetch_htx() must always validate the direction\n* BUG/MINOR: stats: use strncmp() instead of memcmp() on health states\n* BUG/MINOR: snapshots: leak of snapshots on deinit()\n* BUG/MINOR: lua: Check argument type to convert it to IP mask in arg validation\n* BUG/MINOR: lua: Check argument type to convert it to IPv4/IPv6 arg validation\n* BUG/MEDIUM: map/lua: Return an error if a map is loaded during runtime\n* BUG/MEDIUM: mux-h1: Refresh H1 connection timeout after a synchronous send\n* BUG/MEDIUM: mux-h2: Don't fail if nothing is parsed for a legacy chunk response\n* SCRIPTS: git-show-backports: emit the shell command to backport a commit\n* SCRIPTS: git-show-backports: make -m most only show the left branch\n* [RELEASE] Released version 2.0.17\n* SCRIPTS: announce-release: add the link to the wiki in the announce messages\n* MINOR: stream-int: Be sure to have a mux to do sends and receives\n* MINOR: connection: Preinstall the mux for non-ssl connect\n* BUG/MINOR: tcp-rules: Set the inspect-delay when a tcp-response action yields\n* BUG/MEDIUM: dns: Don't yield in do-resolve action on a final evaluation\n* MEDIUM: lua: Add support for the Lua 5.4\n* BUG/MINOR: debug: Don't dump the lua stack if it is not initialized\n* BUG/MEDIUM: mux-h1: Disable the splicing when nothing is received\n* BUG/MEDIUM: mux-h1: Wakeup the H1C in h1_rcv_buf() if more data are expected\n* BUG/MEDIUM: dns: Release answer items when a DNS resolution is freed\n* BUG/MAJOR: dns: Make the do-resolve action thread-safe\n* BUG/MEDIUM: mux-h2: Emit an error if the response chunk formatting is incomplete\n* BUG/MEDIUM: resolve: fix init resolving for ring and peers section.\n* BUG/MINOR: cfgparse: don't increment linenum on incomplete lines\n* BUILD: thread: add parenthesis around values of locking macros\n* MINOR: pools: increase MAX_BASE_POOLS to 64\n* BUG/MINOR: threads: Don't forget to init each thread toremove_lock.\n* REGEST: Add reg tests about error files\n* BUILD: ebtree: fix build on libmusl after recent introduction of eb_memcmp()\n* [RELEASE] Released version 2.0.16\n* BUG/MEDIUM: channel: Be aware of SHUTW_NOW flag when output data are peeked\n* BUG/MEDIUM: log: issue mixing sampled to not sampled log servers.\n* BUG/MEDIUM: mux-h1: Continue to process request when switching in tunnel mode\n* CONTRIB: da: fix memory leak in dummy function da_atlas_open()\n* BUG/MINOR: sample: Free str.area in smp_check_const_meth\n* BUG/MINOR: sample: Free str.area in smp_check_const_bool\n* DOC: configuration: remove obsolete mentions of H2 being converted to HTTP/1.x\n* BUG/MEDIUM: stream-int: Disable connection retries on plain HTTP proxy mode\n* BUG/MAJOR: stream: Mark the server address as unset on new outgoing connection\n* MINOR: http: Add support for http 413 status\n* BUG/MINOR: backend: Remove CO_FL_SESS_IDLE if a client remains on the last server\n* BUG/MEDIUM: connection: Continue to recv data to a pipe when the FD is not ready\n* MINOR: connection: move the CO_FL_WAIT_ROOM cleanup to the reader only\n* BUG/MEDIUM: mux-h1: Subscribe rather than waking up in h1_rcv_buf()\n* BUG/MEDIUM: mux-h1: Disable splicing for the conn-stream if read0 is received\n* BUG/MINOR: mux-h1: Disable splicing only if input data was processed\n* BUG/MINOR: mux-h1: Don't read data from a pipe if the mux is unable to receive\n* BUG/MINOR: mux-h1: Fix the splicing in TUNNEL mode\n* BUG/MINOR: http_act: don't check capture id in backend (2)\n* DOC: configuration: fix alphabetical ordering for tune.pool-{high,low}-fd-ratio\n* DOC: configuration: add missing index entries for tune.pool-{low,high}-fd-ratio\n* BUG/MINOR: proxy: always initialize the trash in show servers state\n* BUG/MINOR: proxy: fix dump_server_state()'s misuse of the trash\n* BUG/MEDIUM: pattern: Add a trailing \\0 to match strings only if possible\n* DOC: ssl: add 'allow-0rtt' and 'ciphersuites' in crt-list\n* MINOR: cli: make 'show sess' stop at the last known session\n* BUG/MEDIUM: fetch: Fix hdr_ip misparsing IPv4 addresses due to missing NUL\n* REGTEST: ssl: add some ssl_c_* sample fetches test\n* REGTEST: ssl: tests the ssl_f_* sample fetches\n* MINOR: spoe: Don't systematically create new applets if processing rate is low\n* BUG/MINOR: http_ana: clarify connection pointer check on L7 retry\n* BUG/MINOR: spoe: correction of setting bits for analyzer\n* REGTEST: Add a simple script to tests errorfile directives in proxy sections\n* BUG/MINOR: systemd: Wait for network to be online\n* MEDIUM: map: make the 'clear map' operation yield\n* REGTEST: http-rules: test spaces in ACLs with master CLI\n* REGTEST: http-rules: test spaces in ACLs\n* BUG/MINOR: mworker/cli: fix semicolon escaping in master CLI\n* BUG/MINOR: mworker/cli: fix the escaping in the master CLI\n* BUG/MINOR: cli: allow space escaping on the CLI\n* BUG/MINOR: spoe: add missing key length check before checking key names\n* BUG/MEDIUM: ebtree: use a byte-per-byte memcmp() to compare memory blocks\n* BUG/MINOR: tcp-rules: tcp-response must check the buffer's fullness\n* MINOR: http: Add 404 to http-request deny\n* MINOR: http: Add 410 to http-request deny\n* [RELEASE] Released version 2.0.15\n* REGTESTS: checks: Fix tls_health_checks when IPv6 addresses are used\n* BUG/MINOR: ssl: fix ssl-{min,max}-ver with openssl \u003c 1.1.0\n* REGTESTS: Add missing OPENSSL to REQUIRE_OPTIONS for compression/lua_validation\n* REGTESTS: Add missing OPENSSL to REQUIRE_OPTIONS for lua/txn_get_priv\n* BUG/MEDIUM: pattern: fix thread safety of pattern matching\n* BUG/MEDIUM: log: don't hold the log lock during writev() on a file descriptor\n* BUG/MINOR: mworker: fix a memleak when execvp() failed\n* BUG/MEDIUM: mworker: fix the reload with an -- option\n* BUG/MINOR: init: -S can have a parameter starting with a dash\n* BUG/MINOR: init: -x can have a parameter starting with a dash\n* BUG/MEDIUM: mworker: fix the copy of options in copy_argv()\n* BUILD: makefile: adjust the sed expression of 'make help' for solaris\n* BUG/MINOR: proto-http: Fix detection of NTLM for the legacy HTTP version\n* BUG/MEDIUM: logs: fix trailing zeros on log message.\n* BUG/MINOR: logs: prevent double line returns in some events.\n* BUG/MEDIUM: contrib/prometheus-exporter: Properly set flags to dump metrics\n* BUG/MEDIUM: hlua: Lock pattern references to perform set/add/del operations\n* BUG/MEDIUM: lua: Reset analyse expiration timeout before executing a lua action\n* BUG/MINOR: peers: fix internal/network key type mapping.\n* SCRIPTS: publish-release: pass -n to gzip to remove timestamp\n* Revert 'BUG/MEDIUM: connections: force connections cleanup on server changes'\n* BUG/MINOR: nameservers: fix error handling in parsing of resolv.conf\n* BUG/MINOR: lua: Add missing string length for lua sticktable lookup\n* BUG/MINOR: server: Fix server_finalize_init() to avoid unused variable\n* BUG/MINOR: checks: Respect check-ssl param when a port or an addr is specified\n* BUG/MINOR: cache: Don't needlessly test 'cache' keyword in parse_cache_flt()\n* BUILD: select: only declare existing local labels to appease clang\n* BUG/MINOR: soft-stop: always wake up waiting threads on stopping\n* BUG/MINOR: pollers: remove uneeded free in global init\n* BUG/MINOR: pools: use %u not %d to report pool stats in 'show pools'\n* BUG/MINOR: cfgparse: Abort parsing the current line if an invalid \\x sequence is encountered\n* BUG/MEDIUM: http_ana: make the detection of NTLM variants safer\n* BUG/MINOR: http-ana: fix NTLM response parsing again\n* BUG/MINOR: config: Make use_backend and use-server post-parsing less obscur\n* BUG/MEDIUM: lua: Fix dumping of stick table entries for STD_T_DICT\n* BUG/MINOR: threads: fix multiple use of argument inside HA_ATOMIC_UPDATE_{MIN,MAX}()\n* BUG/MINOR: threads: fix multiple use of argument inside HA_ATOMIC_CAS()\n* BUG/MINOR: sample: Set the correct type when a binary is converted to a string\n* CLEANUP: connections: align function declaration\n* BUG/MEDIUM: ssl: fix the id length check within smp_fetch_ssl_fc_session_id()\n* BUG/MEDIUM: connections: force connections cleanup on server changes\n* BUG/MAJOR: stream-int: always detach a faulty endpoint on connect failure\n* BUG/MEDIUM: stream: Only allow L7 retries when using HTTP.\n* BUG/MEDIUM: streams: Remove SF_ADDR_SET if we're retrying due to L7 retry.\n* BUG/MINOR: checks: Remove a warning about http health checks\n* BUG/MINOR: checks: Compute the right HTTP request length for HTTP health checks\n* BUG/MEDIUM: checks: Always initialize checks before starting them\n* BUG/MINOR: checks/server: use_ssl member must be signed\n* BUG/MEDIUM: server/checks: Init server check during config validity check\n* Revert 'BUG/MINOR: connection: make sure to correctly tag local PROXY connections'\n* BUG/MEDIUM: backend: don't access a non-existing mux from a previous connection\n* REGTEST: ssl: test the client certificate authentication\n* MINOR: stream: report the list of active filters on stream crashes\n* BUG/MEDIUM: shctx: bound the number of loops that can happen around the lock\n* BUG/MEDIUM: shctx: really check the lock's value while waiting\n* BUG/MINOR: debug: properly use long long instead of long for the thread ID\n* MINOR: threads: export the POSIX thread ID in panic dumps\n* BUG/MEDIUM: listener: mark the thread as not stuck inside the loop\n* BUG/MEDIUM: sample: make the CPU and latency sample fetches check for a stream\n* BUG/MEDIUM: http: the 'unique-id' sample fetch could crash without a steeam\n* BUG/MEDIUM: http: the 'http_first_req' sample fetch could crash without a steeam\n* BUG/MEDIUM: capture: capture.{req,res}.* crash without a stream\n* BUG/MEDIUM: capture: capture-req/capture-res converters crash without a stream\n* BUG/MINOR: obj_type: Handle stream object in obj_base_ptr() function\n* BUG/MINOR: checks: chained expect will not properly wait for enough data\n* BUG/MINOR: checks: Respect the no-check-ssl option\n* MINOR: checks: Add a way to send custom headers and payload during http chekcs\n* BUG/MINOR: check: Update server address and port to execute an external check\n* DOC: option logasap does not depend on mode\n* BUG/MINOR: http: make url_decode() optionally convert '+' to SP\n* BUG/MINOR: tools: fix the i386 version of the div64_32 function\n* BUG/MEDIUM: http-ana: Handle NTLM messages correctly.\n* BUG/MINOR: ssl: default settings for ssl server options are not used\n* DOC: Improve documentation on http-request set-src\n* DOC: hashing: update link to hashing functions\n* BUG/MINOR: peers: Incomplete peers sections should be validated.\n* BUG/MINOR: protocol_buffer: Wrong maximum shifting.\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-2023-2117,SUSE-SLE-Product-HA-15-SP1-2023-2117",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "haproxy-2.0.31-150100.8.31.1",
        "RelatesToProductReference": "SUSE Linux Enterprise High Availability Extension 15 SP1",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/-2023-2117/suse-fu-20232117-1/",
      "Description": "Link for SUSE-FU-2023:2117-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-updates/2023-May/029207.html",
      "Description": "E-Mail link for SUSE-FU-2023:2117-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1207181",
      "Description": "SUSE Bug 1207181"
    },
    {
      "URL": "https://bugzilla.suse.com/1208132",
      "Description": "SUSE Bug 1208132"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-0056/",
      "Description": "SUSE CVE CVE-2023-0056 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-25725/",
      "Description": "SUSE CVE CVE-2023-25725 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2023-0056",
      "Description": "An uncontrolled resource consumption vulnerability was discovered in HAProxy which could crash the service. This issue could allow an authenticated remote attacker to run a specially crafted malicious server in an OpenShift cluster. The biggest impact is to availability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-0056.html",
          "Description": "CVE-2023-0056"
        },
        {
          "URL": "https://bugzilla.suse.com/1207181",
          "Description": "SUSE Bug 1207181"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise High Availability Extension 15 SP1:haproxy-2.0.31-150100.8.31.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-25725",
      "Description": "HAProxy before 2.7.3 may allow a bypass of access control because HTTP/1 headers are inadvertently lost in some situations, aka \"request smuggling.\" The HTTP header parsers in HAProxy may accept empty header field names, which could be used to truncate the list of HTTP headers and thus make some headers disappear after being parsed and processed for HTTP/1.0 and HTTP/1.1. For HTTP/2 and HTTP/3, the impact is limited because the headers disappear before being parsed and processed, as if they had not been sent by the client. The fixed versions are 2.7.3, 2.6.9, 2.5.12, 2.4.22, 2.2.29, and 2.0.31.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-25725.html",
          "Description": "CVE-2023-25725"
        },
        {
          "URL": "https://bugzilla.suse.com/1208132",
          "Description": "SUSE Bug 1208132"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise High Availability Extension 15 SP1:haproxy-2.0.31-150100.8.31.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}