{
  "Title": "Security update for gdb",
  "Tracking": {
    "ID": "SUSE-SU-2023:2485-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2023-06-12T06:54:40Z",
    "CurrentReleaseDate": "2023-06-12T06:54:40Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2023-06-12T06:54:40Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for gdb",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for gdb fixes the following issues:\n\ngdb was updated to 12.1. (jsc#SLE-21561)\n\n* DBX mode is deprecated, and will be removed in GDB 13.\n\n* GDB 12 is the last release of GDB that will support building against\n  Python 2.  From GDB 13, it will only be possible to build GDB itself\n  with Python 3 support.\n\n* Improved C++ template support:\n\n  GDB now treats functions/types involving C++ templates like it does function\n  overloads.  Users may omit parameter lists to set breakpoints on families of\n  template functions, including types/functions composed of multiple template types:\n    (gdb) break template_func(template_1, int)\n  The above will set breakpoints at every function `template_func' where\n  the first function parameter is any template type named `template_1' and\n  the second function parameter is `int'.\n  TAB completion also gains similar improvements.\n\n* New commands:\n\n  - maint set backtrace-on-fatal-signal on|off\n  - maint show backtrace-on-fatal-signal\n\n  This setting is 'on' by default.  When 'on' GDB will print a limited\n  backtrace to stderr in the situation where GDB terminates with a\n  fatal signal.  This only supported on some platforms where the\n  backtrace and backtrace_symbols_fd functions are available.\n\n  - set source open on|off\n  - show source open\n\n  This setting, which is on by default, controls whether GDB will try\n  to open source code files.  Switching this off will stop GDB trying\n  to open and read source code files, which can be useful if the files\n  are located over a slow network connection.\n\n  - set varsize-limit\n  - show varsize-limit\n\n  These are now deprecated aliases for 'set max-value-size' and\n  'show max-value-size'.\n\n  - task apply [all | TASK-IDS...] [FLAG]... COMMAND\n\n  Like 'thread apply', but applies COMMAND to Ada tasks.\n\n  - watch [...] task ID\n\n  Watchpoints can now be restricted to a specific Ada task.\n\n  - maint set internal-error backtrace on|off\n  - maint show internal-error backtrace\n  - maint set internal-warning backtrace on|off\n  - maint show internal-warning backtrace\n\n  GDB can now print a backtrace of itself when it encounters either an\n  internal-error, or an internal-warning.  This is on by default for\n  internal-error and off by default for internal-warning.\n\n  - set logging on|off\n\n  Deprecated and replaced by 'set logging enabled on|off'.\n\n  - set logging enabled on|off\n  - show logging enabled\n\n  These commands set or show whether logging is enabled or disabled.\n\n  - exit\n\n  You can now exit GDB by using the new command 'exit', in addition to\n  the existing 'quit' command.\n\n  - set debug threads on|off\n  - show debug threads\n\n  Print additional debug messages about thread creation and deletion.\n\n  - set debug linux-nat on|off\n  - show debug linux-nat\n\n  These new commands replaced the old 'set debug lin-lwp' and 'show\n  debug lin-lwp' respectively.  Turning this setting on prints debug\n  messages relating to GDB's handling of native Linux inferiors.\n\n  - maint flush source-cache\n\n  Flush the contents of the source code cache.\n\n  - maint set gnu-source-highlight enabled on|off\n  - maint show gnu-source-highlight enabled\n\n  Whether GDB should use the GNU Source Highlight library for adding\n  styling to source code.  When off, the library will not be used, even\n  when available.  When GNU Source Highlight isn't used, or can't add\n  styling to a particular source file, then the Python Pygments\n  library will be used instead.\n\n  - set suppress-cli-notifications (on|off)\n  - show suppress-cli-notifications\n\n  This controls whether printing the notifications is suppressed for CLI.\n  CLI notifications occur when you change the selected context\n  (i.e., the current inferior, thread and/or the frame), or when\n  the program being debugged stops (e.g., because of hitting a\n  breakpoint, completing source-stepping, an interrupt, etc.).\n\n  - set style disassembler enabled on|off\n  - show style disassembler enabled\n\n  If GDB is compiled with Python support, and the Python Pygments\n  package is available, then, when this setting is on, disassembler\n  output will have styling applied.\n\n  - set ada source-charset\n  - show ada source-charset\n\n  Set the character set encoding that is assumed for Ada symbols.  Valid\n  values for this follow the values that can be passed to the GNAT\n  compiler via the '-gnati' option.  The default is ISO-8859-1.\n\n* Changed commands:\n\n  - print\n\n  Printing of floating-point values with base-modifying formats like\n  /x has been changed to display the underlying bytes of the value in\n  the desired base.  This was GDB's documented behavior, but was never\n  implemented correctly.\n\n  - maint packet\n\n  This command can now print a reply, if the reply includes\n  non-printable characters.  Any non-printable characters are printed\n  as escaped hex, e.g. \\x?? where '??' is replaces with the value of\n  the non-printable character.\n\n  - clone-inferior\n  The clone-inferior command now ensures that the TTY, CMD and ARGS\n  settings are copied from the original inferior to the new one.\n  All modifications to the environment variables done using the 'set\n  environment' or 'unset environment' commands are also copied to the new\n  inferior.\n\n  - set debug lin-lwp on|off\n  - show debug lin-lwp\n\n  These commands have been removed from GDB.  The new command 'set\n  debug linux-nat' and 'show debug linux-nat' should be used\n  instead.\n\n  - info win\n\n  This command now includes information about the width of the tui\n  windows in its output.\n\n* GDB's Ada parser now supports an extension for specifying the exact\n  byte contents of a floating-point literal.  This can be useful for\n  setting floating-point registers to a precise value without loss of\n  precision.  The syntax is an extension of the based literal syntax.\n  Use, e.g., '16lf#0123abcd#' -- the number of 'l's controls the width\n  of the floating-point type, and the 'f' is the marker for floating\n  point.\n\n* MI changes:\n\n ** The '-add-inferior' with no option flags now inherits the\n    connection of the current inferior, this restores the behaviour of\n    GDB as it was prior to GDB 10.\n\n ** The '-add-inferior' command now accepts a '--no-connection'\n    option, which causes the new inferior to start without a\n    connection.\n\n* Python API:\n\n  ** New function gdb.add_history(), which takes a gdb.Value object\n     and adds the value it represents to GDB's history list.  An\n     integer, the index of the new item in the history list, is\n     returned.\n\n  ** New function gdb.history_count(), which returns the number of\n     values in GDB's value history.\n\n  ** New gdb.events.gdb_exiting event.  This event is called with a\n     gdb.GdbExitingEvent object which has the read-only attribute\n     'exit_code', which contains the value of the GDB exit code.  This\n     event is triggered once GDB decides it is going to exit, but\n     before GDB starts to clean up its internal state.\n\n  ** New function gdb.architecture_names(), which returns a list\n     containing all of the possible Architecture.name() values.  Each\n     entry is a string.\n\n  ** New function gdb.Architecture.integer_type(), which returns an\n     integer type given a size and a signed-ness.\n\n  ** New gdb.TargetConnection object type that represents a connection\n     (as displayed by the 'info connections' command).  A sub-class,\n     gdb.RemoteTargetConnection, is used to represent 'remote' and\n     'extended-remote' connections.\n\n  ** The gdb.Inferior type now has a 'connection' property which is an\n     instance of gdb.TargetConnection, the connection used by this\n     inferior.  This can be None if the inferior has no connection.\n\n  ** New 'gdb.events.connection_removed' event registry, which emits a\n     'gdb.ConnectionEvent' when a connection is removed from GDB.\n     This event has a 'connection' property, a gdb.TargetConnection\n     object for the connection being removed.\n\n  ** New gdb.connections() function that returns a list of all\n     currently active connections.\n\n  ** New gdb.RemoteTargetConnection.send_packet(PACKET) method.  This\n     is equivalent to the existing 'maint packet' CLI command; it\n     allows a user specified packet to be sent to the remote target.\n\n  ** New function gdb.host_charset(), returns a string, which is the\n     name of the current host charset.\n\n  ** New gdb.set_parameter(NAME, VALUE).  This sets the gdb parameter\n     NAME to VALUE.\n\n  ** New gdb.with_parameter(NAME, VALUE).  This returns a context\n     manager that temporarily sets the gdb parameter NAME to VALUE,\n     then resets it when the context is exited.\n\n  ** The gdb.Value.format_string method now takes a 'styling'\n     argument, which is a boolean.  When true, the returned string can\n     include escape sequences to apply styling.  The styling will only\n     be present if styling is otherwise turned on in GDB (see 'help\n     set styling').  When false, which is the default if the argument\n     is not given, then no styling is applied to the returned string.\n\n  ** New read-only attribute gdb.InferiorThread.details, which is\n     either a string, containing additional, target specific thread\n     state information, or None, if there is no such additional\n     information.\n\n  ** New read-only attribute gdb.Type.is_scalar, which is True for\n     scalar types, and False for all other types.\n\n  ** New read-only attribute gdb.Type.is_signed.  This attribute\n     should only be read when Type.is_scalar is True, and will be True\n     for signed types, and False for all other types.  Attempting to\n     read this attribute for non-scalar types will raise a ValueError.\n\n  ** It is now possible to add GDB/MI commands implemented in Python.\n\n- Update libipt to v2.0.5.\n\n- CVE-2018-7208: Fixed improper bounds check in coffgen.c:coff_pointerize_aux() that allowed for denial of service when parsing a crafted COFF file (bsc#1081527).\n- CVE-2017-16829: Fixed possible remote denial of service via the _bfd_elf_parse_gnu_properties() function in elf-properties.c (bsc#1068950).\n\nBug fixes:\n\n- Fixed license (bsc#1210081).\n- Advertises RHEL version support status (bsc#1207712).\n- Fixed crashes while debugging a clang-cpp app (bsc#1192285).\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-2023-2485,SUSE-SLE-SDK-12-SP5-2023-2485,SUSE-SLE-SERVER-12-SP5-2023-2485",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "gdb-12.1-2.20.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Server 12 SP5",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gdb-12.1-2.20.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Server for SAP Applications 12 SP5",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gdbserver-12.1-2.20.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Software Development Kit 12 SP5",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gdbserver-32bit-12.1-2.20.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Software Development Kit 12 SP5",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2023/suse-su-20232485-1/",
      "Description": "Link for SUSE-SU-2023:2485-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-updates/2023-June/029799.html",
      "Description": "E-Mail link for SUSE-SU-2023:2485-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1068950",
      "Description": "SUSE Bug 1068950"
    },
    {
      "URL": "https://bugzilla.suse.com/1081527",
      "Description": "SUSE Bug 1081527"
    },
    {
      "URL": "https://bugzilla.suse.com/1192285",
      "Description": "SUSE Bug 1192285"
    },
    {
      "URL": "https://bugzilla.suse.com/1207712",
      "Description": "SUSE Bug 1207712"
    },
    {
      "URL": "https://bugzilla.suse.com/1210081",
      "Description": "SUSE Bug 1210081"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2017-16829/",
      "Description": "SUSE CVE CVE-2017-16829 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2018-7208/",
      "Description": "SUSE CVE CVE-2018-7208 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2017-16829",
      "Description": "The _bfd_elf_parse_gnu_properties function in elf-properties.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.29.1, does not prevent negative pointers, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) or possibly have unspecified other impact via a crafted ELF file.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2017-16829.html",
          "Description": "CVE-2017-16829"
        },
        {
          "URL": "https://bugzilla.suse.com/1068950",
          "Description": "SUSE Bug 1068950"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Server 12 SP5:gdb-12.1-2.20.1",
            "SUSE Linux Enterprise Server for SAP Applications 12 SP5:gdb-12.1-2.20.1",
            "SUSE Linux Enterprise Software Development Kit 12 SP5:gdbserver-12.1-2.20.1",
            "SUSE Linux Enterprise Software Development Kit 12 SP5:gdbserver-32bit-12.1-2.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2018-7208",
      "Description": "In the coff_pointerize_aux function in coffgen.c in the Binary File Descriptor (BFD) library (aka libbfd), as distributed in GNU Binutils 2.30, an index is not validated, which allows remote attackers to cause a denial of service (segmentation fault) or possibly have unspecified other impact via a crafted file, as demonstrated by objcopy of a COFF object.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2018-7208.html",
          "Description": "CVE-2018-7208"
        },
        {
          "URL": "https://bugzilla.suse.com/1081527",
          "Description": "SUSE Bug 1081527"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Server 12 SP5:gdb-12.1-2.20.1",
            "SUSE Linux Enterprise Server for SAP Applications 12 SP5:gdb-12.1-2.20.1",
            "SUSE Linux Enterprise Software Development Kit 12 SP5:gdbserver-12.1-2.20.1",
            "SUSE Linux Enterprise Software Development Kit 12 SP5:gdbserver-32bit-12.1-2.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}