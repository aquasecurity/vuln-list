{
  "Title": "Security update for python-Django",
  "Tracking": {
    "ID": "SUSE-SU-2019:2180-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2019-08-19T14:48:36Z",
    "CurrentReleaseDate": "2019-08-19T14:48:36Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2019-08-19T14:48:36Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for python-Django",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for python-Django fixes the following issues:\n\n- CVE-2019-14232: Fixed a denial of service in 'django.utils.text.Truncator' (bsc#1142880).\n- CVE-2019-14233: Fixed a denial of service in strip_tags() (bsc#1142882).\n- CVE-2019-14234: Fixed an SQL injection in key and index lookups for 'JSONField'/'HStoreField' (bsc#1142883).\n- CVE-2019-14235: Fixed a potential memory exhaustion in 'django.utils.encoding.uri_to_iri()' (bsc#1142885).\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-2019-2180,SUSE-OpenStack-Cloud-7-2019-2180",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "python-Django-1.8.19-3.15.1",
        "RelatesToProductReference": "SUSE OpenStack Cloud 7",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2019/suse-su-20192180-1/",
      "Description": "Link for SUSE-SU-2019:2180-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2019-August/005830.html",
      "Description": "E-Mail link for SUSE-SU-2019:2180-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1142880",
      "Description": "SUSE Bug 1142880"
    },
    {
      "URL": "https://bugzilla.suse.com/1142882",
      "Description": "SUSE Bug 1142882"
    },
    {
      "URL": "https://bugzilla.suse.com/1142883",
      "Description": "SUSE Bug 1142883"
    },
    {
      "URL": "https://bugzilla.suse.com/1142885",
      "Description": "SUSE Bug 1142885"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2019-14232/",
      "Description": "SUSE CVE CVE-2019-14232 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2019-14233/",
      "Description": "SUSE CVE CVE-2019-14233 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2019-14234/",
      "Description": "SUSE CVE CVE-2019-14234 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2019-14235/",
      "Description": "SUSE CVE CVE-2019-14235 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2019-14232",
      "Description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2019-14232.html",
          "Description": "CVE-2019-14232"
        },
        {
          "URL": "https://bugzilla.suse.com/1142880",
          "Description": "SUSE Bug 1142880"
        },
        {
          "URL": "https://bugzilla.suse.com/1215978",
          "Description": "SUSE Bug 1215978"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE OpenStack Cloud 7:python-Django-1.8.19-3.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2019-14233",
      "Description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2019-14233.html",
          "Description": "CVE-2019-14233"
        },
        {
          "URL": "https://bugzilla.suse.com/1142882",
          "Description": "SUSE Bug 1142882"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE OpenStack Cloud 7:python-Django-1.8.19-3.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2019-14234",
      "Description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2019-14234.html",
          "Description": "CVE-2019-14234"
        },
        {
          "URL": "https://bugzilla.suse.com/1142883",
          "Description": "SUSE Bug 1142883"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE OpenStack Cloud 7:python-Django-1.8.19-3.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2019-14235",
      "Description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2019-14235.html",
          "Description": "CVE-2019-14235"
        },
        {
          "URL": "https://bugzilla.suse.com/1142885",
          "Description": "SUSE Bug 1142885"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE OpenStack Cloud 7:python-Django-1.8.19-3.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}