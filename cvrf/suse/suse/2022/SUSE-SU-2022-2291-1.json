{
  "Title": "Security update for python310",
  "Tracking": {
    "ID": "SUSE-SU-2022:2291-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2022-07-06T11:04:42Z",
    "CurrentReleaseDate": "2022-07-06T11:04:42Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2022-07-06T11:04:42Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for python310",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for python310 fixes the following issues:\n\n- CVE-2015-20107: avoid command injection in the mailcap module (bsc#1198511).\n\n- Update to 3.10.5:\n  - Core and Builtins\n    - gh-93418: Fixed an assert where an f-string has an equal\n      sign '=' following an expression, but there's no trailing\n      brace. For example, f'{i='.\n    - gh-91924: Fix __ltrace__ debug feature if the stdout\n      encoding is not UTF-8. Patch by Victor Stinner.\n    - gh-93061: Backward jumps after async for loops are no\n      longer given dubious line numbers.\n    - gh-93065: Fix contextvars HAMT implementation to handle\n      iteration over deep trees.\n    - The bug was discovered and fixed by Eli Libman. See\n      MagicStack/immutables#84 for more details.\n    - gh-92311: Fixed a bug where setting frame.f_lineno to jump\n      over a list comprehension could misbehave or crash.\n    - gh-92112: Fix crash triggered by an evil custom mro() on\n      a metaclass.\n    - gh-92036: Fix a crash in subinterpreters related to the\n      garbage collector. When a subinterpreter is deleted,\n      untrack all objects tracked by its GC. To prevent a crash\n      in deallocator functions expecting objects to be tracked by\n      the GC, leak a strong reference to these objects on\n      purpose, so they are never deleted and their deallocator\n      functions are not called. Patch by Victor Stinner.\n    - gh-91421: Fix a potential integer overflow in\n      _Py_DecodeUTF8Ex.\n    - bpo-47212: Raise IndentationError instead of SyntaxError\n      for a bare except with no following indent. Improve\n      SyntaxError locations for an un-parenthesized generator\n      used as arguments. Patch by Matthieu Dartiailh.\n    - bpo-47182: Fix a crash when using a named unicode character\n      like '\\N{digit nine}' after the main interpreter has been\n      initialized a second time.\n    - bpo-47117: Fix a crash if we fail to decode characters in\n      interactive mode if the tokenizer buffers are\n      uninitialized. Patch by Pablo Galindo.\n    - bpo-39829: Removed the __len__() call when initializing\n      a list and moved initializing to list_extend. Patch by\n      Jeremiah Pascual.\n    - bpo-46962: Classes and functions that unconditionally\n      declared their docstrings ignoring the\n      --without-doc-strings compilation flag no longer do so.\n    - The classes affected are ctypes.UnionType,\n      pickle.PickleBuffer, testcapi.RecursingInfinitelyError, and\n      types.GenericAlias.\n    - The functions affected are 24 methods in ctypes.\n    - Patch by Oleg Iarygin.\n    - bpo-36819: Fix crashes in built-in encoders with error\n      handlers that return position less or equal than the\n      starting position of non-encodable characters.\n  - Library\n    - gh-93156: Accessing the pathlib.PurePath.parents sequence\n      of an absolute path using negative index values produced\n      incorrect results.\n    - gh-89973: Fix re.error raised in fnmatch if the pattern\n      contains a character range with upper bound lower than\n      lower bound (e.g. [c-a]). Now such ranges are interpreted\n      as empty ranges.\n    - gh-93010: In a very special case, the email package tried\n      to append the nonexistent InvalidHeaderError to the defect\n      list. It should have been InvalidHeaderDefect.\n    - gh-92839: Fixed crash resulting from calling\n      bisect.insort() or bisect.insort_left() with the key\n      argument not equal to None.\n    - gh-91581: utcfromtimestamp() no longer attempts to resolve\n      fold in the pure Python implementation, since the fold is\n      never 1 in UTC. In addition to being slightly faster in the\n      common case, this also prevents some errors when the\n      timestamp is close to datetime.min. Patch by Paul Ganssle.\n    - gh-92530: Fix an issue that occurred after interrupting\n      threading.Condition.notify().\n    - gh-92049: Forbid pickling constants re._constants.SUCCESS\n      etc. Previously, pickling did not fail, but the result\n      could not be unpickled.\n    - bpo-47029: Always close the read end of the pipe used by\n      multiprocessing.Queue after the last write of buffered data\n      to the write end of the pipe to avoid BrokenPipeError at\n      garbage collection and at multiprocessing.Queue.close()\n      calls. Patch by GÃ©ry Ogam.\n    - gh-91401: Provide a fail-safe way to disable subprocess use\n      of vfork() via a private subprocess._USE_VFORK attribute.\n      While there is currently no known need for this, if you\n      find a need please only set it to False. File a CPython\n      issue as to why you needed it and link to that from\n      a comment in your code. This attribute is documented as\n      a footnote in 3.11.\n    - gh-91910: Add missing f prefix to f-strings in error\n      messages from the multiprocessing and asyncio modules.\n    - gh-91810: ElementTree method write() and function\n      tostring() now use the text file's encoding ('UTF-8' if not\n      available) instead of locale encoding in XML declaration\n      when encoding='unicode' is specified.\n    - gh-91832: Add required attribute to argparse.Action repr\n      output.\n    - gh-91700: Compilation of regular expression containing\n      a conditional expression (?(group)...) now raises an\n      appropriate re.error if the group number refers to not\n      defined group. Previously an internal RuntimeError was\n      raised.\n    - gh-91676: Fix unittest.IsolatedAsyncioTestCase to shutdown\n      the per test event loop executor before returning from its\n      run method so that a not yet stopped or garbage collected\n      executor state does not persist beyond the test.\n    - gh-90568: Parsing \\N escapes of Unicode Named Character\n      Sequences in a regular expression raises now re.error\n      instead of TypeError.\n    - gh-91595: Fix the comparison of character and integer\n      inside Tools.gdb.libpython.write_repr(). Patch by Yu Liu.\n    - gh-90622: Worker processes for\n      concurrent.futures.ProcessPoolExecutor are no longer\n      spawned on demand (a feature added in 3.9) when the\n      multiprocessing context start method is 'fork' as that can\n      lead to deadlocks in the child processes due to a fork\n      happening while threads are running.\n    - gh-91575: Update case-insensitive matching in the re module\n      to the latest Unicode version.\n    - gh-91581: Remove an unhandled error case in the\n      C implementation of calls to datetime.fromtimestamp with no\n      time zone (i.e. getting a local time from an epoch\n      timestamp). This should have no user-facing effect other\n      than giving a possibly more accurate error message when\n      called with timestamps that fall on 10000-01-01 in the\n      local time. Patch by Paul Ganssle.\n    - bpo-47260: Fix os.closerange() potentially being a no-op in\n      a Linux seccomp sandbox.\n    - bpo-39064: zipfile.ZipFile now raises zipfile.BadZipFile\n      instead of ValueError when reading a corrupt zip file in\n      which the central directory offset is negative.\n    - bpo-47151: When subprocess tries to use vfork, it now falls\n      back to fork if vfork returns an error. This allows use in\n      situations where vfork isn't allowed by the OS kernel.\n    - bpo-27929: Fix asyncio.loop.sock_connect() to only resolve\n      names for socket.AF_INET or socket.AF_INET6 families.\n      Resolution may not make sense for other families, like\n      socket.AF_BLUETOOTH and socket.AF_UNIX.\n    - bpo-43323: Fix errors in the email module if the charset\n      itself contains undecodable/unencodable characters.\n    - bpo-47101: hashlib.algorithms_available now lists only\n      algorithms that are provided by activated crypto providers\n      on OpenSSL 3.0. Legacy algorithms are not listed unless the\n      legacy provider has been loaded into the default OSSL\n      context.\n    - bpo-46787: Fix concurrent.futures.ProcessPoolExecutor\n      exception memory leak\n    - bpo-45393: Fix the formatting for await x and not x in the\n      operator precedence table when using the help() system.\n    - bpo-46415: Fix ipaddress.ip_{address,interface,network}\n      raising TypeError instead of ValueError if given invalid\n      tuple as address parameter.\n    - bpo-28249: Set doctest.DocTest.lineno to None when object\n      does not have __doc__.\n    - bpo-45138: Fix a regression in the sqlite3 trace callback\n      where bound parameters were not expanded in the passed\n      statement string. The regression was introduced in Python\n      3.10 by bpo-40318. Patch by Erlend E. Aasland.\n    - bpo-44493: Add missing terminated NUL in sockaddr_un's\n      length\n    - This was potentially observable when using non-abstract\n      AF_UNIX datagram sockets to processes written in another\n      programming language.\n    - bpo-42627: Fix incorrect parsing of Windows registry proxy\n      settings\n    - bpo-36073: Raise ProgrammingError instead of segfaulting on\n      recursive usage of cursors in sqlite3 converters. Patch by\n      Sergey Fedoseev.\n  - Documentation\n    - gh-86438: Clarify that -W and PYTHONWARNINGS are matched\n      literally and case-insensitively, rather than as regular\n      expressions, in warnings.\n    - gh-92240: Added release dates for 'What's New in Python\n      3.X' for 3.0, 3.1, 3.2, 3.8 and 3.10\n    - gh-91888: Add a new gh role to the documentation to link to\n      GitHub issues.\n    - gh-91783: Document security issues concerning the use of\n      the function shutil.unpack_archive()\n    - gh-91547: Remove 'Undocumented modules' page.\n    - bpo-44347: Clarify the meaning of dirs_exist_ok, a kwarg of\n      shutil.copytree().\n    - bpo-38668: Update the introduction to documentation for\n      os.path to remove warnings that became irrelevant after the\n      implementations of PEP 383 and PEP 529.\n    - bpo-47138: Pin Jinja to a version compatible with Sphinx\n      version 3.2.1.\n    - bpo-46962: All docstrings in code snippets are now wrapped\n      into PyDoc_STR() to follow the guideline of PEP 7's\n      Documentation Strings paragraph. Patch by Oleg Iarygin.\n    - bpo-26792: Improve the docstrings of runpy.run_module() and\n      runpy.run_path(). Original patch by Andrew Brezovsky.\n    - bpo-40838: Document that inspect.getdoc(),\n      inspect.getmodule(), and inspect.getsourcefile() might\n      return None.\n    - bpo-45790: Adjust inaccurate phrasing in Defining Extension\n      Types: Tutorial about the ob_base field and the macros used\n      to access its contents.\n    - bpo-42340: Document that in some circumstances\n      KeyboardInterrupt may cause the code to enter an\n      inconsistent state. Provided a sample workaround to avoid\n      it if needed.\n    - bpo-41233: Link the errnos referenced in\n      Doc/library/exceptions.rst to their respective section in\n      Doc/library/errno.rst, and vice versa. Previously this was\n      only done for EINTR and InterruptedError. Patch by Yan\n      'yyyyyyyan' Orestes.\n    - bpo-38056: Overhaul the Error Handlers documentation in\n      codecs.\n    - bpo-13553: Document tkinter.Tk args.\n  - Tests\n    - gh-92886: Fixing tests that fail when running with\n      optimizations (-O) in test_imaplib.py.\n    - gh-92670: Skip\n      test_shutil.TestCopy.test_copyfile_nonexistent_dir test on\n      AIX as the test uses a trailing slash to force the OS\n      consider the path as a directory, but on AIX the trailing\n      slash has no effect and is considered as a file.\n    - gh-91904: Fix initialization of\n      PYTHONREGRTEST_UNICODE_GUARD which prevented running\n      regression tests on non-UTF-8 locale.\n    - gh-91607: Fix test_concurrent_futures to test the correct\n      multiprocessing start method context in several cases where\n      the test logic mixed this up.\n    - bpo-47205: Skip test for sched_getaffinity() and\n      sched_setaffinity() error case on FreeBSD.\n    - bpo-47104: Rewrite asyncio.to_thread() tests to use\n      unittest.IsolatedAsyncioTestCase.\n    - bpo-29890: Add tests for ipaddress.IPv4Interface and\n      ipaddress.IPv6Interface construction with tuple arguments.\n      Original patch and tests by louisom.\n  - Tools/Demos\n    - gh-91583: Fix regression in the code generated by Argument\n      Clinic for functions with the defining_class parameter.\n\n- Update to 3.10.4:\n  - bpo-46968: Check for the existence of the 'sys/auxv.h' header\n    in faulthandler to avoid compilation problems in systems\n    where this header doesn't exist. Patch by Pablo Galindo\n  - bpo-23691: Protect the re.finditer() iterator from\n    re-entering.\n  - bpo-42369: Fix thread safety of zipfile._SharedFile.tell() to\n    avoid a 'zipfile.BadZipFile: Bad CRC-32 for file' exception\n    when reading a ZipFile from multiple threads.\n  - bpo-38256: Fix binascii.crc32() when it is compiled to use\n    zlib'c crc32 to work properly on inputs 4+GiB in length\n    instead of returning the wrong result. The workaround prior\n    to this was to always feed the function data in increments\n    smaller than 4GiB or to just call the zlib module function.\n  - bpo-39394: A warning about inline flags not at the start of\n    the regular expression now contains the position of the flag.\n  - bpo-47061: Deprecate the various modules listed by PEP 594:\n  - aifc, asynchat, asyncore, audioop, cgi, cgitb, chunk, crypt,\n    imghdr, msilib, nntplib, nis, ossaudiodev, pipes, smtpd,\n    sndhdr, spwd, sunau, telnetlib, uu, xdrlib\n  - bpo-2604: Fix bug where doctests using globals would fail\n    when run multiple times.\n  - bpo-45997: Fix asyncio.Semaphore re-aquiring FIFO order.\n  - bpo-47022: The asynchat, asyncore and smtpd modules have been\n    deprecated since at least Python 3.6. Their documentation and\n    deprecation warnings and have now been updated to note they\n    will removed in Python 3.12 (PEP 594).\n  - bpo-46421: Fix a unittest issue where if the command was\n    invoked as python -m unittest and the filename(s) began with\n    a dot (.), a ValueError is returned.\n  - bpo-40296: Fix supporting generic aliases in pydoc.\n\n- Update to 3.10.3:\n  - bpo-46940: Avoid overriding AttributeError metadata\n    information for nested attribute access calls. Patch by Pablo\n    Galindo.\n  - bpo-46852: Rename the private undocumented\n    float.__set_format__() method to float.__setformat__() to fix\n    a typo introduced in Python 3.7. The method is only used by\n    test_float. Patch by Victor Stinner.\n  - bpo-46794: Bump up the libexpat version into 2.4.6\n  - bpo-46820: Fix parsing a numeric literal immediately (without\n    spaces) followed by 'not in' keywords, like in 1not in x. Now\n    the parser only emits a warning, not a syntax error.\n  - bpo-46762: Fix an assert failure in debug builds when a '\u003c',\n    '\u003e', or '=' is the last character in an f-string that's\n    missing a closing right brace.\n  - bpo-46724: Make sure that all backwards jumps use the\n    JUMP_ABSOLUTE instruction, rather than JUMP_FORWARD with an\n    argument of (2**32)+offset.\n  - bpo-46732: Correct the docstring for the __bool__() method.\n    Patch by Jelle Zijlstra.\n  - bpo-46707: Avoid potential exponential backtracking when\n    producing some syntax errors involving lots of brackets.\n    Patch by Pablo Galindo.\n  - bpo-40479: Add a missing call to va_end() in\n    Modules/_hashopenssl.c.\n  - bpo-46615: When iterating over sets internally in\n    setobject.c, acquire strong references to the resulting items\n    from the set. This prevents crashes in corner-cases of\n    various set operations where the set gets mutated.\n  - bpo-45773: Remove two invalid 'peephole' optimizations from\n    the bytecode compiler.\n  - bpo-43721: Fix docstrings of getter, setter, and deleter to\n    clarify that they create a new copy of the property.\n  - bpo-46503: Fix an assert when parsing some invalid N escape\n    sequences in f-strings.\n  - bpo-46417: Fix a race condition on setting a type __bases__\n    attribute: the internal function add_subclass() now gets the\n    PyTypeObject.tp_subclasses member after calling\n    PyWeakref_NewRef() which can trigger a garbage collection\n    which can indirectly modify PyTypeObject.tp_subclasses. Patch\n    by Victor Stinner.\n  - bpo-46383: Fix invalid signature of _zoneinfo's module_free\n    function to resolve a crash on wasm32-emscripten platform.\n  - bpo-46070: Py_EndInterpreter() now explicitly untracks all\n    objects currently tracked by the GC. Previously, if an object\n    was used later by another interpreter, calling\n    PyObject_GC_UnTrack() on the object crashed if the previous\n    or the next object of the PyGC_Head structure became\n    a dangling pointer. Patch by Victor Stinner.\n  - bpo-46339: Fix a crash in the parser when retrieving the\n    error text for multi-line f-strings expressions that do not\n    start in the first line of the string. Patch by Pablo Galindo\n  - bpo-46240: Correct the error message for unclosed parentheses\n    when the tokenizer doesn't reach the end of the source when\n    the error is reported. Patch by Pablo Galindo\n  - bpo-46091: Correctly calculate indentation levels for lines\n    with whitespace character that are ended by line continuation\n    characters. Patch by Pablo Galindo\n  - bpo-43253: Fix a crash when closing transports where the\n    underlying socket handle is already invalid on the Proactor\n    event loop.\n  - bpo-47004: Apply bugfixes from importlib_metadata 4.11.3,\n    including bugfix for EntryPoint.extras, which was returning\n    match objects and not the extras strings.\n  - bpo-46985: Upgrade pip wheel bundled with ensurepip (pip\n    22.0.4)\n  - bpo-46968: faulthandler: On Linux 5.14 and newer, dynamically\n    determine size of signal handler stack size CPython allocates\n    using getauxval(AT_MINSIGSTKSZ). This changes allows for\n    Python extension's request to Linux kernel to use AMX_TILE\n    instruction set on Sapphire Rapids Xeon processor to succeed,\n    unblocking use of the ISA in frameworks.\n  - bpo-46955: Expose asyncio.base_events.Server as\n    asyncio.Server. Patch by Stefan Zabka.\n  - bpo-23325: The signal module no longer assumes that SIG_IGN\n    and SIG_DFL are small int singletons.\n  - bpo-46932: Update bundled libexpat to 2.4.7\n  - bpo-25707: Fixed a file leak in\n    xml.etree.ElementTree.iterparse() when the iterator is not\n    exhausted. Patch by Jacob Walls.\n  - bpo-44886: Inherit asyncio proactor datagram transport from\n    asyncio.DatagramTransport.\n  - bpo-46827: Support UDP sockets in asyncio.loop.sock_connect()\n    for selector-based event loops. Patch by Thomas Grainger.\n  - bpo-46811: Make test suite support Expat \u003e=2.4.5\n  - bpo-46252: Raise TypeError if ssl.SSLSocket is passed to\n    transport-based APIs.\n  - bpo-46784: Fix libexpat symbols collisions with user\n    dynamically loaded or statically linked libexpat in embedded\n    Python.\n  - bpo-39327: shutil.rmtree() can now work with VirtualBox\n    shared folders when running from the guest operating-system.\n  - bpo-46756: Fix a bug in\n    urllib.request.HTTPPasswordMgr.find_user_password() and\n    urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated()\n    which allowed to bypass authorization. For example, access to\n    URI example.org/foobar was allowed if the user was authorized\n    for URI example.org/foo.\n  - bpo-46643: In typing.get_type_hints(), support evaluating\n    stringified ParamSpecArgs and ParamSpecKwargs annotations.\n    Patch by Gregory Beauregard.\n  - bpo-45863: When the tarfile module creates a pax format\n    archive, it will put an integer representation of timestamps\n    in the ustar header (if possible) for the benefit of older\n    unarchivers, in addition to the existing full-precision\n    timestamps in the pax extended header.\n  - bpo-46676: Make typing.ParamSpec args and kwargs equal to\n    themselves. Patch by Gregory Beauregard.\n  - bpo-46672: Fix NameError in asyncio.gather() when initial\n    type check fails.\n  - bpo-46655: In typing.get_type_hints(), support evaluating\n    bare stringified TypeAlias annotations. Patch by Gregory\n    Beauregard.\n  - bpo-45948: Fixed a discrepancy in the C implementation of the\n    xml.etree.ElementTree module. Now, instantiating an\n    xml.etree.ElementTree.XMLParser with a target=None keyword\n    provides a default xml.etree.ElementTree.TreeBuilder target\n    as the Python implementation does.\n  - bpo-46521: Fix a bug in the codeop module that was\n    incorrectly identifying invalid code involving string quotes\n    as valid code.\n  - bpo-46581: Brings ParamSpec propagation for GenericAlias in\n    line with Concatenate (and others).\n  - bpo-46591: Make the IDLE doc URL on the About IDLE dialog\n    clickable.\n  - bpo-46400: expat: Update libexpat from 2.4.1 to 2.4.4\n  - bpo-46487: Add the get_write_buffer_limits method to\n    asyncio.transports.WriteTransport and to the SSL transport.\n  - bpo-45173: Note the configparser deprecations will be removed\n    in Python 3.12.\n  - bpo-46539: In typing.get_type_hints(), support evaluating\n    stringified ClassVar and Final annotations inside Annotated.\n    Patch by Gregory Beauregard.\n  - bpo-46491: Allow typing.Annotated to wrap typing.Final and\n    typing.ClassVar. Patch by Gregory Beauregard.\n  - bpo-46436: Fix command-line option -d/--directory in module\n    http.server which is ignored when combined with command-line\n    option --cgi. Patch by GÃ©ry Ogam.\n  - bpo-41403: Make mock.patch() raise a TypeError with\n    a relevant error message on invalid arg. Previously it\n    allowed a cryptic AttributeError to escape.\n  - bpo-46474: In importlib.metadata.EntryPoint.pattern, avoid\n    potential REDoS by limiting ambiguity in consecutive\n    whitespace.\n  - bpo-46469: asyncio generic classes now return\n    types.GenericAlias in __class_getitem__ instead of the same\n    class.\n  - bpo-46434: pdb now gracefully handles help when __doc__ is\n    missing, for example when run with pregenerated optimized\n    .pyc files.\n  - bpo-46333: The __eq__() and __hash__() methods of\n    typing.ForwardRef now honor the module parameter of\n    typing.ForwardRef. Forward references from different modules\n    are now differentiated.\n  - bpo-46246: Add missing __slots__ to\n    importlib.metadata.DeprecatedList. Patch by Arie Bovenberg.\n  - bpo-46266: Improve day constants in calendar.\n  - Now all constants (MONDAY ... SUNDAY) are documented, tested,\n    and added to __all__.\n  - bpo-46232: The ssl module now handles certificates with bit\n    strings in DN correctly.\n  - bpo-43118: Fix a bug in inspect.signature() that was causing\n    it to fail on some subclasses of classes with\n    a __text_signature__ referencing module globals. Patch by\n    Weipeng Hong.\n  - bpo-26552: Fixed case where failing asyncio.ensure_future()\n    did not close the coroutine. Patch by Kumar Aditya.\n  - bpo-21987: Fix an issue with tarfile.TarFile.getmember()\n    getting a directory name with a trailing slash.\n  - bpo-20392: Fix inconsistency with uppercase file extensions\n    in MimeTypes.guess_type(). Patch by Kumar Aditya.\n  - bpo-46080: Fix exception in argparse help text generation if\n    a argparse.BooleanOptionalAction argument's default is\n    argparse.SUPPRESS and it has help specified. Patch by Felix\n    Fontein.\n  - bpo-44439: Fix .write() method of a member file in ZipFile,\n    when the input data is an object that supports the buffer\n    protocol, the file length may be wrong.\n  - bpo-45703: When a namespace package is imported before\n    another module from the same namespace is created/installed\n    in a different sys.path location while the program is\n    running, calling the importlib.invalidate_caches() function\n    will now also guarantee the new module is noticed.\n  - bpo-24959: Fix bug where unittest sometimes drops frames from\n    tracebacks of exceptions raised in tests.\n  - bpo-44791: Fix substitution of ParamSpec in Concatenate with\n    different parameter expressions. Substitution with a list of\n    types returns now a tuple of types. Substitution with\n    Concatenate returns now a Concatenate with concatenated lists\n    of arguments.\n  - bpo-14156: argparse.FileType now supports an argument of '-'\n    in binary mode, returning the .buffer attribute of\n    sys.stdin/sys.stdout as appropriate. Modes including 'x' and\n    'a' are treated equivalently to 'w' when argument is '-'.\n    Patch contributed by Josh Rosenberg\n  - bpo-46463: Fixes escape4chm.py script used when building the\n    CHM documentation file\n  - bpo-46913: Fix test_faulthandler.test_sigfpe() if Python is\n    built with undefined behavior sanitizer (UBSAN): disable\n    UBSAN on the faulthandler_sigfpe() function. Patch by Victor\n    Stinner.\n  - bpo-46708: Prevent default asyncio event loop policy\n    modification warning after test_asyncio execution.\n  - bpo-46678: The function make_legacy_pyc in\n    Lib/test/support/import_helper.py no longer fails when\n    PYTHONPYCACHEPREFIX is set to a directory on a different\n    device from where tempfiles are stored.\n  - bpo-46616: Ensures test_importlib.test_windows cleans up\n    registry keys after completion.\n  - bpo-44359: test_ftplib now silently ignores socket errors to\n    prevent logging unhandled threading exceptions. Patch by\n    Victor Stinner.\n  - bpo-46542: Fix a Python crash in test_lib2to3 when using\n    Python built in debug mode: limit the recursion limit. Patch\n    by Victor Stinner.\n  - bpo-46576: test_peg_generator now disables compiler\n    optimization when testing compilation of its own C extensions\n    to significantly speed up the testing on non-debug builds of\n    CPython.\n  - bpo-46542: Fix test_json tests checking for RecursionError:\n    modify these tests to use support.infinite_recursion(). Patch\n    by Victor Stinner.\n  - bpo-13886: Skip test_builtin PTY tests on non-ASCII\n    characters if the readline module is loaded. The readline\n    module changes input() behavior, but test_builtin is not\n    intented to test the readline module. Patch by Victor\n    Stinner.\n  - bpo-38472: Fix GCC detection in setup.py when\n    cross-compiling. The C compiler is now run with LC_ALL=C.\n    Previously, the detection failed with a German locale.\n  - bpo-46513: configure no longer uses AC_C_CHAR_UNSIGNED macro\n    and pyconfig.h no longer defines reserved symbol\n    __CHAR_UNSIGNED__.\n  - bpo-45296: Clarify close, quit, and exit in IDLE. In the File\n    menu, 'Close' and 'Exit' are now 'Close Window' (the current\n    one) and 'Exit' is now 'Exit IDLE' (by closing all windows).\n    In Shell, 'quit()' and 'exit()' mean 'close Shell'. If there\n    are no other windows, this also exits IDLE.\n  - bpo-45447: Apply IDLE syntax highlighting to pyi files. Patch\n    by Alex Waygood and Terry Jan Reedy.\n  - bpo-46433: The internal function _PyType_GetModuleByDef now\n    correctly handles inheritance patterns involving static\n    types.\n  - bpo-14916: Fixed bug in the tokenizer that prevented\n    PyRun_InteractiveOne from parsing from the provided FD.\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "Container bci/python:3-2022-2291,SUSE-2022-2291,SUSE-SLE-Module-Python3-15-SP4-2022-2291,openSUSE-SLE-15.4-2022-2291",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "libpython3_10-1_0-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "Container bci/python:3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "Container bci/python:3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-base-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "Container bci/python:3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-devel-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "Container bci/python:3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_10-1_0-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-base-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-curses-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-dbm-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-devel-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-idle-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-tk-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-tools-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Python 3 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_10-1_0-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_10-1_0-32bit-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-32bit-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-base-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-base-32bit-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-curses-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-dbm-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-devel-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-doc-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-doc-devhelp-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-idle-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-testsuite-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-tk-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python310-tools-3.10.5-150400.4.7.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2022/suse-su-20222291-1/",
      "Description": "Link for SUSE-SU-2022:2291-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2022-July/011425.html",
      "Description": "E-Mail link for SUSE-SU-2022:2291-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1198511",
      "Description": "SUSE Bug 1198511"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2015-20107/",
      "Description": "SUSE CVE CVE-2015-20107 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2015-20107",
      "Description": "In Python (aka CPython) up to 3.10.8, the mailcap module does not add escape characters into commands discovered in the system mailcap file. This may allow attackers to inject shell commands into applications that call mailcap.findmatch with untrusted input (if they lack validation of user-provided filenames or arguments). The fix is also back-ported to 3.7, 3.8, 3.9",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2015-20107.html",
          "Description": "CVE-2015-20107"
        },
        {
          "URL": "https://bugzilla.suse.com/1198511",
          "Description": "SUSE Bug 1198511"
        },
        {
          "URL": "https://bugzilla.suse.com/1200507",
          "Description": "SUSE Bug 1200507"
        },
        {
          "URL": "https://bugzilla.suse.com/1201777",
          "Description": "SUSE Bug 1201777"
        },
        {
          "URL": "https://bugzilla.suse.com/1201791",
          "Description": "SUSE Bug 1201791"
        },
        {
          "URL": "https://bugzilla.suse.com/1205068",
          "Description": "SUSE Bug 1205068"
        },
        {
          "URL": "https://bugzilla.suse.com/1208337",
          "Description": "SUSE Bug 1208337"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/python:3:libpython3_10-1_0-3.10.5-150400.4.7.1",
            "Container bci/python:3:python310-3.10.5-150400.4.7.1",
            "Container bci/python:3:python310-base-3.10.5-150400.4.7.1",
            "Container bci/python:3:python310-devel-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:libpython3_10-1_0-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-base-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-curses-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-dbm-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-devel-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-idle-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-tk-3.10.5-150400.4.7.1",
            "SUSE Linux Enterprise Module for Python 3 15 SP4:python310-tools-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:libpython3_10-1_0-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:libpython3_10-1_0-32bit-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-32bit-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-base-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-base-32bit-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-curses-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-dbm-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-devel-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-doc-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-doc-devhelp-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-idle-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-testsuite-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-tk-3.10.5-150400.4.7.1",
            "openSUSE Leap 15.4:python310-tools-3.10.5-150400.4.7.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}