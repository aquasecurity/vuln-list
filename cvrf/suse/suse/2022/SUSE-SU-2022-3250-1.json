{
  "Title": "Security update for nodejs16",
  "Tracking": {
    "ID": "SUSE-SU-2022:3250-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2022-09-12T07:06:54Z",
    "CurrentReleaseDate": "2022-09-12T07:06:54Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2022-09-12T07:06:54Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for nodejs16",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for nodejs16 fixes the following issues:\n\n- CVE-2022-35949: Fixed SSRF when an application takes in user input into the path/pathname option of undici.request (bsc#1202382).\n- CVE-2022-35948: Fixed CRLF injection via Content-Type (bsc#1202383).\n- CVE-2022-29244: Fixed npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace (bsc#1200517).\n- CVE-2022-31150: Fixed CRLF injection in node-undici (bsc#1201710).\n\nBugfixes:\n\n- Enable crypto-policies for SLE15 SP4+ and TW (bsc#1200303)\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "Container bci/node:16-2022-3250,SUSE-2022-3250,SUSE-SLE-Module-Web-Scripting-15-SP4-2022-3250,openSUSE-SLE-15.4-2022-3250",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "nodejs16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "Container bci/node:16",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "npm16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "Container bci/node:16",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Web and Scripting 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-devel-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Web and Scripting 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-docs-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Web and Scripting 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "npm16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Web and Scripting 15 SP4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "corepack16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-devel-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nodejs16-docs-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "npm16-16.17.0-150400.3.6.1",
        "RelatesToProductReference": "openSUSE Leap 15.4",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2022/suse-su-20223250-1/",
      "Description": "Link for SUSE-SU-2022:3250-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2022-September/012208.html",
      "Description": "E-Mail link for SUSE-SU-2022:3250-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1200303",
      "Description": "SUSE Bug 1200303"
    },
    {
      "URL": "https://bugzilla.suse.com/1200517",
      "Description": "SUSE Bug 1200517"
    },
    {
      "URL": "https://bugzilla.suse.com/1201710",
      "Description": "SUSE Bug 1201710"
    },
    {
      "URL": "https://bugzilla.suse.com/1202382",
      "Description": "SUSE Bug 1202382"
    },
    {
      "URL": "https://bugzilla.suse.com/1202383",
      "Description": "SUSE Bug 1202383"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-29244/",
      "Description": "SUSE CVE CVE-2022-29244 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-31150/",
      "Description": "SUSE CVE CVE-2022-31150 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-35948/",
      "Description": "SUSE CVE CVE-2022-35948 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2022-35949/",
      "Description": "SUSE CVE CVE-2022-35949 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2022-29244",
      "Description": "npm pack ignores root-level .gitignore and .npmignore file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=\u003cname\u003e`). Anyone who has run `npm pack` or `npm publish` inside a workspace, as of v7.9.0 and v7.13.0 respectively, may be affected and have published files into the npm registry they did not intend to include. Users should upgrade to the latest, patched version of npm v8.11.0, run: npm i -g npm@latest . Node.js versions v16.15.1, v17.19.1, and v18.3.0 include the patched v8.11.0 version of npm.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-29244.html",
          "Description": "CVE-2022-29244"
        },
        {
          "URL": "https://bugzilla.suse.com/1200517",
          "Description": "SUSE Bug 1200517"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/node:16:nodejs16-16.17.0-150400.3.6.1",
            "Container bci/node:16:npm16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-devel-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-docs-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:npm16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:corepack16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-devel-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-docs-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:npm16-16.17.0-150400.3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-31150",
      "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js. It is possible to inject CRLF sequences into request headers in undici in versions less than 5.7.1. A fix was released in version 5.8.0. Sanitizing all HTTP headers from untrusted sources to eliminate `\\r\\n` is a workaround for this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-31150.html",
          "Description": "CVE-2022-31150"
        },
        {
          "URL": "https://bugzilla.suse.com/1201710",
          "Description": "SUSE Bug 1201710"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/node:16:nodejs16-16.17.0-150400.3.6.1",
            "Container bci/node:16:npm16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-devel-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-docs-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:npm16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:corepack16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-devel-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-docs-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:npm16-16.17.0-150400.3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-35948",
      "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=\u003c undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-35948.html",
          "Description": "CVE-2022-35948"
        },
        {
          "URL": "https://bugzilla.suse.com/1202383",
          "Description": "SUSE Bug 1202383"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/node:16:nodejs16-16.17.0-150400.3.6.1",
            "Container bci/node:16:npm16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-devel-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-docs-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:npm16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:corepack16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-devel-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-docs-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:npm16-16.17.0-150400.3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-35949",
      "Description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`undici` is vulnerable to SSRF (Server-side Request Forgery) when an application takes in **user input** into the `path/pathname` option of `undici.request`. If a user specifies a URL such as `http://127.0.0.1` or `//127.0.0.1` ```js const undici = require(\"undici\") undici.request({origin: \"http://example.com\", pathname: \"//127.0.0.1\"}) ``` Instead of processing the request as `http://example.org//127.0.0.1` (or `http://example.org/http://127.0.0.1` when `http://127.0.0.1 is used`), it actually processes the request as `http://127.0.0.1/` and sends it to `http://127.0.0.1`. If a developer passes in user input into `path` parameter of `undici.request`, it can result in an _SSRF_ as they will assume that the hostname cannot change, when in actual fact it can change because the specified path parameter is combined with the base URL. This issue was fixed in `undici@5.8.1`. The best workaround is to validate user input before passing it to the `undici.request` call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2022-35949.html",
          "Description": "CVE-2022-35949"
        },
        {
          "URL": "https://bugzilla.suse.com/1202382",
          "Description": "SUSE Bug 1202382"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Container bci/node:16:nodejs16-16.17.0-150400.3.6.1",
            "Container bci/node:16:npm16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-devel-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:nodejs16-docs-16.17.0-150400.3.6.1",
            "SUSE Linux Enterprise Module for Web and Scripting 15 SP4:npm16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:corepack16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-devel-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:nodejs16-docs-16.17.0-150400.3.6.1",
            "openSUSE Leap 15.4:npm16-16.17.0-150400.3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}