{
  "Title": "Security update for conmon, libcontainers-common, libseccomp, podman",
  "Tracking": {
    "ID": "SUSE-SU-2022:23018-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2022-02-25T12:54:40Z",
    "CurrentReleaseDate": "2022-02-25T12:54:40Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2022-02-25T12:54:40Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for conmon, libcontainers-common, libseccomp, podman",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for conmon, libcontainers-common, libseccomp, podman fixes the following issues:\n\npodman was updated to 3.4.4.\n\nSecurity issues fixed:\n\n\n- fix CVE-2021-41190 [bsc#1193273], opencontainers: OCI manifest and index parsing confusion\n- fix CVE-2021-4024  [bsc#1193166], podman machine spawns gvproxy with port binded to all IPs\n- fix CVE-2021-20199 [bsc#1181640], Remote traffic to rootless containers is seen as orginating from localhost\n\n- Add: Provides: podman:/usr/bin/podman-remote subpackage for a clearer upgrade\n  path from podman \u003c 3.1.2\n\nUpdate to version 3.4.4:\n\n  * Bugfixes\n\n    - Fixed a bug where the podman exec command would, under some circumstances,\n      print a warning message about failing to move conmon to the appropriate cgroup (#12535).\n    - Fixed a bug where named volumes created as part of container creation\n      (e.g. podman run --volume avolume:/a/mountpoint or similar) would be\n      mounted with incorrect permissions (#12523).\n    - Fixed a bug where the podman-remote create and podman-remote run commands\n      did not properly handle the --entrypoint='' option (to clear the container's entrypoint) (#12521).\n\n- Update to version 3.4.3:\n\n  * Security\n\n    - This release addresses CVE-2021-4024, where the podman machine command opened the gvproxy API (used to forward ports to podman machine VMs) to the public internet on port 7777.\n    - This release addresses CVE-2021-41190, where incomplete specification of behavior regarding image manifests could lead to inconsistent decoding on different clients.\n\n  * Features\n\n    - The --secret type=mount option to podman create and podman run supports a new option, target=, which specifies where in the container the secret will be mounted (#12287).\n\n  * Bugfixes\n\n    - Fixed a bug where rootless Podman would occasionally print warning messages about failing to move the pause process to a new cgroup (#12065).\n    - Fixed a bug where the podman run and podman create commands would, when pulling images, still require TLS even with registries set to Insecure via config file (#11933).\n    - Fixed a bug where the podman generate systemd command generated units that depended on multi-user.target, which has been removed from some distributions (#12438).\n    - Fixed a bug where Podman could not run containers with images that had /etc/ as a symlink (#12189).\n    - Fixed a bug where the podman logs -f command would, when using the journald logs backend, exit immediately if the container had previously been restarted (#12263).\n    - Fixed a bug where, in containers on VMs created by podman machine, the host.containers.internal name pointed to the VM, not the host system (#11642).\n    - Fixed a bug where containers and pods created by the podman play kube command in VMs managed by podman machine would not automatically forward ports from the host machine (#12248).\n    - Fixed a bug where podman machine init would fail on OS X when GNU Coreutils was installed (#12329).\n    - Fixed a bug where podman machine start would exit before SSH on the started VM was accepting connections (#11532).\n    - Fixed a bug where the podman run command with signal proxying (--sig-proxy) enabled could print an error if it attempted to send a signal to a container that had just exited (#8086).\n    - Fixed a bug where the podman stats command would not return correct information for containers running Systemd as PID1 (#12400).\n    - Fixed a bug where the podman image save command would fail on OS X when writing the image to STDOUT (#12402).\n    - Fixed a bug where the podman ps command did not properly handle PS arguments which contained whitespace (#12452).\n    - Fixed a bug where the podman-remote wait command could fail to detect that the container exited and return an error under some circumstances (#12457).\n    - Fixed a bug where the Windows MSI installer for podman-remote would break the PATH environment variable by adding an extra ' (#11416).\n\n  * API\n\n    - The Libpod Play Kube endpoint now also accepts ConfigMap YAML as part of its payload, and will use provided any ConfigMap to configure provided pods and services.\n    - Fixed a bug where the Compat Create endpoint for Containers would not always create the container's working directory if it did not exist (#11842).\n    - Fixed a bug where the Compat Create endpoint for Containers returned an incorrect error message with 404 errors when the requested image was not found (#12315).\n    - Fixed a bug where the Compat Create endpoint for Containers did not properly handle the HostConfig.Mounts field (#12419).\n    - Fixed a bug where the Compat Archive endpoint for Containers did not properly report errors when the operation failed (#12420).\n    - Fixed a bug where the Compat Build endpoint for Images ignored the layers query parameter (for caching intermediate layers from the build) (#12378).\n    - Fixed a bug where the Compat Build endpoint for Images did not report errors in a manner compatible with Docker (#12392).\n    - Fixed a bug where the Compat Build endpoint for Images would fail to build if the context directory was a symlink (#12409).\n    - Fixed a bug where the Compat List endpoint for Images included manifest lists (and not just images) in returned results (#12453).\n\n- Update to version 3.4.2:\n\n  * Fixed a bug where podman tag could not tag manifest lists (#12046).\n  * Fixed a bug where built-in volumes specified by images would not be\n    created correctly under some circumstances.\n  * Fixed a bug where, when using Podman Machine on OS X, containers in pods\n    did not have working port forwarding from the host (#12207).\n  * Fixed a bug where the podman network reload command command on containers\n    using the slirp4netns network mode and the rootlessport port forwarding\n    driver would make an unnecessary attempt to restart rootlessport\n    on containers that did not forward ports.\n  * Fixed a bug where the podman generate kube command would generate YAML\n    including some unnecessary (set to default) fields (e.g. empty SELinux and\n    DNS configuration blocks, and the privileged flag when set to false) (#11995).\n  * Fixed a bug where the podman pod rm command could, if interrupted at the right moment,\n    leave a reference to an already-removed infra container behind (#12034).\n  * Fixed a bug where the podman pod rm command would not remove pods with\n    more than one container if all containers save for the infra container\n    were stopped unless --force was specified (#11713).\n  * Fixed a bug where the --memory flag to podman run and podman create did\n    not accept a limit of 0 (which should specify unlimited memory) (#12002).\n  * Fixed a bug where the remote Podman client's podman build command could\n    attempt to build a Dockerfile in the working directory of the podman\n    system service instance instead of the Dockerfile specified by the user (#12054).\n  * Fixed a bug where the podman logs --tail command could function improperly\n    (printing more output than requested) when the journald log driver was used.\n  * Fixed a bug where containers run using the slirp4netns network mode with\n    IPv6 enabled would not have IPv6 connectivity until several seconds after they started (#11062).\n  * Fixed a bug where some Podman commands could cause an extra dbus-daemon\n    process to be created (#9727).\n  * Fixed a bug where rootless Podman would sometimes print warnings\n    about a failure to move the pause process into a given CGroup (#12065).\n  * Fixed a bug where the checkpointed field in podman inspect on a container\n    was not set to false after a container was restored.\n  * Fixed a bug where the podman system service command would print\n    overly-verbose logs about request IDs (#12181).\n  * Fixed a bug where Podman could, when creating a new container without a name\n    explicitly specified by the user, sometimes use an auto-generated name already\n    in use by another container if multiple containers were being created in parallel (#11735).\n\nUpdate to version 3.4.1:\n\n  * Bugfixes\n\n    - Fixed a bug where podman machine init could, under some circumstances,\n      create invalid machine configurations which could not be started (#11824).\n    - Fixed a bug where the podman machine list command would not properly\n      populate some output fields.\n    - Fixed a bug where podman machine rm could leave dangling sockets from\n      the removed machine (#11393).\n    - Fixed a bug where podman run --pids-limit=-1 was not supported (it now\n      sets the PID limit in the container to unlimited) (#11782).\n    - Fixed a bug where podman run and podman attach could throw errors about\n      a closed network connection when STDIN was closed by the client (#11856).\n    - Fixed a bug where the podman stop command could fail when run on a\n      container that had another podman stop command run on it previously.\n    - Fixed a bug where the --sync flag to podman ps was nonfunctional.\n    - Fixed a bug where the Windows and OS X remote clients' podman stats\n      command would fail (#11909).\n    - Fixed a bug where the podman play kube command did not properly handle\n      environment variables whose values contained an = (#11891).\n    - Fixed a bug where the podman generate kube command could generate\n      invalid annotations when run on containers with volumes that use SELinux\n      relabelling (:z or :Z) (#11929).\n    - Fixed a bug where the podman generate kube command would generate YAML\n      including some unnecessary (set to default) fields (e.g. user and group,\n      entrypoint, default protocol for forwarded ports) (#11914, #11915, and #11965).\n    - Fixed a bug where the podman generate kube command could, under some\n      circumstances, generate YAML including an invalid targetPort field for\n      forwarded ports (#11930).\n    - Fixed a bug where rootless Podman's podman info command could, under\n      some circumstances, not read available CGroup controllers (#11931).\n    - Fixed a bug where podman container checkpoint --export would fail to\n      checkpoint any container created with --log-driver=none (#11974).\n\n  * API\n\n    - Fixed a bug where the Compat Create endpoint for Containers could panic\n      when no options were passed to a bind mount of tmpfs (#11961).\n\nUpdate to version 3.4.0:\n\n  * Features\n\n    - Pods now support init containers! Init containers are containers which run before the rest of the pod starts. There are two types of init containers: 'always', which always run before the pod is started, and 'once', which only run the first time the pod starts and are subsequently removed. They can be added using the podman create command's --init-ctr option.\n    - Support for init containers has also been added to podman play kube and podman generate kube - init containers contained in Kubernetes YAML will be created as Podman init containers, and YAML generated by Podman will include any init containers created.\n    - The podman play kube command now supports building images. If the --build option is given and a directory with the name of the specified image exists in the current working directory and contains a valid Containerfile or Dockerfile, the image will be built and used for the container.\n    - The podman play kube command now supports a new option, --teardown, which removes any pods and containers created by the given Kubernetes YAML.\n    - The podman generate kube command now generates annotations for SELinux mount options on volume (:z and :Z) that are respected by the podman play kube command.\n    - A new command has been added, podman pod logs, to return logs for all containers in a pod at the same time.\n    - Two new commands have been added, podman volume export (to export a volume to a tar file) and podman volume import) (to populate a volume from a given tar file).\n    - The podman auto-update command now supports simple rollbacks. If a container fails to start after an automatic update, it will be rolled back to the previous image and restarted again.\n    - Pods now share their user namespace by default, and the podman pod create command now supports the --userns option. This allows rootless pods to be created with the --userns=keep-id option.\n    - The podman pod ps command now supports a new filter with its --filter option, until, which returns pods created before a given timestamp.\n    - The podman image scp command has been added. This command allows images to be transferred between different hosts.\n    - The podman stats command supports a new option, --interval, to specify the amount of time before the information is refreshed.\n    - The podman inspect command now includes ports exposed (but not published) by containers (e.g. ports from --expose when --publish-all is not specified).\n    - The podman inspect command now has a new boolean value, Checkpointed, which indicates that a container was stopped as a result of a podman container checkpoint operation.\n    - Volumes created by podman volume create now support setting quotas when run atop XFS. The size and inode options allow the maximum size and maximum number of inodes consumed by a volume to be limited.\n    - The podman info command now outputs information on what log drivers, network drivers, and volume plugins are available for use (#11265).\n    - The podman info command now outputs the current log driver in use, and the variant and codename of the distribution in use.\n    - The parameters of the VM created by podman machine init (amount of disk space, memory, CPUs) can now be set in containers.conf.\n    - The podman machine ls command now shows additional information (CPUs, memory, disk size) about VMs managed by podman machine.\n    - The podman ps command now includes healthcheck status in container state for containers that have healthchecks (#11527).\n\n  * Changes\n\n    - The podman build command has a new alias, podman buildx, to improve compatibility with Docker. We have already added support for many docker buildx flags to podman build and aim to continue to do so.\n    - Cases where Podman is run without a user session or a writable temporary files directory will now produce better error messages.\n    - The default log driver has been changed from file to journald. The file driver did not properly support log rotation, so this should lead to a better experience. If journald is not available on the system, Podman will automatically revert to the file.\n    - Podman no longer depends on ip for removing networks (#11403).\n    - The deprecated --macvlan flag to podman network create now warns when it is used. It will be removed entirely in the Podman 4.0 release.\n    - The podman machine start command now prints a message when the VM is successfully started.\n    - The podman stats command can now be used on containers that are paused.\n    - The podman unshare command will now return the exit code of the command that was run in the user namespace (assuming the command was successfully run).\n    - Successful healthchecks will no longer add a healthy line to the system log to reduce log spam.\n    - As a temporary workaround for a lack of shortname prompts in the Podman remote client, VMs created by podman machine now default to only using the docker.io registry.\n\n  * Bugfixes\n\n    - Fixed a bug where whitespace in the definition of sysctls (particularly default sysctls specified in containers.conf) would cause them to be parsed incorrectly.\n    - Fixed a bug where the Windows remote client improperly validated volume paths (#10900).\n    - Fixed a bug where the first line of logs from a container run with the journald log driver could be skipped.\n    - Fixed a bug where images created by podman commit did not include ports exposed by the container.\n    - Fixed a bug where the podman auto-update command would ignore the io.containers.autoupdate.authfile label when pulling images (#11171).\n    - Fixed a bug where the --workdir option to podman create and podman run could not be set to a directory where a volume was mounted (#11352).\n    - Fixed a bug where systemd socket-activation did not properly work with systemd-managed Podman containers (#10443).\n    - Fixed a bug where environment variable secrets added to a container were not available to exec sessions launched in the container.\n    - Fixed a bug where rootless containers could fail to start the rootlessport port-forwarding service when XDG_RUNTIME_DIR was set to a long path.\n    - Fixed a bug where arguments to the --systemd option to podman create and podman run were case-sensitive (#11387).\n    - Fixed a bug where the podman manifest rm command would also remove images referenced by the manifest, not just the manifest itself (#11344).\n    - Fixed a bug where the Podman remote client on OS X would not function properly if the TMPDIR environment variable was not set (#11418).\n    - Fixed a bug where the /etc/hosts file was not guaranteed to contain an entry for localhost (this is still not guaranteed if --net=host is used; such containers will exactly match the host's /etc/hosts) (#11411).\n    - Fixed a bug where the podman machine start command could print warnings about unsupported CPU features (#11421).\n    - Fixed a bug where the podman info command could segfault when accessing cgroup information.\n    - Fixed a bug where the podman logs -f command could hang when a container exited (#11461).\n    - Fixed a bug where the podman generate systemd command could not be used on containers that specified a restart policy (#11438).\n    - Fixed a bug where the remote Podman client's podman build command would fail to build containers if the UID and GID on the client were higher than 65536 (#11474).\n    - Fixed a bug where the remote Podman client's podman build command would fail to build containers if the context directory was a symlink (#11732).\n    - Fixed a bug where the --network flag to podman play kube was not properly parsed when a non-bridge network configuration was specified.\n    - Fixed a bug where the podman inspect command could error when the container being inspected was removed as it was being inspected (#11392).\n    - Fixed a bug where the podman play kube command ignored the default pod infra image specified in containers.conf.\n    - Fixed a bug where the --format option to podman inspect was nonfunctional under some circumstances (#8785).\n    - Fixed a bug where the remote Podman client's podman run and podman exec commands could skip a byte of output every 8192 bytes (#11496).\n    - Fixed a bug where the podman stats command would print nonsensical results if the container restarted while it was running (#11469).\n    - Fixed a bug where the remote Podman client would error when STDOUT was redirected on a Windows client (#11444).\n    - Fixed a bug where the podman run command could return 0 when the application in the container exited with 125 (#11540).\n    - Fixed a bug where containers with --restart=always set using the rootlessport port-forwarding service could not be restarted automatically.\n    - Fixed a bug where the --cgroups=split option to podman create and podman run was silently discarded if the container was part of a pod.\n    - Fixed a bug where the podman container runlabel command could fail if the image name given included a tag.\n    - Fixed a bug where Podman could add an extra 127.0.0.1 entry to /etc/hosts under some circumstances (#11596).\n    - Fixed a bug where the remote Podman client's podman untag command did not properly handle tags including a digest (#11557).\n    - Fixed a bug where the --format option to podman ps did not properly support the table argument for tabular output.\n    - Fixed a bug where the --filter option to podman ps did not properly handle filtering by healthcheck status (#11687).\n    - Fixed a bug where the podman run and podman start --attach commands could race when retrieving the exit code of a container that had already been removed resulting in an error (e.g. by an external podman rm -f) (#11633).\n    - Fixed a bug where the podman generate kube command would add default environment variables to generated YAML.\n    - Fixed a bug where the podman generate kube command would add the default CMD from the image to generated YAML (#11672).\n    - Fixed a bug where the podman rm --storage command could fail to remove containers under some circumstances (#11207).\n    - Fixed a bug where the podman machine ssh command could fail when run on Linux (#11731).\n    - Fixed a bug where the podman stop command would error when used on a container that was already stopped (#11740).\n    - Fixed a bug where renaming a container in a pod using the podman rename command, then removing the pod using podman pod rm, could cause Podman to believe the new name of the container was permanently in use, despite the container being removed (#11750).\n\n  * API\n\n    - The Libpod Pull endpoint for Images now has a new query parameter, quiet, which (when set to true) suppresses image pull progress reports (#10612).\n    - The Compat Events endpoint now includes several deprecated fields from the Docker v1.21 API for improved compatibility with older clients.\n    - The Compat List and Inspect endpoints for Images now prefix image IDs with sha256: for improved Docker compatibility (#11623).\n    - The Compat Create endpoint for Containers now properly sets defaults for healthcheck-related fields (#11225).\n    - The Compat Create endpoint for Containers now supports volume options provided by the Mounts field (#10831).\n    - The Compat List endpoint for Secrets now supports a new query parameter, filter, which allows returned results to be filtered.\n    - The Compat Auth endpoint now returns the correct response code (500 instead of 400) when logging into a registry fails.\n    - The Version endpoint now includes information about the OCI runtime and Conmon in use (#11227).\n    - Fixed a bug where the X-Registry-Config header was not properly handled, leading to errors when pulling images (#11235).\n    - Fixed a bug where invalid query parameters could cause a null pointer dereference when creating error messages.\n    - Logging of API requests and responses at trace level has been greatly improved, including the addition of an X-Reference-Id header to correlate requests and responses (#10053).\n\nUpdate to version 3.3.1:\n\n  * Bugfixes\n\n    - Fixed a bug where unit files created by podman generate systemd could\n      not cleanup shut down containers when stopped by systemctl stop (#11304).\n    - Fixed a bug where podman machine commands would not properly locate\n      the gvproxy binary in some circumstances.\n    - Fixed a bug where containers created as part of a pod using the\n      --pod-id-file option would not join the pod's network namespace (#11303).\n    - Fixed a bug where Podman, when using the systemd cgroups driver,\n      could sometimes leak dbus sessions.\n    - Fixed a bug where the until filter to podman logs and podman events\n      was improperly handled, requiring input to be negated (#11158).\n    - Fixed a bug where rootless containers using CNI networking run on\n      systems using systemd-resolved for DNS would fail to start if resolved\n      symlinked /etc/resolv.conf to an absolute path (#11358).\n\n  * API\n\n    - A large number of potential file descriptor leaks from improperly closing\n      client connections have been fixed.\n\nUpdate to version 3.3.0:\n\n  * Fix network aliases with network id\n  * machine: compute sha256 as we read the image file\n  * machine: check for file exists instead of listing directory\n  * pkg/bindings/images.nTar(): slashify hdr.Name values\n  * Volumes: Only remove from DB if plugin removal succeeds\n  * For compatibility, ignore Content-Type\n  * [v3.3] Bump c/image 5.15.2, buildah v1.22.3\n  * Implement SD-NOTIFY proxy in conmon\n  * Fix rootless cni dns without systemd stub resolver\n  * fix rootlessport flake\n  * Skip stats test in CGv1 container environments\n  * Fix AVC denials in tests of volume mounts\n  * Restore buildah-bud test requiring new images\n  * Revert '.cirrus.yml: use fresh images for all VMs'\n  * Fix device tests using ls test files\n  * Enhance priv. dev. check\n  * Workaround host availability of /dev/kvm\n  * Skip cgroup-parent test due to frequent flakes\n  * Cirrus: Fix not uploading logformatter html\n\nSwitch to crun (bsc#1188914)\n\nUpdate to version 3.2.3:\n\n  * Bump to v3.2.3\n  * Update release notes for v3.2.3\n  * vendor containers/common@v0.38.16\n  * vendor containers/buildah@v1.21.3\n  * Fix race conditions in rootless cni setup\n  * CNI-in-slirp4netns: fix bind-mount for /run/systemd/resolve/stub-resolv.conf\n  * Make rootless-cni setup more robust\n  * Support uid,gid,mode options for secrets\n  * vendor containers/common@v0.38.15\n  * [CI:DOCS] podman search: clarify that results depend on implementation\n  * vendor containers/common@v0.38.14\n  * vendor containers/common@v0.38.13\n  * [3.2] vendor containers/common@v0.38.12\n  * Bump README to v3.2.2\n  * Bump to v3.2.3-dev\n\n- Update to version 3.2.2:\n  * Bump to v3.2.2\n  * fix systemcontext to use correct TMPDIR\n  * Scrub podman commands to use report package\n  * Fix volumes with uid and gid options\n  * Vendor in c/common v0.38.11\n  * Initial release notes for v3.2.2\n  * Fix restoring of privileged containers\n  * Fix handling of podman-remote build --device\n  * Add support for podman remote build -f - .\n  * Fix panic condition in cgroups.getAvailableControllers\n  * Fix permissions on initially created named volumes\n  * Fix building static podman-remote\n  * add correct slirp ip to /etc/hosts\n  * disable tty-size exec checks in system tests\n  * Fix resize race with podman exec -it\n  * Fix documentation of the --format option of podman push\n  * Fix systemd-resolved detection.\n  * Health Check is not handled in the compat LibpodToContainerJSON\n  * Do not use inotify for OCICNI\n  * getContainerNetworkInfo: lock netNsCtr before sync\n  * [NO TESTS NEEDED] Create /etc/mtab with the correct ownership\n  * Create the /etc/mtab file if does not exists\n  * [v3.2] cp: do not allow dir-\u003efile copying\n  * create: support images with invalid platform\n  * vendor containers/common@v0.38.10\n  * logs: k8s-file: restore poll sleep\n  * logs: k8s-file: fix spurious error logs\n  * utils: move message from warning to debug\n  * Bump to v3.2.2-dev\n\n- Update to version 3.2.1:\n  * Bump to v3.2.1\n  * Updated release notes for v3.2.1\n  * Fix network connect race with docker-compose\n  * Revert 'Ensure minimum API version is set correctly in tests'\n  * Fall back to string for dockerfile parameter\n  * remote events: fix --stream=false\n  * [CI:DOCS] fix incorrect network remove api doc\n  * remote: always send resize before the container starts\n  * remote events: support labels\n  * remote pull: cancel pull when connection is closed\n  * Fix network prune api docs\n  * Improve systemd-resolved detection\n  * logs: k8s-file: fix race\n  * Fix image prune --filter cmd behavior\n  * Several shell completion fixes\n  * podman-remote build should handle -f option properly\n  * System tests: deal with crun 0.20.1\n  * Fix build tags for pkg/machine...\n  * Fix pre-checkpointing\n  * container: ignore named hierarchies\n  * [v3.2] vendor containers/common@v0.38.9\n  * rootless: fix fast join userns path\n  * [v3.2] vendor containers/common@v0.38.7\n  * [v3.2] vendor containers/common@v0.38.6\n  * Correct qemu options for Intel macs\n  * Ensure minimum API version is set correctly in tests\n  * Bump to v3.2.1-dev\n\n- Update to version 3.2.0:\n  * Bump to v3.2.0\n  * Fix network create macvlan with subnet option\n  * Final release notes updates for v3.2.0\n  * add ipv6 nameservers only when the container has ipv6 enabled\n  * Use request context instead of background\n  * [v.3.2] events: support disjunctive filters\n  * System tests: add :Z to volume mounts\n  * generate systemd: make mounts portable\n  * vendor containers/storage@v1.31.3\n  * vendor containers/common@v0.38.5\n  * Bump to v3.2.0-dev\n  * Bump to v3.2.0-RC3\n  * Update release notes for v3.2.0-RC3\n  * Fix race on podman start --all\n  * Fix race condition in running ls container in a pod\n  * docs: --cert-dir: point to containers-certs.d(5)\n  * Handle hard links in different directories\n  * Improve OCI Runtime error\n  * Handle hard links in remote builds\n  * Podman info add support for status of cgroup controllers\n  * Drop container does not exist on removal to debugf\n  * Downgrade API service routing table logging\n  * add libimage events\n  * docs: generate systemd: XDG_RUNTIME_DIR\n  * Fix problem copying files when container is in host pid namespace\n  * Bump to v3.2.0-dev\n  * Bump to v3.2.0-RC2\n  * update c/common\n  * Update Cirrus DEST_BRANCH to v3.2\n  * Updated vendors of c/image, c/storage, Buildah\n  * Initial release notes for v3.2.0-RC2\n  * Add script for identifying commits in release branches\n  * Add host.containers.internal entry into container's etc/hosts\n  * image prune: remove unused images only with `--all`\n  * podman network reload add rootless support\n  * Use more recent `stale` release...\n  * network tutorial: update with rootless cni changes\n  * [CI:DOCS] Update first line in intro page\n  * Use updated VM images + updated automation tooling\n  * auto-update service: prune images\n  * make vendor\n  * fix system upgrade tests\n  * Print 'extracting' only on compressed file\n  * podman image tree: restore previous behavior\n  * fix network restart always test\n  * fix incorrect log driver in podman container image\n  * Add support for cli network prune --filter flag\n  * Move filter parsing to common utils\n  * Bump github.com/containers/storage from 1.30.2 to 1.30.3\n  * Update nix pin with `make nixpkgs`\n  * [CI:DOCS] hack/bats - new helper for running system tests\n  * fix restart always with slirp4netns\n  * Bump github.com/opencontainers/runc from 1.0.0-rc93 to 1.0.0-rc94\n  * Bump github.com/coreos/go-systemd/v22 from 22.3.1 to 22.3.2\n  * Add host.serviceIsRemote to podman info results\n  * Add client disconnect to build handler loop\n  * Remove obsolete skips\n  * Fix podman-remote build --rm=false ...\n  * fix: improved 'containers/{name}/wait' endpoint\n  * Bump github.com/containers/storage from 1.30.1 to 1.30.2\n  * Add envars to the generated systemd unit\n  * fix: use UTC Time Stamps in response JSON\n  * fix container startup for empty pidfile\n  * Kube like pods should share ipc,net,uts by default\n  * fix: compat API 'images/get' for multiple images\n  * Revert escaped double dash man page flag syntax\n  * Report Download complete in Compatibility mode\n  * Add documentation on short-names\n  * Bump github.com/docker/docker\n  * Adds support to preserve auto update labels in generate and play kube\n  * [CI:DOCS] Stop conversion of `--` into en dash\n  * Revert Patch to relabel if selinux not enabled\n  * fix per review request\n  * Add support for environment variable secrets\n  * fix pre review request\n  * Fix infinite loop in isPathOnVolume\n  * Add containers.conf information for changing defaults\n  * CI: run rootless tests under ubuntu\n  * Fix wrong macvlan PNG in networking doc.\n  * Add restart-policy to container filters \u0026 --filter to podman start\n  * Fixes docker-compose cannot set static ip when use ipam\n  * channel: simplify implementation\n  * build: improve regex for iidfile\n  * Bump github.com/onsi/gomega from 1.11.0 to 1.12.0\n  * cgroup: fix rootless --cgroup-parent with pods\n  * fix: docker APIv2 `images/get`\n  * codespell cleanup\n  * Minor podmanimage docs updates.\n  * Fix handling of runlabel IMAGE and NAME\n  * Bump to v3.2.0-dev\n  * Bump to v3.2.0-rc1\n  * rootless: improve automatic range split\n  * podman: set volatile storage flag for --rm containers\n  * Bump github.com/onsi/ginkgo from 1.16.1 to 1.16.2\n  * Bump github.com/containers/image/v5 from 5.11.1 to 5.12.0\n  * migrate Podman to containers/common/libimage\n  * Add filepath glob support to --security-opt unmask\n  * Force log_driver to k8s-file for containers in containers\n  * add --mac-address to podman play kube\n  * compat api: Networks must be empty instead of null\n  * System tests: honor $OCI_RUNTIME (for CI)\n  * is this a bug?\n  * system test image: add arm64v8 image\n  * Fix troubleshooting documentation on handling sublemental groups.\n  * Add --all to podman start\n  * Fix variable reference typo. in multi-arch image action\n  * cgroup: always honor --cgroup-parent with cgroupfs\n  * Bump github.com/uber/jaeger-client-go\n  * Don't require tests for github-actions \u0026 metadata\n  * Detect if in podman machine virtual vm\n  * Fix multi-arch image workflow typo\n  * [CI:DOCS] Add titles to remote docs (windows)\n  * Remove unused VolumeList* structs\n  * Cirrus: Update F34beta -\u003e F34\n  * Update container image docs + fix unstable execution\n  * Bump github.com/containers/storage from 1.30.0 to 1.30.1\n  * TODO complete\n  * Docker returns 'die' status rather then 'died' status\n  * Check if another VM is running on machine start\n  * [CI:DOCS] Improve titles of command HTML pages\n  * system tests: networking: fix another race condition\n  * Use seccomp_profile as default profile if defined in containers.conf\n  * Bump github.com/json-iterator/go from 1.1.10 to 1.1.11\n  * Vendored\n  * Autoupdate local label functional\n  * System tests: fix two race conditions\n  * Add more documentation on conmon\n  * Allow docker volume create API to pass without name\n  * Cirrus: Update Ubuntu images to 21.04\n  * Skip blkio-weight test when no kernel BFQ support\n  * rootless: Tell the user what was led to the error, not just what it is\n  * Add troubleshooting advice about the --userns option.\n  * Fix images prune filter until\n  * Fix logic for pushing stable multi-arch images\n  * Fixes generate kube incorrect when bind-mounting '/' and '/root'\n  * libpod/image: unit tests: don't use system's registries.conf.d\n  * runtime: create userns when CAP_SYS_ADMIN is not present\n  * rootless: attempt to copy current mappings first\n  * [CI:DOCS] Restore missing content to manpages\n  * [CI:DOCS] Fix Markdown layout bugs\n  * Fix podman ps --filter ancestor to match exact ImageName/ImageID\n  * Add machine-enabled to containers.conf for machine\n  * Several multi-arch image build/push fixes\n  * Add podman run --timeout option\n  * Parse slirp4netns net options with compat api\n  * Fix rootlesskit port forwarder with custom slirp cidr\n  * Fix removal race condition in ListContainers\n  * Add github-action workflow to build/push multi-arch\n  * rootless: if root is not sub?id raise a debug message\n  * Bump github.com/containers/common from 0.36.0 to 0.37.0\n  * Add go template shell completion for --format\n  * Add --group-add keep-groups: suplimentary groups into container\n  * Fixes from make codespell\n  * Typo fix to usage text of --compress option\n  * corrupt-image test: fix an oops\n  * Add --noheading flag to all list commands\n  * Bump github.com/containers/storage from 1.29.0 to 1.30.0\n  * Bump github.com/containers/image/v5 from 5.11.0 to 5.11.1\n  * [CI:DOCS] Fix Markdown table layout bugs\n  * podman-remote should show podman.sock info\n  * rmi: don't break when the image is missing a manifest\n  * [CI:DOCS] Rewrite --uidmap doc in podman-create.1.md and podman-run.1.md\n  * Add support for CDI device configuration\n  * [CI:DOCS] Add missing dash to verbose option\n  * Bump github.com/uber/jaeger-client-go\n  * Remove an advanced layer diff function\n  * Ensure mount destination is clean, no trailing slash\n  * add it for inspect pidfile\n  * [CI:DOCS] Fix introduction page typo\n  * support pidfile on container restore\n  * fix start it\n  * skip pidfile test on remote\n  * improve document\n  * set pidfile default value int containerconfig\n  * add pidfile in inspection\n  * add pidfile it for container start\n  * skip pidfile it on remote\n  * Modify according to comments\n  * WIP: drop test requirement\n  * runtime: bump required conmon version\n  * runtime: return findConmon to libpod\n  * oci: drop ExecContainerCleanup\n  * oci: use `--full-path` option for conmon\n  * use AttachSocketPath when removing conmon files\n  * hide conmon-pidfile flag on remote mode\n  * Fix possible panic in libpod/image/prune.go\n  * add --ip to podman play kube\n  * add flag autocomplete\n  * add ut\n  * add flag '--pidfile' for podman create/run\n  * Add network bindings tests: remove and list\n  * Fix build with GO111MODULE=off\n  * system tests: build --pull-never: deal with flakes\n  * compose test: diagnose flakes v3\n  * podman play kube apply correct log driver\n  * Fixes podman-remote save to directories does not work\n  * Bump github.com/rootless-containers/rootlesskit from 0.14.1 to 0.14.2\n  * Update documentation of podman-run to reflect volume 'U' option\n  * Fix flake on failed podman-remote build : try 2\n  * compose test: ongoing efforts to diagnose flakes\n  * Test that we don't error out on advertised --log-level values\n  * At trace log level, print error text using %+v instead of %v\n  * pkg/errorhandling.JoinErrors: don't throw away context for lone errors\n  * Recognize --log-level=trace\n  * Fix flake on failed podman-remote build\n  * System tests: fix racy podman-inspect\n  * Fixes invalid expression in save command\n  * Bump github.com/containers/common from 0.35.4 to 0.36.0\n  * Update nix pin with `make nixpkgs`\n  * compose test: try to get useful data from flakes\n  * Remove in-memory state implementation\n  * Fix message about runtime to show only the actual runtime\n  * System tests: setup: better cleanup of stray images\n  * Bump github.com/containers/ocicrypt from 1.1.0 to 1.1.1\n  * Reflect current state of prune implementation in docs\n  * Do not delete container twice\n  * [CI:DOCS] Correct status code for /pods/create\n  * vendor in containers/storage v1.29.0\n  * cgroup: do not set cgroup parent when rootless and cgroupfs\n  * Overhaul Makefile binary and release worflows\n  * Reorganize Makefile with sections and guide\n  * Simplify Makefile help target\n  * Don't shell to obtain current directory\n  * Remove unnecessary/not-needed release.txt target\n  * Fix incorrect version number output\n  * Exclude .gitignore from test req.\n  * Fix handling of $NAME and $IMAGE in runlabel\n  * Update podman image Dockerfile to support Podman in container\n  * Bump github.com/containers/image/v5 from 5.10.5 to 5.11.0\n  * Fix slashes in socket URLs\n  * Add network prune filters support to bindings\n  * Add support for play/generate kube volumes\n  * Update manifest API endpoints\n  * Fix panic when not giving a machine name for ssh\n  * cgroups: force 64 bits to ParseUint\n  * Bump k8s.io/api from 0.20.5 to 0.21.0\n  * [CI:DOCS] Fix formatting of podman-build man page\n  * buildah-bud tests: simplify\n  * Add missing return\n  * Bump github.com/onsi/ginkgo from 1.16.0 to 1.16.1\n  * speed up CI handling of images\n  * Volumes prune endpoint should use only prune filters\n  * Cirrus: Use Fedora 34beta images\n  * Bump go.sum + Makefile for golang 1.16\n  * Exempt Makefile changes from test requirements\n  * Adjust libpod API Container Wait documentation to the code\n  * [CI:DOCS] Update swagger definition of inspect manifest\n  * use updated ubuntu images\n  * podman unshare: add --rootless-cni to join the ns\n  * Update swagger-check\n  * swagger: remove name wildcards\n  * Update buildah-bud diffs\n  * Handle podman-remote --arch, --platform, --os\n  * buildah-bud tests: handle go pseudoversions, plus...\n  * Fix flaking rootless compose test\n  * rootless cni add /usr/sbin to PATH if not present\n  * System tests: special case for RHEL: require runc\n  * Add --requires flag to podman run/create\n  * [CI:DOCS] swagger-check: compare operations\n  * [CI:DOCS] Polish swagger OpertionIDs\n  * [NO TESTS NEEDED] Update nix pin with `make nixpkgs`\n  * Ensure that `--userns=keep-id` sets user in config\n  * [CI:DOCS] Set all operation id to be compatibile\n  * Move operationIds to swagger:operation line\n  * swagger: add operationIds that match with docker\n  * Cirrus: Make use of shared get_ci_vm container\n  * Don't relabel volumes if running in a privileged container\n  * Allow users to override default storage opts with --storage-opt\n  * Add support for podman --context default\n  * Verify existence of auth file if specified\n  * fix machine naming conventions\n  * Initial network bindings tests\n  * Update release notes to indicate CVE fix\n  * Move socket activation check into init() and set global condition.\n  * Bump github.com/onsi/ginkgo from 1.15.2 to 1.16.0\n  * Http api tests for network prune with until filter\n  * podman-run.1.md, podman-create.1.md : Adjust Markdown layout for --userns\n  * Fix typos --uidmapping and --gidmapping\n  * Add transport and destination info to manifest doc\n  * Bump github.com/rootless-containers/rootlesskit from 0.14.0 to 0.14.1\n  * Add default template functions\n  * Fix missing podman-remote build options\n  * Bump github.com/coreos/go-systemd/v22 from 22.3.0 to 22.3.1\n  * Add ssh connection to root user\n  * Add rootless docker-compose test to the CI\n  * Use the slrip4netns dns in the rootless cni ns\n  * Cleanup the rootless cni namespace\n  * Add new docker-compose test for two networks\n  * Make the docker-compose test work rootless\n  * Remove unused rootless-cni-infra container files\n  * Only use rootless RLK when the container has ports\n  * Fix dnsname test\n  * Enable rootless network connect/disconnect\n  * Move slirp4netns functions into an extra file\n  * Fix pod infra container cni network setup\n  * Add rootless support for cni and --uidmap\n  * rootless cni without infra container\n  * Recreate until container prune tests for bindings\n  * Remove --execute from podman machine ssh\n  * Fixed podman-remote --network flag\n  * Makefile: introduce install.docker-full\n  * Makefile: ensure install.docker creates BINDIR\n  * Fix unmount doc reference in image.rst\n  * Should send the OCI runtime path not just the name to buildah\n  * podman machine shell completion\n  * Fix handling of remove --log-rusage param\n  * Fix bindings prune containers flaky test\n  * [CI:DOCS] Add local html build info to docs/README.md\n  * Add podman machine list\n  * Trim white space from /top endpoint results\n  * Remove semantic version suffices from API calls\n  * podman machine init --ignition-path\n  * Document --volume from podman-remote run/create client\n  * Update main branch to reflect the release of v3.1.0\n  * Silence podman network reload errors with iptables-nft\n  * Containers prune endpoint should use only prune filters\n  * resolve proper aarch64 image names\n  * APIv2 basic test: relax APIVersion check\n  * Add machine support for qemu-system-aarch64\n  * podman machine init user input\n  * manpage xref: helpful diagnostic for unescaped dash-dash\n  * Bump to v3.2.0-dev\n  * swagger: update system version response body\n  * buildah-bud tests: reenable pull-never test\n  * [NO TESTS NEEDED] Shrink the size of podman-remote\n  * Add powershell completions\n  * [NO TESTS NEEDED] Drop Warning to Info, if cgroups not mounted\n  * Fix long option format on docs.podman.io\n  * system tests: friendier messages for 2-arg is()\n  * service: use LISTEN_FDS\n  * man pages: correct seccomp-policy label\n  * rootless: use is_fd_inherited\n  * podman generate systemd --new do not duplicate params\n  * play kube: add support for env vars defined from secrets\n  * play kube: support optional/mandatory env var from config map\n  * play kube: prepare supporting other env source than config maps\n  * Add machine support for more Linux distros\n  * [NO TESTS NEEDED] Use same function podman-remote rmi as podman\n  * Podman machine enhancements\n  * Add problematic volume name to kube play error messages\n  * Fix podman build --pull-never\n  * [NO TESTS NEEDED] Fix for kernel without CONFIG_USER_NS\n  * [NO TESTS NEEDED] Turn on podman-remote build --isolation\n  * Fix list pods filter handling in libpod api\n  * Remove resize race condition\n  * [NO TESTS NEEDED] Vendor in containers/buildah v1.20.0\n  * Use TMPDIR when commiting images\n  * Add RequiresMountsFor= to systemd generate\n  * Bump github.com/vbauerster/mpb/v6 from 6.0.2 to 6.0.3\n  * Fix swapped dimensions from terminal.GetSize\n  * Rename podman machine create to init and clean up\n  * Correct json field name\n  * system tests: new interactive tests\n  * Improvements for machine\n  * libpod/image: unit tests: use a `registries.conf` for aliases\n  * libpod/image: unit tests: defer cleanup\n  * libpod/image: unit tests: use `require.NoError`\n  * Add --execute flag to podman machine ssh\n  * introduce podman machine\n  * Podman machine CLI and interface stub\n  * Support multi doc yaml for generate/play kube\n  * Fix filters in image http compat/libpod api endpoints\n  * Bump github.com/containers/common from 0.35.3 to 0.35.4\n  * Bump github.com/containers/storage from 1.28.0 to 1.28.1\n  * Check if stdin is a term in --interactive --tty mode\n  * [NO TESTS NEEDED] Remove /tmp/containers-users-* files on reboot\n  * [NO TESTS NEEDED] Fix rootless volume plugins\n  * Ensure manually-created volumes have correct ownership\n  * Bump github.com/rootless-containers/rootlesskit\n  * Unification of until filter across list/prune endpoints\n  * Unification of label filter across list/prune endpoints\n  * fixup\n  * fix: build endpoint for compat API\n  * [CI:DOCS] Add note to mappings for user/group userns in build\n  * Bump k8s.io/api from 0.20.1 to 0.20.5\n  * Validate passed in timezone from tz option\n  * WIP: run buildah bud tests using podman\n  * Fix containers list/prune http api filter behaviour\n  * Generate Kubernetes PersistentVolumeClaims from named volumes\n\n- Update to version 3.1.2:\n  * Bump to v3.1.2\n  * Update release notes for v3.1.2\n  * Ensure mount destination is clean, no trailing slash\n  * Fixes podman-remote save to directories does not work\n  * [CI:DOCS] Add missing dash to verbose option\n  * [CI:DOCS] Fix Markdown table layout bugs\n  * [CI:DOCS] Rewrite --uidmap doc in podman-create.1.md and podman-run.1.md\n  * rmi: don't break when the image is missing a manifest\n  * Bump containers/image to v5.11.1\n  * Bump github.com/coreos/go-systemd from 22.2.0 to 22.3.1\n  * Fix lint\n  * Bump to v3.1.2-dev\n- Split podman-remote into a subpackage\n- Add missing scriptlets for systemd units\n- Escape macros in comments\n- Drop some obsolete workarounds, including %{go_nostrip}\n\n- Update to version 3.1.1:\n  * Bump to v3.1.1\n  * Update release notes for v3.1.1\n  * podman play kube apply correct log driver\n  * Fix build with GO111MODULE=off\n  * [CI:DOCS] Set all operation id to be compatibile\n  * Move operationIds to swagger:operation line\n  * swagger: add operationIds that match with docker\n  * Fix missing podman-remote build options\n  * [NO TESTS NEEDED] Shrink the size of podman-remote\n  * Move socket activation check into init() and set global condition.\n  * rootless: use is_fd_inherited\n  * Recreate until container prune tests for bindings\n  * System tests: special case for RHEL: require runc\n  * Document --volume from podman-remote run/create client\n  * Containers prune endpoint should use only prune filters\n  * Trim white space from /top endpoint results\n  * Fix unmount doc reference in image.rst\n  * Fix handling of remove --log-rusage param\n  * Makefile: introduce install.docker-full\n  * Makefile: ensure install.docker creates BINDIR\n  * Should send the OCI runtime path not just the name to buildah\n  * Fixed podman-remote --network flag\n  * podman-run.1.md, podman-create.1.md : Adjust Markdown layout for --userns\n  * Fix typos --uidmapping and --gidmapping\n  * Add default template functions\n  * Don't relabel volumes if running in a privileged container\n  * Allow users to override default storage opts with --storage-opt\n  * Add transport and destination info to manifest doc\n  * Verify existence of auth file if specified\n  * Ensure that `--userns=keep-id` sets user in config\n  * [CI:DOCS] Update swagger definition of inspect manifest\n  * Volumes prune endpoint should use only prune filters\n  * Adjust libpod API Container Wait documentation to the code\n  * Add missing return\n  * [CI:DOCS] Fix formatting of podman-build man page\n  * cgroups: force 64 bits to ParseUint\n  * Fix slashes in socket URLs\n  * [CI:DOCS] Correct status code for /pods/create\n  * cgroup: do not set cgroup parent when rootless and cgroupfs\n  * Reflect current state of prune implementation in docs\n  * Do not delete container twice\n  * Test that we don't error out on advertised --log-level values\n  * At trace log level, print error text using %+v instead of %v\n  * pkg/errorhandling.JoinErrors: don't throw away context for lone errors\n  * Recognize --log-level=trace\n  * Fix message about runtime to show only the actual runtime\n  * Fix handling of $NAME and $IMAGE in runlabel\n  * Fix flake on failed podman-remote build : try 2\n  * Fix flake on failed podman-remote build\n  * Update documentation of podman-run to reflect volume 'U' option\n  * Fixes invalid expression in save command\n  * Fix possible panic in libpod/image/prune.go\n  * Update all containers/ project vendors\n  * Fix tests\n  * Bump to v3.1.1-dev\n\n- Update to version 3.1.0:\n  * Bump to v3.1.0\n  * Fix test failure\n  * Update release notes for v3.1.0 final release\n  * [NO TESTS NEEDED] Turn on podman-remote build --isolation\n  * Fix long option format on docs.podman.io\n  * Fix containers list/prune http api filter behaviour\n  * [CI:DOCS] Add note to mappings for user/group userns in build\n  * Validate passed in timezone from tz option\n  * Generate Kubernetes PersistentVolumeClaims from named volumes\n  * libpod/image: unit tests: use a `registries.conf` for aliases\n- Require systemd 241 or newer due to podman dependency go-systemd v22,\n  otherwise build will fail with unknown C name errors\n\n- Create docker subpackage to allow replacing docker with\n  corresponding aliases to podman.\n\n- Update to v3.0.1\n  * Changes\n    - Several frequently-occurring WARN level log messages have been downgraded to INFO or DEBUG to not clutter terminal output.\nBugfixes\n    - Fixed a bug where the Created field of podman ps --format=json was formatted as a string instead of an Unix timestamp (integer) (#9315).\n    - Fixed a bug where failing lookups of individual layers during the podman images command would cause the whole command to fail without printing output.\n    - Fixed a bug where --cgroups=split did not function properly on cgroups v1 systems.\n    - Fixed a bug where mounting a volume over an directory in the container that existed, but was empty, could fail (#9393).\n    - Fixed a bug where mounting a volume over a directory in the container that existed could copy the entirety of the container's rootfs, instead of just the directory mounted over, into the volume (#9415).\n    - Fixed a bug where Podman would treat the --entrypoint=[''] option to podman run and podman create as a literal empty string in the entrypoint, when instead it should have been ignored (#9377).\n    - Fixed a bug where Podman would set the HOME environment variable to '' when the container ran as a user without an assigned home directory (#9378).\n    - Fixed a bug where specifying a pod infra image that had no tags (by using its ID) would cause podman pod create to panic (#9374).\n    - Fixed a bug where the --runtime option was not properly handled by the podman build command (#9365).\n    - Fixed a bug where Podman would incorrectly print an error message related to the remote API when the remote API was not in use and starting Podman failed.\n    - Fixed a bug where Podman would change ownership of a container's working directory, even if it already existed (#9387).\n    - Fixed a bug where the podman generate systemd --new command would incorrectly escape %t when generating the path for the PID file (#9373).\n    - Fixed a bug where Podman could, when run inside a Podman container with the host's containers/storage directory mounted into the container, erroneously detect a reboot and reset container state if the temporary directory was not also mounted in (#9191).\n    - Fixed a bug where some options of the podman build command (including but not limited to --jobs) were nonfunctional (#9247).\n  * API\n    - Fixed a breaking change to the Libpod Wait API for Containers where the Conditions parameter changed type in Podman v3.0 (#9351).\n    - Fixed a bug where the Compat Create endpoint for Containers did not properly handle forwarded ports that did not specify a host port.\n    - Fixed a bug where the Libpod Wait endpoint for Containers could write duplicate headers after an error occurred.\n    - Fixed a bug where the Compat Create endpoint for Images would not pull images that already had a matching tag present locally, even if a more recent version was available at the registry (#9232).\n    - The Compat Create endpoint for Images has had its compatibility with Docker improved, allowing its use with the docker-java library.\n  * Misc\n    - Updated Buildah to v1.19.4\n    - Updated the containers/storage library to v1.24.6\n- Changes from v3.0.0\n  * Features\n    - Podman now features initial support for Docker Compose.\n    - Added the podman rename command, which allows containers to be renamed after they are created (#1925).\n    - The Podman remote client now supports the podman copy command.\n    - A new command, podman network reload, has been added. This command will re-configure the network of all running containers, and can be used to recreate firewall rules lost when the system firewall was reloaded (e.g. via firewall-cmd --reload).\n    - Podman networks now have IDs. They can be seen in podman network ls and can be used when removing and inspecting networks. Existing networks receive IDs automatically.\n    - Podman networks now also support labels. They can be added via the --label option to network create, and podman network ls can filter labels based on them.\n    - The podman network create command now supports setting bridge MTU and VLAN through the --opt option (#8454).\n    - The podman container checkpoint and podman container restore commands can now checkpoint and restore containers that include volumes.\n    - The podman container checkpoint command now supports the --with-previous and --pre-checkpoint options, and the podman container restore command now support the --import-previous option. These add support for two-step checkpointing with lowered dump times.\n    - The podman push command can now push manifest lists. Podman will first attempt to push as an image, then fall back to pushing as a manifest list if that fails.\n    - The podman generate kube command can now be run on multiple containers at once, and will generate a single pod containing all of them.\n    - The podman generate kube and podman play kube commands now support Kubernetes DNS configuration, and will preserve custom DNS configuration when exporting or importing YAML (#9132).\n    - The podman generate kube command now properly supports generating YAML for containers and pods creating using host networking (--net=host) (#9077).\n    - The podman kill command now supports a --cidfile option to kill containers given a file containing the container's ID (#8443).\n    - The podman pod create command now supports the --net=none option (#9165).\n    - The podman volume create command can now specify volume UID and GID as options with the UID and GID fields passed to the the --opt option.\n    - Initial support has been added for Docker Volume Plugins. Podman can now define available plugins in containers.conf and use them to create volumes with podman volume create --driver.\n    - The podman run and podman create commands now support a new option, --platform, to specify the platform of the image to be used when creating the container.\n    - The --security-opt option to podman run and podman create now supports the systempaths=unconfined option to unrestrict access to all paths in the container, as well as mask and unmask options to allow more granular restriction of container paths.\n    - The podman stats --format command now supports a new format specified, MemUsageBytes, which prints the raw bytes of memory consumed by a container without human-readable formatting #8945.\n    - The podman ps command can now filter containers based on what pod they are joined to via the pod filter (#8512).\n    - The podman pod ps command can now filter pods based on what networks they are joined to via the network filter.\n    The podman pod ps command can now print information on what networks a pod is joined to via the .Networks specifier to the --format option.\n    - The podman system prune command now supports filtering what containers, pods, images, and volumes will be pruned.\n    - The podman volume prune commands now supports filtering what volumes will be pruned.\n    - The podman system prune command now includes information on space reclaimed (#8658).\n    - The podman info command will now properly print information about packages in use on Gentoo and Arch systems.\n    - The containers.conf file now contains an option for disabling creation of a new kernel keyring on container creation (#8384).\n    - The podman image sign command can now sign multi-arch images by producing a signature for each image in a given manifest list.\n    - The podman image sign command, when run as rootless, now supports per-user registry configuration files in $HOME/.config/containers/registries.d.\n    - Configuration options for slirp4netns can now be set system-wide via the NetworkCmdOptions configuration option in containers.conf.\n    - The MTU of slirp4netns can now be configured via the mtu= network command option (e.g. podman run --net slirp4netns:mtu=9000).\n  * Security\n    - A fix for CVE-2021-20199 is included. Podman between v1.8.0 and v2.2.1 used 127.0.0.1 as the source address for all traffic forwarded into rootless containers by a forwarded port; this has been changed to address the issue.\n  * Changes\n    - Shortname aliasing support has now been turned on by default. All Podman commands that must pull an image will, if a TTY is available, prompt the user about what image to pull.\n    - The podman load command no longer accepts a NAME[:TAG] argument. The presence of this argument broke CLI compatibility with Docker by making docker load commands unusable with Podman (#7387).\n    - The Go bindings for the HTTP API have been rewritten with a focus on limiting dependency footprint and improving extensibility. Read more here.\n    - The legacy Varlink API has been completely removed from Podman.\n    - The default log level for Podman has been changed from Error to Warn.\n    - The podman network create command can now create macvlan networks using the --driver macvlan option for Docker compatibility. The existing --macvlan flag has been deprecated and will be removed in Podman 4.0 some time next year.\n    - The podman inspect command has had the LogPath and LogTag fields moved into the LogConfig structure (from the root of the Inspect structure). The maximum size of the log file is also included.\n    - The podman generate systemd command no longer generates unit files using the deprecated KillMode=none option (#8615).\n    - The podman stop command now releases the container lock while waiting for it to stop - as such, commands like podman ps will no longer block until podman stop completes (#8501).\n    - Networks created with podman network create --internal no longer use the dnsname plugin. This configuration never functioned as expected.\n    - Error messages for the remote Podman client have been improved when it cannot connect to a Podman service.\n    - Error messages for podman run when an invalid SELinux is specified have been improved.\n    - Rootless Podman features improved support for containers with a single user mapped into the rootless user namespace.\n    - Pod infra containers now respect default sysctls specified in containers.conf allowing for advanced configuration of the namespaces they will share.\n    - SSH public key handling for remote Podman has been improved.\n  * Bugfixes\n    - Fixed a bug where the podman history --no-trunc command would truncate the Created By field (#9120).\n    - Fixed a bug where root containers that did not explicitly specify a CNI network to join did not generate an entry for the network in use in the Networks field of the output of podman inspect (#6618).\n    - Fixed a bug where, under some circumstances, container working directories specified by the image (via the WORKDIR instruction) but not present in the image, would not be created (#9040).\n    - Fixed a bug where the podman generate systemd command would generate invalid unit files if the container was creating using a command line that included doubled braces ({{ and }}), e.g. --log-opt-tag={{.Name}} (#9034).\n    - Fixed a bug where the podman generate systemd --new command could generate unit files including invalid Podman commands if the container was created using merged short options (e.g. podman run -dt) (#8847).\n    - Fixed a bug where the podman generate systemd --new command could generate unit files that did not handle Podman commands including some special characters (e.g. $) (#9176\n    - Fixed a bug where rootless containers joining CNI networks could not set a static IP address (#7842).\n    - Fixed a bug where rootless containers joining CNI networks could not set network aliases (#8567).\n    - Fixed a bug where the remote client could, under some circumstances, not include the Containerfile when sending build context to the server (#8374).\n    - Fixed a bug where rootless Podman did not mount /sys as a new sysfs in some circumstances where it was acceptable.\n    - Fixed a bug where rootless containers that both joined a user namespace and a CNI networks would cause a segfault. These options are incompatible and now return an error.\n    - Fixed a bug where the podman play kube command did not properly handle CMD and ARGS from images (#8803).\n    - Fixed a bug where the podman play kube command did not properly handle environment variables from images (#8608).\n    - Fixed a bug where the podman play kube command did not properly print errors that occurred when starting containers.\n    - Fixed a bug where the podman play kube command errored when hostNetwork was used (#8790).\n    - Fixed a bug where the podman play kube command would always pull images when the :latest tag was specified, even if the image was available locally (#7838).\n    - Fixed a bug where the podman play kube command did not properly handle SELinux configuration, rending YAML with custom SELinux configuration unusable (#8710).\n    - Fixed a bug where the podman generate kube command incorrectly populated the args and command fields of generated YAML (#9211).\n    - Fixed a bug where containers in a pod would create a duplicate entry in the pod's shared /etc/hosts file every time the container restarted (#8921).\n    - Fixed a bug where the podman search --list-tags command did not support the --format option (#8740).\n    - Fixed a bug where the http_proxy option in containers.conf was not being respected, and instead was set unconditionally to true (#8843).\n    - Fixed a bug where rootless Podman could, on systems with a recent Conmon and users with a long username, fail to attach to containers (#8798).\n    - Fixed a bug where the podman images command would break and fail to display any images if an empty manifest list was present in storage (#8931).\n    - Fixed a bug where locale environment variables were not properly passed on to Conmon.\n    - Fixed a bug where Podman would not build on the MIPS architecture (#8782).\n    - Fixed a bug where rootless Podman could fail to properly configure user namespaces for rootless containers when the user specified a --uidmap option that included a mapping beginning with UID 0.\n    - Fixed a bug where the podman logs command using the k8s-file backend did not properly handle partial log lines with a length of 1 (#8879).\n    - Fixed a bug where the podman logs command with the --follow option did not properly handle log rotation (#8733).\n    - Fixed a bug where user-specified HOSTNAME environment variables were overwritten by Podman (#8886).\n    - Fixed a bug where Podman would applied default sysctls from containers.conf in too many situations (e.g. applying network sysctls when the container shared its network with a pod).\n    - Fixed a bug where Podman did not properly handle cases where a secondary image store was in use and an image was present in both the secondary and primary stores (#8176).\n    - Fixed a bug where systemd-managed rootless Podman containers where the user in the container was not root could fail as the container's PID file was not accessible to systemd on the host (#8506).\n    - Fixed a bug where the --privileged option to podman run and podman create would, under some circumstances, not disable Seccomp (#8849).\n    - Fixed a bug where the podman exec command did not properly add capabilities when the container or exec session were run with --privileged.\n    - Fixed a bug where rootless Podman would use the --enable-sandbox option to slirp4netns unconditionally, even when pivot_root was disabled, rendering slirp4netns unusable when pivot_root was disabled (#8846).\n    - Fixed a bug where podman build --logfile did not actually write the build's log to the logfile.\n    - Fixed a bug where the podman system service command did not close STDIN, and could display user-interactive prompts (#8700).\n    - Fixed a bug where the podman system reset command could, under some circumstances, remove all the contents of the XDG_RUNTIME_DIR directory (#8680).\n    - Fixed a bug where the podman network create command created CNI configurations that did not include a default gateway (#8748).\n    - Fixed a bug where the podman.service systemd unit provided by default used the wrong service type, and would cause systemd to not correctly register the service as started (#8751).\n    - Fixed a bug where, if the TMPDIR environment variable was set for the container engine in containers.conf, it was being ignored.\n    - Fixed a bug where the podman events command did not properly handle future times given to the --until option (#8694).\n    - Fixed a bug where the podman logs command wrote container STDERR logs to STDOUT instead of STDERR (#8683).\n    - Fixed a bug where containers created from an image with multiple tags would report that they were created from the wrong tag (#8547).\n    - Fixed a bug where container capabilities were not set properly when the --cap-add=all and --user options to podman create and podman run were combined.\n    - Fixed a bug where the --layers option to podman build was nonfunctional (#8643).\n    - Fixed a bug where the podman system prune command did not act recursively, and thus would leave images, containers, pods, and volumes present that would be removed by a subsequent call to podman system prune (#7990).\n    - Fixed a bug where the --publish option to podman run and podman create did not properly handle ports specified as a range of ports with no host port specified (#8650).\n    - Fixed a bug where --format did not support JSON output for individual fields (#8444).\n    - Fixed a bug where the podman stats command would fail when run on root containers using the slirp4netns network mode (#7883).\n    - Fixed a bug where the Podman remote client would ask for a password even if the server's SSH daemon did not support password authentication (#8498).\n    - Fixed a bug where the podman stats command would fail if the system did not support one or more of the cgroup controllers Podman supports (#8588).\n    - Fixed a bug where the --mount option to podman create and podman run did not ignore the consistency mount option.\n    - Fixed a bug where failures during the resizing of a container's TTY would print the wrong error.\n    - Fixed a bug where the podman network disconnect command could cause the podman inspect command to fail for a container until it was restarted (#9234).\n    - Fixed a bug where containers created from a read-only rootfs (using the --rootfs option to podman create and podman run) would fail (#9230).\n    - Fixed a bug where specifying Go templates to the --format option to multiple Podman commands did not support the join function (#8773).\n    - Fixed a bug where the podman rmi command could, when run in parallel on multiple images, return layer not known errors (#6510).\n    - Fixed a bug where the podman inspect command on containers displayed unlimited ulimits incorrectly (#9303).\n    - Fixed a bug where Podman would fail to start when a volume was mounted over a directory in a container that contained symlinks that terminated outside the directory and its subdirectories (#6003).\nAPI\n    - Libpod API version has been bumped to v3.0.0.\n    - All Libpod Pod APIs have been modified to properly report errors with individual containers. Cases where the operation as a whole succeeded but individual containers failed now report an HTTP 409 error (#8865).\n    - The Compat API for Containers now supports the Rename and Copy APIs.\n    - Fixed a bug where the Compat Prune APIs (for volumes, containers, and images) did not return the amount of space reclaimed in their responses.\n    - Fixed a bug where the Compat and Libpod Exec APIs for Containers would drop errors that occurred prior to the exec session successfully starting (e.g. a 'no such file' error if an invalid executable was passed) (#8281)\n    - Fixed a bug where the Volumes field in the Compat Create API for Containers was being ignored (#8649).\n    - Fixed a bug where the NetworkMode field in the Compat Create API for Containers was not handling some values, e.g. container:, correctly.\n    - Fixed a bug where the Compat Create API for Containers did not set container name properly.\n    - Fixed a bug where containers created using the Compat Create API unconditionally used Kubernetes file logging (the default specified in containers.conf is now used).\n    - Fixed a bug where the Compat Inspect API for Containers could include container states not recognized by Docker.\n    - Fixed a bug where Podman did not properly clean up after calls to the Events API when the journald backend was in use, resulting in a leak of file descriptors (#8864).\n    - Fixed a bug where the Libpod Pull endpoint for Images could fail with an index out of range error under certain circumstances (#8870).\n    - Fixed a bug where the Libpod Exists endpoint for Images could panic.\n    - Fixed a bug where the Compat List API for Containers did not support all filters (#8860).\n    - Fixed a bug where the Compat List API for Containers did not properly populate the Status field.\n    - Fixed a bug where the Compat and Libpod Resize APIs for Containers ignored the height and width parameters (#7102).\n    - Fixed a bug where the Compat Search API for Images returned an incorrectly-formatted JSON response (#8758).\n    - Fixed a bug where the Compat Load API for Images did not properly clean up temporary files.\n    - Fixed a bug where the Compat Create API for Networks could panic when an empty IPAM configuration was specified.\n    - Fixed a bug where the Compat Inspect and List APIs for Networks did not include Scope.\n    - Fixed a bug where the Compat Wait endpoint for Containers did not support the same wait conditions that Docker did.\n  * Misc\n    - Updated Buildah to v1.19.2\n    - Updated the containers/storage library to v1.24.5\n    - Updated the containers/image library to v5.10.2\n    - Updated the containers/common library to v0.33.4\n\n- Update to v2.2.1\n  * Changes\n    - Due to a conflict with a previously-removed field, we were forced to\n      modify the way image volumes (mounting images into containers using\n      --mount type=image) were handled in the database.\n      As a result, containers created in Podman 2.2.0 with image volume\n       will not have them in v2.2.1, and these containers will need to be re-created.\n  * Bugfixes\n    - Fixed a bug where rootless Podman would, on systems without the\n      XDG_RUNTIME_DIR environment variable defined, use an incorrect path\n      for the PID file of the Podman pause process, causing Podman to fail\n      to start (#8539).\n    - Fixed a bug where containers created using Podman v1.7 and earlier were\n      unusable in Podman due to JSON decode errors (#8613).\n    - Fixed a bug where Podman could retrieve invalid cgroup paths, instead\n      of erroring, for containers that were not running.\n    - Fixed a bug where the podman system reset command would print a warning\n      about a duplicate shutdown handler being registered.\n    - Fixed a bug where rootless Podman would attempt to mount sysfs in\n      circumstances where it was not allowed; some OCI runtimes (notably\n      crun) would fall back to alternatives and not fail, but others\n      (notably runc) would fail to run containers.\n    - Fixed a bug where the podman run and podman create commands would fail\n      to create containers from untagged images (#8558).\n    - Fixed a bug where remote Podman would prompt for a password even when\n      the server did not support password authentication (#8498).\n    - Fixed a bug where the podman exec command did not move the Conmon\n      process for the exec session into the correct cgroup.\n    - Fixed a bug where shell completion for the ancestor option to\n      podman ps --filter did not work correctly.\n    - Fixed a bug where detached containers would not properly clean themselves\n      up (or remove themselves if --rm was set) if the Podman command that\n      created them was invoked with --log-level=debug.\n  * API\n    - Fixed a bug where the Compat Create endpoint for Containers did not\n      properly handle the Binds and Mounts parameters in HostConfig.\n    - Fixed a bug where the Compat Create endpoint for Containers\n      ignored the Name query parameter.\n    - Fixed a bug where the Compat Create endpoint for Containers did not\n      properly handle the 'default' value for NetworkMode (this value is\n      used extensively by docker-compose) (#8544).\n    - Fixed a bug where the Compat Build endpoint for Images would sometimes\n      incorrectly use the target query parameter as the image's tag.\n  * Misc\n    - Podman v2.2.0 vendored a non-released, custom version of the\n      github.com/spf13/cobra package; this has been reverted to the latest\n      upstream release to aid in packaging.\n    - Updated the containers/image library to v5.9.0\n\n- Update to v2.2.0\n * Features\n  - Experimental support for shortname aliasing has been added. This is not enabled by default, but can be turned on by setting the environment variable CONTAINERS_SHORT_NAME_ALIASING to on. Documentation is available here and here.\n  - Initial support has been added for the podman network connect and podman network disconnect commands, which allow existing containers to modify what networks they are connected to. At present, these commands can only be used on running containers that did not specify --network=none when they were created.\n  - The podman run command now supports the --network-alias option to set network aliases (additional names the container can be accessed at from other containers via DNS if the dnsname CNI plugin is in use). Aliases can also be added and removed using the new podman network connect and podman network disconnect commands. Please note that this requires a new release (v1.1.0) of the dnsname plugin, and will only work on newly-created CNI networks.\n  - The podman generate kube command now features support for exporting container's memory and CPU limits (#7855).\n  - The podman play kube command now features support for setting CPU and Memory limits for containers (#7742).\n  - The podman play kube command now supports persistent volumes claims using Podman named volumes.\n  - The podman play kube command now supports Kubernetes configmaps via the --configmap option (#7567).\n  - The podman play kube command now supports a --log-driver option to set the log driver for created containers.\n  - The podman play kube command now supports a --start option, enabled by default, to start the pod after creating it. This allows for podman play kube to be more easily used in systemd unitfiles.\n  - The podman network create command now supports the --ipv6 option to enable dual-stack IPv6 networking for created networks (#7302).\n  - The podman inspect command can now inspect pods, networks, and volumes, in addition to containers and images (#6757).\n  - The --mount option for podman run and podman create now supports a new type, image, to mount the contents of an image into the container at a given location.\n  - The Bash and ZSH completions have been completely reworked and have received significant enhancements! Additionally, support for Fish completions and completions for the podman-remote executable have been added.\n  - The --log-opt option for podman create and podman run now supports the max-size option to set the maximum size for a container's logs (#7434).\n  - The --network option to the podman pod create command now allows pods to be configured to use slirp4netns networking, even when run as root (#6097).\n  - The podman pod stop, podman pod pause, podman pod unpause, and podman pod kill commands now work on multiple containers in parallel and should be significantly faster.\n  - The podman search command now supports a --list-tags option to list all available tags for a single image in a single repository.\n  - The podman search command can now output JSON using the --format=json option.\n  - The podman diff and podman mount commands now work with all containers in the storage library, including those not created by Podman. This allows them to be used with Buildah and CRI-O containers.\n  - The podman container exists command now features a --external option to check if a container exists not just in Podman, but also in the storage library. This will allow Podman to identify Buildah and CRI-O containers.\n  - The --tls-verify and --authfile options have been enabled for use with remote Podman.\n  - The /etc/hosts file now includes the container's name and hostname (both pointing to localhost) when the container is run with --net=none (#8095).\n  - The podman events command now supports filtering events based on the labels of the container they occurred on using the --filter label=key=value option.\n  - The podman volume ls command now supports filtering volumes based on their labels using the --filter label=key=value option.\n  - The --volume and --mount options to podman run and podman create now support two new mount propagation options, unbindable and runbindable.\n  - The name and id filters for podman pod ps now match based on a regular expression, instead of requiring an exact match.\n  - The podman pod ps command now supports a new filter status, that matches pods in a certain state.\n * Changes\n  - The podman network rm --force command will now also remove pods that are using the network (#7791).\n  - The podman volume rm, podman network rm, and podman pod rm commands now return exit code 1 if the object specified for removal does not exist, and exit code 2 if the object is in use and the --force option was not given.\n  - If /dev/fuse is passed into Podman containers as a device, Podman will open it before starting the container to ensure that the kernel module is loaded on the host and the device is usable in the container.\n  - Global Podman options that were not supported with remote operation have been removed from podman-remote (e.g. --cgroup-manager, --storage-driver).\n  - Many errors have been changed to remove repetition and be more clear as to what has gone wrong.\n  - The --storage option to podman rm is now enabled by default, with slightly changed semantics. If the given container does not exist in Podman but does exist in the storage library, it will be removed even without the --storage option. If the container exists in Podman it will be removed normally. The --storage option for podman rm is now deprecated and will be removed in a future release.\n  - The --storage option to podman ps has been renamed to --external. An alias has been added so the old form of the option will continue to work.\n  - Podman now delays the SIGTERM and SIGINT signals during container creation to ensure that Podman is not stopped midway through creating a container resulting in potential resource leakage (#7941).\n  - The podman save command now strips signatures from images it is exporting, as the formats we export to do not support signatures (#7659).\n  - A new Degraded state has been added to pods. Pods that have some, but not all, of their containers running are now considered to be Degraded instead of Running.\n  - Podman will now print a warning when conflicting network options related to port forwarding (e.g. --publish and --net=host) are specified when creating a container.\n  - The --restart on-failure and --rm options for containers no longer conflict. When both are specified, the container will be restarted if it exits with a non-zero error code, and removed if it exits cleanly (#7906).\n  - Remote Podman will no longer use settings from the client's containers.conf; defaults will instead be provided by the server's containers.conf (#7657).\n  - The podman network rm command now has a new alias, podman network remove (#8402).\n * Bugfixes\n  - Fixed a bug where podman load on the remote client did not error when attempting to load a directory, which is not yet supported for remote use.\n  - Fixed a bug where rootless Podman could hang when the newuidmap binary was not installed (#7776).\n  - Fixed a bug where the --pull option to podman run, podman create, and podman build did not match Docker's behavior.\n  - Fixed a bug where sysctl settings from the containers.conf configuration file were applied, even if the container did not join the namespace associated with a sysctl.\n  - Fixed a bug where Podman would not return the text of errors encounted when trying to run a healthcheck for a container.\n  - Fixed a bug where Podman was accidentally setting the containers environment variable in addition to the expected container environment variable.\n  - Fixed a bug where rootless Podman using CNI networking did not properly clean up DNS entries for removed containers (#7789).\n  - Fixed a bug where the podman untag --all command was not supported with remote Podman.\n  - Fixed a bug where the podman system service command could time out even if active attach connections were present (#7826).\n  - Fixed a bug where the podman system service command would sometimes never time out despite no active connections being present.\n  - Fixed a bug where Podman's handling of capabilities, specifically inheritable, did not match Docker's.\n  - Fixed a bug where podman run would fail if the image specified was a manifest list and had already been pulled (#7798).\n  - Fixed a bug where Podman did not take search registries into account when looking up images locally (#6381).\n  - Fixed a bug where the podman manifest inspect command would fail for images that had already been pulled (#7726).\n  - Fixed a bug where rootless Podman would not add supplemental GIDs to containers when when a user, but not a group, was set via the --user option to podman create and podman run and sufficient GIDs were available to add the groups (#7782).\n  - Fixed a bug where remote Podman commands did not properly handle cases where the user gave a name that could also be a short ID for a pod or container (#7837).\n  - Fixed a bug where podman image prune could leave images ready to be pruned after podman image prune was run (#7872).\n  - Fixed a bug where the podman logs command with the journald log driver would not read all available logs (#7476).\n  - Fixed a bug where the --rm and --restart options to podman create and podman run did not conflict when a restart policy that is not on-failure was chosen (#7878).\n  - Fixed a bug where the --format 'table {{ .Field }}' option to numerous Podman commands ceased to function on Podman v2.0 and up.\n  - Fixed a bug where pods did not properly share an SELinux label between their containers, resulting in containers being unable to see the processes of other containers when the pod shared a PID namespace (#7886).\n  - Fixed a bug where the --namespace option to podman ps did not work with the remote client (#7903).\n  - Fixed a bug where rootless Podman incorrectly calculated the number of UIDs available in the container if multiple different ranges of UIDs were specified.\n  - Fixed a bug where the /etc/hosts file would not be correctly populated for containers in a user namespace (#7490).\n  - Fixed a bug where the podman network create and podman network remove commands could race when run in parallel, with unpredictable results (#7807).\n  - Fixed a bug where the -p option to podman run, podman create, and podman pod create would, when given only a single number (e.g. -p 80), assign the same port for both host and container, instead of generating a random host port (#7947).\n  - Fixed a bug where Podman containers did not properly store the cgroup manager they were created with, causing them to stop functioning after the cgroup manager was changed in containers.conf or with the --cgroup-manager option (#7830).\n  - Fixed a bug where the podman inspect command did not include information on the CNI networks a container was connected to if it was not running.\n  - Fixed a bug where the podman attach command would not print a newline after detaching from the container (#7751).\n  - Fixed a bug where the HOME environment variable was not set properly in containers when the --userns=keep-id option was set (#8004).\n  - Fixed a bug where the podman container restore command could panic when the container in question was in a pod (#8026).\n  - Fixed a bug where the output of the podman image trust show --raw command was not properly formatted.\n  - Fixed a bug where the podman runlabel command could panic if a label to run was not given (#8038).\n  - Fixed a bug where the podman run and podman start --attach commands would exit with an error when the user detached manually using the detach keys on remote Podman (#7979).\n  - Fixed a bug where rootless CNI networking did not use the dnsname CNI plugin if it was not available on the host, despite it always being available in the container used for rootless networking (#8040).\n  - Fixed a bug where Podman did not properly handle cases where an OCI runtime is specified by its full path, and could revert to using another OCI runtime with the same binary path that existed in the system $PATH on subsequent invocations.\n  - Fixed a bug where the --net=host option to podman create and podman run would cause the /etc/hosts file to be incorrectly populated (#8054).\n  - Fixed a bug where the podman inspect command did not include container network information when the container shared its network namespace (IE, joined a pod or another container's network namespace via --net=container:...) (#8073).\n  - Fixed a bug where the podman ps command did not include information on all ports a container was publishing.\n  - Fixed a bug where the podman build command incorrectly forwarded STDIN into build containers from RUN instructions.\n  - Fixed a bug where the podman wait command's --interval option did not work when units were not specified for the duration (#8088).\n  - Fixed a bug where the --detach-keys and --detach options could be passed to podman create despite having no effect (and not making sense in that context).\n  - Fixed a bug where Podman could not start containers if running on a system without a /etc/resolv.conf file (which occurs on some WSL2 images) (#8089).\n  - Fixed a bug where the --extract option to podman cp was nonfunctional.\n  - Fixed a bug where the --cidfile option to podman run would, when the container was not run with --detach, only create the file after the container exited (#8091).\n  - Fixed a bug where the podman images and podman images -a commands could panic and not list any images when certain improperly-formatted images were present in storage (#8148).\n  - Fixed a bug where the podman events command could, when the journald events backend was in use, become nonfunctional when a badly-formatted event or a log message that container certain string was present in the journal (#8125).\n  - Fixed a bug where remote Podman would, when using SSH transport, not authenticate to the server using hostkeys when connecting on a port other than 22 (#8139).\n  - Fixed a bug where the podman attach command would not exit when containers stopped (#8154).\n  - Fixed a bug where Podman did not properly clean paths before verifying them, resulting in Podman refusing to start if the root or temporary directories were specified with extra trailing / characters (#8160).\n  - Fixed a bug where remote Podman did not support hashed hostnames in the known_hosts file on the host for establishing connections (#8159).\n  - Fixed a bug where the podman image exists command would return non-zero (false) when multiple potential matches for the given name existed.\n  - Fixed a bug where the podman manifest inspect command on images that are not manifest lists would error instead of inspecting the image (#8023).\n  - Fixed a bug where the podman system service command would fail if the directory the Unix socket was to be created inside did not exist (#8184).\n  - Fixed a bug where pods that shared the IPC namespace (which is done by default) did not share a /dev/shm filesystem between all containers in the pod (#8181).\n  - Fixed a bug where filters passed to podman volume list were not inclusive (#6765).\n  - Fixed a bug where the podman volume create command would fail when the volume's data directory already existed (as might occur when a volume was not completely removed) (#8253).\n  - Fixed a bug where the podman run and podman create commands would deadlock when trying to create a container that mounted the same named volume at multiple locations (e.g. podman run -v testvol:/test1 -v testvol:/test2) (#8221).\n  - Fixed a bug where the parsing of the --net option to podman build was incorrect (#8322).\n  - Fixed a bug where the podman build command would print the ID of the built image twice when using remote Podman (#8332).\n  - Fixed a bug where the podman stats command did not show memory limits for containers (#8265).\n  - Fixed a bug where the podman pod inspect command printed the static MAC address of the pod in a non-human-readable format (#8386).\n  - Fixed a bug where the --tls-verify option of the podman play kube command had its logic inverted (false would enforce the use of TLS, true would disable it).\n  - Fixed a bug where the podman network rm command would error when trying to remove macvlan networks and rootless CNI networks (#8491).\n  - Fixed a bug where Podman was not setting sane defaults for missing XDG_ environment variables.\n  - Fixed a bug where remote Podman would check if volume paths to be mounted in the container existed on the host, not the server (#8473).\n  - Fixed a bug where the podman manifest create and podman manifest add commands on local images would drop any images in the manifest not pulled by the host.\n  - Fixed a bug where networks made by podman network create did not include the tuning plugin, and as such did not support setting custom MAC addresses (#8385).\n  - Fixed a bug where container healthchecks did not use $PATH when searching for the Podman executable to run the healthcheck.\n  - Fixed a bug where the --ip-range option to podman network create did not properly handle non-classful subnets when calculating the last usable IP for DHCP assignment (#8448).\n  - Fixed a bug where the podman container ps alias for podman ps was missing (#8445).\n * API\n  - The Compat Create endpoint for Container has received a major refactor to share more code with the Libpod Create endpoint, and should be significantly more stable.\n  - A Compat endpoint for exporting multiple images at once, GET /images/get, has been added (#7950).\n  - The Compat Network Connect and Network Disconnect endpoints have been added.\n  - Endpoints that deal with image registries now support a X-Registry-Config header to specify registry authentication configuration.\n  - The Compat Create endpoint for images now properly supports specifying images by digest.\n  - The Libpod Build endpoint for images now supports an httpproxy query parameter which, if set to true, will forward the server's HTTP proxy settings into the build container for RUN instructions.\n  - The Libpod Untag endpoint for images will now remove all tags for the given image if no repository and tag are specified for removal.\n  - Fixed a bug where the Ping endpoint misspelled a header name (Libpod-Buildha-Version instead of Libpod-Buildah-Version).\n  - Fixed a bug where the Ping endpoint sent an extra newline at the end of its response where Docker did not.\n  - Fixed a bug where the Compat Logs endpoint for containers did not send a newline character after each log line.\n  - Fixed a bug where the Compat Logs endpoint for containers would mangle line endings to change newline characters to add a preceding carriage return (#7942).\n  - Fixed a bug where the Compat Inspect endpoint for Containers did not properly list the container's stop signal (#7917).\n  - Fixed a bug where the Compat Inspect endpoint for Containers formatted the container's create time incorrectly (#7860).\n  - Fixed a bug where the Compat Inspect endpoint for Containers did not include the container's Path, Args, and Restart Count.\n  - Fixed a bug where the Compat Inspect endpoint for Containers prefixed added and dropped capabilities with CAP_ (Docker does not do so).\n  - Fixed a bug where the Compat Info endpoint for the Engine did not include configured registries.\n  - Fixed a bug where the server could panic if a client closed a connection midway through an image pull (#7896).\n  - Fixed a bug where the Compat Create endpoint for volumes returned an error when a volume with the same name already existed, instead of succeeding with a 201 code (#7740).\n  - Fixed a bug where a client disconnecting from the Libpod or Compat events endpoints could result in the server using 100% CPU (#7946).\n  - Fixed a bug where the 'no such image' error message sent by the Compat Inspect endpoint for Images returned a 404 status code with an error that was improperly formatted for Docker compatibility.\n  - Fixed a bug where the Compat Create endpoint for networks did not properly set a default for the driver parameter if it was not provided by the client.\n  - Fixed a bug where the Compat Inspect endpoint for images did not populate the RootFS field of the response.\n  - Fixed a bug where the Compat Inspect endpoint for images would omit the ParentId field if the image had no parent, and the Created field if the image did not have a creation time.\n  - Fixed a bug where the Compat Remove endpoint for Networks did not support the Force query parameter.\n\n- add dependency to timezone package or podman fails to build a\n- Correct invalid use of %{_libexecdir} to ensure files should be in /usr/lib\nSELinux support [jsc#SMO-15]\n\n\nlibseccomp was updated to release 2.5.3:\n\n* Update the syscall table for Linux v5.15\n* Fix issues with multiplexed syscalls on mipsel introduced in v2.5.2\n* Document that seccomp_rule_add() may return -EACCES\n\nUpdate to release 2.5.2\n\n* Update the syscall table for Linux v5.14-rc7                                                                    \n* Add a function, get_notify_fd(), to the Python bindings to\n  get the nofication file descriptor.\n* Consolidate multiplexed syscall handling for all\n  architectures into one location.\n* Add multiplexed syscall support to PPC and MIPS\n* The meaning of SECCOMP_IOCTL_NOTIF_ID_VALID changed within\n  the kernel. libseccomp's fd notification logic was modified\n  to support the kernel's previous and new usage of\n  SECCOMP_IOCTL_NOTIF_ID_VALID.\n\nupdate to 2.5.1:\n\n* Fix a bug where seccomp_load() could only be called once\n* Change the notification fd handling to only request a notification fd if\n* the filter has a _NOTIFY action\n* Add documentation about SCMP_ACT_NOTIFY to the seccomp_add_rule(3) manpage\n* Clarify the maintainers' GPG keys\n\nUpdate to release 2.5.0\n\n* Add support for the seccomp user notifications, see the\n  seccomp_notify_alloc(3), seccomp_notify_receive(3),\n  seccomp_notify_respond(3) manpages for more information\n* Add support for new filter optimization approaches, including a balanced\n  tree optimization, see the SCMP_FLTATR_CTL_OPTIMIZE filter attribute for\n  more information\n* Add support for the 64-bit RISC-V architecture\n* Performance improvements when adding new rules to a filter thanks to the\n  use of internal shadow transactions and improved syscall lookup tables\n* Properly document the libseccomp API return values and include them in the\n  stable API promise\n* Improvements to the s390 and s390x multiplexed syscall handling\n* Multiple fixes and improvements to the libseccomp manpages\n* Moved from manually maintained syscall tables to an automatically generated\n  syscall table in CSV format\n* Update the syscall tables to Linux v5.8.0-rc5\n* Python bindings and build now default to Python 3.x\n* Improvements to the tests have boosted code coverage to over 93%\n\nUpdate to release 2.4.3\n\n* Add list of authorized release signatures to README.md\n* Fix multiplexing issue with s390/s390x shm* syscalls\n* Remove the static flag from libseccomp tools compilation\n* Add define for __SNR_ppoll\n* Fix potential memory leak identified by clang in the\n  scmp_bpf_sim tool\n\nUpdate to release 2.4.2\n\n* Add support for io-uring related system calls\n\n\nconmon was updated to version 2.0.30:\n\n  * Remove unreachable code path\n  * exit: report if the exit command was killed\n  * exit: fix race zombie reaper\n  * conn_sock: allow watchdog messages through the notify socket proxy\n  * seccomp: add support for seccomp notify\n\nUpdate to version 2.0.29:\n\n  * Reset OOM score back to 0 for container runtime\n  * call functions registered with atexit on SIGTERM\n  * conn_sock: fix potential segfault\n\nUpdate to version 2.0.27:\n\n  * Add CRI-O integration test GitHub action\n  * exec: don't fail on EBADFD\n  * close_fds: fix close of external fds\n  * Add arm64 static build binary\n\nUpdate to version 2.0.26:\n\n  * conn_sock: do not fail on EAGAIN\n  * fix segfault from a double freed pointer\n  * Fix a bug where conmon could never spawn a container, because\n    a disagreement between the caller and itself on where the attach\n    socket was.\n  * improve --full-attach to ignore the socket-dir directly. that\n    means callers don't need to specify a socket dir at all (and\n    can remove it)\n  * add full-attach option to allow callers to not truncate a very\n    long path for the attach socket\n  * close only opened FDs\n  * set locale to inherit environment\n\nUpdate to version 2.0.22:\n\n  * added man page\n  * attach: always chdir\n  * conn_sock: Explicitly free a heap-allocated string\n  * refactor I/O and add SD_NOTIFY proxy support\n\nUpdate to version 2.0.21:\n\n  * protect against kill(-1)\n  * Makefile: enable debuginfo generation\n  * Remove go.sum file and add go.mod\n  * Fail if conmon config could not be written\n  * nix: remove double definition for e2fsprogs\n  * Speedup static build by utilizing CI cache on `/nix` folder\n  * Fix nix build for failing e2fsprogs tests\n  * test: fix CI\n  * Use Podman for building\n\nlibcontainers-common was updated to include:\n\n- common 0.44.0\n- image 5.16.0\n- podman 3.3.1\n- storage 1.36.0\n(changes too long to list)\n\nCVEs fixed: CVE-2020-14370,CVE-2020-15157,CVE-2021-20199,CVE-2021-20291,CVE-2021-3602\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-SLE-Module-Basesystem-15-SP3-2022-23018,SUSE-SLE-Module-Containers-15-SP3-2022-23018,SUSE-SUSE-MicroOS-5.1-2022-23018",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "conmon-2.0.30-150300.8.3.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcontainers-common-20210626-150300.8.3.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libseccomp2-2.5.3-150300.10.5.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "podman-3.4.4-150300.9.3.2",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "podman-cni-config-3.4.4-150300.9.3.2",
        "RelatesToProductReference": "SUSE Linux Enterprise Micro 5.1",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcontainers-common-20210626-150300.8.3.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Basesystem 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libseccomp-devel-2.5.3-150300.10.5.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Basesystem 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libseccomp2-2.5.3-150300.10.5.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Basesystem 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "conmon-2.0.30-150300.8.3.1",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Containers 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "podman-3.4.4-150300.9.3.2",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Containers 15 SP3",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "podman-cni-config-3.4.4-150300.9.3.2",
        "RelatesToProductReference": "SUSE Linux Enterprise Module for Containers 15 SP3",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2022/suse-su-202223018-1/",
      "Description": "Link for SUSE-SU-2022:23018-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2022-March/010347.html",
      "Description": "E-Mail link for SUSE-SU-2022:23018-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1176804",
      "Description": "SUSE Bug 1176804"
    },
    {
      "URL": "https://bugzilla.suse.com/1177598",
      "Description": "SUSE Bug 1177598"
    },
    {
      "URL": "https://bugzilla.suse.com/1181640",
      "Description": "SUSE Bug 1181640"
    },
    {
      "URL": "https://bugzilla.suse.com/1182998",
      "Description": "SUSE Bug 1182998"
    },
    {
      "URL": "https://bugzilla.suse.com/1188520",
      "Description": "SUSE Bug 1188520"
    },
    {
      "URL": "https://bugzilla.suse.com/1188914",
      "Description": "SUSE Bug 1188914"
    },
    {
      "URL": "https://bugzilla.suse.com/1193166",
      "Description": "SUSE Bug 1193166"
    },
    {
      "URL": "https://bugzilla.suse.com/1193273",
      "Description": "SUSE Bug 1193273"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-14370/",
      "Description": "SUSE CVE CVE-2020-14370 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2020-15157/",
      "Description": "SUSE CVE CVE-2020-15157 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-20199/",
      "Description": "SUSE CVE CVE-2021-20199 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-20291/",
      "Description": "SUSE CVE CVE-2021-20291 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-3602/",
      "Description": "SUSE CVE CVE-2021-3602 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-4024/",
      "Description": "SUSE CVE CVE-2021-4024 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2021-41190/",
      "Description": "SUSE CVE CVE-2021-41190 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2020-14370",
      "Description": "An information disclosure vulnerability was found in containers/podman in versions before 2.0.5. When using the deprecated Varlink API or the Docker-compatible REST API, if multiple containers are created in a short duration, the environment variables from the first container will get leaked into subsequent containers. An attacker who has control over the subsequent containers could use this flaw to gain access to sensitive information stored in such variables.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-14370.html",
          "Description": "CVE-2020-14370"
        },
        {
          "URL": "https://bugzilla.suse.com/1176804",
          "Description": "SUSE Bug 1176804"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2020-15157",
      "Description": "In containerd (an industry-standard container runtime) before version 1.2.14 there is a credential leaking vulnerability. If a container image manifest in the OCI Image format or Docker Image V2 Schema 2 format includes a URL for the location of a specific image layer (otherwise known as a “foreign layer”), the default containerd resolver will follow that URL to attempt to download it. In v1.2.x but not 1.3.0 or later, the default containerd resolver will provide its authentication credentials if the server where the URL is located presents an HTTP 401 status code along with registry-specific HTTP headers. If an attacker publishes a public image with a manifest that directs one of the layers to be fetched from a web server they control and they trick a user or system into pulling the image, they can obtain the credentials used for pulling that image. In some cases, this may be the user's username and password for the registry. In other cases, this may be the credentials attached to the cloud virtual instance which can grant access to other cloud resources in the account. The default containerd resolver is used by the cri-containerd plugin (which can be used by Kubernetes), the ctr development tool, and other client programs that have explicitly linked against it. This vulnerability has been fixed in containerd 1.2.14. containerd 1.3 and later are not affected. If you are using containerd 1.3 or later, you are not affected. If you are using cri-containerd in the 1.2 series or prior, you should ensure you only pull images from trusted sources. Other container runtimes built on top of containerd but not using the default resolver (such as Docker) are not affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2020-15157.html",
          "Description": "CVE-2020-15157"
        },
        {
          "URL": "https://bugzilla.suse.com/1177598",
          "Description": "SUSE Bug 1177598"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-20199",
      "Description": "Rootless containers run with Podman, receive all traffic with a source IP address of 127.0.0.1 (including from remote hosts). This impacts containerized applications that trust localhost (127.0.01) connections by default and do not require authentication. This issue affects Podman 1.8.0 onwards.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-20199.html",
          "Description": "CVE-2021-20199"
        },
        {
          "URL": "https://bugzilla.suse.com/1181640",
          "Description": "SUSE Bug 1181640"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-20291",
      "Description": "A deadlock vulnerability was found in 'github.com/containers/storage' in versions before 1.28.1. When a container image is processed, each layer is unpacked using `tar`. If one of those layers is not a valid `tar` archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-20291.html",
          "Description": "CVE-2021-20291"
        },
        {
          "URL": "https://bugzilla.suse.com/1196497",
          "Description": "SUSE Bug 1196497"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-3602",
      "Description": "An information disclosure flaw was found in Buildah, when building containers using chroot isolation. Running processes in container builds (e.g. Dockerfile RUN commands) can access environment variables from parent and grandparent processes. When run in a container in a CI/CD environment, environment variables may include sensitive information that was shared with the container in order to be used only by Buildah itself (e.g. container registry credentials).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-3602.html",
          "Description": "CVE-2021-3602"
        },
        {
          "URL": "https://bugzilla.suse.com/1188520",
          "Description": "SUSE Bug 1188520"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-4024",
      "Description": "A flaw was found in podman. The `podman machine` function (used to create and manage Podman virtual machine containing a Podman process) spawns a `gvproxy` process on the host system. The `gvproxy` API is accessible on port 7777 on all IP addresses on the host. If that port is open on the host's firewall, an attacker can potentially use the `gvproxy` API to forward ports on the host to ports in the VM, making private services on the VM accessible to the network. This issue could be also used to interrupt the host's services by forwarding all ports to the VM.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-4024.html",
          "Description": "CVE-2021-4024"
        },
        {
          "URL": "https://bugzilla.suse.com/1193166",
          "Description": "SUSE Bug 1193166"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-41190",
      "Description": "The OCI Distribution Spec project defines an API protocol to facilitate and standardize the distribution of content. In the OCI Distribution Specification version 1.0.0 and prior, the Content-Type header alone was used to determine the type of document during push and pull operations. Documents that contain both “manifests” and “layers” fields could be interpreted as either a manifest or an index in the absence of an accompanying Content-Type header. If a Content-Type header changed between two pulls of the same digest, a client may interpret the resulting content differently. The OCI Distribution Specification has been updated to require that a mediaType value present in a manifest or index match the Content-Type header used during the push and pull operations. Clients pulling from a registry may distrust the Content-Type header and reject an ambiguous document that contains both “manifests” and “layers” fields or “manifests” and “config” fields if they are unable to update to version 1.0.1 of the spec.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2021-41190.html",
          "Description": "CVE-2021-41190"
        },
        {
          "URL": "https://bugzilla.suse.com/1193273",
          "Description": "SUSE Bug 1193273"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Enterprise Micro 5.1:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Micro 5.1:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Micro 5.1:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Micro 5.1:podman-cni-config-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libcontainers-common-20210626-150300.8.3.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp-devel-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Basesystem 15 SP3:libseccomp2-2.5.3-150300.10.5.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:conmon-2.0.30-150300.8.3.1",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-3.4.4-150300.9.3.2",
            "SUSE Linux Enterprise Module for Containers 15 SP3:podman-cni-config-3.4.4-150300.9.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}