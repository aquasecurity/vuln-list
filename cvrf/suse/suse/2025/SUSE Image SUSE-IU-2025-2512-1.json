{
  "Title": "SUSE-IU-2025:2512-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2025:2512-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2025-09-20T01:00:00Z",
    "CurrentReleaseDate": "2025-09-20T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-10-07T14:59:51Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2025:2512-1 / google/sles-15-sp6-v20250920-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-15-sp6-v20250920-x86-64 contains the following changes:\nPackage boost was updated:\n\n- CVE-2016-9840: fixed out-of-bounds pointer arithmetic in zlib in beast  (bsc#1245936)\n  - adds patch boost-zlib.patch\n\nPackage cifs-utils was updated:\n\n- Add patches:  * 0001-cifs.upcall-correctly-treat-UPTARGET_UNSPECIFIED-as-.patch\n  (bsc#1243488)\n  * 0001-mount.cifs-retry-mount-on-EINPROGRESS.patch\n\nPackage cloud-regionsrv-client was updated:\n\n- Update version to 10.5.2 (bsc#1247539)  + When an instance fails verification server side the default credentials\n    were left behind requireing manual intervantion prior to the next\n    registration attempt.\n  + Fix issue triggered when using instance-billing-flavor-check due to\n    IP address handling as object rather than string introduced 10.5.0\n\n- Update version to 10.5.1\n  + Fix issue with picking up configured server names from the\n    regionsrv config file. Previously only IP addresses were collected\n  + Update scriptlet for package uninstall to avoid issues in the\n    build service\n\n- Update version to 10.5.0\n  + Use region server IP addresses to determine Internet access rather\n    than a generic address. Region server IP addresses may not be blocked\n    in the network construct. (bsc#1245305)\n\nPackage coreutils was updated:\n\n- coreutils-9.7-sort-CVE-2025-5278.patch: Add upstream patch:  sort with key character offsets of SIZE_MAX, could induce\n  a read of 1 byte before an allocated heap buffer.\n  (CVE-2025-5278, bsc#1243767)\n\nPackage crypto-policies was updated:\n\n- Update the BSI policy [jsc#PED-12880]  * BSI: switch to 3072 minimum RSA key size [322f0ba4]\n  * BSI: Update BSI policy for new 2024 minimum [64b9dddd]\n  * Add patches:\n  - crypto-policies-BSI-Update-BSI-policy-for-new-2024-minimum-recommend.patch\n  - crypto-policies-BSI-switch-to-3072-minimum-RSA-key-size.patch\n\nPackage curl was updated:\n\n- tool_operate: fix return code when --retry is used but not  triggered [bsc#1249367]\n  * Add curl-tool_operate-fix-return-code-when-retry-is-used.patch\n\n- Security fixes:\n  * [bsc#1249191, CVE-2025-9086] Out of bounds read for cookie path\n  * [bsc#1249348, CVE-2025-10148] Predictable WebSocket mask\n  * Add patches:\n  - curl-CVE-2025-9086.patch\n  - curl-CVE-2025-10148.patch\n\n- Fix the --ftp-pasv option in curl v8.14.1 [bsc#1246197]\n  * tool_getparam: fix --ftp-pasv [5f805ee]\n  * Add curl-fix--ftp-pasv.patch\n\n- Update to 8.14.1: [jsc#PED-13055, jsc#PED-13056]\n  * Add _multibuild\n  * Remove patches fixed in the update:\n  - curl-CVE-2024-11053.patch\n  - curl-CVE-2024-2004.patch\n  - curl-CVE-2024-2379.patch\n  - curl-CVE-2024-2398.patch\n  - curl-CVE-2024-2466.patch\n  - curl-CVE-2024-6197.patch\n  - curl-CVE-2024-7264.patch\n  - curl-CVE-2024-8096.patch\n  - curl-CVE-2024-9681.patch\n  - curl-CVE-2025-0167.patch\n  - curl-CVE-2025-0725.patch\n  - curl-aws_sigv4-url-encode-the-canonical-path.patch\n  - curl-mstp-starttls.patch\n\n- Sync spec file with SLE codestreams: [jsc#PED-13055, jsc#PED-13056]\n  * Add curl-mini.rpmlintrc to avoid rpmlint shlib-policy-name-error\n    when building the curl-mini package in SLE.\n  * Add libssh minimum version requirements.\n  * Use ldconfig_scriptlets when available.\n  * Remove unused option --disable-ntlm-wb.\n\n- Update to 8.14.1:\n  * Security fixes:\n  - [bsc#1243933, CVE-2025-5399] libcurl can possibly get\n    trapped in an endless busy-loop when processing specially\n    crafted packets [d1145df2]\n  * Bugfixes:\n  - asyn-thrdd: fix cleanup when RR fails due to OOM\n  - ftp: fix teardown of DATA connection in done\n  - http: fail early when rewind of input failed when following redirects\n  - multi: fix add_handle resizing\n  - tls BIOs: handle BIO_CTRL_EOF correctly\n  - tool_getparam: make --no-anyauth not be accepted\n  - wolfssl: fix sending of early data\n  - ws: handle blocked sends better\n  - ws: tests and fixes\n\n- Update to 8.14.0:\n  * Security fixes:\n  - [CVE-2025-4947, bsc#1243397] QUIC certificate check skip with wolfSSL\n  - [CVE-2025-5025, bsc#1243706] No QUIC certificate pinning with wolfSSL\n  * Changes:\n  - mqtt: send ping at upkeep interval\n  - schannel: handle pkcs12 client certificates containing CA certificates\n  - TLS: add CURLOPT_SSL_SIGNATURE_ALGORITHMS and --sigalgs\n  - vquic: ngtcp2 + openssl support\n  - wcurl: import v2025.04.20 script + docs\n  - websocket: add option to disable auto-pong reply\n  * Bugfixes:\n  - asny-thrdd: fix detach from running thread\n  - async-threaded resolver: use ref counter\n  - async: DoH improvements\n  - build: enable gcc-12/13+, clang-10+ picky warnings\n  - build: enable gcc-15 picky warnings\n  - certs: drop unused `default_bits` from `.prm` files\n  - cf-https-connect: use the passed in dns struct pointer\n  - cf-socket: fix FTP accept connect\n  - cfilters: remove assert\n  - cmake: fix nghttp3 static linking with `USE_OPENSSL_QUIC=ON`\n  - cmake: prefer `COMPILE_OPTIONS` over `CMAKE_C_FLAGS` for custom C options\n  - cmake: revert `CURL_LTO` behavior for multi-config generators\n  - configure: fix --disable-rt\n  - CONTRIBUTE: add project guidelines for AI use\n  - cpool/cshutdown: force close connections under pressure\n  - curl: fix memory leak when -h is used in config file\n  - curl_get_line: handle lines ending on the buffer boundary\n  - headers: enforce a max number of response header to accept\n  - http: fix HTTP/2 handling of TE request header using \u0026quot;trailers\u0026quot;\n  - lib: include files using known path\n  - lib: unify conversions to/from hex\n  - libssh: add NULL check for Curl_meta_get()\n  - libssh: fix memory leak\n  - mqtt: use conn/easy meta hash\n  - multi: do transfer book keeping using mid\n  - multi: init_do(): check result\n  - netrc: avoid NULL deref on weird input\n  - netrc: avoid strdup NULL\n  - netrc: deal with null token better\n  - openssl-quic: avoid potential `-Wnull-dereference`, add assert\n  - openssl-quic: fix shutdown when stream not open\n  - openssl: enable builds for *both* engines and providers\n  - openssl: set the cipher string before doing private cert\n  - progress: avoid integer overflow when gathering total transfer size\n  - rand: update comment on Curl_rand_bytes weak random\n  - rustls: make max size of cert and key reasonable\n  - smb: avoid integer overflow on weird input date\n  - urlapi: redirecting to \u0026quot;\u0026quot; is considered fine\n  * Remove curl-8.13.0-CloseSocket.patch upstream\n  * Rebase libcurl-ocloexec.patch\n\n- fix Leap build add curl-8.13.0-CloseSocket.patch\n\n- Update to 8.13.0:\n  * Changes:\n  - curl: add write-out variable 'tls_earlydata'\n  - curl: make --url support a file with URLs\n  - gnutls: set priority via --ciphers\n  - IMAP: add CURLOPT_UPLOAD_FLAGS and --upload-flags\n  - lib: add CURLFOLLOW_OBEYCODE and CURLFOLLOW_FIRSTONLY\n  - OpenSSL/quictls: add support for TLSv1.3 early data\n  - rustls: add support for CERTINFO\n  - rustls: add support for SSLKEYLOGFILE\n  - rustls: support ECH w/ DoH lookup for config\n  - rustls: support native platform verifier\n  - var: add a '64dec' function that can base64 decode a string\n  * Bugfixes:\n  - conn: fix connection reuse when SSL is optional\n  - hash: use single linked list for entries\n  - http2: detect session being closed on ingress handling\n  - http2: reset stream on response header error\n  - http: remove a HTTP method size restriction\n  - http: version negotiation\n  - httpsrr: fix port detection\n  - libssh: fix freeing of resources in disconnect\n  - libssh: fix scp large file upload for 32-bit size_t systems\n  - openssl-quic: do not iterate over multi handles\n  - openssl: check return value of X509_get0_pubkey\n  - openssl: drop support for old OpenSSL/LibreSSL versions\n  - openssl: fix crash on missing cert password\n  - openssl: fix pkcs11 URI checking for key files.\n  - openssl: remove bad `goto`s into other scope\n  - setopt: illegal CURLOPT_SOCKS5_AUTH should return error\n  - setopt: setting PROXYUSERPWD after PROXYUSERNAME/PASSWORD is fine\n  - sshserver.pl: adjust `AuthorizedKeysFile2` cutoff version\n  - sshserver: fix excluding obsolete client config lines\n  - SSLCERTS: list support for SSL_CERT_FILE and SSL_CERT_DIR\n  - tftpd: prefix TFTP protocol error `E*` constants with `TFTP_`\n  - tool_operate: fail SSH transfers without server auth\n  - url: call protocol handler's disconnect in Curl_conn_free\n  - urlapi: remove percent encoded dot sequences from the URL path\n  - urldata: remove 'hostname' from struct Curl_async\n  * Rebase patches:\n  - libcurl-ocloexec.patch\n  - curl-secure-getenv.patch\n\n- Update to 8.12.1:\n  * Bugfixes:\n  - asyn-thread: fix build with 'CURL_DISABLE_SOCKETPAIR'\n  - asyn-thread: fix HTTPS RR crash\n  - asyn-thread: fix the returned bitmask from Curl_resolver_getsock\n  - asyn-thread: survive a c-ares channel set to NULL\n  - cmake: always reference OpenSSL and ZLIB via imported targets\n  - cmake: respect 'GNUTLS_CFLAGS' when detected via 'pkg-config'\n  - cmake: respect 'GNUTLS_LIBRARY_DIRS' in 'libcurl.pc' and 'curl-config'\n  - content_encoding: #error on too old zlib\n  - imap: TLS upgrade fix\n  - ldap: drop support for legacy Novell LDAP SDK\n  - libssh2: comparison is always true because rc \u0026lt;= -1\n  - libssh2: raise lowest supported version to 1.2.8\n  - libssh: drop support for libssh older than 0.9.0\n  - openssl-quic: ignore ciphers for h3\n  - pop3: TLS upgrade fix\n  - runtests: fix the disabling of the memory tracking\n  - runtests: quote commands to support paths with spaces\n  - scache: add magic checks\n  - smb: silence '-Warray-bounds' with gcc 13+\n  - smtp: TLS upgrade fix\n  - tool_cfgable: sort struct fields by size, use bitfields for booleans\n  - tool_getparam: add \u0026quot;TLS required\u0026quot; flag for each such option\n  - vtls: fix multissl-init\n  - wakeup_write: make sure the eventfd write sends eight bytes\n\n- Update to 8.12.0:\n  * Security fixes:\n  - [bsc#1234068, CVE-2024-11053] curl could leak the password used\n    for the first host to the followed-to host under certain circumstances.\n  - [bsc#1232528, CVE-2024-9681] HSTS subdomain overwrites parent cache entry\n  - [bsc#1236589, CVE-2025-0665] eventfd double close\n  * Changes:\n  - curl: add byte range support to --variable reading from file\n  - curl: make --etag-save acknowledge --create-dirs\n  - getinfo: fix CURLINFO_QUEUE_TIME_T and add 'time_queue' var\n  - getinfo: provide info which auth was used for HTTP and proxy\n  - hyper: drop support\n  - openssl: add support to use keys and certificates from PKCS#11 provider\n  - QUIC: 0RTT for gnutls via CURLSSLOPT_EARLYDATA\n  - vtls: feature ssls-export for SSL session im-/export\n  * Bugfixes:\n  - altsvc: avoid integer overflow in expire calculation\n  - asyn-ares: acknowledge CURLOPT_DNS_SERVERS set to NULL\n  - asyn-ares: fix memory leak\n  - asyn-ares: initial HTTPS resolve support\n  - asyn-thread: use c-ares to resolve HTTPS RR\n  - async-thread: avoid closing eventfd twice\n  - cd2nroff: do not insist on quoted \u0026lt;\u0026gt; within backticks\n  - cd2nroff: support \u0026quot;none\u0026quot; as a TLS backend\n  - conncache: count shutdowns against host and max limits\n  - content_encoding: drop support for zlib before 1.2.0.4\n  - content_encoding: namespace GZIP flag constants\n  - content_encoding: put the decomp buffers into the writer structs\n  - content_encoding: support use of custom libzstd memory functions\n  - cookie: cap expire times to 400 days\n  - cookie: parse only the exact expire date\n  - curl: return error if etag options are used with multiple URLs\n  - curl_multi_fdset: include the shutdown connections in the set\n  - curl_sha512_256: rename symbols to the curl namespace\n  - curl_url_set.md: adjust the added-in to 7.62.0\n  - doh: send HTTPS RR requests for all HTTP(S) transfers\n  - easy: allow connect-only handle reuse with easy_perform\n  - easy: make curl_easy_perform() return error if connection still there\n  - easy_lock: use Sleep(1) for thread yield on old Windows\n  - ECH: update APIs to those agreed with OpenSSL maintainers\n  - GnuTLS: fix 'time_appconnect' for early data\n  - HTTP/2: strip TE request header\n  - http2: fix data_pending check\n  - http2: fix value stored to 'result' is never read\n  - http: ignore invalid Retry-After times\n  - http_aws_sigv4: Fix invalid compare function handling zero-length pairs\n  - https-connect: start next immediately on failure\n  - lib: redirect handling by protocol handler\n  - multi: fix curl_multi_waitfds reporting of fd_count\n  - netrc: 'default' with no credentials is not a match\n  - netrc: fix password-only entries\n  - netrc: restore _netrc fallback logic\n  - ngtcp2: fix memory leak on connect failure\n  - openssl: define `HAVE_KEYLOG_CALLBACK` before use\n  - openssl: fix ECH logic\n  - osslq: use SSL_poll to determine writeability of QUIC streams\n  - sectransp: free certificate on error\n  - select: avoid a NULL deref in cwfds_add_sock\n  - src: omit hugehelp and ca-embed from libcurltool\n  - ssl session cache: change cache dimensions\n  - system.h: add 64-bit curl_off_t definitions for NonStop\n  - telnet: handle single-byte input option\n  - TLS: check connection for SSL use, not handler\n  - tool_formparse.c: make curlx_uztoso a static in here\n  - tool_formparse: accept digits in --form type= strings\n  - tool_getparam: ECH param parsing refix\n  - tool_getparam: fail --hostpubsha256 if libssh2 is not used\n  - tool_getparam: fix \u0026quot;Ignored Return Value\u0026quot;\n  - tool_getparam: fix memory leak on error in parse_ech\n  - tool_getparam: fix the ECH parser\n  - tool_operate: make --etag-compare always accept a non-existing file\n  - transfer: fix CURLOPT_CURLU override logic\n  - urlapi: fix redirect to a new fragment or query (only)\n  - vquic: make vquic_send_packets not return without setting psent\n  - vtls: fix default SSL backend as a fallback\n  - vtls: only remember the expiry timestamp in session cache\n  - websocket: fix message send corruption\n  - x509asn1: add parse recursion limit\n  * Rebase pathes:\n  - libcurl-ocloexec.patch\n  - dont-mess-with-rpmoptflags.patch\n\nPackage cyrus-sasl was updated:\n\n- Add Channel Binding support for GSSAPI/GSS-SPNEGO; (bsc#1229655);  (jsc#PED-12097); Add patch\n  0009-Add-Channel-Binding-support-for-GSSAPI-GSS-SPNEGO.patch\n- Add support for setting max ssf 0 to GSS-SPNEGO; (bsc#1229655);\n  (jsc#PED-12097); Add patch\n  0010-Add-support-for-setting-max-ssf-0-to-GSS-SPNEGO.patch\n\nPackage docker was updated:\n\n- Update to Docker 28.3.3-ce. See upstream changelog online at  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2833\u0026gt;\n  CVE-2025-54388 bsc#1247367\n\n- Update to docker-buildx v0.26.1. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.26.1\u0026gt;\n\n- Update to docker-buildx v0.26.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.26.0\u0026gt;\n\n- Update to Go 1.24 for builds, to match upstream.\n\n- Update to Docker 28.3.2-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2832\u0026gt;\n\n- Update to Docker 28.3.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2831\u0026gt;\n\n- Update to Docker 28.3.0-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2830\u0026gt;\n  bsc#1246556\n- Rebase patches:\n  * 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n  * 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n[ This update is a no-op, only needed to work around unfortunate automated\n  packaging script behaviour on SLES. ]\n- The following patches were removed in openSUSE in the Docker 28.1.1-ce\n  update, but the patch names were later renamed in a SLES-only update before\n  Docker 28.1.1-ce was submitted to SLES.\n  This causes the SLES build scripts to refuse the update because the patches\n  are not referenced in the changelog. There is no obvious place to put the\n  patch removals (the 28.1.1-ce update removing the patches chronologically\n  predates their renaming in SLES), so they are included here a dummy changelog\n  entry to work around the issue.\n  - 0007-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0008-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n\n- Update to docker-buildx v0.25.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.25.0\u0026gt;\n\n- Do not try to inject SUSEConnect secrets when in Rootless Docker mode, as\n  Docker does not have permission to access the host zypper credentials in this\n  mode (and unprivileged users cannot disable the feature using\n  /etc/docker/suse-secrets-enable.) bsc#1240150\n  * 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n- Rebase patches:\n  * 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n  * 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Always clear SUSEConnect suse_* secrets when starting containers regardless\n  of whether the daemon was built with SUSEConnect support. Not doing this\n  causes containers from SUSEConnect-enabled daemons to fail to start when\n  running with SUSEConnect-disabled (i.e. upstream) daemons.\n  This was a long-standing issue with our secrets support but until recently\n  this would've required migrating from SLE packages to openSUSE packages\n  (which wasn't supported). However, as SLE Micro 6.x and SLES 16 will move\n  away from in-built SUSEConnect support, this is now a practical issue users\n  will run into. bsc#1244035\n  + 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n- Rearrange patches:\n  - 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  + 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  - 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  + 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  - 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  + 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  - 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  + 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  - 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  + 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n[NOTE: This update was only ever released in SLES and Leap.]\n- Always clear SUSEConnect suse_* secrets when starting containers regardless\n  of whether the daemon was built with SUSEConnect support. Not doing this\n  causes containers from SUSEConnect-enabled daemons to fail to start when\n  running with SUSEConnect-disabled (i.e. upstream) daemons.\n  This was a long-standing issue with our secrets support but until recently\n  this would've required migrating from SLE packages to openSUSE packages\n  (which wasn't supported). However, as SLE Micro 6.x and SLES 16 will move\n  away from in-built SUSEConnect support, this is now a practical issue users\n  will run into. bsc#1244035\n  + 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n- Rearrange patches:\n  - 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  + 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  - 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  + 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  - 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  + 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  - 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  + 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  - 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  + 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  - 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  + 0007-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n  + 0008-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n\n- Update to Docker 28.2.2-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2822\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Update to Docker 28.2.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2820\u0026gt; bsc#1243833\n  \u0026lt;https://github.com/moby/moby/releases/tag/v28.2.1\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Update to docker-buildx v0.24.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.24.0\u0026gt;\n\n- Update to Docker 28.1.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2811\u0026gt; bsc#1242114\n  Includes upstream fixes:\n  - CVE-2025-22872 bsc#1241830\n- Remove long-outdated build handling for deprecated and unsupported\n  devicemapper and AUFS storage drivers. AUFS was removed in v24, and\n  devicemapper was removed in v25.\n  \u0026lt;https://docs.docker.com/engine/deprecated/#aufs-storage-driver\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n- Remove upstreamed patches:\n  - 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n  - cli-0001-docs-include-required-tools-in-source-tree.patch\n\n- Update to docker-buildx v0.23.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.23.0\u0026gt;\n\n- Update to docker-buildx v0.22.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.22.0\u0026gt;\n  * Includes fixes for CVE-2025-0495. bsc#1239765\n\n- Disable transparent SUSEConnect support for SLE-16. PED-12534\n  When this patchset was first added in 2013 (and rewritten over the years),\n  there was no upstream way to easily provide SLE customers with a way to build\n  container images based on SLE using the host subscription. However, with\n  docker-buildx you can now define secrets for builds (this is not entirely\n  transparent, but we can easily document this new requirement for SLE-16).\n  Users should use\n    RUN --mount=type=secret,id=SCCcredentials zypper -n ...\n  in their Dockerfiles, and\n    docker buildx build --secret id=SCCcredentials,src=/etc/zypp/credentials.d/SCCcredentials,type=file .\n  when doing their builds.\n- Now that the only blocker for docker-buildx support was removed for SLE-16,\n  enable docker-buildx for SLE-16 as well. PED-8905\n\nPackage glib2 was updated:\n\n- Add glib2-CVE-2025-6052.patch: fix overflow check when expanding  a GString (bsc#1244596 CVE-2025-6052).\n\n- Add glib2-CVE-2025-4373.patch: carefully handle gssize parameters\n  (bsc#1242844 CVE-2025-4373 glgo#GNOME/glib#3677).\n\nPackage glibc was updated:\n\n- regcomp-double-free.patch: posix: Fix double-free after allocation  failure in regcomp (CVE-2025-8058, bsc#1246965, BZ #33185)\n\n- nscd-gethst-race.patch: Reduce chance of crash when using nscd GETFDHST\n  (bsc#1240058)\n\nPackage google-dracut-config was updated:\n\nPackage google-guest-configs was updated:\n\n- Check that %{_sysconfdir}/sysconfig/network/ifcfg-eth0 actually  exists before making any modifications to it (bsc#1241112)\n\nPackage google-guest-oslogin was updated:\n\n- Cherry-pick dont-retry-bad-requests.patch to stop retrying bad  requests causing timeouts during container startup (bsc#1243992)\n\n- Override upstream version to address upgrade problems (bsc#1243997)\n\nPackage google-osconfig-agent was updated:\n\n- Update to version 20250416.02 (bsc#1244304, bsc#1244503)  * defaultSleeper: tolerate 10% difference to reduce test flakiness (#810)\n  * Add output of some packagemanagers to the testdata (#808)\n- from version 20250416.01\n  * Refactor OS Info package (#809)\n- from version 20250416.00\n  * Report RPM inventory as YUM instead of empty SoftwarePackage\n    when neither Zypper nor YUM are installed. (#805)\n- from version 20250414.00\n  * Update hash computation algorithm (#799)\n\n- Update to version 20250320.00\n  * Bump github.com/envoyproxy/protoc-gen-validate from 1.1.0 to 1.2.1 (#797)\n- from version 20250318.00\n  * Bump go.opentelemetry.io/otel/sdk/metric from 1.32.0 to 1.35.0 (#793)\n- from version 20250317.02\n  * Bump cel.dev/expr from 0.18.0 to 0.22.0 (#792)\n  * Bump github.com/golang/glog from 1.2.3 to 1.2.4 in the go_modules group (#785)\n- from version 20250317.01\n  * Bump cloud.google.com/go/logging from 1.12.0 to 1.13.0 (#774)\n- from version 20250317.00\n  * Add tests for retryutil package. (#795)\n- from version 20250306.00\n  * Update OWNERS (#794)\n- from version 20250206.01\n  * Use separate counters for pre- and post-patch reboots. (#788)\n- from version 20250206.00\n  * Update owners (#789)\n- from version 20250203.00\n  * Fix the vet errors for contants in logging (#786)\n- from version 20250122.00\n  * change available package check (#783)\n- from version 20250121.00\n  * Fix Inventory reporting e2e tests. (#782)\n- from version 20250120.00\n  * fix e2e tests (#781)\n- Add -buildmode=pie to go build command line (bsc#1239948)\n- Drop CVE-2024-45339.patch, merged upstream\n- Renumber patches\n\nPackage gpg2 was updated:\n\n- Security fix: [bsc#1236931, bsc#1239119, CVE-2025-30258]  * gpg: Fix regression for the recent malicious subkey DoS fix.\n  * gpg: Fix another regression due to the T7547 fix.\n  * gpg: Allow the use of an ADSK subkey as ADSK subkey.\n  * Add patches:\n  - gnupg-gpg-Fix-regression-for-the-recent-malicious-subkey-D.patch\n  - gnupg-gpg-Fix-another-regression-due-to-the-T7547-fix.patch\n  - gnupg-gpg-Allow-the-use-of-an-ADSK-subkey-as-ADSK-subkey.patch\n\n- Don't install expired sks certificate [bsc#1243069]\n  * Add patch gnupg-dirmngr-Don-t-install-expired-sks-certificate.patch\n\n- Fix a verification DoS due to a malicious subkey in the keyring: [bsc#1239119]\n  * Add patch gnupg-gpg-Fix-a-verification-DoS-due-to-a-malicious-subkey-in-the-keyring.patch\n\nPackage grub2 was updated:\n\n- Skip mount point in grub_find_device function (bsc#1246231)  * 0001-getroot-Skip-mount-points-in-grub_find_device.patch\n\n- Fix CVE-2024-56738: side-channel attack due to not constant-time\n  algorithm in grub_crypto_memcmp (bsc#1234959)\n  * grub2-constant-time-grub_crypto_memcmp.patch\n\n- Fix test -f and -s do not work properly over the network files served via\n  tftp and http (bsc#1246157) (bsc#1246237)\n  * 0001-test-Fix-f-test-on-files-over-network.patch\n  * 0002-http-Return-HTTP-status-code-in-http_establish.patch\n  * 0003-docs-Clarify-test-for-files-on-TFTP-and-HTTP.patch\n  * 0004-tftp-Fix-hang-when-file-is-a-directory.patch\n\nPackage hwinfo was updated:\n\n- merge gh#openSUSE/hwinfo#168- fix usb network card detection (bsc#1245950)\n- 21.89\n\nPackage iputils was updated:\n\n- Security fix [bsc#1243772, CVE-2025-48964]  * Fix  integer overflow in ping statistics via zero timestamp\n  * Add iputils-CVE-2025-48964_01.patch\n  * Add iputils-CVE-2025-48964_02.patch\n  * Add iputils-CVE-2025-48964_03.patch\n  * Add iputils-CVE-2025-48964_04.patch\n  * Add iputils-CVE-2025-48964_regression.patch\n\nPackage jq was updated:\n\n- Add patches CVE-2025-48060-1.patch and CVE-2025-48060-2.patch  (CVE-2025-48060, bsc#1244116)\n\n- Add patch CVE-2024-23337.patch (CVE-2024-23337, bsc#1243450)\n\nPackage kernel-default was updated:\n\n- smb3: move server check earlier when setting channel sequence  number (git-fixes).\n- commit df2adca\n\n- ring-buffer: Do not allow events in NMI with generic atomic64\n  cmpxchg() (git-fixes).\n- commit 890fc59\n\n- module: Restore the moduleparam prefix length check (git-fixes).\n- commit ad2fc48\n\n- module: Remove unnecessary +1 from last_unloaded_module::name\n  size (git-fixes).\n- commit 3efc8ab\n\n- audit,module: restore audit logging in load failure case\n  (git-fixes).\n- kABI: Fix the module::name type in audit_context (git-fixes).\n- commit 7e23359\n\n- module: Fix memory deallocation on error path in move_module()\n  (git-fixes).\n- commit bb37d39\n\n- SMB3: rename macro CIFS_SERVER_IS_CHAN to avoid confusion\n  (git-fixes).\n- Refresh\n  patches.suse/smb-client-fix-use-after-free-of-signing-key.patch.\n- commit ee8ada8\n\n- smb: client: fix potential deadlock when reconnecting channels\n  (bsc#1246183, CVE-2025-38244).\n- commit fcf601a\n\n- cifs: reconnect helper should set reconnect for the right\n  channel (git-fixes).\n- commit ae3173e\n\n- [SMB3] send channel sequence number in SMB3 requests after\n  reconnects (git-fixes).\n- commit baa81e9\n\n- net: mana: Add debug logs in MANA network driver (bsc#1246212).\n- Refresh\n  patches.suse/msft-hv-3280-net-mana-Add-support-for-Multi-Vports-on-Bare-metal.patch.\n- commit 1b4ad82\n\n- netlink: avoid infinite retry looping in netlink_unicast()\n  (CVE-2025-38465 bsc#1247118).\n- net: mana: Set tx_packets to post gso processing packet count\n  (bsc#1245731).\n- net: mana: Allocate MSI-X vectors dynamically (bsc#1245457).\n- net: mana: Allow irq_setup() to skip cpus for affinity\n  (bsc#1245457).\n- net: mana: explain irq_setup() algorithm (bsc#1245457).\n- PCI: hv: Allow dynamic MSI-X vector allocation (bsc#1245457).\n- PCI/MSI: Export pci_msix_prepare_desc() for dynamic MSI-X\n  allocations (bsc#1245457).\n- net: mana: Add handler for hardware servicing events\n  (bsc#1245730).\n- net: mana: Expose additional hardware counters for drop and\n  TC via ethtool (bsc#1245729).\n- hv_netvsc: Use VF's tso_max_size value when data path is VF\n  (bsc#1246203).\n- net: mana: Allow tso_max_size to go up-to GSO_MAX_SIZE\n  (bsc#1246203).\n- commit bdd7f41\n\n- NFS: Fix wakeup of __nfs_lookup_revalidate() in\n  unblock_revalidate() (git-fixes).\n- commit 80e576f\n\n- sched: Add test_and_clear_wake_up_bit() and\n  atomic_dec_and_wake_up() (git-fixes).\n- commit 3754627\n\n- drm/amdgpu: Add basic validation for RAS header (bsc#1247252 CVE-2025-38426)\n- commit 5d23e74\n\n- NFS: Fix the setting of capabilities when automounting a new\n  filesystem (git-fixes).\n- commit fabe208\n\n- sunrpc: fix client side handling of tls alerts (git-fixes).\n- commit 4c093f3\n\n- NFS: Fixup allocation flags for nfsiod's __GFP_NORETRY\n  (git-fixes).\n- commit fd58755\n\n- NFSv4.2: another fix for listxattr (git-fixes).\n- commit 5a2e576\n\n- NFS: Fix filehandle bounds checking in nfs_fh_to_dentry()\n  (git-fixes).\n- commit 094541e\n\n- pNFS/flexfiles: don't attempt pnfs on fatal DS errors\n  (git-fixes).\n- commit ec1d884\n\n- gpio: mlxbf2: use platform_get_irq_optional() (git-fixes).\n- ALSA: hda/ca0132: Fix missing error handling in\n  ca0132_alt_select_out() (git-fixes).\n- ALSA: intel_hdmi: Fix off-by-one error in\n  __hdmi_lpe_audio_probe() (git-fixes).\n- commit 1750f05\n\n- posix-cpu-timers: fix race between handle_posix_cpu_timers()\n  and posix_cpu_timer_del() (bsc#1246911 CVE-2025-38352).\n- commit ab7e2c1\n\n- tls: always refresh the queue when reading sock (CVE-2025-38471\n  bsc#1247450).\n- ext4: only dirty folios when data journaling regular files\n  (CVE-2025-38220 bsc#1245966).\n- commit 4468ab0\n\n- net/sched: mqprio: fix stack out-of-bounds write in tc entry\n  parsing (git-fixes).\n- commit 87e34c3\n\n- net/packet: fix a race in packet_set_ring() and\n  packet_notifier() (git-fixes).\n- commit caa5d02\n\n- net/sched: taprio: enforce minimum value for picos_per_byte\n  (git-fixes).\n- commit d33d37f\n\n- ipv6: reject malicious packets in ipv6_gso_segment()\n  (git-fixes).\n- commit e120573\n\n- netpoll: prevent hanging NAPI when netcons gets enabled\n  (git-fixes).\n- commit d8e3fe4\n\n- tracing/kprobes: Fix to free objects when failed to copy a\n  symbol (git-fixes).\n- commit a2d3373\n\n- tracing/kprobe: Make trace_kprobe's module callback called\n  after jump_label update (git-fixes).\n- commit 34ee7ea\n\n- kABI fix for net: vlan: fix VLAN 0 refcount imbalance of\n  toggling (CVE-2025-38470 bsc#1247288).\n- commit 00f8e79\n\n- net: vlan: fix VLAN 0 refcount imbalance of toggling filtering\n  during runtime (CVE-2025-38470 bsc#1247288).\n- net/sched: Abort __tc_modify_qdisc if parent class does not\n  exist (CVE-2025-38457 bsc#1247098).\n- atm: clip: Fix potential null-ptr-deref in to_atmarpd()\n  (CVE-2025-38460 bsc#1247143).\n- idpf: convert control queue mutex to a spinlock (CVE-2025-38392\n  bsc#1247169).\n- commit 4f53008\n\n- drm/amd/display: Don't overwrite dce60_clk_mgr (git-fixes).\n- Revert \u0026quot;vgacon: Add check for vc_origin address range in\n  vgacon_scroll()\u0026quot; (stable-fixes).\n- commit 6cc69eb\n\n- exfat: fdatasync flag should be same like generic_write_sync()\n  (git-fixes).\n- commit ec3f01f\n\n- do_change_type(): refuse to operate on unmounted/not ours mounts (CVE-2025-38498 bsc#1247374)\n- commit 545afad\n\n- vfio/mlx5: Fix an unwind issue in mlx5vf_add_migration_pages() (CVE-2024-56742 bsc#1235613)\n- commit ff30550\n\n- scsi: target: Fix NULL pointer dereference in\n  core_scsi3_decode_spec_i_port() (CVE-2025-38399 bsc#1247097).\n- commit e689eaa\n\n- RDMA/siw: Fix the sendmsg byte count in siw_tcp_sendpages (git-fixes)\n- commit 39fb4df\n\n- drm/v3d: Disable interrupts before resetting the GPU\n  (CVE-2025-38371 bsc#1247178).\n- commit 4160ac6\n\n- btrfs: fix log tree replay failure due to file with 0 links\n  and extents (git-fixes).\n- commit fd0c9dd\n\n- netlink: make sure we allow at least one dump skb\n  (CVE-2025-38465 bsc#1247118).\n- netlink: Fix rmem check in netlink_broadcast_deliver()\n  (CVE-2025-38465 bsc#1247118).\n- netlink: Fix wraparounds of sk-\u0026gt;sk_rmem_alloc (CVE-2025-38465\n  bsc#1247118).\n- commit b3ac9f0\n\n- Refresh\n  patches.kabi/xsk-Fix-race-condition-in-AF_XDP-generic-RX-path.patch.\n  Drop the static_assert() kABI checks temporarily until we have a proper\n  solution to signal kABI verification.\n- commit d4817c8\n\n- af_unix: Add a prompt to CONFIG_AF_UNIX_OOB (bsc#1246093).\n- commit 9dcc611\n\n- net: usbnet: Fix the wrong netif_carrier_on() call (git-fixes).\n- commit 3ed80f8\n\n- kABI: restore layout of struct msi_desc (CVE-2025-38062\n  bsc#1245216).\n- genirq/msi: Store the IOMMU IOVA directly in msi_desc instead\n  of iommu_cookie (CVE-2025-38062 bsc#1245216).\n- commit 19502f4\n\n- Delete\n  patches.suse/af_unix-Disable-MSG_OOB-for-unprivileged-users.patch.\n- commit e99b1bb\n\n- Update config files. (CVE-2025-38236 bsc#1246093)\n  Disable CONFIG_AF_UNIX_OOB as the implementation is ridden with security\n  bugs whose fixes would be hard to backport and the feature has no known\n  users.\n- commit f8cd607\n\n- Refresh patches.suse/x86-its-Enumerate-Indirect-Target-Selection-ITS-bug.patch.\n- Refresh\n  patches.suse/x86-its-Add-vmexit-option-to-skip-mitigation-on-some-CPUs.patch.\n  Fix affected model steppings.\n- commit 115d04b\n\n- KVM: x86: Reset IRTE to host control if *new* route isn't\n  postable (bsc#1242960 CVE-2025-37885).\n- commit b463fcd\n\n- enabled CONFIG_X86_INTEL_TSX_MODE_AUTO\n  This is a response to bsc#1246695. As result of TAA vulnerability\n  (CVE-2019-11135) we have aimed to follow the upstream default for TSX\n  but due to a mistake we have ended up using CONFIG_X86_INTEL_TSX_MODE_ON\n  rather than CONFIG_X86_INTEL_TSX_MODE_OFF. This has been noticed later\n  on and fixed to align with upstream. Which has made some users unhappy\n  because they have lost a default TSX functionality even on HW that is\n  not susceptible to CVE-2019-11135.\n  We have discussed different ways to deal with that but the likely most\n  straightforward turned out to be to go with CONFIG_X86_INTEL_TSX_MODE_AUTO\n  which disables TSX only on CVE-2019-11135 affected HW. We are still\n  diverging from the upstream here but there are some positive indications\n  that no new TSX based side channels have been discovered since.\n- commit 395c9dd\n\n- tcp: call tcp_measure_rcv_mss() for ooo packets (git-fixes).\n- commit 54261d2\n\n- net/sched: sch_qfq: Avoid triggering might_sleep in atomic\n  context in qfq_delete_class (git-fixes).\n- commit cdfb027\n\n- Refresh\n  patches.suse/af_unix-Disable-MSG_OOB-for-unprivileged-users.patch.\n  Print message upon disabled use.\n- commit 31d5690\n\n- Refresh\n  patches.suse/virtio-blk-scsi-use-block-layer-helpers-to-calculate.patch.\n- commit 773f5a0\n\n- Rename to\n  patches.suse/scsi-use-block-layer-helpers-to-calculate-num-of-que.patch.\n- commit dd839b8\n\n- Refresh\n  patches.suse/nvme-pci-use-block-layer-helpers-to-calculate-num-of.patch.\n- commit e114e47\n\n- Refresh\n  patches.suse/blk-mq-add-number-of-queue-calc-helper.patch.\n- commit db4fa45\n\n- Rename to\n  patches.suse/lib-group_cpus-Let-group_cpu_evenly-return-the-numbe.patch.\n  Refresh:\n  - patches.kabi/kabi-fix-group-cpus-evenly.patch\n  - patches.suse/lib-group_cpus-honor-housekeeping-config-when-grouping.patch\n- commit ca07a82\n\n- btrfs: tests: fix chunk map leak after failure to add it to\n  the tree (git-fixes).\n- commit 4c3fd9d\n\n- lib/group_cpus: fix NULL pointer dereference from\n  group_cpus_evenly() (bsc#1236897).\n- lib/group_cpus.c: avoid acquiring cpu hotplug lock in\n  group_cpus_evenly (bsc#1236897).\n- commit 749ceff\n\n- btrfs: fix ssd_spread overallocation (git-fixes).\n- commit 760f402\n\n- btrfs: use btrfs_record_snapshot_destroy() during rmdir\n  (git-fixes).\n- commit 05219d1\n\n- btrfs: propagate last_unlink_trans earlier when doing a rmdir\n  (git-fixes).\n- btrfs: rename err to ret in btrfs_rmdir() (git-fixes).\n- commit 6fea6c3\n\n- btrfs: don't skip remaining extrefs if dir not found during\n  log replay (git-fixes).\n- commit ae66e11\n\n- btrfs: don't ignore inode missing when replaying log tree\n  (git-fixes).\n- commit 87671c8\n\n- btrfs: fix inode lookup error handling during log replay\n  (git-fixes).\n- commit a89d2a6\n\n- nvmet-tcp: fix callback lock for TLS handshake (git-fixes).\n- nvme: fix misaccounting of nvme-mpath inflight I/O (git-fixes).\n- nvme: fix endianness of command word prints in\n  nvme_log_err_passthru() (git-fixes).\n- nvme: fix inconsistent RCU list manipulation in\n  nvme_ns_add_to_ctrl_list() (git-fixes).\n- commit bbf2481\n\n- RDMA/core: Rate limit GID cache warning messages (git-fixes)\n- commit fd0e41a\n\n- kernel-syms.spec: Drop old rpm release number hack (bsc#1247172).\n- commit b4fa2d1\n\n- rtc: rv3028: fix incorrect maximum clock rate handling\n  (git-fixes).\n- rtc: pcf8563: fix incorrect maximum clock rate handling\n  (git-fixes).\n- rtc: pcf85063: fix incorrect maximum clock rate handling\n  (git-fixes).\n- rtc: nct3018y: fix incorrect maximum clock rate handling\n  (git-fixes).\n- rtc: hym8563: fix incorrect maximum clock rate handling\n  (git-fixes).\n- rtc: ds1307: fix incorrect maximum clock rate handling\n  (git-fixes).\n- ucount: fix atomic_long_inc_below() argument type (git-fixes).\n- i3c: fix module_i3c_i2c_driver() with I3C=n (git-fixes).\n- commit e466472\n\n- pinmux: fix race causing mux_owner NULL with active mux_usecount\n  (git-fixes).\n- pinctrl: sunxi: Fix memory leak on krealloc failure (git-fixes).\n- fbdev: imxfb: Check fb_add_videomode to prevent null-ptr-deref\n  (git-fixes).\n- firewire: ohci: correct code comments about bus_reset tasklet\n  (git-fixes).\n- commit fd1a6ae\n\n- PCI: rockchip-host: Fix \u0026quot;Unexpected Completion\u0026quot; log message\n  (git-fixes).\n- PCI: endpoint: pci-epf-vntb: Fix the incorrect usage of __iomem\n  attribute (git-fixes).\n- PCI: endpoint: pci-epf-vntb: Return -ENOENT if\n  pci_epc_get_next_free_bar() fails (git-fixes).\n- PCI: endpoint: Fix configfs group removal on driver teardown\n  (git-fixes).\n- PCI: endpoint: Fix configfs group list head handling\n  (git-fixes).\n- watchdog: ziirave_wdt: check record length in\n  ziirave_firm_verify() (git-fixes).\n- dmaengine: nbpfaxi: Add missing check after DMA map (git-fixes).\n- dmaengine: mv_xor: Fix missing check after DMA map and missing\n  unmap (git-fixes).\n- dmaengine: qcom: gpi: Drop unused gpi_write_reg_field()\n  (git-fixes).\n- dmaengine: dw-edma: Drop unused dchan2dev() and chan2dev()\n  (git-fixes).\n- ASoC: fsl_xcvr: get channel status data when PHY is not exists\n  (git-fixes).\n- soundwire: stream: restore params when prepare ports fail\n  (git-fixes).\n- power: supply: max14577: Handle NULL pdata when CONFIG_OF is\n  not set (git-fixes).\n- power: supply: cpcap-charger: Fix null check for\n  power_supply_get_by_name (git-fixes).\n- ALSA: hda/realtek - Add mute LED support for HP Pavilion\n  15-eg0xxx (stable-fixes).\n- can: netlink: can_changelink(): fix NULL pointer deref of\n  struct can_priv::do_set_mode (git-fixes).\n- ALSA: hda: Add missing NVIDIA HDA codec IDs (stable-fixes).\n- usb: typec: tcpm: apply vbus before data bringup in\n  tcpm_src_attach (git-fixes).\n- usb: typec: tcpm: allow switching to mode accessory to mux\n  properly (stable-fixes).\n- usb: typec: tcpm: allow to use sink in accessory mode\n  (stable-fixes).\n- ALSA: hda/tegra: Add Tegra264 support (stable-fixes).\n- can: dev: can_restart(): move debug message and stats after\n  successful restart (stable-fixes).\n- can: dev: can_restart(): reverse logic to remove need for goto\n  (stable-fixes).\n- commit 0f0c0d9\n\n- btrfs: don't silently ignore unexpected extent type when\n  replaying log (git-fixes).\n- commit e423498\n\n- btrfs: fix invalid inode pointer dereferences during log replay\n  (git-fixes).\n- commit 78cbba9\n\n- btrfs: return a btrfs_inode from read_one_inode() (git-fixes).\n- commit b3a9472\n\n- iommu/arm-smmu-qcom: Add SM6115 MDSS compatible (git-fixes).\n- iommu/amd: Fix geometry.aperture_end for V2 tables (git-fixes).\n- commit f8c05a9\n\n- btrfs: return a btrfs_inode from btrfs_iget_logging()\n  (git-fixes).\n- commit 88ed97b\n\n- btrfs: use NOFS context when getting inodes during logging\n  and log replay (git-fixes).\n- commit 88eb1d5\n\n- virtio-net: ensure the received length does not exceed allocated\n  size (CVE-2025-38375 bsc#1247177).\n- commit 2adf745\n\n- btrfs: update superblock's device bytes_used when dropping chunk\n  (git-fixes).\n- commit e33076b\n\n- Update\n  patches.suse/0001-mm-hugetlb-fix-huge_pmd_unshare-vs-GUP-fast-race.patch\n  (bsc#1245431 CVE-2025-38085 bsc#1245499).\n- Update\n  patches.suse/0001-mm-hugetlb-unshare-page-tables-during-VMA-split-not-.patch\n  (bsc#1245431 CVE-2025-38084 bsc#1245498).\n- Update\n  patches.suse/ACPI-CPPC-Fix-NULL-pointer-dereference-when-nosmp-is.patch\n  (git-fixes CVE-2025-38113 bsc#1245683).\n- Update\n  patches.suse/ACPICA-Refuse-to-evaluate-a-method-if-arguments-are-.patch\n  (stable-fixes CVE-2025-38386 bsc#1247138).\n- Update\n  patches.suse/ACPICA-fix-acpi-operand-cache-leak-in-dswstate.c.patch\n  (stable-fixes CVE-2025-38345 bsc#1246337).\n- Update\n  patches.suse/ACPICA-fix-acpi-parse-and-parseext-cache-leaks.patch\n  (stable-fixes CVE-2025-38344 bsc#1246334).\n- Update\n  patches.suse/ALSA-usb-audio-Fix-out-of-bounds-read-in-snd_usb_get.patch\n  (git-fixes CVE-2025-38249 bsc#1246171).\n- Update\n  patches.suse/ASoC-Intel-avs-Verify-content-returned-by-parse_int_.patch\n  (git-fixes CVE-2025-38307 bsc#1246364).\n- Update\n  patches.suse/ASoC-codecs-wcd9335-Fix-missing-free-of-regulator-su.patch\n  (git-fixes CVE-2025-38259 bsc#1246220).\n- Update\n  patches.suse/Bluetooth-Fix-NULL-pointer-deference-on-eir_get_serv.patch\n  (git-fixes CVE-2025-38304 bsc#1246240).\n- Update\n  patches.suse/Bluetooth-Fix-null-ptr-deref-in-l2cap_sock_resume_cb.patch\n  (git-fixes CVE-2025-38473 bsc#1247289).\n- Update\n  patches.suse/Bluetooth-MGMT-Fix-UAF-on-mgmt_remove_adv_monitor_co.patch\n  (git-fixes CVE-2025-38118 bsc#1245670).\n- Update\n  patches.suse/HID-core-do-not-bypass-hid_hw_raw_request.patch\n  (stable-fixes CVE-2025-38494 bsc#1247349).\n- Update\n  patches.suse/HID-core-ensure-the-allocated-report-buffer-can-cont.patch\n  (stable-fixes CVE-2025-38495 bsc#1247348).\n- Update\n  patches.suse/IB-mlx5-Fix-potential-deadlock-in-MR-deregistration.patch\n  (git-fixes CVE-2025-38373 bsc#1247033).\n- Update\n  patches.suse/Input-ims-pcu-check-record-size-in-ims_pcu_flash_fir.patch\n  (git-fixes CVE-2025-38428 bsc#1247150).\n- Update\n  patches.suse/NFC-nci-uart-Set-tty-disc_data-only-in-success-path.patch\n  (git-fixes CVE-2025-38416 bsc#1247151).\n- Update\n  patches.suse/NFSv4-pNFS-Fix-a-race-to-wake-on-NFS_LAYOUT_DRAIN.patch\n  (git-fixes CVE-2025-38393 bsc#1247170).\n- Update\n  patches.suse/RDMA-cma-Fix-hang-when-cma_netevent_callback-fails-t.patch\n  (git-fixes CVE-2025-38151 bsc#1245745).\n- Update\n  patches.suse/RDMA-iwcm-Fix-use-after-free-of-work-objects-after-c.patch\n  (git-fixes CVE-2025-38211 bsc#1246008).\n- Update\n  patches.suse/RDMA-mlx5-Fix-error-flow-upon-firmware-failure-for-R.patch\n  (git-fixes CVE-2025-38161 bsc#1245777).\n- Update\n  patches.suse/RDMA-mlx5-Initialize-obj_event-obj_sub_list-before-x.patch\n  (git-fixes CVE-2025-38387 bsc#1247154).\n- Update\n  patches.suse/Squashfs-check-return-result-of-sb_min_blocksize.patch\n  (git-fixes CVE-2025-38415 bsc#1247147).\n- Update\n  patches.suse/VMCI-fix-race-between-vmci_host_setup_notify-and-vmc.patch\n  (git-fixes CVE-2025-38102 bsc#1245669).\n- Update\n  patches.suse/aoe-clean-device-rq_list-in-aoedev_downdev.patch\n  (git-fixes CVE-2025-38326 bsc#1246490).\n- Update\n  patches.suse/ata-pata_via-Force-PIO-for-ATAPI-devices-on-VT6415-V.patch\n  (stable-fixes CVE-2025-38336 bsc#1246370).\n- Update\n  patches.suse/backlight-pm8941-Add-NULL-check-in-wled_configure.patch\n  (git-fixes CVE-2025-38143 bsc#1245714).\n- Update patches.suse/bnxt-properly-flush-XDP-redirect-lists.patch\n  (git-fixes CVE-2025-38246 bsc#1246195).\n- Update\n  patches.suse/bpf-sockmap-Fix-panic-when-calling-skb_linearize.patch\n  (bsc#1245749 CVE-2025-38154 CVE-2025-38165 bsc#1245757).\n- Update patches.suse/bus-fsl-mc-fix-double-free-on-mc_dev.patch\n  (git-fixes CVE-2025-38313 bsc#1246342).\n- Update\n  patches.suse/calipso-Fix-null-ptr-deref-in-calipso_req_-set-del-a.patch\n  (git-fixes CVE-2025-38181 bsc#1246000).\n- Update\n  patches.suse/comedi-Fail-COMEDI_INSNLIST-ioctl-if-n_insns-is-too-.patch\n  (git-fixes CVE-2025-38481 bsc#1247276).\n- Update\n  patches.suse/comedi-Fix-initialization-of-data-for-instructions-t.patch\n  (git-fixes CVE-2025-38478 bsc#1247273).\n- Update\n  patches.suse/comedi-Fix-use-of-uninitialized-data-in-insn_rw_emul.patch\n  (git-fixes CVE-2025-38480 bsc#1247274).\n- Update\n  patches.suse/comedi-das16m1-Fix-bit-shift-out-of-bounds.patch\n  (git-fixes CVE-2025-38483 bsc#1247278).\n- Update\n  patches.suse/comedi-das6402-Fix-bit-shift-out-of-bounds.patch\n  (git-fixes CVE-2025-38482 bsc#1247277).\n- Update\n  patches.suse/crypto-marvell-cesa-Handle-zero-length-skcipher-requ.patch\n  (git-fixes CVE-2025-38173 bsc#1245769).\n- Update\n  patches.suse/crypto-sun8i-ce-cipher-fix-error-handling-in-sun8i_c.patch\n  (git-fixes CVE-2025-38300 bsc#1246349).\n- Update patches.suse/dm-bufio-fix-sched-in-atomic-context.patch\n  (git-fixes CVE-2025-38496 bsc#1247284).\n- Update\n  patches.suse/dma-buf-insert-memory-barrier-before-updating-num_fe.patch\n  (git-fixes CVE-2025-38095 bsc#1245658).\n- Update\n  patches.suse/dmaengine-idxd-Check-availability-of-workqueue-alloc.patch\n  (stable-fixes CVE-2025-38369 bsc#1247209).\n- Update\n  patches.suse/dmaengine-ti-Add-NULL-check-in-udma_probe.patch\n  (git-fixes CVE-2025-38138 bsc#1245719).\n- Update\n  patches.suse/drivers-rapidio-rio_cm.c-prevent-possible-heap-overw.patch\n  (stable-fixes CVE-2025-38090 bsc#1245510).\n- Update\n  patches.suse/drm-amd-display-Add-null-pointer-check-for-get_first.patch\n  (git-fixes CVE-2025-38362 bsc#1247089).\n- Update\n  patches.suse/drm-amd-pp-Fix-potential-NULL-pointer-dereference-in.patch\n  (git-fixes CVE-2025-38319 bsc#1246243).\n- Update\n  patches.suse/drm-exynos-exynos7_drm_decon-add-vblank-check-in-IRQ.patch\n  (git-fixes CVE-2025-38467 bsc#1247146).\n- Update\n  patches.suse/drm-gem-Acquire-references-on-GEM-handles-for-frameb.patch\n  (stable-fixes CVE-2025-38449 bsc#1247255).\n- Update\n  patches.suse/drm-i915-gt-Fix-timeline-left-held-on-VMA-alloc-erro.patch\n  (git-fixes CVE-2025-38389 bsc#1247153).\n- Update\n  patches.suse/drm-msm-Fix-a-fence-leak-in-submit-error-path.patch\n  (stable-fixes CVE-2025-38410 bsc#1247128).\n- Update\n  patches.suse/drm-msm-Fix-another-leak-in-the-submit-error-path.patch\n  (stable-fixes CVE-2025-38409 bsc#1247285).\n- Update\n  patches.suse/drm-msm-gpu-Fix-crash-when-throttling-GPU-immediatel.patch\n  (git-fixes CVE-2025-38354 bsc#1247061).\n- Update\n  patches.suse/drm-scheduler-signal-scheduled-fence-when-kill-job.patch\n  (stable-fixes CVE-2025-38436 bsc#1247227).\n- Update\n  patches.suse/drm-tegra-Fix-a-possible-null-pointer-dereference.patch\n  (git-fixes CVE-2025-38363 bsc#1247018).\n- Update\n  patches.suse/fbcon-Make-sure-modelist-not-set-on-unregistered-con.patch\n  (stable-fixes CVE-2025-38198 bsc#1245952).\n- Update\n  patches.suse/fbdev-Fix-do_register_framebuffer-to-prevent-null-pt.patch\n  (git-fixes CVE-2025-38215 bsc#1246109).\n- Update\n  patches.suse/fbdev-Fix-fb_set_var-to-prevent-null-ptr-deref-in-fb.patch\n  (git-fixes CVE-2025-38214 bsc#1246042).\n- Update\n  patches.suse/fbdev-core-fbcvt-avoid-division-by-0-in-fb_cvt_hperi.patch\n  (git-fixes CVE-2025-38312 bsc#1246386).\n- Update\n  patches.suse/fs-nfs-read-fix-double-unlock-bug-in-nfs_return_empty_folio.patch\n  (git-fixes CVE-2025-38338 bsc#1246258).\n- Update\n  patches.suse/gve-add-missing-NULL-check-for-gve_alloc_pending_pac.patch\n  (git-fixes CVE-2025-38122 bsc#1245746).\n- Update\n  patches.suse/hwmon-asus-ec-sensors-check-sensor-index-in-read_str.patch\n  (git-fixes CVE-2025-38142 bsc#1245713).\n- Update\n  patches.suse/hwmon-ftsteutates-Fix-TOCTOU-race-in-fts_read.patch\n  (git-fixes CVE-2025-38217 bsc#1246002).\n- Update\n  patches.suse/i2c-designware-Fix-an-initialization-issue.patch\n  (git-fixes CVE-2025-38380 bsc#1247028).\n- Update\n  patches.suse/i2c-tegra-check-msg-length-in-SMBUS-block-read.patch\n  (bsc#1242086 CVE-2025-38425 bsc#1247251).\n- Update\n  patches.suse/ice-fix-Tx-scheduler-error-handling-in-XDP-callback.patch\n  (git-fixes CVE-2025-38127 bsc#1245705).\n- Update\n  patches.suse/iio-accel-fxls8962af-Fix-use-after-free-in-fxls8962a.patch\n  (git-fixes CVE-2025-38485 bsc#1247236).\n- Update\n  patches.suse/jffs2-check-jffs2_prealloc_raw_node_refs-result-in-few-other-places.patch\n  (git-fixes CVE-2025-38328 bsc#1246249).\n- Update\n  patches.suse/jffs2-check-that-raw-node-were-preallocated-before-writing-summary.patch\n  (git-fixes CVE-2025-38194 bsc#1245957).\n- Update\n  patches.suse/media-cxusb-no-longer-judge-rbuf-when-the-write-fail.patch\n  (git-fixes CVE-2025-38229 bsc#1246049).\n- Update\n  patches.suse/media-imx-jpeg-Cleanup-after-an-allocation-error.patch\n  (git-fixes CVE-2025-38225 bsc#1246041).\n- Update\n  patches.suse/media-vidtv-Terminating-the-subsequent-process-of-in.patch\n  (git-fixes CVE-2025-38227 bsc#1246031).\n- Update\n  patches.suse/media-vivid-Change-the-siize-of-the-composing.patch\n  (git-fixes CVE-2025-38226 bsc#1246050).\n- Update\n  patches.suse/mtd-nand-ecc-mxic-Fix-use-of-uninitialized-variable-.patch\n  (git-fixes CVE-2025-38277 bsc#1246246).\n- Update\n  patches.suse/mtd-spinand-fix-memory-leak-of-ECC-engine-conf.patch\n  (stable-fixes CVE-2025-38384 bsc#1247035).\n- Update\n  patches.suse/mtk-sd-Prevent-memory-corruption-from-DMA-map-failur.patch\n  (git-fixes CVE-2025-38401 bsc#1247125).\n- Update\n  patches.suse/nbd-fix-uaf-in-nbd_genl_connect-error-path.patch\n  (git-fixes CVE-2025-38443 bsc#1247164).\n- Update patches.suse/net-Fix-TOCTOU-issue-in-sk_is_readable.patch\n  (git-fixes CVE-2025-38112 bsc#1245668).\n- Update\n  patches.suse/net-fix-udp-gso-skb_segment-after-pull-from-frag_lis.patch\n  (git-fixes CVE-2025-38124 bsc#1245690).\n- Update\n  patches.suse/net-mdiobus-Fix-potential-out-of-bounds-clause-45-re.patch\n  (git-fixes CVE-2025-38110 bsc#1245665).\n- Update\n  patches.suse/net-mdiobus-Fix-potential-out-of-bounds-read-write-a.patch\n  (git-fixes CVE-2025-38111 bsc#1245666).\n- Update\n  patches.suse/net-mlx5-Fix-ECVF-vports-unload-on-shutdown-flow.patch\n  (git-fixes CVE-2025-38109 bsc#1245684).\n- Update\n  patches.suse/net-phy-clear-phydev-devlink-when-the-link-is-delete.patch\n  (git-fixes CVE-2025-38149 bsc#1245737).\n- Update\n  patches.suse/net-phy-mscc-Fix-memory-leak-when-using-one-step-tim.patch\n  (git-fixes CVE-2025-38148 bsc#1245735).\n- Update\n  patches.suse/net-sched-Return-NULL-when-htb_lookup_leaf-encounter.patch\n  (git-fixes CVE-2025-38468 bsc#1247437).\n- Update\n  patches.suse/net-sched-fix-use-after-free-in-taprio_dev_notifier.patch\n  (git-fixes CVE-2025-38087 bsc#1245504).\n- Update\n  patches.suse/net-sched-sch_qfq-Fix-race-condition-on-qfq_aggregat.patch\n  (git-fixes CVE-2025-38477 bsc#1247314).\n- Update\n  patches.suse/net-tipc-fix-refcount-warning-in-tipc_aead_encrypt.patch\n  (CVE-2025-38052 bsc#1244749 CVE-2025-38273 bsc#1246266).\n- Update\n  patches.suse/net-usb-aqc111-fix-error-handling-of-usbnet-read-cal.patch\n  (git-fixes CVE-2025-38153 bsc#1245744).\n- Update\n  patches.suse/net-usb-lan78xx-fix-WARN-in-__netif_napi_del_locked-.patch\n  (git-fixes CVE-2025-38385 bsc#1247149).\n- Update patches.suse/net-wwan-t7xx-Fix-napi-rx-poll-issue.patch\n  (git-fixes CVE-2025-38123 bsc#1245688).\n- Update\n  patches.suse/net_sched-ets-fix-a-race-in-ets_qdisc_change.patch\n  (git-fixes CVE-2025-38107 bsc#1245676).\n- Update\n  patches.suse/net_sched-red-fix-a-race-in-__red_change.patch\n  (git-fixes CVE-2025-38108 bsc#1245675).\n- Update\n  patches.suse/net_sched-sch_sfq-reject-invalid-perturb-period.patch\n  (git-fixes CVE-2025-38193 bsc#1245945).\n- Update\n  patches.suse/netfilter-nf_set_pipapo_avx2-fix-initial-map-fill.patch\n  (git-fixes CVE-2024-57947 bsc#1236333 CVE-2025-38120\n  bsc#1245711).\n- Update\n  patches.suse/nfs-Clean-up-proc-net-rpc-nfs-when-nfs_fs_proc_net_init-fails.patch\n  (git-fixes CVE-2025-38400 bsc#1247123).\n- Update\n  patches.suse/nfsd-Initialize-ssc-before-laundromat_work-to-prevent-NULL-dereference.patch\n  (git-fixes CVE-2025-38231 bsc#1246055).\n- Update\n  patches.suse/nfsd-nfsd4_spo_must_allow-must-check-this-is-a-v4-compound-request.patch\n  (git-fixes CVE-2025-38430 bsc#1247160).\n- Update\n  patches.suse/page_pool-Fix-use-after-free-in-page_pool_recycle_in.patch\n  (git-fixes CVE-2025-38129 bsc#1245723).\n- Update patches.suse/perf-Fix-sample-vs-do_exit.patch\n  (bsc#1246547 CVE-2025-38424 bsc#1247293).\n- Update\n  patches.suse/phy-qcom-qmp-usb-Fix-an-NULL-vs-IS_ERR-bug.patch\n  (git-fixes CVE-2025-38275 bsc#1246236).\n- Update\n  patches.suse/pinctrl-at91-Fix-possible-out-of-boundary-access.patch\n  (git-fixes CVE-2025-38286 bsc#1246283).\n- Update\n  patches.suse/platform-x86-dell-wmi-sysman-Fix-WMI-data-block-retr.patch\n  (git-fixes CVE-2025-38412 bsc#1247132).\n- Update patches.suse/platform-x86-dell_rbu-Fix-list-usage.patch\n  (git-fixes CVE-2025-38197 bsc#1246047).\n- Update\n  patches.suse/powerpc-powernv-memtrace-Fix-out-of-bounds-issue-in-.patch\n  (bsc#1244309 ltc#213790 CVE-2025-38088 bsc#1245506).\n- Update\n  patches.suse/ptp-remove-ptp-n_vclocks-check-logic-in-ptp_vclock_i.patch\n  (git-fixes CVE-2025-38305 bsc#1246358).\n- Update\n  patches.suse/regulator-gpio-Fix-the-out-of-bounds-access-to-drvda.patch\n  (git-fixes CVE-2025-38395 bsc#1247171).\n- Update\n  patches.suse/rose-fix-dangling-neighbour-pointers-in-rose_rt_devi.patch\n  (git-fixes CVE-2025-38377 bsc#1247174).\n- Update\n  patches.suse/rpl-Fix-use-after-free-in-rpl_do_srh_inline.patch\n  (git-fixes CVE-2025-38476 bsc#1247317).\n- Update\n  patches.suse/s390-bpf-Fix-bpf_arch_text_poke-with-new_addr-NULL-again.patch\n  (git-fixes bsc#1246870 CVE-2025-38489 bsc#1247241).\n- Update\n  patches.suse/s390-pkey-Prevent-overflow-in-size-calculation-for-memdup_.patch\n  (git-fixes bsc#1245598 CVE-2025-38257 bsc#1246186).\n- Update\n  patches.suse/sch_hfsc-make-hfsc_qlen_notify-idempotent.patch\n  (CVE-2025-37798 bsc#1242414 CVE-2025-38177 bsc#1245986).\n- Update\n  patches.suse/scsi-lpfc-Avoid-potential-ndlp-use-after-free-in-dev.patch\n  (bsc#1242993 CVE-2025-38289 bsc#1246287).\n- Update patches.suse/scsi-lpfc-Use-memcpy-for-BIOS-version.patch\n  (bsc#1240966 CVE-2025-38332 bsc#1246375).\n- Update\n  patches.suse/serial-Fix-potential-null-ptr-deref-in-mlb_usio_prob.patch\n  (git-fixes CVE-2025-38135 bsc#1246023).\n- Update\n  patches.suse/soc-aspeed-Add-NULL-check-in-aspeed_lpc_enable_snoop.patch\n  (git-fixes CVE-2025-38145 bsc#1245765).\n- Update\n  patches.suse/soc-aspeed-lpc-snoop-Don-t-disable-channels-that-are.patch\n  (git-fixes CVE-2025-38487 bsc#1247238).\n- Update\n  patches.suse/software-node-Correct-a-OOB-check-in-software_node_g.patch\n  (stable-fixes CVE-2025-38342 bsc#1246453).\n- Update\n  patches.suse/sunrpc-handle-SVC_GARBAGE-during-svc-auth-processing-as-auth-error.patch\n  (git-fixes CVE-2025-38089 bsc#1245508).\n- Update\n  patches.suse/thunderbolt-Do-not-double-dequeue-a-configuration-re.patch\n  (stable-fixes CVE-2025-38174 bsc#1245781).\n- Update\n  patches.suse/usb-chipidea-udc-disconnect-reconnect-from-host-when.patch\n  (git-fixes CVE-2025-38376 bsc#1247176).\n- Update\n  patches.suse/usb-gadget-u_serial-Fix-race-condition-in-TTY-wakeup.patch\n  (git-fixes CVE-2025-38448 bsc#1247233).\n- Update\n  patches.suse/usb-net-sierra-check-for-no-status-endpoint.patch\n  (git-fixes CVE-2025-38474 bsc#1247311).\n- Update\n  patches.suse/usb-renesas_usbhs-Reorder-clock-handling-and-power-m.patch\n  (git-fixes CVE-2025-38136 bsc#1245691).\n- Update\n  patches.suse/usb-typec-altmodes-displayport-do-not-index-invalid-.patch\n  (git-fixes CVE-2025-38391 bsc#1247181).\n- Update\n  patches.suse/usb-typec-displayport-Fix-potential-deadlock.patch\n  (git-fixes CVE-2025-38404 bsc#1247271).\n- Update\n  patches.suse/vgacon-Add-check-for-vc_origin-address-range-in-vgac.patch\n  (git-fixes CVE-2025-38213 bsc#1246037).\n- Update\n  patches.suse/wifi-ath11k-fix-node-corruption-in-ar-arvifs-list.patch\n  (git-fixes CVE-2025-38293 bsc#1246292).\n- Update\n  patches.suse/wifi-ath12k-fix-invalid-access-to-memory.patch\n  (git-fixes CVE-2025-38292 bsc#1246295).\n- Update\n  patches.suse/wifi-ath12k-fix-node-corruption-in-ar-arvifs-list.patch\n  (git-fixes CVE-2025-38290 bsc#1246293).\n- Update\n  patches.suse/wifi-ath6kl-remove-WARN-on-bad-firmware-input.patch\n  (stable-fixes CVE-2025-38406 bsc#1247210).\n- Update\n  patches.suse/wifi-ath9k_htc-Abort-software-beacon-handling-if-dis.patch\n  (git-fixes CVE-2025-38157 bsc#1245747).\n- Update\n  patches.suse/wifi-carl9170-do-not-ping-device-which-has-failed-to.patch\n  (git-fixes CVE-2025-38420 bsc#1247279).\n- Update\n  patches.suse/wifi-mt76-mt7915-Fix-null-ptr-deref-in-mt7915_mmio_w.patch\n  (git-fixes CVE-2025-38155 bsc#1245748).\n- Update\n  patches.suse/wifi-mt76-mt7996-drop-fragments-with-multicast-or-br.patch\n  (stable-fixes CVE-2025-38343 bsc#1246438).\n- Update\n  patches.suse/wifi-p54-prevent-buffer-overflow-in-p54_rx_eeprom_re.patch\n  (git-fixes CVE-2025-38348 bsc#1246262).\n- Update\n  patches.suse/wifi-rtw88-fix-the-para-buffer-size-to-avoid-reading.patch\n  (git-fixes CVE-2025-38159 bsc#1245751).\n- commit de345c9\n\n- Revert \u0026quot;cgroup_freezer: cgroup_freezing: Check if not frozen\u0026quot;\n  (bsc#1219338).\n- sched,freezer: Remove unnecessary warning in __thaw_task\n  (bsc#1219338).\n- commit 108588a\n\n- ipv6: fix possible infinite loop in fib6_info_uses_dev()\n  (git-fixes).\n- commit 16f1f6e\n\n- ipv6: prevent infinite loop in rt6_nlmsg_size() (git-fixes).\n- commit cb535e8\n\n- net/sched: Restrict conditions for adding duplicating netems\n  to qdisc tree (git-fixes).\n- commit 6fae648\n\n- Refresh\n  patches.suse/af_unix-Disable-MSG_OOB-for-unprivileged-users.patch.\n  Add cmdline override.\n- commit 4b6e594\n\n- af_unix: Disable MSG_OOB for unprivileged users (CVE-2025-38236\n  bsc#1246093).\n- commit 6110a63\n\n- fs/orangefs: Allow 2 more characters in do_c_string()\n  (git-fixes).\n- commit 642fa26\n\n- jfs: fix metapage reference count leak in dbAllocCtl\n  (git-fixes).\n- commit 58c926b\n\n- x86/mce/amd: Fix threshold limit reset (git-fixes).\n- commit 468e2ae\n\n- bus: mhi: ep: Update read pointer only after buffer is written\n  (CVE-2025-38429 bsc#1247253).\n- commit 3341565\n\n- x86/mce: Don't remove sysfs if thresholding sysfs init fails (git-fixes).\n- commit 3d8385a\n\n- x86/mce: Make sure CMCI banks are cleared during shutdown on Intel (git-fixes).\n- commit fe9eb0f\n\n- x86/mce/amd: Add default names for MCA banks and blocks (git-fixes).\n- commit 27f7700\n\n- x86/traps: Initialize DR6 by writing its architectural reset value (git-fixes).\n- commit 80ddfd8\n\n- media: venus: vdec: Clamp param smaller than 1fps and bigger\n  than 240 (git-fixes).\n- commit 1212a93\n\n- x86/cpu/amd: Fix workaround for erratum 1054 (git-fixes).\n- commit 2d80ddf\n\n- mtd: rawnand: atmel: set pmecc data setup time (git-fixes).\n- mtd: spinand: propagate spinand_wait() errors from\n  spinand_write_page() (git-fixes).\n- mtd: rawnand: fsmc: Add missing check after DMA map (git-fixes).\n- mtd: rawnand: rockchip: Add missing check after DMA map\n  (git-fixes).\n- mtd: rawnand: atmel: Fix dma_mapping_error() address\n  (git-fixes).\n- mtd: rawnand: renesas: Add missing check after DMA map\n  (git-fixes).\n- mtd: spi-nor: Fix spi_nor_try_unlock_all() (git-fixes).\n- mtd: fix possible integer overflow in erase_xfer() (git-fixes).\n- clk: sunxi-ng: v3s: Fix de clock definition (git-fixes).\n- clk: clk-axi-clkgen: fix fpfd_max frequency for zynq\n  (git-fixes).\n- clk: xilinx: vcu: unregister pll_post only if registered\n  correctly (git-fixes).\n- clk: davinci: Add NULL check in davinci_lpsc_clk_register()\n  (git-fixes).\n- hwmon: (gsc-hwmon) fix fan pwm setpoint show functions\n  (git-fixes).\n- pwm: imx-tpm: Reset counter if CMOD is 0 (git-fixes).\n- media: uvcvideo: Do not mark valid metadata as invalid\n  (git-fixes).\n- media: ov2659: Fix memory leaks in ov2659_probe() (git-fixes).\n- media: hi556: correct the test pattern configuration\n  (git-fixes).\n- media: vivid: fix wrong pixel_array control size (git-fixes).\n- media: venus: hfi: explicitly release IRQ during teardown\n  (git-fixes).\n- media: venus: Add a check for packet size after reading from\n  shared memory (git-fixes).\n- media: venus: protect against spurious interrupts during probe\n  (git-fixes).\n- media: venus: venc: Clamp param smaller than 1fps and bigger\n  than 240 (git-fixes).\n- media: v4l2-ctrls: Don't reset handler's error in\n  v4l2_ctrl_handler_free() (git-fixes).\n- media: v4l2-ctrls: Fix H264 SEPARATE_COLOUR_PLANE check\n  (git-fixes).\n- media: imx: fix a potential memory leak in\n  imx_media_csc_scaler_device_init() (git-fixes).\n- media: rainshadow-cec: fix TOCTOU race condition in\n  rain_interrupt() (git-fixes).\n- media: gspca: Add bounds checking to firmware parser\n  (git-fixes).\n- media: usbtv: Lock resolution while streaming (git-fixes).\n- media: uvcvideo: Fix 1-byte out-of-bounds read in\n  uvc_parse_format() (git-fixes).\n- crypto: qat - fix seq_file position update in adf_ring_next()\n  (git-fixes).\n- crypto: qat - fix DMA direction for compression on GEN2 devices\n  (git-fixes).\n- crypto: qat - flush misc workqueue during device shutdown\n  (git-fixes).\n- crypto: qat - disable ZUC-256 capability for QAT GEN5\n  (git-fixes).\n- crypto: img-hash - Fix dma_unmap_sg() nents value (git-fixes).\n- crypto: keembay - Fix dma_unmap_sg() nents value (git-fixes).\n- hwrng: mtk - handle devm_pm_runtime_enable errors (git-fixes).\n- crypto: ccp - Fix crash when rebind ccp device for ccp.ko\n  (git-fixes).\n- crypto: inside-secure - Fix `dma_unmap_sg()` nents value\n  (git-fixes).\n- crypto: ccp - Fix locking on alloc failure handling (git-fixes).\n- crypto: arm/aes-neonbs - work around gcc-15 warning (git-fixes).\n- crypto: qat - fix state restore for banks with exceptions\n  (git-fixes).\n- crypto: qat - allow enabling VFs in the absence of IOMMU\n  (git-fixes).\n- crypto: marvell/cesa - Fix engine load inaccuracy (git-fixes).\n- crypto: qat - use unmanaged allocation for dc_data (git-fixes).\n- crypto: sun8i-ce - fix nents passed to dma_unmap_sg()\n  (git-fixes).\n- commit 8f3fb2a\n\n- Move upstreamed SCSI and ACPI patches into sorted section\n- commit 09d9d7c\n\n- RDMA/uverbs: Add empty rdma_uattrs_has_raw_cap() declaration (git-fixes)\n- commit ced3c6d\n\n- Update config files.\n  run_oldconfig, no functional change.\n- commit 0b6044b\n\n- RDMA/mlx5: Fix compilation warning when USER_ACCESS isn't set (git-fixes)\n- commit dce79bd\n\n- RDMA/hns: Fix -Wframe-larger-than issue (git-fixes)\n- commit 90a067b\n\n- RDMA/hns: Drop GFP_NOWARN (git-fixes)\n- commit 927f6d6\n\n- RDMA/hns: Fix accessing uninitialized resources (git-fixes)\n- commit c1be2f8\n\n- RDMA/hns: Get message length of ack_req from FW (git-fixes)\n- commit 2e9a431\n\n- RDMA/hns: Fix HW configurations not cleared in error flow (git-fixes)\n- commit ba6e757\n\n- RDMA/hns: Fix double destruction of rsv_qp (git-fixes)\n- commit 0d7fee3\n\n- Fix dma_unmap_sg() nents value (git-fixes)\n- commit 89d1cb0\n\n- RDMA/counter: Check CAP_NET_RAW check in user namespace for RDMA counters (git-fixes)\n- commit c5238e7\n\n- RDMA/nldev: Check CAP_NET_RAW in user namespace for QP modify (git-fixes)\n- commit 0d7ab5b\n\n- RDMA/mlx5: Check CAP_NET_RAW in user namespace for devx create (git-fixes)\n- commit c162c8c\n\n- RDMA/uverbs: Check CAP_NET_RAW in user namespace for RAW QP create (git-fixes)\n- commit 3292115\n\n- RDMA/uverbs: Check CAP_NET_RAW in user namespace for QP create (git-fixes)\n- commit 90f88d3\n\n- RDMA/mlx5: Check CAP_NET_RAW in user namespace for anchor create (git-fixes)\n- commit a812e80\n\n- RDMA/mlx5: Check CAP_NET_RAW in user namespace for flow create (git-fixes)\n- commit 9dcd5e1\n\n- RDMA/uverbs: Check CAP_NET_RAW in user namespace for flow create (git-fixes)\n- commit eaff4b0\n\n- vsock: Fix transport_{g2h,h2g} TOCTOU (CVE-2025-38462\n  bsc#1247104).\n- commit f5da768\n\n- tcp: Correct signedness in skb remaining space calculation\n  (CVE-2025-38463 bsc#1247113).\n- net/sched: Always pass notifications when child class becomes\n  empty (CVE-2025-38350 bsc#1246781).\n- maple_tree: fix MA_STATE_PREALLOC flag in mas_preallocate()\n  (CVE-2025-38364 bsc#1247091).\n- commit 7390872\n\n- x86: UV RTC: Add parameter to disable RTC clocksource\n  (bsc#1241345).\n- commit 79ccdce\n\n- clocksource: Set cs_watchdog_read() checks based on\n  .uncertainty_margin (bsc#1241345 bsc#1244457).\n- commit 09911af\n\n- clocksource: Scale the watchdog read retries automatically\n  (bsc#1241345 bsc#1244457).\n- Refresh\n  patches.suse/clocksource-Fix-brown-bag-boolean-thinko-in-cs_watch.patch.\n- Refresh\n  patches.suse/clocksource-Make-watchdog-and-suspend-timing-multipl.patch.\n- commit fdf040b\n\n- wifi: iwlwifi: Fix error code in iwl_op_mode_dvm_start()\n  (git-fixes).\n- wifi: iwlwifi: return ERR_PTR from opmode start()\n  (stable-fixes).\n- commit bb4c593\n\n- drm/amd/pm/powerplay/hwmgr/smu_helper: fix order of mask and\n  value (git-fixes).\n- fbcon: Fix outdated registered_fb reference in comment\n  (git-fixes).\n- drm/msm/dpu: Fill in min_prefill_lines for SC8180X (git-fixes).\n- drm/vmwgfx: Fix Host-Backed userspace on Guest-Backed kernel\n  (git-fixes).\n- drm/panfrost: Fix panfrost device variable name in devfreq\n  (git-fixes).\n- drm/rockchip: cleanup fb when drm_gem_fb_afbc_init failed\n  (git-fixes).\n- can: peak_usb: fix USB FD devices potential malfunction\n  (git-fixes).\n- net: phy: micrel: fix KSZ8081/KSZ8091 cable test (git-fixes).\n- net: usbnet: Avoid potential RCU stall on LINK_CHANGE event\n  (git-fixes).\n- can: kvaser_usb: Assign netdev.dev_port based on device channel\n  index (git-fixes).\n- can: kvaser_pciefd: Store device channel index (git-fixes).\n- Bluetooth: hci_event: Mask data status from LE ext adv reports\n  (git-fixes).\n- wifi: ath12k: fix endianness handling while accessing wmi\n  service bit (git-fixes).\n- wifi: ath11k: fix sleeping-in-atomic in\n  ath11k_mac_op_set_bitrate_mask() (git-fixes).\n- wifi: ath12k: fix dest ring-buffer corruption when ring is full\n  (git-fixes).\n- wifi: ath12k: fix source ring-buffer corruption (git-fixes).\n- wifi: ath12k: fix dest ring-buffer corruption (git-fixes).\n- wifi: ath11k: fix dest ring-buffer corruption when ring is full\n  (git-fixes).\n- wifi: ath11k: fix source ring-buffer corruption (git-fixes).\n- wifi: ath11k: fix dest ring-buffer corruption (git-fixes).\n- wifi: ath11k: fix suspend use-after-free after probe failure\n  (git-fixes).\n- wifi: ath11k: clear initialized flag for deinit-ed srng lists\n  (git-fixes).\n- wifi: brcmfmac: fix P2P discovery failure in P2P peer due to\n  missing P2P IE (git-fixes).\n- Reapply \u0026quot;wifi: mac80211: Update skb's control block key in\n  ieee80211_tx_dequeue()\u0026quot; (git-fixes).\n- wifi: mac80211: Check 802.11 encaps offloading in\n  ieee80211_tx_h_select_key() (git-fixes).\n- wifi: mac80211: Don't call fq_flow_idx() for management frames\n  (git-fixes).\n- wifi: mac80211: Do not schedule stopped TXQs (git-fixes).\n- wifi: plfxlc: Fix error handling in usb driver probe\n  (git-fixes).\n- wifi: mac80211: reject TDLS operations when station is not\n  associated (git-fixes).\n- wifi: brcmsmac: Remove const from tbl_ptr parameter in\n  wlc_lcnphy_common_read_table() (git-fixes).\n- mwl8k: Add missing check after DMA map (git-fixes).\n- iwlwifi: Add missing check for alloc_ordered_workqueue\n  (git-fixes).\n- wifi: iwlwifi: Fix memory leak in iwl_mvm_init() (git-fixes).\n- wifi: rtl818x: Kill URBs before clearing tx status queue\n  (git-fixes).\n- wifi: rtw89: avoid NULL dereference when RX problematic packet\n  on unsupported 6 GHz band (git-fixes).\n- commit 338f129\n\n- usb: gadget: configfs: Fix OOB read on empty string write\n  (CVE-2025-38497 bsc#1247347).\n- commit 96c22e3\n\n- fs: export anon_inode_make_secure_inode() and fix secretmem\n  LSM bypass (CVE-2025-38396 bsc#1247156).\n- commit 281f5f1\n\n- wifi: ath12k: fix GCC_GCC_PCIE_HOT_RST definition for WCN7850\n  (CVE-2025-38414 bsc#1247145).\n- commit be37365\n\n- Docs/ABI: Fix sysfs-kernel-address_bits path (git-fixes).\n- soc: qcom: pmic_glink: fix OF node leak (git-fixes).\n- soc: qcom: fix endianness for QMI header (git-fixes).\n- soc: qcom: QMI encoding/decoding for big endian (git-fixes).\n- soc/tegra: cbb: Clear ERR_FORCE register with ERR_STATUS\n  (git-fixes).\n- usb: musb: omap2430: fix device leak at unbind (git-fixes).\n- usb: gadget: udc: renesas_usb3: fix device leak at unbind\n  (git-fixes).\n- usb: dwc3: meson-g12a: fix device leaks at unbind (git-fixes).\n- usb: atm: cxacru: Merge cxacru_upload_firmware() into\n  cxacru_heavy_init() (git-fixes).\n- thunderbolt: Fix copy+paste error in match_service_id()\n  (git-fixes).\n- usb: typec: ucsi: Update power_supply on power role change\n  (git-fixes).\n- usb: gadget : fix use-after-free in composite_dev_cleanup()\n  (git-fixes).\n- cdc-acm: fix race between initial clearing halt and open\n  (git-fixes).\n- usb: early: xhci-dbc: Fix early_ioremap leak (git-fixes).\n- usb: misc: apple-mfi-fastcharge: Make power supply names unique\n  (git-fixes).\n- Documentation: usb: gadget: Wrap remaining usage snippets in\n  literal code block (git-fixes).\n- usb: host: xhci-plat: fix incorrect type for of_match variable\n  in xhci_plat_probe() (git-fixes).\n- vt: defkeymap: Map keycodes above 127 to K_HOLE (git-fixes).\n- vt: keyboard: Don't process Unicode characters in K_OFF mode\n  (git-fixes).\n- staging: axis-fifo: remove sysfs interface (git-fixes).\n- staging: nvec: Fix incorrect null termination of battery\n  manufacturer (git-fixes).\n- staging: fbtft: fix potential memory leak in\n  fbtft_framebuffer_alloc() (git-fixes).\n- iio: adc: ad_sigma_delta: change to buffer predisable\n  (git-fixes).\n- iio: imu: bno055: fix OOB access of hw_xlate array (git-fixes).\n- bus: mhi: host: Detect events pointing to unexpected TREs\n  (git-fixes).\n- misc: rtsx: usb: Ensure mmc child device is active when card\n  is present (git-fixes).\n- vmci: Prevent the dispatching of uninitialized payloads\n  (git-fixes).\n- samples: mei: Fix building on musl libc (git-fixes).\n- platform/chrome: cros_ec: Unregister notifier in\n  cros_ec_unregister() (git-fixes).\n- gpio: virtio: Fix config space reading (git-fixes).\n- ASoC: ops: dynamically allocate struct snd_ctl_elem_value\n  (git-fixes).\n- ASoC: soc-dai: tidyup return value of\n  snd_soc_xlate_tdm_slot_mask() (git-fixes).\n- Documentation: ACPI: Fix parent device references (git-fixes).\n- ACPI: LPSS: Remove AudioDSP related ID (git-fixes).\n- ACPI: processor: perflib: Fix initial _PPC limit application\n  (git-fixes).\n- powercap: dtpm_cpu: Fix NULL pointer dereference in\n  get_pd_power_uw() (git-fixes).\n- PM / devfreq: Check governor before using governor-\u0026gt;name\n  (git-fixes).\n- commit fbd21ae\n\n- apple-mfi-fastcharge: protect first device name (git-fixes).\n- commit 903dc58\n\n- vsock/vmci: Clear the vmci transport packet properly when\n  initializing it (CVE-2025-38403 bsc#1247141).\n- commit 6379963\n\n- KVM: SVM: Reject SEV{-ES} intra host migration if vCPU creation\n  is in-flight (CVE-2025-38455 bsc#1247101).\n- commit ca76701\n\n- vsock: Fix transport_* TOCTOU (CVE-2025-38461 bsc#1247103).\n- commit 916fdd6\n\n- eventpoll: don't decrement ep refcount while still holding\n  the ep mutex (bsc#1246777 CVE-2025-38349).\n- commit 6c5e857\n\n- jbd2: fix data-race and null-ptr-deref in\n  jbd2_journal_dirty_metadata() (bsc#1246253 CVE-2025-38337).\n- commit 4cfb834\n\n- ext4: inline: fix len overflow in ext4_prepare_inline_data\n  (bsc#1245976 CVE-2025-38222).\n- commit bdddb2f\n\n- ublk: santizize the arguments from userspace when adding a\n  device (bsc#1245937 CVE-2025-38182).\n- commit c70260e\n\n- __legitimize_mnt(): check for MNT_SYNC_UMOUNT should be under\n  mount_lock (bsc#1245151 CVE-2025-38058).\n- commit 5d79b46\n\n- xfs: remove unused trace event xfs_reflink_cow_enospc\n  (git-fixes).\n- commit 43f2e3c\n\n- xfs: only create event xfs_file_compat_ioctl when CONFIG_COMPAT\n  is configure (git-fixes).\n- commit 90cf0ff\n\n- xfs: remove usused xfs_end_io_direct events (git-fixes).\n- commit 973d0e0\n\n- xfs: remove unused event xfs_pagecache_inval (git-fixes).\n- commit 92f5436\n\n- xfs: remove unused event xfs_alloc_near_nominleft (git-fixes).\n- commit cce777b\n\n- xfs: remove unused event xfs_alloc_near_error (git-fixes).\n- commit 5b572bf\n\n- xfs: remove unused event xfs_attr_node_removename (git-fixes).\n- commit 4753b23\n\n- xfs: remove unused xfs_attr events (git-fixes).\n- commit 1b0cc0c\n\n- xfs: remove unused trace event xfs_attr_rmtval_set (git-fixes).\n- commit d855e56\n\n- xfs: remove unused xfs_reflink_compare_extents events\n  (git-fixes).\n- commit a7afc4b\n\n- xfs: remove unused event xfs_ioctl_clone (git-fixes).\n- commit b5dfc1b\n\n- xfs: remove unused event xlog_iclog_want_sync (git-fixes).\n- commit 217c9f9\n\n- xfs: remove unused trace event xfs_attr_remove_iter_return\n  (git-fixes).\n- commit 70b1bc5\n\n- NFSD: detect mismatch of file handle and delegation stateid\n  in OPEN op (git-fixes).\n- commit 00b51c6\n\n- nfsd: handle get_client_locked() failure in\n  nfsd4_setclientid_confirm() (git-fixes).\n- commit b0cf612\n\n- hfsplus: remove mutex_lock check in hfsplus_free_extents\n  (git-fixes).\n- commit e14f374\n\n- s390/entry: Fix last breaking event handling in case of stack\n  corruption (git-fixes bsc#1243806).\n- commit d31e65a\n\n- hfs: make splice write available again (git-fixes).\n- commit 96498bf\n\n- hfsplus: make splice write available again (git-fixes).\n- commit 5121068\n\n- Refresh\n  patches.suse/btrfs-always-fallback-to-buffered-write-if-the-inode.patch.\n  To remove an incorrectly generated file which is not utilized at all.\n- commit 8e57a15\n\n- btrfs: fix non-empty delayed iputs list on unmount due to\n  async workers (git-fixes).\n- commit 285c1f5\n\n- btrfs: fix assertion when building free space tree (git-fixes).\n- commit a3fd65f\n\n- btrfs: fix iteration of extrefs during log replay (bsc#1247031\n  CVE-2025-38382).\n- commit 5e64fe6\n\n- btrfs: fix missing error handling when searching for inode\n  refs during log replay (git-fixes).\n- commit a8205e6\n\n- i2c: qup: jump out of the loop in case of timeout (git-fixes).\n- i2c: virtio: Avoid hang by using interruptible completion wait\n  (git-fixes).\n- i2c: tegra: Fix reset error handling with ACPI (git-fixes).\n- commit 5a2e6c7\n\n- btrfs: fix a race between renames and directory logging\n  (bsc#1247023 CVE-2025-38365).\n- commit 322c28e\n\n- supported.conf: move nvme-apple to optional again\n- commit a3e3a0c\n\n- llist: add interface to check if a node is on a list\n  (CVE-2025-38264 bsc#1246387).\n- commit f06e99c\n\n- nvme-tcp: sanitize request list handling (CVE-2025-38264\n  bsc#1246387).\n- commit 33933f9\n\n- supported.conf: sort entries again\n- commit 2db834f\n\n- supported.conf: add missing entries for armv7hl\n- commit 3fcf489\n\n- nilfs2: reject invalid file types when reading inodes\n  (git-fixes).\n- commit b094111\n\n- resource: fix false warning in __request_region() (git-fixes).\n- bus: fsl-mc: Fix potential double device reference in\n  fsl_mc_get_endpoint() (git-fixes).\n- USB: serial: option: add Telit Cinterion FE910C04 (ECM)\n  composition (stable-fixes).\n- USB: serial: ftdi_sio: add support for NDI EMGUIDE GEMINI\n  (stable-fixes).\n- USB: serial: option: add Foxconn T99W640 (stable-fixes).\n- iio: adc: max1363: Reorder mode_list[] entries (stable-fixes).\n- iio: adc: max1363: Fix MAX1363_4X_CHANS/MAX1363_8X_CHANS[]\n  (stable-fixes).\n- ALSA: hda/realtek: Add quirk for ASUS ROG Strix G712LWS\n  (stable-fixes).\n- HID: core: do not bypass hid_hw_raw_request (stable-fixes).\n- HID: core: ensure the allocated report buffer can contain the\n  reserved report ID (stable-fixes).\n- regulator: pwm-regulator: Calculate the output voltage for\n  disabled PWMs (stable-fixes).\n- commit 829a426\n\n- rpm/kernel-subpackage-spec: Skip brp-strip-debug to avoid file truncation (bsc#1246879)\n  Put the same workaround to avoid file truncation of vmlinux and co in\n  kernel-default-base package, too.\n- commit 2329734\n\n- iommu/vt-d: Fix possible circular locking dependency\n  (git-fixes).\n- commit 0774c7d\n\n- drm/bridge: ti-sn65dsi86: Remove extra semicolon in\n  ti_sn_bridge_probe() (git-fixes).\n- drm/sched: Remove optimization that causes hang when killing\n  dependent jobs (git-fixes).\n- platform/x86: ideapad-laptop: Fix kbd backlight not remembered\n  among boots (git-fixes).\n- commit 0083a37\n\n- iommu/vt-d: Fix system hang on reboot -f (git-fixes).\n- commit 034e69f\n\n- rpm/kernel-binary.spec.in: Ignore return code from ksymtypes compare\n  When using suse-kabi-tools, the RPM build invokes 'ksymvers compare' to\n  compare the resulting symbol CRCs with the reference data. If the values\n  differ, it then invokes 'ksymtypes compare' to provide a detailed report\n  explaining why the symbols differ. The build expects the latter\n  'ksymtypes compare' command to always return zero, even if the two\n  compared kABI corpuses are different.\n  This is currently the case for 'ksymtypes compare'. However, I plan to\n  update the command to return a non-zero code when the comparison detects\n  any differences. This should ensure consistent behavior with 'ksymvers\n  compare'.\n  Since the build uses 'ksymtypes compare' only for more detailed\n  diagnostics, ignore its return code.\n- commit 5ac1381\n\n- net: atm: fix /proc/net/atm/lec handling (CVE-2025-38180\n  bsc#1245970).\n- net: atm: add lec_mutex (CVE-2025-38323 bsc#1246473).\n- commit 1698a7c\n\n- KVM: x86: Load DR6 with guest value only before entering .vcpu_run() loop (bsc#1239061 CVE-2025-21839).\n- commit fe1f630\n\n- net: dsa: b53: do not enable EEE on bcm63xx (CVE-2025-38272\n  bsc#1246268).\n- commit ee16b59\n\n- Refresh\n  patches.suse/selftests-bpf-Clean-up-open-coded-gettid-syscall-inv.patch.\n  Fix following BPF selftests compilation error due to missing dependency.\n  /home/runner/work/libbpf/libbpf/.kernel/tools/testing/selftests/bpf/prog_tests/ns_current_pid_tgid.c: In function âtest_current_pid_tgidâ:\n  /home/runner/work/libbpf/libbpf/.kernel/tools/testing/selftests/bpf/prog_tests/ns_current_pid_tgid.c:31:9: error: invalid type argument of unary â*â (have âpid_tâ {aka âintâ})\n    31 |         *pid = sys_gettid();\n    |         ^~~~\n- commit d85d5ff\n\n- Delete\n  patches.suse/selftests-bpf-Add-tests-for-sdiv-smod-overflow-cases.patch.\n  The __arch_x86_64 macro is not yet supported in BPF selftests (depends\n  on c64d2f72bf2e \u0026quot;selftests/bpf: *_arch** macro to limit test cases to\n  specific archs\u0026quot;), so drop tests that uses it.\n- commit 55e800e\n\n- Bluetooth: hci_sync: Fix UAF on create_le_conn_complete\n  (git-fixes).\n- commit 7a089da\n\n- hci_dev centralize extra lock (CVE-2025-38117 bsc#1245695).\n- commit 892de21\n\n- Bluetooth: MGMT: Protect mgmt_pending list with its own lock\n  (CVE-2025-38117 bsc#1245695).\n- commit e0d8b29\n\n- Bluetooth: hci_sync: Introduce\n  hci_cmd_sync_run/hci_cmd_sync_run_once (CVE-2025-38117\n  bsc#1245695).\n- commit c86dd9a\n\n- Bluetooth: hci_core: Make hci_is_le_conn_scanning public\n  (CVE-2025-38117 bsc#1245695).\n- Refresh\n  patches.suse/Bluetooth-hci_sync-Use-QoS-to-determine-which-PHY-to.patch.\n- commit 566b348\n\n- Bluetooth: hci_sync: Fix handling of HCI_OP_CREATE_CONN_CANCEL\n  (git-fixes).\n- commit 79fc3de\n\n- gpiolib: of: Add polarity quirk for s5m8767 (stable-fixes).\n- gpio: vf610: add locking to gpio direction functions\n  (git-fixes).\n- gpio: pca953x: log an error when failing to get the reset GPIO\n  (git-fixes).\n- gpiolib: cdev: Ignore reconfiguration without direction\n  (git-fixes).\n- gpiolib: acpi: Fix failed in acpi_gpiochip_find() by adding\n  parent node match (bsc#1233300).\n- gpiolib: Fix debug messaging in gpiod_find_and_request()\n  (git-fixes).\n- gpiolib: Handle no pin_ranges in gpiochip_generic_config()\n  (git-fixes).\n- gpio: sim: include a missing header (git-fixes).\n- gpiolib: acpi: Don't use GPIO chip fwnode in\n  acpi_gpiochip_find() (bsc#1233300).\n- commit 75afc01\n\n- Bluetooth: MGMT: convert timeouts to secs_to_jiffies()\n  (CVE-2025-38117 bsc#1245695).\n- commit 3e2758a\n\n- bluetooth: mgmt: convert timeouts to secs_to_jiffies()\n  (CVE-2025-38117 bsc#1245695).\n- commit b8976eb\n\n- s390/bpf: Fix bpf_arch_text_poke() with new_addr == NULL again\n  (git-fixes bsc#1246870).\n- commit 8e4fb25\n\n- Fix build warning\n  Refresh\n  patches.suse/mm-hugetlb-fix-DEBUG_LOCKS_WARN_ON-1-when-dissolve_f.patch.\n- commit ccb6e90\n\n- Bluetooth: MGMT: Fix not generating command complete for\n  MGMT_OP_DISCONNECT (git-fixes).\n- Refresh\n  patches.suse/Bluetooth-hci_event-Fix-not-using-key-encryption-siz.patch.\n- commit 6f743e7\n\n- Bluetooth: hci_sync: Attempt to dequeue connection attempt\n  (git-fixes).\n- Refresh\n  patches.suse/Bluetooth-L2CAP-Fix-slab-use-after-free-Read-in-l2ca.patch.\n- Refresh\n  patches.suse/Bluetooth-hci_event-Fix-not-using-key-encryption-siz.patch.\n- Refresh\n  patches.suse/Bluetooth-hci_sync-Fix-UAF-in-hci_acl_create_conn_sy.patch.\n- commit 22a7d25\n\n- Bluetooth: hci_conn: Fix sending\n  BT_HCI_CMD_LE_CREATE_CONN_CANCEL (git-fixes).\n- commit defb49e\n\n- Bluetooth: mgmt: remove NULL check in\n  add_ext_adv_params_complete() (CVE-2025-38117 bsc#1245695).\n- Bluetooth: mgmt: remove NULL check in\n  mgmt_set_connectable_complete() (CVE-2025-38117 bsc#1245695).\n- commit 3217653\n\n- bluetooth: restore le_scan_restart in struct hci_dev\n  (CVE-2025-38117 bsc#1245695).\n- commit 7e7eb69\n\n- Bluetooth: hci_core: Remove le_restart_scan work (CVE-2025-38117\n  bsc#1245695).\n- commit 9530108\n\n- Input: gpio-keys - fix a sleep while atomic with PREEMPT_RT\n  (CVE-2025-38335 bsc#1246250).\n- commit 4b421f0\n\n- Correctly put RDMA kabi patch into patches.kabi instead of patches.suse\n- commit 0433d1f\n\n- kABI workaround for bluetooth hci_dev changes (CVE-2025-38250\n  bsc#1246182).\n- commit 2bfeee5\n\n- Bluetooth: hci_core: Fix use-after-free in vhci_flush()\n  (CVE-2025-38250 bsc#1246182).\n- commit 45dea35\n\n- selftests/bpf: Support more socket types in create_pair()\n  (bsc#1239470 CVE-2025-21854).\n- selftests/bpf: Refactor out helper functions for a few tests\n  (bsc#1239470 CVE-2025-21854).\n- commit 21d7fea\n\n- mm/hugetlb: fix DEBUG_LOCKS_WARN_ON(1) when\n  dissolve_free_hugetlb_folio() (bsc#1225707 CVE-2024-36028).\n- commit ce47e5b\n\n- Delete\n  patches.suse/selftest-bpf-Add-test-for-af_vsock-poll.patch.\n  It requires the \u0026quot;bpf_program__attach_sockmap\u0026quot; API in libbpf, which isn't\n  backported.\n- Refresh patches.suse/selftest-bpf-Add-vsock-test-for-sockmap-rejecting-un.patch\n- commit a7dddad\n\n- i2c: stm32: fix the device used for the DMA map (git-fixes).\n- usb: hub: Don't try to recover devices lost during warm reset\n  (git-fixes).\n- usb: musb: fix gadget state on disconnect (git-fixes).\n- thunderbolt: Fix bit masking in tb_dp_port_set_hops()\n  (git-fixes).\n- thunderbolt: Fix wake on connect at runtime (git-fixes).\n- pch_uart: Fix dma_sync_sg_for_device() nents value (git-fixes).\n- comedi: Fix initialization of data for instructions that write\n  to subdevice (git-fixes).\n- comedi: Fix use of uninitialized data in insn_rw_emulate_bits()\n  (git-fixes).\n- comedi: das6402: Fix bit shift out of bounds (git-fixes).\n- comedi: aio_iiro_16: Fix bit shift out of bounds (git-fixes).\n- comedi: pcl812: Fix bit shift out of bounds (git-fixes).\n- comedi: das16m1: Fix bit shift out of bounds (git-fixes).\n- comedi: Fix some signed shift left operations (git-fixes).\n- comedi: Fail COMEDI_INSNLIST ioctl if n_insns is too large\n  (git-fixes).\n- iio: adc: ad7949: use spi_is_bpw_supported() (git-fixes).\n- iio: accel: fxls8962af: Fix use after free in\n  fxls8962af_fifo_flush (git-fixes).\n- iio: adc: stm32-adc: Fix race in installing chained IRQ handler\n  (git-fixes).\n- regmap: fix potential memory leak of regmap_bus (git-fixes).\n- Input: xpad - set correct controller type for Acer NGR200\n  (git-fixes).\n- commit 08dfa63\n\n- jfs: Fix null-ptr-deref in jfs_ioc_trim (bsc#1246044\n  CVE-2025-38203).\n- commit e88ea13\n\n- hwmon: (corsair-cpro) Validate the size of the received input\n  buffer (git-fixes).\n- drm/amdgpu/gfx8: reset compute ring wptr on the GPU on resume\n  (git-fixes).\n- soundwire: amd: fix for clearing command status register\n  (git-fixes).\n- dmaengine: nbpfaxi: Fix memory corruption in probe()\n  (git-fixes).\n- phy: tegra: xusb: Fix unbalanced regulator disable in UTMI\n  PHY mode (git-fixes).\n- memstick: core: Zero initialize id_reg in\n  h_memstick_read_dev_id() (git-fixes).\n- mmc: bcm2835: Fix dma_unmap_sg() nents value (git-fixes).\n- mmc: sdhci_am654: Workaround for Errata i2312 (git-fixes).\n- mmc: sdhci-pci: Quirk for broken command queuing on Intel\n  GLK-based Positivo models (git-fixes).\n- commit 0d9aae2\n\n- net/sched: Return NULL when htb_lookup_leaf encounters an\n  empty rbtree (git-fixes).\n- commit fb42307\n\n- ipv6: mcast: Delay put pmc-\u0026gt;idev in mld_del_delrec()\n  (git-fixes).\n- commit 505c14c\n\n- rpl: Fix use-after-free in rpl_do_srh_inline() (git-fixes).\n- commit 3342938\n\n- af_packet: fix the SO_SNDTIMEO constraint not effective on\n  tpacked_snd() (git-fixes).\n- commit 877c186\n\n- net/sched: sch_qfq: Fix race condition on qfq_aggregate\n  (git-fixes).\n- commit 2e8a829\n\n- kABI workaround for struct drm_framebuffer changes (git-fixes).\n- commit 7b3cefa\n\n- drm/framebuffer: Acquire internal references on GEM handles\n  (git-fixes).\n- commit 736ff8d\n\n- Bluetooth: L2CAP: Fix attempting to adjust outgoing MTU\n  (git-fixes).\n- Bluetooth: btusb: QCA: Fix downloading wrong NVM for WCN6855\n  GF variant without board ID (git-fixes).\n- Bluetooth: SMP: Fix using HCI_ERROR_REMOTE_USER_TERM on timeout\n  (git-fixes).\n- Bluetooth: SMP: If an unallowed command is received consider\n  it a failure (git-fixes).\n- Bluetooth: hci_sync: fix connectable extended advertising when\n  using static random address (git-fixes).\n- Bluetooth: Fix null-ptr-deref in l2cap_sock_resume_cb()\n  (git-fixes).\n- usb: net: sierra: check for no status endpoint (git-fixes).\n- net: phy: Don't register LEDs for genphy (git-fixes).\n- drm/gem: Fix race in drm_gem_handle_create_tail()\n  (stable-fixes).\n- wifi: prevent A-MSDU attacks in mesh networks (stable-fixes).\n- Revert \u0026quot;ACPI: battery: negate current when discharging\u0026quot;\n  (stable-fixes).\n- usb: cdnsp: Fix issue with CV Bad Descriptor test (git-fixes).\n- drm/gem: Acquire references on GEM handles for framebuffers\n  (stable-fixes).\n- vt: add missing notification when switching back to text mode\n  (stable-fixes).\n- ASoC: amd: yc: add quirk for Acer Nitro ANV15-41 internal mic\n  (stable-fixes).\n- ALSA: hda/realtek - Enable mute LED on HP Pavilion Laptop\n  15-eg100 (stable-fixes).\n- HID: lenovo: Add support for ThinkPad X1 Tablet Thin Keyboard\n  Gen2 (stable-fixes).\n- HID: Add IGNORE quirk for SMARTLINKTECHNOLOGY (stable-fixes).\n- HID: quirks: Add quirk for 2 Chicony Electronics HP 5MP Cameras\n  (stable-fixes).\n- net: usb: qmi_wwan: add SIMCom 8230C composition (stable-fixes).\n- usb: cdnsp: Replace snprintf() with the safer scnprintf()\n  variant (stable-fixes).\n- usb:cdnsp: remove TRB_FLUSH_ENDPOINT command (stable-fixes).\n- commit b8ce602\n\n- Refresh\n  patches.suse/selftests-bpf-Add-tests-for-iter-next-method-returni.patch.\n  Fix BPF selftests build failure in progs/iters_testmod.c due to missing\n  definition of 'struct bpf_iter_task_vma' and 'bpf_iter_task_vma()'.\n- commit ca03a47\n\n- ptp: fix breakage after ptp_vclock_in_use() rework\n  (bsc#1246506).\n- commit 001cddf\n\n- x86/virt/tdx: Avoid indirect calls to TDX assembly functions (git-fixes).\n- commit 9c296c1\n\n- soc: aspeed: lpc-snoop: Don't disable channels that aren't\n  enabled (git-fixes).\n- soc: aspeed: lpc-snoop: Cleanup resources in stack-order\n  (git-fixes).\n- HID: core: ensure __hid_request reserves the report ID as the\n  first byte (git-fixes).\n- commit 5cd5cd3\n\n- drm/msm/a7xx: Call CP_RESET_CONTEXT_STATE (CVE-2025-38188\n  bsc#1246098).\n- drm/msm/a6xx+: Insert a fence wait before SMMU table update\n  (CVE-2025-38188 bsc#1246098).\n- commit e22ddaf\n\n- x86/iopl: Cure TIF_IO_BITMAP inconsistencies (CVE-2025-38100\n  bsc#1245650).\n- commit 143bbc6\n\n- Bluetooth: eir: Fix possible crashes on eir_create_adv_data\n  (CVE-2025-38303 bsc#1246354).\n- commit 89447f6\n\n- btrfs: explicitly ref count block_group on new_bgs list (bsc#1243068)\n- commit 8647d2c\n\n- btrfs: make btrfs_discard_workfn() block_group ref explicit (bsc#1243068)\n- commit 32e19f5\n\n- btrfs: harden block_group::bg_list against list_del() races (CVE-2025-37856 bsc#1243068)\n- commit 3333359\n\n- btrfs: correct the order of prelim_ref arguments in btrfs__prelim_ref (CVE-2025-38034 bsc#1244792)\n- commit 55c0ec4\n\n- btrfs: do not BUG_ON() when freeing tree block after error (CVE-2024-44963 1230216)\n- commit d292416\n\n- scsi: megaraid_sas: Fix invalid node index (CVE-2025-38239\n  bsc#1246178).\n- seg6: Fix validation of nexthop addresses (CVE-2025-38310\n  bsc#1246361).\n- x86/sgx: Prevent attempts to reclaim poisoned pages\n  (CVE-2025-38334 bsc#1246384).\n- commit 740f6c2\n\n- selftests/bpf: Add tests with stack ptr register in conditional\n  jmp (bsc#1246264 CVE-2025-38279).\n- bpf: Do not include stack ptr register in precision backtracking\n  bookkeeping (bsc#1246264 CVE-2025-38279).\n- Refresh patches.kabi/bpf-verifier-kABI-workarounds.patch\n- commit ccc2c5b\n\n- bridge: mcast: Fix use-after-free during router port\n  configuration (CVE-2025-38248 bsc#1246173).\n- net: stmmac: make sure that ptp_rate is not 0 before configuring\n  timestamping (CVE-2025-38126 bsc#1245708).\n- bpf: fix ktls panic with sockmap (CVE-2025-38166 bsc#1245758).\n- commit 01133bb\n\n- iommu/amd: Set the pgsize_bitmap correctly (git-fixes).\n- commit 8746ec5\n\n- scsi: core: Enforce unlimited max_segment_size when\n  virt_boundary_mask is set (git-fixes).\n- scsi: qla4xxx: Fix missing DMA mapping error in\n  qla4xxx_alloc_pdu() (git-fixes).\n- scsi: qla2xxx: Fix DMA mapping test in\n  qla24xx_get_port_database() (git-fixes).\n- scsi: megaraid_sas: Fix invalid node index (git-fixes).\n- aoe: clean device rq_list in aoedev_downdev() (git-fixes).\n- md/md-bitmap: fix dm-raid max_write_behind setting (git-fixes).\n- commit 2e07501\n\n- dm-bufio: fix sched in atomic context (git-fixes).\n- commit c664ddf\n\n- Update\n  patches.suse/nvme-pci-fix-queue-unquiesce-check-on-slot_reset.patch\n  (git-fixes bsc#1240885).\n- commit 08c0025\n\n- perf: Fix sample vs do_exit() (bsc#1246547).\n- commit 5327721\n\n- nvme-pci: refresh visible attrs after being checked (git-fixes).\n- nvme: Fix incorrect cdw15 value in passthru error logging\n  (git-fixes).\n- commit c5d3460\n\n- scsi: lpfc: Copyright updates for 14.4.0.10 patches (bsc#1245260\n  bsc#1243100 bsc#1246125).\n- commit 58f7c6e\n\n- scsi: lpfc: Update lpfc version to 14.4.0.10 (bsc#1245260\n  bsc#1243100 bsc#1246125).\n- scsi: lpfc: Modify end-of-life adapters' model descriptions\n  (bsc#1245260 bsc#1243100 bsc#1246125 bsc#1204142).\n- scsi: lpfc: Revise CQ_CREATE_SET mailbox bitfield definitions\n  (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Move clearing of HBA_SETUP flag to before\n  lpfc_sli4_queue_unset (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Ensure HBA_SETUP flag is used only for SLI4 in\n  dev_loss_tmo_callbk (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Relocate clearing initial phba flags from link up\n  to link down hdlr (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Simplify error handling for failed\n  lpfc_get_sli4_parameters cmd (bsc#1245260 bsc#1243100\n  bsc#1246125).\n- scsi: lpfc: Early return out of FDMI cmpl for locally rejected\n  statuses (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Skip RSCN processing when FC_UNLOADING flag is set\n  (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Check for hdwq null ptr when cleaning up lpfc_vport\n  structure (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Update debugfs trace ring initialization messages\n  (bsc#1245260 bsc#1243100 bsc#1246125).\n- scsi: lpfc: Revise logging format for failed CT MIB requests\n  (bsc#1245260 bsc#1243100 bsc#1246125).\n- commit 14dcfed\n\n- Update\n  patches.suse/net-clear-the-dst-when-changing-skb-protocol.patch\n  (bsc#1245954 CVE-2025-38192).\n  Fix incorrect CVE reference.\n- commit 288e8f6\n\n- drm/nouveau: fix a use-after-free in r535_gsp_rpc_push() (bsc#1245951 CVE-2025-38187)\n- commit 62c6956\n\n- bpf: Check rcu_read_lock_trace_held() in\n  bpf_map_lookup_percpu_elem() (bsc#1245980 CVE-2025-38202).\n- commit 630834e\n\n- selftest/bpf/benchs: Add benchmark for sockmap usage\n  (bsc#1245749 CVE-2025-38154).\n- commit ac96089\n\n- bpf, sockmap: Avoid using sk_socket after free when sending\n  (bsc#1245749 CVE-2025-38154).\n- bpf, sockmap: Fix panic when calling skb_linearize (bsc#1245749\n  CVE-2025-38154).\n- bpf, sockmap: fix duplicated data transmission (bsc#1245749\n  CVE-2025-38154).\n- bpf, sockmap: Fix data lost during EAGAIN retries (bsc#1245749\n  CVE-2025-38154).\n- commit bc1361f\n\n- bpf: Fix memory leak in bpf_core_apply (git-fixes).\n- commit 44b4ba3\n\n- bpf/selftests: Check errno when percpu map value size exceeds\n  (git-fixes).\n- bpf: Check percpu map value size first (git-fixes).\n- commit 81feacb\n\n- bpftool: Fix undefined behavior caused by shifting into the\n  sign bit (git-fixes).\n- commit 9363920\n\n- ipc: fix to protect IPCS lookups using RCU (CVE-2025-38212\n  bsc#1246029).\n- commit 9ff5b2e\n\n- calipso: unlock rcu before returning -EAFNOSUPPORT\n  (CVE-2025-38147 bsc#1245768).\n- calipso: Don't call calipso functions for AF_INET sk\n  (CVE-2025-38147 bsc#1245768).\n- commit 74ee184\n\n- ucsi_operations: add stubs for all operations (git-fixes).\n- commit 1e9baf6\n\n- drm/amd/display: Don't treat wb connector as physical in (bsc#1245654 CVE-2025-38098)\n- commit 277f764\n\n- selftests/bpf: Add tests for iter next method returning valid\n  pointer (git-fixes).\n- bpf: Make the pointer returned by iter next method valid\n  (git-fixes).\n- commit fcdc4ee\n\n- hisi_acc_vfio_pci: bugfix live migration function without VF\n  device driver (CVE-2025-38283 bsc#1246273).\n- configfs-tsm-report: Fix NULL dereference of tsm_ops\n  (CVE-2025-38210 bsc#1246020).\n- commit eef28a4\n\n- kasan: remove kasan_find_vm_area() to prevent possible deadlock\n  (git-fixes).\n- maple_tree: fix mt_destroy_walk() on root leaf node (git-fixes).\n- commit aaacc92\n\n- drm/tegra: nvdec: Fix dma_alloc_coherent error check\n  (git-fixes).\n- nbd: fix uaf in nbd_genl_connect() error path (git-fixes).\n- can: m_can: m_can_handle_lost_msg(): downgrade msg lost in rx\n  message to debug level (git-fixes).\n- net: phy: microchip: limit 100M workaround to link-down events\n  on LAN88xx (git-fixes).\n- wifi: mt76: mt7925: Fix null-ptr-deref in mt7925_thermal_init()\n  (git-fixes).\n- wifi: mt76: mt7925: fix invalid array index in ssid assignment\n  during hw scan (git-fixes).\n- wifi: mt76: mt7925: fix the wrong config for tx interrupt\n  (git-fixes).\n- wifi: zd1211rw: Fix potential NULL pointer dereference in\n  zd_mac_tx_to_dev() (git-fixes).\n- commit 067b949\n\n- xfs: fix off-by-one error in fsmap's end_daddr usage\n  (bsc#1235837).\n- commit 919d943\n\n- hisi_acc_vfio_pci: fix XQE dma address error (CVE-2025-38158\n  bsc#1245750).\n- commit 373ef61\n\n- i40e: fix MMIO write access to an invalid page in i40e_clear_hw\n  (CVE-2025-38200 bsc#1246045).\n- net: cadence: macb: Fix a possible deadlock in macb_halt_tx\n  (CVE-2025-38094 bsc#1245649).\n- commit 45301b8\n\n- platform/x86: think-lmi: Create ksets consecutively\n  (stable-fixes).\n- Refresh\n  patches.suse/platform-x86-think-lmi-Fix-kobject-cleanup.patch.\n- commit 5072bed\n\n- net: phy: smsc: Fix link failure in forced mode with Auto-MDIX\n  (git-fixes).\n- net: phy: smsc: Fix Auto-MDIX configuration when disabled by\n  strap (git-fixes).\n- Bluetooth: hci_event: Fix not marking Broadcast Sink BIS as\n  connected (git-fixes).\n- Bluetooth: hci_sync: Fix not disabling advertising instance\n  (git-fixes).\n- usb: xhci: quirk for data loss in ISOC transfers (stable-fixes).\n- Logitech C-270 even more broken (stable-fixes).\n- Input: xpad - support Acer NGR 200 Controller (stable-fixes).\n- dma-buf: fix timeout handling in dma_resv_wait_timeout v2\n  (stable-fixes).\n- mmc: sdhci: Add a helper function for dump register in dynamic\n  debug mode (stable-fixes).\n- ACPICA: Refuse to evaluate a method if arguments are missing\n  (stable-fixes).\n- mtd: spinand: fix memory leak of ECC engine conf (stable-fixes).\n- ASoC: amd: yc: update quirk data for HP Victus (stable-fixes).\n- ASoC: amd: yc: Add quirk for MSI Bravo 17 D7VF internal mic\n  (stable-fixes).\n- ALSA: sb: Force to disable DMAs once when DMA mode is changed\n  (stable-fixes).\n- ALSA: sb: Don't allow changing the DMA mode during operations\n  (stable-fixes).\n- drm/msm: Fix another leak in the submit error path\n  (stable-fixes).\n- drm/msm: Fix a fence leak in submit error path (stable-fixes).\n- regulator: fan53555: add enable_time support and soft-start\n  times (stable-fixes).\n- wifi: ath6kl: remove WARN on bad firmware input (stable-fixes).\n- wifi: mac80211: drop invalid source address OCB frames\n  (stable-fixes).\n- ata: pata_cs5536: fix build on 32-bit UML (stable-fixes).\n- platform/x86/amd/pmc: Add PCSpecialist Lafite Pro V 14M to\n  8042 quirks list (stable-fixes).\n- Revert \u0026quot;drm/i915/gem: Allow EXEC_CAPTURE on recoverable contexts\n  on DG1\u0026quot; (stable-fixes).\n- wifi: mac80211: Add link iteration macro for link data\n  (stable-fixes).\n- wifi: mac80211: chan: chandef is non-NULL for reserved\n  (stable-fixes).\n- commit 66a4a55\n\n- net: clear the dst when changing skb protocol (bsc#1245954\n  CVE-2024-49861).\n- commit eed1284\n\n- usb: typec: ucsi: Set orientation as none when connector is\n  unplugged (git-fixes).\n- commit 9b64a84\n\n- usb: typec: ucsi: glink: fix off-by-one in connector_status\n  (git-fixes).\n- commit 63d64a6\n\n- coresight: prevent deactivate active config while enabling\n  the config (CVE-2025-38131 bsc#1245677).\n- coresight: holding cscfg_csdev_lock while removing cscfg from\n  csdev (CVE-2025-38132 bsc#1245679).\n- commit f8db328\n\n- ACPI: PRM: Reduce unnecessary printing to avoid user confusion\n  (bsc#1246122).\n- commit f060328\n\n- usb: typec: ucsi: Fix busy loop on ASUS VivoBooks (git-fixes).\n- usb: typec: ucsi: Fix the partner PD revision (git-fixes).\n- commit cb5cfe6\n\n- restore UCSI_CONNECTOR_RESET_HARD definition (git-fixes).\n- commit 3a50af7\n\n- usb: typec: ucsi: Add DATA_RESET option of Connector Reset\n  command (git-fixes).\n- commit ebc917a\n\n- pinctrl: amd: Clear GPIO debounce for suspend (git-fixes).\n- pinctrl: qcom: msm: mark certain pins as invalid for interrupts\n  (git-fixes).\n- commit 7a0a421\n\n- efi/mokvar-table: Avoid repeated map/unmap of the same page\n  (bsc#1240323 CVE-2025-21872).\n- commit a16e799\n\n- usb: typec: ucsi: move ucsi_acknowledge() from ucsi_read_error()\n  (git-fixes).\n- commit 9793505\n\n- kabi: restore encap_sk in struct xfrm_state (CVE-2025-38097\n  bsc#1245660).\n- espintcp: remove encap socket caching to avoid reference leak\n  (CVE-2025-38097 bsc#1245660).\n- commit 94f2735\n\n- net: lan743x: fix potential out-of-bounds write in\n  lan743x_ptp_io_event_clock_get() (CVE-2025-38183 bsc#1246006).\n- commit 0eb12cd\n\n- net_sched: sch_sfq: fix a potential crash on gso_skb handling\n  (CVE-2025-38115 bsc#1245689).\n- commit 6a4ffd3\n\n- usb: typec: ucsi_acpi: Add LG Gram quirk (git-fixes).\n- commit da7fb49\n\n- usb: typec: ucsi: don't retrieve PDOs if not supported\n  (git-fixes).\n- commit d303a5e\n\n- usb: typec: ucsi: Delay alternate mode discovery (git-fixes).\n- commit b7ba22d\n\n- usb: typec: Update sysfs when setting ops (git-fixes).\n- commit b336d78\n\n- usb: typec: ucsi: glink: increase max ports for x1e80100\n  (git-fixes).\n- commit 31de9c9\n\n- ucsi_ops: adapt update_connector to kABI consistency\n  (git-fixes).\n- usb: typec: ucsi: add update_connector callback (git-fixes).\n- blacklist.conf: needed for infrastructure. kABI fix added\n- Refresh\n  patches.kabi/struct-ucsi_operations-use-padding-for-new-operation.patch.\n- Refresh patches.suse/paddings-add-paddings-to-TypeC-stuff.patch.\n- commit a70b9ee\n\n- ALSA: usb-audio: Kill timer properly at removal (CVE-2025-38105\n  bsc#1245682).\n- commit 2bf6099\n\n- x86/process: Move the buffer clearing before MONITOR (bsc#1238896 CVE-2024-36350 CVE-2024-36357 CVE-2024-36348 CVE-2024-36349).\n- commit 9303368\n\n- usb: typec: ucsi: glink: use typec_set_orientation (git-fixes).\n- Refresh\n  patches.suse/soc-qcom-pmic_glink-Fix-race-during-initialization.patch.\n- Refresh\n  patches.suse/usb-typec-ucsi-glink-fix-child-node-release-in-probe.patch.\n- commit b105e3e\n\n- KVM: SVM: Advertise TSA CPUID bits to guests (bsc#1238896 CVE-2024-36350 CVE-2024-36357 CVE-2024-36348 CVE-2024-36349).\n- commit 67b316f\n\n- Bluetooth: btusb: Fix regression in the initialization of fake\n  Bluetooth controllers (CVE-2025-38099 bsc#1245671).\n- Bluetooth: Disable SCO support if READ_VOICE_SETTING is\n  unsupported/broken (CVE-2025-38099 bsc#1245671).\n- Bluetooth: Add quirk for broken READ_PAGE_SCAN_TYPE\n  (CVE-2025-38099 bsc#1245671).\n- Bluetooth: Add quirk for broken READ_VOICE_SETTING\n  (CVE-2025-38099 bsc#1245671).\n- commit 254e65a\n\n- jfs: fix array-index-out-of-bounds read in add_missing_indices\n  (bsc#1245983 CVE-2025-38204).\n- commit 65d9d7f\n\n- usb: typec: ucsi_glink: drop NO_PARTNER_PDOS quirk for sm8550 /\n  sm8650 (git-fixes).\n- commit 380eca4\n\n- usb: typec: ucsi_glink: enable the UCSI_DELAY_DEVICE_PDOS\n  quirk on qcm6490 (git-fixes).\n- commit 3de42d7\n\n- usb: typec: ucsi_glink: enable the UCSI_DELAY_DEVICE_PDOS quirk\n  (git-fixes).\n- commit 2a3ce34\n\n- usb: typec: ucsi_glink: rework quirks implementation\n  (git-fixes).\n- commit b78f907\n\n- usb: typec: ucsi: support delaying GET_PDOS for device\n  (git-fixes).\n- Refresh patches.kabi/struct-usci-hide-additional-member.patch.\n- commit 95f3b03\n\n- rpm/mkspec: Fix missing kernel-syms-rt creation (bsc#1244337)\n- commit 630f139\n\n- usb: typec: ucsi: extract code to read PD caps (git-fixes).\n- commit ebc6c46\n\n- usb: typec: ucsi: properly register partner's PD device\n  (git-fixes).\n- commit 7b95fc1\n\n- usb: typec: ucsi: fix UCSI on SM8550 \u0026amp; SM8650 Qualcomm devices\n  (git-fixes).\n- commit c40444f\n\n- usb: typec: ucsi: Add qcm6490-pmic-glink as needing PDOS quirk\n  (git-fixes).\n- commit 46f5c2a\n\n- ucsi_ccg: Refine the UCSI Interrupt handling (git-fixes).\n- commit e97f436\n\n- exfat: fix double free in delayed_free (bsc#1246073\n  CVE-2025-38206).\n- commit 38c1950\n\n- usb: typec: ucsi: Get PD revision for partner (git-fixes).\n- commit a80ec70\n\n- x86/bugs: Add a Transient Scheduler Attacks mitigation (bsc#1238896 CVE-2024-36350 CVE-2024-36357 CVE-2024-36348 CVE-2024-36349).\n- Update config files.\n- commit 45d6a14\n\n- pwm: mediatek: Ensure to disable clocks in error path\n  (git-fixes).\n- ASoC: cs35l56: probe() should fail if the device ID is not\n  recognized (git-fixes).\n- ASoC: fsl_asrc: use internal measured ratio for non-ideal\n  ratio mode (git-fixes).\n- commit 5b2c070\n\n- dm-raid: fix variable in journal device check (git-fixes).\n- commit 7e51a3f\n\n- dm-verity: fix a memory leak if some arguments are specified\n  multiple times (git-fixes).\n- commit 18c3347\n\n- dm-mirror: fix a tiny race condition (git-fixes).\n- commit 6d6aef6\n\n- dm-flakey: make corrupting read bios work (git-fixes).\n- commit bbf383a\n\n- dm-flakey: error all IOs when num_features is absent\n  (git-fixes).\n- commit d4d758e\n\n- dm: free table mempools if not used in __bind (git-fixes).\n- commit 6abd700\n\n- dm: don't change md if dm_table_set_restrictions() fails\n  (git-fixes).\n- commit 0d534aa\n\n- dm: restrict dm device size to 2^63-512 bytes (git-fixes).\n- commit 240dadc\n\n- virtgpu: don't reset on shutdown (git-fixes).\n- commit 82f42df\n\n- kernel/fork: only call untrack_pfn_clear() on VMAs duplicated\n  for fork() (git-fix for CVE-2025-22090 bsc#1241537).\n- commit 852f7f4\n\n- netfilter: nft_set_pipapo: prevent overflow in lookup table\n  allocation (CVE-2025-38162 bsc#1245752).\n- commit c7520cc\n\n- efi: Don't map the entire mokvar table to determine its size\n  (bsc#1240323 CVE-2025-21872).\n- commit aefffb0\n\n- ucsi-glink: adapt to kABI consistency (git-fixes).\n- usb: typec: ucsi: glink: move GPIO reading into connector_status\n  callback (git-fixes).\n- Refresh\n  patches.suse/usb-typec-ucsi-Move-unregister-out-of-atomic-section.patch.\n- commit 8ae6c79\n\n- vhost-scsi: protect vq-\u0026gt;log_used with vq-\u0026gt;mutex (CVE-2025-38074\n  bsc#1244735).\n- commit 29ecfb7\n\n- struct ucsi_operations: use padding for new operation\n  (git-fixes).\n- commit 5fe6bda\n\n- crypto: ecdsa - Harden against integer overflows in\n  DIV_ROUND_UP() (CVE-2025-37984 bsc#1243669).\n- commit 4115893\n\n- virtio: break and reset virtio devices on device_shutdown()\n  (CVE-2025-38064 bsc#1245201).\n- commit 1ef712f\n\n- usb: typec: ucsi: add callback for connector status updates\n  (git-fixes).\n- blacklist.conf: needed as infrastructure. kABI workaround following\n- Refresh patches.suse/paddings-add-paddings-to-TypeC-stuff.patch.\n- Refresh\n  patches.suse/usb-typec-ucsi-displayport-Fix-deadlock.patch.\n- commit de5a5b0\n\n- struct cdns: move new member to the end (git-fixes).\n- commit 4384b08\n\n- usb: cdnsp: Fix issue with resuming from L1 (git-fixes).\n- commit c8b7c96\n\n- net: dsa: clean up FDB, MDB, VLAN entries on unbind\n  (CVE-2025-37864 bsc#1242965).\n- commit d1f463e\n\n- NFSv4: Always set NLINK even if the server doesn't support it\n  (git-fixes).\n- commit 84005c5\n\n- NFSv4.2: fix listxattr to return selinux security label\n  (git-fixes).\n- commit 0319baa\n\n- NFSv4: xattr handlers should check for absent nfs filehandles\n  (git-fixes).\n- commit 80ac5a3\n\n- sunrpc: don't immediately retransmit on seqno miss (git-fixes).\n- commit ceebf6f\n\n- fs/jfs: consolidate sanity checking in dbMount (git-fixes).\n- commit 5c4bc1b\n\n- objtool: Ignore end-of-section jumps for KCOV/GCOV (git-fixes).\n- commit e383ffb\n\n- objtool: Silence more KCOV warnings, part 2 (git-fixes).\n- commit ddae9d6\n\n- netfilter: nf_set_pipapo_avx2: fix initial map fill (git-fixes\n  CVE-2024-57947 bsc#1236333).\n- commit cedcb24\n\n- usb: typec: displayport: Fix potential deadlock (git-fixes).\n- commit a45e2f9\n\n- drm/bridge: ti-sn65dsi86: Add HPD for DisplayPort connector type\n  (git-fixes).\n- ASoC: amd: yc: Add DMI quirk for Lenovo IdeaPad Slim 5 15\n  (stable-fixes).\n- Bluetooth: L2CAP: Fix L2CAP MTU negotiation (stable-fixes).\n- drm/amdkfd: Fix race in GWS queue scheduling (stable-fixes).\n- ASoC: codecs: wcd9335: Fix missing free of regulator supplies\n  (git-fixes).\n- ALSA: hda: Ignore unsol events for cards being shut down\n  (stable-fixes).\n- ALSA: hda: Add new pci id for AMD GPU display HD audio\n  controller (stable-fixes).\n- usb: dwc2: also exit clock_gating when stopping udc while\n  suspended (stable-fixes).\n- usb: potential integer overflow in usbg_make_tpg()\n  (stable-fixes).\n- usb: common: usb-conn-gpio: use a unique name for usb connector\n  device (stable-fixes).\n- usb: Add checks for snprintf() calls in usb_alloc_dev()\n  (stable-fixes).\n- usb: cdc-wdm: avoid setting WDM_READ for ZLP-s (stable-fixes).\n- usb: typec: displayport: Receive DP Status Update NAK request\n  exit dp altmode (stable-fixes).\n- usb: typec: mux: do not return on EOPNOTSUPP in {mux,\n  switch}_set (stable-fixes).\n- iio: pressure: zpa2326: Use aligned_s64 for the timestamp\n  (stable-fixes).\n- iio: adc: ad_sigma_delta: Fix use of uninitialized status_pos\n  (stable-fixes).\n- drm/scheduler: signal scheduled fence when kill job\n  (stable-fixes).\n- amd/amdkfd: fix a kfd_process ref leak (stable-fixes).\n- drm/amdgpu: amdgpu_vram_mgr_new(): Clamp lpfn to total vram\n  (stable-fixes).\n- dmaengine: idxd: Check availability of workqueue allocated by\n  idxd wq driver before using (stable-fixes).\n- dmaengine: xilinx_dma: Set dma_device directions (stable-fixes).\n- PCI: dwc: Make link training more robust by setting\n  PORT_LOGIC_LINK_WIDTH to one lane (stable-fixes).\n- leds: multicolor: Fix intensity setting while SW blinking\n  (stable-fixes).\n- mfd: max14577: Fix wakeup source leaks on device unbind\n  (stable-fixes).\n- hwmon: (pmbus/max34440) Fix support for max34451 (stable-fixes).\n- drm/bridge: ti-sn65dsi86: make use of debugfs_init callback\n  (stable-fixes).\n- ASoC: codec: wcd9335: Convert to GPIO descriptors\n  (stable-fixes).\n- types: Complement the aligned types with signed 64-bit one\n  (stable-fixes).\n- ASoC: codecs: wcd9335: Handle nicer probe deferral and simplify\n  with dev_err_probe() (stable-fixes).\n- commit 9aa1e05\n\n- i2c/designware: Fix an initialization issue (git-fixes).\n- commit d80f186\n\n- powercap: intel_rapl: Do not change CLAMPING bit if ENABLE\n  bit cannot be changed (git-fixes).\n- regulator: gpio: Fix the out-of-bounds access to drvdata::gpiods\n  (git-fixes).\n- spi: spi-fsl-dspi: Clear completion counter before initiating\n  transfer (git-fixes).\n- platform/x86: think-lmi: Fix sysfs group cleanup (git-fixes).\n- platform/x86: think-lmi: Fix kobject cleanup (git-fixes).\n- platform/mellanox: mlxreg-lc: Fix logic error in power state\n  check (git-fixes).\n- platform/x86: dell-wmi-sysman: Fix WMI data block retrieval\n  in sysfs callbacks (git-fixes).\n- platform/mellanox: nvsw-sn2201: Fix bus number in adapter\n  error message (git-fixes).\n- platform/mellanox: mlxbf-pmc: Fix duplicate event ID for\n  CACHE_DATA1 (git-fixes).\n- platform/mellanox: mlxbf-tmfifo: fix vring_desc.len assignment\n  (git-fixes).\n- xhci: dbc: Flush queued requests before stopping dbc\n  (git-fixes).\n- xhci: dbctty: disable ECHO flag by default (git-fixes).\n- xhci: Disable stream for xHC controller with XHCI_BROKEN_STREAMS\n  (git-fixes).\n- usb: typec: altmodes/displayport: do not index invalid\n  pin_assignments (git-fixes).\n- Revert \u0026quot;usb: xhci: Implement xhci_handshake_check_state()\n  helper\u0026quot; (git-fixes).\n- usb: xhci: Skip xhci_reset in xhci_resume if xhci is being\n  removed (git-fixes).\n- usb: gadget: u_serial: Fix race condition in TTY wakeup\n  (git-fixes).\n- usb: chipidea: udc: disconnect/reconnect from host when do\n  suspend/resume (git-fixes).\n- usb: cdnsp: do not disable slot for disabled slot (git-fixes).\n- Input: iqs7222 - explicitly define number of external channels\n  (git-fixes).\n- Input: xpad - adjust error handling for disconnect (git-fixes).\n- drm/exynos: fimd: Guard display clock control with runtime PM\n  calls (git-fixes).\n- drm/exynos: exynos7_drm_decon: add vblank check in IRQ handling\n  (git-fixes).\n- drm/i915/gsc: mei interrupt top half should be in irq disabled\n  context (git-fixes).\n- drm/i915/gt: Fix timeline left held on VMA alloc error\n  (git-fixes).\n- drm/i915/selftests: Change mock_request() to return error\n  pointers (git-fixes).\n- drm/sched: Increment job count before swapping tail spsc queue\n  (git-fixes).\n- drm/bridge: panel: move prepare_prev_first handling to\n  drm_panel_bridge_add_typed (git-fixes).\n- drm/ttm: fix error handling in ttm_buffer_object_transfer\n  (git-fixes).\n- powercap: call put_device() on an error path in\n  powercap_register_control_type() (stable-fixes).\n- commit d0cb71b\n\n- dm: fix unconditional IO throttle caused by REQ_PREFLUSH\n  (CVE-2025-38063 bsc#1245202).\n- commit 65fa7b7\n\n- smb: client: Fix use-after-free in cifs_fill_dirent\n  (CVE-2025-38051 bsc#1244750).\n- commit 0f203bf\n\n- cgroup,freezer: fix incomplete freezing when attaching tasks\n  (bsc#1245789).\n- commit 1970df7\n\n- cgroup/cpuset: Extend kthread_is_per_cpu() check to all\n  PF_NO_SETAFFINITY tasks (bsc#1241166).\n- commit 86012b8\n\n- objtool: Stop UNRET validation on UD2 (git-fixes).\n- commit 0be0bc6\n\n- objtool: Fix INSN_CONTEXT_SWITCH handling in validate_unret()\n  (git-fixes).\n- commit f1073e2\n\n- objtool: Properly disable uaccess validation (git-fixes).\n- commit b170301\n\n- mm/memory-failure: fix handling of dissolved but not taken\n  off from buddy pages (CVE-2024-39298 bsc#1227082).\n  Refreshed:\n  blacklist.conf: De-blacklist 8cf360b9d6a840700e06864236a01a883b34bbad\n- commit 1d1f80f\n\n- rose: fix dangling neighbour pointers in rose_rt_device_down()\n  (git-fixes).\n- Bluetooth: MGMT: mesh_send: check instances prior disabling\n  advertising (git-fixes).\n- Bluetooth: MGMT: set_mesh: update LE scan interval and window\n  (git-fixes).\n- Bluetooth: hci_sync: revert some mesh modifications (git-fixes).\n- Bluetooth: Prevent unintended pause by checking if advertising\n  is active (git-fixes).\n- net: usb: lan78xx: fix WARN in __netif_napi_del_locked on\n  disconnect (git-fixes).\n- commit 9d01c7e\n\n- objtool: Silence more KCOV warnings (git-fixes).\n- commit 246e013\n\n- objtool: Fix error handling inconsistencies in check()\n  (git-fixes).\n- commit 2b123dd\n\n- objtool: Ignore dangling jump table entries (git-fixes).\n- commit 694bcb3\n\n- objtool: Fix UNWIND_HINT_{SAVE,RESTORE} across basic blocks\n  (git-fixes).\n- commit 24df4fe\n\n- x86/tdx: Fix __noreturn build warning around\n  __tdx_hypercall_failed() (git-fixes).\n- Refresh\n  patches.suse/x86-virt-tdx-Define-TDX-supported-page-sizes-as-macros.patch.\n- commit 741a25e\n\n- objtool: Fix _THIS_IP_ detection for cold functions (git-fixes).\n- commit b2539b9\n\n- nvmet-tcp: don't restore null sk_state_change (bsc#1244801\n  CVE-2025-38035).\n- commit a1cc55e\n\n- s390/pci: Fix stale function handles in error handling\n  (git-fixes bsc#1245647).\n- commit 1f0ecfd\n\n- s390/pci: Do not try re-enabling load/store if device is\n  disabled (git-fixes bsc#1245646).\n- commit a7a5884\n\n- NFSv4/pNFS: Fix a race to wake on NFS_LAYOUT_DRAIN (git-fixes).\n- commit cbe692c\n\n- nfs: Clean up /proc/net/rpc/nfs when nfs_fs_proc_net_init()\n  fails (git-fixes).\n- commit 29c2a95\n\n- IB/mlx5: Fix potential deadlock in MR deregistration (git-fixes)\n- commit a31c762\n\n- RDMA/mlx5: Fix vport loopback for MPV device (git-fixes)\n- commit 50aa3ad\n\n- RDMA/mlx5: Fix CC counters query for MPV (git-fixes)\n- commit 6fac6aa\n\n- RDMA/mlx5: Fix HW counters query for non-representor devices (git-fixes)\n- commit f645a5e\n\n- RDMA/mlx5: Initialize obj_event-\u0026gt;obj_sub_list before xa_insert (git-fixes)\n- commit 9bf32eb\n\n- mtk-sd: reset host-\u0026gt;mrq on prepare_data() error (git-fixes).\n- commit 85b8654\n\n- Revert \u0026quot;mmc: sdhci: Disable SD card clock before changing\n  parameters\u0026quot; (git-fixes).\n- mtk-sd: Prevent memory corruption from DMA map failure\n  (git-fixes).\n- mtk-sd: Fix a pagefault in dma_unmap_sg() for not prepared data\n  (git-fixes).\n- mmc: core: sd: Apply BROKEN_SD_DISCARD quirk earlier\n  (git-fixes).\n- commit 4977a9e\n\n- kABI workaround for xsk: Fix race condition in AF_XDP generic\n  RX path (CVE-2025-37920 bsc#1243479).\n- commit 2cbaa5f\n\n- xsk: Fix race condition in AF_XDP generic RX path\n  (CVE-2025-37920 bsc#1243479).\n- commit b0fed9b\n\n- bpf, sockmap: Fix sk_msg_reset_curr (git-fixes).\n- commit 3936762\n\n- scsi: s390: zfcp: Ensure synchronous unit_add (git-fixes\n  bsc#1245599).\n- commit 4cb28a8\n\n- s390/pkey: Prevent overflow in size calculation for\n  memdup_user() (git-fixes bsc#1245598).\n- commit 458c9d8\n\n- s390: Add z17 elf platform (LTC#214086 bsc#1245540).\n- commit a338278\n\n- net: pktgen: fix access outside of user given buffer in\n  pktgen_thread_write() (CVE-2025-38061 bsc#1245440).\n- commit 386f111\n\n- net: tipc: fix refcount warning in tipc_aead_encrypt\n  (CVE-2025-38052 bsc#1244749).\n- net/tipc: fix slab-use-after-free Read in tipc_aead_encrypt_done\n  (CVE-2025-38052 bsc#1244749).\n- commit 39309cf\n\n- r8152: add vendor/device ID pair for Dell Alienware AW1022z\n  (git-fixes).\n- commit 9bd4e20\n\n- net: vlan: don't propagate flags on open (CVE-2025-23163\n  bsc#1242837).\n- commit a49d71b\n\n- rtc: cmos: use spin_lock_irqsave in cmos_interrupt (git-fixes).\n- commit d8e756f\n\n- add bug reference to existing hv_storvsc change (bsc#1245455).\n- net: mana: Record doorbell physical address in PF mode (bsc#1244229).\n- commit 1c553b0\n\n- kernel-obs-qa: Do not depend on srchash when qemu emulation is used\n  In this case the dependency is never fulfilled\n  Fixes: 485ae1da2b88 (\u0026quot;kernel-obs-qa: Use srchash for dependency as well\u0026quot;)\n- commit a840f87\n\n- nfsd: nfsd4_spo_must_allow() must check this is a v4 compound\n  request (git-fixes).\n- commit 784f61d\n\n- mm/hugetlb: fix huge_pmd_unshare() vs GUP-fast race\n  (bsc#1245431).\n- commit dd145d5\n\n- netlink: specs: dpll: replace underscores with dashes in names\n  (git-fixes).\n- bnxt: properly flush XDP redirect lists (git-fixes).\n- e1000e: set fixed clock frequency indication for Nahum 11 and\n  Nahum 13 (git-fixes).\n- net: ice: Perform accurate aRFS flow match (git-fixes).\n- net/mlx5e: Fix leak of Geneve TLV option object (git-fixes).\n- net/mlx5: Fix return value when searching for existing flow\n  group (git-fixes).\n- net/mlx5: Fix ECVF vports unload on shutdown flow (git-fixes).\n- net/mlx5: Ensure fw pages are always allocated on same NUMA\n  (git-fixes).\n- i40e: retry VFLR handling if there is ongoing VF reset\n  (git-fixes).\n- i40e: return false from i40e_reset_vf if reset is in progress\n  (git-fixes).\n- gve: add missing NULL check for gve_alloc_pending_packet()\n  in TX DQO (git-fixes).\n- ice: fix rebuilding the Tx scheduler tree for large queue counts\n  (git-fixes).\n- ice: create new Tx scheduler nodes for new queues only\n  (git-fixes).\n- ice: fix Tx scheduler error handling in XDP callback\n  (git-fixes).\n- net/mlx4_en: Prevent potential integer overflow calculating Hz\n  (git-fixes).\n- gve: Fix RX_BUFFERS_POSTED stat to report per-queue fill_cnt\n  (git-fixes).\n- net/mlx5: Add error handling in mlx5_query_nic_vport_node_guid()\n  (git-fixes).\n- net/mlx5_core: Add error handling\n  inmlx5_query_nic_vport_qkey_viol_cntr() (git-fixes).\n- idpf: fix null-ptr-deref in idpf_features_check (CVE-2025-38053\n  bsc#1244746).\n- ice: Fix LACP bonds without SRIOV environment (git-fixes).\n- ice: fix vf-\u0026gt;num_mac count with port representors (git-fixes).\n- devlink: fix port dump cmd type (git-fixes).\n- devlink: Fix referring to hw_addr attribute during state\n  validation (git-fixes).\n- netlink: fix potential sleeping issue in mqueue_flush_file\n  (git-fixes).\n- commit 6dccf5f\n\n- mm/hugetlb: unshare page tables during VMA split, not before\n  (bsc#1245431).\n- commit bf8eb79\n\n- bpf: Add a possibly-zero-sized read test (git-fixes).\n- bpf: Simplify checking size of helper accesses (git-fixes).\n- commit 04f6dc5\n\n- staging: rtl8723bs: Avoid memset() in aes_cipher() and\n  aes_decipher() (git-fixes).\n- serial: imx: Restore original RXTL for console to fix data loss\n  (git-fixes).\n- commit 652de47\n\n- drm/amdgpu: csa unmap use uninterruptible lock (CVE-2025-38011\n  bsc#1244729).\n- commit d370e7c\n\n- selftests/bpf: Fix prog numbers in test_sockmap (git-fixes).\n- bpftool: Un-const bpf_func_info to fix it for llvm 17 and newer\n  (git-fixes).\n- commit fadce21\n\n- bpf: fix order of args in call to bpf_map_kvcalloc (git-fixes).\n- bpf: Harden __bpf_kfunc tag against linker kfunc removal\n  (git-fixes).\n- compiler_types.h: Define __retain for\n  __attribute__((__retain__)) (git-fixes).\n- powerpc/bpf: enforce full ordering for ATOMIC operations with\n  BPF_FETCH (git-fixes).\n- commit e32b4e5\n\n- bpf: Fix potential integer overflow in resolve_btfids\n  (git-fixes).\n- commit 7ce99c9\n\n- selftests/bpf: Fix a few tests for GCC related warnings\n  (git-fixes).\n- selftests/bpf: Change functions definitions to support GCC\n  (git-fixes).\n- selftests/bpf: Add CFLAGS per source file and runner\n  (git-fixes).\n- bpf: Disable some `attribute ignored' warnings in GCC\n  (git-fixes).\n- bpf: Avoid __hidden__ attribute in static object (git-fixes).\n- selftests/bpf: Fix pointer arithmetic in test_xdp_do_redirect\n  (git-fixes).\n- commit 71918be\n\n- bpftool: Mount bpffs on provided dir instead of parent dir\n  (git-fixes).\n- commit 1bba21b\n\n- bpftool: Remove unnecessary source files from bootstrap version\n  (git-fixes).\n- bpf/lpm_trie: Inline longest_prefix_match for fastpath\n  (git-fixes).\n- commit 99d4fb6\n\n- bpftool: Fix missing pids during link show (git-fixes).\n- bpf: sockmap, updating the sg structure should also update curr\n  (git-fixes).\n- commit 2322e0e\n\n- i2c: tiny-usb: disable zero-length read messages (git-fixes).\n- i2c: robotfuzz-osif: disable zero-length read messages\n  (git-fixes).\n- drm/i915: fix build error some more (git-fixes).\n- ALSA: hda/realtek: Fix built-in mic on ASUS VivoBook X507UAR\n  (git-fixes).\n- ALSA: usb-audio: Fix out-of-bounds read in\n  snd_usb_get_audioformat_uac3() (git-fixes).\n- ALSA: hda/realtek: enable headset mic on Latitude 5420 Rugged\n  (stable-fixes).\n- ALSA: usb-audio: Rename ALSA kcontrol PCM and PCM1 for the\n  KTMicro sound card (stable-fixes).\n- ALSA: hda/intel: Add Thinkpad E15 to PM deny list\n  (stable-fixes).\n- ata: pata_via: Force PIO for ATAPI devices on VT6415/VT6330\n  (stable-fixes).\n- drivers/rapidio/rio_cm.c: prevent possible heap overwrite\n  (stable-fixes).\n- watchdog: da9052_wdt: respect TWDMIN (stable-fixes).\n- watchdog: fix watchdog may detect false positive of softlockup\n  (stable-fixes).\n- fbcon: Make sure modelist not set on unregistered console\n  (stable-fixes).\n- bus: fsl-mc: increase MC_CMD_COMPLETION_TIMEOUT_MS value\n  (stable-fixes).\n- i2c: designware: Invoke runtime suspend on quick slave\n  re-registration (stable-fixes).\n- i2c: npcm: Add clock toggle recovery (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_pmx_set_by_name() (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_gpio_get_direction() (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_pmx_gpio_set_direction() (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_gpio_get() (stable-fixes).\n- pinctrl: mcp23s08: Reset all pins to input at probe\n  (stable-fixes).\n- software node: Correct a OOB check in\n  software_node_get_reference_args() (stable-fixes).\n- wifi: mt76: mt7996: drop fragments with multicast or broadcast\n  RA (stable-fixes).\n- wifi: mt76: mt7921: add 160 MHz AP for mt7922 device\n  (stable-fixes).\n- wifi: mt76: mt76x2: Add support for LiteOn WN4516R,WN4519R\n  (stable-fixes).\n- wifi: ath12k: fix macro definition HAL_RX_MSDU_PKT_LENGTH_GET\n  (stable-fixes).\n- wifi: ath12k: fix a possible dead lock caused by ab-\u0026gt;base_lock\n  (stable-fixes).\n- wifi: ath11k: Fix QMI memory reuse logic (stable-fixes).\n- wifi: rtw89: leave idle mode when setting WEP encryption for\n  AP mode (stable-fixes).\n- wifi: mac80211: do not offer a mesh path if forwarding is\n  disabled (stable-fixes).\n- wifi: iwlwifi: pcie: make sure to lock rxq-\u0026gt;read (stable-fixes).\n- wifi: mac80211_hwsim: Prevent tsf from setting if beacon is\n  disabled (stable-fixes).\n- wifi: ath12k: fix failed to set mhi state error during reboot\n  with hardware grouping (stable-fixes).\n- wifi: ath12k: fix link valid field initialization in the\n  monitor Rx (stable-fixes).\n- wifi: ath12k: fix incorrect CE addresses (stable-fixes).\n- wifi: ath12k: Pass correct values of center freq1 and center\n  freq2 for 160 MHz (stable-fixes).\n- wifi: mac80211: VLAN traffic in multicast path (stable-fixes).\n- wifi: iwlwifi: Add missing MODULE_FIRMWARE for Qu-c0-jf-b0\n  (stable-fixes).\n- usbnet: asix AX88772: leave the carrier control to phylink\n  (stable-fixes).\n- PM: runtime: fix denying of auto suspend in\n  pm_suspend_timer_fn() (stable-fixes).\n- ACPI: battery: negate current when discharging (stable-fixes).\n- ACPICA: Avoid sequence overread in call to strncmp()\n  (stable-fixes).\n- ACPICA: utilities: Fix overflow check in vsnprintf()\n  (stable-fixes).\n- ACPICA: fix acpi parse and parseext cache leaks (stable-fixes).\n- ACPICA: fix acpi operand cache leak in dswstate.c\n  (stable-fixes).\n- ACPI: bus: Bail out if acpi_kobj registration fails\n  (stable-fixes).\n- mmc: Add quirk to disable DDR50 tuning (stable-fixes).\n- power: supply: bq27xxx: Retrieve again when busy (stable-fixes).\n- power: supply: collie: Fix wakeup source leaks on device unbind\n  (stable-fixes).\n- ASoC: amd: yc: Add quirk for Lenovo Yoga Pro 7 14ASP9\n  (stable-fixes).\n- ASoC: tegra210_ahub: Add check to of_device_get_match_data()\n  (stable-fixes).\n- ASoC: tas2770: Power cycle amp on ISENSE/VSENSE change\n  (stable-fixes).\n- Input: sparcspkr - avoid unannotated fall-through\n  (stable-fixes).\n- commit 0dc7dde\n\n- Update\n  patches.suse/HID-uclogic-Add-NULL-check-in-uclogic_input_configur.patch\n  (git-fixes CVE-2025-38007 bsc#1244938).\n- Update\n  patches.suse/RDMA-core-Fix-KASAN-slab-use-after-free-Read-in-ib_r.patch\n  (git-fixes CVE-2025-38022 bsc#1245003).\n- Update\n  patches.suse/RDMA-rxe-Fix-slab-use-after-free-Read-in-rxe_queue_c.patch\n  (git-fixes CVE-2025-38024 bsc#1245025).\n- Update\n  patches.suse/btrfs-avoid-NULL-pointer-dereference-if-no-valid-csu.patch\n  (bsc#1243342 CVE-2025-38059 bsc#1244759).\n- Update\n  patches.suse/btrfs-avoid-NULL-pointer-dereference-if-no-valid-ext.patch\n  (bsc#1236208 CVE-2025-21658).\n- Update\n  patches.suse/can-bcm-add-locking-for-bcm_op-runtime-updates.patch\n  (git-fixes CVE-2025-38004 bsc#1244274).\n- Update\n  patches.suse/can-bcm-add-missing-rcu-read-protection-for-procfs-c.patch\n  (git-fixes CVE-2025-38003 bsc#1244275).\n- Update\n  patches.suse/crypto-algif_hash-fix-double-free-in-hash_accept.patch\n  (git-fixes CVE-2025-38079 bsc#1245217).\n- Update\n  patches.suse/crypto-lzo-Fix-compression-buffer-overrun.patch\n  (stable-fixes CVE-2025-38068 bsc#1245210).\n- Update\n  patches.suse/dmaengine-idxd-Refactor-remove-call-with-idxd_cleanu.patch\n  (git-fixes CVE-2025-38014 bsc#1244732).\n- Update\n  patches.suse/dmaengine-idxd-fix-memory-leak-in-error-handling-pat-46a5cca.patch\n  (git-fixes CVE-2025-38015 bsc#1244789).\n- Update\n  patches.suse/dmaengine-ti-k3-udma-Add-missing-locking.patch\n  (git-fixes CVE-2025-38005 bsc#1244727).\n- Update\n  patches.suse/drm-amd-display-Increase-block_sequence-array-size.patch\n  (stable-fixes CVE-2025-38080 bsc#1244738).\n- Update\n  patches.suse/ext4-goto-right-label-out_mmap_sem-in-ext4_setattr.patch\n  (bsc#1242556 CVE-2025-22120 bsc#1241592).\n- Update\n  patches.suse/firmware-arm_ffa-Set-dma_mask-for-ffa-devices.patch\n  (stable-fixes CVE-2025-38043 bsc#1245081).\n- Update patches.suse/media-cx231xx-set-device_caps-for-417.patch\n  (stable-fixes CVE-2025-38044 bsc#1245082).\n- Update\n  patches.suse/net-handshake-Fix-handshake_req_destroy_test1.patch\n  (git-fixes CVE-2024-26831 bsc#1223008).\n- Update\n  patches.suse/net-mlx5e-Disable-MACsec-offload-for-uplink-represen.patch\n  (git-fixes CVE-2025-38020 bsc#1245001).\n- Update patches.suse/net_sched-prio-fix-a-race-in-prio_tune.patch\n  (git-fixes CVE-2025-38083 bsc#1245183).\n- Update\n  patches.suse/nfs-handle-failure-of-nfs_get_lock_context-in-unlock-path.patch\n  (git-fixes CVE-2025-38023 bsc#1245004).\n- Update patches.suse/orangefs-Do-not-truncate-file-size.patch\n  (git-fixes CVE-2025-38065 bsc#1244906).\n- Update\n  patches.suse/padata-do-not-leak-refcount-in-reorder_work.patch\n  (git-fixes CVE-2025-38031 bsc#1245046).\n- Update\n  patches.suse/phy-tegra-xusb-Use-a-bitmask-for-UTMI-pad-power-stat.patch\n  (git-fixes CVE-2025-38010 bsc#1244996).\n- Update\n  patches.suse/platform-x86-dell-wmi-sysman-Avoid-buffer-overflow-i.patch\n  (git-fixes CVE-2025-38077 bsc#1244736).\n- Update\n  patches.suse/regulator-max20086-fix-invalid-memory-access.patch\n  (git-fixes CVE-2025-38027 bsc#1245042).\n- Update\n  patches.suse/s390-pci-Fix-duplicate-pci_dev_put-in-disable_slot-w.patch\n  (git-fixes bsc#1244145 CVE-2025-37946 bsc#1243506).\n- Update\n  patches.suse/s390-pci-fix-potential-double-remove-of-hotplug-slot.patch\n  (bsc#1244145 CVE-2024-56699 bsc#1235490).\n- Update\n  patches.suse/sched-numa-fix-memory-leak-due-to-the-overwritten-vma-numab_state.patch\n  (git fixes (sched/numa) CVE-2024-56613 bsc#1244176).\n- Update\n  patches.suse/serial-mctrl_gpio-split-disable_ms-into-sync-and-no_.patch\n  (git-fixes CVE-2025-38040 bsc#1245078).\n- Update\n  patches.suse/spi-rockchip-Fix-register-out-of-bounds-access.patch\n  (stable-fixes CVE-2025-38081 bsc#1244739).\n- Update\n  patches.suse/usb-typec-ucsi-displayport-Fix-NULL-pointer-access.patch\n  (git-fixes CVE-2025-37994 bsc#1243823).\n- Update\n  patches.suse/vhost-scsi-Fix-handling-of-multiple-calls-to-vhost_s.patch\n  (git-fixes CVE-2025-22083 bsc#1241414).\n- Update\n  patches.suse/wifi-cfg80211-fix-out-of-bounds-access-during-multi-.patch\n  (git-fixes CVE-2025-37973 bsc#1244172).\n- Update patches.suse/wifi-iwlwifi-fix-debug-actions-order.patch\n  (stable-fixes CVE-2025-38045 bsc#1245083).\n- Update\n  patches.suse/wifi-mac80211-Set-n_channels-after-allocating-struct.patch\n  (git-fixes CVE-2025-38013 bsc#1244731).\n- Update\n  patches.suse/wifi-mt76-disable-napi-on-driver-removal.patch\n  (git-fixes CVE-2025-38009 bsc#1244995).\n- commit fee1c31\n\n- HID: lenovo: Restrict F7/9/11 mode to compact keyboards only\n  (git-fixes).\n- HID: wacom: fix kobject reference count leak (git-fixes).\n- HID: wacom: fix memory leak on sysfs attribute creation failure\n  (git-fixes).\n- HID: wacom: fix memory leak on kobject creation failure\n  (git-fixes).\n- wifi: mac80211: fix beacon interval calculation overflow\n  (git-fixes).\n- commit 8d2d6ad\n\n- scsi: storvsc: Increase the timeouts to storvsc_timeout (git-fixes).\n- net: mana: Add support for Multi Vports on Bare metal (bsc#1244229).\n- scsi: storvsc: Don't report the host packet status as the hv status (git-fixes).\n- commit cde971c\n\n- btrfs: fix fsync of files with no hard links not persisting\n  deletion (git-fixes).\n- btrfs: remove end_no_trans label from btrfs_log_inode_parent()\n  (git-fixes).\n- btrfs: simplify condition for logging new dentries at\n  btrfs_log_inode_parent() (git-fixes).\n- commit 9370aa3\n\n- btrfs: fix wrong start offset for delalloc space release during\n  mmap write (git-fixes).\n- commit 59b0f84\n\n- btrfs: fix invalid data space release when truncating block\n  in NOCOW mode (git-fixes).\n- commit b11e8b5\n\n- btrfs: fix qgroup reservation leak on failure to allocate\n  ordered extent (git-fixes).\n- commit e13d6e0\n\n- ntp: Remove invalid cast in time offset math (git-fixes)\n- commit 92649f3\n\n- timekeeping: Fix bogus clock_was_set() invocation in (git-fixes)\n- commit 17fecee\n\n- ntp: Safeguard against time_constant overflow (git-fixes)\n- commit fb90573\n\n- ntp: Clamp maxerror and esterror to operating range (git-fixes)\n- commit 947fc29\n\n- clocksource: Fix brown-bag boolean thinko in (git-fixes)\n- commit f65bb99\n\n- clocksource: Make watchdog and suspend-timing multiplication (git-fixes)\n- commit a87f573\n\n- timekeeping: Fix cross-timestamp interpolation for non-x86 (git-fixes)\n- commit 1a57489\n\n- timekeeping: Fix cross-timestamp interpolation corner case (git-fixes)\n- commit dc250ae\n\n- timekeeping: Fix cross-timestamp interpolation on counter (git-fixes)\n- commit 4e863aa\n\n- Refresh\n  patches.kabi/kabi-restore-layout-of-struct-mem_control.patch.\n- commit 5049495\n\n- kabi: restore layout of struct cgroup_subsys (bsc#1241166).\n- commit 2014732\n\n- cgroup/cpuset: Fix race between newly created partition and\n  dying one (bsc#1241166).\n- commit 36dffbc\n\n- fgraph: Still initialize idle shadow stacks when starting\n  (git-fixes).\n- commit 1697414\n\n- tracing/eprobe: Fix to release eprobe when failed to add\n  dyn_event (git-fixes).\n- commit a8fd69f\n\n- tracing: Fix cmp_entries_dup() to respect sort() comparison\n  rules (git-fixes).\n- commit f73056c\n\n- tracing: Use atomic64_inc_return() in trace_clock_counter()\n  (git-fixes).\n- commit 23262fc\n\n- trace/trace_event_perf: remove duplicate samples on the first\n  tracepoint event (git-fixes).\n- commit b4e63e6\n\n- bpf: Force uprobe bpf program to always return 0 (git-fixes).\n- commit 90effed\n\n- uprobes: Use kzalloc to allocate xol area (git-fixes).\n- Refresh\n  patches.suse/uprobes-introduce-the-global-struct-vm_special_mapping-xol_mapping.patch.\n- commit 30d8536\n\n- bpf: abort verification if env-\u0026gt;cur_state-\u0026gt;loop_entry != NULL\n  (CVE-2025-38060 bsc#1245155).\n- Refresh patches.kabi/bpf-verifier-kABI-workarounds.patch.\n- commit c80eca0\n\n- selftests/bpf: check states pruning for deeply nested iterator\n  (CVE-2025-38060 bsc#1245155).\n- bpf: don't do clean_live_states when state-\u0026gt;loop_entry-\u0026gt;branches\n  \u0026gt; 0 (CVE-2025-38060 bsc#1245155).\n- commit f0d9333\n\n- vmxnet3: support higher link speeds from vmxnet3 v9\n  (bsc#1244626).\n- commit 0aa445e\n\n- vmxnet3: correctly report gso type for UDP tunnels\n  (bsc#1244626).\n- commit 44584be\n\n- vmxnet3: update MTU after device quiesce (bsc#1244626).\n- commit 14400a7\n\n- scsi: elx: efct: Fix memory leak in efct_hw_parse_filter()\n  (git-fixes).\n- commit 11611ac\n\n- tracing: Fix compilation warning on arm32 (bsc#1243551).\n- commit bc2f48d\n\n- tracing: Fix oob write in trace_seq_to_buffer() (CVE-2025-37923\n  bsc#1243551).\n- commit ff6a777\n\n- ata: libata-eh: Do not use ATAPI DMA for a device limited to\n  PIO mode (stable-fixes).\n- commit 07065f3\n\n- bpf: copy_verifier_state() should copy 'loop_entry' field\n  (CVE-2025-38060 bsc#1245155).\n- Refresh patches.kabi/bpf-verifier-kABI-workarounds.patch.\n- commit 815fadf\n\n- selftests/bpf: test correct loop_entry update in\n  copy_verifier_state (CVE-2025-38060 bsc#1245155).\n- commit b2e3449\n\n- tracing: Fix use-after-free in print_graph_function_flags\n  during tracer switching (CVE-2025-22035 bsc#1241544).\n- commit b6d43f4\n\n- bpf: Fix deadlock between rcu_tasks_trace and event_mutex\n  (CVE-2025-37884 bsc#1243060).\n- commit 7f690ab\n\n- truct dwc3 hide new member wakeup_pending_funcs (git-fixes).\n- commit 84579a6\n\n- kabi: restore layout of struct page_counter (jsc#PED-12551).\n- commit ef34a22\n\n- usb: dwc3: gadget: Make gadget_wakeup asynchronous (git-fixes).\n- commit 39cb14b\n\n- ucsi_debugfs_entry: hide signedness change (git-fixes).\n- commit 154816e\n\n- usb: typec: ucsi: fix Clang -Wsign-conversion warning\n  (git-fixes).\n- Refresh patches.suse/paddings-add-paddings-to-TypeC-stuff.patch.\n- commit 40f2bc3\n\n- hwmon: corsair-psu: add USB id of HX1200i Series 2023 psu\n  (git-fixes).\n- commit b5678d7\n\n- net: phy: move phy_link_change() prior to mdio_bus_phy_may_suspend() (bsc#1243538)\n- commit 416e192\n\n- hwmon: (peci/dimmtemp) Do not provide fake thresholds data\n  (git-fixes).\n- hwmon: (nct6775): Actually make use of the HWMON_NCT6775 symbol\n  namespace (git-fixes).\n- commit 53b0cf2\n\n- Update reference for patches.suse/net_sched-sch_sfq-use-a-temporary-work-area-for-vali.patch (bsc#1242504)\n- commit 8730da1\n\n- s390/tty: Fix a potential memory leak bug (git-fixes\n  bsc#1245228).\n- commit e4f3ff4\n\n- s390/pci: Fix __pcilg_mio_inuser() inline assembly (git-fixes\n  bsc#1245226).\n- commit 7cf700b\n\n- ceph: fix memory leaks in __ceph_sync_read() (git-fixes).\n- Refresh\n  patches.suse/ceph-improve-error-handling-and-short-overflow-read-.patch.\n- commit 04880f5\n\n- ceph: allocate sparse_ext map only for sparse reads (git-fixes).\n- commit e7c7fa7\n\n- ceph: Fix incorrect flush end position calculation (git-fixes).\n- commit 626f897\n\n- KVM: s390: rename PROT_NONE to PROT_TYPE_DUMMY (git-fixes\n  bsc#1245225).\n- commit 7cc3455\n\n- iommu/amd: Fix potential buffer overflow in  parse_ivrs_acpihid\n  (CVE-2025-37927 bsc#1243620).\n- commit 4916f47\n\n- nvme-fc: do not reference lsrsp after failure (bsc#1245193).\n- nvmet-fcloop: don't wait for lport cleanup (bsc#1245193).\n- nvmet-fcloop: add missing fcloop_callback_host_done\n  (bsc#1245193).\n- nvmet-fc: take tgtport refs for portentry (bsc#1245193).\n- nvmet-fc: free pending reqs on tgtport unregister (bsc#1245193).\n- nvmet-fcloop: drop response if targetport is gone (bsc#1245193).\n- nvmet-fcloop: allocate/free fcloop_lsreq directly (bsc#1245193).\n- nvmet-fcloop: prevent double port deletion (bsc#1245193).\n- nvmet-fcloop: access fcpreq only when holding reqlock\n  (bsc#1245193).\n- nvmet-fcloop: update refs on tfcp_req (bsc#1245193).\n- nvmet-fcloop: refactor fcloop_delete_local_port (bsc#1245193).\n- nvmet-fcloop: refactor fcloop_nport_alloc and track lport\n  (bsc#1245193).\n- nvmet-fcloop: remove nport from list on last user (bsc#1245193).\n- nvmet-fcloop: track ref counts for nports (bsc#1245193).\n- commit 20104c4\n\n- Remove host-memcpy-hack.h\n  This might have been usefult at some point but we have more things that\n  depend on specific library versions today.\n- commit 0396c23\n\n- Remove compress-vmlinux.sh\n  /usr/lib/rpm/brp-suse.d/brp-99-compress-vmlinux was added in\n  pesign-obs-integration during SLE12 RC. This workaround can be removed.\n- commit 19caac0\n\n- Remove try-disable-staging-driver\n  The config for linux-next is autogenerated from master config, and\n  defaults filled for missing options. This is unlikely to enable any\n  staging driver in the first place.\n- commit a6f21ed\n\n- nvme: always punt polled uring_cmd end_io work to task_work\n  (git-fixes).\n- nvme: fix implicit bool to flags conversion (git-fixes).\n- commit 36de06b\n\n- net/tls: fix kernel panic when alloc_page failed (CVE-2025-38018\n  bsc#1244999).\n- commit 1124110\n\n- espintcp: fix skb leaks (CVE-2025-38057 bsc#1244862).\n- commit dffbfd5\n\n- nvme: fix command limits status code (git-fixes).\n- nvme-pci: add NVME_QUIRK_NO_DEEPEST_PS quirk for SOLIDIGM P44\n  Pro (git-fixes).\n- nvme-pci: add quirks for WDC Blue SN550 15b7:5009 (git-fixes).\n- nvme-pci: add quirks for device 126f:1001 (git-fixes).\n- commit 990928c\n\n- sunrpc: handle SVC_GARBAGE during svc auth processing as auth\n  error (git-fixes).\n- commit afe6d07\n\n- x86/microcode/AMD: Add get_patch_level() (git-fixes).\n- commit 73bb23d\n\n- x86/microcode/AMD: Get rid of the _load_microcode_amd() forward  declaration (git-fixes).\n- commit c818693\n\n- x86/microcode/AMD: Merge early_apply_microcode() into its single  callsite (git-fixes).\n- commit 761df14\n\n- x86/microcode/AMD: Remove ugly linebreak in __verify_patch_section()  signature (git-fixes).\n- commit d6c2d35\n\n- x86/microcode: Consolidate the loader enablement checking (git-fixes).\n- commit d0fff01\n\n- scsi: iscsi: Fix incorrect error path labels for flashnode\n  operations (git-fixes).\n- md/raid1,raid10: don't handle IO error for REQ_RAHEAD and\n  REQ_NOWAIT (git-fixes).\n- commit cbd3a76\n\n- PCI/PM: Set up runtime PM even for devices without PCI PM\n  (git-fixes).\n- commit 871b129\n\n- gpio: mlxbf3: only get IRQ for device instance 0 (git-fixes).\n- ALSA: hda/realtek: Fix built-in mic on ASUS VivoBook X513EA\n  (git-fixes).\n- drm/etnaviv: Protect the scheduler's pending list with its lock\n  (git-fixes).\n- drm/nouveau/bl: increase buffer size to avoid truncate warning\n  (git-fixes).\n- drm/ssd130x: fix ssd132x_clear_screen() columns (git-fixes).\n- drm/amdgpu: switch job hw_fence to amdgpu_fence (git-fixes).\n- drm/i915/pmu: Fix build error with GCOV and AutoFDO enabled\n  (git-fixes).\n- drm/msm/dsi/dsi_phy_10nm: Fix missing initial VCO rate\n  (git-fixes).\n- drm/msm/disp: Correct porch timing for SDM845 (git-fixes).\n- commit 3df7edd\n\n- libnvdimm/labels: Fix divide error in nd_label_data_init()\n  (bsc#1244743, CVE-2025-38072).\n- commit 42a394c\n\n- kabi: restore layout of struct mem_control (jsc#PED-12551).\n- commit e948e2e\n\n- mm, memcg: cg2 memory{.swap,}.peak write handlers\n  (jsc#PED-12551).\n- mm/memcontrol: export memcg.swap watermark via sysfs for v2\n  memcg (jsc#PED-12551).\n- commit 97c4d37\n\n- can: tcan4x5x: fix power regulator retrieval during probe\n  (git-fixes).\n- commit 5798451\n\n- wifi: carl9170: do not ping device which has failed to load\n  firmware (git-fixes).\n- NFC: nci: uart: Set tty-\u0026gt;disc_data only in success path\n  (git-fixes).\n- hwmon: (occ) fix unaligned accesses (git-fixes).\n- hwmon: (occ) Rework attribute registration for stack usage\n  (git-fixes).\n- hwmon: (ftsteutates) Fix TOCTOU race in fts_read() (git-fixes).\n- wifi: ath11k: move some firmware stats related functions\n  outside of debugfs (git-fixes).\n- wifi: ath11k: don't wait when there is no vdev started\n  (git-fixes).\n- wifi: ath11k: don't use static variables in\n  ath11k_debugfs_fw_stats_process() (git-fixes).\n- wifi: ath11k: avoid burning CPU in\n  ath11k_debugfs_fw_stats_request() (git-fixes).\n- USB: serial: pl2303: add new chip PL2303GC-Q20 and PL2303GT-2AB\n  (stable-fixes).\n- usb: storage: Ignore UAS driver for SanDisk 3.2 Gen2 storage\n  device (stable-fixes).\n- usb: quirks: Add NO_LPM quirk for SanDisk Extreme 55AE\n  (stable-fixes).\n- thunderbolt: Do not double dequeue a configuration request\n  (stable-fixes).\n- rtc: Make rtc_time64_to_tm() support dates before 1970\n  (stable-fixes).\n- firmware: SDEI: Allow sdei initialization without ACPI_APEI_GHES\n  (git-fixes).\n- Bluetooth: MGMT: Remove unused mgmt_pending_find_data\n  (stable-fixes).\n- serial: sh-sci: Move runtime PM enable to sci_probe_single()\n  (stable-fixes).\n- wifi: ath11k: convert timeouts to secs_to_jiffies()\n  (stable-fixes).\n- wifi: ath11k: fix soc_dp_stats debugfs file permission\n  (stable-fixes).\n- commit d77b71f\n\n- Update patches.suse/ALSA-pcm-Fix-race-of-buffer-access-at-PCM-OSS-layer.patch\n  (CVE-2025-38078 bsc#1244737).\n- commit 9ad878b\n\n- calipso: Fix null-ptr-deref in calipso_req_{set,del}attr()\n  (git-fixes).\n- commit 1a53756\n\n- net/sched: fix use-after-free in taprio_dev_notifier\n  (git-fixes).\n- commit bd7e23e\n\n- net_sched: ets: fix a race in ets_qdisc_change() (git-fixes).\n- commit c8863c2\n\n- net_sched: tbf: fix a race in tbf_change() (git-fixes).\n- commit 8dd49d3\n\n- net_sched: red: fix a race in __red_change() (git-fixes).\n- commit eb63704\n\n- net_sched: prio: fix a race in prio_tune() (git-fixes).\n- commit 2898595\n\n- net_sched: sch_sfq: reject invalid perturb period (git-fixes).\n- commit 11af7b7\n\n- net: Fix TOCTOU issue in sk_is_readable() (git-fixes).\n- commit 9bf44e9\n\n- Update patches.suse/dlm-mask-sk_shutdown-value.patch\n  (bsc#1241278).\n- Update patches.suse/dlm-use-SHUT_RDWR-for-SCTP-shutdown.patch\n  (bsc#1241278).\n  Original bsc number was wrong. Fix it.\n- commit 37c9443\n\n- net_sched: hfsc: Address reentrant enqueue adding class to\n  eltree twice (CVE-2025-38001 bsc#1244234).\n- commit 6a31481\n\n- packaging: Add support for suse-kabi-tools\n  The current workflow to check kABI stability during the RPM build of SUSE\n  kernels consists of the following steps:\n  * The downstream script rpm/modversions unpacks the consolidated kABI\n  symtypes reference data from kabi/\u0026lt;arch\u0026gt;/symtypes-\u0026lt;flavor\u0026gt; and creates\n  individual symref files.\n  * The build performs a regular kernel make. During this operation, genksyms\n  is invoked for each source file. The tool determines type signatures of\n  all exports within the file, reports any differences compared to the\n  associated symref reference, calculates symbol CRCs from the signatures\n  and writes new type data into a symtypes file.\n  * The script rpm/modversions is invoked again, this time it packs all new\n  symtypes files to a consolidated kABI file.\n  * The downstream script rpm/kabi.pl checks symbol CRCs in the new build and\n  compares them to a reference from kabi/\u0026lt;arch\u0026gt;/symvers-\u0026lt;flavor\u0026gt;, taking\n  kabi/severities into account.\n  suse-kabi-tools is a new set of tools to improve the kABI checking process.\n  The suite includes two tools, ksymtypes and ksymvers, which replace the\n  existing scripts rpm/modversions and rpm/kabi.pl, as well as the comparison\n  functionality previously provided by genksyms. The tools have their own\n  source repository and package.\n  The tools provide faster operation and more detailed, unified output. In\n  addition, they allow the use of the new upstream tool gendwarfksyms, which\n  lacks any built-in comparison functionality.\n  The updated workflow is as follows:\n  * The build performs a regular kernel make. During this operation, genksyms\n  (gendwarfksyms) is invoked as usual, determinining signatures and CRCs of\n  all exports and writing the type data to symtypes files. However,\n  genksyms no longer performs any comparison.\n  * 'ksymtypes consolidate' packs all new symtypes files to a consolidated\n  kABI file.\n  * 'ksymvers compare' checks symbol CRCs in the new build and compares them\n  to a reference from kabi/\u0026lt;arch\u0026gt;/symvers-\u0026lt;flavor\u0026gt;, taking kabi/severities\n  into account. The tool writes its result in a human-readable form on\n  standard output and also writes a list of all changed exports (not\n  ignored by kabi/severities) to the changed-exports file.\n  * 'ksymtypes compare' takes the changed-exports file, the consolidated kABI\n  symtypes reference data from kabi/\u0026lt;arch\u0026gt;/symtypes-\u0026lt;flavor\u0026gt; and the new\n  consolidated data. Based on this data, it produces a detailed report\n  explaining why the symbols changed.\n  The patch enables the use of suse-kabi-tools via rpm/config.sh, providing\n  explicit control to each branch. To enable the support, set\n  USE_SUSE_KABI_TOOLS=Yes in the config file.\n- commit a2c6f89\n\n- rpm/kernel-source.changes.old: Drop bogus bugzilla reference (bsc#1244725)\n- commit 5432961\n\n- platform/x86: ideapad-laptop: use usleep_range() for EC polling\n  (git-fixes).\n- commit 1373cac\n\n- platform/x86: dell_rbu: Stop overwriting data buffer\n  (git-fixes).\n- platform/x86: dell_rbu: Fix list usage (git-fixes).\n- platform/x86/amd: pmc: Clear metrics table at start of cycle\n  (git-fixes).\n- platform/x86/intel-uncore-freq: Fail module load when plat_info\n  is NULL (git-fixes).\n- commit 4eb007c\n\n- Bluetooth: hci_sync: Fix UAF in hci_acl_create_conn_sync\n  (git-fixes).\n- Bluetooth: hci_sync: Fix UAF on hci_abort_conn_sync (git-fixes).\n- Bluetooth: hci_conn: Fix UAF Write in\n  __hci_acl_create_connection_sync (git-fixes).\n- commit cc24dff\n\n- Bluetooth: hci_event: Fix not using key encryption size when\n  its known (git-fixes).\n- Bluetooth: Remove pending ACL connection attempts\n  (stable-fixes).\n- Bluetooth: hci_conn: Only do ACL connections sequentially\n  (stable-fixes).\n- commit 45b89a8\n\n- kernel-source: Remove log.sh from sources\n- commit 96bd779\n\n- powerpc/eeh: Fix missing PE bridge reconfiguration during VFIO\n  EEH recovery (bsc#1215199).\n- commit 8ae69e3\n\n- ima: Suspend PCR extends and log appends when rebooting\n  (bsc#1210025 ltc#196650).\n- commit 25c308f\n\n- ACPI: CPPC: Fix NULL pointer dereference when nosmp is used\n  (git-fixes).\n- regulator: max20086: Fix refcount leak in\n  max20086_parse_regulators_dt() (git-fixes).\n- commit 5b8c5a3\n\n- scsi: dc395x: Remove leftover if statement in reselect()\n  (git-fixes).\n- commit c259874\n\n- loop: add file_start_write() and file_end_write() (git-fixes).\n- scsi: dc395x: Remove DEBUG conditional compilation (git-fixes).\n- scsi: hisi_sas: Call I_T_nexus after soft reset for SATA disk\n  (git-fixes).\n- scsi: qedf: Use designated initializer for struct\n  qed_fcoe_cb_ops (git-fixes).\n- scsi: sd_zbc: block: Respect bio vector limits for REPORT\n  ZONES buffer (git-fixes).\n- scsi: mpi3mr: Add level check to control event logging\n  (git-fixes).\n- scsi: st: Tighten the page format heuristics with MODE SELECT\n  (git-fixes).\n- scsi: st: ERASE does not change tape location (git-fixes).\n- scsi: mpt3sas: Send a diag reset if target reset fails\n  (git-fixes).\n- scsi: st: Restore some drive settings after reset (git-fixes).\n- commit 6dba36f\n\n- x86/mm/init: Handle the special case of device private\n  pages in add_pages(), to not increase max_pfn and trigger\n  dma_addressing_limited() bounce buffers (git-fixes).\n- commit d67c7bf\n\n- PCI/MSI: Size device MSI domain with the maximum number of\n  vectors (git-fixes).\n- PCI: dw-rockchip: Remove PCIE_L0S_ENTRY check from\n  rockchip_pcie_link_up() (git-fixes).\n- PCI: apple: Set only available ports up (git-fixes).\n- PCI: dwc: ep: Correct PBA offset in .set_msix() callback\n  (git-fixes).\n- PCI: endpoint: Retain fixed-size BAR size as well as aligned\n  size (git-fixes).\n- kABI: PCI: endpoint: Retain fixed-size BAR size as well as\n  aligned size (git-fixes).\n- PCI/DPC: Log Error Source ID only when valid (git-fixes).\n- serial: mctrl_gpio: split disable_ms into sync and no_sync APIs\n  (git-fixes).\n- kABI: serial: mctrl_gpio: split disable_ms into sync and\n  no_sync APIs (git-fixes).\n- x86/kaslr: Reduce KASLR entropy on most x86 systems (git-fixes).\n- PCI/DPC: Use defines with DPC reason fields (git-fixes).\n- commit 67e24e5\n\n- Bluetooth: MGMT: Fix sparse errors (git-fixes).\n- commit bcd5c33\n\n- wifi: ath11k: validate ath11k_crypto_mode on top of\n  ath11k_core_qmi_firmware_ready (git-fixes).\n- ath10k: snoc: fix unbalanced IRQ enable in crash recovery\n  (git-fixes).\n- Bluetooth: hci_sync: Fix broadcast/PA when using an existing\n  instance (git-fixes).\n- Bluetooth: Fix NULL pointer deference on eir_get_service_data\n  (git-fixes).\n- net/mdiobus: Fix potential out-of-bounds clause 45 read/write\n  access (git-fixes).\n- net/mdiobus: Fix potential out-of-bounds read/write access\n  (git-fixes).\n- Bluetooth: MGMT: Fix UAF on mgmt_remove_adv_monitor_complete\n  (git-fixes).\n- Bluetooth: hci_core: fix list_for_each_entry_rcu usage\n  (git-fixes).\n- ptp: remove ptp-\u0026gt;n_vclocks check logic in ptp_vclock_in_use()\n  (git-fixes).\n- pinctrl: st: Drop unused st_gpio_bank() function (git-fixes).\n- pinctrl: qcom: pinctrl-qcm2290: Add missing pins (git-fixes).\n- commit d9ecc09\n\n- sch_hfsc: Fix qlen accounting bug when using peek in\n  hfsc_enqueue() (CVE-2025-38000 bsc#1244277).\n- commit ffb9ab4\n\n- net_sched: sch_fifo: implement lockless __fifo_dump() (bsc#1237312)\n- commit 8196566\n\n- Revert \u0026quot;ipv6: save dontfrag in cork (git-fixes).\u0026quot;\n  This reverts commit d3fe600164867bd0529ed1049fbd53ca9fce2eaf.\n  See https://lore.kernel.org/all/aElivdUXqd1OqgMY@karahi.gladserv.com/\n  and https://bugzilla.suse.com/show_bug.cgi?id=1244313.\n- commit b9e7a4e\n\n- Revert \u0026quot;kABI: ipv6: save dontfrag in cork (git-fixes).\u0026quot;\n  This reverts commit cbc81e238815721048ac709726467c90981753c9.\n  See https://lore.kernel.org/all/aElivdUXqd1OqgMY@karahi.gladserv.com/\n  and https://bugzilla.suse.com/show_bug.cgi?id=1244313.\n- commit 38d0091\n\n- kABI fix for net: Remove RTNL dance for SIOCBRADDIF and\n  SIOCBRDELIF (CVE-2025-22111 bsc#1241572).\n- commit edfd43c\n\n- page_pool: avoid infinite loop to schedule delayed worker\n  (CVE-2025-37859 bsc#1243051).\n- commit b8f1dfd\n\n- tipc: fix memory leak in tipc_link_xmit (CVE-2025-37757 bsc#1242521)\n- commit 48e0415\n\n- struct usci: hide additional member (git-fixes).\n- commit 1b8456a\n\n- net_sched: Flush gso_skb list too during -\u0026gt;change()\n  (CVE-2025-37992 bsc#1243698).\n- netfilter: ipset: fix region locking in hash types\n  (CVE-2025-37997 bsc#1243832).\n- ipvs: fix uninit-value for saddr in do_output_route4\n  (CVE-2025-37961 bsc#1243523).\n- net: dsa: free routing table on probe failure (CVE-2025-37786\n  bsc#1242725).\n- net: tls: explicitly disallow disconnect (CVE-2025-37756\n  bsc#1242515).\n- net: Remove RTNL dance for SIOCBRADDIF and SIOCBRDELIF\n  (CVE-2025-22111 bsc#1241572).\n- vlan: enforce underlying device type (CVE-2025-21920\n  bsc#1240686).\n- xfrm: delete intermediate secpath entry in packet offload mode\n  (CVE-2025-21720 bsc#1238859).\n- xfrm: state: fix out-of-bounds read during lookup\n  (CVE-2024-57982 bsc#1237913).\n- rxrpc: Fix handling of received connection abort (CVE-2024-58053\n  bsc#1238982).\n- commit d3e755f\n\n- isolcpus: fix bug in returning number of allocated cpumask (bsc#1243774).\n  Return the correct upper limit of the allocated cpumask.\n  modified:\n  - patches.suse/lib-group_cpus-honor-housekeeping-config-when-grouping.patch\n  - patches.suse/lib-group_cpus-let-group_cpu_evenly-return-number.patch\n- commit 092bf4a\n\n- xen/arm: call uaccess_ttbr0_enable for dm_op hypercall (git-fixes)\n- commit 24d5250\n\n- arm64: dts: marvell: uDPU: define pinctrl state for alarm LEDs (git-fixes)\n- commit 28d162e\n\n- Revert \u0026quot;arm64: dts: allwinner: h6: Use RSB for AXP805 PMIC (git-fixes)\n- commit 9dd3301\n\n- xen/x86: fix initial memory balloon target (git-fixes).\n- commit 7e938b1\n\n- ALSA: usb-audio: Add a quirk for Lenovo Thinkpad Thunderbolt\n  3 dock (stable-fixes).\n- ALSA: usb-audio: Fix NULL pointer deref in\n  snd_usb_power_domain_set() (git-fixes).\n- commit 9d209cd\n\n- ALSA: usb-audio: Rename Pioneer mixer channel controls\n  (git-fixes).\n- ALSA: usb-audio: Add Pioneer DJ DJM-V10 support (stable-fixes).\n- ALSA: usb-audio: Fix duplicated name in MIDI substream names\n  (stable-fixes).\n- ALSA: usb-audio: mixer: Remove temporary string use in\n  parse_clock_source_unit (stable-fixes).\n- commit e8737ac\n\n- ALSA: usb-audio: Set MIDI1 flag appropriately for GTB MIDI\n  1.0 entry (stable-fixes).\n- ALSA: usb-audio: Accept multiple protocols in GTBs\n  (stable-fixes).\n- ALSA: usb-audio: Add name for HP Engage Go dock (stable-fixes).\n- commit 498a796\n\n- Revert \u0026quot;ALSA: usb-audio: Skip setting clock selector for single\n  connections\u0026quot; (stable-fixes).\n- Refresh\n  patches.suse/ALSA-usb-audio-Ignore-clock-selector-errors-for-sing.patch.\n- Refresh\n  patches.suse/ALSA-usb-audio-Support-multiple-control-interfaces.patch.\n- commit d0138e9\n\n- ALSA: usb-audio: Support read-only clock selector control\n  (stable-fixes).\n- Refresh\n  patches.suse/ALSA-usb-audio-Ignore-clock-selector-errors-for-sing.patch.\n- Refresh\n  patches.suse/ALSA-usb-audio-Support-multiple-control-interfaces.patch.\n- commit ee97bec\n\n- ALSA: usb-audio: Skip setting clock selector for single\n  connections (stable-fixes).\n- Refresh\n  patches.suse/ALSA-usb-audio-Ignore-clock-selector-errors-for-sing.patch.\n- Refresh\n  patches.suse/ALSA-usb-audio-Support-multiple-control-interfaces.patch.\n- commit 7326e0b\n\n- ALSA: usb-audio: Add implicit feedback quirk for RODE AI-1\n  (stable-fixes).\n- ALSA: usb-audio: enable support for Presonus Studio 1824c\n  within 1810c file (stable-fixes).\n- ALSA: usb-audio: Support multiple control interfaces\n  (stable-fixes).\n- ALSA: usb-audio: Check shutdown at endpoint_set_interface()\n  (stable-fixes).\n- commit d4a0ce3\n\n- wifi: ath11k: update channel list in worker when wait flag is\n  set (bsc#1243847).\n- commit 4cfebaa\n\n- net: lan743x: Fix memleak issue when GSO enabled (CVE-2025-37909\n  bsc#1243467).\n- vxlan: vnifilter: Fix unlocked deletion of default FDB entry\n  (CVE-2025-37921 bsc#1243480).\n- commit 788c92a\n\n- watchdog: mediatek: Add support for MT6735 TOPRGU/WDT\n  (git-fixes).\n- commit 4df631e\n\n- watchdog: it87_wdt: add PWRGD enable quirk for Qotom QCML04\n  (git-fixes).\n- commit ba2db88\n\n- module: ensure that kobject_put() is safe for module type kobjects (CVE-2025-37995 bsc#1243827)\n- commit 6979c9a\n\n- mkspec: Exclude rt flavor from kernel-syms dependencies (bsc#1244337).\n- commit 7c95ae0\n\n- x86/xen: fix balloon target initialization for PVH dom0\n  (git-fixes).\n- commit ad18aba\n\n- powerpc/vas: Return -EINVAL if the offset is non-zero in mmap()\n  (bsc#1244309 ltc#213790).\n- powerpc/powernv/memtrace: Fix out of bounds issue in memtrace\n  mmap (bsc#1244309 ltc#213790).\n- commit 2d4ad48\n\n- tracing: Verify event formats that have \u0026quot;%*p..\u0026quot; (CVE-2025-37938\n  bsc#1243544).\n- tracing: Add __print_dynamic_array() helper (bsc#1243544).\n- tracing: Add __string_len() example (bsc#1243544).\n- commit c705d1d\n\n- fbdev/efifb: Remove PM for parent device (bsc#1244261).\n- Refresh\n  patches.suse/fbdev-efifb-Register-sysfs-groups-through-driver-cor.patch.\n- commit 0c56458\n\n- RDMA/uverbs: Propagate errors from rdma_lookup_get_uobject() (git-fixes)\n- commit 7d2ce51\n\n- RDMA/core: Fix best page size finding when it can cross SG entries (git-fixes)\n- commit bfdc372\n\n- MyBS: Do not build kernel-obs-qa with limit_packages\n  Fixes: 58e3f8c34b2b (\u0026quot;bs-upload-kernel: Pass limit_packages also on multibuild\u0026quot;)\n- commit f4c6047\n\n- MyBS: Simplify qa_expr generation\n  Start with a 0 which makes the expression valid even if there are no QA\n  repositories (currently does not happen). Then separator is always\n  needed.\n- commit e4c2851\n\n- MyBS: Correctly generate build flags for non-multibuild package limit\n  (bsc# 1244241)\n  Fixes: 0999112774fc (\u0026quot;MyBS: Use buildflags to set which package to build\u0026quot;)\n- commit 27588c9\n\n- bs-upload-kernel: Pass limit_packages also on multibuild\n  Fixes: 0999112774fc (\u0026quot;MyBS: Use buildflags to set which package to build\u0026quot;)\n  Fixes: 747f601d4156 (\u0026quot;bs-upload-kernel, MyBS, Buildresults: Support multibuild (JSC-SLE#5501, boo#1211226, bsc#1218184)\u0026quot;)\n- commit 8ef486c\n\n- ftrace: Avoid potential division by zero in function_stat_show()\n  (CVE-2025-21898 bsc#1240610).\n- commit d476f96\n\n- tracing: Fix bad hist from corrupting named_triggers list\n  (CVE-2025-21899 bsc#1240577).\n- commit 60219e4\n\n- iommu: Skip PASID validation for devices without PASID capability (bsc#1244100)\n- commit 647b2f4\n\n- iommu: Validate the PASID in iommu_attach_device_pasid() (bsc#1244100)\n- commit ca42766\n\n- nfsd: Initialize ssc before laundromat_work to prevent NULL\n  dereference (git-fixes).\n- commit 153c2a2\n\n- nfsd: validate the nfsd_serv pointer before calling svc_wake_up\n  (git-fixes).\n- commit af8b93e\n\n- NFSD: Insulate nfsd4_encode_read_plus() from page boundaries\n  in the encode buffer (git-fixes).\n- commit 91b6192\n\n- jffs2: check jffs2_prealloc_raw_node_refs() result in few\n  other places (git-fixes).\n- commit 254a145\n\n- jffs2: check that raw node were preallocated before writing\n  summary (git-fixes).\n- commit 4a6701a\n\n- x86/microcode/AMD: Have __apply_microcode_amd() return bool (git-fixes).\n- commit ae818bc\n\n- x86/microcode/AMD: Make __verify_patch_size() return bool (git-fixes).\n- commit dcdd8b6\n\n- x86/microcode/AMD: Return bool from find_blobs_in_containers() (git-fixes).\n- commit 65dff7c\n\n- x86/microcode/AMD: Do not return error when microcode update is not necessary (git-fixes).\n- commit 662ffcd\n\n- x86/idle: Remove MFENCEs for X86_BUG_CLFLUSH_MONITOR in mwait_idle_with_hints() and prefer_mwait_c1_over_halt() (git-fixes).\n- commit 15bb5b3\n\n- blacklist.conf: Disable fineibt part of ITS mitigation\n- Refresh\n  patches.suse/x86-its-Enumerate-Indirect-Target-Selection-ITS-bug.patch.\n- commit cedb857\n\n- xsk: fix an integer overflow in xp_create_and_assign_umem()\n  (bsc#1240823 CVE-2025-21997).\n- commit 931fc27\n\n- dlm: use SHUT_RDWR for SCTP shutdown (bsc#1228854).\n- dlm: mask sk_shutdown value (bsc#1228854).\n- commit 730d8cf\n\n- ASoC: Intel: avs: Verify content returned by parse_int_array()\n  (git-fixes).\n- ASoC: Intel: avs: Fix deadlock when the failing IPC is SET_D0IX\n  (git-fixes).\n- ASoC: codecs: hda: Fix RPM usage count underflow (git-fixes).\n- commit 7d227ae\n\n- spi: bcm63xx-hsspi: fix shared reset (git-fixes).\n- spi: bcm63xx-spi: fix shared reset (git-fixes).\n- regulator: max14577: Add error check for max14577_read_reg()\n  (git-fixes).\n- usb: usbtmc: Fix timeout value in get_stb (git-fixes).\n- usb: usbtmc: Fix read_stb function and get_stb ioctl\n  (git-fixes).\n- usb: cdnsp: Fix issue with detecting command completion event\n  (git-fixes).\n- usb: cdnsp: Fix issue with detecting USB 3.2 speed (git-fixes).\n- usb: Flush altsetting 0 endpoints before reinitializating them\n  after reset (git-fixes).\n- usb: typec: tcpm/tcpci_maxim: Fix bounds check in process_rx()\n  (git-fixes).\n- thunderbolt: Fix a logic error in wake on connect (git-fixes).\n- usb: renesas_usbhs: Reorder clock handling and power management\n  in probe (git-fixes).\n- vt: remove VT_RESIZE and VT_RESIZEX from vt_compat_ioctl()\n  (git-fixes).\n- serial: Fix potential null-ptr-deref in mlb_usio_probe()\n  (git-fixes).\n- staging: iio: ad5933: Correct settling cycles encoding per\n  datasheet (git-fixes).\n- iio: adc: ad7124: Fix 3dB filter frequency reading (git-fixes).\n- iio: filter: admv8818: Support frequencies \u0026gt;= 2^32 (git-fixes).\n- iio: filter: admv8818: fix range calculation (git-fixes).\n- iio: filter: admv8818: fix integer overflow (git-fixes).\n- iio: filter: admv8818: fix band 4, state 15 (git-fixes).\n- VMCI: fix race between vmci_host_setup_notify and\n  vmci_ctx_unset_notify (git-fixes).\n- iio: accel: fxls8962af: Fix temperature scan element sign\n  (git-fixes).\n- iio: imu: inv_icm42600: Fix temperature calculation (git-fixes).\n- iio: adc: ad7606_spi: fix reg write value mask (git-fixes).\n- bus: mhi: host: Fix conflict between power_up and SYSERR\n  (git-fixes).\n- drm/amd/display: Add null pointer check for\n  get_first_active_display() (git-fixes).\n- drm/i915/gem: Allow EXEC_CAPTURE on recoverable contexts on DG1\n  (git-fixes).\n- commit def2214\n\n- s390/pci: Serialize device addition and removal (bsc#1244145).\n- commit f1ae730\n\n- s390/pci: Allow re-add of a reserved but not yet removed device\n  (bsc#1244145).\n- commit a73fcdb\n\n- s390/pci: Prevent self deletion in disable_slot() (bsc#1244145).\n- commit 136fe4f\n\n- s390/pci: Remove redundant bus removal and disable from\n  zpci_release_device() (bsc#1244145).\n- commit 9bbc219\n\n- s390/pci: Fix potential double remove of hotplug slot\n  (bsc#1244145).\n- commit 9714d95\n\n- s390/pci: remove hotplug slot when releasing the device\n  (bsc#1244145).\n- commit 1415bb1\n\n- s390/pci: Fix duplicate pci_dev_put() in disable_slot() when\n  PF has child VFs (git-fixes bsc#1244145).\n- commit 3430d11\n\n- s390/pci: introduce lock to synchronize state of zpci_dev's\n  (jsc#PED-10253 bsc#1244145).\n- Refresh\n  patches.suse/s390-pci-Fix-leak-of-struct-zpci_dev-when-zpci_add_device-fails.patch.\n- Refresh\n  patches.suse/s390-pci-Sort-PCI-functions-prior-to-creating-virtual-busses.patch.\n- commit 2644b79\n\n- s390/pci: rename lock member in struct zpci_dev (jsc#PED-10253\n  bsc#1244145).\n- Refresh\n  patches.suse/s390-pci-Fix-leak-of-struct-zpci_dev-when-zpci_add_device-fails.patch.\n- Refresh\n  patches.suse/s390-pci-Sort-PCI-functions-prior-to-creating-virtual-busses.patch.\n- Refresh\n  patches.suse/s390-pci-Use-topology-ID-for-multi-function-devices.patch.\n- commit 9223df0\n\n- media: mediatek: vcodec: Only free buffer VA that is not NULL\n  (CVE-2023-52888 bsc#1228557).\n- commit 0299171\n\n- net: fix udp gso skb_segment after pull from frag_list\n  (git-fixes).\n- commit 8353437\n\n- page_pool: Fix use-after-free in page_pool_recycle_in_ring\n  (git-fixes).\n- commit 69ccdcd\n\n- net: Implement missing getsockopt(SO_TIMESTAMPING_NEW)\n  (git-fixes).\n- commit d107edf\n\n- net: sched: em_text: fix possible memory leak in\n  em_text_destroy() (git-fixes).\n- commit 71395f7\n\n- neighbour: Don't let neigh_forced_gc() disable preemption for\n  long (git-fixes).\n- commit fea49bb\n\n- net: sched: cls_u32: Fix allocation size in u32_init()\n  (git-fixes).\n- commit eea3eab\n\n- Move upstreamed patches into sorted section\n- commit c9465fb\n\n- kernel-source: Do not use multiple -r in sed parameters\n  This usage is enabled in commit b18d64d\n  (sed: allow multiple (non-conflicting) -E/-r parameters, 2016-07-31)\n  only available since sed 4.3\n  Fixes: dc2037cd8f94 (\u0026quot;kernel-source: Also replace bin/env\u0026quot;\n- commit 91ad98e\n\n- Drop AMDGPU patch that may cause regressions (bsc#1243782)\n  Deleted:\n  patches.suse/drm-amd-display-more-liberal-vmin-vmax-update-for-fr.patch\n- commit c23b99f\n\n- wifi: ath12k: Avoid memory leak while enabling statistics\n  (CVE-2025-37743 bsc#1242163).\n- commit f493528\n\n- PM: sleep: Fix power.is_suspended cleanup for direct-complete\n  devices (git-fixes).\n- net: wwan: t7xx: Fix napi rx poll issue (git-fixes).\n- Bluetooth: L2CAP: Fix not responding with L2CAP_CR_LE_ENCRYPTION\n  (git-fixes).\n- Bluetooth: hci_qca: move the SoC type check to the right place\n  (git-fixes).\n- rtc: Fix offset calculation for .start_secs \u0026lt; 0 (git-fixes).\n- rtc: stm32: drop unused module alias (git-fixes).\n- rtc: s3c: drop unused module alias (git-fixes).\n- rtc: pm8xxx: drop unused module alias (git-fixes).\n- rtc: jz4740: drop unused module alias (git-fixes).\n- rtc: da9063: drop unused module alias (git-fixes).\n- rtc: cpcap: drop unused module alias (git-fixes).\n- rtc: at91rm9200: drop unused module alias (git-fixes).\n- rtc: sh: assign correct interrupts with DT (git-fixes).\n- dmaengine: ti: Add NULL check in udma_probe() (git-fixes).\n- phy: qcom-qmp-usb: Fix an NULL vs IS_ERR() bug (git-fixes).\n- commit ec23ee6\n\n- net: usb: aqc111: debug info before sanitation (git-fixes).\n- commit fc18979\n\n- openvswitch: Fix unsafe attribute parsing in output_userspace() (CVE-2025-37998 bsc#1243836)\n- commit 51afd13\n\n- octeon_ep: Fix host hang issue during device reboot (CVE-2025-37933 bsc#1243628)\n- commit 44230dd\n\n- kABI: ipv6: save dontfrag in cork (git-fixes).\n  Patch-up the kABI change with an #ifdef __GENKSYMS__. This change is\n  safe (as detailed in the patch commit message) due to the struct\n  having a 6-byte hole at the end we can use.\n- commit cbc81e2\n\n- ipv6: save dontfrag in cork (git-fixes).\n- commit d3fe600\n\n- tcp: bring back NUMA dispersion in inet_ehash_locks_alloc()\n  (git-fixes).\n- commit 756fa72\n\n- netpoll: hold rcu read lock in __netpoll_send_skb() (git-fixes).\n- commit e02eac4\n\n- ipvs: Always clear ipvs_property flag in skb_scrub_packet()\n  (git-fixes).\n- commit d943643\n\n- tcp/dccp: allow a connection when sk_max_ack_backlog is zero\n  (git-fixes).\n- commit 09561a1\n\n- xsk: always clear DMA mapping information when unmapping the\n  pool (git-fixes).\n- commit 9908bc6\n\n- net: sched: fix erspan_opt settings in cls_flower (git-fixes).\n- commit fc52734\n\n- spi: spi-imx: Add check for spi_imx_setupxfer() (CVE-2025-37801 bsc#1242850)\n- commit f3955e7\n\n- ipmr: fix tables suspicious RCU usage (git-fixes).\n- commit d029f0f\n\n- ip6mr: fix tables suspicious RCU usage (git-fixes).\n- commit 79bb134\n\n- netpoll: Use rcu_access_pointer() in __netpoll_setup\n  (git-fixes).\n- commit f180c62\n\n- netdev-genl: Hold rcu_read_lock in napi_get (git-fixes).\n- commit 895e121\n\n- net/neighbor: clear error in case strict check is not set\n  (git-fixes).\n- commit 9eb711a\n\n- ipv4: Convert ip_route_input() to dscp_t (git-fixes).\n- commit 401defe\n\n- net: sched: consistently use rcu_replace_pointer() in\n  taprio_change() (git-fixes).\n- commit a6910eb\n\n- udp: fix receiving fraglist GSO packets (git-fixes).\n- commit 5b87500\n\n- net: linkwatch: use system_unbound_wq (git-fixes).\n- commit 34d590e\n\n- net: page_pool: fix warning code (git-fixes).\n- commit 0d77245\n\n- net: give more chances to rcu in netdev_wait_allrefs_any()\n  (git-fixes).\n- commit a1b1859\n\n- tcp/dccp: complete lockless accesses to sk-\u0026gt;sk_max_ack_backlog\n  (git-fixes).\n- commit b96b4a8\n\n- tcp/dccp: bypass empty buckets in inet_twsk_purge() (git-fixes).\n- commit afdb9bb\n\n- udp: preserve the connected status if only UDP cmsg (git-fixes).\n- commit 8714e3a\n\n- udp: fix incorrect parameter validation in the\n  udp_lib_getsockopt() function (git-fixes).\n- commit 34a2994\n\n- ipmr: fix incorrect parameter validation in the\n  ip_mroute_getsockopt() function (git-fixes).\n- commit f23f4c9\n\n- ip_tunnel: annotate data-races around t-\u0026gt;parms.link (git-fixes).\n- commit 765e083\n\n- net: add rcu safety to rtnl_prop_list_size() (git-fixes).\n- commit 1e0fceb\n\n- net: ipv4: fix a memleak in ip_setup_cork (git-fixes).\n- commit 935ac41\n\n- udp: annotate data-races around up-\u0026gt;pending (git-fixes).\n- commit 72fda93\n\n- ipv4: Correct/silence an endian warning in __ip_do_redirect\n  (git-fixes).\n- commit 011b9c9\n\n- driver core: fix potential NULL pointer dereference in\n  dev_uevent() (CVE-2025-37800 bsc#1242849).\n- driver core: introduce device_set_driver() helper\n  (CVE-2025-37800 bsc#1242849).\n- commit 3aecdc2\n\n- soc: qcom: smp2p: Fix fallback to qcom,ipc parse (git-fixes).\n- commit a145886\n\n- wifi: mt76: mt7996: fix RX buffer size of MCU event (git-fixes).\n- wifi: mt76: mt7996: set EHT max ampdu length capability\n  (git-fixes).\n- wifi: mt76: mt7925: ensure all MCU commands wait for response\n  (git-fixes).\n- wifi: mt76: mt7925: refine the sniffer commnad (git-fixes).\n- wifi: mt76: mt7925: prevent multiple scan commands (git-fixes).\n- wifi: mt76: mt7915: Fix null-ptr-deref in mt7915_mmio_wed_init()\n  (git-fixes).\n- wifi: mt76: mt7925: fix host interrupt register initialization\n  (git-fixes).\n- Revert \u0026quot;wifi: mt76: mt7996: fill txd by host driver\u0026quot;\n  (stable-fixes).\n- wifi: ath9k_htc: Abort software beacon handling if disabled\n  (git-fixes).\n- wifi: ath12k: fix ring-buffer corruption (git-fixes).\n- wifi: ath11k: fix rx completion meta data corruption\n  (git-fixes).\n- wifi: ath11k: fix ring-buffer corruption (git-fixes).\n- wifi: p54: prevent buffer-overflow in p54_rx_eeprom_readback()\n  (git-fixes).\n- wifi: rtw88: fix the 'para' buffer size to avoid reading out\n  of bounds (git-fixes).\n- wifi: rtw88: usb: Reduce control message timeout to 500 ms\n  (git-fixes).\n- wifi: rtw89: pci: enlarge retry times of RX tag to 1000\n  (git-fixes).\n- wifi: rtlwifi: disable ASPM for RTL8723BE with subsystem ID\n  11ad:1723 (git-fixes).\n- wifi: rtw88: do not ignore hardware read error during DPK\n  (git-fixes).\n- wifi: rtw88: sdio: call rtw_sdio_indicate_tx_status\n  unconditionally (git-fixes).\n- wifi: rtw88: sdio: map mgmt frames to queue TX_DESC_QSEL_MGMT\n  (git-fixes).\n- wifi: iwlfiwi: mvm: Fix the rate reporting (git-fixes).\n- wifi: ath12k: fix node corruption in ar-\u0026gt;arvifs list\n  (git-fixes).\n- wifi: ath12k: Fix the QoS control field offset to build QoS\n  header (git-fixes).\n- commit 3f5d0e4\n\n- wifi: mt76: only mark tx-status-failed frames as ACKed on\n  mt76x0/2 (stable-fixes).\n- commit 0de0b80\n\n- wifi: ath12k: Add MSDU length validation for TKIP MIC error\n  (git-fixes).\n- wifi: ath12k: fix invalid access to memory (git-fixes).\n- wifi: ath12k: Fix WMI tag for EHT rate in peer assoc\n  (git-fixes).\n- wifi: ath12k: fix cleanup path after mhi init (git-fixes).\n- wifi: ath12k: Fix invalid memory access while forming 802.11\n  header (git-fixes).\n- wifi: ath12k: Fix memory leak during vdev_id mismatch\n  (git-fixes).\n- wifi: ath11k: fix node corruption in ar-\u0026gt;arvifs list\n  (git-fixes).\n- watchdog: exar: Shorten identity name to fit correctly\n  (git-fixes).\n- wifi: iwlwifi: add support for Killer on MTL (stable-fixes).\n- wifi: mt76: mt7996: revise TXS size (stable-fixes).\n- wifi: rtw88: Fix rtw_init_vht_cap() for RTL8814AU\n  (stable-fixes).\n- wifi: rtw88: Fix rtw_init_ht_cap() for RTL8814AU (stable-fixes).\n- wifi: rtw88: Fix rtw_desc_to_mcsrate() to handle MCS16-31\n  (stable-fixes).\n- wifi: rtw89: fw: propagate error code from rtw89_h2c_tx()\n  (stable-fixes).\n- wifi: iwlwifi: fix debug actions order (stable-fixes).\n- wifi: ath12k: Report proper tx completion status to mac80211\n  (stable-fixes).\n- wifi: ath12k: Improve BSS discovery with hidden SSID in 6 GHz\n  band (stable-fixes).\n- wifi: ath12k: Avoid napi_sync() before napi_enable()\n  (stable-fixes).\n- wifi: ath12k: fix ath12k_hal_tx_cmd_ext_desc_setup() info1\n  override (stable-fixes).\n- wifi: ath9k: return by of_get_mac_address (stable-fixes).\n- wifi: ath12k: Fix end offset bit definition in monitor ring\n  descriptor (stable-fixes).\n- wifi: rtw88: Fix download_firmware_validate() for RTL8814AU\n  (stable-fixes).\n- wifi: rtw88: Fix __rtw_download_firmware() for RTL8814AU\n  (stable-fixes).\n- wifi: rtw88: Don't use static local variable in\n  rtw8822b_set_tx_power_index_by_rate (stable-fixes).\n- wifi: rtw89: add wiphy_lock() to work that isn't held\n  wiphy_lock() yet (stable-fixes).\n- wifi: mac80211: don't unconditionally call drv_mgd_complete_tx()\n  (stable-fixes).\n- wifi: mac80211: remove misplaced drv_mgd_complete_tx() call\n  (stable-fixes).\n- commit 9963350\n\n- vgacon: Add check for vc_origin address range in vgacon_scroll()\n  (git-fixes).\n- soc: aspeed: Add NULL check in aspeed_lpc_enable_snoop()\n  (git-fixes).\n- soc: aspeed: lpc: Fix impossible judgment condition (git-fixes).\n- spi: sh-msiof: Fix maximum DMA transfer size (git-fixes).\n- spi: tegra210-quad: modify chip select (CS) deactivation\n  (git-fixes).\n- spi: tegra210-quad: remove redundant error handling code\n  (git-fixes).\n- spi: tegra210-quad: Fix X1_X2_X4 encoding and support x4\n  transfers (git-fixes).\n- spi: spi-sun4i: fix early activation (stable-fixes).\n- spi-rockchip: Fix register out of bounds access (stable-fixes).\n- thunderbolt: Do not add non-active NVM if NVM upgrade is\n  disabled for retimer (stable-fixes).\n- usb: xhci: Don't change the status of stalled TDs on failed\n  Stop EP (stable-fixes).\n- serial: sh-sci: Save and restore more registers (git-fixes).\n- serial: sh-sci: Update the suspend/resume support\n  (stable-fixes).\n- thermal/drivers/qoriq: Power down TMU on system suspend\n  (stable-fixes).\n- soundwire: amd: change the soundwire wake enable/disable\n  sequence (stable-fixes).\n- soc: ti: k3-socinfo: Do not use syscon helper to build regmap\n  (stable-fixes).\n- spi: zynqmp-gqspi: Always acknowledge interrupts (stable-fixes).\n- commit 38d0a8f\n\n- PM: sleep: Print PM debug messages during hibernation\n  (git-fixes).\n- commit 96179c7\n\n- PCI: dw-rockchip: Fix PHY function call sequence in\n  rockchip_pcie_phy_deinit() (git-fixes).\n- PCI: cadence: Fix runtime atomic count underflow (git-fixes).\n- PCI: apple: Use gpiod_set_value_cansleep in probe flow\n  (git-fixes).\n- PCI: cadence-ep: Correct PBA offset in .set_msix() callback\n  (git-fixes).\n- PCI: Fix lock symmetry in pci_slot_unlock() (git-fixes).\n- PCI: Explicitly put devices into D0 when initializing\n  (git-fixes).\n- PCI/DPC: Initialize aer_err_info before using it (git-fixes).\n- selftests/mm: restore default nr_hugepages value during cleanup\n  in hugetlb_reparenting_test.sh (git-fixes).\n- pinctrl: armada-37xx: set GPIO output value before setting\n  direction (git-fixes).\n- pinctrl: armada-37xx: use correct OUTPUT_VAL register for\n  GPIOs \u0026gt; 31 (git-fixes).\n- pinctrl: at91: Fix possible out-of-boundary access (git-fixes).\n- selftests/bpf: Fix bpf_nf selftest failure (git-fixes).\n- selftests/seccomp: fix syscall_restart test for arm compat\n  (git-fixes).\n- PM: wakeup: Delete space in the end of string shown by\n  pm_show_wakelocks() (git-fixes).\n- power: reset: at91-reset: Optimize at91_reset() (git-fixes).\n- regulator: max20086: Change enable gpio to optional (git-fixes).\n- regulator: max20086: Fix MAX200086 chip id (git-fixes).\n- platform/x86: thinkpad_acpi: Ignore battery threshold change\n  event notification (stable-fixes).\n- platform/x86: fujitsu-laptop: Support Lifebook S2110 hotkeys\n  (stable-fixes).\n- phy: renesas: rcar-gen3-usb2: Assert PLL reset on PHY power off\n  (git-fixes).\n- phy: renesas: rcar-gen3-usb2: Lock around hardware registers\n  and driver data (git-fixes).\n- phy: renesas: rcar-gen3-usb2: Move IRQ request in probe\n  (stable-fixes).\n- platform/x86: thinkpad_acpi: Support also NEC Lavie X1475JAS\n  (stable-fixes).\n- pinctrl: meson: define the pull up/down resistor value as 60\n  kOhm (stable-fixes).\n- rtc: rv3032: fix EERD location (stable-fixes).\n- rtc: ds1307: stop disabling alarms on probe (stable-fixes).\n- phy: core: don't require set_mode() callback for phy_get_mode()\n  to work (stable-fixes).\n- pinctrl: tegra: Fix off by one in tegra_pinctrl_get_group()\n  (git-fixes).\n- pinctrl-tegra: Restore SFSEL bit when freeing pins\n  (stable-fixes).\n- pinctrl: bcm281xx: Use \u0026quot;unsigned int\u0026quot; instead of bare \u0026quot;unsigned\u0026quot;\n  (stable-fixes).\n- pinctrl: devicetree: do not goto err when probing hogs in\n  pinctrl_dt_to_map (stable-fixes).\n- PCI: dwc: ep: Ensure proper iteration over outbound map windows\n  (stable-fixes).\n- PCI: brcmstb: Expand inbound window size up to 64GB\n  (stable-fixes).\n- PCI: brcmstb: Add a softdep to MIP MSI-X driver (stable-fixes).\n- PCI: Fix old_size lower bound in calculate_iosize() too\n  (stable-fixes).\n- selftests/net: have `gro.sh -t` return a correct exit code\n  (stable-fixes).\n- regulator: ad5398: Add device tree support (stable-fixes).\n- PCI: vmd: Disable MSI remapping bypass under Xen (stable-fixes).\n- phy: renesas: rcar-gen3-usb2: Add support to initialize the bus\n  (stable-fixes).\n- commit 32a9142\n\n- tcp_metrics: optimize tcp_metrics_flush_all() (git-fixes).\n- commit 2a9c7bb\n\n- mtd: rawnand: sunxi: Add randomizer configuration in\n  sunxi_nfc_hw_ecc_write_chunk (git-fixes).\n- mtd: nand: sunxi: Add randomizer configuration before randomizer\n  enable (git-fixes).\n- mtd: nand: ecc-mxic: Fix use of uninitialized variable ret\n  (git-fixes).\n- net: phy: mscc: Stop clearing the the UDPv4 checksum for L2\n  frames (git-fixes).\n- net: phy: mscc: Fix memory leak when using one step timestamping\n  (git-fixes).\n- net: phy: clear phydev-\u0026gt;devlink when the link is deleted\n  (git-fixes).\n- net: phy: fix up const issues in to_mdio_device() and\n  to_phy_device() (git-fixes).\n- net: usb: aqc111: fix error handling of usbnet read calls\n  (git-fixes).\n- mmc: host: Wait for Vdd to settle on card power off\n  (stable-fixes).\n- mmc: dw_mmc: add exynos7870 DW MMC support (stable-fixes).\n- commit eedda90\n\n- mfd: stmpe-spi: Correct the name used in MODULE_DEVICE_TABLE\n  (git-fixes).\n- mfd: exynos-lpass: Avoid calling exynos_lpass_disable() twice\n  in exynos_lpass_remove() (git-fixes).\n- media: uvcvideo: Fix deferred probing error (git-fixes).\n- media: uvcvideo: Return the number of processed controls\n  (git-fixes).\n- media: omap3isp: use sgtable-based scatterlist wrappers\n  (git-fixes).\n- media: videobuf2: use sgtable-based scatterlist wrappers\n  (git-fixes).\n- media: v4l2-dev: fix error handling in __video_register_device()\n  (git-fixes).\n- media: ov8856: suppress probe deferral errors (git-fixes).\n- media: ov5675: suppress probe deferral errors (git-fixes).\n- media: nxp: imx8-isi: better handle the m2m usage_count\n  (git-fixes).\n- media: gspca: Add error handling for stv06xx_read_sensor()\n  (git-fixes).\n- media: davinci: vpif: Fix memory leak in probe error path\n  (git-fixes).\n- media: vivid: Change the siize of the composing (git-fixes).\n- media: cxusb: no longer judge rbuf when the write fails\n  (git-fixes).\n- media: vidtv: Terminating the subsequent process of\n  initialization failure (git-fixes).\n- media: ccs-pll: Correct the upper limit of maximum\n  op_pre_pll_clk_div (git-fixes).\n- media: ccs-pll: Check for too high VT PLL multiplier in dual\n  PLL case (git-fixes).\n- media: ccs-pll: Start VT pre-PLL multiplier search from correct\n  value (git-fixes).\n- media: ccs-pll: Start OP pre-PLL multiplier search from correct\n  value (git-fixes).\n- media: imx-jpeg: Cleanup after an allocation error (git-fixes).\n- media: imx-jpeg: Reset slot data pointers when freed\n  (git-fixes).\n- media: imx-jpeg: Move mxc_jpeg_free_slot_data() ahead\n  (git-fixes).\n- media: imx-jpeg: Drop the first error frames (git-fixes).\n- media: venus: Fix probe error handling (git-fixes).\n- media: rkvdec: Fix frame size enumeration (git-fixes).\n- mfd: tps65219: Remove TPS65219_REG_TI_DEV_ID check\n  (stable-fixes).\n- media: c8sectpfe: Call of_node_put(i2c_bus) only once in\n  c8sectpfe_probe() (stable-fixes).\n- media: cx231xx: set device_caps for 417 (stable-fixes).\n- media: uvcvideo: Add sanity check to uvc_ioctl_xu_ctrl_map\n  (stable-fixes).\n- media: uvcvideo: Handle uvc menu translation inside\n  uvc_get_le_value (stable-fixes).\n- media: adv7180: Disable test-pattern control on adv7180\n  (stable-fixes).\n- media: tc358746: improve calculation of the D-PHY timing\n  registers (stable-fixes).\n- media: test-drivers: vivid: don't call schedule in loop\n  (stable-fixes).\n- media: i2c: imx219: Correct the minimum vblanking value\n  (stable-fixes).\n- media: v4l: Memset argument to 0 before calling get_mbus_config\n  pad op (stable-fixes).\n- media: qcom: camss: csid: Only add TPG v4l2 ctrl if TPG hardware\n  is available (stable-fixes).\n- mmc: sdhci: Disable SD card clock before changing parameters\n  (stable-fixes).\n- commit de6c9a2\n\n- Input: gpio-keys - fix possible concurrent access in\n  gpio_keys_irq_timer() (git-fixes).\n- commit e29f865\n\n- hwmon: (asus-ec-sensors) check sensor index in read_string()\n  (git-fixes).\n- Input: ims-pcu - check record size in ims_pcu_flash_firmware()\n  (git-fixes).\n- firmware: psci: Fix refcount leak in psci_dt_init (git-fixes).\n- gpiolib: Revert \u0026quot;Don't WARN on gpiod_put() for optional GPIO\u0026quot;\n  (stable-fixes).\n- Input: xpad - add more controllers (stable-fixes).\n- gpio: pca953x: fix IRQ storm on system wake up (git-fixes).\n- HID: quirks: Add ADATA XPG alpha wireless mouse support\n  (stable-fixes).\n- intel_th: avoid using deprecated page-\u0026gt;mapping, index fields\n  (stable-fixes).\n- ima: process_measurement() needlessly takes inode_lock()\n  on MAY_READ (stable-fixes).\n- i3c: master: svc: Fix implicit fallthrough in\n  svc_i3c_master_ibi_work() (git-fixes).\n- i3c: master: svc: Fix missing STOP for master request\n  (stable-fixes).\n- i3c: master: svc: Flush FIFO before sending Dynamic Address\n  Assignment(DAA) (stable-fixes).\n- i2c: qup: Vote for interconnect bandwidth to DRAM\n  (stable-fixes).\n- i2c: pxa: fix call balance of i2c-\u0026gt;clk handling routines\n  (stable-fixes).\n- fpga: altera-cvp: Increase credit timeout (stable-fixes).\n- mailbox: use error ret code of of_parse_phandle_with_args()\n  (stable-fixes).\n- leds: pwm-multicolor: Add check for fwnode_property_read_u32\n  (stable-fixes).\n- firmware: arm_ffa: Set dma_mask for ffa devices (stable-fixes).\n- firmware: arm_ffa: Reject higher major version as incompatible\n  (stable-fixes).\n- ieee802154: ca8210: Use proper setters and getters for bitwise\n  types (stable-fixes).\n- HID: usbkbd: Fix the bit shift number for LED_KANA\n  (stable-fixes).\n- hwmon: (dell-smm) Increment the number of fans (stable-fixes).\n- hwmon: (gpio-fan) Add missing mutex locks (stable-fixes).\n- hwmon: (xgene-hwmon) use appropriate type for the latency value\n  (stable-fixes).\n- gpio: pca953x: Simplify code with cleanup helpers\n  (stable-fixes).\n- gpio: pca953x: Split pca953x_restore_context() and\n  pca953x_save_context() (stable-fixes).\n- commit 50f84af\n\n- fbdev: Fix fb_set_var to prevent null-ptr-deref in\n  fb_videomode_to_var (git-fixes).\n- fbdev: Fix do_register_framebuffer to prevent null-ptr-deref\n  in fb_videomode_to_var (git-fixes).\n- fbdev: core: fbcvt: avoid division by 0 in fb_cvt_hperiod()\n  (git-fixes).\n- drm/msm/gpu: Fix crash when throttling GPU immediately during\n  boot (git-fixes).\n- drm/mediatek: mtk_drm_drv: Unbind secondary mmsys components\n  on err (git-fixes).\n- drm/mediatek: Fix kobject put for component sub-drivers\n  (git-fixes).\n- drm/mediatek: mtk_drm_drv: Fix kobject put for mtk_mutex device\n  ptr (git-fixes).\n- Revert \u0026quot;drm/amdgpu: don't allow userspace to create a doorbell\n  BO\u0026quot; (stable-fixes).\n- drm/amd/pp: Fix potential NULL pointer dereference in\n  atomctrl_initialize_mc_reg_table (git-fixes).\n- drm/tegra: Fix a possible null pointer dereference (git-fixes).\n- drm/tegra: rgb: Fix the unbound reference count (git-fixes).\n- drm/tegra: Assign plane type before registration (git-fixes).\n- drm/vkms: Adjust vkms_state-\u0026gt;active_planes allocation type\n  (git-fixes).\n- drm: rcar-du: Fix memory leak in rcar_du_vsps_init()\n  (git-fixes).\n- drm/bridge: lt9611uxc: Fix an error handling path in\n  lt9611uxc_probe() (git-fixes).\n- drm/panel: samsung-sofef00: Drop s6e3fc2x01 support (git-fixes).\n- drm/ast: Fix comment on modeset lock (git-fixes).\n- drm/vc4: tests: Use return instead of assert (git-fixes).\n- drm/bridge: cdns-dsi: Wait for Clk and Data Lanes to be ready\n  (git-fixes).\n- drm/bridge: cdns-dsi: Check return value when getting default\n  PHY config (git-fixes).\n- drm/bridge: cdns-dsi: Fix the clock variable for mode_valid()\n  (git-fixes).\n- drm/bridge: cdns-dsi: Fix phy de-init and flag it so\n  (git-fixes).\n- drm/bridge: cdns-dsi: Fix connecting to next bridge (git-fixes).\n- drm/udl: Unregister device before cleaning up on disconnect\n  (git-fixes).\n- drm/vmwgfx: Add seqno waiter for sync_files (git-fixes).\n- Documentation/rtla: Fix typo in common_timerlat_description.rst\n  (git-fixes).\n- Documentation/rtla: Fix typo in rtla-timerlat.rst (git-fixes).\n- drm/amd/display: fix link_set_dpms_off multi-display MST corner\n  case (stable-fixes).\n- drm/amd/display: Guard against setting dispclk low for dcn31x\n  (stable-fixes).\n- drm/amdgpu: Update SRIOV video codec caps (stable-fixes).\n- drm/amd/display: remove minimum Dispclk and apply oem panel\n  timing (stable-fixes).\n- drm/amd/display: Fix incorrect DPCD configs while Replay/PSR\n  switch (stable-fixes).\n- drm/mediatek: mtk_dpi: Add checks for reg_h_fre_con existence\n  (stable-fixes).\n- drm/amdkfd: Set per-process flags only once cik/vi\n  (stable-fixes).\n- drm/amdgpu: Do not program AGP BAR regs under SRIOV in\n  gfxhub_v1_0.c (stable-fixes).\n- drm/amd/display: Skip checking FRL_MODE bit for PCON BW\n  determination (stable-fixes).\n- drm/amdkfd: KFD release_work possible circular locking\n  (stable-fixes).\n- drm/rockchip: vop2: Add uv swap for cluster window\n  (stable-fixes).\n- drm/amdgpu: Set snoop bit for SDMA for MI series (stable-fixes).\n- drm/amd/display: Don't try AUX transactions on disconnected link\n  (stable-fixes).\n- drm/amdgpu: reset psp-\u0026gt;cmd to NULL after releasing the buffer\n  (stable-fixes).\n- drm/amd/display: Update CR AUX RD interval interpretation\n  (stable-fixes).\n- drm/amd/display: Initial psr_version with correct setting\n  (stable-fixes).\n- drm/amd/display: Increase block_sequence array size\n  (stable-fixes).\n- drm/amdgpu: enlarge the VBIOS binary size limit (stable-fixes).\n- drm/amd/display/dm: drop hw_support check in\n  amdgpu_dm_i2c_xfer() (stable-fixes).\n- drm/v3d: Add clock handling (stable-fixes).\n- drm/ast: Find VBIOS mode from regular display size\n  (stable-fixes).\n- drm: bridge: adv7511: fill stream capabilities (stable-fixes).\n- drm/atomic: clarify the rules around\n  drm_atomic_state-\u0026gt;allow_modeset (stable-fixes).\n- drm/panel-edp: Add Starry 116KHD024006 (stable-fixes).\n- drm: Add valid clones check (stable-fixes).\n- fbdev: fsl-diu-fb: add missing device_remove_file()\n  (stable-fixes).\n- fbcon: Use correct erase colour for clearing in fbcon\n  (stable-fixes).\n- fbdev: core: tileblit: Implement missing margin clearing for\n  tileblit (stable-fixes).\n- firmware: arm_scmi: Relax duplicate name constraint across\n  protocol ids (stable-fixes).\n- commit 0574d41\n\n- Documentation/rtla: Fix duplicate text about timerlat tracer\n  (git-fixes).\n- crypto: marvell/cesa - Do not chain submitted requests\n  (git-fixes).\n- crypto: sun8i-ce - move fallback ahash_request to the end of\n  the struct (git-fixes).\n- crypto: xts - Only add ecb if it is not already there\n  (git-fixes).\n- crypto: lrw - Only add ecb if it is not already there\n  (git-fixes).\n- crypto: marvell/cesa - Avoid empty transfer descriptor\n  (git-fixes).\n- crypto: marvell/cesa - Handle zero-length skcipher requests\n  (git-fixes).\n- crypto: sun8i-ss - do not use sg_dma_len before calling DMA\n  functions (git-fixes).\n- Documentation: fix typo in root= kernel parameter description\n  (git-fixes).\n- dmaengine: idxd: cdev: Fix uninitialized use of sva in\n  idxd_cdev_open (stable-fixes).\n- commit 8e41cce\n\n- backlight: pm8941: Add NULL check in wled_configure()\n  (git-fixes).\n- bus: fsl-mc: fix GET/SET_TAILDROP command ids (git-fixes).\n- bus: fsl-mc: do not add a device-link for the UAPI used DPMCP\n  device (git-fixes).\n- bus: fsl-mc: fix double-free on mc_dev (git-fixes).\n- Revert \u0026quot;bus: ti-sysc: Probe for l4_wkup and l4_cfg interconnect\n  devices first\u0026quot; (stable-fixes).\n- Bluetooth: MGMT: iterate over mesh commands in\n  mgmt_mesh_foreach() (git-fixes).\n- ASoC: qcom: sdm845: Add error handling in\n  sdm845_slim_snd_hw_params() (git-fixes).\n- ASoC: apple: mca: Constrain channels according to TDM mask\n  (git-fixes).\n- ASoC: SOF: ipc4-pcm: Adjust pipeline_list-\u0026gt;pipelines allocation\n  type (git-fixes).\n- crypto: sun8i-ce-cipher - fix error handling in\n  sun8i_ce_cipher_prepare() (git-fixes).\n- crypto: qat - add shutdown handler to qat_420xx (git-fixes).\n- crypto: qat - add shutdown handler to qat_4xxx (git-fixes).\n- crypto: octeontx2 - suppress auth failure screaming due to\n  negative tests (stable-fixes).\n- crypto: lzo - Fix compression buffer overrun (stable-fixes).\n- crypto: skcipher - Zap type in crypto_alloc_sync_skcipher\n  (stable-fixes).\n- can: c_can: Use of_property_present() to test existence of DT\n  property (stable-fixes).\n- commit 595e083\n\n- ASoC: meson: meson-card-utils: use of_property_present()\n  for DT parsing (git-fixes).\n- ASoC: tas2764: Enable main IRQs (git-fixes).\n- ASoC: tas2764: Reinit cache on part reset (git-fixes).\n- ASoC: Intel: bytcr_rt5640: Add DMI quirk for Acer Aspire SW3-013\n  (stable-fixes).\n- ASoC: imx-card: Adjust over allocation of memory in\n  imx_card_parse_of() (stable-fixes).\n- ASoC: mediatek: mt6359: Add stub for\n  mt6359_accdet_enable_jack_detect (stable-fixes).\n- ASoC: sun4i-codec: support hp-det-gpios property (stable-fixes).\n- ASoC: qcom: sm8250: explicitly set format in\n  sm8250_be_hw_params_fixup() (stable-fixes).\n- ASoC: mediatek: mt8188: Treat DMIC_GAINx_CUR as non-volatile\n  (stable-fixes).\n- ASoC: mediatek: mt8188: Add reference for dmic clocks\n  (stable-fixes).\n- commit 255f2cb\n\n- ALSA: hda/realtek: Add quirk for Lenovo Yoga Pro 7 14ASP10\n  (stable-fixes).\n- ALSA: pcm: Fix race of buffer access at PCM OSS layer\n  (stable-fixes).\n- ALSA: hda/realtek: Add quirk for HP Spectre x360 15-df1xxx\n  (stable-fixes).\n- ASoC: soc-dai: check return value at snd_soc_dai_set_tdm_slot()\n  (stable-fixes).\n- ASoC: tas2764: Add reg defaults for TAS2764_INT_CLK_CFG\n  (stable-fixes).\n- ASoC: tas2764: Mark SW_RESET as volatile (stable-fixes).\n- ASoC: tas2764: Power up/down amp on mute ops (stable-fixes).\n- ASoC: ops: Enforce platform maximum on initial value\n  (stable-fixes).\n- ASoC: codecs: pcm3168a: Allow for 24-bit in provider mode\n  (stable-fixes).\n- ASoC: rt722-sdca: Add some missing readable registers\n  (stable-fixes).\n- commit ab5fcf6\n\n- kABI workaround for hda_codec.beep_just_power_on flag\n  (git-fixes).\n- commit 11aaa35\n\n- acpi-cpufreq: Fix nominal_freq units to KHz in\n  get_max_boost_ratio() (git-fixes).\n- ACPICA: Utilities: Fix spelling mistake \u0026quot;Incremement\u0026quot; -\u0026gt;\n  \u0026quot;Increment\u0026quot; (git-fixes).\n- ACPICA: exserial: don't forget to handle FFixedHW opregions\n  for reading (git-fixes).\n- ACPI: OSI: Stop advertising support for \u0026quot;3.0 _SCP Extensions\u0026quot;\n  (git-fixes).\n- ACPI: PNP: Add Intel OC Watchdog IDs to non-PNP device list\n  (stable-fixes).\n- accel/qaic: Mask out SR-IOV PCI resources (stable-fixes).\n- ALSA: seq: Improve data consistency at polling (stable-fixes).\n- ALSA: hda/realtek: Enable PC beep passthrough for HP EliteBook\n  855 G7 (stable-fixes).\n- ACPI: HED: Always initialize before evged (stable-fixes).\n- commit 6ebe577\n\n- net: ethernet: mtk-star-emac: fix spinlock recursion issues\n  on rx/tx poll (CVE-2025-37917 bsc#1243475).\n- commit 0f659f2\n\n- usb: typec: ucsi: limit the UCSI_NO_PARTNER_PDOS even further\n  (git-fixes).\n- commit bae0091\n\n- usb: typec: ucsi: allow non-partner GET_PDOS for Qualcomm\n  devices (git-fixes).\n- commit a0506dd\n\n- usb: typec: ucsi: Only enable supported notifications\n  (git-fixes).\n- commit 3a52706\n\n- usb: typec: ucsi: fix UCSI on buggy Qualcomm devices\n  (git-fixes).\n- commit 5ca6578\n\n- platform/x86: fujitsu-laptop: Support Lifebook S2110 hotkeys\n  (git-fixes).\n- commit 1564858\n\n- platform/x86: thinkpad_acpi: Support also NEC Lavie X1475JAS\n  (git-fixes).\n- commit 2bfd2a7\n\n- pstore: Change kmsg_bytes storage size to u32 (git-fixes).\n- commit c964f36\n\n- orangefs: Do not truncate file size (git-fixes).\n- commit 9fbe3ae\n\n- NFSv4: Check for delegation validity in\n  nfs_start_delegation_return_locked() (git-fixes).\n- commit a689f10\n\n- NFS: Don't allow waiting for exiting tasks (git-fixes).\n- Refresh\n  patches.suse/nfs-add-missing-selections-of-CONFIG_CRC32.patch.\n- commit 899f47c\n\n- SUNRPC: Don't allow waiting for exiting tasks (git-fixes).\n- commit 8b942ca\n\n- NFSv4: Treat ENETUNREACH errors as fatal for state recovery\n  (git-fixes).\n- commit 9139fd5\n\n- SUNRPC: rpc_clnt_set_transport() must not change the autobind\n  setting (git-fixes).\n- commit e2112a4\n\n- SUNRPC: rpcbind should never reset the port to the value '0'\n  (git-fixes).\n- commit f49c9db\n\n- pNFS/flexfiles: Report ENETDOWN as a connection error\n  (git-fixes).\n- commit 39e7a29\n\n- iommu: Protect against overflow in iommu_pgsize() (git-fixes).\n- commit 6adbec5\n\n- ext4: define ext4_journal_destroy wrapper (CVE-2025-22113\n  bsc#1241617).\n- commit 8dddf47\n\n- ext4: ignore xattrs past end (bsc#1242846 CVE-2025-37738).\n- commit 2a74454\n\n- ext4: avoid journaling sb update on error if journal is\n  destroying (bsc#1241617 CVE-2025-22113).\n- commit 0445179\n\n- net/smc: check v2_ext_offset/eid_cnt/ism_gid_cnt when receiving\n  proposal msg (CVE-2024-49568 bsc#1235728).\n- commit a7c2f15\n\n- i2c: tegra: check msg length in SMBUS block read (bsc#1242086)\n- commit 625407a\n\n- iio: light: opt3001: fix deadlock due to concurrent flag access (CVE-2025-37968 bsc#1243571)\n- commit 0e5e655\n\n- perf/x86/intel: KVM: Mask PEBS_ENABLE loaded for guest with vCPU's value (CVE-2025-37936 bsc#1243537)\n- commit 2e13950\n\n- net: phy: allow MDIO bus PM ops to start/stop state machine for phylink-controlled PHY (CVE-2025-37945 bsc#1243538)\n- commit efc17f3\n\n- pds_core: Prevent possible adminq overflow/stuck condition (CVE-2025-37987 bsc#1243542)\n- commit ba1ea39\n\n- SUNRPC: Prevent hang on NFS mount with xprtsec=[m]tls\n  (git-fixes).\n- commit dc6e86f\n\n- Refresh\n  patches.suse/nfs-ignore-SB_RDONLY-when-remounting-nfs.patch.\n- commit 359f356\n\n- Refresh\n  patches.suse/nfs-clear-SB_RDONLY-before-getting-superblock.patch.\n- commit 2697e51\n\n- fs/nfs/read: fix double-unlock bug in nfs_return_empty_folio()\n  (git-fixes).\n- commit fcf1703\n\n- powerpc/pseries/msi: Avoid reading PCI device registers in\n  reduced power states (bsc#1215199).\n- KVM: powerpc: Enable commented out BUILD_BUG_ON() assertion\n  (bsc#1215199).\n- commit 2d2709b\n\n- Update patches.suse/nfsd-Fix-race-to-FREE_STATEID-and-cl_revoked.patch\n  (bsc#1012628 CVE-2024-50106 bsc#1232882).\n- commit a87a308\n\n- net: ngbe: fix memory leak in ngbe_probe() error path (CVE-2025-37874 bsc#1242940)\n- commit bc2e64d\n\nPackage libbpf was updated:\n\n- Workaround kernel module size increase due to BTF deduplication  issue since the introduction of TYPEOF_UNQUAL (poo#183503 bsc#1244135)\n  * add 0001-libbpf-Add-identical-pointer-detection-to-btf_dedup_.patch\n\nPackage gcc14 was updated:\n\n- Exclude shared objects present for link editing in the GCC specific  subdirectory from provides processing via __provides_exclude_from.\n  [bsc#1244050][bsc#1243991]\n\n- Make cross-*-gcc14-bootstrap package conflict with the non-bootstrap\n  variant conflict with the unversioned cross-*-gcc package.\n\n- Disable build of glibc cross to loongarch64 and hppa in SLFO\n  and SLE15.\n\n- Update to GCC 14.3 release, bb24b4c804f3d95b0ba95b7496, git11799\n- Remove gcc14-pr120061.patch which is now included upstream.\n\n- Add gcc14-pr120061.patch to fix the PR108900 fix instead of\n  reverting it.\n- Remove gcc14-pr108900.patch\n\n- Add gcc14-pr108900.patch to revert it, fixing libqt6webengine build.\n\n- Update to gcc-14 branch head, 3418d740b344e0ba38022f3be, git11702\n  * Remove gcc14-pr118780.patch now on the upstream branch\n- Fix build on s390x [bsc#1241549]\n\n- Make sure link editing is done against our own shared library\n  copy rather than the installed system runtime.  [bsc#1240788]\n- Add gcc14-pr119680.patch to fix cross-compiler builds with\n  - -enable-host-pie.\n\nPackage libgcrypt was updated:\n\n- Security fix [bsc#1221107, CVE-2024-2236]  * Add --enable-marvin-workaround to spec to enable workaround\n  * Fix  timing based side-channel in RSA implementation ( Marvin attack )\n  * Add libgcrypt-CVE-2024-2236_01.patch\n  * Add libgcrypt-CVE-2024-2236_02.patch\n\nPackage gnutls was updated:\n\n- Fix heap buffer overread when handling the CT SCT extension during X.509  certificate parsing [bsc#1246233, CVE-2025-32989]\n  * Add patch gnutls-CVE-2025-32989.patch\n- Fix double-free due to incorrect ownership handling in the export logic of\n  SAN entries containing an otherName [bsc#1246232, CVE-2025-32988]\n  * Add patch gnutls-CVE-2025-32988.patch\n- Fix 1-byte heap buffer overflow when parsing templates with certtool\n  [bsc#1246267, CVE-2025-32990]\n  * Add patch gnutls-CVE-2025-32990.patch\n- Fix NULL pointer dereference when 2nd Client Hello omits PSK\n  [bsc#1246299, CVE-2025-6395]\n  * Add patch gnutls-CVE-2025-6395.patch\n\nPackage icu was updated:\n\n- Add icu-CVE-2025-5222.patch:  Backport 2c667e3 from upstream, ICU-22973 Fix buffer overflow by\n  using CharString.\n  (CVE-2025-5222, bsc#1243721)\n\nPackage nfs-utils was updated:\n\n- gssd: add support for an \u0026quot;allowed-enctypes\u0026quot; option in nfs.conf  (bsc#1240899)\n  - add 0008-gssd-add-support-for-an-allowed-enctypes-option-in-n.patch\n\nPackage libnvme was updated:\n\n- Update to version 1.8+84.g73e0811d:  * tree: do not try to strdup NULL pointer (bsc#1247225)\n  * tree: always set the host key (bsc#1246560)\n\n- Update to version 1.8+82.g9a64f8f4:\n  * tree: free ctrl attributes when (re)configure ctrl (bsc#1243716)\n  * tree: filter tree after scan has completed (bsc#1243716)\n  * sysfs: minimize heap allocations of sysfs paths\n\nPackage openssl-1_1 was updated:\n\n- FIPS: Use the NID_X9_62_prime256v1 curve in ECDSA KAT test  instead of NID_secp256k1. [bsc#1246697]\n  * Add openssl-fips-ECDSA-KAT.patch\n\nPackage openssl-3 was updated:\n\n- Increase limit for CRL download [bsc#1247148, bsc#1247144]  * Add openssl-3-large-CRLs.patch\n\n- Backport mdless cms signing support [jsc#PED-12895]\n  * Add openssl-3-support-mdless-cms.patch\n\nPackage polkit was updated:\n\n- CVE-2025-7519: Fixed that a XML policy file with a large number of  nested elements may lead to out-of-bounds write (bsc#1246472)\n  added 0001-Nested-.policy-files-cause-xml-parsing-overflow-lead.patch\n\nPackage python3 was updated:\n\n- Add CVE-2025-8194-tarfile-no-neg-offsets.patch which now  validates archives to ensure member offsets are non-negative\n  (gh#python/cpython#130577, CVE-2025-8194, bsc#1247249).\n\n- Add CVE-2025-4435-normalize-lnk-trgts-tarfile.patch\n  Security fixes for CVE-2025-4517, CVE-2025-4330, CVE-2025-4138,\n  CVE-2024-12718, CVE-2025-4435 on tarfile (bsc#1244032,\n  bsc#1244061, bsc#1244059, bsc#1244060, bsc#1244056).\n  The backported fixes do not contain changes for ntpath.py and\n  related tests, because the support for symlinks and junctions\n  were added later in Python 3.9, and it does not make sense to\n  backport them to 3.6 here.\n  The patch is contains the following changes:\n  - python@42deeab fixes symlink handling for tarfile.data_filter\n  - python@9d2c2a8 fixes handling of existing files/symlinks in tarfile\n  - python@00af979 adds a new \u0026quot;strict\u0026quot; argument to realpath()\n  - python@dd8f187 fixes mulriple CVE fixes in the tarfile module\n  - downstream only fixes that makes the changes work and\n    compatible with Python 3.6\n- Add CVE-2025-6069-quad-complex-HTMLParser.patch to avoid worst\n  case quadratic complexity when processing certain crafted\n  malformed inputs with HTMLParser (CVE-2025-6069, bsc#1244705).\n\n- Add python36-* provides/obsoletes to enable SLE-12 -\u0026gt; SLE-15\n  migration, bsc#1233012\n\n- Add ipaddress-update-pr60.patch from gh#phihag/ipaddress!60 to\n  update vendored ipaddress module to 3.8 equivalent\n- Add gh-128840_parse-IPv6-with-emb-IPv4.patch to limit buffer\n  size for IPv6 address parsing (gh#python/cpython#128840,\n  bsc#1244401).\n- Update CVE-2025-4516-DecodeError-handler.patch not to break\n  _PyBytes_DecodeEscape signature.\n\n- Add CVE-2025-4516-DecodeError-handler.patch fixing\n  CVE-2025-4516 (bsc#1243273) blocking DecodeError handling\n  vulnerability, which could lead to DoS.\n\nPackage ruby2.5 was updated:\n\n- update suse.patch to 3f3682bf07fcd4f2fa875958853d3843ee7dcdb9  - fix remote DoS via YAML manifest\n    bsc#1225905 CVE-2024-35221\n\n- update suse.patch to c76fb820676cfded16c697a62281a3bfeb8e4bb1\n  - fix webrick: Ruby WEBrick read_header HTTP Request Smuggling Vulnerability\n    bsc#1245254 CVE-2025-6442\n\n- update suse.patch to 5d79fc609c5761864aec47e1ae4796b93db99104\n  - fix ruby: userinfo leakage in URI#join, URI#merge and URI#+\n    bsc#1237805 CVE-2025-27221\n\nPackage libsolv was updated:\n\n- add support for product-obsoletes() provides in the product  autopackage generation code\n- bump version to 0.7.34\n\n- improve transaction ordering by allowing more uninst-\u0026gt;uninst\n  edges [bsc#1243457]\n- implement color filtering when adding update targets\n- support orderwithrequires dependencies in susedata.xml\n- bump version to 0.7.33\n\nPackage sqlite3 was updated:\n\n- Backpatch the URLs in sqlite3.n from https to http to avoid a  file conflict with the tcl package on SLE-15-GA up to SP2. In\n  SP3 and onwards the Tcl package does not contain the sqlite\n  extension anymore.\n\n- Sync version 3.50.2 from Factory:\n  * CVE-2025-6965, bsc#1246597:\n    Raise an error early if the number of aggregate terms in a\n    query exceeds the maximum number of columns, to avoid\n    downstream assertion faults.\n  * Add subpackage for the lemon parser generator.\n    + sqlite-3.49.0-fix-lemon-missing-cflags.patch\n    + sqlite-3.6.23-lemon-system-template.patch\n\nPackage libssh was updated:\n\n- Fix CVE-2025-5318: Likely read beyond bounds in sftp server handle management (bsc#1245311)  * Add patch libssh-CVE-2025-5318.patch\n- Fix CVE-2025-4877: Write beyond bounds in binary to base64 conversion functions (bsc#1245309)\n  * Add patch libssh-CVE-2025-4877.patch\n- Fix CVE-2025-4878: Use of uninitialized variable in privatekey_from_file() (bsc#1245310)\n  * Add patches:\n  - libssh-CVE-2025-4878-1.patch\n  - libssh-CVE-2025-4878-2.patch\n- Fix CVE-2025-5372: ssh_kdf() returns a success code on certain failures (bsc#1245314)\n  * Add patch libssh-CVE-2025-5372.patch\n\nPackage systemd was updated:\n\n- triggers.systemd: skip update of hwdb, journal-catalog if executed during  an offline update.\n\n- systemd-repart is no more considered as experimental (jsc#PED-13213)\n\n- Import commit 130293e510ceb4d121d11823e6ebd4b1e8332ea0 (merge of v254.27)\n  For a complete list of changes, visit:\n  https://github.com/openSUSE/systemd/compare/278fb676146e35a7b4057f52f34a7bbaf1b82369...130293e510ceb4d121d11823e6ebd4b1e8332ea0\n\n- Import commit 278fb676146e35a7b4057f52f34a7bbaf1b82369\n  aa12f501ae logs-show: get timestamp and boot ID only when necessary (bsc#1242827)\n  e8b17d11bc sd-journal: drop to use Hashmap to manage journal files per boot ID\n  ea80273738 tree-wide: set SD_JOURNAL_ASSUME_IMMUTABLE where appropriate\n  a5b3b5344f sd-journal: introduce SD_JOURNAL_ASSUME_IMMUTABLE flag\n  5fa0600b34 sd-journal: make journal_file_read_tail_timestamp() notify to the caller that some new journal entries added\n  737e8193e7 sd-journal: cache last entry offset and journal file state\n  057dca426f sd-journal: fix typo in function name\n\n- Start the systemd-coredump.socket unit on systemd-coredump package\n  installation.\n- Restore the kernel default values of the coredump sysctl settings on\n  systemd-coredump package removal.\n\n- Import commit e08f49f2432509787abfb7f3fc0b2f2c459def04 (merge of v254.25)\n  This merge includes the following fix:\n    7fc7aa5a4d coredump: use %d in kernel core pattern (bsc#1243935 CVE-2025-4598)\n  For a complete list of changes, visit:\n  https://github.com/openSUSE/systemd/compare/b0ae3b6e85b6a4030cf2adb88519a6ca0ffc1343...e08f49f2432509787abfb7f3fc0b2f2c459def04\n- Drop 1021-Revert-macro-terminate-the-temporary-VA_ARGS_FOREACH.patch\n  The SUSE specific patch has been integrated into the SUSE/v254 git\n  branch. Some of the imported commits from the stable tree rely on the macro\n  now.\n\n- Import commit b0ae3b6e85b6a4030cf2adb88519a6ca0ffc1343\n  41d2be2fb5 Revert \u0026quot;macro: terminate the temporary VA_ARGS_FOREACH() array with a sentinel\u0026quot; (SUSE specific)\n\nPackage libxml2 was updated:\n\n- security update- added patches\n  CVE-2025-7425 [bsc#1246296], Heap Use-After-Free in libxslt caused by atype corruption in xmlAttrPtr\n  + libxml2-CVE-2025-7425.patch\n\n- security update\n- added patches\n  CVE-2025-49794 [bsc#1244554], heap use after free (UAF) can lead to Denial of service (DoS)\n  CVE-2025-49796 [bsc#1244557], type confusion may lead to Denial of service (DoS)\n  + libxml2-CVE-2025-49794,49796.patch\n  CVE-2025-49795 [bsc#1244555], null pointer dereference may lead to Denial of service (DoS)\n  + libxml2-CVE-2025-49795.patch\n\n- security update\n- added patches\n  CVE-2025-6170 [bsc#1244700], stack buffer overflow may lead to a crash\n  CVE-2025-6021 [bsc#1244580], Integer Overflow in xmlBuildQName() Leads to Stack Buffer Overflow in libxml2\n  + libxml2-CVE-2025-6170,6021.patch\n\nPackage libzypp was updated:\n\n- Fix evaluation of libproxy results (bsc#1247690)- Replace URL variables inside mirrorlist/metalink files\n  (fixes #667)\n- version 17.37.16 (35)\n\n- Append RepoInfo::path() to the mirror URLs in Preloader\n  (bsc#1247054)\n- version 17.37.15 (35)\n\n- During installation indicate the backend being used (bsc#1246038)\n  If some package actually needs to know, it should test for\n  ZYPP_CLASSIC_RPMTRANS being set in the environment.\n  Otherwise the transaction is driven by librpm.\n- version 17.37.14 (35)\n\n- Workaround 'rpm -vv' leaving scriptlets /var/tmp (bsc#1218459)\n- Verbose log libproxy results if PX_DEBUG=1 is set.\n- BuildRequires:  cmake \u0026gt;= 3.17.\n- version 17.37.13 (35)\n\n- Allow explicit request to probe an added repo's URL\n  (bsc#1246466)\n- Fix tests with -DISABLE_MEDIABACKEND_TESTS=1 (fixes #661)\n- version 17.37.12 (35)\n\n- Add runtime check for a broken rpm-4.18.0 --runpostrans\n  (bsc#1246149)\n- Add regression test for bsc#1245220 and some other filesize\n  related tests.\n- version 17.37.11 (35)\n\n- BuildRequires: %{libsolv_devel_package} \u0026gt;= 0.7.34 (bsc#1243486)\n  Newer rpm versions no longer allow a ':' in rpm package names or\n  obsoletes. So injecting an\n    Obsoletes: product:oldproductname \u0026lt; oldproductversion\n  into the -release package to indicate a product rename is no longer\n  possible.\n  Since libsolv-0.7.34 you can and should use:\n    Provides: product-obsoletes(oldproductname) \u0026lt; oldproductversion\n  in the -release package. libsolv will then inject the appropriate\n  Obsoletes into the Product.\n- version 17.37.10 (35)\n\n- Ignore DeltaRpm download errors (bsc#1245672)\n  DeltaRpms are in fact optional resources. In case of a failure\n  the full rpm is downloaded.\n- Improve fix for incorrect filesize handling (bsc#1245220)\n- version 17.37.9 (35)\n\n- Do not trigger download data exceeded errors on HTTP non data\n  responses (bsc#1245220)\n  In some cases a HTTP 401 or 407 did trigger a \u0026quot;filesize exceeded\u0026quot;\n  error, because the response payload size was compared against the\n  expected filesize. This patch adds some checks if the response\n  code is in the success range and only then takes expected\n  filesize into account. Otherwise the response content-length is\n  used or a fallback of 2Mb if no content-length is known.\n- version 17.37.8 (35)\n\n- Fix SEGV in MediaDISK handler (bsc#1245452)\n- Explicitly selecting DownloadAsNeeded also selects the\n  classic_rpmtrans backend.\n  DownloadAsNeeded can not be combined with the rpm singletrans\n  installer backend because a rpm transaction requires all package\n  headers to be available the the beginning of the transaction. So\n  explicitly selecting this mode also turns on the classic_rpmtrans\n  backend.\n- Fix evaluation of libproxy results (bsc#1244710)\n- version 17.37.7 (35)\n\n- Enhancements regarding mirror handling during repo refresh.\n  Added  means to disable the use of mirrors when downloading\n  security relevant files. Requires updaing zypper to 1.14.91.\n- Fix autotestcase writer if ZYPP_FULLLOG=1 (bsc#1244042)\n  If ZYPP_FULLLOG=1 a solver testcase to\n  \u0026quot;/var/log/YaST2/autoTestcase\u0026quot; should be written for each solver\n  run. There was no testcase written for the very first solver run.\n  This is now fixed.\n- Pass $1==2 to %posttrans script if it's an update (bsc#1243279)\n- version 17.37.6 (35)\n\n- Fix credential handling in HEAD requests (bsc#1244105)\n- version 17.37.5 (35)\n\n- RepoInfo: use pathNameSetTrailingSlash (fixes #643)\n- Fix wrong userdata parameter type when running zypp with debug\n  verbosity (bsc#1239012)\n- version 17.37.4 (35)\n\n- Do not warn about no mirrors if mirrorlist was switched on\n  automatically. (bsc#1243901)\n- Relax permission of cached packages to 0644 \u0026amp; ~umask\n  (bsc#1243887)\n- version 17.37.3 (35)\n\n- Add a note to service maintained .repo file entries (fixes #638)\n- Support using %{url} variable in a RIS service's repo section.\n- version 17.37.2 (35)\n\n- Use a cookie file to validate mirrorlist cache.\n  This patch extends the mirrorlist code to use a cookie file to\n  validate the contents of the cache against the source URL, making\n  sure that we do not accidentially use a old cache when the\n  mirrorlist url was changed. For example when migrating a system\n  from one release to the next where the same repo alias might just\n  have a different URL.\n- Let Service define and update gpgkey, mirrorlist and metalink.\n- Preserve a mirrorlist file in the raw cache during refresh.\n- version 17.37.1 (35)\n\n- Code16: Enable curl2 backend and parallel package download by\n  default. In Code15 it's optional.\n  Environment variables ZYPP_CURL2=\u0026lt;0|1\u0026gt; and ZYPP_PCK_PRELOAD=\u0026lt;0|1\u0026gt;\n  can be used to turn the features on or off.\n- Make gpgKeyUrl the default source for gpg keys.\n  When refreshing zypp now primarily uses gpgKeyUrl information\n  from the repo files and only falls back to a automatically\n  generated key Url if a gpgKeyUrl was not specified.\n- Introduce mirrors into the Media backends (bsc#1240132)\n- Drop MediaMultiCurl backend.\n- Throttle progress updates when preloading packages (bsc#1239543)\n- Check if request is in valid state in CURL callbacks (fixes\n  openSUSE/zypper#605)\n- spec/CMake: add conditional build\n  '--with[out] classic_rpmtrans_as_default'.\n  classic_rpmtrans is the current builtin default for SUSE,\n  otherwise it's single_rpmtrans.\n  The `enable_preview_single_rpmtrans_as_default_for_zypper` switch\n  was removed from the spec file.  Accordingly the CMake option\n  ENABLE_PREVIEW_SINGLE_RPMTRANS_AS_DEFAULT_FOR_ZYPPER was removed.\n- version 17.37.0 (35)\n\nPackage mozilla-nspr was updated:\n\n- update to version 4.36  * remove support for OS/2\n  * remove support for Unixware, Bsdi, old AIX, old HPUX9 \u0026amp; scoos\n  * remove support for Windows 16 bit\n  * renamed the prwin16.h header to prwin.h\n  * configure was updated from 2.69 to 2.71\n  * various build, test and automation script fixes\n  * major parts of the source code were reformatted\n\nPackage mozilla-nss was updated:\n\n- update to NSS 3.112  * bmo#1963792 - Fix alias for mac workers on try\n  * bmo#1966786 - ensure all options can be configured with SSL_OptionSet and SSL_OptionSetDefault\n  * bmo#1931930 - ABI/API break in ssl certificate processing\n  * bmo#1955971 - remove unnecessary assertion in sec_asn1d_init_state_based_on_template\n  * bmo#1965754 - update taskgraph to v14.2.1\n  * bmo#1964358 - Workflow for automation of the release on GitHub when pushing a tag\n  * bmo#1952860 - fix faulty assertions in SEC_ASN1DecoderUpdate\n  * bmo#1934877 - Renegotiations should use a fresh ECH GREASE buffer\n  * bmo#1951396 - update taskgraph to v14.1.1\n  * bmo#1962503 - Partial fix for ACVP build CI job\n  * bmo#1961827 - Initialize find in sftk_searchDatabase\n  * bmo#1963121 - Add clang-18 to extra builds\n  * bmo#1963044 - Fault tolerant git fetch for fuzzing\n  * bmo#1962556 - Tolerate intermittent failures in ssl_policy_pkix_ocsp\n  * bmo#1962770 - fix compiler warnings when DEBUG_ASN1D_STATES or CMSDEBUG are set\n  * bmo#1961835 - fix content type tag check in NSS_CMSMessage_ContainsCertsOrCrls\n  * bmo#1963102 - Remove Cryptofuzz CI version check\n\n- update to NSS 3.111\n  * bmo#1930806 - FIPS changes need to be upstreamed: force ems policy\n  * bmo#1957685 - Turn off Websites Trust Bit from CAs\n  * bmo#1937338 - Update nssckbi version following April 2025 Batch of Changes\n  * bmo#1943135 - Disable SMIME âtrust bitâ for GoDaddy CAs\n  * bmo#1874383 - Replaced deprecated sprintf function with snprintf in dbtool.c\n  * bmo#1954612 - Need up update NSS for PKCS 3.1\n  * bmo#1773374 - avoid leaking localCert if it is already set in ssl3_FillInCachedSID\n  * bmo#1953097 - Decrease ASAN quarantine size for Cryptofuzz in CI\n  * bmo#1943962 - selfserv: Add support for zlib certificate compression\n\n- update to NSS 3.110\n  * bmo#1930806 - FIPS changes need to be upstreamed: force ems policy\n  * bmo#1954724 - Prevent excess allocations in sslBuffer_Grow\n  * bmo#1953429 - Remove Crl templates from ASN1 fuzz target\n  * bmo#1953429 - Remove CERT_CrlTemplate from ASN1 fuzz target\n  * bmo#1952855 - Fix memory leak in NSS_CMSMessage_IsSigned\n  * bmo#1930807 - NSS policy updates\n  * bmo#1951161 - Improve locking in nssPKIObject_GetInstances\n  * bmo#1951394 - Fix race in sdb_GetMetaData\n  * bmo#1951800 - Fix member access within null pointer\n  * bmo#1950077 - Increase smime fuzzer memory limit\n  * bmo#1949677 - Enable resumption when using custom extensions\n  * bmo#1952568 - change CN of server12 test certificate\n  * bmo#1949118 - Part 2: Add missing check in\n    NSS_CMSDigestContext_FinishSingle\n  * bmo#1949118 - Part 1: Fix smime UBSan errors\n  * bmo#1930806 - FIPS changes need to be upstreamed: updated key checks\n  * bmo#1951491 - Don't build libpkix in static builds\n  * bmo#1951395 - handle `-p all` in try syntax\n  * bmo#1951346 - fix opt-make builds to actually be opt\n  * bmo#1951346 - fix opt-static builds to actually be opt\n  * bmo#1916439 - Remove extraneous assert\n- Removed upstreamed nss-fips-stricter-dh.patch\n- Added bmo1962556.patch to fix test failures\n- Rebased nss-fips-approved-crypto-non-ec.patch nss-fips-combined-hash-sign-dsa-ecdsa.patch\n- update to NSS 3.109\n  * bmo#1939512 - Call BL_Init before RNG_RNGInit() so that special\n    SHA instructions can be used if available\n  * bmo#1930807 - NSS policy updates - fix inaccurate key policy issues\n  * bmo#1945883 - SMIME fuzz target\n  * bmo#1914256 - ASN1 decoder fuzz target\n  * bmo#1936001 - Part 2: Revert âExtract testcases from ssl gtests\n    for fuzzingâ\n  * bmo#1915155 - Add fuzz/README.md\n  * bmo#1936001 - Part 4: Fix tstclnt arguments script\n  * bmo#1944545 - Extend pkcs7 fuzz target\n  * bmo#1912320 - Extend certDN fuzz target\n  * bmo#1944300 - revert changes to HACL* files from bug 1866841\n  * bmo#1936001 - Part 3: Package frida corpus script\n- update to NSS 3.108\n  * bmo#1923285 - libclang-16 -\u0026gt; libclang-19\n  * bmo#1939086 - Turn off Secure Email Trust Bit for Security\n    Communication ECC RootCA1\n  * bmo#1937332 - Turn off Secure Email Trust Bit for BJCA Global Root\n    CA1 and BJCA Global Root CA2\n  * bmo#1915902 - Remove SwissSign Silver CA â G2\n  * bmo#1938245 - Add D-Trust 2023 TLS Roots to NSS\n  * bmo#1942301 - fix fips test failure on windows\n  * bmo#1935925 - change default sensitivity of KEM keys\n  * bmo#1936001 - Part 1: Introduce frida hooks and script\n  * bmo#1942350 - add missing arm_neon.h include to gcm.c\n  * bmo#1831552 - ci: update windows workers to win2022\n  * bmo#1831552 - strip trailing carriage returns in tools tests\n  * bmo#1880256 - work around unix/windows path translation issues\n    in cert test script\n  * bmo#1831552 - ci: let the windows setup script work without $m\n  * bmo#1880255 - detect msys\n  * bmo#1936680 - add a specialized CTR_Update variant for AES-GCM\n  * bmo#1930807 - NSS policy updates\n  * bmo#1930806 - FIPS changes need to be upstreamed: FIPS 140-3 RNG\n  * bmo#1930806 - FIPS changes need to be upstreamed: Add SafeZero\n  * bmo#1930806 - FIPS changes need to be upstreamed - updated POST\n  * bmo#1933031 - Segmentation fault in SECITEM_Hash during pkcs12 processing\n  * bmo#1929922 - Extending NSS with LoadModuleFromFunction functionality\n  * bmo#1935984 - Ensure zero-initialization of collectArgs.cert\n  * bmo#1934526 - pkcs7 fuzz target use CERT_DestroyCertificate\n  * bmo#1915898 - Fix actual underlying ODR violations issue\n  * bmo#1184059 - mozilla::pkix: allow reference ID labels to begin\n    and/or end with hyphens\n  * bmo#1927953 - don't look for secmod.db in nssutil_ReadSecmodDB if\n    NSS_DISABLE_DBM is set\n  * bmo#1934526 - Fix memory leak in pkcs7 fuzz target\n  * bmo#1934529 - Set -O2 for ASan builds in CI\n  * bmo#1934543 - Change branch of tlsfuzzer dependency\n  * bmo#1915898 - Run tests in CI for ASan builds with detect_odr_violation=1\n  * bmo#1934241 - Fix coverage failure in CI\n  * bmo#1934213 - Add fuzzing for delegated credentials, DTLS short\n    header and Tls13BackendEch\n  * bmo#1927142 - Add fuzzing for SSL_EnableTls13GreaseEch and\n    SSL_SetDtls13VersionWorkaround\n  * bmo#1913677 - Part 3: Restructure fuzz/\n  * bmo#1931925 - Extract testcases from ssl gtests for fuzzing\n  * bmo#1923037 - Force Cryptofuzz to use NSS in CI\n  * bmo#1923037 - Fix Cryptofuzz on 32 bit in CI\n  * bmo#1933154 - Update Cryptofuzz repository link\n  * bmo#1926256 - fix build error from 9505f79d\n  * bmo#1926256 - simplify error handling in get_token_objects_for_cache\n  * bmo#1931973 - nss doc: fix a warning\n  * bmo#1930797 - pkcs12 fixes from RHEL need to be picked up\n- remove obsolete patches\n  * nss-fips-safe-memset.patch\n  * nss-bmo1930797.patch\n- update to NSS 3.107\n  * bmo#1923038 - Remove MPI fuzz targets.\n  * bmo#1925512 - Remove globals `lockStatus` and `locksEverDisabled`.\n  * bmo#1919015 - Enable PKCS8 fuzz target.\n  * bmo#1923037 - Integrate Cryptofuzz in CI.\n  * bmo#1913677 - Part 2: Set tls server target socket options in config class\n  * bmo#1913677 - Part 1: Set tls client target socket options in config class\n  * bmo#1913680 - Support building with thread sanitizer.\n  * bmo#1922392 - set nssckbi version number to 2.72.\n  * bmo#1919913 - remove Websites Trust Bit from Entrust Root\n    Certification Authority - G4.\n  * bmo#1920641 - remove Security Communication RootCA3 root cert.\n  * bmo#1918559 - remove SecureSign RootCA11 root cert.\n  * bmo#1922387 - Add distrust-after for TLS to Entrust Roots.\n  * bmo#1927096 - update expected error code in pk12util pbmac1 tests.\n  * bmo#1929041 - Use random tstclnt args with handshake collection script\n  * bmo#1920466 - Remove extraneous assert in ssl3gthr.c.\n  * bmo#1928402 - Adding missing release notes for NSS_3_105.\n  * bmo#1874451 - Enable the disabled mlkem tests for dtls.\n  * bmo#1874451 - NSS gtests filter cleans up the constucted buffer\n    before the use.\n  * bmo#1925505 - Make ssl_SetDefaultsFromEnvironment thread-safe.\n  * bmo#1925503 - Remove short circuit test from ssl_Init.\n- fix build on loongarch64 (setting it as 64bit arch)\n- Remove upstreamed bmo-1400603.patch\n- Added nss-bmo1930797.patch to fix failing tests in testsuite\n- update to NSS 3.106\n  * bmo#1925975 - NSS 3.106 should be distributed with NSPR 4.36.\n  * bmo#1923767 - pk12util: improve error handling in p12U_ReadPKCS12File.\n  * bmo#1899402 - Correctly destroy bulkkey in error scenario.\n  * bmo#1919997 - PKCS7 fuzz target, r=djackson,nss-reviewers.\n  * bmo#1923002 - Extract certificates with handshake collection script.\n  * bmo#1923006 - Specify len_control for fuzz targets.\n  * bmo#1923280 - Fix memory leak in dumpCertificatePEM.\n  * bmo#1102981 - Fix UBSan errors for SECU_PrintCertificate and\n    SECU_PrintCertificateBasicInfo.\n  * bmo#1921528 - add new error codes to mozilla::pkix for Firefox to use.\n  * bmo#1921768 - allow null phKey in NSC_DeriveKey.\n  * bmo#1921801 - Only create seed corpus zip from existing corpus.\n  * bmo#1826035 - Use explicit allowlist for for KDF PRFS.\n  * bmo#1920138 - Increase optimization level for fuzz builds.\n  * bmo#1920470 - Remove incorrect assert.\n  * bmo#1914870 - Use libFuzzer options from fuzz/options/\\*.options in CI.\n  * bmo#1920945 - Polish corpus collection for automation.\n  * bmo#1917572 - Detect new and unfuzzed SSL options.\n  * bmo#1804646 - PKCS12 fuzzing target.\n- requires NSPR 4.36\n- update to NSS 3.105\n  * bmo#1915792 - Allow importing PKCS#8 private EC keys missing public key\n  * bmo#1909768 - UBSAN fix: applying zero offset to null pointer in sslsnce.c\n  * bmo#1919577 - set KRML_MUSTINLINE=inline in makefile builds\n  * bmo#1918965 - Don't set CKA_SIGN for CKK_EC_MONTGOMERY private keys\n  * bmo#1918767 - override default definition of KRML_MUSTINLINE\n  * bmo#1916525 - libssl support for mlkem768x25519\n  * bmo#1916524 - support for ML-KEM-768 in softoken and pk11wrap\n  * bmo#1866841 - Add Libcrux implementation of ML-KEM 768 to FreeBL\n  * bmo#1911912 - Avoid misuse of ctype(3) functions\n  * bmo#1917311 - part 2: run clang-format\n  * bmo#1917311 - part 1: upgrade to clang-format 13\n  * bmo#1916953 - clang-format fuzz\n  * bmo#1910370 - DTLS client message buffer may not empty be on retransmit\n  * bmo#1916413 - Optionally print config for TLS client and server\n    fuzz target\n  * bmo#1916059 - Fix some simple documentation issues in NSS.\n  * bmo#1915439 - improve performance of NSC_FindObjectsInit when\n    template has CKA_TOKEN attr\n  * bmo#1912828 - define CKM_NSS_ECDHE_NO_PAIRWISE_CHECK_KEY_PAIR_GEN\n- Fix build error under Leap by rebasing nss-fips-safe-memset.patch.\n- update to NSS 3.104\n  * bmo#1910071 - Copy original corpus to heap-allocated buffer\n  * bmo#1910079 - Fix min ssl version for DTLS client fuzzer\n  * bmo#1908990 - Remove OS2 support just like we did on NSPR\n  * bmo#1910605 - clang-format NSS improvements\n  * bmo#1902078 - Adding basicutil.h to use HexString2SECItem function\n  * bmo#1908990 - removing dirent.c from build\n  * bmo#1902078 - Allow handing in keymaterial to shlibsign to make\n    the output reproducible\n  * bmo#1908990 - remove nec4.3, sunos4, riscos and SNI references\n  * bmo#1908990 - remove other old OS (BSDI, old HP UX, NCR,\n    openunix, sco, unixware or reliantUnix\n  * bmo#1908990 - remove mentions of WIN95\n  * bmo#1908990 - remove mentions of WIN16\n  * bmo#1913750 - More explicit directory naming\n  * bmo#1913755 - Add more options to TLS server fuzz target\n  * bmo#1913675 - Add more options to TLS client fuzz target\n  * bmo#1835240 - Use OSS-Fuzz corpus in NSS CI\n  * bmo#1908012 - set nssckbi version number to 2.70.\n  * bmo#1914499 - Remove Email Trust bit from ACCVRAIZ1 root cert.\n  * bmo#1908009 - Remove Email Trust bit from certSIGN ROOT CA.\n  * bmo#1908006 - Add Cybertrust Japan Roots to NSS.\n  * bmo#1908004 - Add Taiwan CA Roots to NSS.\n  * bmo#1911354 - remove search by decoded serial in\n    nssToken_FindCertificateByIssuerAndSerialNumber\n  * bmo#1913132 - Fix tstclnt CI build failure\n  * bmo#1913047 - vfyserv: ensure peer cert chain is in db for\n    CERT_VerifyCertificateNow\n  * bmo#1912427 - Enable all supported protocol versions for UDP\n  * bmo#1910361 - Actually use random PSK hash type\n  * bmo#1911576 - Initialize NSS DB once\n  * bmo#1910361 - Additional ECH cipher suites and PSK hash types\n  * bmo#1903604 - Automate corpus file generation for TLS client Fuzzer\n  * bmo#1910364 - Fix crash with UNSAFE_FUZZER_MODE\n  * bmo#1910605 - clang-format shlibsign.c\n- remove obsolete nss-reproducible-builds.patch\n- update to NSS 3.103\n  * bmo#1908623 - move list size check after lock acquisition in sftk_PutObjectToList.\n  * bmo#1899542 - Add fuzzing support for SSL_ENABLE_POST_HANDSHAKE_AUTH,\n  * bmo#1909638 - Follow-up to fix test for presence of file nspr.patch.\n  * bmo#1903783 - Adjust libFuzzer size limits\n  * bmo#1899542 - Add fuzzing support for SSL_SetCertificateCompressionAlgorithm,\n    SSL_SetClientEchConfigs, SSL_VersionRangeSet and SSL_AddExternalPsk\n  * bmo#1899542 - Add fuzzing support for SSL_ENABLE_GREASE and\n    SSL_ENABLE_CH_EXTENSION_PERMUTATION\n- Add nss-reproducible-builds.patch to make the rpms reproducible,\n  by using a hardcoded, static key to generate the checksums (*.chk-files)\n- Updated nss-fips-approved-crypto-non-ec.patch to enforce\n  approved curves with the CKK_EC_MONTGOMERY key type (bsc#1224113).\n- update to NSS 3.102.1\n  * bmo#1905691 - ChaChaXor to return after the function\n- update to NSS 3.102\n  * bmo#1880351 - Add Valgrind annotations to freebl Chacha20-Poly1305.\n  * bmo#1901932 - missing sqlite header.\n  * bmo#1901080 - GLOBALTRUST 2020: Set Distrust After for TLS and S/MIME.\n  * bmo#1615298 - improve certutil keyUsage, extKeyUsage, and nsCertType keyword handling.\n  * bmo#1660676 - correct length of raw SPKI data before printing in pp utility.\n\n- Add nss-reproducible-chksums.patch to make NSS-build reproducible\n  Use key from openssl (bsc#1081723)\n\n- Updated nss-fips-approved-crypto-non-ec.patch to exclude the\n  SHA-1 hash from SLI approval.\n\nPackage nvme-cli was updated:\n\n- Update to version 2.8+94.gbf4a448c:  * netapp-ontapdev: update invalid device handling (bsc#1247017)\n  * netapp-smdev: update invalid device handling (bsc#1247017)\n\n- Update to version 2.8+92.g998dceae:\n  * nvme: fix mem leak in nvme copy (bsc#1243716)\n  * nvme-print: suppress output when no ctrl is present for list-subsys (bsc#1243716)\n  * nvme: extend filter to match device name (bsc#1243716)\n  * udev-rules-ontap: switch to queue-depth iopolicy (bsc#1246599)\n\nPackage openssh was updated:\n\nPackage pam-config was updated:\n\n- Stop adding pam_env in AUTH stack, and be sure to put this module at the  really end of the SESSION stack.\n  [bsc#1243226, CVE-2025-6018, remove-pam_env-from-auth-stack.patch]\n\nPackage pam was updated:\n\n- Make sure that the buffer containing encrypted passwords get's erased  bedore free.\n- Replace to previous CVE fix which led to CPU performance issues.\n  [bsc#1246221, CVE-2024-10041,\n  + libpam-introduce-secure-memory-erasure-helpers.patch\n  + pam_modutil_get-overwrite-password-at-free.patch\n  - passverify-always-run-the-helper-to-obtain-shadow_pwd.patch]\n\n- pam_namespace: convert functions that may operate on a user-controlled path\n  to operate on file descriptors instead of absolute path. And keep the\n  bind-mount protection from protect_mount() as a defense in depthmeasure.\n  [bsc#1244509\n  pam_inline-introduce-pam_asprintf-pam_snprintf-and-p.patch,\n  pam_namespace-fix-potential-privilege-escalation.patch,\n  pam_namespace-add-flags-to-indicate-path-safety.patch,\n  pam_namespace-secure_opendir-do-not-look-at-the-grou.patch]\n- pam_namespace-fix-potential-privilege-escalation.patch adapted and includes\n  changes from upstream commits: ds6242a, bc856cd.\n  * pam_namespace fix logic in return value handling\n  * pam_namespace move functions around\n\n- pam_env: Change the default to not read the user .pam_environment file\n  [bsc#1243226, CVE-2025-6018,\n  pam_env-change-the-default-to-not-read-the-user-env.patch]\n\nPackage perl was updated:\n\n- do not change the current directory when cloning an open  directory handle [bnc#1244079] [CVE-2025-40909]\n  new patch: perl-dirdup.diff\n\nPackage python-instance-billing-flavor-check was updated:\n\n- Update to version 1.0.1  + Fix infinite loop (bsc#1242064)\n  + Fix bug in update infrastructure request (bsc#1242064)\n\nPackage python-PyYAML was updated:\n\n- Add python36-PyYAML provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-appdirs was updated:\n\n- Add python36-appdirs provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-asn1crypto was updated:\n\n- Add python36-asn1crypto provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-certifi was updated:\n\n- Add python36-certifi provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-cffi was updated:\n\n- Add python36-cffi provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-chardet was updated:\n\n- Add python36-chardet provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python3-cryptography was updated:\n\n- Add python36-cryptography provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n- Skipping failing test\n\nPackage python-idna was updated:\n\n- Add python36-idna provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-packaging was updated:\n\n- Add python36-packaging provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python3-pyOpenSSL was updated:\n\n- Add python36-pyOpenSSL provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-pyasn1 was updated:\n\n- Add python36-pyasn1 provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-pycparser was updated:\n\n- Add python36-pycparser provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-pyparsing was updated:\n\n- Add python36-pyparsing provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-py was updated:\n\n- Add python36-py provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-requests was updated:\n\n- Add python36- provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python3-setuptools was updated:\n\n- Add python36-setuptools provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-six was updated:\n\n- Add python36-six provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-urllib3 was updated:\n\n- Add patch CVE-2025-50181-poolmanager-redirects.patch:  * Pool managers now properly control redirects when retries is passed\n    (CVE-2025-50181, GHSA-pq67-6m6q-mj2v, bsc#1244925)\n\n- Add python36-urllib3 provides/obsoletes to enable SLE-12 -\u0026gt;\n  SLE-15 migration, bsc#1233012\n\nPackage regionServiceClientConfigGCE was updated:\n\n- Update to version 5.0.0 (bsc#1246995)  + SLE 16 python-requests requiers SSL v3 certificates. Update 2\n    region server certs to support SLE 16 when it gets released.\n\n- Update conditional to handle name change of metadata package\n  in SLE 16 (bsc#1242063)\n\nPackage release-notes-sles was updated:\n\n- 15.6.20250821 (tracked in bsc#933411)- Added note about virt-install --cdrom with SEV (bsc#1241602)\n- Added note about SSH algo control method changing and link\n  (bsc#1244260)\n- Added note about 4096-bit signing key (jsc#PED-8000)\n- Added note about Non unified image for SEV (bsc#1232762)\n- Added note about new systems management module (jsc#PED-12703)\n- Added note about externally supported flag (jsc#PED-8462)\n- Added MI300A support (jsc#PED-7607)\n- Added note about PHP 7.4 deprecation (jsc#PED-8166)\n- Clarified support of BPF-related tools (jsc#PED-8569)\n- Added note about deprecating NFSv2 (bsc#1230914)\n\nPackage runc was updated:\n\n- Update to runc v1.2.6. Upstream changelog is available from  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.6\u0026gt;.\n\n- Update to runc v1.2.5. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.5\u0026gt;.\n\n- Update to runc v1.2.4. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.4\u0026gt;.\n- Update runc.keyring to match upstream.\n\n- Update to runc v1.2.3. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.3\u0026gt;.\n\n- Update to runc v1.2.2. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.2\u0026gt;.\n\n- Update to runc v1.2.1. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.1\u0026gt;.\n\n- Update to runc v1.2.0. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.0\u0026gt;.\n- Remove upstreamed patches.\n  - 0001-bsc1221050-libct-seccomp-patchbpf-rm-duplicated-code.patch\n  - 0002-bsc1221050-seccomp-patchbpf-rename-nativeArch-linuxA.patch\n  - 0003-bsc1221050-seccomp-patchbpf-always-include-native-ar.patch\n  - 0004-bsc1214960-nsenter-cloned_binary-remove-bindfd-logic.patch\n\n- Update to runc v1.2.0~rc3. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.0-rc.3\u0026gt;.\n  Includes the patch for CVE-2024-45310. bsc#1230092\n\nPackage samba was updated:\n\n- Windows security hardening locks out schannel'ed netlogon dc  calls like netr_DsRGetDCName; (bsc#1246431); (bso#15876).\n\nPackage screen was updated:\n\n- also use tty fd passing after a suspend (MSG_CONT)  new patch: sendfdcont.diff\n- do not chmod the tty for multiattach, rely on tty fd passing\n  instead [bsc#1242269] [CVE-2025-46802]\n  new patch: nottychmod.diff\n- fix resume after suspend in multiuser mode\n  new patch: multicont.diff\n\nPackage sudo was updated:\n\n- Fix a possible local privilege escalation via the --host option  [bsc#1245274, CVE-2025-32462]\n- Fix a possible local privilege Escalation via chroot option\n  [bsc#1245275, CVE-2025-32463]\n\nPackage suse-build-key was updated:\n\n- adjust UID (name + email) of SLES16 signing key with official  names. (bsc#1245223)\n\nPackage suse-module-tools was updated:\n\n- Update to version 15.6.11:  * spec file: add missing util-linux requirement (bsc#1241038)\n  * regenerate-initrd-posttrans: Fix SKIP_REGENERATE_INITRD_ALL\n  (bsc#1228929)\n\nPackage systemd-presets-branding-SLE was updated:\n\n- enable sysstat_collect.timer and sysstat_summary.timer [bsc#1244553]  and [bsc#1246835]\n- modified sources\n  % default-SLE.preset\n\nPackage systemd-rpm-macros was updated:\n\n- Bump version to 16\n- Introduce %udev_trigger_with_reload() for packages that need to trigger events\n  in theirs scriplets. The new macro automatically triggers a reload of the udev\n  rule files as this step is often overlooked by packages (bsc#1237143).\n\nPackage vim was updated:\n\n- Fix bsc#1228776 / CVE-2024-41965.- Fix bsc#1239602 / CVE-2025-29768.\n- Refresh patch:\n  vim-7.3-sh_is_bash.patch\n- Update to 9.1.1406:\n  9.1.1406: crash when importing invalid tuple\n  9.1.1405: tests: no test for mapping with special keys in session file\n  9.1.1404: wrong link to Chapter 2 in new-tutor\n  9.1.1403: expansion of 'tabpanelopt' value adds wrong values\n  9.1.1402: multi-byte mappings not properly stored in session file\n  9.1.1401: list not materialized in prop_list()\n  9.1.1400: [security]: use-after-free when evaluating tuple fails\n  9.1.1399: tests: test_codestyle fails for auto-generated files\n  9.1.1398: completion: trunc does not follow Pmenu highlighting attributes\n  9.1.1397: tabpanel not correctly updated on :tabonly\n  9.1.1396: 'errorformat' is a global option\n  9.1.1395: search_stat not reset when pattern differs in case\n  9.1.1394: tabpanel not correctly redrawn on tabonly\n  9.1.1393: missing test for switching buffers and reusing curbuf\n  9.1.1392: missing patch number\n  9.1.1391: Vim does not have a vertical tabpanel\n  9.1.1390: style: more wrong indentation\n  9.1.1389: completion: still some issue when 'isexpand' contains a space\n  9.1.1388: Scrolling one line too far with 'nosmoothscroll' page scrolling\n  9.1.1387: memory leak when buflist_new() fails to reuse curbuf\n  9.1.1386: MS-Windows: some minor problems building on AARCH64\n  9.1.1385: inefficient loop for 'nosmoothscroll' scrolling\n  9.1.1384: still some problem with the new tutors filetype plugin\n  9.1.1383: completion: 'isexpand' option does not handle space char correct\n  9.1.1382: if_ruby: unused compiler warnings from ruby internals\n  9.1.1381: completion: cannot return to original text\n  9.1.1380: 'eventignorewin' only checked for current buffer\n  9.1.1379: MS-Windows: error when running evim when space in path\n  9.1.1378: sign without text overwrites number option\n  9.1.1377: patch v9.1.1370 causes some GTK warning messages\n  9.1.1376: quickfix dummy buffer may remain as dummy buffer\n  9.1.1375: [security]: possible heap UAF with quickfix dummy buffer\n  9.1.1374: completion: 'smartcase' not respected when filtering matches\n  9.1.1373: 'completeopt' checking logic can be simplified\n  9.1.1372: style: braces issues in various files\n  9.1.1371: style: indentation and brace issues in insexpand.c\n  9.1.1370: CI Tests favor GTK2 over GTK3\n  9.1.1369: configure still using autoconf 2.71\n  9.1.1368: GTK3 and GTK4 will drop numeric cursor support.\n  9.1.1367: too many strlen() calls in gui.c\n  9.1.1366: v9.1.1364 unintentionally changed sign.c and sound.c\n  9.1.1365: MS-Windows: compile warnings and too many strlen() calls\n  9.1.1364: style: more indentation issues\n  9.1.1363: style: inconsistent indentation in various files\n  9.1.1362: Vim9: type ignored when adding tuple to instance list var\n  9.1.1361: [security]: possible use-after-free when closing a buffer\n  9.1.1360: filetype: GNU Radio companion files are not recognized\n  9.1.1359: filetype: GNU Radio config files are not recognized\n  9.1.1358: if_lua: compile warnings with gcc15\n  9.1.1357: Vim incorrectly escapes tags with \u0026quot;[\u0026quot; in a help buffer\n  9.1.1356: Vim9: crash when unletting variable\n  9.1.1355: The pum_redraw() function is too complex\n  9.1.1354: tests: Test_terminalwinscroll_topline() fails on Windows\n  9.1.1353: missing change from v9.1.1350\n  9.1.1352: style: inconsistent indent in insexpand.c\n  9.1.1351: Return value of getcmdline() inconsistent in CmdlineLeavePre\n  9.1.1350: tests: typo in Test_CmdlineLeavePre_cabbr()\n  9.1.1349: CmdlineLeavePre may trigger twice\n  9.1.1348: still E315 with the terminal feature\n  9.1.1347: small problems with gui_w32.c\n  9.1.1346: missing out-of-memory check in textformat.c\n  9.1.1345: tests: Test_xxd_color2() test failure dump diff is misleading\n  9.1.1344: double free in f_complete_match() (after v9.1.1341)\n  9.1.1343: filetype: IPython files are not recognized\n  9.1.1342: Shebang filetype detection can be improved\n  9.1.1341: cannot define completion triggers\n  9.1.1340: cannot complete :filetype arguments\n  9.1.1339: missing out-of-memory checks for enc_to_utf16()/utf16_to_enc()\n  9.1.1338: Calling expand() interferes with cmdcomplete_info()\n  9.1.1337: Undo corrupted with 'completeopt' \u0026quot;preinsert\u0026quot; when switching buffer\n  9.1.1336: comment plugin does not support case-insensitive 'commentstring'\n  9.1.1335: Coverity complains about Null pointer dereferences\n  9.1.1334: Coverity complains about unchecked return value\n  9.1.1333: Coverity: complains about unutilized variable\n  9.1.1332: Vim9: segfault when using super within a lambda\n  9.1.1331: Leaking memory with cmdcomplete()\n  9.1.1330: may receive E315 in terminal\n  9.1.1329: cannot get information about command line completion\n  9.1.1328: too many strlen() calls in indent.c\n  9.1.1327: filetype: nroff detection can be improved\n  9.1.1326: invalid cursor position after 'tagfunc'\n  9.1.1325: tests: not checking error numbers properly\n  9.1.1324: undefined behaviour if X11 connection dies\n  9.1.1323: b:undo_ftplugin not executed when re-using buffer\n  9.1.1322: small delete register cannot paste multi-line correctly\n  9.1.1321: filetype: MS ixx and mpp files are not recognized\n  9.1.1320: filetype: alsoft config files are not recognized\n  9.1.1319: Various typos in the code, issue with test_inst_complete.vim\n  9.1.1318: tests: test_format fails\n  9.1.1317: noisy error when restoring folds from session fails\n  9.1.1316: missing memory allocation failure in os_mswin.c\n  9.1.1315: completion: issue with fuzzy completion and 'completefuzzycollect'\n  9.1.1314: max allowed string width too small\n  9.1.1313: compile warning about uninitialized value\n  9.1.1312: tests: Test_backupskip() fails when HOME is defined\n  9.1.1311: completion: not possible to limit number of matches\n  9.1.1310: completion: redundant check for preinsert effect\n  9.1.1309: tests: no test for 'pummaxwidth' with non-truncated \u0026quot;kind\u0026quot;\n  9.1.1308: completion: cannot order matches by distance to cursor\n  9.1.1307: make syntax does not reliably detect different flavors\n  9.1.1306: completion menu rendering can be improved\n  9.1.1305: completion menu active after switching windows/tabs\n  9.1.1304: filetype: some man files are not recognized\n  9.1.1303: missing out-of-memory check in linematch.c\n  9.1.1302: Coverity warns about using uninitialized value\n  9.1.1301: completion: cannot configure completion functions with 'complete'\n  9.1.1300: wrong detection of -inf\n  9.1.1299: filetype: mbsyncrc files are not recognized\n  9.1.1298: define_function() is too long\n  9.1.1297: Ctrl-D scrolling can get stuck\n  9.1.1296: completion: incorrect truncation logic\n  9.1.1295: clientserver: does not handle :stopinsert correctly\n  9.1.1294: gui tabline menu does not use confirm when closing tabs\n  9.1.1293: comment plugin does not handle 'exclusive' selection for comment object\n  9.1.1292: statusline not correctly evaluated\n  9.1.1291: too many strlen() calls in buffer.c\n  9.1.1290: tests: missing cleanup in test_filetype.vim\n  9.1.1289: tests: no test for matchparen plugin with WinScrolled event\n  9.1.1288: Using wrong window in ll_resize_stack()\n  9.1.1287: quickfix code can be further improved\n  9.1.1286: filetype: help files not detected when 'iskeyword' includes \u0026quot;:\u0026quot;\n  9.1.1285: Vim9: no error message for missing method after \u0026quot;super.\u0026quot;\n  9.1.1284: not possible to configure pum truncation char\n  9.1.1283: quickfix stack is limited to 10 items\n  9.1.1282: Build and test failure without job feature\n  9.1.1281: extra newline output when editing stdin\n  9.1.1280: trailing additional semicolon in get_matches_in_str()\n  9.1.1279: Vim9: null_object and null_class are no reserved names\n  9.1.1278: Vim9: too long functions in vim9type.c\n  9.1.1277: tests: trailing comment char in test_popupwin\n  9.1.1276: inline word diff treats multibyte chars as word char\n  9.1.1275: MS-Windows: Not possible to pass additional flags to Make_mvc\n  9.1.1274: Vim9: no support for object\u0026lt;type\u0026gt; as variable type\n  9.1.1273: Coverity warns about using uninitialized value\n  9.1.1272: completion: in keyword completion Ctrl_P cannot go back after Ctrl_N\n  9.1.1271: filetype: Power Query files are not recognized\n  9.1.1270: missing out-of-memory checks in buffer.c\n  9.1.1269: completion: compl_shown_match is updated when starting keyword completion\n  9.1.1268: filetype: dax files are not recognized\n  9.1.1267: Vim9: no support for type list/dict\u0026lt;object\u0026lt;any\u0026gt;\u0026gt;\n  9.1.1266: MS-Windows: type conversion warnings\n  9.1.1265: tests: no tests for typing normal char during completion\n  9.1.1264: Vim9: error when comparing objects\n  9.1.1263: string length wrong in get_last_inserted_save()\n  9.1.1262: heap-buffer-overflow with narrow 'pummaxwidth' value\n  9.1.1261: No test for 'pummaxwidth' non-truncated items\n  9.1.1260: Hang when filtering buffer with NUL bytes\n  9.1.1259: some issues with comment package and tailing spaces\n  9.1.1258: regexp: max \\U and \\%U value is limited by INT_MAX\n  9.1.1257: Mixing vim_strsize() with mb_ptr2cells() in pum_redraw()\n  9.1.1256: if_python: duplicate tuple data entries\n  9.1.1255: missing test condition for 'pummaxwidth' setting\n  9.1.1254: need more tests for the comment plugin\n  9.1.1253: abort when closing window with attached quickfix data\n  9.1.1252: typos in code and docs related to 'diffopt' \u0026quot;inline:\u0026quot;\n  9.1.1251: if_python: build error with tuples and dynamic python\n  9.1.1250: cannot set the maximum popup menu width\n  9.1.1249: tests: no test that 'listchars' \u0026quot;eol\u0026quot; doesn't affect \u0026quot;gM\u0026quot;\n  9.1.1248: compile error when building without FEAT_QUICKFIX\n  9.1.1247: fragile setup to get (preferred) keys from key_name_entry\n  9.1.1246: coverity complains about some changes in v9.1.1243\n  9.1.1245: need some more tests for curly braces evaluation\n  9.1.1244: part of patch v9.1.1242 was wrong\n  9.1.1243: diff mode is lacking for changes within lines\n  9.1.1242: Crash when evaluating variable name\n  9.1.1241: wrong preprocessort indentation in term.c\n  9.1.1240: Regression with ic/ac text objects and comment plugin\n  9.1.1239: if_python: no tuple data type support\n  9.1.1238: wrong cursor column with 'set splitkeep=screen'\n  9.1.1237: Compile error with C89 compiler in term.c\n  9.1.1236: tests: test_comments leaves swapfiles around\n  9.1.1235: cproto files are outdated\n  9.1.1234: Compile error when SIZE_MAX is not defined\n  9.1.1233: Coverity warns about NULL pointer when triggering WinResized\n  9.1.1232: Vim script is missing the tuple data type\n  9.1.1231: filetype: SPA JSON files are not recognized\n  9.1.1230: inconsistent CTRL-C behaviour for popup windows\n  9.1.1229: the comment plugin can be improved\n  9.1.1228: completion: current position column wrong after got a match\n  9.1.1227: no tests for the comment package\n  9.1.1226: \u0026quot;shellcmdline\u0026quot; completion doesn't work with input()\n  9.1.1225: extra NULL check in VIM_CLEAR()\n  9.1.1224: cannot :put while keeping indent\n  9.1.1223: wrong translation used for encoding failures\n  9.1.1222: using wrong length for last inserted string\n  9.1.1221: Wrong cursor pos when leaving Insert mode just after 'autoindent'\n  9.1.1220: filetype: uv.lock file not recognized\n  9.1.1219: Strange error with wrong type for matchfuzzy() \u0026quot;camelcase\u0026quot;\n  9.1.1218: missing out-of-memory check in filepath.c\n  9.1.1217: tests: typos in test_matchfuzzy.vim\n  9.1.1216: Pasting the '.' register multiple times may not work\n  9.1.1215: Patch 9.1.1213 has some issues\n  9.1.1214: matchfuzzy() can be improved for camel case matches\n  9.1.1213: cannot :put while keeping indent\n  9.1.1212: too many strlen() calls in edit.c\n  9.1.1212: filetype: logrotate'd pacmanlogs are not recognized\n  9.1.1211: TabClosedPre is triggered just before the tab is being freed\n  9.1.1210: translation(ru): missing Russian translation for the new tutor\n  9.1.1209: colorcolumn not drawn after virtual text lines\n  9.1.1208: MS-Windows: not correctly restoring alternate screen on Win 10\n  9.1.1207: MS-Windows: build warning in filepath.c\n  9.1.1206: tests: test_filetype fails when a file is a directory\n  9.1.1205: completion: preinserted text not removed when closing pum\n  9.1.1204: MS-Windows: crash when passing long string to expand()\n  9.1.1203: matchparen keeps cursor on case label in sh filetype\n  9.1.1202: Missing TabClosedPre autocommand\n  9.1.1201: 'completefuzzycollect' does not handle dictionary correctly\n  9.1.1200: cmdline pum not cleared for input() completion\n  9.1.1199: gvim uses hardcoded xpm icon file\n  9.1.1198: [security]: potential data loss with zip.vim\n  9.1.1197: process_next_cpt_value() uses wrong condition\n  9.1.1196: filetype: config files for container tools are not recognized\n  9.1.1195: inside try-block: fn body executed with default arg undefined\n  9.1.1194: filetype: false positive help filetype detection\n  9.1.1193: Unnecessary use of STRCAT() in au_event_disable()\n  9.1.1192: Vim crashes with term response debug logging enabled\n  9.1.1191: tests: test for patch 9.1.1186 doesn't fail without the patch\n  9.1.1190: C indentation does not detect multibyte labels\n  9.1.1189: if_python: build error due to incompatible pointer types\n  9.1.1188: runtime(tera): tera support can be improved\n  9.1.1187: matchparen plugin wrong highlights shell case statement\n  9.1.1186: filetype: help files in git repos are not detected\n  9.1.1185: endless loop with completefuzzycollect and no match found\n  9.1.1184: Unnecessary use of vim_tolower() in vim_strnicmp_asc()\n  9.1.1083: \u0026quot;above\u0026quot; virtual text breaks cursorlineopt=number\n  9.1.1182: No cmdline completion for 'completefuzzycollect'\n  9.1.1181: Unnecessary STRLEN() calls in insexpand.c\n  9.1.1180: short-description\n  9.1.1179: too many strlen() calls in misc2.c\n  9.1.1178: not possible to generate completion candidates using fuzzy matching\n  9.1.1177: filetype: tera files not detected\n\nPackage xen was updated:\n\n- bsc#1246112, bsc#1238896 - VUL-0: xen: More AMD transient  execution attack (CVE-2024-36350, CVE-2024-36357, XSA-471)\n  66f28b47-x86-cpufeature-reposition-ext-leaf-21-EAX.patch\n  685c29cf-x86-idle-Move-monitor-mwait-wrappers.patch\n  685c29d0-x86-idle-remove-MFENCEs-for-CLFLUSH_MONITOR.patch\n  685c29d1-revert-part-of-mwait-idle-disable-IBRS-.patch\n  686277ed-x86-cpu-policy-simplify-logic-in-gcdfa.patch\n  68656b6f-x86-cpu-policy-leaf-80000021-handling.patch\n  68681770-x86-idle-remove-broken-MWAIT-implementation.patch\n  68681771-x86-idle-drop-incorrect-smp_mb-in-.patch\n  68681772-x86-idle-convert-force_mwait_ipi_wakeup-to-.patch\n  68681773-rework-arch_skip_send_event_check-into-.patch\n  68681774-x86-new-MWAIT-IPI-elision-algorithm.patch\n  68681775-x86-idle-fix-IRQ-enable-before-C1-on-Xeons.patch\n  xsa471-13.patch\n  686d2646-x86-cpu-policy-rearrange-gc_fa.patch\n  686d2647-x86-cpu-policy-CPUID-leaf-0x80000021-ecx.patch\n  686d2648-x86-AMD-ucode-digests-for-TSA.patch\n  686d2649-x86-idle-rearrange-VERW-and-MONITOR-in-.patch\n  686d264a-x86-spec-ctrl-mitigate-Transitive-Scheduler-Attacks.patch\n- bsc#1244644 - VUL-0: CVE-2025-27465: xen: x86: Incorrect stubs\n  exception handling for flags recovery (XSA-470)\n  6863cd0b-x86emul-extable-registration-in-invoke_stub.patch\n  Replaces xsa470.patch\n- Upstream bug fixes (bsc#1027519)\n  6835a042-VMX-VMEntry-failure-on-ADL-SPR-with-shadow.patch\n  6835a043-x86-PV-breakpoint-reporting.patch\n\n- bsc#1244644 - VUL-0: CVE-2025-27465: xen: x86: Incorrect stubs\n  exception handling for flags recovery (XSA-470)\n  xsa470.patch\n\nPackage yast2-packager was updated:\n\n- Fix Internal Error: Encoding::CompatibilityError when  adding SLE-HA as add-on product (bsc#1245555)\n- 4.6.10\n\nPackage zsh was updated:\n\n- Update to version 5.8.1  * Dropped patches, which are included upstream now:\n  - CVE-2019-20044.patch\n  - CVE-2021-45444.patch\n  * See included NEWS file for complete changes\n  * Implements ECO PED-12771\n\nPackage zypper was updated:\n\n- Fix addrepo to handle explicit --check and --no-check requests  (bsc#1246466)\n- Accept \u0026quot;show\u0026quot; as alias for \u0026quot;info\u0026quot; (bsc#1245985)\n- version 1.14.93\n\n- sh: Reset solver options after command (bsc#1245496)\n- Explicitly selecting DownloadAsNeeded also selects the\n  classic_rpmtrans backend.\n- version 1.14.92\n\n- BuildRequires:  libzypp-devel \u0026gt;= 17.37.6.\n  Enhancements regarding mirror handling during repo refresh. Adapt\n  to libzypp API changes. (bsc#1230267)\n- version 1.14.91\n\n- BuildRequires:  libzypp-devel \u0026gt;= 17.37.0.\n- Use libzypp improvements for preload and mirror handling.\n- xmlout.rnc: Update repo-element (bsc#1241463)\n  Add the \u0026quot;metalink\u0026quot; attribute and reflect that the \u0026quot;url\u0026quot; elements\n  list may in fact be empty, if no baseurls are defined in the\n  .repo files.\n- man: update --allow-unsigned-rpm description.\n  Explain how to achieve the same for packages provided by\n  repositories.\n- version 1.14.90\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "boost-license1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cifs-utils-6.15-150400.3.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-10.5.2-150300.13.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-license-watcher-1.0.0-150300.13.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-plugin-gce-1.0.0-150300.13.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "coreutils-8.32-150400.9.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "crypto-policies-20230920.570ea89-150600.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.14.1-150600.4.28.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cyrus-sasl-2.1.28-150600.7.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cyrus-sasl-digestmd5-2.1.28-150600.7.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cyrus-sasl-gssapi-2.1.28-150600.7.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cyrus-sasl-plain-2.1.28-150600.7.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cyrus-sasl-saslauthd-2.1.28-150600.7.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-28.3.3_ce-150000.230.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.78.6-150600.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.38-150600.14.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-i18ndata-2.38-150600.14.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-2.38-150600.14.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-base-2.38-150600.14.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-dracut-config-0.0.4-150300.7.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20241205.00-150400.13.22.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-oslogin-20240311.01-150000.1.56.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20250416.02-150000.1.50.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gpg2-2.4.4-150600.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-2.12-150600.8.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-i386-pc-2.12-150600.8.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-x86_64-efi-2.12-150600.8.34.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "hwinfo-21.89-150500.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "iputils-20221126-150500.3.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "jq-1.6-150000.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-6.4.0-150600.23.65.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libboost_regex1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libboost_system1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libboost_thread1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libbpf1-1.2.2-150600.3.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libbrotlicommon1-1.0.7-150200.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libbrotlidec1-1.0.7-150200.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.14.1-150600.4.28.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcrypt20-1.10.3-150600.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.78.6-150600.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.78.6-150600.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.78.6-150600.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgnutls30-3.8.3-150600.4.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.78.6-150600.4.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libicu-suse65_1-65.1-150200.4.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libicu65_1-ledata-65.1-150200.4.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libjq1-1.6-150000.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "liblmdb-0_9_30-0.9.30-150500.3.2.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libnfsidmap1-1.0-150600.28.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libnvme-mi1-1.8+84.g73e0811d-150600.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libnvme1-1.8+84.g73e0811d-150600.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1w-150600.5.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl3-3.1.4-150600.5.36.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpolkit-agent-1-0-121-150500.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpolkit-gobject-1-0-121-150500.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-150300.10.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libruby2_5-2_5-2.5.9-150000.4.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsasl2-3-2.1.28-150600.7.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsolv-tools-base-0.7.34-150600.8.17.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsqlite3-0-3.50.2-150000.3.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh-config-0.9.8-150600.11.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh4-0.9.8-150600.11.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsystemd0-254.27-150600.4.43.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libudev1-254.27-150600.4.43.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-2-2.10.3-150500.5.32.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libyaml-0-2-0.1.7-150000.3.4.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-17.37.16-150600.3.79.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nspr-4.36-150000.3.32.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-certs-3.112-150400.3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nfs-client-2.6.4-150600.28.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nfs-kernel-server-2.6.4-150600.28.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nscd-2.38-150600.14.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nvme-cli-2.8+94.gbf4a448c-150600.3.21.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-9.6p1-150600.6.29.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-clients-9.6p1-150600.6.29.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-common-9.6p1-150600.6.29.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-server-9.6p1-150600.6.29.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-server-config-disallow-rootlogin-9.6p1-150600.6.29.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-3-3.1.4-150600.5.36.4",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-1.3.0-150000.6.86.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-config-1.1-150600.16.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-5.26.1-150300.17.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-base-5.26.1-150300.17.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "polkit-121-150500.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-instance-billing-flavor-check-1.0.1-150000.1.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.6.15-150300.10.97.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-PyYAML-5.4.1-150300.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-appdirs-1.4.3-150000.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-asn1crypto-0.24.0-150000.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.6.15-150300.10.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-certifi-2018.1.18-150000.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-cffi-1.13.2-150200.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-chardet-3.0.4-150000.5.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-cryptography-3.3.2-150400.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-curses-3.6.15-150300.10.97.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-idna-2.6-150000.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-iniconfig-1.1.1-150000.1.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-packaging-21.3-150200.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-py-1.10.0-150100.5.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyOpenSSL-21.0.0-150400.10.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyasn1-0.4.2-150000.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pycparser-2.17-150000.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyparsing-2.4.7-150300.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-requests-2.25.1-150300.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-setuptools-44.1.1-150400.9.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-six-1.14.0-150200.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-solv-0.7.34-150600.8.17.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-urllib3-1.25.10-150300.4.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-zypp-plugin-0.6.5-150600.18.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "regionServiceClientConfigGCE-5.0.0-150000.4.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "release-notes-sles-15.6.20250821-150600.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "rsyslog-8.2406.0-150600.12.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby-solv-0.7.34-150600.8.17.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-2.5.9-150000.4.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-stdlib-2.5.9-150000.4.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "runc-1.2.6-150000.73.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "samba-client-libs-4.19.8+git.430.a10fe64854c-150600.3.18.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "screen-4.6.2-150000.5.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sqlite3-tcl-3.50.2-150000.3.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sudo-1.9.15p5-150600.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-build-key-12.0-150000.8.61.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-module-tools-15.6.11-150600.3.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-254.27-150600.4.43.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-presets-branding-SLE-15.1-150600.35.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-rpm-macros-16-150000.7.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-sysvcompat-254.27-150600.4.43.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "udev-254.27-150600.4.43.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "update-alternatives-1.19.0.4-150000.4.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.1406-150500.20.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.1406-150500.20.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xen-libs-4.18.5_04-150600.3.28.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "yast2-packager-4.6.10-150600.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zsh-5.8.1-150600.18.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.93-150600.10.49.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp6-v20250920-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-15-sp6-v20250920-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2016-9840",
      "Description": "inftrees.c in zlib 1.2.8 might allow context-dependent attackers to have unspecified impact by leveraging improper pointer arithmetic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "critical"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2019-11135",
      "Description": "TSX Asynchronous Abort condition on some CPUs utilizing speculative execution may allow an authenticated user to potentially enable information disclosure via a side channel with local access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2019-20044",
      "Description": "In Zsh before 5.8, attackers able to execute commands can regain privileges dropped by the --no-PRIVILEGED option. Zsh fails to overwrite the saved uid, so the original privileges can be restored by executing MODULE_PATH=/dir/with/module zmodload with a module that calls setuid().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:zsh-5.8.1-150600.18.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.2",
        "Vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2021-45444",
      "Description": "In zsh before 5.8.1, an attacker can achieve code execution if they control a command output inside the prompt, as demonstrated by a %F argument. This occurs because of recursive PROMPT_SUBST expansion.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:zsh-5.8.1-150600.18.3.2"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5.1",
        "Vector": "AV:N/AC:H/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2023-52888",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Only free buffer VA that is not NULL\n\nIn the MediaTek vcodec driver, while mtk_vcodec_mem_free() is mostly\ncalled only when the buffer to free exists, there are some instances\nthat didn't do the check and triggered warnings in practice.\n\nWe believe those checks were forgotten unintentionally. Add the checks\nback to fix the warnings.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-10041",
      "Description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:pam-1.3.0-150000.6.86.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-11053",
      "Description": "When asked to both use a `.netrc` file for credentials and to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has an entry that matches\nthe redirect target hostname but the entry either omits just the password or\nomits both login and password.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12718",
      "Description": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"  or file permissions (chmod) with filter=\"tar\"  of files outside the extraction directory.\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2004",
      "Description": "When a protocol selection parameter option disables all protocols without adding any then the default set of protocols would remain in the allowed set due to an error in the logic for removing protocols. The below command would perform a request to curl.se with a plaintext protocol which has been explicitly disabled.      curl --proto -all,-http http://curl.se  The flaw is only present if the set of selected protocols disables the entire set of available protocols, in itself a command with no practical use and therefore unlikely to be encountered in real situations. The curl security team has thus assessed this to be low severity bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2236",
      "Description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgcrypt20-1.10.3-150600.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23337",
      "Description": "jq is a command-line JSON processor. In versions up to and including 1.7.1, an integer overflow arises when assigning value using an index of 2147483647, the signed integer limit. This causes a denial of service. Commit de21386681c0df0104a99d9d09db23a9b2a78b1e contains a patch for the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:jq-1.6-150000.3.9.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libjq1-1.6-150000.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2379",
      "Description": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2398",
      "Description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2466",
      "Description": "libcurl did not check the server certificate of TLS connections done to a host specified as an IP address, when built to use mbedTLS.  libcurl would wrongly avoid using the set hostname function when the specified hostname was given as an IP address, therefore completely skipping the certificate check. This affects all uses of TLS protocols (HTTPS, FTPS, IMAPS, POPS3, SMTPS, etc).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26831",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/handshake: Fix handshake_req_destroy_test1\n\nRecently, handshake_req_destroy_test1 started failing:\n\nExpected handshake_req_destroy_test == req, but\n    handshake_req_destroy_test == 0000000000000000\n    req == 0000000060f99b40\nnot ok 11 req_destroy works\n\nThis is because \"sock_release(sock)\" was replaced with \"fput(filp)\"\nto address a memory leak. Note that sock_release() is synchronous\nbut fput() usually delays the final close and clean-up.\n\nThe delay is not consequential in the other cases that were changed\nbut handshake_req_destroy_test1 is testing that handshake_req_cancel()\nfollowed by closing the file actually does call the -\u003ehp_destroy\nmethod. Thus the PTR_EQ test at the end has to be sure that the\nfinal close is complete before it checks the pointer.\n\nWe cannot use a completion here because if -\u003ehp_destroy is never\ncalled (ie, there is an API bug) then the test will hang.\n\nReported by: Guenter Roeck \u003clinux@roeck-us.net\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35221",
      "Description": "Rubygems.org is the Ruby community's gem hosting service. A Gem publisher can cause a Remote DoS when publishing a Gem. This is due to how Ruby reads the Manifest of Gem files when using Gem::Specification.from_yaml. from_yaml makes use of SafeYAML.load which allows YAML aliases inside the YAML-based metadata of a gem. YAML aliases allow for Denial of Service attacks with so-called `YAML-bombs` (comparable to Billion laughs attacks). This was patched. There is is no action required by users. This issue is also tracked as GHSL-2024-001 and was discovered by the GitHub security lab.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libruby2_5-2_5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:ruby2.5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:ruby2.5-stdlib-2.5.9-150000.4.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36028",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix DEBUG_LOCKS_WARN_ON(1) when dissolve_free_hugetlb_folio()\n\nWhen I did memory failure tests recently, below warning occurs:\n\nDEBUG_LOCKS_WARN_ON(1)\nWARNING: CPU: 8 PID: 1011 at kernel/locking/lockdep.c:232 __lock_acquire+0xccb/0x1ca0\nModules linked in: mce_inject hwpoison_inject\nCPU: 8 PID: 1011 Comm: bash Kdump: loaded Not tainted 6.9.0-rc3-next-20240410-00012-gdb69f219f4be #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\nRIP: 0010:__lock_acquire+0xccb/0x1ca0\nRSP: 0018:ffffa7a1c7fe3bd0 EFLAGS: 00000082\nRAX: 0000000000000000 RBX: eb851eb853975fcf RCX: ffffa1ce5fc1c9c8\nRDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffffa1ce5fc1c9c0\nRBP: ffffa1c6865d3280 R08: ffffffffb0f570a8 R09: 0000000000009ffb\nR10: 0000000000000286 R11: ffffffffb0f2ad50 R12: ffffa1c6865d3d10\nR13: ffffa1c6865d3c70 R14: 0000000000000000 R15: 0000000000000004\nFS:  00007ff9f32aa740(0000) GS:ffffa1ce5fc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ff9f3134ba0 CR3: 00000008484e4000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\u003e\n lock_acquire+0xbe/0x2d0\n _raw_spin_lock_irqsave+0x3a/0x60\n hugepage_subpool_put_pages.part.0+0xe/0xc0\n free_huge_folio+0x253/0x3f0\n dissolve_free_huge_page+0x147/0x210\n __page_handle_poison+0x9/0x70\n memory_failure+0x4e6/0x8c0\n hard_offline_page_store+0x55/0xa0\n kernfs_fop_write_iter+0x12c/0x1d0\n vfs_write+0x380/0x540\n ksys_write+0x64/0xe0\n do_syscall_64+0xbc/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7ff9f3114887\nRSP: 002b:00007ffecbacb458 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 000000000000000c RCX: 00007ff9f3114887\nRDX: 000000000000000c RSI: 0000564494164e10 RDI: 0000000000000001\nRBP: 0000564494164e10 R08: 00007ff9f31d1460 R09: 000000007fffffff\nR10: 0000000000000000 R11: 0000000000000246 R12: 000000000000000c\nR13: 00007ff9f321b780 R14: 00007ff9f3217600 R15: 00007ff9f3216a00\n \u003c/TASK\u003e\nKernel panic - not syncing: kernel: panic_on_warn set ...\nCPU: 8 PID: 1011 Comm: bash Kdump: loaded Not tainted 6.9.0-rc3-next-20240410-00012-gdb69f219f4be #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n panic+0x326/0x350\n check_panic_on_warn+0x4f/0x50\n __warn+0x98/0x190\n report_bug+0x18e/0x1a0\n handle_bug+0x3d/0x70\n exc_invalid_op+0x18/0x70\n asm_exc_invalid_op+0x1a/0x20\nRIP: 0010:__lock_acquire+0xccb/0x1ca0\nRSP: 0018:ffffa7a1c7fe3bd0 EFLAGS: 00000082\nRAX: 0000000000000000 RBX: eb851eb853975fcf RCX: ffffa1ce5fc1c9c8\nRDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffffa1ce5fc1c9c0\nRBP: ffffa1c6865d3280 R08: ffffffffb0f570a8 R09: 0000000000009ffb\nR10: 0000000000000286 R11: ffffffffb0f2ad50 R12: ffffa1c6865d3d10\nR13: ffffa1c6865d3c70 R14: 0000000000000000 R15: 0000000000000004\n lock_acquire+0xbe/0x2d0\n _raw_spin_lock_irqsave+0x3a/0x60\n hugepage_subpool_put_pages.part.0+0xe/0xc0\n free_huge_folio+0x253/0x3f0\n dissolve_free_huge_page+0x147/0x210\n __page_handle_poison+0x9/0x70\n memory_failure+0x4e6/0x8c0\n hard_offline_page_store+0x55/0xa0\n kernfs_fop_write_iter+0x12c/0x1d0\n vfs_write+0x380/0x540\n ksys_write+0x64/0xe0\n do_syscall_64+0xbc/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7ff9f3114887\nRSP: 002b:00007ffecbacb458 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 000000000000000c RCX: 00007ff9f3114887\nRDX: 000000000000000c RSI: 0000564494164e10 RDI: 0000000000000001\nRBP: 0000564494164e10 R08: 00007ff9f31d1460 R09: 000000007fffffff\nR10: 0000000000000000 R11: 0000000000000246 R12: 000000000000000c\nR13: 00007ff9f321b780 R14: 00007ff9f3217600 R15: 00007ff9f3216a00\n \u003c/TASK\u003e\n\nAfter git bisecting and digging into the code, I believe the root cause is\nthat _deferred_list field of folio is unioned with _hugetlb_subpool field.\nIn __update_and_free_hugetlb_folio(), folio-\u003e_deferred_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36350",
      "Description": "A transient execution vulnerability in some AMD processors may allow an attacker to infer data from previous stores, potentially resulting in the leakage of privileged information.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:xen-libs-4.18.5_04-150600.3.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39298",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/memory-failure: fix handling of dissolved but not taken off from buddy pages\n\nWhen I did memory failure tests recently, below panic occurs:\n\npage: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x8cee00\nflags: 0x6fffe0000000000(node=1|zone=2|lastcpupid=0x7fff)\nraw: 06fffe0000000000 dead000000000100 dead000000000122 0000000000000000\nraw: 0000000000000000 0000000000000009 00000000ffffffff 0000000000000000\npage dumped because: VM_BUG_ON_PAGE(!PageBuddy(page))\n------------[ cut here ]------------\nkernel BUG at include/linux/page-flags.h:1009!\ninvalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nRIP: 0010:__del_page_from_free_list+0x151/0x180\nRSP: 0018:ffffa49c90437998 EFLAGS: 00000046\nRAX: 0000000000000035 RBX: 0000000000000009 RCX: ffff8dd8dfd1c9c8\nRDX: 0000000000000000 RSI: 0000000000000027 RDI: ffff8dd8dfd1c9c0\nRBP: ffffd901233b8000 R08: ffffffffab5511f8 R09: 0000000000008c69\nR10: 0000000000003c15 R11: ffffffffab5511f8 R12: ffff8dd8fffc0c80\nR13: 0000000000000001 R14: ffff8dd8fffc0c80 R15: 0000000000000009\nFS:  00007ff916304740(0000) GS:ffff8dd8dfd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055eae50124c8 CR3: 00000008479e0000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\u003e\n __rmqueue_pcplist+0x23b/0x520\n get_page_from_freelist+0x26b/0xe40\n __alloc_pages_noprof+0x113/0x1120\n __folio_alloc_noprof+0x11/0xb0\n alloc_buddy_hugetlb_folio.isra.0+0x5a/0x130\n __alloc_fresh_hugetlb_folio+0xe7/0x140\n alloc_pool_huge_folio+0x68/0x100\n set_max_huge_pages+0x13d/0x340\n hugetlb_sysctl_handler_common+0xe8/0x110\n proc_sys_call_handler+0x194/0x280\n vfs_write+0x387/0x550\n ksys_write+0x64/0xe0\n do_syscall_64+0xc2/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7ff916114887\nRSP: 002b:00007ffec8a2fd78 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 000055eae500e350 RCX: 00007ff916114887\nRDX: 0000000000000004 RSI: 000055eae500e390 RDI: 0000000000000003\nRBP: 000055eae50104c0 R08: 0000000000000000 R09: 000055eae50104c0\nR10: 0000000000000077 R11: 0000000000000246 R12: 0000000000000004\nR13: 0000000000000004 R14: 00007ff916216b80 R15: 00007ff916216a00\n \u003c/TASK\u003e\nModules linked in: mce_inject hwpoison_inject\n---[ end trace 0000000000000000 ]---\n\nAnd before the panic, there had an warning about bad page state:\n\nBUG: Bad page state in process page-types  pfn:8cee00\npage: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x8cee00\nflags: 0x6fffe0000000000(node=1|zone=2|lastcpupid=0x7fff)\npage_type: 0xffffff7f(buddy)\nraw: 06fffe0000000000 ffffd901241c0008 ffffd901240f8008 0000000000000000\nraw: 0000000000000000 0000000000000009 00000000ffffff7f 0000000000000000\npage dumped because: nonzero mapcount\nModules linked in: mce_inject hwpoison_inject\nCPU: 8 PID: 154211 Comm: page-types Not tainted 6.9.0-rc4-00499-g5544ec3178e2-dirty #22\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x83/0xa0\n bad_page+0x63/0xf0\n free_unref_page+0x36e/0x5c0\n unpoison_memory+0x50b/0x630\n simple_attr_write_xsigned.constprop.0.isra.0+0xb3/0x110\n debugfs_attr_write+0x42/0x60\n full_proxy_write+0x5b/0x80\n vfs_write+0xcd/0x550\n ksys_write+0x64/0xe0\n do_syscall_64+0xc2/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f189a514887\nRSP: 002b:00007ffdcd899718 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f189a514887\nRDX: 0000000000000009 RSI: 00007ffdcd899730 RDI: 0000000000000003\nRBP: 00007ffdcd8997a0 R08: 0000000000000000 R09: 00007ffdcd8994b2\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007ffdcda199a8\nR13: 0000000000404af1 R14: 000000000040ad78 R15: 00007f189a7a5040\n \u003c/TASK\u003e\n\nThe root cause should be the below race:\n\n memory_failure\n  try_memory_failure_hugetlb\n   me_huge_page\n    __page_handle_poison\n     dissolve_free_hugetlb_folio\n     drain_all_pages -- Buddy page can be isolated e.g. for compaction.\n     take_page_off_buddy -- Failed as page is not in the \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41965",
      "Description": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim \u003c v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:vim-9.1.1406-150500.20.27.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:vim-data-common-9.1.1406-150500.20.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not BUG_ON() when freeing tree block after error\n\nWhen freeing a tree block, at btrfs_free_tree_block(), if we fail to\ncreate a delayed reference we don't deal with the error and just do a\nBUG_ON(). The error most likely to happen is -ENOMEM, and we have a\ncomment mentioning that only -ENOMEM can happen, but that is not true,\nbecause in case qgroups are enabled any error returned from\nbtrfs_qgroup_trace_extent_post() (can be -EUCLEAN or anything returned\nfrom btrfs_search_slot() for example) can be propagated back to\nbtrfs_free_tree_block().\n\nSo stop doing a BUG_ON() and return the error to the callers and make\nthem abort the transaction to prevent leaking space. Syzbot was\ntriggering this, likely due to memory allocation failure injection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45310",
      "Description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:runc-1.2.6-150000.73.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45339",
      "Description": "When logs are written to a widely-writable directory (the default), an unprivileged attacker may predict a privileged process's log file path and pre-create a symbolic link to a sensitive file in its place. When that privileged process runs, it will follow the planted symlink and overwrite that sensitive file. To fix that, glog now causes the program to exit (with status code 2) when it finds that the configured log file already exists.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:google-osconfig-agent-20250416.02-150000.1.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49568",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: check v2_ext_offset/eid_cnt/ism_gid_cnt when receiving proposal msg\n\nWhen receiving proposal msg in server, the fields v2_ext_offset/\neid_cnt/ism_gid_cnt in proposal msg are from the remote client\nand can not be fully trusted. Especially the field v2_ext_offset,\nonce exceed the max value, there has the chance to access wrong\naddress, and crash may happen.\n\nThis patch checks the fields v2_ext_offset/eid_cnt/ism_gid_cnt\nbefore using them.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix helper writes to read-only maps\n\nLonial found an issue that despite user- and BPF-side frozen BPF map\n(like in case of .rodata), it was still possible to write into it from\na BPF program side through specific helpers having ARG_PTR_TO_{LONG,INT}\nas arguments.\n\nIn check_func_arg() when the argument is as mentioned, the meta-\u003eraw_mode\nis never set. Later, check_helper_mem_access(), under the case of\nPTR_TO_MAP_VALUE as register base type, it assumes BPF_READ for the\nsubsequent call to check_map_access_type() and given the BPF map is\nread-only it succeeds.\n\nThe helpers really need to be annotated as ARG_PTR_TO_{LONG,INT} | MEM_UNINIT\nwhen results are written into them as opposed to read out of them. The\nlatter indicates that it's okay to pass a pointer to uninitialized memory\nas the memory is written to anyway.\n\nHowever, ARG_PTR_TO_{LONG,INT} is a special case of ARG_PTR_TO_FIXED_SIZE_MEM\njust with additional alignment requirement. So it is better to just get\nrid of the ARG_PTR_TO_{LONG,INT} special cases altogether and reuse the\nfixed size memory types. For this, add MEM_ALIGNED to additionally ensure\nalignment given these helpers write directly into the args via *\u003cptr\u003e = val.\nThe .arg*_size has been initialized reflecting the actual sizeof(*\u003cptr\u003e).\n\nMEM_ALIGNED can only be used in combination with MEM_FIXED_SIZE annotated\nargument types, since in !MEM_FIXED_SIZE cases the verifier does not know\nthe buffer size a priori and therefore cannot blindly write *\u003cptr\u003e = val.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50106",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix race between laundromat and free_stateid\n\nThere is a race between laundromat handling of revoked delegations\nand a client sending free_stateid operation. Laundromat thread\nfinds that delegation has expired and needs to be revoked so it\nmarks the delegation stid revoked and it puts it on a reaper list\nbut then it unlock the state lock and the actual delegation revocation\nhappens without the lock. Once the stid is marked revoked a racing\nfree_stateid processing thread does the following (1) it calls\nlist_del_init() which removes it from the reaper list and (2) frees\nthe delegation stid structure. The laundromat thread ends up not\ncalling the revoke_delegation() function for this particular delegation\nbut that means it will no release the lock lease that exists on\nthe file.\n\nNow, a new open for this file comes in and ends up finding that\nlease list isn't empty and calls nfsd_breaker_owns_lease() which ends\nup trying to derefence a freed delegation stateid. Leading to the\nfollowint use-after-free KASAN warning:\n\nkernel: ==================================================================\nkernel: BUG: KASAN: slab-use-after-free in nfsd_breaker_owns_lease+0x140/0x160 [nfsd]\nkernel: Read of size 8 at addr ffff0000e73cd0c8 by task nfsd/6205\nkernel:\nkernel: CPU: 2 UID: 0 PID: 6205 Comm: nfsd Kdump: loaded Not tainted 6.11.0-rc7+ #9\nkernel: Hardware name: Apple Inc. Apple Virtualization Generic Platform, BIOS 2069.0.0.0.0 08/03/2024\nkernel: Call trace:\nkernel: dump_backtrace+0x98/0x120\nkernel: show_stack+0x1c/0x30\nkernel: dump_stack_lvl+0x80/0xe8\nkernel: print_address_description.constprop.0+0x84/0x390\nkernel: print_report+0xa4/0x268\nkernel: kasan_report+0xb4/0xf8\nkernel: __asan_report_load8_noabort+0x1c/0x28\nkernel: nfsd_breaker_owns_lease+0x140/0x160 [nfsd]\nkernel: nfsd_file_do_acquire+0xb3c/0x11d0 [nfsd]\nkernel: nfsd_file_acquire_opened+0x84/0x110 [nfsd]\nkernel: nfs4_get_vfs_file+0x634/0x958 [nfsd]\nkernel: nfsd4_process_open2+0xa40/0x1a40 [nfsd]\nkernel: nfsd4_open+0xa08/0xe80 [nfsd]\nkernel: nfsd4_proc_compound+0xb8c/0x2130 [nfsd]\nkernel: nfsd_dispatch+0x22c/0x718 [nfsd]\nkernel: svc_process_common+0x8e8/0x1960 [sunrpc]\nkernel: svc_process+0x3d4/0x7e0 [sunrpc]\nkernel: svc_handle_xprt+0x828/0xe10 [sunrpc]\nkernel: svc_recv+0x2cc/0x6a8 [sunrpc]\nkernel: nfsd+0x270/0x400 [nfsd]\nkernel: kthread+0x288/0x310\nkernel: ret_from_fork+0x10/0x20\n\nThis patch proposes a fixed that's based on adding 2 new additional\nstid's sc_status values that help coordinate between the laundromat\nand other operations (nfsd4_free_stateid() and nfsd4_delegreturn()).\n\nFirst to make sure, that once the stid is marked revoked, it is not\nremoved by the nfsd4_free_stateid(), the laundromat take a reference\non the stateid. Then, coordinating whether the stid has been put\non the cl_revoked list or we are processing FREE_STATEID and need to\nmake sure to remove it from the list, each check that state and act\naccordingly. If laundromat has added to the cl_revoke list before\nthe arrival of FREE_STATEID, then nfsd4_free_stateid() knows to remove\nit from the list. If nfsd4_free_stateid() finds that operations arrived\nbefore laundromat has placed it on cl_revoke list, it marks the state\nfreed and then laundromat will no longer add it to the list.\n\nAlso, for nfsd4_delegreturn() when looking for the specified stid,\nwe need to access stid that are marked removed or freeable, it means\nthe laundromat has started processing it but hasn't finished and this\ndelegreturn needs to return nfserr_deleg_revoked and not\nnfserr_bad_stateid. The latter will not trigger a FREE_STATEID and the\nlack of it will leave this stid on the cl_revoked list indefinitely.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56613",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/numa: fix memory leak due to the overwritten vma-\u003enumab_state\n\n[Problem Description]\nWhen running the hackbench program of LTP, the following memory leak is\nreported by kmemleak.\n\n  # /opt/ltp/testcases/bin/hackbench 20 thread 1000\n  Running with 20*40 (== 800) tasks.\n\n  # dmesg | grep kmemleak\n  ...\n  kmemleak: 480 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n  kmemleak: 665 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n\n  # cat /sys/kernel/debug/kmemleak\n  unreferenced object 0xffff888cd8ca2c40 (size 64):\n    comm \"hackbench\", pid 17142, jiffies 4299780315\n    hex dump (first 32 bytes):\n      ac 74 49 00 01 00 00 00 4c 84 49 00 01 00 00 00  .tI.....L.I.....\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace (crc bff18fd4):\n      [\u003cffffffff81419a89\u003e] __kmalloc_cache_noprof+0x2f9/0x3f0\n      [\u003cffffffff8113f715\u003e] task_numa_work+0x725/0xa00\n      [\u003cffffffff8110f878\u003e] task_work_run+0x58/0x90\n      [\u003cffffffff81ddd9f8\u003e] syscall_exit_to_user_mode+0x1c8/0x1e0\n      [\u003cffffffff81dd78d5\u003e] do_syscall_64+0x85/0x150\n      [\u003cffffffff81e0012b\u003e] entry_SYSCALL_64_after_hwframe+0x76/0x7e\n  ...\n\nThis issue can be consistently reproduced on three different servers:\n  * a 448-core server\n  * a 256-core server\n  * a 192-core server\n\n[Root Cause]\nSince multiple threads are created by the hackbench program (along with\nthe command argument 'thread'), a shared vma might be accessed by two or\nmore cores simultaneously. When two or more cores observe that\nvma-\u003enumab_state is NULL at the same time, vma-\u003enumab_state will be\noverwritten.\n\nAlthough current code ensures that only one thread scans the VMAs in a\nsingle 'numa_scan_period', there might be a chance for another thread\nto enter in the next 'numa_scan_period' while we have not gotten till\nnumab_state allocation [1].\n\nNote that the command `/opt/ltp/testcases/bin/hackbench 50 process 1000`\ncannot the reproduce the issue. It is verified with 200+ test runs.\n\n[Solution]\nUse the cmpxchg atomic operation to ensure that only one thread executes\nthe vma-\u003enumab_state assignment.\n\n[1] https://lore.kernel.org/lkml/1794be3c-358c-4cdc-a43d-a1f841d91ef7@amd.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56699",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pci: Fix potential double remove of hotplug slot\n\nIn commit 6ee600bfbe0f (\"s390/pci: remove hotplug slot when releasing the\ndevice\") the zpci_exit_slot() was moved from zpci_device_reserved() to\nzpci_release_device() with the intention of keeping the hotplug slot\naround until the device is actually removed.\n\nNow zpci_release_device() is only called once all references are\ndropped. Since the zPCI subsystem only drops its reference once the\ndevice is in the reserved state it follows that zpci_release_device()\nmust only deal with devices in the reserved state. Despite that it\ncontains code to tear down from both configured and standby state. For\nthe standby case this already includes the removal of the hotplug slot\nso would cause a double removal if a device was ever removed in\neither configured or standby state.\n\nInstead of causing a potential double removal in a case that should\nnever happen explicitly WARN_ON() if a device in non-reserved state is\nreleased and get rid of the dead code cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56738",
      "Description": "GNU GRUB (aka GRUB2) through 2.12 does not use a constant-time algorithm for grub_crypto_memcmp and thus allows side-channel attacks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:grub2-2.12-150600.8.34.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:grub2-i386-pc-2.12-150600.8.34.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:grub2-x86_64-efi-2.12-150600.8.34.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56742",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/mlx5: Fix an unwind issue in mlx5vf_add_migration_pages()\n\nFix an unwind issue in mlx5vf_add_migration_pages().\n\nIf a set of pages is allocated but fails to be added to the SG table,\nthey need to be freed to prevent a memory leak.\n\nAny pages successfully added to the SG table will be freed as part of\nmlx5vf_free_data_buffer().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_set_pipapo: fix initial map fill\n\nThe initial buffer has to be inited to all-ones, but it must restrict\nit to the size of the first field, not the total field size.\n\nAfter each round in the map search step, the result and the fill map\nare swapped, so if we have a set where f-\u003ebsize of the first element\nis smaller than m-\u003ebsize_max, those one-bits are leaked into future\nrounds result map.\n\nThis makes pipapo find an incorrect matching results for sets where\nfirst field size is not the largest.\n\nFollowup patch adds a test case to nft_concat_range.sh selftest script.\n\nThanks to Stefano Brivio for pointing out that we need to zero out\nthe remainder explicitly, only correcting memset() argument isn't enough.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: state: fix out-of-bounds read during lookup\n\nlookup and resize can run in parallel.\n\nThe xfrm_state_hash_generation seqlock ensures a retry, but the hash\nfunctions can observe a hmask value that is too large for the new hlist\narray.\n\nrehash does:\n  rcu_assign_pointer(net-\u003exfrm.state_bydst, ndst) [..]\n  net-\u003exfrm.state_hmask = nhashmask;\n\nWhile state lookup does:\n  h = xfrm_dst_hash(net, daddr, saddr, tmpl-\u003ereqid, encap_family);\n  hlist_for_each_entry_rcu(x, net-\u003exfrm.state_bydst + h, bydst) {\n\nThis is only safe in case the update to state_bydst is larger than\nnet-\u003exfrm.xfrm_state_hmask (or if the lookup function gets\nserialized via state spinlock again).\n\nFix this by prefetching state_hmask and the associated pointers.\nThe xfrm_state_hash_generation seqlock retry will ensure that the pointer\nand the hmask will be consistent.\n\nThe existing helpers, like xfrm_dst_hash(), are now unsafe for RCU side,\nadd lockdep assertions to document that they are only safe for insert\nside.\n\nxfrm_state_lookup_byaddr() uses the spinlock rather than RCU.\nAFAICS this is an oversight from back when state lookup was converted to\nRCU, this lock should be replaced with RCU in a future patch.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix handling of received connection abort\n\nFix the handling of a connection abort that we've received.  Though the\nabort is at the connection level, it needs propagating to the calls on that\nconnection.  Whilst the propagation bit is performed, the calls aren't then\nwoken up to go and process their termination, and as no further input is\nforthcoming, they just hang.\n\nAlso add some tracing for the logging of connection aborts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6197",
      "Description": "libcurl's ASN1 parser has this utf8asn1str() function used for parsing an ASN.1 UTF-8 string. Itcan detect an invalid field and return error. Unfortunately, when doing so it also invokes `free()` on a 4 byte localstack buffer.  Most modern malloc implementations detect this error and immediately abort. Some however accept the input pointer and add that memory to its list of available chunks. This leads to the overwriting of nearby stack memory. The content of the overwrite is decided by the `free()` implementation; likely to be memory pointers and a set of flags.  The most likely outcome of exploting this flaw is a crash, although it cannot be ruled out that more serious results can be had in special circumstances.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7264",
      "Description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8096",
      "Description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-9681",
      "Description": "When curl is asked to use HSTS, the expiry time for a subdomain might\noverwrite a parent domain's cache entry, making it end sooner or later than\notherwise intended.\n\nThis affects curl using applications that enable HSTS and use URLs with the\ninsecure `HTTP://` scheme and perform transfers with hosts like\n`x.example.com` as well as `example.com` where the first host is a subdomain\nof the second host.\n\n(The HSTS cache either needs to have been populated manually or there needs to\nhave been previous HTTPS accesses done as the cache needs to have entries for\nthe domains involved to trigger this problem.)\n\nWhen `x.example.com` responds with `Strict-Transport-Security:` headers, this\nbug can make the subdomain's expiry timeout *bleed over* and get set for the\nparent domain `example.com` in curl's HSTS cache.\n\nThe result of a triggered bug is that HTTP accesses to `example.com` get\nconverted to HTTPS for a different period of time than what was asked for by\nthe origin server. If `example.com` for example stops supporting HTTPS at its\nexpiry time, curl might then fail to access `http://example.com` until the\n(wrongly set) timeout expires. This bug can also expire the parent's entry\n*earlier*, thus making curl inadvertently switch back to insecure HTTP earlier\nthan otherwise intended.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0167",
      "Description": "When asked to use a `.netrc` file for credentials **and** to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has a `default` entry that\nomits both login and password. A rare circumstance.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0495",
      "Description": "Buildx is a Docker CLI plugin that extends build capabilities using BuildKit.\n\nCache backends support credentials by setting secrets directly as attribute values in cache-to/cache-from  configuration. When supplied as user input, these secure values may be inadvertently captured in OpenTelemetry traces as part of the arguments and flags for the traced CLI command.  OpenTelemetry traces are also saved in BuildKit daemon's history records.\n\n\nThis vulnerability does not impact secrets passed to the Github cache backend  via environment variables or registry authentication.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0665",
      "Description": "libcurl would wrongly close the same eventfd file descriptor twice when taking\ndown a connection channel after having completed a threaded name resolve.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0725",
      "Description": "When libcurl is asked to perform automatic gzip decompression of\ncontent-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option,\n**using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would\nmake libcurl perform a buffer overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-10148",
      "Description": "curl's websocket code did not update the 32 bit mask pattern for each new\n outgoing frame as the specification says. Instead it used a fixed mask that\npersisted and was used throughout the entire connection.\n\nA predictable mask pattern allows for a malicious server to induce traffic\nbetween the two communicating parties that could be interpreted by an involved\nproxy (configured or transparent) as genuine, real, HTTP traffic with content\nand thereby poison its cache. That cached poisoned content could then be\nserved to all users of that proxy.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21658",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: avoid NULL pointer dereference if no valid extent tree\n\n[BUG]\nSyzbot reported a crash with the following call trace:\n\n  BTRFS info (device loop0): scrub: started on devid 1\n  BUG: kernel NULL pointer dereference, address: 0000000000000208\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 106e70067 P4D 106e70067 PUD 107143067 PMD 0\n  Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 1 UID: 0 PID: 689 Comm: repro Kdump: loaded Tainted: G           O       6.13.0-rc4-custom+ #206\n  Tainted: [O]=OOT_MODULE\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n  RIP: 0010:find_first_extent_item+0x26/0x1f0 [btrfs]\n  Call Trace:\n   \u003cTASK\u003e\n   scrub_find_fill_first_stripe+0x13d/0x3b0 [btrfs]\n   scrub_simple_mirror+0x175/0x260 [btrfs]\n   scrub_stripe+0x5d4/0x6c0 [btrfs]\n   scrub_chunk+0xbb/0x170 [btrfs]\n   scrub_enumerate_chunks+0x2f4/0x5f0 [btrfs]\n   btrfs_scrub_dev+0x240/0x600 [btrfs]\n   btrfs_ioctl+0x1dc8/0x2fa0 [btrfs]\n   ? do_sys_openat2+0xa5/0xf0\n   __x64_sys_ioctl+0x97/0xc0\n   do_syscall_64+0x4f/0x120\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n   \u003c/TASK\u003e\n\n[CAUSE]\nThe reproducer is using a corrupted image where extent tree root is\ncorrupted, thus forcing to use \"rescue=all,ro\" mount option to mount the\nimage.\n\nThen it triggered a scrub, but since scrub relies on extent tree to find\nwhere the data/metadata extents are, scrub_find_fill_first_stripe()\nrelies on an non-empty extent root.\n\nBut unfortunately scrub_find_fill_first_stripe() doesn't really expect\nan NULL pointer for extent root, it use extent_root to grab fs_info and\ntriggered a NULL pointer dereference.\n\n[FIX]\nAdd an extra check for a valid extent root at the beginning of\nscrub_find_fill_first_stripe().\n\nThe new error path is introduced by 42437a6386ff (\"btrfs: introduce\nmount option rescue=ignorebadroots\"), but that's pretty old, and later\ncommit b979547513ff (\"btrfs: scrub: introduce helper to find and fill\nsector info for a scrub_stripe\") changed how we do scrub.\n\nSo for kernels older than 6.6, the fix will need manual backport.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21720",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: delete intermediate secpath entry in packet offload mode\n\nPackets handled by hardware have added secpath as a way to inform XFRM\ncore code that this path was already handled. That secpath is not needed\nat all after policy is checked and it is removed later in the stack.\n\nHowever, in the case of IP forwarding is enabled (/proc/sys/net/ipv4/ip_forward),\nthat secpath is not removed and packets which already were handled are reentered\nto the driver TX path with xfrm_offload set.\n\nThe following kernel panic is observed in mlx5 in such case:\n\n mlx5_core 0000:04:00.0 enp4s0f0np0: Link up\n mlx5_core 0000:04:00.1 enp4s0f1np1: Link up\n Initializing XFRM netlink socket\n IPsec XFRM device driver\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n #PF: supervisor instruction fetch in kernel mode\n #PF: error_code(0x0010) - not-present page\n PGD 0 P4D 0\n Oops: Oops: 0010 [#1] PREEMPT SMP\n CPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted 6.13.0-rc1-alex #3\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n RIP: 0010:0x0\n Code: Unable to access opcode bytes at 0xffffffffffffffd6.\n RSP: 0018:ffffb87380003800 EFLAGS: 00010206\n RAX: ffff8df004e02600 RBX: ffffb873800038d8 RCX: 00000000ffff98cf\n RDX: ffff8df00733e108 RSI: ffff8df00521fb80 RDI: ffff8df001661f00\n RBP: ffffb87380003850 R08: ffff8df013980000 R09: 0000000000000010\n R10: 0000000000000002 R11: 0000000000000002 R12: ffff8df001661f00\n R13: ffff8df00521fb80 R14: ffff8df00733e108 R15: ffff8df011faf04e\n FS:  0000000000000000(0000) GS:ffff8df46b800000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: ffffffffffffffd6 CR3: 0000000106384000 CR4: 0000000000350ef0\n Call Trace:\n  \u003cIRQ\u003e\n  ? show_regs+0x63/0x70\n  ? __die_body+0x20/0x60\n  ? __die+0x2b/0x40\n  ? page_fault_oops+0x15c/0x550\n  ? do_user_addr_fault+0x3ed/0x870\n  ? exc_page_fault+0x7f/0x190\n  ? asm_exc_page_fault+0x27/0x30\n  mlx5e_ipsec_handle_tx_skb+0xe7/0x2f0 [mlx5_core]\n  mlx5e_xmit+0x58e/0x1980 [mlx5_core]\n  ? __fib_lookup+0x6a/0xb0\n  dev_hard_start_xmit+0x82/0x1d0\n  sch_direct_xmit+0xfe/0x390\n  __dev_queue_xmit+0x6d8/0xee0\n  ? __fib_lookup+0x6a/0xb0\n  ? internal_add_timer+0x48/0x70\n  ? mod_timer+0xe2/0x2b0\n  neigh_resolve_output+0x115/0x1b0\n  __neigh_update+0x26a/0xc50\n  neigh_update+0x14/0x20\n  arp_process+0x2cb/0x8e0\n  ? __napi_build_skb+0x5e/0x70\n  arp_rcv+0x11e/0x1c0\n  ? dev_gro_receive+0x574/0x820\n  __netif_receive_skb_list_core+0x1cf/0x1f0\n  netif_receive_skb_list_internal+0x183/0x2a0\n  napi_complete_done+0x76/0x1c0\n  mlx5e_napi_poll+0x234/0x7a0 [mlx5_core]\n  __napi_poll+0x2d/0x1f0\n  net_rx_action+0x1a6/0x370\n  ? atomic_notifier_call_chain+0x3b/0x50\n  ? irq_int_handler+0x15/0x20 [mlx5_core]\n  handle_softirqs+0xb9/0x2f0\n  ? handle_irq_event+0x44/0x60\n  irq_exit_rcu+0xdb/0x100\n  common_interrupt+0x98/0xc0\n  \u003c/IRQ\u003e\n  \u003cTASK\u003e\n  asm_common_interrupt+0x27/0x40\n RIP: 0010:pv_native_safe_halt+0xb/0x10\n Code: 09 c3 66 66 2e 0f 1f 84 00 00 00 00 00 66 90 0f 22\n 0f 1f 84 00 00 00 00 00 90 eb 07 0f 00 2d 7f e9 36 00 fb\n40 00 83 ff 07 77 21 89 ff ff 24 fd 88 3d a1 bd 0f 21 f8\n RSP: 0018:ffffffffbe603de8 EFLAGS: 00000202\n RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000f92f46680\n RDX: 0000000000000037 RSI: 00000000ffffffff RDI: 00000000000518d4\n RBP: ffffffffbe603df0 R08: 000000cd42e4dffb R09: ffffffffbe603d70\n R10: 0000004d80d62680 R11: 0000000000000001 R12: ffffffffbe60bf40\n R13: 0000000000000000 R14: 0000000000000000 R15: ffffffffbe60aff8\n  ? default_idle+0x9/0x20\n  arch_cpu_idle+0x9/0x10\n  default_idle_call+0x29/0xf0\n  do_idle+0x1f2/0x240\n  cpu_startup_entry+0x2c/0x30\n  rest_init+0xe7/0x100\n  start_kernel+0x76b/0xb90\n  x86_64_start_reservations+0x18/0x30\n  x86_64_start_kernel+0xc0/0x110\n  ? setup_ghcb+0xe/0x130\n  common_startup_64+0x13e/0x141\n  \u003c/TASK\u003e\n Modules linked in: esp4_offload esp4 xfrm_interface\nxfrm6_tunnel tunnel4 tunnel6 xfrm_user xfrm_algo binf\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21839",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Load DR6 with guest value only before entering .vcpu_run() loop\n\nMove the conditional loading of hardware DR6 with the guest's DR6 value\nout of the core .vcpu_run() loop to fix a bug where KVM can load hardware\nwith a stale vcpu-\u003earch.dr6.\n\nWhen the guest accesses a DR and host userspace isn't debugging the guest,\nKVM disables DR interception and loads the guest's values into hardware on\nVM-Enter and saves them on VM-Exit.  This allows the guest to access DRs\nat will, e.g. so that a sequence of DR accesses to configure a breakpoint\nonly generates one VM-Exit.\n\nFor DR0-DR3, the logic/behavior is identical between VMX and SVM, and also\nidentical between KVM_DEBUGREG_BP_ENABLED (userspace debugging the guest)\nand KVM_DEBUGREG_WONT_EXIT (guest using DRs), and so KVM handles loading\nDR0-DR3 in common code, _outside_ of the core kvm_x86_ops.vcpu_run() loop.\n\nBut for DR6, the guest's value doesn't need to be loaded into hardware for\nKVM_DEBUGREG_BP_ENABLED, and SVM provides a dedicated VMCB field whereas\nVMX requires software to manually load the guest value, and so loading the\nguest's value into DR6 is handled by {svm,vmx}_vcpu_run(), i.e. is done\n_inside_ the core run loop.\n\nUnfortunately, saving the guest values on VM-Exit is initiated by common\nx86, again outside of the core run loop.  If the guest modifies DR6 (in\nhardware, when DR interception is disabled), and then the next VM-Exit is\na fastpath VM-Exit, KVM will reload hardware DR6 with vcpu-\u003earch.dr6 and\nclobber the guest's actual value.\n\nThe bug shows up primarily with nested VMX because KVM handles the VMX\npreemption timer in the fastpath, and the window between hardware DR6\nbeing modified (in guest context) and DR6 being read by guest software is\norders of magnitude larger in a nested setup.  E.g. in non-nested, the\nVMX preemption timer would need to fire precisely between #DB injection\nand the #DB handler's read of DR6, whereas with a KVM-on-KVM setup, the\nwindow where hardware DR6 is \"dirty\" extends all the way from L1 writing\nDR6 to VMRESUME (in L1).\n\n    L1's view:\n    ==========\n    \u003cL1 disables DR interception\u003e\n           CPU 0/KVM-7289    [023] d....  2925.640961: kvm_entry: vcpu 0\n A:  L1 Writes DR6\n           CPU 0/KVM-7289    [023] d....  2925.640963: \u003chack\u003e: Set DRs, DR6 = 0xffff0ff1\n\n B:        CPU 0/KVM-7289    [023] d....  2925.640967: kvm_exit: vcpu 0 reason EXTERNAL_INTERRUPT intr_info 0x800000ec\n\n D: L1 reads DR6, arch.dr6 = 0\n           CPU 0/KVM-7289    [023] d....  2925.640969: \u003chack\u003e: Sync DRs, DR6 = 0xffff0ff0\n\n           CPU 0/KVM-7289    [023] d....  2925.640976: kvm_entry: vcpu 0\n    L2 reads DR6, L1 disables DR interception\n           CPU 0/KVM-7289    [023] d....  2925.640980: kvm_exit: vcpu 0 reason DR_ACCESS info1 0x0000000000000216\n           CPU 0/KVM-7289    [023] d....  2925.640983: kvm_entry: vcpu 0\n\n           CPU 0/KVM-7289    [023] d....  2925.640983: \u003chack\u003e: Set DRs, DR6 = 0xffff0ff0\n\n    L2 detects failure\n           CPU 0/KVM-7289    [023] d....  2925.640987: kvm_exit: vcpu 0 reason HLT\n    L1 reads DR6 (confirms failure)\n           CPU 0/KVM-7289    [023] d....  2925.640990: \u003chack\u003e: Sync DRs, DR6 = 0xffff0ff0\n\n    L0's view:\n    ==========\n    L2 reads DR6, arch.dr6 = 0\n          CPU 23/KVM-5046    [001] d....  3410.005610: kvm_exit: vcpu 23 reason DR_ACCESS info1 0x0000000000000216\n          CPU 23/KVM-5046    [001] .....  3410.005610: kvm_nested_vmexit: vcpu 23 reason DR_ACCESS info1 0x0000000000000216\n\n    L2 =\u003e L1 nested VM-Exit\n          CPU 23/KVM-5046    [001] .....  3410.005610: kvm_nested_vmexit_inject: reason: DR_ACCESS ext_inf1: 0x0000000000000216\n\n          CPU 23/KVM-5046    [001] d....  3410.005610: kvm_entry: vcpu 23\n          CPU 23/KVM-5046    [001] d....  3410.005611: kvm_exit: vcpu 23 reason VMREAD\n          CPU 23/KVM-5046    [001] d....  3410.005611: kvm_entry: vcpu 23\n          CPU 23/KVM-5046    [001] d....  3410.\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsockmap, vsock: For connectible sockets allow only connected\n\nsockmap expects all vsocks to have a transport assigned, which is expressed\nin vsock_proto::psock_update_sk_prot(). However, there is an edge case\nwhere an unconnected (connectible) socket may lose its previously assigned\ntransport. This is handled with a NULL check in the vsock/BPF recv path.\n\nAnother design detail is that listening vsocks are not supposed to have any\ntransport assigned at all. Which implies they are not supported by the\nsockmap. But this is complicated by the fact that a socket, before\nswitching to TCP_LISTEN, may have had some transport assigned during a\nfailed connect() attempt. Hence, we may end up with a listening vsock in a\nsockmap, which blows up quickly:\n\nKASAN: null-ptr-deref in range [0x0000000000000120-0x0000000000000127]\nCPU: 7 UID: 0 PID: 56 Comm: kworker/7:0 Not tainted 6.14.0-rc1+\nWorkqueue: vsock-loopback vsock_loopback_work\nRIP: 0010:vsock_read_skb+0x4b/0x90\nCall Trace:\n sk_psock_verdict_data_ready+0xa4/0x2e0\n virtio_transport_recv_pkt+0x1ca8/0x2acc\n vsock_loopback_work+0x27d/0x3f0\n process_one_work+0x846/0x1420\n worker_thread+0x5b3/0xf80\n kthread+0x35a/0x700\n ret_from_fork+0x2d/0x70\n ret_from_fork_asm+0x1a/0x30\n\nFor connectible sockets, instead of relying solely on the state of\nvsk-\u003etransport, tell sockmap to only allow those representing established\nconnections. This aligns with the behaviour for AF_INET and AF_UNIX.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21872",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi: Don't map the entire mokvar table to determine its size\n\nCurrently, when validating the mokvar table, we (re)map the entire table\non each iteration of the loop, adding space as we discover new entries.\nIf the table grows over a certain size, this fails due to limitations of\nearly_memmap(), and we get a failure and traceback:\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 0 PID: 0 at mm/early_ioremap.c:139 __early_ioremap+0xef/0x220\n  ...\n  Call Trace:\n   \u003cTASK\u003e\n   ? __early_ioremap+0xef/0x220\n   ? __warn.cold+0x93/0xfa\n   ? __early_ioremap+0xef/0x220\n   ? report_bug+0xff/0x140\n   ? early_fixup_exception+0x5d/0xb0\n   ? early_idt_handler_common+0x2f/0x3a\n   ? __early_ioremap+0xef/0x220\n   ? efi_mokvar_table_init+0xce/0x1d0\n   ? setup_arch+0x864/0xc10\n   ? start_kernel+0x6b/0xa10\n   ? x86_64_start_reservations+0x24/0x30\n   ? x86_64_start_kernel+0xed/0xf0\n   ? common_startup_64+0x13e/0x141\n   \u003c/TASK\u003e\n  ---[ end trace 0000000000000000 ]---\n  mokvar: Failed to map EFI MOKvar config table pa=0x7c4c3000, size=265187.\n\nMapping the entire structure isn't actually necessary, as we don't ever\nneed more than one entry header mapped at once.\n\nChanges efi_mokvar_table_init() to only map each entry header, not the\nentire table, when determining the table size.  Since we're not mapping\nany data past the variable name, it also changes the code to enforce\nthat each variable name is NUL terminated, rather than attempting to\nverify it in place.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Avoid potential division by zero in function_stat_show()\n\nCheck whether denominator expression x * (x - 1) * 1000 mod {2^32, 2^64}\nproduce zero and skip stddev computation in that case.\n\nFor now don't care about rec-\u003ecounter * rec-\u003ecounter overflow because\nrec-\u003etime * rec-\u003etime overflow will likely happen earlier.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21899",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix bad hist from corrupting named_triggers list\n\nThe following commands causes a crash:\n\n ~# cd /sys/kernel/tracing/events/rcu/rcu_callback\n ~# echo 'hist:name=bad:keys=common_pid:onmax(bogus).save(common_pid)' \u003e trigger\n bash: echo: write error: Invalid argument\n ~# echo 'hist:name=bad:keys=common_pid' \u003e trigger\n\nBecause the following occurs:\n\nevent_trigger_write() {\n  trigger_process_regex() {\n    event_hist_trigger_parse() {\n\n      data = event_trigger_alloc(..);\n\n      event_trigger_register(.., data) {\n        cmd_ops-\u003ereg(.., data, ..) [hist_register_trigger()] {\n          data-\u003eops-\u003einit() [event_hist_trigger_init()] {\n            save_named_trigger(name, data) {\n              list_add(\u0026data-\u003enamed_list, \u0026named_triggers);\n            }\n          }\n        }\n      }\n\n      ret = create_actions(); (return -EINVAL)\n      if (ret)\n        goto out_unreg;\n[..]\n      ret = hist_trigger_enable(data, ...) {\n        list_add_tail_rcu(\u0026data-\u003elist, \u0026file-\u003etriggers); \u003c\u003c\u003c---- SKIPPED!!! (this is important!)\n[..]\n out_unreg:\n      event_hist_unregister(.., data) {\n        cmd_ops-\u003eunreg(.., data, ..) [hist_unregister_trigger()] {\n          list_for_each_entry(iter, \u0026file-\u003etriggers, list) {\n            if (!hist_trigger_match(data, iter, named_data, false))   \u003c- never matches\n                continue;\n            [..]\n            test = iter;\n          }\n          if (test \u0026\u0026 test-\u003eops-\u003efree) \u003c\u003c\u003c-- test is NULL\n\n            test-\u003eops-\u003efree(test) [event_hist_trigger_free()] {\n              [..]\n              if (data-\u003ename)\n                del_named_trigger(data) {\n                  list_del(\u0026data-\u003enamed_list);  \u003c\u003c\u003c\u003c-- NEVER gets removed!\n                }\n              }\n           }\n         }\n\n         [..]\n         kfree(data); \u003c\u003c\u003c-- frees item but it is still on list\n\nThe next time a hist with name is registered, it causes an u-a-f bug and\nthe kernel can crash.\n\nMove the code around such that if event_trigger_register() succeeds, the\nnext thing called is hist_trigger_enable() which adds it to the list.\n\nA bunch of actions is called if get_named_trigger_data() returns false.\nBut that doesn't need to be called after event_trigger_register(), so it\ncan be moved up, allowing event_trigger_register() to be called just\nbefore hist_trigger_enable() keeping them together and allowing the\nfile-\u003etriggers to be properly populated.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvlan: enforce underlying device type\n\nCurrently, VLAN devices can be created on top of non-ethernet devices.\n\nBesides the fact that it doesn't make much sense, this also causes a\nbug which leaks the address of a kernel function to usermode.\n\nWhen creating a VLAN device, we initialize GARP (garp_init_applicant)\nand MRP (mrp_init_applicant) for the underlying device.\n\nAs part of the initialization process, we add the multicast address of\neach applicant to the underlying device, by calling dev_mc_add.\n\n__dev_mc_add uses dev-\u003eaddr_len to determine the length of the new\nmulticast address.\n\nThis causes an out-of-bounds read if dev-\u003eaddr_len is greater than 6,\nsince the multicast addresses provided by GARP and MRP are only 6\nbytes long.\n\nThis behaviour can be reproduced using the following commands:\n\nip tunnel add gretest mode ip6gre local ::1 remote ::2 dev lo\nip l set up dev gretest\nip link add link gretest name vlantest type vlan id 100\n\nThen, the following command will display the address of garp_pdu_rcv:\n\nip maddr show | grep 01:80:c2:00:00:21\n\nFix the bug by enforcing the type of the underlying device during VLAN\ndevice initialization.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: fix an integer overflow in xp_create_and_assign_umem()\n\nSince the i and pool-\u003echunk_size variables are of type 'u32',\ntheir product can wrap around and then be cast to 'u64'.\nThis can lead to two different XDP buffers pointing to the same\nmemory area.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22035",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix use-after-free in print_graph_function_flags during tracer switching\n\nKairui reported a UAF issue in print_graph_function_flags() during\nftrace stress testing [1]. This issue can be reproduced if puting a\n'mdelay(10)' after 'mutex_unlock(\u0026trace_types_lock)' in s_start(),\nand executing the following script:\n\n  $ echo function_graph \u003e current_tracer\n  $ cat trace \u003e /dev/null \u0026\n  $ sleep 5  # Ensure the 'cat' reaches the 'mdelay(10)' point\n  $ echo timerlat \u003e current_tracer\n\nThe root cause lies in the two calls to print_graph_function_flags\nwithin print_trace_line during each s_show():\n\n  * One through 'iter-\u003etrace-\u003eprint_line()';\n  * Another through 'event-\u003efuncs-\u003etrace()', which is hidden in\n    print_trace_fmt() before print_trace_line returns.\n\nTracer switching only updates the former, while the latter continues\nto use the print_line function of the old tracer, which in the script\nabove is print_graph_function_flags.\n\nMoreover, when switching from the 'function_graph' tracer to the\n'timerlat' tracer, s_start only calls graph_trace_close of the\n'function_graph' tracer to free 'iter-\u003eprivate', but does not set\nit to NULL. This provides an opportunity for 'event-\u003efuncs-\u003etrace()'\nto use an invalid 'iter-\u003eprivate'.\n\nTo fix this issue, set 'iter-\u003eprivate' to NULL immediately after\nfreeing it in graph_trace_close(), ensuring that an invalid pointer\nis not passed to other tracers. Additionally, clean up the unnecessary\n'iter-\u003eprivate = NULL' during each 'cat trace' when using wakeup and\nirqsoff tracers.\n\n [1] https://lore.kernel.org/all/20231112150030.84609-1-ryncsn@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvhost-scsi: Fix handling of multiple calls to vhost_scsi_set_endpoint\n\nIf vhost_scsi_set_endpoint is called multiple times without a\nvhost_scsi_clear_endpoint between them, we can hit multiple bugs\nfound by Haoran Zhang:\n\n1. Use-after-free when no tpgs are found:\n\nThis fixes a use after free that occurs when vhost_scsi_set_endpoint is\ncalled more than once and calls after the first call do not find any\ntpgs to add to the vs_tpg. When vhost_scsi_set_endpoint first finds\ntpgs to add to the vs_tpg array match=true, so we will do:\n\nvhost_vq_set_backend(vq, vs_tpg);\n...\n\nkfree(vs-\u003evs_tpg);\nvs-\u003evs_tpg = vs_tpg;\n\nIf vhost_scsi_set_endpoint is called again and no tpgs are found\nmatch=false so we skip the vhost_vq_set_backend call leaving the\npointer to the vs_tpg we then free via:\n\nkfree(vs-\u003evs_tpg);\nvs-\u003evs_tpg = vs_tpg;\n\nIf a scsi request is then sent we do:\n\nvhost_scsi_handle_vq -\u003e vhost_scsi_get_req -\u003e vhost_vq_get_backend\n\nwhich sees the vs_tpg we just did a kfree on.\n\n2. Tpg dir removal hang:\n\nThis patch fixes an issue where we cannot remove a LIO/target layer\ntpg (and structs above it like the target) dir due to the refcount\ndropping to -1.\n\nThe problem is that if vhost_scsi_set_endpoint detects a tpg is already\nin the vs-\u003evs_tpg array or if the tpg has been removed so\ntarget_depend_item fails, the undepend goto handler will do\ntarget_undepend_item on all tpgs in the vs_tpg array dropping their\nrefcount to 0. At this time vs_tpg contains both the tpgs we have added\nin the current vhost_scsi_set_endpoint call as well as tpgs we added in\nprevious calls which are also in vs-\u003evs_tpg.\n\nLater, when vhost_scsi_clear_endpoint runs it will do\ntarget_undepend_item on all the tpgs in the vs-\u003evs_tpg which will drop\ntheir refcount to -1. Userspace will then not be able to remove the tpg\nand will hang when it tries to do rmdir on the tpg dir.\n\n3. Tpg leak:\n\nThis fixes a bug where we can leak tpgs and cause them to be\nun-removable because the target name is overwritten when\nvhost_scsi_set_endpoint is called multiple times but with different\ntarget names.\n\nThe bug occurs if a user has called VHOST_SCSI_SET_ENDPOINT and setup\na vhost-scsi device to target/tpg mapping, then calls\nVHOST_SCSI_SET_ENDPOINT again with a new target name that has tpgs we\nhaven't seen before (target1 has tpg1 but target2 has tpg2). When this\nhappens we don't teardown the old target tpg mapping and just overwrite\nthe target name and the vs-\u003evs_tpg array. Later when we do\nvhost_scsi_clear_endpoint, we are passed in either target1 or target2's\nname and we will only match that target's tpgs when we loop over the\nvs-\u003evs_tpg. We will then return from the function without doing\ntarget_undepend_item on the tpgs.\n\nBecause of all these bugs, it looks like being able to call\nvhost_scsi_set_endpoint multiple times was never supported. The major\nuser, QEMU, already has checks to prevent this use case. So to fix the\nissues, this patch prevents vhost_scsi_set_endpoint from being called\nif it's already successfully added tpgs. To add, remove or change the\ntpg config or target name, you must do a vhost_scsi_clear_endpoint\nfirst.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm/pat: Fix VM_PAT handling when fork() fails in copy_page_range()\n\nIf track_pfn_copy() fails, we already added the dst VMA to the maple\ntree. As fork() fails, we'll cleanup the maple tree, and stumble over\nthe dst VMA for which we neither performed any reservation nor copied\nany page tables.\n\nConsequently untrack_pfn() will see VM_PAT and try obtaining the\nPAT information from the page table -- which fails because the page\ntable was not copied.\n\nThe easiest fix would be to simply clear the VM_PAT flag of the dst VMA\nif track_pfn_copy() fails. However, the whole thing is about \"simply\"\nclearing the VM_PAT flag is shaky as well: if we passed track_pfn_copy()\nand performed a reservation, but copying the page tables fails, we'll\nsimply clear the VM_PAT flag, not properly undoing the reservation ...\nwhich is also wrong.\n\nSo let's fix it properly: set the VM_PAT flag only if the reservation\nsucceeded (leaving it clear initially), and undo the reservation if\nanything goes wrong while copying the page tables: clearing the VM_PAT\nflag after undoing the reservation.\n\nNote that any copied page table entries will get zapped when the VMA will\nget removed later, after copy_page_range() succeeded; as VM_PAT is not set\nthen, we won't try cleaning VM_PAT up once more and untrack_pfn() will be\nhappy. Note that leaving these page tables in place without a reservation\nis not a problem, as we are aborting fork(); this process will never run.\n\nA reproducer can trigger this usually at the first try:\n\n  https://gitlab.com/davidhildenbrand/scratchspace/-/raw/main/reproducers/pat_fork.c\n\n  WARNING: CPU: 26 PID: 11650 at arch/x86/mm/pat/memtype.c:983 get_pat_info+0xf6/0x110\n  Modules linked in: ...\n  CPU: 26 UID: 0 PID: 11650 Comm: repro3 Not tainted 6.12.0-rc5+ #92\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-2.fc40 04/01/2014\n  RIP: 0010:get_pat_info+0xf6/0x110\n  ...\n  Call Trace:\n   \u003cTASK\u003e\n   ...\n   untrack_pfn+0x52/0x110\n   unmap_single_vma+0xa6/0xe0\n   unmap_vmas+0x105/0x1f0\n   exit_mmap+0xf6/0x460\n   __mmput+0x4b/0x120\n   copy_process+0x1bf6/0x2aa0\n   kernel_clone+0xab/0x440\n   __do_sys_clone+0x66/0x90\n   do_syscall_64+0x95/0x180\n\nLikely this case was missed in:\n\n  d155df53f310 (\"x86/mm/pat: clear VM_PAT if copy_p4d_range failed\")\n\n... and instead of undoing the reservation we simply cleared the VM_PAT flag.\n\nKeep the documentation of these functions in include/linux/pgtable.h,\none place is more than sufficient -- we should clean that up for the other\nfunctions like track_pfn_remap/untrack_pfn separately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22111",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Remove RTNL dance for SIOCBRADDIF and SIOCBRDELIF.\n\nSIOCBRDELIF is passed to dev_ioctl() first and later forwarded to\nbr_ioctl_call(), which causes unnecessary RTNL dance and the splat\nbelow [0] under RTNL pressure.\n\nLet's say Thread A is trying to detach a device from a bridge and\nThread B is trying to remove the bridge.\n\nIn dev_ioctl(), Thread A bumps the bridge device's refcnt by\nnetdev_hold() and releases RTNL because the following br_ioctl_call()\nalso re-acquires RTNL.\n\nIn the race window, Thread B could acquire RTNL and try to remove\nthe bridge device.  Then, rtnl_unlock() by Thread B will release RTNL\nand wait for netdev_put() by Thread A.\n\nThread A, however, must hold RTNL after the unlock in dev_ifsioc(),\nwhich may take long under RTNL pressure, resulting in the splat by\nThread B.\n\n  Thread A (SIOCBRDELIF)           Thread B (SIOCBRDELBR)\n  ----------------------           ----------------------\n  sock_ioctl                       sock_ioctl\n  `- sock_do_ioctl                 `- br_ioctl_call\n     `- dev_ioctl                     `- br_ioctl_stub\n        |- rtnl_lock                     |\n        |- dev_ifsioc                    '\n        '  |- dev = __dev_get_by_name(...)\n           |- netdev_hold(dev, ...)      .\n       /   |- rtnl_unlock  ------.       |\n       |   |- br_ioctl_call       `---\u003e  |- rtnl_lock\n  Race |   |  `- br_ioctl_stub           |- br_del_bridge\n  Window   |     |                       |  |- dev = __dev_get_by_name(...)\n       |   |     |  May take long        |  `- br_dev_delete(dev, ...)\n       |   |     |  under RTNL pressure  |     `- unregister_netdevice_queue(dev, ...)\n       |   |     |               |       `- rtnl_unlock\n       \\   |     |- rtnl_lock  \u003c-'          `- netdev_run_todo\n           |     |- ...                        `- netdev_run_todo\n           |     `- rtnl_unlock                   |- __rtnl_unlock\n           |                                      |- netdev_wait_allrefs_any\n           |- netdev_put(dev, ...)  \u003c----------------'\n                                                Wait refcnt decrement\n                                                and log splat below\n\nTo avoid blocking SIOCBRDELBR unnecessarily, let's not call\ndev_ioctl() for SIOCBRADDIF and SIOCBRDELIF.\n\nIn the dev_ioctl() path, we do the following:\n\n  1. Copy struct ifreq by get_user_ifreq in sock_do_ioctl()\n  2. Check CAP_NET_ADMIN in dev_ioctl()\n  3. Call dev_load() in dev_ioctl()\n  4. Fetch the master dev from ifr.ifr_name in dev_ifsioc()\n\n3. can be done by request_module() in br_ioctl_call(), so we move\n1., 2., and 4. to br_ioctl_stub().\n\nNote that 2. is also checked later in add_del_if(), but it's better\nperformed before RTNL.\n\nSIOCBRADDIF and SIOCBRDELIF have been processed in dev_ioctl() since\nthe pre-git era, and there seems to be no specific reason to process\nthem there.\n\n[0]:\nunregister_netdevice: waiting for wpan3 to become free. Usage count = 2\nref_tracker: wpan3@ffff8880662d8608 has 1/1 users at\n     __netdev_tracker_alloc include/linux/netdevice.h:4282 [inline]\n     netdev_hold include/linux/netdevice.h:4311 [inline]\n     dev_ifsioc+0xc6a/0x1160 net/core/dev_ioctl.c:624\n     dev_ioctl+0x255/0x10c0 net/core/dev_ioctl.c:826\n     sock_do_ioctl+0x1ca/0x260 net/socket.c:1213\n     sock_ioctl+0x23a/0x6c0 net/socket.c:1318\n     vfs_ioctl fs/ioctl.c:51 [inline]\n     __do_sys_ioctl fs/ioctl.c:906 [inline]\n     __se_sys_ioctl fs/ioctl.c:892 [inline]\n     __x64_sys_ioctl+0x1a4/0x210 fs/ioctl.c:892\n     do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n     do_syscall_64+0xcb/0x250 arch/x86/entry/common.c:83\n     entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22113",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid journaling sb update on error if journal is destroying\n\nPresently we always BUG_ON if trying to start a transaction on a journal marked\nwith JBD2_UNMOUNT, since this should never happen. However, while ltp running\nstress tests, it was observed that in case of some error handling paths, it is\npossible for update_super_work to start a transaction after the journal is\ndestroyed eg:\n\n(umount)\next4_kill_sb\n  kill_block_super\n    generic_shutdown_super\n      sync_filesystem /* commits all txns */\n      evict_inodes\n        /* might start a new txn */\n      ext4_put_super\n\tflush_work(\u0026sbi-\u003es_sb_upd_work) /* flush the workqueue */\n        jbd2_journal_destroy\n          journal_kill_thread\n            journal-\u003ej_flags |= JBD2_UNMOUNT;\n          jbd2_journal_commit_transaction\n            jbd2_journal_get_descriptor_buffer\n              jbd2_journal_bmap\n                ext4_journal_bmap\n                  ext4_map_blocks\n                    ...\n                    ext4_inode_error\n                      ext4_handle_error\n                        schedule_work(\u0026sbi-\u003es_sb_upd_work)\n\n                                               /* work queue kicks in */\n                                               update_super_work\n                                                 jbd2_journal_start\n                                                   start_this_handle\n                                                     BUG_ON(journal-\u003ej_flags \u0026\n                                                            JBD2_UNMOUNT)\n\nHence, introduce a new mount flag to indicate journal is destroying and only do\na journaled (and deferred) update of sb if this flag is not set. Otherwise, just\nfallback to an un-journaled commit.\n\nFurther, in the journal destroy path, we have the following sequence:\n\n  1. Set mount flag indicating journal is destroying\n  2. force a commit and wait for it\n  3. flush pending sb updates\n\nThis sequence is important as it ensures that, after this point, there is no sb\nupdate that might be journaled so it is safe to update the sb outside the\njournal. (To avoid race discussed in 2d01ddc86606)\n\nAlso, we don't need a similar check in ext4_grp_locked_error since it is only\ncalled from mballoc and AFAICT it would be always valid to schedule work here.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22120",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: goto right label 'out_mmap_sem' in ext4_setattr()\n\nOtherwise, if ext4_inode_attach_jinode() fails, a hung task will\nhappen because filemap_invalidate_unlock() isn't called to unlock\nmapping-\u003einvalidate_lock. Like this:\n\nEXT4-fs error (device sda) in ext4_setattr:5557: Out of memory\nINFO: task fsstress:374 blocked for more than 122 seconds.\n      Not tainted 6.14.0-rc1-next-20250206-xfstests-dirty #726\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:fsstress state:D stack:0     pid:374   tgid:374   ppid:373\n                                  task_flags:0x440140 flags:0x00000000\nCall Trace:\n \u003cTASK\u003e\n __schedule+0x2c9/0x7f0\n schedule+0x27/0xa0\n schedule_preempt_disabled+0x15/0x30\n rwsem_down_read_slowpath+0x278/0x4c0\n down_read+0x59/0xb0\n page_cache_ra_unbounded+0x65/0x1b0\n filemap_get_pages+0x124/0x3e0\n filemap_read+0x114/0x3d0\n vfs_read+0x297/0x360\n ksys_read+0x6c/0xe0\n do_syscall_64+0x4b/0x110\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22868",
      "Description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22869",
      "Description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22872",
      "Description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23163",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: vlan: don't propagate flags on open\n\nWith the device instance lock, there is now a possibility of a deadlock:\n\n[    1.211455] ============================================\n[    1.211571] WARNING: possible recursive locking detected\n[    1.211687] 6.14.0-rc5-01215-g032756b4ca7a-dirty #5 Not tainted\n[    1.211823] --------------------------------------------\n[    1.211936] ip/184 is trying to acquire lock:\n[    1.212032] ffff8881024a4c30 (\u0026dev-\u003elock){+.+.}-{4:4}, at: dev_set_allmulti+0x4e/0xb0\n[    1.212207]\n[    1.212207] but task is already holding lock:\n[    1.212332] ffff8881024a4c30 (\u0026dev-\u003elock){+.+.}-{4:4}, at: dev_open+0x50/0xb0\n[    1.212487]\n[    1.212487] other info that might help us debug this:\n[    1.212626]  Possible unsafe locking scenario:\n[    1.212626]\n[    1.212751]        CPU0\n[    1.212815]        ----\n[    1.212871]   lock(\u0026dev-\u003elock);\n[    1.212944]   lock(\u0026dev-\u003elock);\n[    1.213016]\n[    1.213016]  *** DEADLOCK ***\n[    1.213016]\n[    1.213143]  May be due to missing lock nesting notation\n[    1.213143]\n[    1.213294] 3 locks held by ip/184:\n[    1.213371]  #0: ffffffff838b53e0 (rtnl_mutex){+.+.}-{4:4}, at: rtnl_nets_lock+0x1b/0xa0\n[    1.213543]  #1: ffffffff84e5fc70 (\u0026net-\u003ertnl_mutex){+.+.}-{4:4}, at: rtnl_nets_lock+0x37/0xa0\n[    1.213727]  #2: ffff8881024a4c30 (\u0026dev-\u003elock){+.+.}-{4:4}, at: dev_open+0x50/0xb0\n[    1.213895]\n[    1.213895] stack backtrace:\n[    1.213991] CPU: 0 UID: 0 PID: 184 Comm: ip Not tainted 6.14.0-rc5-01215-g032756b4ca7a-dirty #5\n[    1.213993] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04/01/2014\n[    1.213994] Call Trace:\n[    1.213995]  \u003cTASK\u003e\n[    1.213996]  dump_stack_lvl+0x8e/0xd0\n[    1.214000]  print_deadlock_bug+0x28b/0x2a0\n[    1.214020]  lock_acquire+0xea/0x2a0\n[    1.214027]  __mutex_lock+0xbf/0xd40\n[    1.214038]  dev_set_allmulti+0x4e/0xb0 # real_dev-\u003eflags \u0026 IFF_ALLMULTI\n[    1.214040]  vlan_dev_open+0xa5/0x170 # ndo_open on vlandev\n[    1.214042]  __dev_open+0x145/0x270\n[    1.214046]  __dev_change_flags+0xb0/0x1e0\n[    1.214051]  netif_change_flags+0x22/0x60 # IFF_UP vlandev\n[    1.214053]  dev_change_flags+0x61/0xb0 # for each device in group from dev-\u003evlan_info\n[    1.214055]  vlan_device_event+0x766/0x7c0 # on netdevsim0\n[    1.214058]  notifier_call_chain+0x78/0x120\n[    1.214062]  netif_open+0x6d/0x90\n[    1.214064]  dev_open+0x5b/0xb0 # locks netdevsim0\n[    1.214066]  bond_enslave+0x64c/0x1230\n[    1.214075]  do_set_master+0x175/0x1e0 # on netdevsim0\n[    1.214077]  do_setlink+0x516/0x13b0\n[    1.214094]  rtnl_newlink+0xaba/0xb80\n[    1.214132]  rtnetlink_rcv_msg+0x440/0x490\n[    1.214144]  netlink_rcv_skb+0xeb/0x120\n[    1.214150]  netlink_unicast+0x1f9/0x320\n[    1.214153]  netlink_sendmsg+0x346/0x3f0\n[    1.214157]  __sock_sendmsg+0x86/0xb0\n[    1.214160]  ____sys_sendmsg+0x1c8/0x220\n[    1.214164]  ___sys_sendmsg+0x28f/0x2d0\n[    1.214179]  __x64_sys_sendmsg+0xef/0x140\n[    1.214184]  do_syscall_64+0xec/0x1d0\n[    1.214190]  entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[    1.214191] RIP: 0033:0x7f2d1b4a7e56\n\nDevice setup:\n\n     netdevsim0 (down)\n     ^        ^\n  bond        netdevsim1.100@netdevsim1 allmulticast=on (down)\n\nWhen we enslave the lower device (netdevsim0) which has a vlan, we\npropagate vlan's allmuti/promisc flags during ndo_open. This causes\n(re)locking on of the real_dev.\n\nPropagate allmulti/promisc on flags change, not on the open. There\nis a slight semantics change that vlans that are down now propagate\nthe flags, but this seems unlikely to result in the real issues.\n\nReproducer:\n\n  echo 0 1 \u003e /sys/bus/netdevsim/new_device\n\n  dev_path=$(ls -d /sys/bus/netdevsim/devices/netdevsim0/net/*)\n  dev=$(echo $dev_path | rev | cut -d/ -f1 | rev)\n\n  ip link set dev $dev name netdevsim0\n  ip link set dev netdevsim0 up\n\n  ip link add link netdevsim0 name netdevsim0.100 type vlan id 100\n  ip link set dev netdevsim0.100 allm\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27221",
      "Description": "In the URI gem before 1.0.3 for Ruby, the URI handling methods (URI.join, URI#merge, URI#+) have an inadvertent leakage of authentication credentials because userinfo is retained even after changing the host.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libruby2_5-2_5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:ruby2.5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:ruby2.5-stdlib-2.5.9-150000.4.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27465",
      "Description": "Certain instructions need intercepting and emulating by Xen.  In some\ncases Xen emulates the instruction by replaying it, using an executable\nstub.  Some instructions may raise an exception, which is supposed to be\nhandled gracefully.  Certain replayed instructions have additional logic\nto set up and recover the changes to the arithmetic flags.\n\nFor replayed instructions where the flags recovery logic is used, the\nmetadata for exception handling was incorrect, preventing Xen from\nhandling the the exception gracefully, treating it as fatal instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:xen-libs-4.18.5_04-150600.3.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-29768",
      "Description": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:vim-9.1.1406-150500.20.27.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:vim-data-common-9.1.1406-150500.20.27.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-30258",
      "Description": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a \"verification DoS.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:gpg2-2.4.4-150600.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32462",
      "Description": "Sudo before 1.9.17p1, when used with a sudoers file that specifies a host that is neither the current host nor ALL, allows listed users to execute commands on unintended machines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:sudo-1.9.15p5-150600.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32463",
      "Description": "Sudo before 1.9.17p1 allows local users to obtain root access because /etc/nsswitch.conf from a user-controlled directory is used with the --chroot option.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:sudo-1.9.15p5-150600.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32988",
      "Description": "A flaw was found in GnuTLS. A double-free vulnerability exists in GnuTLS due to incorrect ownership handling in the export logic of Subject Alternative Name (SAN) entries containing an otherName. If the type-id OID is invalid or malformed, GnuTLS will call asn1_delete_structure() on an ASN.1 node it does not own, leading to a double-free condition when the parent function or caller later attempts to free the same structure.\n\nThis vulnerability can be triggered using only public GnuTLS APIs and may result in denial of service or memory corruption, depending on allocator behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgnutls30-3.8.3-150600.4.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32989",
      "Description": "A heap-buffer-overread vulnerability was found in GnuTLS in how it handles the Certificate Transparency (CT) Signed Certificate Timestamp (SCT) extension during X.509 certificate parsing. This flaw allows a malicious user to create a certificate containing a malformed SCT extension (OID 1.3.6.1.4.1.11129.2.4.2) that contains sensitive data. This issue leads to the exposure of confidential information when GnuTLS verifies certificates from certain websites when the certificate (SCT) is not checked correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgnutls30-3.8.3-150600.4.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32990",
      "Description": "A heap-buffer-overflow (off-by-one) flaw was found in the GnuTLS software in the template parsing logic within the certtool utility. When it reads certain settings from a template file, it allows an attacker to cause an out-of-bounds (OOB) NULL pointer write, resulting in memory corruption and a denial-of-service (DoS) that could potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgnutls30-3.8.3-150600.4.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37738",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: ignore xattrs past end\n\nOnce inside 'ext4_xattr_inode_dec_ref_all' we should\nignore xattrs entries past the 'end' entry.\n\nThis fixes the following KASAN reported issue:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\nRead of size 4 at addr ffff888012c120c4 by task repro/2065\n\nCPU: 1 UID: 0 PID: 2065 Comm: repro Not tainted 6.13.0-rc2+ #11\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x1fd/0x300\n ? tcp_gro_dev_warn+0x260/0x260\n ? _printk+0xc0/0x100\n ? read_lock_is_recursive+0x10/0x10\n ? irq_work_queue+0x72/0xf0\n ? __virt_addr_valid+0x17b/0x4b0\n print_address_description+0x78/0x390\n print_report+0x107/0x1f0\n ? __virt_addr_valid+0x17b/0x4b0\n ? __virt_addr_valid+0x3ff/0x4b0\n ? __phys_addr+0xb5/0x160\n ? ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\n kasan_report+0xcc/0x100\n ? ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\n ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\n ? ext4_xattr_delete_inode+0xd30/0xd30\n ? __ext4_journal_ensure_credits+0x5f0/0x5f0\n ? __ext4_journal_ensure_credits+0x2b/0x5f0\n ? inode_update_timestamps+0x410/0x410\n ext4_xattr_delete_inode+0xb64/0xd30\n ? ext4_truncate+0xb70/0xdc0\n ? ext4_expand_extra_isize_ea+0x1d20/0x1d20\n ? __ext4_mark_inode_dirty+0x670/0x670\n ? ext4_journal_check_start+0x16f/0x240\n ? ext4_inode_is_fast_symlink+0x2f2/0x3a0\n ext4_evict_inode+0xc8c/0xff0\n ? ext4_inode_is_fast_symlink+0x3a0/0x3a0\n ? do_raw_spin_unlock+0x53/0x8a0\n ? ext4_inode_is_fast_symlink+0x3a0/0x3a0\n evict+0x4ac/0x950\n ? proc_nr_inodes+0x310/0x310\n ? trace_ext4_drop_inode+0xa2/0x220\n ? _raw_spin_unlock+0x1a/0x30\n ? iput+0x4cb/0x7e0\n do_unlinkat+0x495/0x7c0\n ? try_break_deleg+0x120/0x120\n ? 0xffffffff81000000\n ? __check_object_size+0x15a/0x210\n ? strncpy_from_user+0x13e/0x250\n ? getname_flags+0x1dc/0x530\n __x64_sys_unlinkat+0xc8/0xf0\n do_syscall_64+0x65/0x110\n entry_SYSCALL_64_after_hwframe+0x67/0x6f\nRIP: 0033:0x434ffd\nCode: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 8\nRSP: 002b:00007ffc50fa7b28 EFLAGS: 00000246 ORIG_RAX: 0000000000000107\nRAX: ffffffffffffffda RBX: 00007ffc50fa7e18 RCX: 0000000000434ffd\nRDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000005\nRBP: 00007ffc50fa7be0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001\nR13: 00007ffc50fa7e08 R14: 00000000004bbf30 R15: 0000000000000001\n \u003c/TASK\u003e\n\nThe buggy address belongs to the object at ffff888012c12000\n which belongs to the cache filp of size 360\nThe buggy address is located 196 bytes inside of\n freed 360-byte region [ffff888012c12000, ffff888012c12168)\n\nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x12c12\nhead: order:1 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0\nflags: 0x40(head|node=0|zone=0)\npage_type: f5(slab)\nraw: 0000000000000040 ffff888000ad7640 ffffea0000497a00 dead000000000004\nraw: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000\nhead: 0000000000000040 ffff888000ad7640 ffffea0000497a00 dead000000000004\nhead: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000\nhead: 0000000000000001 ffffea00004b0481 ffffffffffffffff 0000000000000000\nhead: 0000000000000002 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff888012c11f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff888012c12000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\u003e ffff888012c12080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                           ^\n ffff888012c12100: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc\n ffff888012c12180: fc fc fc fc fc fc fc fc fc\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Avoid memory leak while enabling statistics\n\nDriver uses monitor destination rings for extended statistics mode and\nstandalone monitor mode. In extended statistics mode, TLVs are parsed from\nthe buffer received from the monitor destination ring and assigned to the\nppdu_info structure to update per-packet statistics. In standalone monitor\nmode, along with per-packet statistics, the packet data (payload) is\ncaptured, and the driver updates per MSDU to mac80211.\n\nWhen the AP interface is enabled, only extended statistics mode is\nactivated. As part of enabling monitor rings for collecting statistics,\nthe driver subscribes to HAL_RX_MPDU_START TLV in the filter\nconfiguration. This TLV is received from the monitor destination ring, and\nkzalloc for the mon_mpdu object occurs, which is not freed, leading to a\nmemory leak. The kzalloc for the mon_mpdu object is only required while\nenabling the standalone monitor interface. This causes a memory leak while\nenabling extended statistics mode in the driver.\n\nFix this memory leak by removing the kzalloc for the mon_mpdu object in\nthe HAL_RX_MPDU_START TLV handling. Additionally, remove the standalone\nmonitor mode handlings in the HAL_MON_BUF_ADDR and HAL_RX_MSDU_END TLVs.\nThese TLV tags will be handled properly when enabling standalone monitor\nmode in the future.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37756",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tls: explicitly disallow disconnect\n\nsyzbot discovered that it can disconnect a TLS socket and then\nrun into all sort of unexpected corner cases. I have a vague\nrecollection of Eric pointing this out to us a long time ago.\nSupporting disconnect is really hard, for one thing if offload\nis enabled we'd need to wait for all packets to be _acked_.\nDisconnect is not commonly used, disallow it.\n\nThe immediate problem syzbot run into is the warning in the strp,\nbut that's just the easiest bug to trigger:\n\n  WARNING: CPU: 0 PID: 5834 at net/tls/tls_strp.c:486 tls_strp_msg_load+0x72e/0xa80 net/tls/tls_strp.c:486\n  RIP: 0010:tls_strp_msg_load+0x72e/0xa80 net/tls/tls_strp.c:486\n  Call Trace:\n   \u003cTASK\u003e\n   tls_rx_rec_wait+0x280/0xa60 net/tls/tls_sw.c:1363\n   tls_sw_recvmsg+0x85c/0x1c30 net/tls/tls_sw.c:2043\n   inet6_recvmsg+0x2c9/0x730 net/ipv6/af_inet6.c:678\n   sock_recvmsg_nosec net/socket.c:1023 [inline]\n   sock_recvmsg+0x109/0x280 net/socket.c:1045\n   __sys_recvfrom+0x202/0x380 net/socket.c:2237",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37757",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix memory leak in tipc_link_xmit\n\nIn case the backlog transmit queue for system-importance messages is overloaded,\ntipc_link_xmit() returns -ENOBUFS but the skb list is not purged. This leads to\nmemory leak and failure when a skb is allocated.\n\nThis commit fixes this issue by purging the skb list before tipc_link_xmit()\nreturns.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: free routing table on probe failure\n\nIf complete = true in dsa_tree_setup(), it means that we are the last\nswitch of the tree which is successfully probing, and we should be\nsetting up all switches from our probe path.\n\nAfter \"complete\" becomes true, dsa_tree_setup_cpu_ports() or any\nsubsequent function may fail. If that happens, the entire tree setup is\nin limbo: the first N-1 switches have successfully finished probing\n(doing nothing but having allocated persistent memory in the tree's\ndst-\u003eports, and maybe dst-\u003ertable), and switch N failed to probe, ending\nthe tree setup process before anything is tangible from the user's PoV.\n\nIf switch N fails to probe, its memory (ports) will be freed and removed\nfrom dst-\u003eports. However, the dst-\u003ertable elements pointing to its ports,\nas created by dsa_link_touch(), will remain there, and will lead to\nuse-after-free if dereferenced.\n\nIf dsa_tree_setup_switches() returns -EPROBE_DEFER, which is entirely\npossible because that is where ds-\u003eops-\u003esetup() is, we get a kasan\nreport like this:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in mv88e6xxx_setup_upstream_port+0x240/0x568\nRead of size 8 at addr ffff000004f56020 by task kworker/u8:3/42\n\nCall trace:\n __asan_report_load8_noabort+0x20/0x30\n mv88e6xxx_setup_upstream_port+0x240/0x568\n mv88e6xxx_setup+0xebc/0x1eb0\n dsa_register_switch+0x1af4/0x2ae0\n mv88e6xxx_register_switch+0x1b8/0x2a8\n mv88e6xxx_probe+0xc4c/0xf60\n mdio_probe+0x78/0xb8\n really_probe+0x2b8/0x5a8\n __driver_probe_device+0x164/0x298\n driver_probe_device+0x78/0x258\n __device_attach_driver+0x274/0x350\n\nAllocated by task 42:\n __kasan_kmalloc+0x84/0xa0\n __kmalloc_cache_noprof+0x298/0x490\n dsa_switch_touch_ports+0x174/0x3d8\n dsa_register_switch+0x800/0x2ae0\n mv88e6xxx_register_switch+0x1b8/0x2a8\n mv88e6xxx_probe+0xc4c/0xf60\n mdio_probe+0x78/0xb8\n really_probe+0x2b8/0x5a8\n __driver_probe_device+0x164/0x298\n driver_probe_device+0x78/0x258\n __device_attach_driver+0x274/0x350\n\nFreed by task 42:\n __kasan_slab_free+0x48/0x68\n kfree+0x138/0x418\n dsa_register_switch+0x2694/0x2ae0\n mv88e6xxx_register_switch+0x1b8/0x2a8\n mv88e6xxx_probe+0xc4c/0xf60\n mdio_probe+0x78/0xb8\n really_probe+0x2b8/0x5a8\n __driver_probe_device+0x164/0x298\n driver_probe_device+0x78/0x258\n __device_attach_driver+0x274/0x350\n\nThe simplest way to fix the bug is to delete the routing table in its\nentirety. dsa_tree_setup_routing_table() has no problem in regenerating\nit even if we deleted links between ports other than those of switch N,\nbecause dsa_link_touch() first checks whether the port pair already\nexists in dst-\u003ertable, allocating if not.\n\nThe deletion of the routing table in its entirety already exists in\ndsa_tree_teardown(), so refactor that into a function that can also be\ncalled from the tree setup error path.\n\nIn my analysis of the commit to blame, it is the one which added\ndsa_link elements to dst-\u003ertable. Prior to that, each switch had its own\nds-\u003ertable which is freed when the switch fails to probe. But the tree\nis potentially persistent memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37798",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncodel: remove sch-\u003eq.qlen check before qdisc_tree_reduce_backlog()\n\nAfter making all -\u003eqlen_notify() callbacks idempotent, now it is safe to\nremove the check of qlen!=0 from both fq_codel_dequeue() and\ncodel_qdisc_dequeue().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: fix potential NULL pointer dereference in dev_uevent()\n\nIf userspace reads \"uevent\" device attribute at the same time as another\nthreads unbinds the device from its driver, change to dev-\u003edriver from a\nvalid pointer to NULL may result in crash. Fix this by using READ_ONCE()\nwhen fetching the pointer, and take bus' drivers klist lock to make sure\ndriver instance will not disappear while we access it.\n\nUse WRITE_ONCE() when setting the driver pointer to ensure there is no\ntearing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37801",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-imx: Add check for spi_imx_setupxfer()\n\nAdd check for the return value of spi_imx_setupxfer().\nspi_imx-\u003erx and spi_imx-\u003etx function pointer can be NULL when\nspi_imx_setupxfer() return error, and make NULL pointer dereference.\n\n Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n Call trace:\n  0x0\n  spi_imx_pio_transfer+0x50/0xd8\n  spi_imx_transfer_one+0x18c/0x858\n  spi_transfer_one_message+0x43c/0x790\n  __spi_pump_transfer_message+0x238/0x5d4\n  __spi_sync+0x2b0/0x454\n  spi_write_then_read+0x11c/0x200",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37856",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: harden block_group::bg_list against list_del() races\n\nAs far as I can tell, these calls of list_del_init() on bg_list cannot\nrun concurrently with btrfs_mark_bg_unused() or btrfs_mark_bg_to_reclaim(),\nas they are in transaction error paths and situations where the block\ngroup is readonly.\n\nHowever, if there is any chance at all of racing with mark_bg_unused(),\nor a different future user of bg_list, better to be safe than sorry.\n\nOtherwise we risk the following interleaving (bg_list refcount in parens)\n\nT1 (some random op)                       T2 (btrfs_mark_bg_unused)\n                                        !list_empty(\u0026bg-\u003ebg_list); (1)\nlist_del_init(\u0026bg-\u003ebg_list); (1)\n                                        list_move_tail (1)\nbtrfs_put_block_group (0)\n                                        btrfs_delete_unused_bgs\n                                             bg = list_first_entry\n                                             list_del_init(\u0026bg-\u003ebg_list);\n                                             btrfs_put_block_group(bg); (-1)\n\nUltimately, this results in a broken ref count that hits zero one deref\nearly and the real final deref underflows the refcount, resulting in a WARNING.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37859",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npage_pool: avoid infinite loop to schedule delayed worker\n\nWe noticed the kworker in page_pool_release_retry() was waken\nup repeatedly and infinitely in production because of the\nbuggy driver causing the inflight less than 0 and warning\nus in page_pool_inflight()[1].\n\nSince the inflight value goes negative, it means we should\nnot expect the whole page_pool to get back to work normally.\n\nThis patch mitigates the adverse effect by not rescheduling\nthe kworker when detecting the inflight negative in\npage_pool_release_retry().\n\n[1]\n[Mon Feb 10 20:36:11 2025] ------------[ cut here ]------------\n[Mon Feb 10 20:36:11 2025] Negative(-51446) inflight packet-pages\n...\n[Mon Feb 10 20:36:11 2025] Call Trace:\n[Mon Feb 10 20:36:11 2025]  page_pool_release_retry+0x23/0x70\n[Mon Feb 10 20:36:11 2025]  process_one_work+0x1b1/0x370\n[Mon Feb 10 20:36:11 2025]  worker_thread+0x37/0x3a0\n[Mon Feb 10 20:36:11 2025]  kthread+0x11a/0x140\n[Mon Feb 10 20:36:11 2025]  ? process_one_work+0x370/0x370\n[Mon Feb 10 20:36:11 2025]  ? __kthread_cancel_work+0x40/0x40\n[Mon Feb 10 20:36:11 2025]  ret_from_fork+0x35/0x40\n[Mon Feb 10 20:36:11 2025] ---[ end trace ebffe800f33e7e34 ]---\nNote: before this patch, the above calltrace would flood the\ndmesg due to repeated reschedule of release_dw kworker.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37864",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: clean up FDB, MDB, VLAN entries on unbind\n\nAs explained in many places such as commit b117e1e8a86d (\"net: dsa:\ndelete dsa_legacy_fdb_add and dsa_legacy_fdb_del\"), DSA is written given\nthe assumption that higher layers have balanced additions/deletions.\nAs such, it only makes sense to be extremely vocal when those\nassumptions are violated and the driver unbinds with entries still\npresent.\n\nBut Ido Schimmel points out a very simple situation where that is wrong:\nhttps://lore.kernel.org/netdev/ZDazSM5UsPPjQuKr@shredder/\n(also briefly discussed by me in the aforementioned commit).\n\nBasically, while the bridge bypass operations are not something that DSA\nexplicitly documents, and for the majority of DSA drivers this API\nsimply causes them to go to promiscuous mode, that isn't the case for\nall drivers. Some have the necessary requirements for bridge bypass\noperations to do something useful - see dsa_switch_supports_uc_filtering().\n\nAlthough in tools/testing/selftests/net/forwarding/local_termination.sh,\nwe made an effort to popularize better mechanisms to manage address\nfilters on DSA interfaces from user space - namely macvlan for unicast,\nand setsockopt(IP_ADD_MEMBERSHIP) - through mtools - for multicast, the\nfact is that 'bridge fdb add ... self static local' also exists as\nkernel UAPI, and might be useful to someone, even if only for a quick\nhack.\n\nIt seems counter-productive to block that path by implementing shim\n.ndo_fdb_add and .ndo_fdb_del operations which just return -EOPNOTSUPP\nin order to prevent the ndo_dflt_fdb_add() and ndo_dflt_fdb_del() from\nrunning, although we could do that.\n\nAccepting that cleanup is necessary seems to be the only option.\nEspecially since we appear to be coming back at this from a different\nangle as well. Russell King is noticing that the WARN_ON() triggers even\nfor VLANs:\nhttps://lore.kernel.org/netdev/Z_li8Bj8bD4-BYKQ@shell.armlinux.org.uk/\n\nWhat happens in the bug report above is that dsa_port_do_vlan_del() fails,\nthen the VLAN entry lingers on, and then we warn on unbind and leak it.\n\nThis is not a straight revert of the blamed commit, but we now add an\ninformational print to the kernel log (to still have a way to see\nthat bugs exist), and some extra comments gathered from past years'\nexperience, to justify the logic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37874",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ngbe: fix memory leak in ngbe_probe() error path\n\nWhen ngbe_sw_init() is called, memory is allocated for wx-\u003erss_key\nin wx_init_rss_key(). However, in ngbe_probe() function, the subsequent\nerror paths after ngbe_sw_init() don't free the rss_key. Fix that by\nfreeing it in error path along with wx-\u003emac_table.\n\nAlso change the label to which execution jumps when ngbe_sw_init()\nfails, because otherwise, it could lead to a double free for rss_key,\nwhen the mac_table allocation fails in wx_sw_init().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix deadlock between rcu_tasks_trace and event_mutex.\n\nFix the following deadlock:\nCPU A\n_free_event()\n  perf_kprobe_destroy()\n    mutex_lock(\u0026event_mutex)\n      perf_trace_event_unreg()\n        synchronize_rcu_tasks_trace()\n\nThere are several paths where _free_event() grabs event_mutex\nand calls sync_rcu_tasks_trace. Above is one such case.\n\nCPU B\nbpf_prog_test_run_syscall()\n  rcu_read_lock_trace()\n    bpf_prog_run_pin_on_cpu()\n      bpf_prog_load()\n        bpf_tracing_func_proto()\n          trace_set_clr_event()\n            mutex_lock(\u0026event_mutex)\n\nDelegate trace_set_clr_event() to workqueue to avoid\nsuch lock dependency.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37885",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Reset IRTE to host control if *new* route isn't postable\n\nRestore an IRTE back to host control (remapped or posted MSI mode) if the\n*new* GSI route prevents posting the IRQ directly to a vCPU, regardless of\nthe GSI routing type.  Updating the IRTE if and only if the new GSI is an\nMSI results in KVM leaving an IRTE posting to a vCPU.\n\nThe dangling IRTE can result in interrupts being incorrectly delivered to\nthe guest, and in the worst case scenario can result in use-after-free,\ne.g. if the VM is torn down, but the underlying host IRQ isn't freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: lan743x: Fix memleak issue when GSO enabled\n\nAlways map the `skb` to the LS descriptor. Previously skb was\nmapped to EXT descriptor when the number of fragments is zero with\nGSO enabled. Mapping the skb to EXT descriptor prevents it from\nbeing freed, leading to a memory leak",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37917",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: mtk-star-emac: fix spinlock recursion issues on rx/tx poll\n\nUse spin_lock_irqsave and spin_unlock_irqrestore instead of spin_lock\nand spin_unlock in mtk_star_emac driver to avoid spinlock recursion\noccurrence that can happen when enabling the DMA interrupts again in\nrx/tx poll.\n\n```\nBUG: spinlock recursion on CPU#0, swapper/0/0\n lock: 0xffff00000db9cf20, .magic: dead4ead, .owner: swapper/0/0,\n    .owner_cpu: 0\nCPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted\n    6.15.0-rc2-next-20250417-00001-gf6a27738686c-dirty #28 PREEMPT\nHardware name: MediaTek MT8365 Open Platform EVK (DT)\nCall trace:\n show_stack+0x18/0x24 (C)\n dump_stack_lvl+0x60/0x80\n dump_stack+0x18/0x24\n spin_dump+0x78/0x88\n do_raw_spin_lock+0x11c/0x120\n _raw_spin_lock+0x20/0x2c\n mtk_star_handle_irq+0xc0/0x22c [mtk_star_emac]\n __handle_irq_event_percpu+0x48/0x140\n handle_irq_event+0x4c/0xb0\n handle_fasteoi_irq+0xa0/0x1bc\n handle_irq_desc+0x34/0x58\n generic_handle_domain_irq+0x1c/0x28\n gic_handle_irq+0x4c/0x120\n do_interrupt_handler+0x50/0x84\n el1_interrupt+0x34/0x68\n el1h_64_irq_handler+0x18/0x24\n el1h_64_irq+0x6c/0x70\n regmap_mmio_read32le+0xc/0x20 (P)\n _regmap_bus_reg_read+0x6c/0xac\n _regmap_read+0x60/0xdc\n regmap_read+0x4c/0x80\n mtk_star_rx_poll+0x2f4/0x39c [mtk_star_emac]\n __napi_poll+0x38/0x188\n net_rx_action+0x164/0x2c0\n handle_softirqs+0x100/0x244\n __do_softirq+0x14/0x20\n ____do_softirq+0x10/0x20\n call_on_irq_stack+0x24/0x64\n do_softirq_own_stack+0x1c/0x40\n __irq_exit_rcu+0xd4/0x10c\n irq_exit_rcu+0x10/0x1c\n el1_interrupt+0x38/0x68\n el1h_64_irq_handler+0x18/0x24\n el1h_64_irq+0x6c/0x70\n cpuidle_enter_state+0xac/0x320 (P)\n cpuidle_enter+0x38/0x50\n do_idle+0x1e4/0x260\n cpu_startup_entry+0x34/0x3c\n rest_init+0xdc/0xe0\n console_on_rootfs+0x0/0x6c\n __primary_switched+0x88/0x90\n```",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: Fix race condition in AF_XDP generic RX path\n\nMove rx_lock from xsk_socket to xsk_buff_pool.\nFix synchronization for shared umem mode in\ngeneric RX path where multiple sockets share\nsingle xsk_buff_pool.\n\nRX queue is exclusive to xsk_socket, while FILL\nqueue can be shared between multiple sockets.\nThis could result in race condition where two\nCPU cores access RX path of two different sockets\nsharing the same umem.\n\nProtect both queues by acquiring spinlock in shared\nxsk_buff_pool.\n\nLock contention may be minimized in the future by some\nper-thread FQ buffering.\n\nIt's safe and necessary to move spin_lock_bh(rx_lock)\nafter xsk_rcv_check():\n* xs-\u003epool and spinlock_init is synchronized by\n  xsk_bind() -\u003e xsk_is_bound() memory barriers.\n* xsk_rcv_check() may return true at the moment\n  of xsk_release() or xsk_unbind_dev(),\n  however this will not cause any data races or\n  race conditions. xsk_unbind_dev() removes xdp\n  socket from all maps and waits for completion\n  of all outstanding rx operations. Packets in\n  RX path will either complete safely or drop.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvxlan: vnifilter: Fix unlocked deletion of default FDB entry\n\nWhen a VNI is deleted from a VXLAN device in 'vnifilter' mode, the FDB\nentry associated with the default remote (assuming one was configured)\nis deleted without holding the hash lock. This is wrong and will result\nin a warning [1] being generated by the lockdep annotation that was\nadded by commit ebe642067455 (\"vxlan: Create wrappers for FDB lookup\").\n\nReproducer:\n\n # ip link add vx0 up type vxlan dstport 4789 external vnifilter local 192.0.2.1\n # bridge vni add vni 10010 remote 198.51.100.1 dev vx0\n # bridge vni del vni 10010 dev vx0\n\nFix by acquiring the hash lock before the deletion and releasing it\nafterwards. Blame the original commit that introduced the issue rather\nthan the one that exposed it.\n\n[1]\nWARNING: CPU: 3 PID: 392 at drivers/net/vxlan/vxlan_core.c:417 vxlan_find_mac+0x17f/0x1a0\n[...]\nRIP: 0010:vxlan_find_mac+0x17f/0x1a0\n[...]\nCall Trace:\n \u003cTASK\u003e\n __vxlan_fdb_delete+0xbe/0x560\n vxlan_vni_delete_group+0x2ba/0x940\n vxlan_vni_del.isra.0+0x15f/0x580\n vxlan_process_vni_filter+0x38b/0x7b0\n vxlan_vnifilter_process+0x3bb/0x510\n rtnetlink_rcv_msg+0x2f7/0xb70\n netlink_rcv_skb+0x131/0x360\n netlink_unicast+0x426/0x710\n netlink_sendmsg+0x75a/0xc20\n __sock_sendmsg+0xc1/0x150\n ____sys_sendmsg+0x5aa/0x7b0\n ___sys_sendmsg+0xfc/0x180\n __sys_sendmsg+0x121/0x1b0\n do_syscall_64+0xbb/0x1d0\n entry_SYSCALL_64_after_hwframe+0x4b/0x53",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix oob write in trace_seq_to_buffer()\n\nsyzbot reported this bug:\n==================================================================\nBUG: KASAN: slab-out-of-bounds in trace_seq_to_buffer kernel/trace/trace.c:1830 [inline]\nBUG: KASAN: slab-out-of-bounds in tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c:6822\nWrite of size 4507 at addr ffff888032b6b000 by task syz.2.320/7260\n\nCPU: 1 UID: 0 PID: 7260 Comm: syz.2.320 Not tainted 6.15.0-rc1-syzkaller-00301-g3bde70a2c827 #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xc3/0x670 mm/kasan/report.c:521\n kasan_report+0xe0/0x110 mm/kasan/report.c:634\n check_region_inline mm/kasan/generic.c:183 [inline]\n kasan_check_range+0xef/0x1a0 mm/kasan/generic.c:189\n __asan_memcpy+0x3c/0x60 mm/kasan/shadow.c:106\n trace_seq_to_buffer kernel/trace/trace.c:1830 [inline]\n tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c:6822\n ....\n==================================================================\n\nIt has been reported that trace_seq_to_buffer() tries to copy more data\nthan PAGE_SIZE to buf. Therefore, to prevent this, we should use the\nsmaller of trace_seq_used(\u0026iter-\u003eseq) and PAGE_SIZE as an argument.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/amd: Fix potential buffer overflow in parse_ivrs_acpihid\n\nThere is a string parsing logic error which can lead to an overflow of hid\nor uid buffers. Comparing ACPIID_LEN against a total string length doesn't\ntake into account the lengths of individual hid and uid buffers so the\ncheck is insufficient in some cases. For example if the length of hid\nstring is 4 and the length of the uid string is 260, the length of str\nwill be equal to ACPIID_LEN + 1 but uid string will overflow uid buffer\nwhich size is 256.\n\nThe same applies to the hid string with length 13 and uid string with\nlength 250.\n\nCheck the length of hid and uid strings separately to prevent\nbuffer overflow.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteon_ep: Fix host hang issue during device reboot\n\nWhen the host loses heartbeat messages from the device,\nthe driver calls the device-specific ndo_stop function,\nwhich frees the resources. If the driver is unloaded in\nthis scenario, it calls ndo_stop again, attempting to free\nresources that have already been freed, leading to a host\nhang issue. To resolve this, dev_close should be called\ninstead of the device-specific stop function.dev_close\ninternally calls ndo_stop to stop the network interface\nand performs additional cleanup tasks. During the driver\nunload process, if the device is already down, ndo_stop\nis not called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/intel: KVM: Mask PEBS_ENABLE loaded for guest with vCPU's value.\n\nWhen generating the MSR_IA32_PEBS_ENABLE value that will be loaded on\nVM-Entry to a KVM guest, mask the value with the vCPU's desired PEBS_ENABLE\nvalue.  Consulting only the host kernel's host vs. guest masks results in\nrunning the guest with PEBS enabled even when the guest doesn't want to use\nPEBS.  Because KVM uses perf events to proxy the guest virtual PMU, simply\nlooking at exclude_host can't differentiate between events created by host\nuserspace, and events created by KVM on behalf of the guest.\n\nRunning the guest with PEBS unexpectedly enabled typically manifests as\ncrashes due to a near-infinite stream of #PFs.  E.g. if the guest hasn't\nwritten MSR_IA32_DS_AREA, the CPU will hit page faults on address '0' when\ntrying to record PEBS events.\n\nThe issue is most easily reproduced by running `perf kvm top` from before\ncommit 7b100989b4f6 (\"perf evlist: Remove __evlist__add_default\") (after\nwhich, `perf kvm top` effectively stopped using PEBS).\tThe userspace side\nof perf creates a guest-only PEBS event, which intel_guest_get_msrs()\nmisconstrues a guest-*owned* PEBS event.\n\nArguably, this is a userspace bug, as enabling PEBS on guest-only events\nsimply cannot work, and userspace can kill VMs in many other ways (there\nis no danger to the host).  However, even if this is considered to be bad\nuserspace behavior, there's zero downside to perf/KVM restricting PEBS to\nguest-owned events.\n\nNote, commit 854250329c02 (\"KVM: x86/pmu: Disable guest PEBS temporarily\nin two rare situations\") fixed the case where host userspace is profiling\nKVM *and* userspace, but missed the case where userspace is profiling only\nKVM.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Verify event formats that have \"%*p..\"\n\nThe trace event verifier checks the formats of trace events to make sure\nthat they do not point at memory that is not in the trace event itself or\nin data that will never be freed. If an event references data that was\nallocated when the event triggered and that same data is freed before the\nevent is read, then the kernel can crash by reading freed memory.\n\nThe verifier runs at boot up (or module load) and scans the print formats\nof the events and checks their arguments to make sure that dereferenced\npointers are safe. If the format uses \"%*p..\" the verifier will ignore it,\nand that could be dangerous. Cover this case as well.\n\nAlso add to the sample code a use case of \"%*pbl\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: allow MDIO bus PM ops to start/stop state machine for phylink-controlled PHY\n\nDSA has 2 kinds of drivers:\n\n1. Those who call dsa_switch_suspend() and dsa_switch_resume() from\n   their device PM ops: qca8k-8xxx, bcm_sf2, microchip ksz\n2. Those who don't: all others. The above methods should be optional.\n\nFor type 1, dsa_switch_suspend() calls dsa_user_suspend() -\u003e phylink_stop(),\nand dsa_switch_resume() calls dsa_user_resume() -\u003e phylink_start().\nThese seem good candidates for setting mac_managed_pm = true because\nthat is essentially its definition [1], but that does not seem to be the\nbiggest problem for now, and is not what this change focuses on.\n\nTalking strictly about the 2nd category of DSA drivers here (which\ndo not have MAC managed PM, meaning that for their attached PHYs,\nmdio_bus_phy_suspend() and mdio_bus_phy_resume() should run in full),\nI have noticed that the following warning from mdio_bus_phy_resume() is\ntriggered:\n\n\tWARN_ON(phydev-\u003estate != PHY_HALTED \u0026\u0026 phydev-\u003estate != PHY_READY \u0026\u0026\n\t\tphydev-\u003estate != PHY_UP);\n\nbecause the PHY state machine is running.\n\nIt's running as a result of a previous dsa_user_open() -\u003e ... -\u003e\nphylink_start() -\u003e phy_start() having been initiated by the user.\n\nThe previous mdio_bus_phy_suspend() was supposed to have called\nphy_stop_machine(), but it didn't. So this is why the PHY is in state\nPHY_NOLINK by the time mdio_bus_phy_resume() runs.\n\nmdio_bus_phy_suspend() did not call phy_stop_machine() because for\nphylink, the phydev-\u003eadjust_link function pointer is NULL. This seems a\ntechnicality introduced by commit fddd91016d16 (\"phylib: fix PAL state\nmachine restart on resume\"). That commit was written before phylink\nexisted, and was intended to avoid crashing with consumer drivers which\ndon't use the PHY state machine - phylink always does, when using a PHY.\nBut phylink itself has historically not been developed with\nsuspend/resume in mind, and apparently not tested too much in that\nscenario, allowing this bug to exist unnoticed for so long. Plus, prior\nto the WARN_ON(), it would have likely been invisible.\n\nThis issue is not in fact restricted to type 2 DSA drivers (according to\nthe above ad-hoc classification), but can be extrapolated to any MAC\ndriver with phylink and MDIO-bus-managed PHY PM ops. DSA is just where\nthe issue was reported. Assuming mac_managed_pm is set correctly, a\nquick search indicates the following other drivers might be affected:\n\n$ grep -Zlr PHYLINK_NETDEV drivers/ | xargs -0 grep -L mac_managed_pm\ndrivers/net/ethernet/atheros/ag71xx.c\ndrivers/net/ethernet/microchip/sparx5/sparx5_main.c\ndrivers/net/ethernet/microchip/lan966x/lan966x_main.c\ndrivers/net/ethernet/freescale/dpaa2/dpaa2-mac.c\ndrivers/net/ethernet/freescale/fs_enet/fs_enet-main.c\ndrivers/net/ethernet/freescale/dpaa/dpaa_eth.c\ndrivers/net/ethernet/freescale/ucc_geth.c\ndrivers/net/ethernet/freescale/enetc/enetc_pf_common.c\ndrivers/net/ethernet/marvell/mvpp2/mvpp2_main.c\ndrivers/net/ethernet/marvell/mvneta.c\ndrivers/net/ethernet/marvell/prestera/prestera_main.c\ndrivers/net/ethernet/mediatek/mtk_eth_soc.c\ndrivers/net/ethernet/altera/altera_tse_main.c\ndrivers/net/ethernet/wangxun/txgbe/txgbe_phy.c\ndrivers/net/ethernet/meta/fbnic/fbnic_phylink.c\ndrivers/net/ethernet/tehuti/tn40_phy.c\ndrivers/net/ethernet/mscc/ocelot_net.c\n\nMake the existing conditions dependent on the PHY device having a\nphydev-\u003ephy_link_change() implementation equal to the default\nphy_link_change() provided by phylib. Otherwise, we implicitly know that\nthe phydev has the phylink-provided phylink_phy_change() callback, and\nwhen phylink is used, the PHY state machine always needs to be stopped/\nstarted on the suspend/resume path. The code is structured as such that\nif phydev-\u003ephy_link_change() is absent, it is a matter of time until the\nkernel will crash - no need to further complicate the test.\n\nThus, for the situation where the PM is not managed b\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pci: Fix duplicate pci_dev_put() in disable_slot() when PF has child VFs\n\nWith commit bcb5d6c76903 (\"s390/pci: introduce lock to synchronize state\nof zpci_dev's\") the code to ignore power off of a PF that has child VFs\nwas changed from a direct return to a goto to the unlock and\npci_dev_put() section. The change however left the existing pci_dev_put()\nuntouched resulting in a doubple put. This can subsequently cause a use\nafter free if the struct pci_dev is released in an unexpected state.\nFix this by removing the extra pci_dev_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37961",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvs: fix uninit-value for saddr in do_output_route4\n\nsyzbot reports for uninit-value for the saddr argument [1].\ncommit 4754957f04f5 (\"ipvs: do not use random local source address for\ntunnels\") already implies that the input value of saddr\nshould be ignored but the code is still reading it which can prevent\nto connect the route. Fix it by changing the argument to ret_saddr.\n\n[1]\nBUG: KMSAN: uninit-value in do_output_route4+0x42c/0x4d0 net/netfilter/ipvs/ip_vs_xmit.c:147\n do_output_route4+0x42c/0x4d0 net/netfilter/ipvs/ip_vs_xmit.c:147\n __ip_vs_get_out_rt+0x403/0x21d0 net/netfilter/ipvs/ip_vs_xmit.c:330\n ip_vs_tunnel_xmit+0x205/0x2380 net/netfilter/ipvs/ip_vs_xmit.c:1136\n ip_vs_in_hook+0x1aa5/0x35b0 net/netfilter/ipvs/ip_vs_core.c:2063\n nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n nf_hook_slow+0xf7/0x400 net/netfilter/core.c:626\n nf_hook include/linux/netfilter.h:269 [inline]\n __ip_local_out+0x758/0x7e0 net/ipv4/ip_output.c:118\n ip_local_out net/ipv4/ip_output.c:127 [inline]\n ip_send_skb+0x6a/0x3c0 net/ipv4/ip_output.c:1501\n udp_send_skb+0xfda/0x1b70 net/ipv4/udp.c:1195\n udp_sendmsg+0x2fe3/0x33c0 net/ipv4/udp.c:1483\n inet_sendmsg+0x1fc/0x280 net/ipv4/af_inet.c:851\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg+0x267/0x380 net/socket.c:727\n ____sys_sendmsg+0x91b/0xda0 net/socket.c:2566\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2620\n __sys_sendmmsg+0x41d/0x880 net/socket.c:2702\n __compat_sys_sendmmsg net/compat.c:360 [inline]\n __do_compat_sys_sendmmsg net/compat.c:367 [inline]\n __se_compat_sys_sendmmsg net/compat.c:364 [inline]\n __ia32_compat_sys_sendmmsg+0xc8/0x140 net/compat.c:364\n ia32_sys_call+0x3ffa/0x41f0 arch/x86/include/generated/asm/syscalls_32.h:346\n do_syscall_32_irqs_on arch/x86/entry/syscall_32.c:83 [inline]\n __do_fast_syscall_32+0xb0/0x110 arch/x86/entry/syscall_32.c:306\n do_fast_syscall_32+0x38/0x80 arch/x86/entry/syscall_32.c:331\n do_SYSENTER_32+0x1f/0x30 arch/x86/entry/syscall_32.c:369\n entry_SYSENTER_compat_after_hwframe+0x84/0x8e\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:4167 [inline]\n slab_alloc_node mm/slub.c:4210 [inline]\n __kmalloc_cache_noprof+0x8fa/0xe00 mm/slub.c:4367\n kmalloc_noprof include/linux/slab.h:905 [inline]\n ip_vs_dest_dst_alloc net/netfilter/ipvs/ip_vs_xmit.c:61 [inline]\n __ip_vs_get_out_rt+0x35d/0x21d0 net/netfilter/ipvs/ip_vs_xmit.c:323\n ip_vs_tunnel_xmit+0x205/0x2380 net/netfilter/ipvs/ip_vs_xmit.c:1136\n ip_vs_in_hook+0x1aa5/0x35b0 net/netfilter/ipvs/ip_vs_core.c:2063\n nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n nf_hook_slow+0xf7/0x400 net/netfilter/core.c:626\n nf_hook include/linux/netfilter.h:269 [inline]\n __ip_local_out+0x758/0x7e0 net/ipv4/ip_output.c:118\n ip_local_out net/ipv4/ip_output.c:127 [inline]\n ip_send_skb+0x6a/0x3c0 net/ipv4/ip_output.c:1501\n udp_send_skb+0xfda/0x1b70 net/ipv4/udp.c:1195\n udp_sendmsg+0x2fe3/0x33c0 net/ipv4/udp.c:1483\n inet_sendmsg+0x1fc/0x280 net/ipv4/af_inet.c:851\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg+0x267/0x380 net/socket.c:727\n ____sys_sendmsg+0x91b/0xda0 net/socket.c:2566\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2620\n __sys_sendmmsg+0x41d/0x880 net/socket.c:2702\n __compat_sys_sendmmsg net/compat.c:360 [inline]\n __do_compat_sys_sendmmsg net/compat.c:367 [inline]\n __se_compat_sys_sendmmsg net/compat.c:364 [inline]\n __ia32_compat_sys_sendmmsg+0xc8/0x140 net/compat.c:364\n ia32_sys_call+0x3ffa/0x41f0 arch/x86/include/generated/asm/syscalls_32.h:346\n do_syscall_32_irqs_on arch/x86/entry/syscall_32.c:83 [inline]\n __do_fast_syscall_32+0xb0/0x110 arch/x86/entry/syscall_32.c:306\n do_fast_syscall_32+0x38/0x80 arch/x86/entry/syscall_32.c:331\n do_SYSENTER_32+0x1f/0x30 arch/x86/entry/syscall_32.c:369\n entry_SYSENTER_compat_after_hwframe+0x84/0x8e\n\nCPU: 0 UID: 0 PID: 22408 Comm: syz.4.5165 Not tainted 6.15.0-rc3-syzkaller-00019-gbc3372351d0c #0 PREEMPT(undef)\nHardware name: Google Google Compute Engi\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37968",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: light: opt3001: fix deadlock due to concurrent flag access\n\nThe threaded IRQ function in this driver is reading the flag twice: once to\nlock a mutex and once to unlock it. Even though the code setting the flag\nis designed to prevent it, there are subtle cases where the flag could be\ntrue at the mutex_lock stage and false at the mutex_unlock stage. This\nresults in the mutex not being unlocked, resulting in a deadlock.\n\nFix it by making the opt3001_irq() code generally more robust, reading the\nflag into a variable and using the variable value at both stages.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: fix out-of-bounds access during multi-link element defragmentation\n\nCurrently during the multi-link element defragmentation process, the\nmulti-link element length added to the total IEs length when calculating\nthe length of remaining IEs after the multi-link element in\ncfg80211_defrag_mle(). This could lead to out-of-bounds access if the\nmulti-link element or its corresponding fragment elements are the last\nelements in the IEs buffer.\n\nTo address this issue, correctly calculate the remaining IEs length by\ndeducting the multi-link element end offset from total IEs end offset.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: ecdsa - Harden against integer overflows in DIV_ROUND_UP()\n\nHerbert notes that DIV_ROUND_UP() may overflow unnecessarily if an ecdsa\nimplementation's -\u003ekey_size() callback returns an unusually large value.\nHerbert instead suggests (for a division by 8):\n\n  X / 8 + !!(X \u0026 7)\n\nBased on this formula, introduce a generic DIV_ROUND_UP_POW2() macro and\nuse it in lieu of DIV_ROUND_UP() for -\u003ekey_size() return values.\n\nAdditionally, use the macro in ecc_digits_from_bytes(), whose \"nbytes\"\nparameter is a -\u003ekey_size() return value in some instances, or a\nuser-specified ASN.1 length in the case of ecdsa_get_signature_rs().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37987",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: Prevent possible adminq overflow/stuck condition\n\nThe pds_core's adminq is protected by the adminq_lock, which prevents\nmore than 1 command to be posted onto it at any one time. This makes it\nso the client drivers cannot simultaneously post adminq commands.\nHowever, the completions happen in a different context, which means\nmultiple adminq commands can be posted sequentially and all waiting\non completion.\n\nOn the FW side, the backing adminq request queue is only 16 entries\nlong and the retry mechanism and/or overflow/stuck prevention is\nlacking. This can cause the adminq to get stuck, so commands are no\nlonger processed and completions are no longer sent by the FW.\n\nAs an initial fix, prevent more than 16 outstanding adminq commands so\nthere's no way to cause the adminq from getting stuck. This works\nbecause the backing adminq request queue will never have more than 16\npending adminq commands, so it will never overflow. This is done by\nreducing the adminq depth to 16.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37992",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: Flush gso_skb list too during -\u003echange()\n\nPreviously, when reducing a qdisc's limit via the -\u003echange() operation, only\nthe main skb queue was trimmed, potentially leaving packets in the gso_skb\nlist. This could result in NULL pointer dereference when we only check\nsch-\u003elimit against sch-\u003eq.qlen.\n\nThis patch introduces a new helper, qdisc_dequeue_internal(), which ensures\nboth the gso_skb list and the main queue are properly flushed when trimming\nexcess packets. All relevant qdiscs (codel, fq, fq_codel, fq_pie, hhf, pie)\nare updated to use this helper in their -\u003echange() routines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37994",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: ucsi: displayport: Fix NULL pointer access\n\nThis patch ensures that the UCSI driver waits for all pending tasks in the\nucsi_displayport_work workqueue to finish executing before proceeding with\nthe partner removal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmodule: ensure that kobject_put() is safe for module type kobjects\n\nIn 'lookup_or_create_module_kobject()', an internal kobject is created\nusing 'module_ktype'. So call to 'kobject_put()' on error handling\npath causes an attempt to use an uninitialized completion pointer in\n'module_kobject_release()'. In this scenario, we just want to release\nkobject without an extra synchronization required for a regular module\nunloading process, so adding an extra check whether 'complete()' is\nactually required makes 'kobject_put()' safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: fix region locking in hash types\n\nRegion locking introduced in v5.6-rc4 contained three macros to handle\nthe region locks: ahash_bucket_start(), ahash_bucket_end() which gave\nback the start and end hash bucket values belonging to a given region\nlock and ahash_region() which should give back the region lock belonging\nto a given hash bucket. The latter was incorrect which can lead to a\nrace condition between the garbage collector and adding new elements\nwhen a hash type of set is defined with timeouts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nopenvswitch: Fix unsafe attribute parsing in output_userspace()\n\nThis patch replaces the manual Netlink attribute iteration in\noutput_userspace() with nla_for_each_nested(), which ensures that only\nwell-formed attributes are processed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38000",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsch_hfsc: Fix qlen accounting bug when using peek in hfsc_enqueue()\n\nWhen enqueuing the first packet to an HFSC class, hfsc_enqueue() calls the\nchild qdisc's peek() operation before incrementing sch-\u003eq.qlen and\nsch-\u003eqstats.backlog. If the child qdisc uses qdisc_peek_dequeued(), this may\ntrigger an immediate dequeue and potential packet drop. In such cases,\nqdisc_tree_reduce_backlog() is called, but the HFSC qdisc's qlen and backlog\nhave not yet been updated, leading to inconsistent queue accounting. This\ncan leave an empty HFSC class in the active list, causing further\nconsequences like use-after-free.\n\nThis patch fixes the bug by moving the increment of sch-\u003eq.qlen and\nsch-\u003eqstats.backlog before the call to the child qdisc's peek() operation.\nThis ensures that queue length and backlog are always accurate when packet\ndrops or dequeues are triggered during the peek.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38001",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Address reentrant enqueue adding class to eltree twice\n\nSavino says:\n    \"We are writing to report that this recent patch\n    (141d34391abbb315d68556b7c67ad97885407547) [1]\n    can be bypassed, and a UAF can still occur when HFSC is utilized with\n    NETEM.\n\n    The patch only checks the cl-\u003ecl_nactive field to determine whether\n    it is the first insertion or not [2], but this field is only\n    incremented by init_vf [3].\n\n    By using HFSC_RSC (which uses init_ed) [4], it is possible to bypass the\n    check and insert the class twice in the eltree.\n    Under normal conditions, this would lead to an infinite loop in\n    hfsc_dequeue for the reasons we already explained in this report [5].\n\n    However, if TBF is added as root qdisc and it is configured with a\n    very low rate,\n    it can be utilized to prevent packets from being dequeued.\n    This behavior can be exploited to perform subsequent insertions in the\n    HFSC eltree and cause a UAF.\"\n\nTo fix both the UAF and the infinite loop, with netem as an hfsc child,\ncheck explicitly in hfsc_enqueue whether the class is already in the eltree\nwhenever the HFSC_RSC flag is set.\n\n[1] https://web.git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=141d34391abbb315d68556b7c67ad97885407547\n[2] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L1572\n[3] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L677\n[4] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L1574\n[5] https://lore.kernel.org/netdev/8DuRWwfqjoRDLDmBMlIfbrsZg9Gx50DHJc1ilxsEBNe2D6NMoigR_eIRIG0LOjMc3r10nUUZtArXx4oZBIdUfZQrwjcQhdinnMis_0G7VEk=@willsroot.io/T/#u",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: bcm: add missing rcu read protection for procfs content\n\nWhen the procfs content is generated for a bcm_op which is in the process\nto be removed the procfs output might show unreliable data (UAF).\n\nAs the removal of bcm_op's is already implemented with rcu handling this\npatch adds the missing rcu_read_lock() and makes sure the list entries\nare properly removed under rcu protection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38004",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: bcm: add locking for bcm_op runtime updates\n\nThe CAN broadcast manager (CAN BCM) can send a sequence of CAN frames via\nhrtimer. The content and also the length of the sequence can be changed\nresp reduced at runtime where the 'currframe' counter is then set to zero.\n\nAlthough this appeared to be a safe operation the updates of 'currframe'\ncan be triggered from user space and hrtimer context in bcm_can_tx().\nAnderson Nascimento created a proof of concept that triggered a KASAN\nslab-out-of-bounds read access which can be prevented with a spin_lock_bh.\n\nAt the rework of bcm_can_tx() the 'count' variable has been moved into\nthe protected section as this variable can be modified from both contexts\ntoo.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38005",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: k3-udma: Add missing locking\n\nRecent kernels complain about a missing lock in k3-udma.c when the lock\nvalidator is enabled:\n\n[    4.128073] WARNING: CPU: 0 PID: 746 at drivers/dma/ti/../virt-dma.h:169 udma_start.isra.0+0x34/0x238\n[    4.137352] CPU: 0 UID: 0 PID: 746 Comm: kworker/0:3 Not tainted 6.12.9-arm64 #28\n[    4.144867] Hardware name: pp-v12 (DT)\n[    4.148648] Workqueue: events udma_check_tx_completion\n[    4.153841] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    4.160834] pc : udma_start.isra.0+0x34/0x238\n[    4.165227] lr : udma_start.isra.0+0x30/0x238\n[    4.169618] sp : ffffffc083cabcf0\n[    4.172963] x29: ffffffc083cabcf0 x28: 0000000000000000 x27: ffffff800001b005\n[    4.180167] x26: ffffffc0812f0000 x25: 0000000000000000 x24: 0000000000000000\n[    4.187370] x23: 0000000000000001 x22: 00000000e21eabe9 x21: ffffff8000fa0670\n[    4.194571] x20: ffffff8001b6bf00 x19: ffffff8000fa0430 x18: ffffffc083b95030\n[    4.201773] x17: 0000000000000000 x16: 00000000f0000000 x15: 0000000000000048\n[    4.208976] x14: 0000000000000048 x13: 0000000000000000 x12: 0000000000000001\n[    4.216179] x11: ffffffc08151a240 x10: 0000000000003ea1 x9 : ffffffc08046ab68\n[    4.223381] x8 : ffffffc083cabac0 x7 : ffffffc081df3718 x6 : 0000000000029fc8\n[    4.230583] x5 : ffffffc0817ee6d8 x4 : 0000000000000bc0 x3 : 0000000000000000\n[    4.237784] x2 : 0000000000000000 x1 : 00000000001fffff x0 : 0000000000000000\n[    4.244986] Call trace:\n[    4.247463]  udma_start.isra.0+0x34/0x238\n[    4.251509]  udma_check_tx_completion+0xd0/0xdc\n[    4.256076]  process_one_work+0x244/0x3fc\n[    4.260129]  process_scheduled_works+0x6c/0x74\n[    4.264610]  worker_thread+0x150/0x1dc\n[    4.268398]  kthread+0xd8/0xe8\n[    4.271492]  ret_from_fork+0x10/0x20\n[    4.275107] irq event stamp: 220\n[    4.278363] hardirqs last  enabled at (219): [\u003cffffffc080a27c7c\u003e] _raw_spin_unlock_irq+0x38/0x50\n[    4.287183] hardirqs last disabled at (220): [\u003cffffffc080a1c154\u003e] el1_dbg+0x24/0x50\n[    4.294879] softirqs last  enabled at (182): [\u003cffffffc080037e68\u003e] handle_softirqs+0x1c0/0x3cc\n[    4.303437] softirqs last disabled at (177): [\u003cffffffc080010170\u003e] __do_softirq+0x1c/0x28\n[    4.311559] ---[ end trace 0000000000000000 ]---\n\nThis commit adds the missing locking.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38007",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: uclogic: Add NULL check in uclogic_input_configured()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\nuclogic_input_configured() does not check for this case, which results\nin a NULL pointer dereference.\n\nAdd NULL check after devm_kasprintf() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38009",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: disable napi on driver removal\n\nA warning on driver removal started occurring after commit 9dd05df8403b\n(\"net: warn if NAPI instance wasn't shut down\"). Disable tx napi before\ndeleting it in mt76_dma_cleanup().\n\n WARNING: CPU: 4 PID: 18828 at net/core/dev.c:7288 __netif_napi_del_locked+0xf0/0x100\n CPU: 4 UID: 0 PID: 18828 Comm: modprobe Not tainted 6.15.0-rc4 #4 PREEMPT(lazy)\n Hardware name: ASUS System Product Name/PRIME X670E-PRO WIFI, BIOS 3035 09/05/2024\n RIP: 0010:__netif_napi_del_locked+0xf0/0x100\n Call Trace:\n \u003cTASK\u003e\n mt76_dma_cleanup+0x54/0x2f0 [mt76]\n mt7921_pci_remove+0xd5/0x190 [mt7921e]\n pci_device_remove+0x47/0xc0\n device_release_driver_internal+0x19e/0x200\n driver_detach+0x48/0x90\n bus_remove_driver+0x6d/0xf0\n pci_unregister_driver+0x2e/0xb0\n __do_sys_delete_module.isra.0+0x197/0x2e0\n do_syscall_64+0x7b/0x160\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nTested with mt7921e but the same pattern can be actually applied to other\nmt76 drivers calling mt76_dma_cleanup() during removal. Tx napi is enabled\nin their *_dma_init() functions and only toggled off and on again inside\ntheir suspend/resume/reset paths. So it should be okay to disable tx\nnapi in such a generic way.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38010",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: tegra: xusb: Use a bitmask for UTMI pad power state tracking\n\nThe current implementation uses bias_pad_enable as a reference count to\nmanage the shared bias pad for all UTMI PHYs. However, during system\nsuspension with connected USB devices, multiple power-down requests for\nthe UTMI pad result in a mismatch in the reference count, which in turn\nproduces warnings such as:\n\n[  237.762967] WARNING: CPU: 10 PID: 1618 at tegra186_utmi_pad_power_down+0x160/0x170\n[  237.763103] Call trace:\n[  237.763104]  tegra186_utmi_pad_power_down+0x160/0x170\n[  237.763107]  tegra186_utmi_phy_power_off+0x10/0x30\n[  237.763110]  phy_power_off+0x48/0x100\n[  237.763113]  tegra_xusb_enter_elpg+0x204/0x500\n[  237.763119]  tegra_xusb_suspend+0x48/0x140\n[  237.763122]  platform_pm_suspend+0x2c/0xb0\n[  237.763125]  dpm_run_callback.isra.0+0x20/0xa0\n[  237.763127]  __device_suspend+0x118/0x330\n[  237.763129]  dpm_suspend+0x10c/0x1f0\n[  237.763130]  dpm_suspend_start+0x88/0xb0\n[  237.763132]  suspend_devices_and_enter+0x120/0x500\n[  237.763135]  pm_suspend+0x1ec/0x270\n\nThe root cause was traced back to the dynamic power-down changes\nintroduced in commit a30951d31b25 (\"xhci: tegra: USB2 pad power controls\"),\nwhere the UTMI pad was being powered down without verifying its current\nstate. This unbalanced behavior led to discrepancies in the reference\ncount.\n\nTo rectify this issue, this patch replaces the single reference counter\nwith a bitmask, renamed to utmi_pad_enabled. Each bit in the mask\ncorresponds to one of the four USB2 PHYs, allowing us to track each pad's\nenablement status individually.\n\nWith this change:\n  - The bias pad is powered on only when the mask is clear.\n  - Each UTMI pad is powered on or down based on its corresponding bit\n    in the mask, preventing redundant operations.\n  - The overall power state of the shared bias pad is maintained\n    correctly during suspend/resume cycles.\n\nThe mutex used to prevent race conditions during UTMI pad enable/disable\noperations has been moved from the tegra186_utmi_bias_pad_power_on/off\nfunctions to the parent functions tegra186_utmi_pad_power_on/down. This\nchange ensures that there are no race conditions when updating the bitmask.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: csa unmap use uninterruptible lock\n\nAfter process exit to unmap csa and free GPU vm, if signal is accepted\nand then waiting to take vm lock is interrupted and return, it causes\nmemory leaking and below warning backtrace.\n\nChange to use uninterruptible wait lock fix the issue.\n\nWARNING: CPU: 69 PID: 167800 at amd/amdgpu/amdgpu_kms.c:1525\n amdgpu_driver_postclose_kms+0x294/0x2a0 [amdgpu]\n Call Trace:\n  \u003cTASK\u003e\n  drm_file_free.part.0+0x1da/0x230 [drm]\n  drm_close_helper.isra.0+0x65/0x70 [drm]\n  drm_release+0x6a/0x120 [drm]\n  amdgpu_drm_release+0x51/0x60 [amdgpu]\n  __fput+0x9f/0x280\n  ____fput+0xe/0x20\n  task_work_run+0x67/0xa0\n  do_exit+0x217/0x3c0\n  do_group_exit+0x3b/0xb0\n  get_signal+0x14a/0x8d0\n  arch_do_signal_or_restart+0xde/0x100\n  exit_to_user_mode_loop+0xc1/0x1a0\n  exit_to_user_mode_prepare+0xf4/0x100\n  syscall_exit_to_user_mode+0x17/0x40\n  do_syscall_64+0x69/0xc0\n\n(cherry picked from commit 7dbbfb3c171a6f63b01165958629c9c26abf38ab)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Set n_channels after allocating struct cfg80211_scan_request\n\nMake sure that n_channels is set after allocating the\nstruct cfg80211_registered_device::int_scan_req member. Seen with\nsyzkaller:\n\nUBSAN: array-index-out-of-bounds in net/mac80211/scan.c:1208:5\nindex 0 is out of range for type 'struct ieee80211_channel *[] __counted_by(n_channels)' (aka 'struct ieee80211_channel *[]')\n\nThis was missed in the initial conversions because I failed to locate\nthe allocation likely due to the \"sizeof(void *)\" not matching the\n\"channels\" array type.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Refactor remove call with idxd_cleanup() helper\n\nThe idxd_cleanup() helper cleans up perfmon, interrupts, internals and\nso on. Refactor remove call with the idxd_cleanup() helper to avoid code\nduplication. Note, this also fixes the missing put_device() for idxd\ngroups, enginces and wqs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: fix memory leak in error handling path of idxd_alloc\n\nMemory allocated for idxd is not freed if an error occurs during\nidxd_alloc(). To fix it, free the allocated memory in the reverse order\nof allocation before exiting the function in case of an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38018",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/tls: fix kernel panic when alloc_page failed\n\nWe cannot set frag_list to NULL pointer when alloc_page failed.\nIt will be used in tls_strp_check_queue_ok when the next time\ntls_strp_read_sock is called.\n\nThis is because we don't reset full_len in tls_strp_flush_anchor_copy()\nso the recv path will try to continue handling the partial record\non the next call but we dettached the rcvq from the frag list.\nAlternative fix would be to reset full_len.\n\nUnable to handle kernel NULL pointer dereference\nat virtual address 0000000000000028\n Call trace:\n tls_strp_check_rcv+0x128/0x27c\n tls_strp_data_ready+0x34/0x44\n tls_data_ready+0x3c/0x1f0\n tcp_data_ready+0x9c/0xe4\n tcp_data_queue+0xf6c/0x12d0\n tcp_rcv_established+0x52c/0x798",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Disable MACsec offload for uplink representor profile\n\nMACsec offload is not supported in switchdev mode for uplink\nrepresentors. When switching to the uplink representor profile, the\nMACsec offload feature must be cleared from the netdevice's features.\n\nIf left enabled, attempts to add offloads result in a null pointer\ndereference, as the uplink representor does not support MACsec offload\neven though the feature bit remains set.\n\nClear NETIF_F_HW_MACSEC in mlx5e_fix_uplink_rep_features().\n\nKernel log:\n\nOops: general protection fault, probably for non-canonical address 0xdffffc000000000f: 0000 [#1] SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000078-0x000000000000007f]\nCPU: 29 UID: 0 PID: 4714 Comm: ip Not tainted 6.14.0-rc4_for_upstream_debug_2025_03_02_17_35 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nRIP: 0010:__mutex_lock+0x128/0x1dd0\nCode: d0 7c 08 84 d2 0f 85 ad 15 00 00 8b 35 91 5c fe 03 85 f6 75 29 49 8d 7e 60 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 a6 15 00 00 4d 3b 76 60 0f 85 fd 0b 00 00 65 ff\nRSP: 0018:ffff888147a4f160 EFLAGS: 00010206\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000001\nRDX: 000000000000000f RSI: 0000000000000000 RDI: 0000000000000078\nRBP: ffff888147a4f2e0 R08: ffffffffa05d2c19 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: dffffc0000000000 R14: 0000000000000018 R15: ffff888152de0000\nFS:  00007f855e27d800(0000) GS:ffff88881ee80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000004e5768 CR3: 000000013ae7c005 CR4: 0000000000372eb0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n ? die_addr+0x3d/0xa0\n ? exc_general_protection+0x144/0x220\n ? asm_exc_general_protection+0x22/0x30\n ? mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n ? __mutex_lock+0x128/0x1dd0\n ? lockdep_set_lock_cmp_fn+0x190/0x190\n ? mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n ? mutex_lock_io_nested+0x1ae0/0x1ae0\n ? lock_acquire+0x1c2/0x530\n ? macsec_upd_offload+0x145/0x380\n ? lockdep_hardirqs_on_prepare+0x400/0x400\n ? kasan_save_stack+0x30/0x40\n ? kasan_save_stack+0x20/0x40\n ? kasan_save_track+0x10/0x30\n ? __kasan_kmalloc+0x77/0x90\n ? __kmalloc_noprof+0x249/0x6b0\n ? genl_family_rcv_msg_attrs_parse.constprop.0+0xb5/0x240\n ? mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n ? mlx5e_macsec_add_rxsa+0x11a0/0x11a0 [mlx5_core]\n macsec_update_offload+0x26c/0x820\n ? macsec_set_mac_address+0x4b0/0x4b0\n ? lockdep_hardirqs_on_prepare+0x284/0x400\n ? _raw_spin_unlock_irqrestore+0x47/0x50\n macsec_upd_offload+0x2c8/0x380\n ? macsec_update_offload+0x820/0x820\n ? __nla_parse+0x22/0x30\n ? genl_family_rcv_msg_attrs_parse.constprop.0+0x15e/0x240\n genl_family_rcv_msg_doit+0x1cc/0x2a0\n ? genl_family_rcv_msg_attrs_parse.constprop.0+0x240/0x240\n ? cap_capable+0xd4/0x330\n genl_rcv_msg+0x3ea/0x670\n ? genl_family_rcv_msg_dumpit+0x2a0/0x2a0\n ? lockdep_set_lock_cmp_fn+0x190/0x190\n ? macsec_update_offload+0x820/0x820\n netlink_rcv_skb+0x12b/0x390\n ? genl_family_rcv_msg_dumpit+0x2a0/0x2a0\n ? netlink_ack+0xd80/0xd80\n ? rwsem_down_read_slowpath+0xf90/0xf90\n ? netlink_deliver_tap+0xcd/0xac0\n ? netlink_deliver_tap+0x155/0xac0\n ? _copy_from_iter+0x1bb/0x12c0\n genl_rcv+0x24/0x40\n netlink_unicast+0x440/0x700\n ? netlink_attachskb+0x760/0x760\n ? lock_acquire+0x1c2/0x530\n ? __might_fault+0xbb/0x170\n netlink_sendmsg+0x749/0xc10\n ? netlink_unicast+0x700/0x700\n ? __might_fault+0xbb/0x170\n ? netlink_unicast+0x700/0x700\n __sock_sendmsg+0xc5/0x190\n ____sys_sendmsg+0x53f/0x760\n ? import_iovec+0x7/0x10\n ? kernel_sendmsg+0x30/0x30\n ? __copy_msghdr+0x3c0/0x3c0\n ? filter_irq_stacks+0x90/0x90\n ? stack_depot_save_flags+0x28/0xa30\n ___sys_sen\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38022",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/core: Fix \"KASAN: slab-use-after-free Read in ib_register_device\" problem\n\nCall Trace:\n\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xc3/0x670 mm/kasan/report.c:521\n kasan_report+0xe0/0x110 mm/kasan/report.c:634\n strlen+0x93/0xa0 lib/string.c:420\n __fortify_strlen include/linux/fortify-string.h:268 [inline]\n get_kobj_path_length lib/kobject.c:118 [inline]\n kobject_get_path+0x3f/0x2a0 lib/kobject.c:158\n kobject_uevent_env+0x289/0x1870 lib/kobject_uevent.c:545\n ib_register_device drivers/infiniband/core/device.c:1472 [inline]\n ib_register_device+0x8cf/0xe00 drivers/infiniband/core/device.c:1393\n rxe_register_device+0x275/0x320 drivers/infiniband/sw/rxe/rxe_verbs.c:1552\n rxe_net_add+0x8e/0xe0 drivers/infiniband/sw/rxe/rxe_net.c:550\n rxe_newlink+0x70/0x190 drivers/infiniband/sw/rxe/rxe.c:225\n nldev_newlink+0x3a3/0x680 drivers/infiniband/core/nldev.c:1796\n rdma_nl_rcv_msg+0x387/0x6e0 drivers/infiniband/core/netlink.c:195\n rdma_nl_rcv_skb.constprop.0.isra.0+0x2e5/0x450\n netlink_unicast_kernel net/netlink/af_netlink.c:1313 [inline]\n netlink_unicast+0x53a/0x7f0 net/netlink/af_netlink.c:1339\n netlink_sendmsg+0x8d1/0xdd0 net/netlink/af_netlink.c:1883\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg net/socket.c:727 [inline]\n ____sys_sendmsg+0xa95/0xc70 net/socket.c:2566\n ___sys_sendmsg+0x134/0x1d0 net/socket.c:2620\n __sys_sendmsg+0x16d/0x220 net/socket.c:2652\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xcd/0x260 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nThis problem is similar to the problem that the\ncommit 1d6a9e7449e2 (\"RDMA/core: Fix use-after-free when rename device name\")\nfixes.\n\nThe root cause is: the function ib_device_rename() renames the name with\nlock. But in the function kobject_uevent(), this name is accessed without\nlock protection at the same time.\n\nThe solution is to add the lock protection when this name is accessed in\nthe function kobject_uevent().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38023",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: handle failure of nfs_get_lock_context in unlock path\n\nWhen memory is insufficient, the allocation of nfs_lock_context in\nnfs_get_lock_context() fails and returns -ENOMEM. If we mistakenly treat\nan nfs4_unlockdata structure (whose l_ctx member has been set to -ENOMEM)\nas valid and proceed to execute rpc_run_task(), this will trigger a NULL\npointer dereference in nfs4_locku_prepare. For example:\n\nBUG: kernel NULL pointer dereference, address: 000000000000000c\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] SMP PTI\nCPU: 15 UID: 0 PID: 12 Comm: kworker/u64:0 Not tainted 6.15.0-rc2-dirty #60\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40\nWorkqueue: rpciod rpc_async_schedule\nRIP: 0010:nfs4_locku_prepare+0x35/0xc2\nCode: 89 f2 48 89 fd 48 c7 c7 68 69 ef b5 53 48 8b 8e 90 00 00 00 48 89 f3\nRSP: 0018:ffffbbafc006bdb8 EFLAGS: 00010246\nRAX: 000000000000004b RBX: ffff9b964fc1fa00 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: fffffffffffffff4 RDI: ffff9ba53fddbf40\nRBP: ffff9ba539934000 R08: 0000000000000000 R09: ffffbbafc006bc38\nR10: ffffffffb6b689c8 R11: 0000000000000003 R12: ffff9ba539934030\nR13: 0000000000000001 R14: 0000000004248060 R15: ffffffffb56d1c30\nFS: 0000000000000000(0000) GS:ffff9ba5881f0000(0000) knlGS:00000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000000000000c CR3: 000000093f244000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\u003e\n __rpc_execute+0xbc/0x480\n rpc_async_schedule+0x2f/0x40\n process_one_work+0x232/0x5d0\n worker_thread+0x1da/0x3d0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0x10d/0x240\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\nModules linked in:\nCR2: 000000000000000c\n---[ end trace 0000000000000000 ]---\n\nFree the allocated nfs4_unlockdata when nfs_get_lock_context() fails and\nreturn NULL to terminate subsequent rpc_run_task, preventing NULL pointer\ndereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Fix slab-use-after-free Read in rxe_queue_cleanup bug\n\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x7d/0xa0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:378 [inline]\n print_report+0xcf/0x610 mm/kasan/report.c:489\n kasan_report+0xb5/0xe0 mm/kasan/report.c:602\n rxe_queue_cleanup+0xd0/0xe0 drivers/infiniband/sw/rxe/rxe_queue.c:195\n rxe_cq_cleanup+0x3f/0x50 drivers/infiniband/sw/rxe/rxe_cq.c:132\n __rxe_cleanup+0x168/0x300 drivers/infiniband/sw/rxe/rxe_pool.c:232\n rxe_create_cq+0x22e/0x3a0 drivers/infiniband/sw/rxe/rxe_verbs.c:1109\n create_cq+0x658/0xb90 drivers/infiniband/core/uverbs_cmd.c:1052\n ib_uverbs_create_cq+0xc7/0x120 drivers/infiniband/core/uverbs_cmd.c:1095\n ib_uverbs_write+0x969/0xc90 drivers/infiniband/core/uverbs_main.c:679\n vfs_write fs/read_write.c:677 [inline]\n vfs_write+0x26a/0xcc0 fs/read_write.c:659\n ksys_write+0x1b8/0x200 fs/read_write.c:731\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xaa/0x1b0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nIn the function rxe_create_cq, when rxe_cq_from_init fails, the function\nrxe_cleanup will be called to handle the allocated resources. In fact,\nsome memory resources have already been freed in the function\nrxe_cq_from_init. Thus, this problem will occur.\n\nThe solution is to let rxe_cleanup do all the work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38027",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: max20086: fix invalid memory access\n\nmax20086_parse_regulators_dt() calls of_regulator_match() using an\narray of struct of_regulator_match allocated on the stack for the\nmatches argument.\n\nof_regulator_match() calls devm_of_regulator_put_matches(), which calls\ndevres_alloc() to allocate a struct devm_of_regulator_matches which will\nbe de-allocated using devm_of_regulator_put_matches().\n\nstruct devm_of_regulator_matches is populated with the stack allocated\nmatches array.\n\nIf the device fails to probe, devm_of_regulator_put_matches() will be\ncalled and will try to call of_node_put() on that stack pointer,\ngenerating the following dmesg entries:\n\nmax20086 6-0028: Failed to read DEVICE_ID reg: -121\nkobject: '\\xc0$\\xa5\\x03' (000000002cebcb7a): is not initialized, yet\nkobject_put() is being called.\n\nFollowed by a stack trace matching the call flow described above.\n\nSwitch to allocating the matches array using devm_kcalloc() to\navoid accessing the stack pointer long after it's out of scope.\n\nThis also has the advantage of allowing multiple max20086 to probe\nwithout overriding the data stored inside the global of_regulator_match.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38031",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npadata: do not leak refcount in reorder_work\n\nA recent patch that addressed a UAF introduced a reference count leak:\nthe parallel_data refcount is incremented unconditionally, regardless\nof the return value of queue_work(). If the work item is already queued,\nthe incremented refcount is never decremented.\n\nFix this by checking the return value of queue_work() and decrementing\nthe refcount when necessary.\n\nResolves:\n\nUnreferenced object 0xffff9d9f421e3d80 (size 192):\n  comm \"cryptomgr_probe\", pid 157, jiffies 4294694003\n  hex dump (first 32 bytes):\n    80 8b cf 41 9f 9d ff ff b8 97 e0 89 ff ff ff ff  ...A............\n    d0 97 e0 89 ff ff ff ff 19 00 00 00 1f 88 23 00  ..............#.\n  backtrace (crc 838fb36):\n    __kmalloc_cache_noprof+0x284/0x320\n    padata_alloc_pd+0x20/0x1e0\n    padata_alloc_shell+0x3b/0xa0\n    0xffffffffc040a54d\n    cryptomgr_probe+0x43/0xc0\n    kthread+0xf6/0x1f0\n    ret_from_fork+0x2f/0x50\n    ret_from_fork_asm+0x1a/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38034",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: correct the order of prelim_ref arguments in btrfs__prelim_ref\n\nbtrfs_prelim_ref() calls the old and new reference variables in the\nincorrect order. This causes a NULL pointer dereference because oldref\nis passed as NULL to trace_btrfs_prelim_ref_insert().\n\nNote, trace_btrfs_prelim_ref_insert() is being called with newref as\noldref (and oldref as NULL) on purpose in order to print out\nthe values of newref.\n\nTo reproduce:\necho 1 \u003e /sys/kernel/debug/tracing/events/btrfs/btrfs_prelim_ref_insert/enable\n\nPerform some writeback operations.\n\nBacktrace:\nBUG: kernel NULL pointer dereference, address: 0000000000000018\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 115949067 P4D 115949067 PUD 11594a067 PMD 0\n Oops: Oops: 0000 [#1] SMP NOPTI\n CPU: 1 UID: 0 PID: 1188 Comm: fsstress Not tainted 6.15.0-rc2-tester+ #47 PREEMPT(voluntary)  7ca2cef72d5e9c600f0c7718adb6462de8149622\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-2-gc13ff2cd-prebuilt.qemu.org 04/01/2014\n RIP: 0010:trace_event_raw_event_btrfs__prelim_ref+0x72/0x130\n Code: e8 43 81 9f ff 48 85 c0 74 78 4d 85 e4 0f 84 8f 00 00 00 49 8b 94 24 c0 06 00 00 48 8b 0a 48 89 48 08 48 8b 52 08 48 89 50 10 \u003c49\u003e 8b 55 18 48 89 50 18 49 8b 55 20 48 89 50 20 41 0f b6 55 28 88\n RSP: 0018:ffffce44820077a0 EFLAGS: 00010286\n RAX: ffff8c6b403f9014 RBX: ffff8c6b55825730 RCX: 304994edf9cf506b\n RDX: d8b11eb7f0fdb699 RSI: ffff8c6b403f9010 RDI: ffff8c6b403f9010\n RBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000010\n R10: 00000000ffffffff R11: 0000000000000000 R12: ffff8c6b4e8fb000\n R13: 0000000000000000 R14: ffffce44820077a8 R15: ffff8c6b4abd1540\n FS:  00007f4dc6813740(0000) GS:ffff8c6c1d378000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000018 CR3: 000000010eb42000 CR4: 0000000000750ef0\n PKRU: 55555554\n Call Trace:\n  \u003cTASK\u003e\n  prelim_ref_insert+0x1c1/0x270\n  find_parent_nodes+0x12a6/0x1ee0\n  ? __entry_text_end+0x101f06/0x101f09\n  ? srso_alias_return_thunk+0x5/0xfbef5\n  ? srso_alias_return_thunk+0x5/0xfbef5\n  ? srso_alias_return_thunk+0x5/0xfbef5\n  ? srso_alias_return_thunk+0x5/0xfbef5\n  btrfs_is_data_extent_shared+0x167/0x640\n  ? fiemap_process_hole+0xd0/0x2c0\n  extent_fiemap+0xa5c/0xbc0\n  ? __entry_text_end+0x101f05/0x101f09\n  btrfs_fiemap+0x7e/0xd0\n  do_vfs_ioctl+0x425/0x9d0\n  __x64_sys_ioctl+0x75/0xc0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38035",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet-tcp: don't restore null sk_state_change\n\nqueue-\u003estate_change is set as part of nvmet_tcp_set_queue_sock(), but if\nthe TCP connection isn't established when nvmet_tcp_set_queue_sock() is\ncalled then queue-\u003estate_change isn't set and sock-\u003esk-\u003esk_state_change\nisn't replaced.\n\nAs such we don't need to restore sock-\u003esk-\u003esk_state_change if\nqueue-\u003estate_change is NULL.\n\nThis avoids NULL pointer dereferences such as this:\n\n[  286.462026][    C0] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[  286.462814][    C0] #PF: supervisor instruction fetch in kernel mode\n[  286.463796][    C0] #PF: error_code(0x0010) - not-present page\n[  286.464392][    C0] PGD 8000000140620067 P4D 8000000140620067 PUD 114201067 PMD 0\n[  286.465086][    C0] Oops: Oops: 0010 [#1] SMP KASAN PTI\n[  286.465559][    C0] CPU: 0 UID: 0 PID: 1628 Comm: nvme Not tainted 6.15.0-rc2+ #11 PREEMPT(voluntary)\n[  286.466393][    C0] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04/01/2014\n[  286.467147][    C0] RIP: 0010:0x0\n[  286.467420][    C0] Code: Unable to access opcode bytes at 0xffffffffffffffd6.\n[  286.467977][    C0] RSP: 0018:ffff8883ae008580 EFLAGS: 00010246\n[  286.468425][    C0] RAX: 0000000000000000 RBX: ffff88813fd34100 RCX: ffffffffa386cc43\n[  286.469019][    C0] RDX: 1ffff11027fa68b6 RSI: 0000000000000008 RDI: ffff88813fd34100\n[  286.469545][    C0] RBP: ffff88813fd34160 R08: 0000000000000000 R09: ffffed1027fa682c\n[  286.470072][    C0] R10: ffff88813fd34167 R11: 0000000000000000 R12: ffff88813fd344c3\n[  286.470585][    C0] R13: ffff88813fd34112 R14: ffff88813fd34aec R15: ffff888132cdd268\n[  286.471070][    C0] FS:  00007fe3c04c7d80(0000) GS:ffff88840743f000(0000) knlGS:0000000000000000\n[  286.471644][    C0] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  286.472543][    C0] CR2: ffffffffffffffd6 CR3: 000000012daca000 CR4: 00000000000006f0\n[  286.473500][    C0] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  286.474467][    C0] DR3: 0000000000000000 DR6: 00000000ffff07f0 DR7: 0000000000000400\n[  286.475453][    C0] Call Trace:\n[  286.476102][    C0]  \u003cIRQ\u003e\n[  286.476719][    C0]  tcp_fin+0x2bb/0x440\n[  286.477429][    C0]  tcp_data_queue+0x190f/0x4e60\n[  286.478174][    C0]  ? __build_skb_around+0x234/0x330\n[  286.478940][    C0]  ? rcu_is_watching+0x11/0xb0\n[  286.479659][    C0]  ? __pfx_tcp_data_queue+0x10/0x10\n[  286.480431][    C0]  ? tcp_try_undo_loss+0x640/0x6c0\n[  286.481196][    C0]  ? seqcount_lockdep_reader_access.constprop.0+0x82/0x90\n[  286.482046][    C0]  ? kvm_clock_get_cycles+0x14/0x30\n[  286.482769][    C0]  ? ktime_get+0x66/0x150\n[  286.483433][    C0]  ? rcu_is_watching+0x11/0xb0\n[  286.484146][    C0]  tcp_rcv_established+0x6e4/0x2050\n[  286.484857][    C0]  ? rcu_is_watching+0x11/0xb0\n[  286.485523][    C0]  ? ipv4_dst_check+0x160/0x2b0\n[  286.486203][    C0]  ? __pfx_tcp_rcv_established+0x10/0x10\n[  286.486917][    C0]  ? lock_release+0x217/0x2c0\n[  286.487595][    C0]  tcp_v4_do_rcv+0x4d6/0x9b0\n[  286.488279][    C0]  tcp_v4_rcv+0x2af8/0x3e30\n[  286.488904][    C0]  ? raw_local_deliver+0x51b/0xad0\n[  286.489551][    C0]  ? rcu_is_watching+0x11/0xb0\n[  286.490198][    C0]  ? __pfx_tcp_v4_rcv+0x10/0x10\n[  286.490813][    C0]  ? __pfx_raw_local_deliver+0x10/0x10\n[  286.491487][    C0]  ? __pfx_nf_confirm+0x10/0x10 [nf_conntrack]\n[  286.492275][    C0]  ? rcu_is_watching+0x11/0xb0\n[  286.492900][    C0]  ip_protocol_deliver_rcu+0x8f/0x370\n[  286.493579][    C0]  ip_local_deliver_finish+0x297/0x420\n[  286.494268][    C0]  ip_local_deliver+0x168/0x430\n[  286.494867][    C0]  ? __pfx_ip_local_deliver+0x10/0x10\n[  286.495498][    C0]  ? __pfx_ip_local_deliver_finish+0x10/0x10\n[  286.496204][    C0]  ? ip_rcv_finish_core+0x19a/0x1f20\n[  286.496806][    C0]  ? lock_release+0x217/0x2c0\n[  286.497414][    C0]  ip_rcv+0x455/0x6e0\n[  286.497945][    C0]  ? __pfx_ip_rcv+0x10/0x10\n[ \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38040",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mctrl_gpio: split disable_ms into sync and no_sync APIs\n\nThe following splat has been observed on a SAMA5D27 platform using\natmel_serial:\n\nBUG: sleeping function called from invalid context at kernel/irq/manage.c:738\nin_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 27, name: kworker/u5:0\npreempt_count: 1, expected: 0\nINFO: lockdep is turned off.\nirq event stamp: 0\nhardirqs last  enabled at (0): [\u003c00000000\u003e] 0x0\nhardirqs last disabled at (0): [\u003cc01588f0\u003e] copy_process+0x1c4c/0x7bec\nsoftirqs last  enabled at (0): [\u003cc0158944\u003e] copy_process+0x1ca0/0x7bec\nsoftirqs last disabled at (0): [\u003c00000000\u003e] 0x0\nCPU: 0 UID: 0 PID: 27 Comm: kworker/u5:0 Not tainted 6.13.0-rc7+ #74\nHardware name: Atmel SAMA5\nWorkqueue: hci0 hci_power_on [bluetooth]\nCall trace:\n  unwind_backtrace from show_stack+0x18/0x1c\n  show_stack from dump_stack_lvl+0x44/0x70\n  dump_stack_lvl from __might_resched+0x38c/0x598\n  __might_resched from disable_irq+0x1c/0x48\n  disable_irq from mctrl_gpio_disable_ms+0x74/0xc0\n  mctrl_gpio_disable_ms from atmel_disable_ms.part.0+0x80/0x1f4\n  atmel_disable_ms.part.0 from atmel_set_termios+0x764/0x11e8\n  atmel_set_termios from uart_change_line_settings+0x15c/0x994\n  uart_change_line_settings from uart_set_termios+0x2b0/0x668\n  uart_set_termios from tty_set_termios+0x600/0x8ec\n  tty_set_termios from ttyport_set_flow_control+0x188/0x1e0\n  ttyport_set_flow_control from wilc_setup+0xd0/0x524 [hci_wilc]\n  wilc_setup [hci_wilc] from hci_dev_open_sync+0x330/0x203c [bluetooth]\n  hci_dev_open_sync [bluetooth] from hci_dev_do_open+0x40/0xb0 [bluetooth]\n  hci_dev_do_open [bluetooth] from hci_power_on+0x12c/0x664 [bluetooth]\n  hci_power_on [bluetooth] from process_one_work+0x998/0x1a38\n  process_one_work from worker_thread+0x6e0/0xfb4\n  worker_thread from kthread+0x3d4/0x484\n  kthread from ret_from_fork+0x14/0x28\n\nThis warning is emitted when trying to toggle, at the highest level,\nsome flow control (with serdev_device_set_flow_control) in a device\ndriver. At the lowest level, the atmel_serial driver is using\nserial_mctrl_gpio lib to enable/disable the corresponding IRQs\naccordingly.  The warning emitted by CONFIG_DEBUG_ATOMIC_SLEEP is due to\ndisable_irq (called in mctrl_gpio_disable_ms) being possibly called in\nsome atomic context (some tty drivers perform modem lines configuration\nin regions protected by port lock).\n\nSplit mctrl_gpio_disable_ms into two differents APIs, a non-blocking one\nand a blocking one. Replace mctrl_gpio_disable_ms calls with the\nrelevant version depending on whether the call is protected by some port\nlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_ffa: Set dma_mask for ffa devices\n\nSet dma_mask for FFA devices, otherwise DMA allocation using the device pointer\nlead to following warning:\n\nWARNING: CPU: 1 PID: 1 at kernel/dma/mapping.c:597 dma_alloc_attrs+0xe0/0x124",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38044",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: cx231xx: set device_caps for 417\n\nThe video_device for the MPEG encoder did not set device_caps.\n\nAdd this, otherwise the video device can't be registered (you get a\nWARN_ON instead).\n\nNot seen before since currently 417 support is disabled, but I found\nthis while experimenting with it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: fix debug actions order\n\nThe order of actions taken for debug was implemented incorrectly.\nNow we implemented the dump split and do the FW reset only in the\nmiddle of the dump (rather than the FW killing itself on error.)\nAs a result, some of the actions taken when applying the config\nwill now crash the device, so we need to fix the order.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38051",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Fix use-after-free in cifs_fill_dirent\n\nThere is a race condition in the readdir concurrency process, which may\naccess the rsp buffer after it has been released, triggering the\nfollowing KASAN warning.\n\n ==================================================================\n BUG: KASAN: slab-use-after-free in cifs_fill_dirent+0xb03/0xb60 [cifs]\n Read of size 4 at addr ffff8880099b819c by task a.out/342975\n\n CPU: 2 UID: 0 PID: 342975 Comm: a.out Not tainted 6.15.0-rc6+ #240 PREEMPT(full)\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.1-2.fc37 04/01/2014\n Call Trace:\n  \u003cTASK\u003e\n  dump_stack_lvl+0x53/0x70\n  print_report+0xce/0x640\n  kasan_report+0xb8/0xf0\n  cifs_fill_dirent+0xb03/0xb60 [cifs]\n  cifs_readdir+0x12cb/0x3190 [cifs]\n  iterate_dir+0x1a1/0x520\n  __x64_sys_getdents+0x134/0x220\n  do_syscall_64+0x4b/0x110\n  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n RIP: 0033:0x7f996f64b9f9\n Code: ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 89 f8 48 89\n f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01\n f0 ff ff  0d f7 c3 0c 00 f7 d8 64 89 8\n RSP: 002b:00007f996f53de78 EFLAGS: 00000207 ORIG_RAX: 000000000000004e\n RAX: ffffffffffffffda RBX: 00007f996f53ecdc RCX: 00007f996f64b9f9\n RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000003\n RBP: 00007f996f53dea0 R08: 0000000000000000 R09: 0000000000000000\n R10: 0000000000000000 R11: 0000000000000207 R12: ffffffffffffff88\n R13: 0000000000000000 R14: 00007ffc8cd9a500 R15: 00007f996f51e000\n  \u003c/TASK\u003e\n\n Allocated by task 408:\n  kasan_save_stack+0x20/0x40\n  kasan_save_track+0x14/0x30\n  __kasan_slab_alloc+0x6e/0x70\n  kmem_cache_alloc_noprof+0x117/0x3d0\n  mempool_alloc_noprof+0xf2/0x2c0\n  cifs_buf_get+0x36/0x80 [cifs]\n  allocate_buffers+0x1d2/0x330 [cifs]\n  cifs_demultiplex_thread+0x22b/0x2690 [cifs]\n  kthread+0x394/0x720\n  ret_from_fork+0x34/0x70\n  ret_from_fork_asm+0x1a/0x30\n\n Freed by task 342979:\n  kasan_save_stack+0x20/0x40\n  kasan_save_track+0x14/0x30\n  kasan_save_free_info+0x3b/0x60\n  __kasan_slab_free+0x37/0x50\n  kmem_cache_free+0x2b8/0x500\n  cifs_buf_release+0x3c/0x70 [cifs]\n  cifs_readdir+0x1c97/0x3190 [cifs]\n  iterate_dir+0x1a1/0x520\n  __x64_sys_getdents64+0x134/0x220\n  do_syscall_64+0x4b/0x110\n  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n The buggy address belongs to the object at ffff8880099b8000\n  which belongs to the cache cifs_request of size 16588\n The buggy address is located 412 bytes inside of\n  freed 16588-byte region [ffff8880099b8000, ffff8880099bc0cc)\n\n The buggy address belongs to the physical page:\n page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x99b8\n head: order:3 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0\n anon flags: 0x80000000000040(head|node=0|zone=1)\n page_type: f5(slab)\n raw: 0080000000000040 ffff888001e03400 0000000000000000 dead000000000001\n raw: 0000000000000000 0000000000010001 00000000f5000000 0000000000000000\n head: 0080000000000040 ffff888001e03400 0000000000000000 dead000000000001\n head: 0000000000000000 0000000000010001 00000000f5000000 0000000000000000\n head: 0080000000000003 ffffea0000266e01 00000000ffffffff 00000000ffffffff\n head: ffffffffffffffff 0000000000000000 00000000ffffffff 0000000000000008\n page dumped because: kasan: bad access detected\n\n Memory state around the buggy address:\n  ffff8880099b8080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n  ffff8880099b8100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n \u003effff8880099b8180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                             ^\n  ffff8880099b8200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n  ffff8880099b8280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ==================================================================\n\nPOC is available in the link [1].\n\nThe problem triggering process is as follows:\n\nProcess 1                       Process 2\n-----------------------------------\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38052",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/tipc: fix slab-use-after-free Read in tipc_aead_encrypt_done\n\nSyzbot reported a slab-use-after-free with the following call trace:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in tipc_aead_encrypt_done+0x4bd/0x510 net/tipc/crypto.c:840\n  Read of size 8 at addr ffff88807a733000 by task kworker/1:0/25\n\n  Call Trace:\n   kasan_report+0xd9/0x110 mm/kasan/report.c:601\n   tipc_aead_encrypt_done+0x4bd/0x510 net/tipc/crypto.c:840\n   crypto_request_complete include/crypto/algapi.h:266\n   aead_request_complete include/crypto/internal/aead.h:85\n   cryptd_aead_crypt+0x3b8/0x750 crypto/cryptd.c:772\n   crypto_request_complete include/crypto/algapi.h:266\n   cryptd_queue_worker+0x131/0x200 crypto/cryptd.c:181\n   process_one_work+0x9fb/0x1b60 kernel/workqueue.c:3231\n\n  Allocated by task 8355:\n   kzalloc_noprof include/linux/slab.h:778\n   tipc_crypto_start+0xcc/0x9e0 net/tipc/crypto.c:1466\n   tipc_init_net+0x2dd/0x430 net/tipc/core.c:72\n   ops_init+0xb9/0x650 net/core/net_namespace.c:139\n   setup_net+0x435/0xb40 net/core/net_namespace.c:343\n   copy_net_ns+0x2f0/0x670 net/core/net_namespace.c:508\n   create_new_namespaces+0x3ea/0xb10 kernel/nsproxy.c:110\n   unshare_nsproxy_namespaces+0xc0/0x1f0 kernel/nsproxy.c:228\n   ksys_unshare+0x419/0x970 kernel/fork.c:3323\n   __do_sys_unshare kernel/fork.c:3394\n\n  Freed by task 63:\n   kfree+0x12a/0x3b0 mm/slub.c:4557\n   tipc_crypto_stop+0x23c/0x500 net/tipc/crypto.c:1539\n   tipc_exit_net+0x8c/0x110 net/tipc/core.c:119\n   ops_exit_list+0xb0/0x180 net/core/net_namespace.c:173\n   cleanup_net+0x5b7/0xbf0 net/core/net_namespace.c:640\n   process_one_work+0x9fb/0x1b60 kernel/workqueue.c:3231\n\nAfter freed the tipc_crypto tx by delete namespace, tipc_aead_encrypt_done\nmay still visit it in cryptd_queue_worker workqueue.\n\nI reproduce this issue by:\n  ip netns add ns1\n  ip link add veth1 type veth peer name veth2\n  ip link set veth1 netns ns1\n  ip netns exec ns1 tipc bearer enable media eth dev veth1\n  ip netns exec ns1 tipc node set key this_is_a_master_key master\n  ip netns exec ns1 tipc bearer disable media eth dev veth1\n  ip netns del ns1\n\nThe key of reproduction is that, simd_aead_encrypt is interrupted, leading\nto crypto_simd_usable() return false. Thus, the cryptd_queue_worker is\ntriggered, and the tipc_crypto tx will be visited.\n\n  tipc_disc_timeout\n    tipc_bearer_xmit_skb\n      tipc_crypto_xmit\n        tipc_aead_encrypt\n          crypto_aead_encrypt\n            // encrypt()\n            simd_aead_encrypt\n              // crypto_simd_usable() is false\n              child = \u0026ctx-\u003ecryptd_tfm-\u003ebase;\n\n  simd_aead_encrypt\n    crypto_aead_encrypt\n      // encrypt()\n      cryptd_aead_encrypt_enqueue\n        cryptd_aead_enqueue\n          cryptd_enqueue_request\n            // trigger cryptd_queue_worker\n            queue_work_on(smp_processor_id(), cryptd_wq, \u0026cpu_queue-\u003ework)\n\nFix this by holding net reference count before encrypt.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix null-ptr-deref in idpf_features_check\n\nidpf_features_check is used to validate the TX packet. skb header\nlength is compared with the hardware supported value received from\nthe device control plane. The value is stored in the adapter structure\nand to access it, vport pointer is used. During reset all the vports\nare released and the vport pointer that the netdev private structure\npoints to is NULL.\n\nTo avoid null-ptr-deref, store the max header length value in netdev\nprivate structure. This also helps to cache the value and avoid\naccessing adapter pointer in hot path.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000068\n...\nRIP: 0010:idpf_features_check+0x6d/0xe0 [idpf]\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x23/0x70\n ? page_fault_oops+0x154/0x520\n ? exc_page_fault+0x76/0x190\n ? asm_exc_page_fault+0x26/0x30\n ? idpf_features_check+0x6d/0xe0 [idpf]\n netif_skb_features+0x88/0x310\n validate_xmit_skb+0x2a/0x2b0\n validate_xmit_skb_list+0x4c/0x70\n sch_direct_xmit+0x19d/0x3a0\n __dev_queue_xmit+0xb74/0xe70\n ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38057",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nespintcp: fix skb leaks\n\nA few error paths are missing a kfree_skb.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38058",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\n__legitimize_mnt(): check for MNT_SYNC_UMOUNT should be under mount_lock\n\n... or we risk stealing final mntput from sync umount - raising mnt_count\nafter umount(2) has verified that victim is not busy, but before it\nhas set MNT_SYNC_UMOUNT; in that case __legitimize_mnt() doesn't see\nthat it's safe to quietly undo mnt_count increment and leaves dropping\nthe reference to caller, where it'll be a full-blown mntput().\n\nCheck under mount_lock is needed; leaving the current one done before\ntaking that makes no sense - it's nowhere near common enough to bother\nwith.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: avoid NULL pointer dereference if no valid csum tree\n\n[BUG]\nWhen trying read-only scrub on a btrfs with rescue=idatacsums mount\noption, it will crash with the following call trace:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000208\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  CPU: 1 UID: 0 PID: 835 Comm: btrfs Tainted: G           O        6.15.0-rc3-custom+ #236 PREEMPT(full)\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n  RIP: 0010:btrfs_lookup_csums_bitmap+0x49/0x480 [btrfs]\n  Call Trace:\n   \u003cTASK\u003e\n   scrub_find_fill_first_stripe+0x35b/0x3d0 [btrfs]\n   scrub_simple_mirror+0x175/0x290 [btrfs]\n   scrub_stripe+0x5f7/0x6f0 [btrfs]\n   scrub_chunk+0x9a/0x150 [btrfs]\n   scrub_enumerate_chunks+0x333/0x660 [btrfs]\n   btrfs_scrub_dev+0x23e/0x600 [btrfs]\n   btrfs_ioctl+0x1dcf/0x2f80 [btrfs]\n   __x64_sys_ioctl+0x97/0xc0\n   do_syscall_64+0x4f/0x120\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n[CAUSE]\nMount option \"rescue=idatacsums\" will completely skip loading the csum\ntree, so that any data read will not find any data csum thus we will\nignore data checksum verification.\n\nNormally call sites utilizing csum tree will check the fs state flag\nNO_DATA_CSUMS bit, but unfortunately scrub does not check that bit at all.\n\nThis results in scrub to call btrfs_search_slot() on a NULL pointer\nand triggered above crash.\n\n[FIX]\nCheck both extent and csum tree root before doing any tree search.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: copy_verifier_state() should copy 'loop_entry' field\n\nThe bpf_verifier_state.loop_entry state should be copied by\ncopy_verifier_state(). Otherwise, .loop_entry values from unrelated\nstates would poison env-\u003ecur_state.\n\nAdditionally, env-\u003estack should not contain any states with\n.loop_entry != NULL. The states in env-\u003estack are yet to be verified,\nwhile .loop_entry is set for states that reached an equivalent state.\nThis means that env-\u003ecur_state-\u003eloop_entry should always be NULL after\npop_stack().\n\nSee the selftest in the next commit for an example of the program that\nis not safe yet is accepted by verifier w/o this fix.\n\nThis change has some verification performance impact for selftests:\n\nFile                                Program                       Insns (A)  Insns (B)  Insns   (DIFF)  States (A)  States (B)  States (DIFF)\n----------------------------------  ----------------------------  ---------  ---------  --------------  ----------  ----------  -------------\narena_htab.bpf.o                    arena_htab_llvm                     717        426  -291 (-40.59%)          57          37  -20 (-35.09%)\narena_htab_asm.bpf.o                arena_htab_asm                      597        445  -152 (-25.46%)          47          37  -10 (-21.28%)\narena_list.bpf.o                    arena_list_del                      309        279    -30 (-9.71%)          23          14   -9 (-39.13%)\niters.bpf.o                         iter_subprog_check_stacksafe        155        141    -14 (-9.03%)          15          14    -1 (-6.67%)\niters.bpf.o                         iter_subprog_iters                 1094       1003    -91 (-8.32%)          88          83    -5 (-5.68%)\niters.bpf.o                         loop_state_deps2                    479        725  +246 (+51.36%)          46          63  +17 (+36.96%)\nkmem_cache_iter.bpf.o               open_coded_iter                      63         59     -4 (-6.35%)           7           6   -1 (-14.29%)\nverifier_bits_iter.bpf.o            max_words                            92         84     -8 (-8.70%)           8           7   -1 (-12.50%)\nverifier_iterating_callbacks.bpf.o  cond_break2                         113        107     -6 (-5.31%)          12          12    +0 (+0.00%)\n\nAnd significant negative impact for sched_ext:\n\nFile               Program                 Insns (A)  Insns (B)  Insns         (DIFF)  States (A)  States (B)  States      (DIFF)\n-----------------  ----------------------  ---------  ---------  --------------------  ----------  ----------  ------------------\nbpf.bpf.o          lavd_init                    7039      14723      +7684 (+109.16%)         490        1139     +649 (+132.45%)\nbpf.bpf.o          layered_dispatch            11485      10548         -937 (-8.16%)         848         762       -86 (-10.14%)\nbpf.bpf.o          layered_dump                 7422    1000001  +992579 (+13373.47%)         681       31178  +30497 (+4478.27%)\nbpf.bpf.o          layered_enqueue             16854      71127     +54273 (+322.02%)        1611        6450    +4839 (+300.37%)\nbpf.bpf.o          p2dq_dispatch                 665        791        +126 (+18.95%)          68          78       +10 (+14.71%)\nbpf.bpf.o          p2dq_init                    2343       2980        +637 (+27.19%)         201         237       +36 (+17.91%)\nbpf.bpf.o          refresh_layer_cpumasks      16487     674760   +658273 (+3992.68%)        1770       65370  +63600 (+3593.22%)\nbpf.bpf.o          rusty_select_cpu             1937      40872    +38935 (+2010.07%)         177        3210   +3033 (+1713.56%)\nscx_central.bpf.o  central_dispatch              636       2687      +2051 (+322.48%)          63         227     +164 (+260.32%)\nscx_nest.bpf.o     nest_init                     636        815        +179 (+28.14%)          60          73       +13 (+21.67%)\nscx_qmap.bpf.o     qmap_dispatch      \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38061",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: pktgen: fix access outside of user given buffer in pktgen_thread_write()\n\nHonour the user given buffer size for the strn_len() calls (otherwise\nstrn_len() will access memory outside of the user given buffer).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngenirq/msi: Store the IOMMU IOVA directly in msi_desc instead of iommu_cookie\n\nThe IOMMU translation for MSI message addresses has been a 2-step process,\nseparated in time:\n\n 1) iommu_dma_prepare_msi(): A cookie pointer containing the IOVA address\n    is stored in the MSI descriptor when an MSI interrupt is allocated.\n\n 2) iommu_dma_compose_msi_msg(): this cookie pointer is used to compute a\n    translated message address.\n\nThis has an inherent lifetime problem for the pointer stored in the cookie\nthat must remain valid between the two steps. However, there is no locking\nat the irq layer that helps protect the lifetime. Today, this works under\nthe assumption that the iommu domain is not changed while MSI interrupts\nbeing programmed. This is true for normal DMA API users within the kernel,\nas the iommu domain is attached before the driver is probed and cannot be\nchanged while a driver is attached.\n\nClassic VFIO type1 also prevented changing the iommu domain while VFIO was\nrunning as it does not support changing the \"container\" after starting up.\n\nHowever, iommufd has improved this so that the iommu domain can be changed\nduring VFIO operation. This potentially allows userspace to directly race\nVFIO_DEVICE_ATTACH_IOMMUFD_PT (which calls iommu_attach_group()) and\nVFIO_DEVICE_SET_IRQS (which calls into iommu_dma_compose_msi_msg()).\n\nThis potentially causes both the cookie pointer and the unlocked call to\niommu_get_domain_for_dev() on the MSI translation path to become UAFs.\n\nFix the MSI cookie UAF by removing the cookie pointer. The translated IOVA\naddress is already known during iommu_dma_prepare_msi() and cannot change.\nThus, it can simply be stored as an integer in the MSI descriptor.\n\nThe other UAF related to iommu_get_domain_for_dev() will be addressed in\npatch \"iommu: Make iommu_dma_prepare_msi() into a generic operation\" by\nusing the IOMMU group mutex.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38063",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm: fix unconditional IO throttle caused by REQ_PREFLUSH\n\nWhen a bio with REQ_PREFLUSH is submitted to dm, __send_empty_flush()\ngenerates a flush_bio with REQ_OP_WRITE | REQ_PREFLUSH | REQ_SYNC,\nwhich causes the flush_bio to be throttled by wbt_wait().\n\nAn example from v5.4, similar problem also exists in upstream:\n\n    crash\u003e bt 2091206\n    PID: 2091206  TASK: ffff2050df92a300  CPU: 109  COMMAND: \"kworker/u260:0\"\n     #0 [ffff800084a2f7f0] __switch_to at ffff80004008aeb8\n     #1 [ffff800084a2f820] __schedule at ffff800040bfa0c4\n     #2 [ffff800084a2f880] schedule at ffff800040bfa4b4\n     #3 [ffff800084a2f8a0] io_schedule at ffff800040bfa9c4\n     #4 [ffff800084a2f8c0] rq_qos_wait at ffff8000405925bc\n     #5 [ffff800084a2f940] wbt_wait at ffff8000405bb3a0\n     #6 [ffff800084a2f9a0] __rq_qos_throttle at ffff800040592254\n     #7 [ffff800084a2f9c0] blk_mq_make_request at ffff80004057cf38\n     #8 [ffff800084a2fa60] generic_make_request at ffff800040570138\n     #9 [ffff800084a2fae0] submit_bio at ffff8000405703b4\n    #10 [ffff800084a2fb50] xlog_write_iclog at ffff800001280834 [xfs]\n    #11 [ffff800084a2fbb0] xlog_sync at ffff800001280c3c [xfs]\n    #12 [ffff800084a2fbf0] xlog_state_release_iclog at ffff800001280df4 [xfs]\n    #13 [ffff800084a2fc10] xlog_write at ffff80000128203c [xfs]\n    #14 [ffff800084a2fcd0] xlog_cil_push at ffff8000012846dc [xfs]\n    #15 [ffff800084a2fda0] xlog_cil_push_work at ffff800001284a2c [xfs]\n    #16 [ffff800084a2fdb0] process_one_work at ffff800040111d08\n    #17 [ffff800084a2fe00] worker_thread at ffff8000401121cc\n    #18 [ffff800084a2fe70] kthread at ffff800040118de4\n\nAfter commit 2def2845cc33 (\"xfs: don't allow log IO to be throttled\"),\nthe metadata submitted by xlog_write_iclog() should not be throttled.\nBut due to the existence of the dm layer, throttling flush_bio indirectly\ncauses the metadata bio to be throttled.\n\nFix this by conditionally adding REQ_IDLE to flush_bio.bi_opf, which makes\nwbt_should_throttle() return false to avoid wbt_wait().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38064",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio: break and reset virtio devices on device_shutdown()\n\nHongyu reported a hang on kexec in a VM. QEMU reported invalid memory\naccesses during the hang.\n\n\tInvalid read at addr 0x102877002, size 2, region '(null)', reason: rejected\n\tInvalid write at addr 0x102877A44, size 2, region '(null)', reason: rejected\n\t...\n\nIt was traced down to virtio-console. Kexec works fine if virtio-console\nis not in use.\n\nThe issue is that virtio-console continues to write to the MMIO even after\nunderlying virtio-pci device is reset.\n\nAdditionally, Eric noticed that IOMMUs are reset before devices, if\ndevices are not reset on shutdown they continue to poke at guest memory\nand get errors from the IOMMU. Some devices get wedged then.\n\nThe problem can be solved by breaking all virtio devices on virtio\nbus shutdown, then resetting them.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38065",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\norangefs: Do not truncate file size\n\n'len' is used to store the result of i_size_read(), so making 'len'\na size_t results in truncation to 4GiB on 32-bit systems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: lzo - Fix compression buffer overrun\n\nUnlike the decompression code, the compression code in LZO never\nchecked for output overruns.  It instead assumes that the caller\nalways provides enough buffer space, disregarding the buffer length\nprovided by the caller.\n\nAdd a safe compression interface that checks for the end of buffer\nbefore each write.  Use the safe interface in crypto/lzo.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibnvdimm/labels: Fix divide error in nd_label_data_init()\n\nIf a faulty CXL memory device returns a broken zero LSA size in its\nmemory device information (Identify Memory Device (Opcode 4000h), CXL\nspec. 3.1, 8.2.9.9.1.1), a divide error occurs in the libnvdimm\ndriver:\n\n Oops: divide error: 0000 [#1] PREEMPT SMP NOPTI\n RIP: 0010:nd_label_data_init+0x10e/0x800 [libnvdimm]\n\nCode and flow:\n\n1) CXL Command 4000h returns LSA size = 0\n2) config_size is assigned to zero LSA size (CXL pmem driver):\n\ndrivers/cxl/pmem.c:             .config_size = mds-\u003elsa_size,\n\n3) max_xfer is set to zero (nvdimm driver):\n\ndrivers/nvdimm/label.c: max_xfer = min_t(size_t, ndd-\u003ensarea.max_xfer, config_size);\n\n4) A subsequent DIV_ROUND_UP() causes a division by zero:\n\ndrivers/nvdimm/label.c: /* Make our initial read size a multiple of max_xfer size */\ndrivers/nvdimm/label.c: read_size = min(DIV_ROUND_UP(read_size, max_xfer) * max_xfer,\ndrivers/nvdimm/label.c-                 config_size);\n\nFix this by checking the config size parameter by extending an\nexisting check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38074",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvhost-scsi: protect vq-\u003elog_used with vq-\u003emutex\n\nThe vhost-scsi completion path may access vq-\u003elog_base when vq-\u003elog_used is\nalready set to false.\n\n    vhost-thread                       QEMU-thread\n\nvhost_scsi_complete_cmd_work()\n-\u003e vhost_add_used()\n   -\u003e vhost_add_used_n()\n      if (unlikely(vq-\u003elog_used))\n                                      QEMU disables vq-\u003elog_used\n                                      via VHOST_SET_VRING_ADDR.\n                                      mutex_lock(\u0026vq-\u003emutex);\n                                      vq-\u003elog_used = false now!\n                                      mutex_unlock(\u0026vq-\u003emutex);\n\n\t\t\t\t      QEMU gfree(vq-\u003elog_base)\n        log_used()\n        -\u003e log_write(vq-\u003elog_base)\n\nAssuming the VMM is QEMU. The vq-\u003elog_base is from QEMU userpace and can be\nreclaimed via gfree(). As a result, this causes invalid memory writes to\nQEMU userspace.\n\nThe control queue path has the same issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell-wmi-sysman: Avoid buffer overflow in current_password_store()\n\nIf the 'buf' array received from the user contains an empty string, the\n'length' variable will be zero. Accessing the 'buf' array element with\nindex 'length - 1' will result in a buffer overflow.\n\nAdd a check for an empty string.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Fix race of buffer access at PCM OSS layer\n\nThe PCM OSS layer tries to clear the buffer with the silence data at\ninitialization (or reconfiguration) of a stream with the explicit call\nof snd_pcm_format_set_silence() with runtime-\u003edma_area.  But this may\nlead to a UAF because the accessed runtime-\u003edma_area might be freed\nconcurrently, as it's performed outside the PCM ops.\n\nFor avoiding it, move the code into the PCM core and perform it inside\nthe buffer access lock, so that it won't be changed during the\noperation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38079",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: algif_hash - fix double free in hash_accept\n\nIf accept(2) is called on socket type algif_hash with\nMSG_MORE flag set and crypto_ahash_import fails,\nsk2 is freed. However, it is also freed in af_alg_release,\nleading to slab-use-after-free error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38080",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Increase block_sequence array size\n\n[Why]\nIt's possible to generate more than 50 steps in hwss_build_fast_sequence,\nfor example with a 6-pipe asic where all pipes are in one MPC chain. This\noverflows the block_sequence buffer and corrupts block_sequence_steps,\ncausing a crash.\n\n[How]\nExpand block_sequence to 100 items. A naive upper bound on the possible\nnumber of steps for a 6-pipe asic, ignoring the potential for steps to be\nmutually exclusive, is 91 with current code, therefore 100 is sufficient.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38081",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi-rockchip: Fix register out of bounds access\n\nDo not write native chip select stuff for GPIO chip selects.\nGPIOs can be numbered much higher than native CS.\nAlso, it makes no sense.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: prio: fix a race in prio_tune()\n\nGerrard Tai reported a race condition in PRIO, whenever SFQ perturb timer\nfires at the wrong time.\n\nThe race is as follows:\n\nCPU 0                                 CPU 1\n[1]: lock root\n[2]: qdisc_tree_flush_backlog()\n[3]: unlock root\n |\n |                                    [5]: lock root\n |                                    [6]: rehash\n |                                    [7]: qdisc_tree_reduce_backlog()\n |\n[4]: qdisc_put()\n\nThis can be abused to underflow a parent's qlen.\n\nCalling qdisc_purge_queue() instead of qdisc_tree_flush_backlog()\nshould fix the race, because all packets will be purged from the qdisc\nbefore releasing the lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38084",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: unshare page tables during VMA split, not before\n\nCurrently, __split_vma() triggers hugetlb page table unsharing through\nvm_ops-\u003emay_split().  This happens before the VMA lock and rmap locks are\ntaken - which is too early, it allows racing VMA-locked page faults in our\nprocess and racing rmap walks from other processes to cause page tables to\nbe shared again before we actually perform the split.\n\nFix it by explicitly calling into the hugetlb unshare logic from\n__split_vma() in the same place where THP splitting also happens.  At that\npoint, both the VMA and the rmap(s) are write-locked.\n\nAn annoying detail is that we can now call into the helper\nhugetlb_unshare_pmds() from two different locking contexts:\n\n1. from hugetlb_split(), holding:\n    - mmap lock (exclusively)\n    - VMA lock\n    - file rmap lock (exclusively)\n2. hugetlb_unshare_all_pmds(), which I think is designed to be able to\n   call us with only the mmap lock held (in shared mode), but currently\n   only runs while holding mmap lock (exclusively) and VMA lock\n\nBackporting note:\nThis commit fixes a racy protection that was introduced in commit\nb30c14cd6102 (\"hugetlb: unshare some PMDs when splitting VMAs\"); that\ncommit claimed to fix an issue introduced in 5.13, but it should actually\nalso go all the way back.\n\n[jannh@google.com: v2]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38085",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/hugetlb: fix huge_pmd_unshare() vs GUP-fast race\n\nhuge_pmd_unshare() drops a reference on a page table that may have\npreviously been shared across processes, potentially turning it into a\nnormal page table used in another process in which unrelated VMAs can\nafterwards be installed.\n\nIf this happens in the middle of a concurrent gup_fast(), gup_fast() could\nend up walking the page tables of another process.  While I don't see any\nway in which that immediately leads to kernel memory corruption, it is\nreally weird and unexpected.\n\nFix it with an explicit broadcast IPI through tlb_remove_table_sync_one(),\njust like we do in khugepaged when removing page tables for a THP\ncollapse.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38087",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: fix use-after-free in taprio_dev_notifier\n\nSince taprio's taprio_dev_notifier() isn't protected by an\nRCU read-side critical section, a race with advance_sched()\ncan lead to a use-after-free.\n\nAdding rcu_read_lock() inside taprio_dev_notifier() prevents this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38088",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv/memtrace: Fix out of bounds issue in memtrace mmap\n\nmemtrace mmap issue has an out of bounds issue. This patch fixes the by\nchecking that the requested mapping region size should stay within the\nallocated region size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38089",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsunrpc: handle SVC_GARBAGE during svc auth processing as auth error\n\ntianshuo han reported a remotely-triggerable crash if the client sends a\nkernel RPC server a specially crafted packet. If decoding the RPC reply\nfails in such a way that SVC_GARBAGE is returned without setting the\nrq_accept_statp pointer, then that pointer can be dereferenced and a\nvalue stored there.\n\nIf it's the first time the thread has processed an RPC, then that\npointer will be set to NULL and the kernel will crash. In other cases,\nit could create a memory scribble.\n\nThe server sunrpc code treats a SVC_GARBAGE return from svc_authenticate\nor pg_authenticate as if it should send a GARBAGE_ARGS reply. RFC 5531\nsays that if authentication fails that the RPC should be rejected\ninstead with a status of AUTH_ERR.\n\nHandle a SVC_GARBAGE return as an AUTH_ERROR, with a reason of\nAUTH_BADCRED instead of returning GARBAGE_ARGS in that case. This\nsidesteps the whole problem of touching the rpc_accept_statp pointer in\nthis situation and avoids the crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers/rapidio/rio_cm.c: prevent possible heap overwrite\n\nIn\n\nriocm_cdev_ioctl(RIO_CM_CHAN_SEND)\n   -\u003e cm_chan_msg_send()\n      -\u003e riocm_ch_send()\n\ncm_chan_msg_send() checks that userspace didn't send too much data but\nriocm_ch_send() failed to check that userspace sent sufficient data.  The\nresult is that riocm_ch_send() can write to fields in the rio_ch_chan_hdr\nwhich were outside the bounds of the space which cm_chan_msg_send()\nallocated.\n\nAddress this by teaching riocm_ch_send() to check that the entire\nrio_ch_chan_hdr was copied in from userspace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38094",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: cadence: macb: Fix a possible deadlock in macb_halt_tx.\n\nThere is a situation where after THALT is set high, TGO stays high as\nwell. Because jiffies are never updated, as we are in a context with\ninterrupts disabled, we never exit that loop and have a deadlock.\n\nThat deadlock was noticed on a sama5d4 device that stayed locked for days.\n\nUse retries instead of jiffies so that the timeout really works and we do\nnot have a deadlock anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38095",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf: insert memory barrier before updating num_fences\n\nsmp_store_mb() inserts memory barrier after storing operation.\nIt is different with what the comment is originally aiming so Null\npointer dereference can be happened if memory update is reordered.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nespintcp: remove encap socket caching to avoid reference leak\n\nThe current scheme for caching the encap socket can lead to reference\nleaks when we try to delete the netns.\n\nThe reference chain is: xfrm_state -\u003e enacp_sk -\u003e netns\n\nSince the encap socket is a userspace socket, it holds a reference on\nthe netns. If we delete the espintcp state (through flush or\nindividual delete) before removing the netns, the reference on the\nsocket is dropped and the netns is correctly deleted. Otherwise, the\nnetns may not be reachable anymore (if all processes within the ns\nhave terminated), so we cannot delete the xfrm state to drop its\nreference on the socket.\n\nThis patch results in a small (~2% in my tests) performance\nregression.\n\nA GC-type mechanism could be added for the socket cache, to clear\nreferences if the state hasn't been used \"recently\", but it's a lot\nmore complex than just not caching the socket.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38098",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Don't treat wb connector as physical in create_validate_stream_for_sink\n\nDon't try to operate on a drm_wb_connector as an amdgpu_dm_connector.\nWhile dereferencing aconnector-\u003ebase will \"work\" it's wrong and\nmight lead to unknown bad things. Just... don't.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38099",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Disable SCO support if READ_VOICE_SETTING is unsupported/broken\n\nA SCO connection without the proper voice_setting can cause\nthe controller to lock up.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/iopl: Cure TIF_IO_BITMAP inconsistencies\n\nio_bitmap_exit() is invoked from exit_thread() when a task exists or\nwhen a fork fails. In the latter case the exit_thread() cleans up\nresources which were allocated during fork().\n\nio_bitmap_exit() invokes task_update_io_bitmap(), which in turn ends up\nin tss_update_io_bitmap(). tss_update_io_bitmap() operates on the\ncurrent task. If current has TIF_IO_BITMAP set, but no bitmap installed,\ntss_update_io_bitmap() crashes with a NULL pointer dereference.\n\nThere are two issues, which lead to that problem:\n\n  1) io_bitmap_exit() should not invoke task_update_io_bitmap() when\n     the task, which is cleaned up, is not the current task. That's a\n     clear indicator for a cleanup after a failed fork().\n\n  2) A task should not have TIF_IO_BITMAP set and neither a bitmap\n     installed nor IOPL emulation level 3 activated.\n\n     This happens when a kernel thread is created in the context of\n     a user space thread, which has TIF_IO_BITMAP set as the thread\n     flags are copied and the IO bitmap pointer is cleared.\n\n     Other than in the failed fork() case this has no impact because\n     kernel threads including IO workers never return to user space and\n     therefore never invoke tss_update_io_bitmap().\n\nCure this by adding the missing cleanups and checks:\n\n  1) Prevent io_bitmap_exit() to invoke task_update_io_bitmap() if\n     the to be cleaned up task is not the current task.\n\n  2) Clear TIF_IO_BITMAP in copy_thread() unconditionally. For user\n     space forks it is set later, when the IO bitmap is inherited in\n     io_bitmap_share().\n\nFor paranoia sake, add a warning into tss_update_io_bitmap() to catch\nthe case, when that code is invoked with inconsistent state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38102",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nVMCI: fix race between vmci_host_setup_notify and vmci_ctx_unset_notify\n\nDuring our test, it is found that a warning can be trigger in try_grab_folio\nas follow:\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 0 PID: 1678 at mm/gup.c:147 try_grab_folio+0x106/0x130\n  Modules linked in:\n  CPU: 0 UID: 0 PID: 1678 Comm: syz.3.31 Not tainted 6.15.0-rc5 #163 PREEMPT(undef)\n  RIP: 0010:try_grab_folio+0x106/0x130\n  Call Trace:\n   \u003cTASK\u003e\n   follow_huge_pmd+0x240/0x8e0\n   follow_pmd_mask.constprop.0.isra.0+0x40b/0x5c0\n   follow_pud_mask.constprop.0.isra.0+0x14a/0x170\n   follow_page_mask+0x1c2/0x1f0\n   __get_user_pages+0x176/0x950\n   __gup_longterm_locked+0x15b/0x1060\n   ? gup_fast+0x120/0x1f0\n   gup_fast_fallback+0x17e/0x230\n   get_user_pages_fast+0x5f/0x80\n   vmci_host_unlocked_ioctl+0x21c/0xf80\n  RIP: 0033:0x54d2cd\n  ---[ end trace 0000000000000000 ]---\n\nDigging into the source, context-\u003enotify_page may init by get_user_pages_fast\nand can be seen in vmci_ctx_unset_notify which will try to put_page. However\nget_user_pages_fast is not finished here and lead to following\ntry_grab_folio warning. The race condition is shown as follow:\n\ncpu0\t\t\tcpu1\nvmci_host_do_set_notify\nvmci_host_setup_notify\nget_user_pages_fast(uva, 1, FOLL_WRITE, \u0026context-\u003enotify_page);\nlockless_pages_from_mm\ngup_pgd_range\ngup_huge_pmd  // update \u0026context-\u003enotify_page\n\t\t\tvmci_host_do_set_notify\n\t\t\tvmci_ctx_unset_notify\n\t\t\tnotify_page = context-\u003enotify_page;\n\t\t\tif (notify_page)\n\t\t\tput_page(notify_page);\t// page is freed\n__gup_longterm_locked\n__get_user_pages\nfollow_trans_huge_pmd\ntry_grab_folio // warn here\n\nTo slove this, use local variable page to make notify_page can be seen\nafter finish get_user_pages_fast.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38105",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Kill timer properly at removal\n\nThe USB-audio MIDI code initializes the timer, but in a rare case, the\ndriver might be freed without the disconnect call.  This leaves the\ntimer in an active state while the assigned object is released via\nsnd_usbmidi_free(), which ends up with a kernel warning when the debug\nconfiguration is enabled, as spotted by fuzzer.\n\nFor avoiding the problem, put timer_shutdown_sync() at\nsnd_usbmidi_free(), so that the timer can be killed properly.\nWhile we're at it, replace the existing timer_delete_sync() at the\ndisconnect callback with timer_shutdown_sync(), too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38107",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: ets: fix a race in ets_qdisc_change()\n\nGerrard Tai reported a race condition in ETS, whenever SFQ perturb timer\nfires at the wrong time.\n\nThe race is as follows:\n\nCPU 0                                 CPU 1\n[1]: lock root\n[2]: qdisc_tree_flush_backlog()\n[3]: unlock root\n |\n |                                    [5]: lock root\n |                                    [6]: rehash\n |                                    [7]: qdisc_tree_reduce_backlog()\n |\n[4]: qdisc_put()\n\nThis can be abused to underflow a parent's qlen.\n\nCalling qdisc_purge_queue() instead of qdisc_tree_flush_backlog()\nshould fix the race, because all packets will be purged from the qdisc\nbefore releasing the lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38108",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: red: fix a race in __red_change()\n\nGerrard Tai reported a race condition in RED, whenever SFQ perturb timer\nfires at the wrong time.\n\nThe race is as follows:\n\nCPU 0                                 CPU 1\n[1]: lock root\n[2]: qdisc_tree_flush_backlog()\n[3]: unlock root\n |\n |                                    [5]: lock root\n |                                    [6]: rehash\n |                                    [7]: qdisc_tree_reduce_backlog()\n |\n[4]: qdisc_put()\n\nThis can be abused to underflow a parent's qlen.\n\nCalling qdisc_purge_queue() instead of qdisc_tree_flush_backlog()\nshould fix the race, because all packets will be purged from the qdisc\nbefore releasing the lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38109",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix ECVF vports unload on shutdown flow\n\nFix shutdown flow UAF when a virtual function is created on the embedded\nchip (ECVF) of a BlueField device. In such case the vport acl ingress\ntable is not properly destroyed.\n\nECVF functionality is independent of ecpf_vport_exists capability and\nthus functions mlx5_eswitch_(enable|disable)_pf_vf_vports() should not\ntest it when enabling/disabling ECVF vports.\n\nkernel log:\n[] refcount_t: underflow; use-after-free.\n[] WARNING: CPU: 3 PID: 1 at lib/refcount.c:28\n   refcount_warn_saturate+0x124/0x220\n----------------\n[] Call trace:\n[] refcount_warn_saturate+0x124/0x220\n[] tree_put_node+0x164/0x1e0 [mlx5_core]\n[] mlx5_destroy_flow_table+0x98/0x2c0 [mlx5_core]\n[] esw_acl_ingress_table_destroy+0x28/0x40 [mlx5_core]\n[] esw_acl_ingress_lgcy_cleanup+0x80/0xf4 [mlx5_core]\n[] esw_legacy_vport_acl_cleanup+0x44/0x60 [mlx5_core]\n[] esw_vport_cleanup+0x64/0x90 [mlx5_core]\n[] mlx5_esw_vport_disable+0xc0/0x1d0 [mlx5_core]\n[] mlx5_eswitch_unload_ec_vf_vports+0xcc/0x150 [mlx5_core]\n[] mlx5_eswitch_disable_sriov+0x198/0x2a0 [mlx5_core]\n[] mlx5_device_disable_sriov+0xb8/0x1e0 [mlx5_core]\n[] mlx5_sriov_detach+0x40/0x50 [mlx5_core]\n[] mlx5_unload+0x40/0xc4 [mlx5_core]\n[] mlx5_unload_one_devl_locked+0x6c/0xe4 [mlx5_core]\n[] mlx5_unload_one+0x3c/0x60 [mlx5_core]\n[] shutdown+0x7c/0xa4 [mlx5_core]\n[] pci_device_shutdown+0x3c/0xa0\n[] device_shutdown+0x170/0x340\n[] __do_sys_reboot+0x1f4/0x2a0\n[] __arm64_sys_reboot+0x2c/0x40\n[] invoke_syscall+0x78/0x100\n[] el0_svc_common.constprop.0+0x54/0x184\n[] do_el0_svc+0x30/0xac\n[] el0_svc+0x48/0x160\n[] el0t_64_sync_handler+0xa4/0x12c\n[] el0t_64_sync+0x1a4/0x1a8\n[] --[ end trace 9c4601d68c70030e ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38110",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mdiobus: Fix potential out-of-bounds clause 45 read/write access\n\nWhen using publicly available tools like 'mdio-tools' to read/write data\nfrom/to network interface and its PHY via C45 (clause 45) mdiobus,\nthere is no verification of parameters passed to the ioctl and\nit accepts any mdio address.\nCurrently there is support for 32 addresses in kernel via PHY_MAX_ADDR define,\nbut it is possible to pass higher value than that via ioctl.\nWhile read/write operation should generally fail in this case,\nmdiobus provides stats array, where wrong address may allow out-of-bounds\nread/write.\n\nFix that by adding address verification before C45 read/write operation.\nWhile this excludes this access from any statistics, it improves security of\nread/write operation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38111",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mdiobus: Fix potential out-of-bounds read/write access\n\nWhen using publicly available tools like 'mdio-tools' to read/write data\nfrom/to network interface and its PHY via mdiobus, there is no verification of\nparameters passed to the ioctl and it accepts any mdio address.\nCurrently there is support for 32 addresses in kernel via PHY_MAX_ADDR define,\nbut it is possible to pass higher value than that via ioctl.\nWhile read/write operation should generally fail in this case,\nmdiobus provides stats array, where wrong address may allow out-of-bounds\nread/write.\n\nFix that by adding address verification before read/write operation.\nWhile this excludes this access from any statistics, it improves security of\nread/write operation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38112",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Fix TOCTOU issue in sk_is_readable()\n\nsk-\u003esk_prot-\u003esock_is_readable is a valid function pointer when sk resides\nin a sockmap. After the last sk_psock_put() (which usually happens when\nsocket is removed from sockmap), sk-\u003esk_prot gets restored and\nsk-\u003esk_prot-\u003esock_is_readable becomes NULL.\n\nThis makes sk_is_readable() racy, if the value of sk-\u003esk_prot is reloaded\nafter the initial check. Which in turn may lead to a null pointer\ndereference.\n\nEnsure the function pointer does not turn NULL after the check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38113",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Fix NULL pointer dereference when nosmp is used\n\nWith nosmp in cmdline, other CPUs are not brought up, leaving\ntheir cpc_desc_ptr NULL. CPU0's iteration via for_each_possible_cpu()\ndereferences these NULL pointers, causing panic.\n\nPanic backtrace:\n\n[    0.401123] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000b8\n...\n[    0.403255] [\u003cffffffff809a5818\u003e] cppc_allow_fast_switch+0x6a/0xd4\n...\nKernel panic - not syncing: Attempted to kill init!\n\n[ rjw: New subject ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38115",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: sch_sfq: fix a potential crash on gso_skb handling\n\nSFQ has an assumption of always being able to queue at least one packet.\n\nHowever, after the blamed commit, sch-\u003eq.len can be inflated by packets\nin sch-\u003egso_skb, and an enqueue() on an empty SFQ qdisc can be followed\nby an immediate drop.\n\nFix sfq_drop() to properly clear q-\u003etail in this situation.\n\n\nip netns add lb\nip link add dev to-lb type veth peer name in-lb netns lb\nethtool -K to-lb tso off                 # force qdisc to requeue gso_skb\nip netns exec lb ethtool -K in-lb gro on # enable NAPI\nip link set dev to-lb up\nip -netns lb link set dev in-lb up\nip addr add dev to-lb 192.168.20.1/24\nip -netns lb addr add dev in-lb 192.168.20.2/24\ntc qdisc replace dev to-lb root sfq limit 100\n\nip netns exec lb netserver\n\nnetperf -H 192.168.20.2 -l 100 \u0026\nnetperf -H 192.168.20.2 -l 100 \u0026\nnetperf -H 192.168.20.2 -l 100 \u0026\nnetperf -H 192.168.20.2 -l 100 \u0026",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38117",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Protect mgmt_pending list with its own lock\n\nThis uses a mutex to protect from concurrent access of mgmt_pending\nlist which can cause crashes like:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in hci_sock_get_channel+0x60/0x68 net/bluetooth/hci_sock.c:91\nRead of size 2 at addr ffff0000c48885b2 by task syz.4.334/7318\n\nCPU: 0 UID: 0 PID: 7318 Comm: syz.4.334 Not tainted 6.15.0-rc7-syzkaller-g187899f4124a #0 PREEMPT\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025\nCall trace:\n show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:466 (C)\n __dump_stack+0x30/0x40 lib/dump_stack.c:94\n dump_stack_lvl+0xd8/0x12c lib/dump_stack.c:120\n print_address_description+0xa8/0x254 mm/kasan/report.c:408\n print_report+0x68/0x84 mm/kasan/report.c:521\n kasan_report+0xb0/0x110 mm/kasan/report.c:634\n __asan_report_load2_noabort+0x20/0x2c mm/kasan/report_generic.c:379\n hci_sock_get_channel+0x60/0x68 net/bluetooth/hci_sock.c:91\n mgmt_pending_find+0x7c/0x140 net/bluetooth/mgmt_util.c:223\n pending_find net/bluetooth/mgmt.c:947 [inline]\n remove_adv_monitor+0x44/0x1a4 net/bluetooth/mgmt.c:5445\n hci_mgmt_cmd+0x780/0xc00 net/bluetooth/hci_sock.c:1712\n hci_sock_sendmsg+0x544/0xbb0 net/bluetooth/hci_sock.c:1832\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg net/socket.c:727 [inline]\n sock_write_iter+0x25c/0x378 net/socket.c:1131\n new_sync_write fs/read_write.c:591 [inline]\n vfs_write+0x62c/0x97c fs/read_write.c:684\n ksys_write+0x120/0x210 fs/read_write.c:736\n __do_sys_write fs/read_write.c:747 [inline]\n __se_sys_write fs/read_write.c:744 [inline]\n __arm64_sys_write+0x7c/0x90 fs/read_write.c:744\n __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]\n invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49\n el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132\n do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151\n el0_svc+0x58/0x17c arch/arm64/kernel/entry-common.c:767\n el0t_64_sync_handler+0x78/0x108 arch/arm64/kernel/entry-common.c:786\n el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:600\n\nAllocated by task 7037:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x40/0x78 mm/kasan/common.c:68\n kasan_save_alloc_info+0x44/0x54 mm/kasan/generic.c:562\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0x9c/0xb4 mm/kasan/common.c:394\n kasan_kmalloc include/linux/kasan.h:260 [inline]\n __do_kmalloc_node mm/slub.c:4327 [inline]\n __kmalloc_noprof+0x2fc/0x4c8 mm/slub.c:4339\n kmalloc_noprof include/linux/slab.h:909 [inline]\n sk_prot_alloc+0xc4/0x1f0 net/core/sock.c:2198\n sk_alloc+0x44/0x3ac net/core/sock.c:2254\n bt_sock_alloc+0x4c/0x300 net/bluetooth/af_bluetooth.c:148\n hci_sock_create+0xa8/0x194 net/bluetooth/hci_sock.c:2202\n bt_sock_create+0x14c/0x24c net/bluetooth/af_bluetooth.c:132\n __sock_create+0x43c/0x91c net/socket.c:1541\n sock_create net/socket.c:1599 [inline]\n __sys_socket_create net/socket.c:1636 [inline]\n __sys_socket+0xd4/0x1c0 net/socket.c:1683\n __do_sys_socket net/socket.c:1697 [inline]\n __se_sys_socket net/socket.c:1695 [inline]\n __arm64_sys_socket+0x7c/0x94 net/socket.c:1695\n __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]\n invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49\n el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132\n do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151\n el0_svc+0x58/0x17c arch/arm64/kernel/entry-common.c:767\n el0t_64_sync_handler+0x78/0x108 arch/arm64/kernel/entry-common.c:786\n el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:600\n\nFreed by task 6607:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x40/0x78 mm/kasan/common.c:68\n kasan_save_free_info+0x58/0x70 mm/kasan/generic.c:576\n poison_slab_object mm/kasan/common.c:247 [inline]\n __kasan_slab_free+0x68/0x88 mm/kasan/common.c:264\n kasan_slab_free include/linux/kasan.h:233 [inline\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38118",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Fix UAF on mgmt_remove_adv_monitor_complete\n\nThis reworks MGMT_OP_REMOVE_ADV_MONITOR to not use mgmt_pending_add to\navoid crashes like bellow:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in mgmt_remove_adv_monitor_complete+0xe5/0x540 net/bluetooth/mgmt.c:5406\nRead of size 8 at addr ffff88801c53f318 by task kworker/u5:5/5341\n\nCPU: 0 UID: 0 PID: 5341 Comm: kworker/u5:5 Not tainted 6.15.0-syzkaller-10402-g4cb6c8af8591 #0 PREEMPT(full)\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nWorkqueue: hci0 hci_cmd_sync_work\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x189/0x250 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xd2/0x2b0 mm/kasan/report.c:521\n kasan_report+0x118/0x150 mm/kasan/report.c:634\n mgmt_remove_adv_monitor_complete+0xe5/0x540 net/bluetooth/mgmt.c:5406\n hci_cmd_sync_work+0x261/0x3a0 net/bluetooth/hci_sync.c:334\n process_one_work kernel/workqueue.c:3238 [inline]\n process_scheduled_works+0xade/0x17b0 kernel/workqueue.c:3321\n worker_thread+0x8a0/0xda0 kernel/workqueue.c:3402\n kthread+0x711/0x8a0 kernel/kthread.c:464\n ret_from_fork+0x3fc/0x770 arch/x86/kernel/process.c:148\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245\n \u003c/TASK\u003e\n\nAllocated by task 5987:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3e/0x80 mm/kasan/common.c:68\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0x93/0xb0 mm/kasan/common.c:394\n kasan_kmalloc include/linux/kasan.h:260 [inline]\n __kmalloc_cache_noprof+0x230/0x3d0 mm/slub.c:4358\n kmalloc_noprof include/linux/slab.h:905 [inline]\n kzalloc_noprof include/linux/slab.h:1039 [inline]\n mgmt_pending_new+0x65/0x240 net/bluetooth/mgmt_util.c:252\n mgmt_pending_add+0x34/0x120 net/bluetooth/mgmt_util.c:279\n remove_adv_monitor+0x103/0x1b0 net/bluetooth/mgmt.c:5454\n hci_mgmt_cmd+0x9c9/0xef0 net/bluetooth/hci_sock.c:1719\n hci_sock_sendmsg+0x6ca/0xef0 net/bluetooth/hci_sock.c:1839\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg+0x219/0x270 net/socket.c:727\n sock_write_iter+0x258/0x330 net/socket.c:1131\n new_sync_write fs/read_write.c:593 [inline]\n vfs_write+0x548/0xa90 fs/read_write.c:686\n ksys_write+0x145/0x250 fs/read_write.c:738\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 5989:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3e/0x80 mm/kasan/common.c:68\n kasan_save_free_info+0x46/0x50 mm/kasan/generic.c:576\n poison_slab_object mm/kasan/common.c:247 [inline]\n __kasan_slab_free+0x62/0x70 mm/kasan/common.c:264\n kasan_slab_free include/linux/kasan.h:233 [inline]\n slab_free_hook mm/slub.c:2380 [inline]\n slab_free mm/slub.c:4642 [inline]\n kfree+0x18e/0x440 mm/slub.c:4841\n mgmt_pending_foreach+0xc9/0x120 net/bluetooth/mgmt_util.c:242\n mgmt_index_removed+0x10d/0x2f0 net/bluetooth/mgmt.c:9366\n hci_sock_bind+0xbe9/0x1000 net/bluetooth/hci_sock.c:1314\n __sys_bind_socket net/socket.c:1810 [inline]\n __sys_bind+0x2c3/0x3e0 net/socket.c:1841\n __do_sys_bind net/socket.c:1846 [inline]\n __se_sys_bind net/socket.c:1844 [inline]\n __x64_sys_bind+0x7a/0x90 net/socket.c:1844\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38122",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: add missing NULL check for gve_alloc_pending_packet() in TX DQO\n\ngve_alloc_pending_packet() can return NULL, but gve_tx_add_skb_dqo()\ndid not check for this case before dereferencing the returned pointer.\n\nAdd a missing NULL check to prevent a potential NULL pointer\ndereference when allocation fails.\n\nThis improves robustness in low-memory scenarios.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38123",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: t7xx: Fix napi rx poll issue\n\nWhen driver handles the napi rx polling requests, the netdev might\nhave been released by the dellink logic triggered by the disconnect\noperation on user plane. However, in the logic of processing skb in\npolling, an invalid netdev is still being used, which causes a panic.\n\nBUG: kernel NULL pointer dereference, address: 00000000000000f1\nOops: 0000 [#1] PREEMPT SMP NOPTI\nRIP: 0010:dev_gro_receive+0x3a/0x620\n[...]\nCall Trace:\n \u003cIRQ\u003e\n ? __die_body+0x68/0xb0\n ? page_fault_oops+0x379/0x3e0\n ? exc_page_fault+0x4f/0xa0\n ? asm_exc_page_fault+0x22/0x30\n ? __pfx_t7xx_ccmni_recv_skb+0x10/0x10 [mtk_t7xx (HASH:1400 7)]\n ? dev_gro_receive+0x3a/0x620\n napi_gro_receive+0xad/0x170\n t7xx_ccmni_recv_skb+0x48/0x70 [mtk_t7xx (HASH:1400 7)]\n t7xx_dpmaif_napi_rx_poll+0x590/0x800 [mtk_t7xx (HASH:1400 7)]\n net_rx_action+0x103/0x470\n irq_exit_rcu+0x13a/0x310\n sysvec_apic_timer_interrupt+0x56/0x90\n \u003c/IRQ\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38124",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix udp gso skb_segment after pull from frag_list\n\nCommit a1e40ac5b5e9 (\"net: gso: fix udp gso fraglist segmentation after\npull from frag_list\") detected invalid geometry in frag_list skbs and\nredirects them from skb_segment_list to more robust skb_segment. But some\npackets with modified geometry can also hit bugs in that code. We don't\nknow how many such cases exist. Addressing each one by one also requires\ntouching the complex skb_segment code, which risks introducing bugs for\nother types of skbs. Instead, linearize all these packets that fail the\nbasic invariants on gso fraglist skbs. That is more robust.\n\nIf only part of the fraglist payload is pulled into head_skb, it will\nalways cause exception when splitting skbs by skb_segment. For detailed\ncall stack information, see below.\n\nValid SKB_GSO_FRAGLIST skbs\n- consist of two or more segments\n- the head_skb holds the protocol headers plus first gso_size\n- one or more frag_list skbs hold exactly one segment\n- all but the last must be gso_size\n\nOptional datapath hooks such as NAT and BPF (bpf_skb_pull_data) can\nmodify fraglist skbs, breaking these invariants.\n\nIn extreme cases they pull one part of data into skb linear. For UDP,\nthis  causes three payloads with lengths of (11,11,10) bytes were\npulled tail to become (12,10,10) bytes.\n\nThe skbs no longer meets the above SKB_GSO_FRAGLIST conditions because\npayload was pulled into head_skb, it needs to be linearized before pass\nto regular skb_segment.\n\n    skb_segment+0xcd0/0xd14\n    __udp_gso_segment+0x334/0x5f4\n    udp4_ufo_fragment+0x118/0x15c\n    inet_gso_segment+0x164/0x338\n    skb_mac_gso_segment+0xc4/0x13c\n    __skb_gso_segment+0xc4/0x124\n    validate_xmit_skb+0x9c/0x2c0\n    validate_xmit_skb_list+0x4c/0x80\n    sch_direct_xmit+0x70/0x404\n    __dev_queue_xmit+0x64c/0xe5c\n    neigh_resolve_output+0x178/0x1c4\n    ip_finish_output2+0x37c/0x47c\n    __ip_finish_output+0x194/0x240\n    ip_finish_output+0x20/0xf4\n    ip_output+0x100/0x1a0\n    NF_HOOK+0xc4/0x16c\n    ip_forward+0x314/0x32c\n    ip_rcv+0x90/0x118\n    __netif_receive_skb+0x74/0x124\n    process_backlog+0xe8/0x1a4\n    __napi_poll+0x5c/0x1f8\n    net_rx_action+0x154/0x314\n    handle_softirqs+0x154/0x4b8\n\n    [118.376811] [C201134] rxq0_pus: [name:bug\u0026]kernel BUG at net/core/skbuff.c:4278!\n    [118.376829] [C201134] rxq0_pus: [name:traps\u0026]Internal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\n    [118.470774] [C201134] rxq0_pus: [name:mrdump\u0026]Kernel Offset: 0x178cc00000 from 0xffffffc008000000\n    [118.470810] [C201134] rxq0_pus: [name:mrdump\u0026]PHYS_OFFSET: 0x40000000\n    [118.470827] [C201134] rxq0_pus: [name:mrdump\u0026]pstate: 60400005 (nZCv daif +PAN -UAO)\n    [118.470848] [C201134] rxq0_pus: [name:mrdump\u0026]pc : [0xffffffd79598aefc] skb_segment+0xcd0/0xd14\n    [118.470900] [C201134] rxq0_pus: [name:mrdump\u0026]lr : [0xffffffd79598a5e8] skb_segment+0x3bc/0xd14\n    [118.470928] [C201134] rxq0_pus: [name:mrdump\u0026]sp : ffffffc008013770",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38126",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: make sure that ptp_rate is not 0 before configuring timestamping\n\nThe stmmac platform drivers that do not open-code the clk_ptp_rate value\nafter having retrieved the default one from the device-tree can end up\nwith 0 in clk_ptp_rate (as clk_get_rate can return 0). It will\neventually propagate up to PTP initialization when bringing up the\ninterface, leading to a divide by 0:\n\n Division by zero in kernel.\n CPU: 1 UID: 0 PID: 1 Comm: swapper/0 Not tainted 6.12.30-00001-g48313bd5768a #22\n Hardware name: STM32 (Device Tree Support)\n Call trace:\n  unwind_backtrace from show_stack+0x18/0x1c\n  show_stack from dump_stack_lvl+0x6c/0x8c\n  dump_stack_lvl from Ldiv0_64+0x8/0x18\n  Ldiv0_64 from stmmac_init_tstamp_counter+0x190/0x1a4\n  stmmac_init_tstamp_counter from stmmac_hw_setup+0xc1c/0x111c\n  stmmac_hw_setup from __stmmac_open+0x18c/0x434\n  __stmmac_open from stmmac_open+0x3c/0xbc\n  stmmac_open from __dev_open+0xf4/0x1ac\n  __dev_open from __dev_change_flags+0x1cc/0x224\n  __dev_change_flags from dev_change_flags+0x24/0x60\n  dev_change_flags from ip_auto_config+0x2e8/0x11a0\n  ip_auto_config from do_one_initcall+0x84/0x33c\n  do_one_initcall from kernel_init_freeable+0x1b8/0x214\n  kernel_init_freeable from kernel_init+0x24/0x140\n  kernel_init from ret_from_fork+0x14/0x28\n Exception stack(0xe0815fb0 to 0xe0815ff8)\n\nPrevent this division by 0 by adding an explicit check and error log\nabout the actual issue. While at it, remove the same check from\nstmmac_ptp_register, which then becomes duplicate",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38127",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix Tx scheduler error handling in XDP callback\n\nWhen the XDP program is loaded, the XDP callback adds new Tx queues.\nThis means that the callback must update the Tx scheduler with the new\nqueue number. In the event of a Tx scheduler failure, the XDP callback\nshould also fail and roll back any changes previously made for XDP\npreparation.\n\nThe previous implementation had a bug that not all changes made by the\nXDP callback were rolled back. This caused the crash with the following\ncall trace:\n\n[  +9.549584] ice 0000:ca:00.0: Failed VSI LAN queue config for XDP, error: -5\n[  +0.382335] Oops: general protection fault, probably for non-canonical address 0x50a2250a90495525: 0000 [#1] SMP NOPTI\n[  +0.010710] CPU: 103 UID: 0 PID: 0 Comm: swapper/103 Not tainted 6.14.0-net-next-mar-31+ #14 PREEMPT(voluntary)\n[  +0.010175] Hardware name: Intel Corporation M50CYP2SBSTD/M50CYP2SBSTD, BIOS SE5C620.86B.01.01.0005.2202160810 02/16/2022\n[  +0.010946] RIP: 0010:__ice_update_sample+0x39/0xe0 [ice]\n\n[...]\n\n[  +0.002715] Call Trace:\n[  +0.002452]  \u003cIRQ\u003e\n[  +0.002021]  ? __die_body.cold+0x19/0x29\n[  +0.003922]  ? die_addr+0x3c/0x60\n[  +0.003319]  ? exc_general_protection+0x17c/0x400\n[  +0.004707]  ? asm_exc_general_protection+0x26/0x30\n[  +0.004879]  ? __ice_update_sample+0x39/0xe0 [ice]\n[  +0.004835]  ice_napi_poll+0x665/0x680 [ice]\n[  +0.004320]  __napi_poll+0x28/0x190\n[  +0.003500]  net_rx_action+0x198/0x360\n[  +0.003752]  ? update_rq_clock+0x39/0x220\n[  +0.004013]  handle_softirqs+0xf1/0x340\n[  +0.003840]  ? sched_clock_cpu+0xf/0x1f0\n[  +0.003925]  __irq_exit_rcu+0xc2/0xe0\n[  +0.003665]  common_interrupt+0x85/0xa0\n[  +0.003839]  \u003c/IRQ\u003e\n[  +0.002098]  \u003cTASK\u003e\n[  +0.002106]  asm_common_interrupt+0x26/0x40\n[  +0.004184] RIP: 0010:cpuidle_enter_state+0xd3/0x690\n\nFix this by performing the missing unmapping of XDP queues from\nq_vectors and setting the XDP rings pointer back to NULL after all those\nqueues are released.\nAlso, add an immediate exit from the XDP callback in case of ring\npreparation failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38129",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npage_pool: Fix use-after-free in page_pool_recycle_in_ring\n\nsyzbot reported a uaf in page_pool_recycle_in_ring:\n\nBUG: KASAN: slab-use-after-free in lock_release+0x151/0xa30 kernel/locking/lockdep.c:5862\nRead of size 8 at addr ffff8880286045a0 by task syz.0.284/6943\n\nCPU: 0 UID: 0 PID: 6943 Comm: syz.0.284 Not tainted 6.13.0-rc3-syzkaller-gdfa94ce54f41 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:378 [inline]\n print_report+0x169/0x550 mm/kasan/report.c:489\n kasan_report+0x143/0x180 mm/kasan/report.c:602\n lock_release+0x151/0xa30 kernel/locking/lockdep.c:5862\n __raw_spin_unlock_bh include/linux/spinlock_api_smp.h:165 [inline]\n _raw_spin_unlock_bh+0x1b/0x40 kernel/locking/spinlock.c:210\n spin_unlock_bh include/linux/spinlock.h:396 [inline]\n ptr_ring_produce_bh include/linux/ptr_ring.h:164 [inline]\n page_pool_recycle_in_ring net/core/page_pool.c:707 [inline]\n page_pool_put_unrefed_netmem+0x748/0xb00 net/core/page_pool.c:826\n page_pool_put_netmem include/net/page_pool/helpers.h:323 [inline]\n page_pool_put_full_netmem include/net/page_pool/helpers.h:353 [inline]\n napi_pp_put_page+0x149/0x2b0 net/core/skbuff.c:1036\n skb_pp_recycle net/core/skbuff.c:1047 [inline]\n skb_free_head net/core/skbuff.c:1094 [inline]\n skb_release_data+0x6c4/0x8a0 net/core/skbuff.c:1125\n skb_release_all net/core/skbuff.c:1190 [inline]\n __kfree_skb net/core/skbuff.c:1204 [inline]\n sk_skb_reason_drop+0x1c9/0x380 net/core/skbuff.c:1242\n kfree_skb_reason include/linux/skbuff.h:1263 [inline]\n __skb_queue_purge_reason include/linux/skbuff.h:3343 [inline]\n\nroot cause is:\n\npage_pool_recycle_in_ring\n  ptr_ring_produce\n    spin_lock(\u0026r-\u003eproducer_lock);\n    WRITE_ONCE(r-\u003equeue[r-\u003eproducer++], ptr)\n      //recycle last page to pool\n\t\t\t\tpage_pool_release\n\t\t\t\t  page_pool_scrub\n\t\t\t\t    page_pool_empty_ring\n\t\t\t\t      ptr_ring_consume\n\t\t\t\t      page_pool_return_page  //release all page\n\t\t\t\t  __page_pool_destroy\n\t\t\t\t     free_percpu(pool-\u003erecycle_stats);\n\t\t\t\t     free(pool) //free\n\n     spin_unlock(\u0026r-\u003eproducer_lock); //pool-\u003ering uaf read\n  recycle_stat_inc(pool, ring);\n\npage_pool can be free while page pool recycle the last page in ring.\nAdd producer-lock barrier to page_pool_release to prevent the page\npool from being free before all pages have been recycled.\n\nrecycle_stat_inc() is empty when CONFIG_PAGE_POOL_STATS is not\nenabled, which will trigger Wempty-body build warning. Add definition\nfor pool stat macro to fix warning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38131",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: prevent deactivate active config while enabling the config\n\nWhile enable active config via cscfg_csdev_enable_active_config(),\nactive config could be deactivated via configfs' sysfs interface.\nThis could make UAF issue in below scenario:\n\nCPU0                                          CPU1\n(sysfs enable)                                load module\n                                              cscfg_load_config_sets()\n                                              activate config. // sysfs\n                                              (sys_active_cnt == 1)\n...\ncscfg_csdev_enable_active_config()\nlock(csdev-\u003ecscfg_csdev_lock)\n// here load config activate by CPU1\nunlock(csdev-\u003ecscfg_csdev_lock)\n\n                                              deactivate config // sysfs\n                                              (sys_activec_cnt == 0)\n                                              cscfg_unload_config_sets()\n                                              unload module\n\n// access to config_desc which freed\n// while unloading module.\ncscfg_csdev_enable_config\n\nTo address this, use cscfg_config_desc's active_cnt as a reference count\n which will be holded when\n    - activate the config.\n    - enable the activated config.\nand put the module reference when config_active_cnt == 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38132",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: holding cscfg_csdev_lock while removing cscfg from csdev\n\nThere'll be possible race scenario for coresight config:\n\nCPU0                                          CPU1\n(perf enable)                                 load module\n                                              cscfg_load_config_sets()\n                                              activate config. // sysfs\n                                              (sys_active_cnt == 1)\n...\ncscfg_csdev_enable_active_config()\n  lock(csdev-\u003ecscfg_csdev_lock)\n                                              deactivate config // sysfs\n                                              (sys_activec_cnt == 0)\n                                              cscfg_unload_config_sets()\n  \u003citerating config_csdev_list\u003e               cscfg_remove_owned_csdev_configs()\n  // here load config activate by CPU1\n  unlock(csdev-\u003ecscfg_csdev_lock)\n\niterating config_csdev_list could be raced with config_csdev_list's\nentry delete.\n\nTo resolve this race , hold csdev-\u003ecscfg_csdev_lock() while\ncscfg_remove_owned_csdev_configs()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38135",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: Fix potential null-ptr-deref in mlb_usio_probe()\n\ndevm_ioremap() can return NULL on error. Currently, mlb_usio_probe()\ndoes not check for this case, which could result in a NULL pointer\ndereference.\n\nAdd NULL check after devm_ioremap() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38136",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: renesas_usbhs: Reorder clock handling and power management in probe\n\nReorder the initialization sequence in `usbhs_probe()` to enable runtime\nPM before accessing registers, preventing potential crashes due to\nuninitialized clocks.\n\nCurrently, in the probe path, registers are accessed before enabling the\nclocks, leading to a synchronous external abort on the RZ/V2H SoC.\nThe problematic call flow is as follows:\n\n    usbhs_probe()\n        usbhs_sys_clock_ctrl()\n            usbhs_bset()\n                usbhs_write()\n                    iowrite16()  \u003c-- Register access before enabling clocks\n\nSince `iowrite16()` is performed without ensuring the required clocks are\nenabled, this can lead to access errors. To fix this, enable PM runtime\nearly in the probe function and ensure clocks are acquired before register\naccess, preventing crashes like the following on RZ/V2H:\n\n[13.272640] Internal error: synchronous external abort: 0000000096000010 [#1] PREEMPT SMP\n[13.280814] Modules linked in: cec renesas_usbhs(+) drm_kms_helper fuse drm backlight ipv6\n[13.289088] CPU: 1 UID: 0 PID: 195 Comm: (udev-worker) Not tainted 6.14.0-rc7+ #98\n[13.296640] Hardware name: Renesas RZ/V2H EVK Board based on r9a09g057h44 (DT)\n[13.303834] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[13.310770] pc : usbhs_bset+0x14/0x4c [renesas_usbhs]\n[13.315831] lr : usbhs_probe+0x2e4/0x5ac [renesas_usbhs]\n[13.321138] sp : ffff8000827e3850\n[13.324438] x29: ffff8000827e3860 x28: 0000000000000000 x27: ffff8000827e3ca0\n[13.331554] x26: ffff8000827e3ba0 x25: ffff800081729668 x24: 0000000000000025\n[13.338670] x23: ffff0000c0f08000 x22: 0000000000000000 x21: ffff0000c0f08010\n[13.345783] x20: 0000000000000000 x19: ffff0000c3b52080 x18: 00000000ffffffff\n[13.352895] x17: 0000000000000000 x16: 0000000000000000 x15: ffff8000827e36ce\n[13.360009] x14: 00000000000003d7 x13: 00000000000003d7 x12: 0000000000000000\n[13.367122] x11: 0000000000000000 x10: 0000000000000aa0 x9 : ffff8000827e3750\n[13.374235] x8 : ffff0000c1850b00 x7 : 0000000003826060 x6 : 000000000000001c\n[13.381347] x5 : 000000030d5fcc00 x4 : ffff8000825c0000 x3 : 0000000000000000\n[13.388459] x2 : 0000000000000400 x1 : 0000000000000000 x0 : ffff0000c3b52080\n[13.395574] Call trace:\n[13.398013]  usbhs_bset+0x14/0x4c [renesas_usbhs] (P)\n[13.403076]  platform_probe+0x68/0xdc\n[13.406738]  really_probe+0xbc/0x2c0\n[13.410306]  __driver_probe_device+0x78/0x120\n[13.414653]  driver_probe_device+0x3c/0x154\n[13.418825]  __driver_attach+0x90/0x1a0\n[13.422647]  bus_for_each_dev+0x7c/0xe0\n[13.426470]  driver_attach+0x24/0x30\n[13.430032]  bus_add_driver+0xe4/0x208\n[13.433766]  driver_register+0x68/0x130\n[13.437587]  __platform_driver_register+0x24/0x30\n[13.442273]  renesas_usbhs_driver_init+0x20/0x1000 [renesas_usbhs]\n[13.448450]  do_one_initcall+0x60/0x1d4\n[13.452276]  do_init_module+0x54/0x1f8\n[13.456014]  load_module+0x1754/0x1c98\n[13.459750]  init_module_from_file+0x88/0xcc\n[13.464004]  __arm64_sys_finit_module+0x1c4/0x328\n[13.468689]  invoke_syscall+0x48/0x104\n[13.472426]  el0_svc_common.constprop.0+0xc0/0xe0\n[13.477113]  do_el0_svc+0x1c/0x28\n[13.480415]  el0_svc+0x30/0xcc\n[13.483460]  el0t_64_sync_handler+0x10c/0x138\n[13.487800]  el0t_64_sync+0x198/0x19c\n[13.491453] Code: 2a0103e1 12003c42 12003c63 8b010084 (79400084)\n[13.497522] ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: Add NULL check in udma_probe()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\nudma_probe() does not check for this case, which results in a NULL\npointer dereference.\n\nAdd NULL check after devm_kasprintf() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (asus-ec-sensors) check sensor index in read_string()\n\nPrevent a potential invalid memory access when the requested sensor\nis not found.\n\nfind_ec_sensor_index() may return a negative value (e.g. -ENOENT),\nbut its result was used without checking, which could lead to\nundefined behavior when passed to get_sensor_info().\n\nAdd a proper check to return -EINVAL if sensor_index is negative.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n[groeck: Return error code returned from find_ec_sensor_index]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38143",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbacklight: pm8941: Add NULL check in wled_configure()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\nwled_configure() does not check for this case, which results in a NULL\npointer dereference.\n\nAdd NULL check after devm_kasprintf() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: aspeed: Add NULL check in aspeed_lpc_enable_snoop()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\naspeed_lpc_enable_snoop() does not check for this case, which results in a\nNULL pointer dereference.\n\nAdd NULL check after devm_kasprintf() to prevent this issue.\n\n[arj: Fix Fixes: tag to use subject from 3772e5da4454]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38147",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncalipso: Don't call calipso functions for AF_INET sk.\n\nsyzkaller reported a null-ptr-deref in txopt_get(). [0]\n\nThe offset 0x70 was of struct ipv6_txoptions in struct ipv6_pinfo,\nso struct ipv6_pinfo was NULL there.\n\nHowever, this never happens for IPv6 sockets as inet_sk(sk)-\u003epinet6\nis always set in inet6_create(), meaning the socket was not IPv6 one.\n\nThe root cause is missing validation in netlbl_conn_setattr().\n\nnetlbl_conn_setattr() switches branches based on struct\nsockaddr.sa_family, which is passed from userspace.  However,\nnetlbl_conn_setattr() does not check if the address family matches\nthe socket.\n\nThe syzkaller must have called connect() for an IPv6 address on\nan IPv4 socket.\n\nWe have a proper validation in tcp_v[46]_connect(), but\nsecurity_socket_connect() is called in the earlier stage.\n\nLet's copy the validation to netlbl_conn_setattr().\n\n[0]:\nOops: general protection fault, probably for non-canonical address 0xdffffc000000000e: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000070-0x0000000000000077]\nCPU: 2 UID: 0 PID: 12928 Comm: syz.9.1677 Not tainted 6.12.0 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nRIP: 0010:txopt_get include/net/ipv6.h:390 [inline]\nRIP: 0010:\nCode: 02 00 00 49 8b ac 24 f8 02 00 00 e8 84 69 2a fd e8 ff 00 16 fd 48 8d 7d 70 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 53 02 00 00 48 8b 6d 70 48 85 ed 0f 84 ab 01 00\nRSP: 0018:ffff88811b8afc48 EFLAGS: 00010212\nRAX: dffffc0000000000 RBX: 1ffff11023715f8a RCX: ffffffff841ab00c\nRDX: 000000000000000e RSI: ffffc90007d9e000 RDI: 0000000000000070\nRBP: 0000000000000000 R08: ffffed1023715f9d R09: ffffed1023715f9e\nR10: ffffed1023715f9d R11: 0000000000000003 R12: ffff888123075f00\nR13: ffff88810245bd80 R14: ffff888113646780 R15: ffff888100578a80\nFS:  00007f9019bd7640(0000) GS:ffff8882d2d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f901b927bac CR3: 0000000104788003 CR4: 0000000000770ef0\nPKRU: 80000000\nCall Trace:\n \u003cTASK\u003e\n calipso_sock_setattr+0x56/0x80 net/netlabel/netlabel_calipso.c:557\n netlbl_conn_setattr+0x10c/0x280 net/netlabel/netlabel_kapi.c:1177\n selinux_netlbl_socket_connect_helper+0xd3/0x1b0 security/selinux/netlabel.c:569\n selinux_netlbl_socket_connect_locked security/selinux/netlabel.c:597 [inline]\n selinux_netlbl_socket_connect+0xb6/0x100 security/selinux/netlabel.c:615\n selinux_socket_connect+0x5f/0x80 security/selinux/hooks.c:4931\n security_socket_connect+0x50/0xa0 security/security.c:4598\n __sys_connect_file+0xa4/0x190 net/socket.c:2067\n __sys_connect+0x12c/0x170 net/socket.c:2088\n __do_sys_connect net/socket.c:2098 [inline]\n __se_sys_connect net/socket.c:2095 [inline]\n __x64_sys_connect+0x73/0xb0 net/socket.c:2095\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xaa/0x1b0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f901b61a12d\nCode: 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f9019bd6fa8 EFLAGS: 00000246 ORIG_RAX: 000000000000002a\nRAX: ffffffffffffffda RBX: 00007f901b925fa0 RCX: 00007f901b61a12d\nRDX: 000000000000001c RSI: 0000200000000140 RDI: 0000000000000003\nRBP: 00007f901b701505 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007f901b5b62a0 R15: 00007f9019bb7000\n \u003c/TASK\u003e\nModules linked in:",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38148",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: mscc: Fix memory leak when using one step timestamping\n\nFix memory leak when running one-step timestamping. When running\none-step sync timestamping, the HW is configured to insert the TX time\ninto the frame, so there is no reason to keep the skb anymore. As in\nthis case the HW will never generate an interrupt to say that the frame\nwas timestamped, then the frame will never released.\nFix this by freeing the frame in case of one-step timestamping.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38149",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: clear phydev-\u003edevlink when the link is deleted\n\nThere is a potential crash issue when disabling and re-enabling the\nnetwork port. When disabling the network port, phy_detach() calls\ndevice_link_del() to remove the device link, but it does not clear\nphydev-\u003edevlink, so phydev-\u003edevlink is not a NULL pointer. Then the\nnetwork port is re-enabled, but if phy_attach_direct() fails before\ncalling device_link_add(), the code jumps to the \"error\" label and\ncalls phy_detach(). Since phydev-\u003edevlink retains the old value from\nthe previous attach/detach cycle, device_link_del() uses the old value,\nwhich accesses a NULL pointer and causes a crash. The simplified crash\nlog is as follows.\n\n[   24.702421] Call trace:\n[   24.704856]  device_link_put_kref+0x20/0x120\n[   24.709124]  device_link_del+0x30/0x48\n[   24.712864]  phy_detach+0x24/0x168\n[   24.716261]  phy_attach_direct+0x168/0x3a4\n[   24.720352]  phylink_fwnode_phy_connect+0xc8/0x14c\n[   24.725140]  phylink_of_phy_connect+0x1c/0x34\n\nTherefore, phydev-\u003edevlink needs to be cleared when the device link is\ndeleted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38151",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Fix hang when cma_netevent_callback fails to queue_work\n\nThe cited commit fixed a crash when cma_netevent_callback was called for\na cma_id while work on that id from a previous call had not yet started.\nThe work item was re-initialized in the second call, which corrupted the\nwork item currently in the work queue.\n\nHowever, it left a problem when queue_work fails (because the item is\nstill pending in the work queue from a previous call). In this case,\ncma_id_put (which is called in the work handler) is therefore not\ncalled. This results in a userspace process hang (zombie process).\n\nFix this by calling cma_id_put() if queue_work fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38153",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: aqc111: fix error handling of usbnet read calls\n\nSyzkaller, courtesy of syzbot, identified an error (see report [1]) in\naqc111 driver, caused by incomplete sanitation of usb read calls'\nresults. This problem is quite similar to the one fixed in commit\n920a9fa27e78 (\"net: asix: add proper error handling of usb read errors\").\n\nFor instance, usbnet_read_cmd() may read fewer than 'size' bytes,\neven if the caller expected the full amount, and aqc111_read_cmd()\nwill not check its result properly. As [1] shows, this may lead\nto MAC address in aqc111_bind() being only partly initialized,\ntriggering KMSAN warnings.\n\nFix the issue by verifying that the number of bytes read is\nas expected and not less.\n\n[1] Partial syzbot report:\nBUG: KMSAN: uninit-value in is_valid_ether_addr include/linux/etherdevice.h:208 [inline]\nBUG: KMSAN: uninit-value in usbnet_probe+0x2e57/0x4390 drivers/net/usb/usbnet.c:1830\n is_valid_ether_addr include/linux/etherdevice.h:208 [inline]\n usbnet_probe+0x2e57/0x4390 drivers/net/usb/usbnet.c:1830\n usb_probe_interface+0xd01/0x1310 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:-1 [inline]\n really_probe+0x4d1/0xd90 drivers/base/dd.c:658\n __driver_probe_device+0x268/0x380 drivers/base/dd.c:800\n...\n\nUninit was stored to memory at:\n dev_addr_mod+0xb0/0x550 net/core/dev_addr_lists.c:582\n __dev_addr_set include/linux/netdevice.h:4874 [inline]\n eth_hw_addr_set include/linux/etherdevice.h:325 [inline]\n aqc111_bind+0x35f/0x1150 drivers/net/usb/aqc111.c:717\n usbnet_probe+0xbe6/0x4390 drivers/net/usb/usbnet.c:1772\n usb_probe_interface+0xd01/0x1310 drivers/usb/core/driver.c:396\n...\n\nUninit was stored to memory at:\n ether_addr_copy include/linux/etherdevice.h:305 [inline]\n aqc111_read_perm_mac drivers/net/usb/aqc111.c:663 [inline]\n aqc111_bind+0x794/0x1150 drivers/net/usb/aqc111.c:713\n usbnet_probe+0xbe6/0x4390 drivers/net/usb/usbnet.c:1772\n usb_probe_interface+0xd01/0x1310 drivers/usb/core/driver.c:396\n call_driver_probe drivers/base/dd.c:-1 [inline]\n...\n\nLocal variable buf.i created at:\n aqc111_read_perm_mac drivers/net/usb/aqc111.c:656 [inline]\n aqc111_bind+0x221/0x1150 drivers/net/usb/aqc111.c:713\n usbnet_probe+0xbe6/0x4390 drivers/net/usb/usbnet.c:1772",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38154",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Avoid using sk_socket after free when sending\n\nThe sk-\u003esk_socket is not locked or referenced in backlog thread, and\nduring the call to skb_send_sock(), there is a race condition with\nthe release of sk_socket. All types of sockets(tcp/udp/unix/vsock)\nwill be affected.\n\nRace conditions:\n'''\nCPU0                               CPU1\n\nbacklog::skb_send_sock\n  sendmsg_unlocked\n    sock_sendmsg\n      sock_sendmsg_nosec\n                                   close(fd):\n                                     ...\n                                     ops-\u003erelease() -\u003e sock_map_close()\n                                     sk_socket-\u003eops = NULL\n                                     free(socket)\n      sock-\u003eops-\u003esendmsg\n            ^\n            panic here\n'''\n\nThe ref of psock become 0 after sock_map_close() executed.\n'''\nvoid sock_map_close()\n{\n    ...\n    if (likely(psock)) {\n    ...\n    // !! here we remove psock and the ref of psock become 0\n    sock_map_remove_links(sk, psock)\n    psock = sk_psock_get(sk);\n    if (unlikely(!psock))\n        goto no_psock; \u003c=== Control jumps here via goto\n        ...\n        cancel_delayed_work_sync(\u0026psock-\u003ework); \u003c=== not executed\n        sk_psock_put(sk, psock);\n        ...\n}\n'''\n\nBased on the fact that we already wait for the workqueue to finish in\nsock_map_close() if psock is held, we simply increase the psock\nreference count to avoid race conditions.\n\nWith this patch, if the backlog thread is running, sock_map_close() will\nwait for the backlog thread to complete and cancel all pending work.\n\nIf no backlog running, any pending work that hasn't started by then will\nfail when invoked by sk_psock_get(), as the psock reference count have\nbeen zeroed, and sk_psock_drop() will cancel all jobs via\ncancel_delayed_work_sync().\n\nIn summary, we require synchronization to coordinate the backlog thread\nand close() thread.\n\nThe panic I catched:\n'''\nWorkqueue: events sk_psock_backlog\nRIP: 0010:sock_sendmsg+0x21d/0x440\nRAX: 0000000000000000 RBX: ffffc9000521fad8 RCX: 0000000000000001\n...\nCall Trace:\n \u003cTASK\u003e\n ? die_addr+0x40/0xa0\n ? exc_general_protection+0x14c/0x230\n ? asm_exc_general_protection+0x26/0x30\n ? sock_sendmsg+0x21d/0x440\n ? sock_sendmsg+0x3e0/0x440\n ? __pfx_sock_sendmsg+0x10/0x10\n __skb_send_sock+0x543/0xb70\n sk_psock_backlog+0x247/0xb80\n...\n'''",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38155",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7915: Fix null-ptr-deref in mt7915_mmio_wed_init()\n\ndevm_ioremap() returns NULL on error. Currently, mt7915_mmio_wed_init()\ndoes not check for this case, which results in a NULL pointer\ndereference.\n\nPrevent null pointer dereference in mt7915_mmio_wed_init().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38157",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath9k_htc: Abort software beacon handling if disabled\n\nA malicious USB device can send a WMI_SWBA_EVENTID event from an\nath9k_htc-managed device before beaconing has been enabled. This causes\na device-by-zero error in the driver, leading to either a crash or an\nout of bounds read.\n\nPrevent this by aborting the handling in ath9k_htc_swba() if beacons are\nnot enabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38158",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhisi_acc_vfio_pci: fix XQE dma address error\n\nThe dma addresses of EQE and AEQE are wrong after migration and\nresults in guest kernel-mode encryption services  failure.\nComparing the definition of hardware registers, we found that\nthere was an error when the data read from the register was\ncombined into an address. Therefore, the address combination\nsequence needs to be corrected.\n\nEven after fixing the above problem, we still have an issue\nwhere the Guest from an old kernel can get migrated to\nnew kernel and may result in wrong data.\n\nIn order to ensure that the address is correct after migration,\nif an old magic number is detected, the dma address needs to be\nupdated.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38159",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw88: fix the 'para' buffer size to avoid reading out of bounds\n\nSet the size to 6 instead of 2, since 'para' array is passed to\n'rtw_fw_bt_wifi_control(rtwdev, para[0], \u0026para[1])', which reads\n5 bytes:\n\nvoid rtw_fw_bt_wifi_control(struct rtw_dev *rtwdev, u8 op_code, u8 *data)\n{\n    ...\n    SET_BT_WIFI_CONTROL_DATA1(h2c_pkt, *data);\n    SET_BT_WIFI_CONTROL_DATA2(h2c_pkt, *(data + 1));\n    ...\n    SET_BT_WIFI_CONTROL_DATA5(h2c_pkt, *(data + 4));\n\nDetected using the static analysis tool - Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38161",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Fix error flow upon firmware failure for RQ destruction\n\nUpon RQ destruction if the firmware command fails which is the\nlast resource to be destroyed some SW resources were already cleaned\nregardless of the failure.\n\nNow properly rollback the object to its original state upon such failure.\n\nIn order to avoid a use-after free in case someone tries to destroy the\nobject again, which results in the following kernel trace:\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 0 PID: 37589 at lib/refcount.c:28 refcount_warn_saturate+0xf4/0x148\nModules linked in: rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_umad(OE) mlx5_ib(OE) rfkill mlx5_core(OE) mlxdevm(OE) ib_uverbs(OE) ib_core(OE) psample mlxfw(OE) mlx_compat(OE) macsec tls pci_hyperv_intf sunrpc vfat fat virtio_net net_failover failover fuse loop nfnetlink vsock_loopback vmw_vsock_virtio_transport_common vmw_vsock_vmci_transport vmw_vmci vsock xfs crct10dif_ce ghash_ce sha2_ce sha256_arm64 sha1_ce virtio_console virtio_gpu virtio_blk virtio_dma_buf virtio_mmio dm_mirror dm_region_hash dm_log dm_mod xpmem(OE)\nCPU: 0 UID: 0 PID: 37589 Comm: python3 Kdump: loaded Tainted: G           OE     -------  ---  6.12.0-54.el10.aarch64 #1\nTainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\nHardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : refcount_warn_saturate+0xf4/0x148\nlr : refcount_warn_saturate+0xf4/0x148\nsp : ffff80008b81b7e0\nx29: ffff80008b81b7e0 x28: ffff000133d51600 x27: 0000000000000001\nx26: 0000000000000000 x25: 00000000ffffffea x24: ffff00010ae80f00\nx23: ffff00010ae80f80 x22: ffff0000c66e5d08 x21: 0000000000000000\nx20: ffff0000c66e0000 x19: ffff00010ae80340 x18: 0000000000000006\nx17: 0000000000000000 x16: 0000000000000020 x15: ffff80008b81b37f\nx14: 0000000000000000 x13: 2e656572662d7265 x12: ffff80008283ef78\nx11: ffff80008257efd0 x10: ffff80008283efd0 x9 : ffff80008021ed90\nx8 : 0000000000000001 x7 : 00000000000bffe8 x6 : c0000000ffff7fff\nx5 : ffff0001fb8e3408 x4 : 0000000000000000 x3 : ffff800179993000\nx2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000133d51600\nCall trace:\n refcount_warn_saturate+0xf4/0x148\n mlx5_core_put_rsc+0x88/0xa0 [mlx5_ib]\n mlx5_core_destroy_rq_tracked+0x64/0x98 [mlx5_ib]\n mlx5_ib_destroy_wq+0x34/0x80 [mlx5_ib]\n ib_destroy_wq_user+0x30/0xc0 [ib_core]\n uverbs_free_wq+0x28/0x58 [ib_uverbs]\n destroy_hw_idr_uobject+0x34/0x78 [ib_uverbs]\n uverbs_destroy_uobject+0x48/0x240 [ib_uverbs]\n __uverbs_cleanup_ufile+0xd4/0x1a8 [ib_uverbs]\n uverbs_destroy_ufile_hw+0x48/0x120 [ib_uverbs]\n ib_uverbs_close+0x2c/0x100 [ib_uverbs]\n __fput+0xd8/0x2f0\n __fput_sync+0x50/0x70\n __arm64_sys_close+0x40/0x90\n invoke_syscall.constprop.0+0x74/0xd0\n do_el0_svc+0x48/0xe8\n el0_svc+0x44/0x1d0\n el0t_64_sync_handler+0x120/0x130\n el0t_64_sync+0x1a4/0x1a8",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: prevent overflow in lookup table allocation\n\nWhen calculating the lookup table size, ensure the following\nmultiplication does not overflow:\n\n- desc-\u003efield_len[] maximum value is U8_MAX multiplied by\n  NFT_PIPAPO_GROUPS_PER_BYTE(f) that can be 2, worst case.\n- NFT_PIPAPO_BUCKETS(f-\u003ebb) is 2^8, worst case.\n- sizeof(unsigned long), from sizeof(*f-\u003elt), lt in\n  struct nft_pipapo_field.\n\nThen, use check_mul_overflow() to multiply by bucket size and then use\ncheck_add_overflow() to the alignment for avx2 (if needed). Finally, add\nlt_size_check_overflow() helper and use it to consolidate this.\n\nWhile at it, replace leftover allocation using the GFP_KERNEL to\nGFP_KERNEL_ACCOUNT for consistency, in pipapo_resize().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38166",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: fix ktls panic with sockmap\n\n[ 2172.936997] ------------[ cut here ]------------\n[ 2172.936999] kernel BUG at lib/iov_iter.c:629!\n......\n[ 2172.944996] PKRU: 55555554\n[ 2172.945155] Call Trace:\n[ 2172.945299]  \u003cTASK\u003e\n[ 2172.945428]  ? die+0x36/0x90\n[ 2172.945601]  ? do_trap+0xdd/0x100\n[ 2172.945795]  ? iov_iter_revert+0x178/0x180\n[ 2172.946031]  ? iov_iter_revert+0x178/0x180\n[ 2172.946267]  ? do_error_trap+0x7d/0x110\n[ 2172.946499]  ? iov_iter_revert+0x178/0x180\n[ 2172.946736]  ? exc_invalid_op+0x50/0x70\n[ 2172.946961]  ? iov_iter_revert+0x178/0x180\n[ 2172.947197]  ? asm_exc_invalid_op+0x1a/0x20\n[ 2172.947446]  ? iov_iter_revert+0x178/0x180\n[ 2172.947683]  ? iov_iter_revert+0x5c/0x180\n[ 2172.947913]  tls_sw_sendmsg_locked.isra.0+0x794/0x840\n[ 2172.948206]  tls_sw_sendmsg+0x52/0x80\n[ 2172.948420]  ? inet_sendmsg+0x1f/0x70\n[ 2172.948634]  __sys_sendto+0x1cd/0x200\n[ 2172.948848]  ? find_held_lock+0x2b/0x80\n[ 2172.949072]  ? syscall_trace_enter+0x140/0x270\n[ 2172.949330]  ? __lock_release.isra.0+0x5e/0x170\n[ 2172.949595]  ? find_held_lock+0x2b/0x80\n[ 2172.949817]  ? syscall_trace_enter+0x140/0x270\n[ 2172.950211]  ? lockdep_hardirqs_on_prepare+0xda/0x190\n[ 2172.950632]  ? ktime_get_coarse_real_ts64+0xc2/0xd0\n[ 2172.951036]  __x64_sys_sendto+0x24/0x30\n[ 2172.951382]  do_syscall_64+0x90/0x170\n......\n\nAfter calling bpf_exec_tx_verdict(), the size of msg_pl-\u003esg may increase,\ne.g., when the BPF program executes bpf_msg_push_data().\n\nIf the BPF program sets cork_bytes and sg.size is smaller than cork_bytes,\nit will return -ENOSPC and attempt to roll back to the non-zero copy\nlogic. However, during rollback, msg-\u003emsg_iter is reset, but since\nmsg_pl-\u003esg.size has been increased, subsequent executions will exceed the\nactual size of msg_iter.\n'''\niov_iter_revert(\u0026msg-\u003emsg_iter, msg_pl-\u003esg.size - orig_size);\n'''\n\nThe changes in this commit are based on the following considerations:\n\n1. When cork_bytes is set, rolling back to non-zero copy logic is\npointless and can directly go to zero-copy logic.\n\n2. We can not calculate the correct number of bytes to revert msg_iter.\n\nAssume the original data is \"abcdefgh\" (8 bytes), and after 3 pushes\nby the BPF program, it becomes 11-byte data: \"abc?de?fgh?\".\nThen, we set cork_bytes to 6, which means the first 6 bytes have been\nprocessed, and the remaining 5 bytes \"?fgh?\" will be cached until the\nlength meets the cork_bytes requirement.\n\nHowever, some data in \"?fgh?\" is not within 'sg-\u003emsg_iter'\n(but in msg_pl instead), especially the data \"?\" we pushed.\n\nSo it doesn't seem as simple as just reverting through an offset of\nmsg_iter.\n\n3. For non-TLS sockets in tcp_bpf_sendmsg, when a \"cork\" situation occurs,\nthe user-space send() doesn't return an error, and the returned length is\nthe same as the input length parameter, even if some data is cached.\n\nAdditionally, I saw that the current non-zero-copy logic for handling\ncorking is written as:\n'''\nline 1177\nelse if (ret != -EAGAIN) {\n\tif (ret == -ENOSPC)\n\t\tret = 0;\n\tgoto send_end;\n'''\n\nSo it's ok to just return 'copied' without error when a \"cork\" situation\noccurs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38173",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: marvell/cesa - Handle zero-length skcipher requests\n\nDo not access random memory for zero-length skcipher requests.\nJust return 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38174",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Do not double dequeue a configuration request\n\nSome of our devices crash in tb_cfg_request_dequeue():\n\n general protection fault, probably for non-canonical address 0xdead000000000122\n\n CPU: 6 PID: 91007 Comm: kworker/6:2 Tainted: G U W 6.6.65\n RIP: 0010:tb_cfg_request_dequeue+0x2d/0xa0\n Call Trace:\n \u003cTASK\u003e\n ? tb_cfg_request_dequeue+0x2d/0xa0\n tb_cfg_request_work+0x33/0x80\n worker_thread+0x386/0x8f0\n kthread+0xed/0x110\n ret_from_fork+0x38/0x50\n ret_from_fork_asm+0x1b/0x30\n\nThe circumstances are unclear, however, the theory is that\ntb_cfg_request_work() can be scheduled twice for a request:\nfirst time via frame.callback from ring_work() and second\ntime from tb_cfg_request().  Both times kworkers will execute\ntb_cfg_request_dequeue(), which results in double list_del()\nfrom the ctl-\u003erequest_queue (the list poison deference hints\nat it: 0xdead000000000122).\n\nDo not dequeue requests that don't have TB_CFG_REQUEST_ACTIVE\nbit set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38180",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atm: fix /proc/net/atm/lec handling\n\n/proc/net/atm/lec must ensure safety against dev_lec[] changes.\n\nIt appears it had dev_put() calls without prior dev_hold(),\nleading to imbalance and UAF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38181",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncalipso: Fix null-ptr-deref in calipso_req_{set,del}attr().\n\nsyzkaller reported a null-ptr-deref in sock_omalloc() while allocating\na CALIPSO option.  [0]\n\nThe NULL is of struct sock, which was fetched by sk_to_full_sk() in\ncalipso_req_setattr().\n\nSince commit a1a5344ddbe8 (\"tcp: avoid two atomic ops for syncookies\"),\nreqsk-\u003ersk_listener could be NULL when SYN Cookie is returned to its\nclient, as hinted by the leading SYN Cookie log.\n\nHere are 3 options to fix the bug:\n\n  1) Return 0 in calipso_req_setattr()\n  2) Return an error in calipso_req_setattr()\n  3) Alaways set rsk_listener\n\n1) is no go as it bypasses LSM, but 2) effectively disables SYN Cookie\nfor CALIPSO.  3) is also no go as there have been many efforts to reduce\natomic ops and make TCP robust against DDoS.  See also commit 3b24d854cb35\n(\"tcp/dccp: do not touch listener sk_refcnt under synflood\").\n\nAs of the blamed commit, SYN Cookie already did not need refcounting,\nand no one has stumbled on the bug for 9 years, so no CALIPSO user will\ncare about SYN Cookie.\n\nLet's return an error in calipso_req_setattr() and calipso_req_delattr()\nin the SYN Cookie case.\n\nThis can be reproduced by [1] on Fedora and now connect() of nc times out.\n\n[0]:\nTCP: request_sock_TCPv6: Possible SYN flooding on port [::]:20002. Sending cookies.\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\nCPU: 3 UID: 0 PID: 12262 Comm: syz.1.2611 Not tainted 6.14.0 #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\nRIP: 0010:read_pnet include/net/net_namespace.h:406 [inline]\nRIP: 0010:sock_net include/net/sock.h:655 [inline]\nRIP: 0010:sock_kmalloc+0x35/0x170 net/core/sock.c:2806\nCode: 89 d5 41 54 55 89 f5 53 48 89 fb e8 25 e3 c6 fd e8 f0 91 e3 00 48 8d 7b 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 26 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b\nRSP: 0018:ffff88811af89038 EFLAGS: 00010216\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffff888105266400\nRDX: 0000000000000006 RSI: ffff88800c890000 RDI: 0000000000000030\nRBP: 0000000000000050 R08: 0000000000000000 R09: ffff88810526640e\nR10: ffffed1020a4cc81 R11: ffff88810526640f R12: 0000000000000000\nR13: 0000000000000820 R14: ffff888105266400 R15: 0000000000000050\nFS:  00007f0653a07640(0000) GS:ffff88811af80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f863ba096f4 CR3: 00000000163c0005 CR4: 0000000000770ef0\nPKRU: 80000000\nCall Trace:\n \u003cIRQ\u003e\n ipv6_renew_options+0x279/0x950 net/ipv6/exthdrs.c:1288\n calipso_req_setattr+0x181/0x340 net/ipv6/calipso.c:1204\n calipso_req_setattr+0x56/0x80 net/netlabel/netlabel_calipso.c:597\n netlbl_req_setattr+0x18a/0x440 net/netlabel/netlabel_kapi.c:1249\n selinux_netlbl_inet_conn_request+0x1fb/0x320 security/selinux/netlabel.c:342\n selinux_inet_conn_request+0x1eb/0x2c0 security/selinux/hooks.c:5551\n security_inet_conn_request+0x50/0xa0 security/security.c:4945\n tcp_v6_route_req+0x22c/0x550 net/ipv6/tcp_ipv6.c:825\n tcp_conn_request+0xec8/0x2b70 net/ipv4/tcp_input.c:7275\n tcp_v6_conn_request+0x1e3/0x440 net/ipv6/tcp_ipv6.c:1328\n tcp_rcv_state_process+0xafa/0x52b0 net/ipv4/tcp_input.c:6781\n tcp_v6_do_rcv+0x8a6/0x1a40 net/ipv6/tcp_ipv6.c:1667\n tcp_v6_rcv+0x505e/0x5b50 net/ipv6/tcp_ipv6.c:1904\n ip6_protocol_deliver_rcu+0x17c/0x1da0 net/ipv6/ip6_input.c:436\n ip6_input_finish+0x103/0x180 net/ipv6/ip6_input.c:480\n NF_HOOK include/linux/netfilter.h:314 [inline]\n NF_HOOK include/linux/netfilter.h:308 [inline]\n ip6_input+0x13c/0x6b0 net/ipv6/ip6_input.c:491\n dst_input include/net/dst.h:469 [inline]\n ip6_rcv_finish net/ipv6/ip6_input.c:79 [inline]\n ip6_rcv_finish+0xb6/0x490 net/ipv6/ip6_input.c:69\n NF_HOOK include/linux/netfilter.h:314 [inline]\n NF_HOOK include/linux/netf\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38182",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nublk: santizize the arguments from userspace when adding a device\n\nSanity check the values for queue depth and number of queues\nwe get from userspace when adding a device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38183",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: lan743x: fix potential out-of-bounds write in lan743x_ptp_io_event_clock_get()\n\nBefore calling lan743x_ptp_io_event_clock_get(), the 'channel' value\nis checked against the maximum value of PCI11X1X_PTP_IO_MAX_CHANNELS(8).\nThis seems correct and aligns with the PTP interrupt status register\n(PTP_INT_STS) specifications.\n\nHowever, lan743x_ptp_io_event_clock_get() writes to ptp-\u003eextts[] with\nonly LAN743X_PTP_N_EXTTS(4) elements, using channel as an index:\n\n    lan743x_ptp_io_event_clock_get(..., u8 channel,...)\n    {\n        ...\n        /* Update Local timestamp */\n        extts = \u0026ptp-\u003eextts[channel];\n        extts-\u003ets.tv_sec = sec;\n        ...\n    }\n\nTo avoid an out-of-bounds write and utilize all the supported GPIO\ninputs, set LAN743X_PTP_N_EXTTS to 8.\n\nDetected using the static analysis tool - Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38187",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: fix a use-after-free in r535_gsp_rpc_push()\n\nThe RPC container is released after being passed to r535_gsp_rpc_send().\n\nWhen sending the initial fragment of a large RPC and passing the\ncaller's RPC container, the container will be freed prematurely. Subsequent\nattempts to send remaining fragments will therefore result in a\nuse-after-free.\n\nAllocate a temporary RPC container for holding the initial fragment of a\nlarge RPC when sending. Free the caller's container when all fragments\nare successfully sent.\n\n[ Rebase onto Blackwell changes. - Danilo ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38188",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/a7xx: Call CP_RESET_CONTEXT_STATE\n\nCalling this packet is necessary when we switch contexts because there\nare various pieces of state used by userspace to synchronize between BR\nand BV that are persistent across submits and we need to make sure that\nthey are in a \"safe\" state when switching contexts. Otherwise a\nuserspace submission in one context could cause another context to\nfunction incorrectly and hang, effectively a denial of service (although\nwithout leaking data). This was missed during initial a7xx bringup.\n\nPatchwork: https://patchwork.freedesktop.org/patch/654924/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38192",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: clear the dst when changing skb protocol\n\nA not-so-careful NAT46 BPF program can crash the kernel\nif it indiscriminately flips ingress packets from v4 to v6:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000000\n    ip6_rcv_core (net/ipv6/ip6_input.c:190:20)\n    ipv6_rcv (net/ipv6/ip6_input.c:306:8)\n    process_backlog (net/core/dev.c:6186:4)\n    napi_poll (net/core/dev.c:6906:9)\n    net_rx_action (net/core/dev.c:7028:13)\n    do_softirq (kernel/softirq.c:462:3)\n    netif_rx (net/core/dev.c:5326:3)\n    dev_loopback_xmit (net/core/dev.c:4015:2)\n    ip_mc_finish_output (net/ipv4/ip_output.c:363:8)\n    NF_HOOK (./include/linux/netfilter.h:314:9)\n    ip_mc_output (net/ipv4/ip_output.c:400:5)\n    dst_output (./include/net/dst.h:459:9)\n    ip_local_out (net/ipv4/ip_output.c:130:9)\n    ip_send_skb (net/ipv4/ip_output.c:1496:8)\n    udp_send_skb (net/ipv4/udp.c:1040:8)\n    udp_sendmsg (net/ipv4/udp.c:1328:10)\n\nThe output interface has a 4-\u003e6 program attached at ingress.\nWe try to loop the multicast skb back to the sending socket.\nIngress BPF runs as part of netif_rx(), pushes a valid v6 hdr\nand changes skb-\u003eprotocol to v6. We enter ip6_rcv_core which\ntries to use skb_dst(). But the dst is still an IPv4 one left\nafter IPv4 mcast output.\n\nClear the dst in all BPF helpers which change the protocol.\nTry to preserve metadata dsts, those may carry non-routing\nmetadata.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38193",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: sch_sfq: reject invalid perturb period\n\nGerrard Tai reported that SFQ perturb_period has no range check yet,\nand this can be used to trigger a race condition fixed in a separate patch.\n\nWe want to make sure ctl-\u003eperturb_period * HZ will not overflow\nand is positive.\n\n\ntc qd add dev lo root sfq perturb -10   # negative value : error\nError: sch_sfq: invalid perturb period.\n\ntc qd add dev lo root sfq perturb 1000000000 # too big : error\nError: sch_sfq: invalid perturb period.\n\ntc qd add dev lo root sfq perturb 2000000 # acceptable value\ntc -s -d qd sh dev lo\nqdisc sfq 8005: root refcnt 2 limit 127p quantum 64Kb depth 127 flows 128 divisor 1024 perturb 2000000sec\n Sent 0 bytes 0 pkt (dropped 0, overlimits 0 requeues 0)\n backlog 0b 0p requeues 0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38194",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: check that raw node were preallocated before writing summary\n\nSyzkaller detected a kernel bug in jffs2_link_node_ref, caused by fault\ninjection in jffs2_prealloc_raw_node_refs. jffs2_sum_write_sumnode doesn't\ncheck return value of jffs2_prealloc_raw_node_refs and simply lets any\nerror propagate into jffs2_sum_write_data, which eventually calls\njffs2_link_node_ref in order to link the summary to an expectedly allocated\nnode.\n\nkernel BUG at fs/jffs2/nodelist.c:592!\ninvalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI\nCPU: 1 PID: 31277 Comm: syz-executor.7 Not tainted 6.1.128-syzkaller-00139-ge10f83ca10a1 #0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\nRIP: 0010:jffs2_link_node_ref+0x570/0x690 fs/jffs2/nodelist.c:592\nCall Trace:\n \u003cTASK\u003e\n jffs2_sum_write_data fs/jffs2/summary.c:841 [inline]\n jffs2_sum_write_sumnode+0xd1a/0x1da0 fs/jffs2/summary.c:874\n jffs2_do_reserve_space+0xa18/0xd60 fs/jffs2/nodemgmt.c:388\n jffs2_reserve_space+0x55f/0xaa0 fs/jffs2/nodemgmt.c:197\n jffs2_write_inode_range+0x246/0xb50 fs/jffs2/write.c:362\n jffs2_write_end+0x726/0x15d0 fs/jffs2/file.c:301\n generic_perform_write+0x314/0x5d0 mm/filemap.c:3856\n __generic_file_write_iter+0x2ae/0x4d0 mm/filemap.c:3973\n generic_file_write_iter+0xe3/0x350 mm/filemap.c:4005\n call_write_iter include/linux/fs.h:2265 [inline]\n do_iter_readv_writev+0x20f/0x3c0 fs/read_write.c:735\n do_iter_write+0x186/0x710 fs/read_write.c:861\n vfs_iter_write+0x70/0xa0 fs/read_write.c:902\n iter_file_splice_write+0x73b/0xc90 fs/splice.c:685\n do_splice_from fs/splice.c:763 [inline]\n direct_splice_actor+0x10c/0x170 fs/splice.c:950\n splice_direct_to_actor+0x337/0xa10 fs/splice.c:896\n do_splice_direct+0x1a9/0x280 fs/splice.c:1002\n do_sendfile+0xb13/0x12c0 fs/read_write.c:1255\n __do_sys_sendfile64 fs/read_write.c:1323 [inline]\n __se_sys_sendfile64 fs/read_write.c:1309 [inline]\n __x64_sys_sendfile64+0x1cf/0x210 fs/read_write.c:1309\n do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n do_syscall_64+0x35/0x80 arch/x86/entry/common.c:81\n entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n\nFix this issue by checking return value of jffs2_prealloc_raw_node_refs\nbefore calling jffs2_sum_write_data.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38197",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell_rbu: Fix list usage\n\nPass the correct list head to list_for_each_entry*() when looping through\nthe packet list.\n\nWithout this patch, reading the packet data via sysfs will show the data\nincorrectly (because it starts at the wrong packet), and clearing the\npacket list will result in a NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38198",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbcon: Make sure modelist not set on unregistered console\n\nIt looks like attempting to write to the \"store_modes\" sysfs node will\nrun afoul of unregistered consoles:\n\nUBSAN: array-index-out-of-bounds in drivers/video/fbdev/core/fbcon.c:122:28\nindex -1 is out of range for type 'fb_info *[32]'\n...\n fbcon_info_from_console+0x192/0x1a0 drivers/video/fbdev/core/fbcon.c:122\n fbcon_new_modelist+0xbf/0x2d0 drivers/video/fbdev/core/fbcon.c:3048\n fb_new_modelist+0x328/0x440 drivers/video/fbdev/core/fbmem.c:673\n store_modes+0x1c9/0x3e0 drivers/video/fbdev/core/fbsysfs.c:113\n dev_attr_store+0x55/0x80 drivers/base/core.c:2439\n\nstatic struct fb_info *fbcon_registered_fb[FB_MAX];\n...\nstatic signed char con2fb_map[MAX_NR_CONSOLES];\n...\nstatic struct fb_info *fbcon_info_from_console(int console)\n...\n        return fbcon_registered_fb[con2fb_map[console]];\n\nIf con2fb_map contains a -1 things go wrong here. Instead, return NULL,\nas callers of fbcon_info_from_console() are trying to compare against\nexisting \"info\" pointers, so error handling should kick in correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38200",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: fix MMIO write access to an invalid page in i40e_clear_hw\n\nWhen the device sends a specific input, an integer underflow can occur, leading\nto MMIO write access to an invalid page.\n\nPrevent the integer underflow by changing the type of related variables.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38202",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Check rcu_read_lock_trace_held() in bpf_map_lookup_percpu_elem()\n\nbpf_map_lookup_percpu_elem() helper is also available for sleepable bpf\nprogram. When BPF JIT is disabled or under 32-bit host,\nbpf_map_lookup_percpu_elem() will not be inlined. Using it in a\nsleepable bpf program will trigger the warning in\nbpf_map_lookup_percpu_elem(), because the bpf program only holds\nrcu_read_lock_trace lock. Therefore, add the missed check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38203",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix null-ptr-deref in jfs_ioc_trim\n\n[ Syzkaller Report ]\n\nOops: general protection fault, probably for non-canonical address\n0xdffffc0000000087: 0000 [#1\nKASAN: null-ptr-deref in range [0x0000000000000438-0x000000000000043f]\nCPU: 2 UID: 0 PID: 10614 Comm: syz-executor.0 Not tainted\n6.13.0-rc6-gfbfd64d25c7a-dirty #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nSched_ext: serialise (enabled+all), task: runnable_at=-30ms\nRIP: 0010:jfs_ioc_trim+0x34b/0x8f0\nCode: e7 e8 59 a4 87 fe 4d 8b 24 24 4d 8d bc 24 38 04 00 00 48 8d 93\n90 82 fe ff 4c 89 ff 31 f6\nRSP: 0018:ffffc900055f7cd0 EFLAGS: 00010206\nRAX: 0000000000000087 RBX: 00005866a9e67ff8 RCX: 000000000000000a\nRDX: 0000000000000001 RSI: 0000000000000004 RDI: 0000000000000001\nRBP: dffffc0000000000 R08: ffff88807c180003 R09: 1ffff1100f830000\nR10: dffffc0000000000 R11: ffffed100f830001 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000001 R15: 0000000000000438\nFS:  00007fe520225640(0000) GS:ffff8880b7e80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005593c91b2c88 CR3: 000000014927c000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\n? __die_body+0x61/0xb0\n? die_addr+0xb1/0xe0\n? exc_general_protection+0x333/0x510\n? asm_exc_general_protection+0x26/0x30\n? jfs_ioc_trim+0x34b/0x8f0\njfs_ioctl+0x3c8/0x4f0\n? __pfx_jfs_ioctl+0x10/0x10\n? __pfx_jfs_ioctl+0x10/0x10\n__se_sys_ioctl+0x269/0x350\n? __pfx___se_sys_ioctl+0x10/0x10\n? do_syscall_64+0xfb/0x210\ndo_syscall_64+0xee/0x210\n? syscall_exit_to_user_mode+0x1e0/0x330\nentry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fe51f4903ad\nCode: c3 e8 a7 2b 00 00 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 89 f8 48\n89 f7 48 89 d6 48 89 ca 4d\nRSP: 002b:00007fe5202250c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007fe51f5cbf80 RCX: 00007fe51f4903ad\nRDX: 0000000020000680 RSI: 00000000c0185879 RDI: 0000000000000005\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fe520225640\nR13: 000000000000000e R14: 00007fe51f44fca0 R15: 00007fe52021d000\n\u003c/TASK\u003e\nModules linked in:\n---[ end trace 0000000000000000 ]---\nRIP: 0010:jfs_ioc_trim+0x34b/0x8f0\nCode: e7 e8 59 a4 87 fe 4d 8b 24 24 4d 8d bc 24 38 04 00 00 48 8d 93\n90 82 fe ff 4c 89 ff 31 f6\nRSP: 0018:ffffc900055f7cd0 EFLAGS: 00010206\nRAX: 0000000000000087 RBX: 00005866a9e67ff8 RCX: 000000000000000a\nRDX: 0000000000000001 RSI: 0000000000000004 RDI: 0000000000000001\nRBP: dffffc0000000000 R08: ffff88807c180003 R09: 1ffff1100f830000\nR10: dffffc0000000000 R11: ffffed100f830001 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000001 R15: 0000000000000438\nFS:  00007fe520225640(0000) GS:ffff8880b7e80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005593c91b2c88 CR3: 000000014927c000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nKernel panic - not syncing: Fatal exception\n\n[ Analysis ]\n\nWe believe that we have found a concurrency bug in the `fs/jfs` module\nthat results in a null pointer dereference. There is a closely related\nissue which has been fixed:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d6c1b3599b2feb5c7291f5ac3a36e5fa7cedb234\n\n... but, unfortunately, the accepted patch appears to still be\nsusceptible to a null pointer dereference under some interleavings.\n\nTo trigger the bug, we think that `JFS_SBI(ipbmap-\u003ei_sb)-\u003ebmap` is set\nto NULL in `dbFreeBits` and then dereferenced in `jfs_ioc_trim`. This\nbug manifests quite rarely under normal circumstances, but is\ntriggereable from a syz-program.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38204",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds read in add_missing_indices\n\nstbl is s8 but it must contain offsets into slot which can go from 0 to\n127.\n\nAdded a bound check for that error and return -EIO if the check fails.\nAlso make jfs_readdir return with error if add_missing_indices returns\nwith an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38206",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: fix double free in delayed_free\n\nThe double free could happen in the following path.\n\nexfat_create_upcase_table()\n        exfat_create_upcase_table() : return error\n        exfat_free_upcase_table() : free -\u003evol_utbl\n        exfat_load_default_upcase_table : return error\n     exfat_kill_sb()\n           delayed_free()\n                  exfat_free_upcase_table() \u003c--------- double free\nThis patch set -\u003evol_util as NULL after freeing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38210",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs-tsm-report: Fix NULL dereference of tsm_ops\n\nUnlike sysfs, the lifetime of configfs objects is controlled by\nuserspace. There is no mechanism for the kernel to find and delete all\ncreated config-items. Instead, the configfs-tsm-report mechanism has an\nexpectation that tsm_unregister() can happen at any time and cause\nestablished config-item access to start failing.\n\nThat expectation is not fully satisfied. While tsm_report_read(),\ntsm_report_{is,is_bin}_visible(), and tsm_report_make_item() safely fail\nif tsm_ops have been unregistered, tsm_report_privlevel_store()\ntsm_report_provider_show() fail to check for ops registration. Add the\nmissing checks for tsm_ops having been removed.\n\nNow, in supporting the ability for tsm_unregister() to always succeed,\nit leaves the problem of what to do with lingering config-items. The\nexpectation is that the admin that arranges for the -\u003eremove() (unbind)\nof the ${tsm_arch}-guest driver is also responsible for deletion of all\nopen config-items. Until that deletion happens, -\u003eprobe() (reload /\nbind) of the ${tsm_arch}-guest driver fails.\n\nThis allows for emergency shutdown / revocation of attestation\ninterfaces, and requires coordinated restart.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38211",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/iwcm: Fix use-after-free of work objects after cm_id destruction\n\nThe commit 59c68ac31e15 (\"iw_cm: free cm_id resources on the last\nderef\") simplified cm_id resource management by freeing cm_id once all\nreferences to the cm_id were removed. The references are removed either\nupon completion of iw_cm event handlers or when the application destroys\nthe cm_id. This commit introduced the use-after-free condition where\ncm_id_private object could still be in use by event handler works during\nthe destruction of cm_id. The commit aee2424246f9 (\"RDMA/iwcm: Fix a\nuse-after-free related to destroying CM IDs\") addressed this use-after-\nfree by flushing all pending works at the cm_id destruction.\n\nHowever, still another use-after-free possibility remained. It happens\nwith the work objects allocated for each cm_id_priv within\nalloc_work_entries() during cm_id creation, and subsequently freed in\ndealloc_work_entries() once all references to the cm_id are removed.\nIf the cm_id's last reference is decremented in the event handler work,\nthe work object for the work itself gets removed, and causes the use-\nafter-free BUG below:\n\n  BUG: KASAN: slab-use-after-free in __pwq_activate_work+0x1ff/0x250\n  Read of size 8 at addr ffff88811f9cf800 by task kworker/u16:1/147091\n\n  CPU: 2 UID: 0 PID: 147091 Comm: kworker/u16:1 Not tainted 6.15.0-rc2+ #27 PREEMPT(voluntary)\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04/01/2014\n  Workqueue:  0x0 (iw_cm_wq)\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x6a/0x90\n   print_report+0x174/0x554\n   ? __virt_addr_valid+0x208/0x430\n   ? __pwq_activate_work+0x1ff/0x250\n   kasan_report+0xae/0x170\n   ? __pwq_activate_work+0x1ff/0x250\n   __pwq_activate_work+0x1ff/0x250\n   pwq_dec_nr_in_flight+0x8c5/0xfb0\n   process_one_work+0xc11/0x1460\n   ? __pfx_process_one_work+0x10/0x10\n   ? assign_work+0x16c/0x240\n   worker_thread+0x5ef/0xfd0\n   ? __pfx_worker_thread+0x10/0x10\n   kthread+0x3b0/0x770\n   ? __pfx_kthread+0x10/0x10\n   ? rcu_is_watching+0x11/0xb0\n   ? _raw_spin_unlock_irq+0x24/0x50\n   ? rcu_is_watching+0x11/0xb0\n   ? __pfx_kthread+0x10/0x10\n   ret_from_fork+0x30/0x70\n   ? __pfx_kthread+0x10/0x10\n   ret_from_fork_asm+0x1a/0x30\n   \u003c/TASK\u003e\n\n  Allocated by task 147416:\n   kasan_save_stack+0x2c/0x50\n   kasan_save_track+0x10/0x30\n   __kasan_kmalloc+0xa6/0xb0\n   alloc_work_entries+0xa9/0x260 [iw_cm]\n   iw_cm_connect+0x23/0x4a0 [iw_cm]\n   rdma_connect_locked+0xbfd/0x1920 [rdma_cm]\n   nvme_rdma_cm_handler+0x8e5/0x1b60 [nvme_rdma]\n   cma_cm_event_handler+0xae/0x320 [rdma_cm]\n   cma_work_handler+0x106/0x1b0 [rdma_cm]\n   process_one_work+0x84f/0x1460\n   worker_thread+0x5ef/0xfd0\n   kthread+0x3b0/0x770\n   ret_from_fork+0x30/0x70\n   ret_from_fork_asm+0x1a/0x30\n\n  Freed by task 147091:\n   kasan_save_stack+0x2c/0x50\n   kasan_save_track+0x10/0x30\n   kasan_save_free_info+0x37/0x60\n   __kasan_slab_free+0x4b/0x70\n   kfree+0x13a/0x4b0\n   dealloc_work_entries+0x125/0x1f0 [iw_cm]\n   iwcm_deref_id+0x6f/0xa0 [iw_cm]\n   cm_work_handler+0x136/0x1ba0 [iw_cm]\n   process_one_work+0x84f/0x1460\n   worker_thread+0x5ef/0xfd0\n   kthread+0x3b0/0x770\n   ret_from_fork+0x30/0x70\n   ret_from_fork_asm+0x1a/0x30\n\n  Last potentially related work creation:\n   kasan_save_stack+0x2c/0x50\n   kasan_record_aux_stack+0xa3/0xb0\n   __queue_work+0x2ff/0x1390\n   queue_work_on+0x67/0xc0\n   cm_event_handler+0x46a/0x820 [iw_cm]\n   siw_cm_upcall+0x330/0x650 [siw]\n   siw_cm_work_handler+0x6b9/0x2b20 [siw]\n   process_one_work+0x84f/0x1460\n   worker_thread+0x5ef/0xfd0\n   kthread+0x3b0/0x770\n   ret_from_fork+0x30/0x70\n   ret_from_fork_asm+0x1a/0x30\n\nThis BUG is reproducible by repeating the blktests test case nvme/061\nfor the rdma transport and the siw driver.\n\nTo avoid the use-after-free of cm_id_private work objects, ensure that\nthe last reference to the cm_id is decremented not in the event handler\nworks, but in the cm_id destruction context. For that purpose, mo\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38212",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipc: fix to protect IPCS lookups using RCU\n\nsyzbot reported that it discovered a use-after-free vulnerability, [0]\n\n[0]: https://lore.kernel.org/all/67af13f8.050a0220.21dd3.0038.GAE@google.com/\n\nidr_for_each() is protected by rwsem, but this is not enough.  If it is\nnot protected by RCU read-critical region, when idr_for_each() calls\nradix_tree_node_free() through call_rcu() to free the radix_tree_node\nstructure, the node will be freed immediately, and when reading the next\nnode in radix_tree_for_each_slot(), the already freed memory may be read.\n\nTherefore, we need to add code to make sure that idr_for_each() is\nprotected within the RCU read-critical region when we call it in\nshm_destroy_orphaned().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38213",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38214",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: Fix fb_set_var to prevent null-ptr-deref in fb_videomode_to_var\n\nIf fb_add_videomode() in fb_set_var() fails to allocate memory for\nfb_videomode, later it may lead to a null-ptr dereference in\nfb_videomode_to_var(), as the fb_info is registered while not having the\nmode in modelist that is expected to be there, i.e. the one that is\ndescribed in fb_info-\u003evar.\n\n================================================================\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\nCPU: 1 PID: 30371 Comm: syz-executor.1 Not tainted 5.10.226-syzkaller #0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\nRIP: 0010:fb_videomode_to_var+0x24/0x610 drivers/video/fbdev/core/modedb.c:901\nCall Trace:\n display_to_var+0x3a/0x7c0 drivers/video/fbdev/core/fbcon.c:929\n fbcon_resize+0x3e2/0x8f0 drivers/video/fbdev/core/fbcon.c:2071\n resize_screen drivers/tty/vt/vt.c:1176 [inline]\n vc_do_resize+0x53a/0x1170 drivers/tty/vt/vt.c:1263\n fbcon_modechanged+0x3ac/0x6e0 drivers/video/fbdev/core/fbcon.c:2720\n fbcon_update_vcs+0x43/0x60 drivers/video/fbdev/core/fbcon.c:2776\n do_fb_ioctl+0x6d2/0x740 drivers/video/fbdev/core/fbmem.c:1128\n fb_ioctl+0xe7/0x150 drivers/video/fbdev/core/fbmem.c:1203\n vfs_ioctl fs/ioctl.c:48 [inline]\n __do_sys_ioctl fs/ioctl.c:753 [inline]\n __se_sys_ioctl fs/ioctl.c:739 [inline]\n __x64_sys_ioctl+0x19a/0x210 fs/ioctl.c:739\n do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x67/0xd1\n================================================================\n\nThe reason is that fb_info-\u003evar is being modified in fb_set_var(), and\nthen fb_videomode_to_var() is called. If it fails to add the mode to\nfb_info-\u003emodelist, fb_set_var() returns error, but does not restore the\nold value of fb_info-\u003evar. Restore fb_info-\u003evar on failure the same way\nit is done earlier in the function.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38215",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: Fix do_register_framebuffer to prevent null-ptr-deref in fb_videomode_to_var\n\nIf fb_add_videomode() in do_register_framebuffer() fails to allocate\nmemory for fb_videomode, it will later lead to a null-ptr dereference in\nfb_videomode_to_var(), as the fb_info is registered while not having the\nmode in modelist that is expected to be there, i.e. the one that is\ndescribed in fb_info-\u003evar.\n\n================================================================\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\nCPU: 1 PID: 30371 Comm: syz-executor.1 Not tainted 5.10.226-syzkaller #0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\nRIP: 0010:fb_videomode_to_var+0x24/0x610 drivers/video/fbdev/core/modedb.c:901\nCall Trace:\n display_to_var+0x3a/0x7c0 drivers/video/fbdev/core/fbcon.c:929\n fbcon_resize+0x3e2/0x8f0 drivers/video/fbdev/core/fbcon.c:2071\n resize_screen drivers/tty/vt/vt.c:1176 [inline]\n vc_do_resize+0x53a/0x1170 drivers/tty/vt/vt.c:1263\n fbcon_modechanged+0x3ac/0x6e0 drivers/video/fbdev/core/fbcon.c:2720\n fbcon_update_vcs+0x43/0x60 drivers/video/fbdev/core/fbcon.c:2776\n do_fb_ioctl+0x6d2/0x740 drivers/video/fbdev/core/fbmem.c:1128\n fb_ioctl+0xe7/0x150 drivers/video/fbdev/core/fbmem.c:1203\n vfs_ioctl fs/ioctl.c:48 [inline]\n __do_sys_ioctl fs/ioctl.c:753 [inline]\n __se_sys_ioctl fs/ioctl.c:739 [inline]\n __x64_sys_ioctl+0x19a/0x210 fs/ioctl.c:739\n do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x67/0xd1\n================================================================\n\nEven though fbcon_init() checks beforehand if fb_match_mode() in\nvar_to_display() fails, it can not prevent the panic because fbcon_init()\ndoes not return error code. Considering this and the comment in the code\nabout fb_match_mode() returning NULL - \"This should not happen\" - it is\nbetter to prevent registering the fb_info if its mode was not set\nsuccessfully. Also move fb_add_videomode() closer to the beginning of\ndo_register_framebuffer() to avoid having to do the cleanup on fail.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38217",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (ftsteutates) Fix TOCTOU race in fts_read()\n\nIn the fts_read() function, when handling hwmon_pwm_auto_channels_temp,\nthe code accesses the shared variable data-\u003efan_source[channel] twice\nwithout holding any locks. It is first checked against\nFTS_FAN_SOURCE_INVALID, and if the check passes, it is read again\nwhen used as an argument to the BIT() macro.\n\nThis creates a Time-of-Check to Time-of-Use (TOCTOU) race condition.\nAnother thread executing fts_update_device() can modify the value of\ndata-\u003efan_source[channel] between the check and its use. If the value\nis changed to FTS_FAN_SOURCE_INVALID (0xff) during this window, the\nBIT() macro will be called with a large shift value (BIT(255)).\nA bit shift by a value greater than or equal to the type width is\nundefined behavior and can lead to a crash or incorrect values being\nreturned to userspace.\n\nFix this by reading data-\u003efan_source[channel] into a local variable\nonce, eliminating the race condition. Additionally, add a bounds check\nto ensure the value is less than BITS_PER_LONG before passing it to\nthe BIT() macro, making the code more robust against undefined behavior.\n\nThis possible bug was found by an experimental static analysis tool\ndeveloped by our team.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38220",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: only dirty folios when data journaling regular files\n\nfstest generic/388 occasionally reproduces a crash that looks as\nfollows:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\n...\nCall Trace:\n \u003cTASK\u003e\n ext4_block_zero_page_range+0x30c/0x380 [ext4]\n ext4_truncate+0x436/0x440 [ext4]\n ext4_process_orphan+0x5d/0x110 [ext4]\n ext4_orphan_cleanup+0x124/0x4f0 [ext4]\n ext4_fill_super+0x262d/0x3110 [ext4]\n get_tree_bdev_flags+0x132/0x1d0\n vfs_get_tree+0x26/0xd0\n vfs_cmd_create+0x59/0xe0\n __do_sys_fsconfig+0x4ed/0x6b0\n do_syscall_64+0x82/0x170\n ...\n\nThis occurs when processing a symlink inode from the orphan list. The\npartial block zeroing code in the truncate path calls\next4_dirty_journalled_data() -\u003e folio_mark_dirty(). The latter calls\nmapping-\u003ea_ops-\u003edirty_folio(), but symlink inodes are not assigned an\na_ops vector in ext4, hence the crash.\n\nTo avoid this problem, update the ext4_dirty_journalled_data() helper to\nonly mark the folio dirty on regular files (for which a_ops is\nassigned). This also matches the journaling logic in the ext4_symlink()\ncreation path, where ext4_handle_dirty_metadata() is called directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38222",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: inline: fix len overflow in ext4_prepare_inline_data\n\nWhen running the following code on an ext4 filesystem with inline_data\nfeature enabled, it will lead to the bug below.\n\n        fd = open(\"file1\", O_RDWR | O_CREAT | O_TRUNC, 0666);\n        ftruncate(fd, 30);\n        pwrite(fd, \"a\", 1, (1UL \u003c\u003c 40) + 5UL);\n\nThat happens because write_begin will succeed as when\next4_generic_write_inline_data calls ext4_prepare_inline_data, pos + len\nwill be truncated, leading to ext4_prepare_inline_data parameter to be 6\ninstead of 0x10000000006.\n\nThen, later when write_end is called, we hit:\n\n        BUG_ON(pos + len \u003e EXT4_I(inode)-\u003ei_inline_size);\n\nat ext4_write_inline_data.\n\nFix it by using a loff_t type for the len parameter in\next4_prepare_inline_data instead of an unsigned int.\n\n[   44.545164] ------------[ cut here ]------------\n[   44.545530] kernel BUG at fs/ext4/inline.c:240!\n[   44.545834] Oops: invalid opcode: 0000 [#1] SMP NOPTI\n[   44.546172] CPU: 3 UID: 0 PID: 343 Comm: test Not tainted 6.15.0-rc2-00003-g9080916f4863 #45 PREEMPT(full)  112853fcebfdb93254270a7959841d2c6aa2c8bb\n[   44.546523] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\n[   44.546523] RIP: 0010:ext4_write_inline_data+0xfe/0x100\n[   44.546523] Code: 3c 0e 48 83 c7 48 48 89 de 5b 41 5c 41 5d 41 5e 41 5f 5d e9 e4 fa 43 01 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc cc 0f 0b \u003c0f\u003e 0b 0f 1f 44 00 00 55 41 57 41 56 41 55 41 54 53 48 83 ec 20 49\n[   44.546523] RSP: 0018:ffffb342008b79a8 EFLAGS: 00010216\n[   44.546523] RAX: 0000000000000001 RBX: ffff9329c579c000 RCX: 0000010000000006\n[   44.546523] RDX: 000000000000003c RSI: ffffb342008b79f0 RDI: ffff9329c158e738\n[   44.546523] RBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000000\n[   44.546523] R10: 00007ffffffff000 R11: ffffffff9bd0d910 R12: 0000006210000000\n[   44.546523] R13: fffffc7e4015e700 R14: 0000010000000005 R15: ffff9329c158e738\n[   44.546523] FS:  00007f4299934740(0000) GS:ffff932a60179000(0000) knlGS:0000000000000000\n[   44.546523] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   44.546523] CR2: 00007f4299a1ec90 CR3: 0000000002886002 CR4: 0000000000770eb0\n[   44.546523] PKRU: 55555554\n[   44.546523] Call Trace:\n[   44.546523]  \u003cTASK\u003e\n[   44.546523]  ext4_write_inline_data_end+0x126/0x2d0\n[   44.546523]  generic_perform_write+0x17e/0x270\n[   44.546523]  ext4_buffered_write_iter+0xc8/0x170\n[   44.546523]  vfs_write+0x2be/0x3e0\n[   44.546523]  __x64_sys_pwrite64+0x6d/0xc0\n[   44.546523]  do_syscall_64+0x6a/0xf0\n[   44.546523]  ? __wake_up+0x89/0xb0\n[   44.546523]  ? xas_find+0x72/0x1c0\n[   44.546523]  ? next_uptodate_folio+0x317/0x330\n[   44.546523]  ? set_pte_range+0x1a6/0x270\n[   44.546523]  ? filemap_map_pages+0x6ee/0x840\n[   44.546523]  ? ext4_setattr+0x2fa/0x750\n[   44.546523]  ? do_pte_missing+0x128/0xf70\n[   44.546523]  ? security_inode_post_setattr+0x3e/0xd0\n[   44.546523]  ? ___pte_offset_map+0x19/0x100\n[   44.546523]  ? handle_mm_fault+0x721/0xa10\n[   44.546523]  ? do_user_addr_fault+0x197/0x730\n[   44.546523]  ? do_syscall_64+0x76/0xf0\n[   44.546523]  ? arch_exit_to_user_mode_prepare+0x1e/0x60\n[   44.546523]  ? irqentry_exit_to_user_mode+0x79/0x90\n[   44.546523]  entry_SYSCALL_64_after_hwframe+0x55/0x5d\n[   44.546523] RIP: 0033:0x7f42999c6687\n[   44.546523] Code: 48 89 fa 4c 89 df e8 58 b3 00 00 8b 93 08 03 00 00 59 5e 48 83 f8 fc 74 1a 5b c3 0f 1f 84 00 00 00 00 00 48 8b 44 24 10 0f 05 \u003c5b\u003e c3 0f 1f 80 00 00 00 00 83 e2 39 83 fa 08 75 de e8 23 ff ff ff\n[   44.546523] RSP: 002b:00007ffeae4a7930 EFLAGS: 00000202 ORIG_RAX: 0000000000000012\n[   44.546523] RAX: ffffffffffffffda RBX: 00007f4299934740 RCX: 00007f42999c6687\n[   44.546523] RDX: 0000000000000001 RSI: 000055ea6149200f RDI: 0000000000000003\n[   44.546523] RBP: 00007ffeae4a79a0 R08: 0000000000000000 R09: 0000000000000000\n[   44.546523] R10: 0000010000000005 R11: 0000000000000202 R12: 0000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38225",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: Cleanup after an allocation error\n\nWhen allocation failures are not cleaned up by the driver, further\nallocation errors will be false-positives, which will cause buffers to\nremain uninitialized and cause NULL pointer dereferences.\nEnsure proper cleanup of failed allocations to prevent these issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38226",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vivid: Change the siize of the composing\n\nsyzkaller found a bug:\n\nBUG: KASAN: vmalloc-out-of-bounds in tpg_fill_plane_pattern drivers/media/common/v4l2-tpg/v4l2-tpg-core.c:2608 [inline]\nBUG: KASAN: vmalloc-out-of-bounds in tpg_fill_plane_buffer+0x1a9c/0x5af0 drivers/media/common/v4l2-tpg/v4l2-tpg-core.c:2705\nWrite of size 1440 at addr ffffc9000d0ffda0 by task vivid-000-vid-c/5304\n\nCPU: 0 UID: 0 PID: 5304 Comm: vivid-000-vid-c Not tainted 6.14.0-rc2-syzkaller-00039-g09fbf3d50205 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\n\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:378 [inline]\n print_report+0x169/0x550 mm/kasan/report.c:489\n kasan_report+0x143/0x180 mm/kasan/report.c:602\n kasan_check_range+0x282/0x290 mm/kasan/generic.c:189\n __asan_memcpy+0x40/0x70 mm/kasan/shadow.c:106\n tpg_fill_plane_pattern drivers/media/common/v4l2-tpg/v4l2-tpg-core.c:2608 [inline]\n tpg_fill_plane_buffer+0x1a9c/0x5af0 drivers/media/common/v4l2-tpg/v4l2-tpg-core.c:2705\n vivid_fillbuff drivers/media/test-drivers/vivid/vivid-kthread-cap.c:470 [inline]\n vivid_thread_vid_cap_tick+0xf8e/0x60d0 drivers/media/test-drivers/vivid/vivid-kthread-cap.c:629\n vivid_thread_vid_cap+0x8aa/0xf30 drivers/media/test-drivers/vivid/vivid-kthread-cap.c:767\n kthread+0x7a9/0x920 kernel/kthread.c:464\n ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:148\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n \u003c/TASK\u003e\n\nThe composition size cannot be larger than the size of fmt_cap_rect.\nSo execute v4l2_rect_map_inside() even if has_compose_cap == 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38227",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vidtv: Terminating the subsequent process of initialization failure\n\nsyzbot reported a slab-use-after-free Read in vidtv_mux_init. [1]\n\nAfter PSI initialization fails, the si member is accessed again, resulting\nin this uaf.\n\nAfter si initialization fails, the subsequent process needs to be exited.\n\n[1]\nBUG: KASAN: slab-use-after-free in vidtv_mux_pid_ctx_init drivers/media/test-drivers/vidtv/vidtv_mux.c:78 [inline]\nBUG: KASAN: slab-use-after-free in vidtv_mux_init+0xac2/0xbe0 drivers/media/test-drivers/vidtv/vidtv_mux.c:524\nRead of size 8 at addr ffff88802fa42acc by task syz.2.37/6059\n\nCPU: 0 UID: 0 PID: 6059 Comm: syz.2.37 Not tainted 6.14.0-rc5-syzkaller #0\nHardware name: Google Compute Engine, BIOS Google 02/12/2025\nCall Trace:\n\u003cTASK\u003e\n__dump_stack lib/dump_stack.c:94 [inline]\ndump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\nprint_address_description mm/kasan/report.c:408 [inline]\nprint_report+0xc3/0x670 mm/kasan/report.c:521\nkasan_report+0xd9/0x110 mm/kasan/report.c:634\nvidtv_mux_pid_ctx_init drivers/media/test-drivers/vidtv/vidtv_mux.c:78\nvidtv_mux_init+0xac2/0xbe0 drivers/media/test-drivers/vidtv/vidtv_mux.c:524\nvidtv_start_streaming drivers/media/test-drivers/vidtv/vidtv_bridge.c:194\nvidtv_start_feed drivers/media/test-drivers/vidtv/vidtv_bridge.c:239\ndmx_section_feed_start_filtering drivers/media/dvb-core/dvb_demux.c:973\ndvb_dmxdev_feed_start drivers/media/dvb-core/dmxdev.c:508 [inline]\ndvb_dmxdev_feed_restart.isra.0 drivers/media/dvb-core/dmxdev.c:537\ndvb_dmxdev_filter_stop+0x2b4/0x3a0 drivers/media/dvb-core/dmxdev.c:564\ndvb_dmxdev_filter_free drivers/media/dvb-core/dmxdev.c:840 [inline]\ndvb_demux_release+0x92/0x550 drivers/media/dvb-core/dmxdev.c:1246\n__fput+0x3ff/0xb70 fs/file_table.c:464\ntask_work_run+0x14e/0x250 kernel/task_work.c:227\nexit_task_work include/linux/task_work.h:40 [inline]\ndo_exit+0xad8/0x2d70 kernel/exit.c:938\ndo_group_exit+0xd3/0x2a0 kernel/exit.c:1087\n__do_sys_exit_group kernel/exit.c:1098 [inline]\n__se_sys_exit_group kernel/exit.c:1096 [inline]\n__x64_sys_exit_group+0x3e/0x50 kernel/exit.c:1096\nx64_sys_call+0x151f/0x1720 arch/x86/include/generated/asm/syscalls_64.h:232\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f871d58d169\nCode: Unable to access opcode bytes at 0x7f871d58d13f.\nRSP: 002b:00007fff4b19a788 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f871d58d169\nRDX: 0000000000000064 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: 00007fff4b19a7ec R08: 0000000b4b19a87f R09: 00000000000927c0\nR10: 0000000000000001 R11: 0000000000000246 R12: 0000000000000003\nR13: 00000000000927c0 R14: 000000000001d553 R15: 00007fff4b19a840\n \u003c/TASK\u003e\n\nAllocated by task 6059:\n kasan_save_stack+0x33/0x60 mm/kasan/common.c:47\n kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0xaa/0xb0 mm/kasan/common.c:394\n kmalloc_noprof include/linux/slab.h:901 [inline]\n kzalloc_noprof include/linux/slab.h:1037 [inline]\n vidtv_psi_pat_table_init drivers/media/test-drivers/vidtv/vidtv_psi.c:970\n vidtv_channel_si_init drivers/media/test-drivers/vidtv/vidtv_channel.c:423\n vidtv_mux_init drivers/media/test-drivers/vidtv/vidtv_mux.c:519\n vidtv_start_streaming drivers/media/test-drivers/vidtv/vidtv_bridge.c:194\n vidtv_start_feed drivers/media/test-drivers/vidtv/vidtv_bridge.c:239\n dmx_section_feed_start_filtering drivers/media/dvb-core/dvb_demux.c:973\n dvb_dmxdev_feed_start drivers/media/dvb-core/dmxdev.c:508 [inline]\n dvb_dmxdev_feed_restart.isra.0 drivers/media/dvb-core/dmxdev.c:537\n dvb_dmxdev_filter_stop+0x2b4/0x3a0 drivers/media/dvb-core/dmxdev.c:564\n dvb_dmxdev_filter_free drivers/media/dvb-core/dmxdev.c:840 [inline]\n dvb_demux_release+0x92/0x550 drivers/media/dvb-core/dmxdev.c:1246\n __fput+0x3ff/0xb70 fs/file_tabl\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38229",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: cxusb: no longer judge rbuf when the write fails\n\nsyzbot reported a uninit-value in cxusb_i2c_xfer. [1]\n\nOnly when the write operation of usb_bulk_msg() in dvb_usb_generic_rw()\nsucceeds and rlen is greater than 0, the read operation of usb_bulk_msg()\nwill be executed to read rlen bytes of data from the dvb device into the\nrbuf.\n\nIn this case, although rlen is 1, the write operation failed which resulted\nin the dvb read operation not being executed, and ultimately variable i was\nnot initialized.\n\n[1]\nBUG: KMSAN: uninit-value in cxusb_gpio_tuner drivers/media/usb/dvb-usb/cxusb.c:124 [inline]\nBUG: KMSAN: uninit-value in cxusb_i2c_xfer+0x153a/0x1a60 drivers/media/usb/dvb-usb/cxusb.c:196\n cxusb_gpio_tuner drivers/media/usb/dvb-usb/cxusb.c:124 [inline]\n cxusb_i2c_xfer+0x153a/0x1a60 drivers/media/usb/dvb-usb/cxusb.c:196\n __i2c_transfer+0xe25/0x3150 drivers/i2c/i2c-core-base.c:-1\n i2c_transfer+0x317/0x4a0 drivers/i2c/i2c-core-base.c:2315\n i2c_transfer_buffer_flags+0x125/0x1e0 drivers/i2c/i2c-core-base.c:2343\n i2c_master_send include/linux/i2c.h:109 [inline]\n i2cdev_write+0x210/0x280 drivers/i2c/i2c-dev.c:183\n do_loop_readv_writev fs/read_write.c:848 [inline]\n vfs_writev+0x963/0x14e0 fs/read_write.c:1057\n do_writev+0x247/0x5c0 fs/read_write.c:1101\n __do_sys_writev fs/read_write.c:1169 [inline]\n __se_sys_writev fs/read_write.c:1166 [inline]\n __x64_sys_writev+0x98/0xe0 fs/read_write.c:1166\n x64_sys_call+0x2229/0x3c80 arch/x86/include/generated/asm/syscalls_64.h:21\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xcd/0x1e0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38231",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: Initialize ssc before laundromat_work to prevent NULL dereference\n\nIn nfs4_state_start_net(), laundromat_work may access nfsd_ssc through\nnfs4_laundromat -\u003e nfsd4_ssc_expire_umount. If nfsd_ssc isn't initialized,\nthis can cause NULL pointer dereference.\n\nNormally the delayed start of laundromat_work allows sufficient time for\nnfsd_ssc initialization to complete. However, when the kernel waits too\nlong for userspace responses (e.g. in nfs4_state_start_net -\u003e\nnfsd4_end_grace -\u003e nfsd4_record_grace_done -\u003e nfsd4_cld_grace_done -\u003e\ncld_pipe_upcall -\u003e __cld_pipe_upcall -\u003e wait_for_completion path), the\ndelayed work may start before nfsd_ssc initialization finishes.\n\nFix this by moving nfsd_ssc initialization before starting laundromat_work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38236",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Don't leave consecutive consumed OOB skbs.\n\nJann Horn reported a use-after-free in unix_stream_read_generic().\n\nThe following sequences reproduce the issue:\n\n  $ python3\n  from socket import *\n  s1, s2 = socketpair(AF_UNIX, SOCK_STREAM)\n  s1.send(b'x', MSG_OOB)\n  s2.recv(1, MSG_OOB)     # leave a consumed OOB skb\n  s1.send(b'y', MSG_OOB)\n  s2.recv(1, MSG_OOB)     # leave a consumed OOB skb\n  s1.send(b'z', MSG_OOB)\n  s2.recv(1)              # recv 'z' illegally\n  s2.recv(1, MSG_OOB)     # access 'z' skb (use-after-free)\n\nEven though a user reads OOB data, the skb holding the data stays on\nthe recv queue to mark the OOB boundary and break the next recv().\n\nAfter the last send() in the scenario above, the sk2's recv queue has\n2 leading consumed OOB skbs and 1 real OOB skb.\n\nThen, the following happens during the next recv() without MSG_OOB\n\n  1. unix_stream_read_generic() peeks the first consumed OOB skb\n  2. manage_oob() returns the next consumed OOB skb\n  3. unix_stream_read_generic() fetches the next not-yet-consumed OOB skb\n  4. unix_stream_read_generic() reads and frees the OOB skb\n\n, and the last recv(MSG_OOB) triggers KASAN splat.\n\nThe 3. above occurs because of the SO_PEEK_OFF code, which does not\nexpect unix_skb_len(skb) to be 0, but this is true for such consumed\nOOB skbs.\n\n  while (skip \u003e= unix_skb_len(skb)) {\n    skip -= unix_skb_len(skb);\n    skb = skb_peek_next(skb, \u0026sk-\u003esk_receive_queue);\n    ...\n  }\n\nIn addition to this use-after-free, there is another issue that\nioctl(SIOCATMARK) does not function properly with consecutive consumed\nOOB skbs.\n\nSo, nothing good comes out of such a situation.\n\nInstead of complicating manage_oob(), ioctl() handling, and the next\nECONNRESET fix by introducing a loop for consecutive consumed OOB skbs,\nlet's not leave such consecutive OOB unnecessarily.\n\nNow, while receiving an OOB skb in unix_stream_recv_urg(), if its\nprevious skb is a consumed OOB skb, it is freed.\n\n[0]:\nBUG: KASAN: slab-use-after-free in unix_stream_read_actor (net/unix/af_unix.c:3027)\nRead of size 4 at addr ffff888106ef2904 by task python3/315\n\nCPU: 2 UID: 0 PID: 315 Comm: python3 Not tainted 6.16.0-rc1-00407-gec315832f6f9 #8 PREEMPT(voluntary)\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-4.fc42 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl (lib/dump_stack.c:122)\n print_report (mm/kasan/report.c:409 mm/kasan/report.c:521)\n kasan_report (mm/kasan/report.c:636)\n unix_stream_read_actor (net/unix/af_unix.c:3027)\n unix_stream_read_generic (net/unix/af_unix.c:2708 net/unix/af_unix.c:2847)\n unix_stream_recvmsg (net/unix/af_unix.c:3048)\n sock_recvmsg (net/socket.c:1063 (discriminator 20) net/socket.c:1085 (discriminator 20))\n __sys_recvfrom (net/socket.c:2278)\n __x64_sys_recvfrom (net/socket.c:2291 (discriminator 1) net/socket.c:2287 (discriminator 1) net/socket.c:2287 (discriminator 1))\n do_syscall_64 (arch/x86/entry/syscall_64.c:63 (discriminator 1) arch/x86/entry/syscall_64.c:94 (discriminator 1))\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\nRIP: 0033:0x7f8911fcea06\nCode: 5d e8 41 8b 93 08 03 00 00 59 5e 48 83 f8 fc 75 19 83 e2 39 83 fa 08 75 11 e8 26 ff ff ff 66 0f 1f 44 00 00 48 8b 45 10 0f 05 \u003c48\u003e 8b 5d f8 c9 c3 0f 1f 40 00 f3 0f 1e fa 55 48 89 e5 48 83 ec 08\nRSP: 002b:00007fffdb0dccb0 EFLAGS: 00000202 ORIG_RAX: 000000000000002d\nRAX: ffffffffffffffda RBX: 00007fffdb0dcdc8 RCX: 00007f8911fcea06\nRDX: 0000000000000001 RSI: 00007f8911a5e060 RDI: 0000000000000006\nRBP: 00007fffdb0dccd0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000202 R12: 00007f89119a7d20\nR13: ffffffffc4653600 R14: 0000000000000000 R15: 0000000000000000\n \u003c/TASK\u003e\n\nAllocated by task 315:\n kasan_save_stack (mm/kasan/common.c:48)\n kasan_save_track (mm/kasan/common.c:60 (discriminator 1) mm/kasan/common.c:69 (discriminator 1))\n __kasan_slab_alloc (mm/kasan/common.c:348)\n kmem_cache_alloc_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38239",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: megaraid_sas: Fix invalid node index\n\nOn a system with DRAM interleave enabled, out-of-bound access is\ndetected:\n\nmegaraid_sas 0000:3f:00.0: requested/available msix 128/128 poll_queue 0\n------------[ cut here ]------------\nUBSAN: array-index-out-of-bounds in ./arch/x86/include/asm/topology.h:72:28\nindex -1 is out of range for type 'cpumask *[1024]'\ndump_stack_lvl+0x5d/0x80\nubsan_epilogue+0x5/0x2b\n__ubsan_handle_out_of_bounds.cold+0x46/0x4b\nmegasas_alloc_irq_vectors+0x149/0x190 [megaraid_sas]\nmegasas_probe_one.cold+0xa4d/0x189c [megaraid_sas]\nlocal_pci_probe+0x42/0x90\npci_device_probe+0xdc/0x290\nreally_probe+0xdb/0x340\n__driver_probe_device+0x78/0x110\ndriver_probe_device+0x1f/0xa0\n__driver_attach+0xba/0x1c0\nbus_for_each_dev+0x8b/0xe0\nbus_add_driver+0x142/0x220\ndriver_register+0x72/0xd0\nmegasas_init+0xdf/0xff0 [megaraid_sas]\ndo_one_initcall+0x57/0x310\ndo_init_module+0x90/0x250\ninit_module_from_file+0x85/0xc0\nidempotent_init_module+0x114/0x310\n__x64_sys_finit_module+0x65/0xc0\ndo_syscall_64+0x82/0x170\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFix it accordingly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38244",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential deadlock when reconnecting channels\n\nFix cifs_signal_cifsd_for_reconnect() to take the correct lock order\nand prevent the following deadlock from happening\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.16.0-rc3-build2+ #1301 Tainted: G S      W\n------------------------------------------------------\ncifsd/6055 is trying to acquire lock:\nffff88810ad56038 (\u0026tcp_ses-\u003esrv_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0x134/0x200\n\nbut task is already holding lock:\nffff888119c64330 (\u0026ret_buf-\u003echan_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0xcf/0x200\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-\u003e #2 (\u0026ret_buf-\u003echan_lock){+.+.}-{3:3}:\n       validate_chain+0x1cf/0x270\n       __lock_acquire+0x60e/0x780\n       lock_acquire.part.0+0xb4/0x1f0\n       _raw_spin_lock+0x2f/0x40\n       cifs_setup_session+0x81/0x4b0\n       cifs_get_smb_ses+0x771/0x900\n       cifs_mount_get_session+0x7e/0x170\n       cifs_mount+0x92/0x2d0\n       cifs_smb3_do_mount+0x161/0x460\n       smb3_get_tree+0x55/0x90\n       vfs_get_tree+0x46/0x180\n       do_new_mount+0x1b0/0x2e0\n       path_mount+0x6ee/0x740\n       do_mount+0x98/0xe0\n       __do_sys_mount+0x148/0x180\n       do_syscall_64+0xa4/0x260\n       entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n-\u003e #1 (\u0026ret_buf-\u003eses_lock){+.+.}-{3:3}:\n       validate_chain+0x1cf/0x270\n       __lock_acquire+0x60e/0x780\n       lock_acquire.part.0+0xb4/0x1f0\n       _raw_spin_lock+0x2f/0x40\n       cifs_match_super+0x101/0x320\n       sget+0xab/0x270\n       cifs_smb3_do_mount+0x1e0/0x460\n       smb3_get_tree+0x55/0x90\n       vfs_get_tree+0x46/0x180\n       do_new_mount+0x1b0/0x2e0\n       path_mount+0x6ee/0x740\n       do_mount+0x98/0xe0\n       __do_sys_mount+0x148/0x180\n       do_syscall_64+0xa4/0x260\n       entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n-\u003e #0 (\u0026tcp_ses-\u003esrv_lock){+.+.}-{3:3}:\n       check_noncircular+0x95/0xc0\n       check_prev_add+0x115/0x2f0\n       validate_chain+0x1cf/0x270\n       __lock_acquire+0x60e/0x780\n       lock_acquire.part.0+0xb4/0x1f0\n       _raw_spin_lock+0x2f/0x40\n       cifs_signal_cifsd_for_reconnect+0x134/0x200\n       __cifs_reconnect+0x8f/0x500\n       cifs_handle_standard+0x112/0x280\n       cifs_demultiplex_thread+0x64d/0xbc0\n       kthread+0x2f7/0x310\n       ret_from_fork+0x2a/0x230\n       ret_from_fork_asm+0x1a/0x30\n\nother info that might help us debug this:\n\nChain exists of:\n  \u0026tcp_ses-\u003esrv_lock --\u003e \u0026ret_buf-\u003eses_lock --\u003e \u0026ret_buf-\u003echan_lock\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(\u0026ret_buf-\u003echan_lock);\n                               lock(\u0026ret_buf-\u003eses_lock);\n                               lock(\u0026ret_buf-\u003echan_lock);\n  lock(\u0026tcp_ses-\u003esrv_lock);\n\n *** DEADLOCK ***\n\n3 locks held by cifsd/6055:\n #0: ffffffff857de398 (\u0026cifs_tcp_ses_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0x7b/0x200\n #1: ffff888119c64060 (\u0026ret_buf-\u003eses_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0x9c/0x200\n #2: ffff888119c64330 (\u0026ret_buf-\u003echan_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0xcf/0x200",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38246",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt: properly flush XDP redirect lists\n\nWe encountered following crash when testing a XDP_REDIRECT feature\nin production:\n\n[56251.579676] list_add corruption. next-\u003eprev should be prev (ffff93120dd40f30), but was ffffb301ef3a6740. (next=ffff93120dd\n40f30).\n[56251.601413] ------------[ cut here ]------------\n[56251.611357] kernel BUG at lib/list_debug.c:29!\n[56251.621082] Oops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[56251.632073] CPU: 111 UID: 0 PID: 0 Comm: swapper/111 Kdump: loaded Tainted: P           O       6.12.33-cloudflare-2025.6.\n3 #1\n[56251.653155] Tainted: [P]=PROPRIETARY_MODULE, [O]=OOT_MODULE\n[56251.663877] Hardware name: MiTAC GC68B-B8032-G11P6-GPU/S8032GM-HE-CFR, BIOS V7.020.B10-sig 01/22/2025\n[56251.682626] RIP: 0010:__list_add_valid_or_report+0x4b/0xa0\n[56251.693203] Code: 0e 48 c7 c7 68 e7 d9 97 e8 42 16 fe ff 0f 0b 48 8b 52 08 48 39 c2 74 14 48 89 f1 48 c7 c7 90 e7 d9 97 48\n 89 c6 e8 25 16 fe ff \u003c0f\u003e 0b 4c 8b 02 49 39 f0 74 14 48 89 d1 48 c7 c7 e8 e7 d9 97 4c 89\n[56251.725811] RSP: 0018:ffff93120dd40b80 EFLAGS: 00010246\n[56251.736094] RAX: 0000000000000075 RBX: ffffb301e6bba9d8 RCX: 0000000000000000\n[56251.748260] RDX: 0000000000000000 RSI: ffff9149afda0b80 RDI: ffff9149afda0b80\n[56251.760349] RBP: ffff9131e49c8000 R08: 0000000000000000 R09: ffff93120dd40a18\n[56251.772382] R10: ffff9159cf2ce1a8 R11: 0000000000000003 R12: ffff911a80850000\n[56251.784364] R13: ffff93120fbc7000 R14: 0000000000000010 R15: ffff9139e7510e40\n[56251.796278] FS:  0000000000000000(0000) GS:ffff9149afd80000(0000) knlGS:0000000000000000\n[56251.809133] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[56251.819561] CR2: 00007f5e85e6f300 CR3: 00000038b85e2006 CR4: 0000000000770ef0\n[56251.831365] PKRU: 55555554\n[56251.838653] Call Trace:\n[56251.845560]  \u003cIRQ\u003e\n[56251.851943]  cpu_map_enqueue.cold+0x5/0xa\n[56251.860243]  xdp_do_redirect+0x2d9/0x480\n[56251.868388]  bnxt_rx_xdp+0x1d8/0x4c0 [bnxt_en]\n[56251.877028]  bnxt_rx_pkt+0x5f7/0x19b0 [bnxt_en]\n[56251.885665]  ? cpu_max_write+0x1e/0x100\n[56251.893510]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.902276]  __bnxt_poll_work+0x190/0x340 [bnxt_en]\n[56251.911058]  bnxt_poll+0xab/0x1b0 [bnxt_en]\n[56251.919041]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.927568]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.935958]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.944250]  __napi_poll+0x2b/0x160\n[56251.951155]  bpf_trampoline_6442548651+0x79/0x123\n[56251.959262]  __napi_poll+0x5/0x160\n[56251.966037]  net_rx_action+0x3d2/0x880\n[56251.973133]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.981265]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.989262]  ? __hrtimer_run_queues+0x162/0x2a0\n[56251.996967]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56252.004875]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56252.012673]  ? bnxt_msix+0x62/0x70 [bnxt_en]\n[56252.019903]  handle_softirqs+0xcf/0x270\n[56252.026650]  irq_exit_rcu+0x67/0x90\n[56252.032933]  common_interrupt+0x85/0xa0\n[56252.039498]  \u003c/IRQ\u003e\n[56252.044246]  \u003cTASK\u003e\n[56252.048935]  asm_common_interrupt+0x26/0x40\n[56252.055727] RIP: 0010:cpuidle_enter_state+0xb8/0x420\n[56252.063305] Code: dc 01 00 00 e8 f9 79 3b ff e8 64 f7 ff ff 49 89 c5 0f 1f 44 00 00 31 ff e8 a5 32 3a ff 45 84 ff 0f 85 ae\n 01 00 00 fb 45 85 f6 \u003c0f\u003e 88 88 01 00 00 48 8b 04 24 49 63 ce 4c 89 ea 48 6b f1 68 48 29\n[56252.088911] RSP: 0018:ffff93120c97fe98 EFLAGS: 00000202\n[56252.096912] RAX: ffff9149afd80000 RBX: ffff9141d3a72800 RCX: 0000000000000000\n[56252.106844] RDX: 00003329176c6b98 RSI: ffffffe36db3fdc7 RDI: 0000000000000000\n[56252.116733] RBP: 0000000000000002 R08: 0000000000000002 R09: 000000000000004e\n[56252.126652] R10: ffff9149afdb30c4 R11: 071c71c71c71c71c R12: ffffffff985ff860\n[56252.136637] R13: 00003329176c6b98 R14: 0000000000000002 R15: 0000000000000000\n[56252.146667]  ? cpuidle_enter_state+0xab/0x420\n[56252.153909]  cpuidle_enter+0x2d/0x40\n[56252.160360]  do_idle+0x176/0x1c0\n[56252.166456\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38248",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbridge: mcast: Fix use-after-free during router port configuration\n\nThe bridge maintains a global list of ports behind which a multicast\nrouter resides. The list is consulted during forwarding to ensure\nmulticast packets are forwarded to these ports even if the ports are not\nmember in the matching MDB entry.\n\nWhen per-VLAN multicast snooping is enabled, the per-port multicast\ncontext is disabled on each port and the port is removed from the global\nrouter port list:\n\n # ip link add name br1 up type bridge vlan_filtering 1 mcast_snooping 1\n # ip link add name dummy1 up master br1 type dummy\n # ip link set dev dummy1 type bridge_slave mcast_router 2\n $ bridge -d mdb show | grep router\n router ports on br1: dummy1\n # ip link set dev br1 type bridge mcast_vlan_snooping 1\n $ bridge -d mdb show | grep router\n\nHowever, the port can be re-added to the global list even when per-VLAN\nmulticast snooping is enabled:\n\n # ip link set dev dummy1 type bridge_slave mcast_router 0\n # ip link set dev dummy1 type bridge_slave mcast_router 2\n $ bridge -d mdb show | grep router\n router ports on br1: dummy1\n\nSince commit 4b30ae9adb04 (\"net: bridge: mcast: re-implement\nbr_multicast_{enable, disable}_port functions\"), when per-VLAN multicast\nsnooping is enabled, multicast disablement on a port will disable the\nper-{port, VLAN} multicast contexts and not the per-port one. As a\nresult, a port will remain in the global router port list even after it\nis deleted. This will lead to a use-after-free [1] when the list is\ntraversed (when adding a new port to the list, for example):\n\n # ip link del dev dummy1\n # ip link add name dummy2 up master br1 type dummy\n # ip link set dev dummy2 type bridge_slave mcast_router 2\n\nSimilarly, stale entries can also be found in the per-VLAN router port\nlist. When per-VLAN multicast snooping is disabled, the per-{port, VLAN}\ncontexts are disabled on each port and the port is removed from the\nper-VLAN router port list:\n\n # ip link add name br1 up type bridge vlan_filtering 1 mcast_snooping 1 mcast_vlan_snooping 1\n # ip link add name dummy1 up master br1 type dummy\n # bridge vlan add vid 2 dev dummy1\n # bridge vlan global set vid 2 dev br1 mcast_snooping 1\n # bridge vlan set vid 2 dev dummy1 mcast_router 2\n $ bridge vlan global show dev br1 vid 2 | grep router\n       router ports: dummy1\n # ip link set dev br1 type bridge mcast_vlan_snooping 0\n $ bridge vlan global show dev br1 vid 2 | grep router\n\nHowever, the port can be re-added to the per-VLAN list even when\nper-VLAN multicast snooping is disabled:\n\n # bridge vlan set vid 2 dev dummy1 mcast_router 0\n # bridge vlan set vid 2 dev dummy1 mcast_router 2\n $ bridge vlan global show dev br1 vid 2 | grep router\n       router ports: dummy1\n\nWhen the VLAN is deleted from the port, the per-{port, VLAN} multicast\ncontext will not be disabled since multicast snooping is not enabled\non the VLAN. As a result, the port will remain in the per-VLAN router\nport list even after it is no longer member in the VLAN. This will lead\nto a use-after-free [2] when the list is traversed (when adding a new\nport to the list, for example):\n\n # ip link add name dummy2 up master br1 type dummy\n # bridge vlan add vid 2 dev dummy2\n # bridge vlan del vid 2 dev dummy1\n # bridge vlan set vid 2 dev dummy2 mcast_router 2\n\nFix these issues by removing the port from the relevant (global or\nper-VLAN) router port list in br_multicast_port_ctx_deinit(). The\nfunction is invoked during port deletion with the per-port multicast\ncontext and during VLAN deletion with the per-{port, VLAN} multicast\ncontext.\n\nNote that deleting the multicast router timer is not enough as it only\ntakes care of the temporary multicast router states (1 or 3) and not the\npermanent one (2).\n\n[1]\nBUG: KASAN: slab-out-of-bounds in br_multicast_add_router.part.0+0x3f1/0x560\nWrite of size 8 at addr ffff888004a67328 by task ip/384\n[...]\nCall Trace:\n \u003cTASK\u003e\n dump_stack\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38249",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix out-of-bounds read in snd_usb_get_audioformat_uac3()\n\nIn snd_usb_get_audioformat_uac3(), the length value returned from\nsnd_usb_ctl_msg() is used directly for memory allocation without\nvalidation. This length is controlled by the USB device.\n\nThe allocated buffer is cast to a uac3_cluster_header_descriptor\nand its fields are accessed without verifying that the buffer\nis large enough. If the device returns a smaller than expected\nlength, this leads to an out-of-bounds read.\n\nAdd a length check to ensure the buffer is large enough for\nuac3_cluster_header_descriptor.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38250",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_core: Fix use-after-free in vhci_flush()\n\nsyzbot reported use-after-free in vhci_flush() without repro. [0]\n\nFrom the splat, a thread close()d a vhci file descriptor while\nits device was being used by iotcl() on another thread.\n\nOnce the last fd refcnt is released, vhci_release() calls\nhci_unregister_dev(), hci_free_dev(), and kfree() for struct\nvhci_data, which is set to hci_dev-\u003edev-\u003edriver_data.\n\nThe problem is that there is no synchronisation after unlinking\nhdev from hci_dev_list in hci_unregister_dev().  There might be\nanother thread still accessing the hdev which was fetched before\nthe unlink operation.\n\nWe can use SRCU for such synchronisation.\n\nLet's run hci_dev_reset() under SRCU and wait for its completion\nin hci_unregister_dev().\n\nAnother option would be to restore hci_dev-\u003edestruct(), which was\nremoved in commit 587ae086f6e4 (\"Bluetooth: Remove unused\nhci-destruct cb\").  However, this would not be a good solution, as\nwe should not run hci_unregister_dev() while there are in-flight\nioctl() requests, which could lead to another data-race KCSAN splat.\n\nNote that other drivers seem to have the same problem, for exmaple,\nvirtbt_remove().\n\n[0]:\nBUG: KASAN: slab-use-after-free in skb_queue_empty_lockless include/linux/skbuff.h:1891 [inline]\nBUG: KASAN: slab-use-after-free in skb_queue_purge_reason+0x99/0x360 net/core/skbuff.c:3937\nRead of size 8 at addr ffff88807cb8d858 by task syz.1.219/6718\n\nCPU: 1 UID: 0 PID: 6718 Comm: syz.1.219 Not tainted 6.16.0-rc1-syzkaller-00196-g08207f42d3ff #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x189/0x250 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xd2/0x2b0 mm/kasan/report.c:521\n kasan_report+0x118/0x150 mm/kasan/report.c:634\n skb_queue_empty_lockless include/linux/skbuff.h:1891 [inline]\n skb_queue_purge_reason+0x99/0x360 net/core/skbuff.c:3937\n skb_queue_purge include/linux/skbuff.h:3368 [inline]\n vhci_flush+0x44/0x50 drivers/bluetooth/hci_vhci.c:69\n hci_dev_do_reset net/bluetooth/hci_core.c:552 [inline]\n hci_dev_reset+0x420/0x5c0 net/bluetooth/hci_core.c:592\n sock_do_ioctl+0xd9/0x300 net/socket.c:1190\n sock_ioctl+0x576/0x790 net/socket.c:1311\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:907 [inline]\n __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fcf5b98e929\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fcf5c7b9038 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007fcf5bbb6160 RCX: 00007fcf5b98e929\nRDX: 0000000000000000 RSI: 00000000400448cb RDI: 0000000000000009\nRBP: 00007fcf5ba10b39 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007fcf5bbb6160 R15: 00007ffd6353d528\n \u003c/TASK\u003e\n\nAllocated by task 6535:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3e/0x80 mm/kasan/common.c:68\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0x93/0xb0 mm/kasan/common.c:394\n kasan_kmalloc include/linux/kasan.h:260 [inline]\n __kmalloc_cache_noprof+0x230/0x3d0 mm/slub.c:4359\n kmalloc_noprof include/linux/slab.h:905 [inline]\n kzalloc_noprof include/linux/slab.h:1039 [inline]\n vhci_open+0x57/0x360 drivers/bluetooth/hci_vhci.c:635\n misc_open+0x2bc/0x330 drivers/char/misc.c:161\n chrdev_open+0x4c9/0x5e0 fs/char_dev.c:414\n do_dentry_open+0xdf0/0x1970 fs/open.c:964\n vfs_open+0x3b/0x340 fs/open.c:1094\n do_open fs/namei.c:3887 [inline]\n path_openat+0x2ee5/0x3830 fs/name\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38257",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pkey: Prevent overflow in size calculation for memdup_user()\n\nNumber of apqn target list entries contained in 'nr_apqns' variable is\ndetermined by userspace via an ioctl call so the result of the product in\ncalculation of size passed to memdup_user() may overflow.\n\nIn this case the actual size of the allocated area and the value\ndescribing it won't be in sync leading to various types of unpredictable\nbehaviour later.\n\nUse a proper memdup_array_user() helper which returns an error if an\noverflow is detected. Note that it is different from when nr_apqns is\ninitially zero - that case is considered valid and should be handled in\nsubsequent pkey_handler implementations.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38259",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: wcd9335: Fix missing free of regulator supplies\n\nDriver gets and enables all regulator supplies in probe path\n(wcd9335_parse_dt() and wcd9335_power_on_reset()), but does not cleanup\nin final error paths and in unbind (missing remove() callback).  This\nleads to leaked memory and unbalanced regulator enable count during\nprobe errors or unbind.\n\nFix this by converting entire code into devm_regulator_bulk_get_enable()\nwhich also greatly simplifies the code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38264",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: sanitize request list handling\n\nValidate the request in nvme_tcp_handle_r2t() to ensure it's not part of\nany list, otherwise a malicious R2T PDU might inject a loop in request\nlist processing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38272",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: b53: do not enable EEE on bcm63xx\n\nBCM63xx internal switches do not support EEE, but provide multiple RGMII\nports where external PHYs may be connected. If one of these PHYs are EEE\ncapable, we may try to enable EEE for the MACs, which then hangs the\nsystem on access of the (non-existent) EEE registers.\n\nFix this by checking if the switch actually supports EEE before\nattempting to configure it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38275",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: qcom-qmp-usb: Fix an NULL vs IS_ERR() bug\n\nThe qmp_usb_iomap() helper function currently returns the raw result of\ndevm_ioremap() for non-exclusive mappings. Since devm_ioremap() may return\na NULL pointer and the caller only checks error pointers with IS_ERR(),\nNULL could bypass the check and lead to an invalid dereference.\n\nFix the issue by checking if devm_ioremap() returns NULL. When it does,\nqmp_usb_iomap() now returns an error pointer via IOMEM_ERR_PTR(-ENOMEM),\nensuring safe and consistent error handling.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38277",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: nand: ecc-mxic: Fix use of uninitialized variable ret\n\nIf ctx-\u003esteps is zero, the loop processing ECC steps is skipped,\nand the variable ret remains uninitialized. It is later checked\nand returned, which leads to undefined behavior and may cause\nunpredictable results in user space or kernel crashes.\n\nThis scenario can be triggered in edge cases such as misconfigured\ngeometry, ECC engine misuse, or if ctx-\u003esteps is not validated\nafter initialization.\n\nInitialize ret to zero before the loop to ensure correct and safe\nbehavior regardless of the ctx-\u003esteps value.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38279",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Do not include stack ptr register in precision backtracking bookkeeping\n\nYi Lai reported an issue ([1]) where the following warning appears\nin kernel dmesg:\n  [   60.643604] verifier backtracking bug\n  [   60.643635] WARNING: CPU: 10 PID: 2315 at kernel/bpf/verifier.c:4302 __mark_chain_precision+0x3a6c/0x3e10\n  [   60.648428] Modules linked in: bpf_testmod(OE)\n  [   60.650471] CPU: 10 UID: 0 PID: 2315 Comm: test_progs Tainted: G           OE       6.15.0-rc4-gef11287f8289-dirty #327 PREEMPT(full)\n  [   60.654385] Tainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\n  [   60.656682] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\n  [   60.660475] RIP: 0010:__mark_chain_precision+0x3a6c/0x3e10\n  [   60.662814] Code: 5a 30 84 89 ea e8 c4 d9 01 00 80 3d 3e 7d d8 04 00 0f 85 60 fa ff ff c6 05 31 7d d8 04\n                       01 48 c7 c7 00 58 30 84 e8 c4 06 a5 ff \u003c0f\u003e 0b e9 46 fa ff ff 48 ...\n  [   60.668720] RSP: 0018:ffff888116cc7298 EFLAGS: 00010246\n  [   60.671075] RAX: 54d70e82dfd31900 RBX: ffff888115b65e20 RCX: 0000000000000000\n  [   60.673659] RDX: 0000000000000001 RSI: 0000000000000004 RDI: 00000000ffffffff\n  [   60.676241] RBP: 0000000000000400 R08: ffff8881f6f23bd3 R09: 1ffff1103ede477a\n  [   60.678787] R10: dffffc0000000000 R11: ffffed103ede477b R12: ffff888115b60ae8\n  [   60.681420] R13: 1ffff11022b6cbc4 R14: 00000000fffffff2 R15: 0000000000000001\n  [   60.684030] FS:  00007fc2aedd80c0(0000) GS:ffff88826fa8a000(0000) knlGS:0000000000000000\n  [   60.686837] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [   60.689027] CR2: 000056325369e000 CR3: 000000011088b002 CR4: 0000000000370ef0\n  [   60.691623] Call Trace:\n  [   60.692821]  \u003cTASK\u003e\n  [   60.693960]  ? __pfx_verbose+0x10/0x10\n  [   60.695656]  ? __pfx_disasm_kfunc_name+0x10/0x10\n  [   60.697495]  check_cond_jmp_op+0x16f7/0x39b0\n  [   60.699237]  do_check+0x58fa/0xab10\n  ...\n\nFurther analysis shows the warning is at line 4302 as below:\n\n  4294                 /* static subprog call instruction, which\n  4295                  * means that we are exiting current subprog,\n  4296                  * so only r1-r5 could be still requested as\n  4297                  * precise, r0 and r6-r10 or any stack slot in\n  4298                  * the current frame should be zero by now\n  4299                  */\n  4300                 if (bt_reg_mask(bt) \u0026 ~BPF_REGMASK_ARGS) {\n  4301                         verbose(env, \"BUG regs %x\\n\", bt_reg_mask(bt));\n  4302                         WARN_ONCE(1, \"verifier backtracking bug\");\n  4303                         return -EFAULT;\n  4304                 }\n\nWith the below test (also in the next patch):\n  __used __naked static void __bpf_jmp_r10(void)\n  {\n\tasm volatile (\n\t\"r2 = 2314885393468386424 ll;\"\n\t\"goto +0;\"\n\t\"if r2 \u003c= r10 goto +3;\"\n\t\"if r1 \u003e= -1835016 goto +0;\"\n\t\"if r2 \u003c= 8 goto +0;\"\n\t\"if r3 \u003c= 0 goto +0;\"\n\t\"exit;\"\n\t::: __clobber_all);\n  }\n\n  SEC(\"?raw_tp\")\n  __naked void bpf_jmp_r10(void)\n  {\n\tasm volatile (\n\t\"r3 = 0 ll;\"\n\t\"call __bpf_jmp_r10;\"\n\t\"r0 = 0;\"\n\t\"exit;\"\n\t::: __clobber_all);\n  }\n\nThe following is the verifier failure log:\n  0: (18) r3 = 0x0                      ; R3_w=0\n  2: (85) call pc+2\n  caller:\n   R10=fp0\n  callee:\n   frame1: R1=ctx() R3_w=0 R10=fp0\n  5: frame1: R1=ctx() R3_w=0 R10=fp0\n  ; asm volatile (\"                                 \\ @ verifier_precision.c:184\n  5: (18) r2 = 0x20202000256c6c78       ; frame1: R2_w=0x20202000256c6c78\n  7: (05) goto pc+0\n  8: (bd) if r2 \u003c= r10 goto pc+3        ; frame1: R2_w=0x20202000256c6c78 R10=fp0\n  9: (35) if r1 \u003e= 0xffe3fff8 goto pc+0         ; frame1: R1=ctx()\n  10: (b5) if r2 \u003c= 0x8 goto pc+0\n  mark_precise: frame1: last_idx 10 first_idx 0 subseq_idx -1\n  mark_precise: frame1: regs=r2 stack= before 9: (35) if r1 \u003e= 0xffe3fff8 goto pc+0\n  mark_precise: frame1: regs=r2 stack= before 8: (bd) if r2 \u003c= r10 goto pc+3\n  mark_preci\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38283",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhisi_acc_vfio_pci: bugfix live migration function without VF device driver\n\nIf the VF device driver is not loaded in the Guest OS and we attempt to\nperform device data migration, the address of the migrated data will\nbe NULL.\nThe live migration recovery operation on the destination side will\naccess a null address value, which will cause access errors.\n\nTherefore, live migration of VMs without added VF device drivers\ndoes not require device data migration.\nIn addition, when the queue address data obtained by the destination\nis empty, device queue recovery processing will not be performed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38286",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: at91: Fix possible out-of-boundary access\n\nat91_gpio_probe() doesn't check that given OF alias is not available or\nsomething went wrong when trying to get it. This might have consequences\nwhen accessing gpio_chips array with that value as an index. Note, that\nBUG() can be compiled out and hence won't actually perform the required\nchecks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38289",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Avoid potential ndlp use-after-free in dev_loss_tmo_callbk\n\nSmatch detected a potential use-after-free of an ndlp oject in\ndev_loss_tmo_callbk during driver unload or fatal error handling.\n\nFix by reordering code to avoid potential use-after-free if initial\nnodelist reference has been previously removed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38290",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix node corruption in ar-\u003earvifs list\n\nIn current WLAN recovery code flow, ath12k_core_halt() only reinitializes\nthe \"arvifs\" list head. This will cause the list node immediately following\nthe list head to become an invalid list node. Because the prev of that node\nstill points to the list head \"arvifs\", but the next of the list head\n\"arvifs\" no longer points to that list node.\n\nWhen a WLAN recovery occurs during the execution of a vif removal, and it\nhappens before the spin_lock_bh(\u0026ar-\u003edata_lock) in\nath12k_mac_vdev_delete(), list_del() will detect the previously mentioned\nsituation, thereby triggering a kernel panic.\n\nThe fix is to remove and reinitialize all vif list nodes from the list head\n\"arvifs\" during WLAN halt. The reinitialization is to make the list nodes\nvalid, ensuring that the list_del() in ath12k_mac_vdev_delete() can execute\nnormally.\n\nCall trace:\n__list_del_entry_valid_or_report+0xd4/0x100 (P)\nath12k_mac_remove_link_interface.isra.0+0xf8/0x2e4 [ath12k]\nath12k_scan_vdev_clean_work+0x40/0x164 [ath12k]\ncfg80211_wiphy_work+0xfc/0x100\nprocess_one_work+0x164/0x2d0\nworker_thread+0x254/0x380\nkthread+0xfc/0x100\nret_from_fork+0x10/0x20\n\nThe change is mostly copied from the ath11k patch:\nhttps://lore.kernel.org/all/20250320053145.3445187-1-quic_stonez@quicinc.com/\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.4.1-00199-QCAHKSWPL_SILICONZ-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38292",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix invalid access to memory\n\nIn ath12k_dp_rx_msdu_coalesce(), rxcb is fetched from skb and boolean\nis_continuation is part of rxcb.\nCurrently, after freeing the skb, the rxcb-\u003eis_continuation accessed\nagain which is wrong since the memory is already freed.\nThis might lead use-after-free error.\n\nHence, fix by locally defining bool is_continuation from rxcb,\nso that after freeing skb, is_continuation can be used.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38293",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix node corruption in ar-\u003earvifs list\n\nIn current WLAN recovery code flow, ath11k_core_halt() only\nreinitializes the \"arvifs\" list head. This will cause the\nlist node immediately following the list head to become an\ninvalid list node. Because the prev of that node still points\nto the list head \"arvifs\", but the next of the list head \"arvifs\"\nno longer points to that list node.\n\nWhen a WLAN recovery occurs during the execution of a vif\nremoval, and it happens before the spin_lock_bh(\u0026ar-\u003edata_lock)\nin ath11k_mac_op_remove_interface(), list_del() will detect the\npreviously mentioned situation, thereby triggering a kernel panic.\n\nThe fix is to remove and reinitialize all vif list nodes from the\nlist head \"arvifs\" during WLAN halt. The reinitialization is to make\nthe list nodes valid, ensuring that the list_del() in\nath11k_mac_op_remove_interface() can execute normally.\n\nCall trace:\n__list_del_entry_valid_or_report+0xb8/0xd0\nath11k_mac_op_remove_interface+0xb0/0x27c [ath11k]\ndrv_remove_interface+0x48/0x194 [mac80211]\nieee80211_do_stop+0x6e0/0x844 [mac80211]\nieee80211_stop+0x44/0x17c [mac80211]\n__dev_close_many+0xac/0x150\n__dev_change_flags+0x194/0x234\ndev_change_flags+0x24/0x6c\ndevinet_ioctl+0x3a0/0x670\ninet_ioctl+0x200/0x248\nsock_do_ioctl+0x60/0x118\nsock_ioctl+0x274/0x35c\n__arm64_sys_ioctl+0xac/0xf0\ninvoke_syscall+0x48/0x114\n...\n\nTested-on: QCA6698AQ hw2.1 PCI WLAN.HSP.1.1-04591-QCAHSPSWPL_V1_V2_SILICONZ_IOE-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38300",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: sun8i-ce-cipher - fix error handling in sun8i_ce_cipher_prepare()\n\nFix two DMA cleanup issues on the error path in sun8i_ce_cipher_prepare():\n\n1] If dma_map_sg() fails for areq-\u003edst, the device driver would try to free\n   DMA memory it has not allocated in the first place. To fix this, on the\n   \"theend_sgs\" error path, call dma unmap only if the corresponding dma\n   map was successful.\n\n2] If the dma_map_single() call for the IV fails, the device driver would\n   try to free an invalid DMA memory address on the \"theend_iv\" path:\n   ------------[ cut here ]------------\n   DMA-API: sun8i-ce 1904000.crypto: device driver tries to free an invalid DMA memory address\n   WARNING: CPU: 2 PID: 69 at kernel/dma/debug.c:968 check_unmap+0x123c/0x1b90\n   Modules linked in: skcipher_example(O+)\n   CPU: 2 UID: 0 PID: 69 Comm: 1904000.crypto- Tainted: G           O        6.15.0-rc3+ #24 PREEMPT\n   Tainted: [O]=OOT_MODULE\n   Hardware name: OrangePi Zero2 (DT)\n   pc : check_unmap+0x123c/0x1b90\n   lr : check_unmap+0x123c/0x1b90\n   ...\n   Call trace:\n    check_unmap+0x123c/0x1b90 (P)\n    debug_dma_unmap_page+0xac/0xc0\n    dma_unmap_page_attrs+0x1f4/0x5fc\n    sun8i_ce_cipher_do_one+0x1bd4/0x1f40\n    crypto_pump_work+0x334/0x6e0\n    kthread_worker_fn+0x21c/0x438\n    kthread+0x374/0x664\n    ret_from_fork+0x10/0x20\n   ---[ end trace 0000000000000000 ]---\n\nTo fix this, check for !dma_mapping_error() before calling\ndma_unmap_single() on the \"theend_iv\" path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38303",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: eir: Fix possible crashes on eir_create_adv_data\n\neir_create_adv_data may attempt to add EIR_FLAGS and EIR_TX_POWER\nwithout checking if that would fit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38304",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix NULL pointer deference on eir_get_service_data\n\nThe len parameter is considered optional so it can be NULL so it cannot\nbe used for skipping to next entry of EIR_SERVICE_DATA.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38305",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nptp: remove ptp-\u003en_vclocks check logic in ptp_vclock_in_use()\n\nThere is no disagreement that we should check both ptp-\u003eis_virtual_clock\nand ptp-\u003en_vclocks to check if the ptp virtual clock is in use.\n\nHowever, when we acquire ptp-\u003en_vclocks_mux to read ptp-\u003en_vclocks in\nptp_vclock_in_use(), we observe a recursive lock in the call trace\nstarting from n_vclocks_store().\n\n============================================\nWARNING: possible recursive locking detected\n6.15.0-rc6 #1 Not tainted\n--------------------------------------------\nsyz.0.1540/13807 is trying to acquire lock:\nffff888035a24868 (\u0026ptp-\u003en_vclocks_mux){+.+.}-{4:4}, at:\n ptp_vclock_in_use drivers/ptp/ptp_private.h:103 [inline]\nffff888035a24868 (\u0026ptp-\u003en_vclocks_mux){+.+.}-{4:4}, at:\n ptp_clock_unregister+0x21/0x250 drivers/ptp/ptp_clock.c:415\n\nbut task is already holding lock:\nffff888030704868 (\u0026ptp-\u003en_vclocks_mux){+.+.}-{4:4}, at:\n n_vclocks_store+0xf1/0x6d0 drivers/ptp/ptp_sysfs.c:215\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n\n       CPU0\n       ----\n  lock(\u0026ptp-\u003en_vclocks_mux);\n  lock(\u0026ptp-\u003en_vclocks_mux);\n\n *** DEADLOCK ***\n....\n============================================\n\nThe best way to solve this is to remove the logic that checks\nptp-\u003en_vclocks in ptp_vclock_in_use().\n\nThe reason why this is appropriate is that any path that uses\nptp-\u003en_vclocks must unconditionally check if ptp-\u003en_vclocks is greater\nthan 0 before unregistering vclocks, and all functions are already\nwritten this way. And in the function that uses ptp-\u003en_vclocks, we\nalready get ptp-\u003en_vclocks_mux before unregistering vclocks.\n\nTherefore, we need to remove the redundant check for ptp-\u003en_vclocks in\nptp_vclock_in_use() to prevent recursive locking.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38307",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: avs: Verify content returned by parse_int_array()\n\nThe first element of the returned array stores its length. If it is 0,\nany manipulation beyond the element at index 0 ends with null-ptr-deref.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38310",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nseg6: Fix validation of nexthop addresses\n\nThe kernel currently validates that the length of the provided nexthop\naddress does not exceed the specified length. This can lead to the\nkernel reading uninitialized memory if user space provided a shorter\nlength than the specified one.\n\nFix by validating that the provided length exactly matches the specified\none.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38312",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: core: fbcvt: avoid division by 0 in fb_cvt_hperiod()\n\nIn fb_find_mode_cvt(), iff mode-\u003erefresh somehow happens to be 0x80000000,\ncvt.f_refresh will become 0 when multiplying it by 2 due to overflow. It's\nthen passed to fb_cvt_hperiod(), where it's used as a divider -- division\nby 0 will result in kernel oops. Add a sanity check for cvt.f_refresh to\navoid such overflow...\n\nFound by Linux Verification Center (linuxtesting.org) with the Svace static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38313",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbus: fsl-mc: fix double-free on mc_dev\n\nThe blamed commit tried to simplify how the deallocations are done but,\nin the process, introduced a double-free on the mc_dev variable.\n\nIn case the MC device is a DPRC, a new mc_bus is allocated and the\nmc_dev variable is just a reference to one of its fields. In this\ncircumstance, on the error path only the mc_bus should be freed.\n\nThis commit introduces back the following checkpatch warning which is a\nfalse-positive.\n\nWARNING: kfree(NULL) is safe and this check is probably not required\n+       if (mc_bus)\n+               kfree(mc_bus);",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38319",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pp: Fix potential NULL pointer dereference in atomctrl_initialize_mc_reg_table\n\nThe function atomctrl_initialize_mc_reg_table() and\natomctrl_initialize_mc_reg_table_v2_2() does not check the return\nvalue of smu_atom_get_data_table(). If smu_atom_get_data_table()\nfails to retrieve vram_info, it returns NULL which is later\ndereferenced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38323",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atm: add lec_mutex\n\nsyzbot found its way in net/atm/lec.c, and found an error path\nin lecd_attach() could leave a dangling pointer in dev_lec[].\n\nAdd a mutex to protect dev_lecp[] uses from lecd_attach(),\nlec_vcc_attach() and lec_mcast_attach().\n\nFollowing patch will use this mutex for /proc/net/atm/lec.\n\nBUG: KASAN: slab-use-after-free in lecd_attach net/atm/lec.c:751 [inline]\nBUG: KASAN: slab-use-after-free in lane_ioctl+0x2224/0x23e0 net/atm/lec.c:1008\nRead of size 8 at addr ffff88807c7b8e68 by task syz.1.17/6142\n\nCPU: 1 UID: 0 PID: 6142 Comm: syz.1.17 Not tainted 6.16.0-rc1-syzkaller-00239-g08215f5486ec #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:94 [inline]\n  dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n  print_address_description mm/kasan/report.c:408 [inline]\n  print_report+0xcd/0x680 mm/kasan/report.c:521\n  kasan_report+0xe0/0x110 mm/kasan/report.c:634\n  lecd_attach net/atm/lec.c:751 [inline]\n  lane_ioctl+0x2224/0x23e0 net/atm/lec.c:1008\n  do_vcc_ioctl+0x12c/0x930 net/atm/ioctl.c:159\n  sock_do_ioctl+0x118/0x280 net/socket.c:1190\n  sock_ioctl+0x227/0x6b0 net/socket.c:1311\n  vfs_ioctl fs/ioctl.c:51 [inline]\n  __do_sys_ioctl fs/ioctl.c:907 [inline]\n  __se_sys_ioctl fs/ioctl.c:893 [inline]\n  __x64_sys_ioctl+0x18e/0x210 fs/ioctl.c:893\n  do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n  do_syscall_64+0xcd/0x4c0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n \u003c/TASK\u003e\n\nAllocated by task 6132:\n  kasan_save_stack+0x33/0x60 mm/kasan/common.c:47\n  kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n  poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n  __kasan_kmalloc+0xaa/0xb0 mm/kasan/common.c:394\n  kasan_kmalloc include/linux/kasan.h:260 [inline]\n  __do_kmalloc_node mm/slub.c:4328 [inline]\n  __kvmalloc_node_noprof+0x27b/0x620 mm/slub.c:5015\n  alloc_netdev_mqs+0xd2/0x1570 net/core/dev.c:11711\n  lecd_attach net/atm/lec.c:737 [inline]\n  lane_ioctl+0x17db/0x23e0 net/atm/lec.c:1008\n  do_vcc_ioctl+0x12c/0x930 net/atm/ioctl.c:159\n  sock_do_ioctl+0x118/0x280 net/socket.c:1190\n  sock_ioctl+0x227/0x6b0 net/socket.c:1311\n  vfs_ioctl fs/ioctl.c:51 [inline]\n  __do_sys_ioctl fs/ioctl.c:907 [inline]\n  __se_sys_ioctl fs/ioctl.c:893 [inline]\n  __x64_sys_ioctl+0x18e/0x210 fs/ioctl.c:893\n  do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n  do_syscall_64+0xcd/0x4c0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 6132:\n  kasan_save_stack+0x33/0x60 mm/kasan/common.c:47\n  kasan_save_track+0x14/0x30 mm/kasan/common.c:68\n  kasan_save_free_info+0x3b/0x60 mm/kasan/generic.c:576\n  poison_slab_object mm/kasan/common.c:247 [inline]\n  __kasan_slab_free+0x51/0x70 mm/kasan/common.c:264\n  kasan_slab_free include/linux/kasan.h:233 [inline]\n  slab_free_hook mm/slub.c:2381 [inline]\n  slab_free mm/slub.c:4643 [inline]\n  kfree+0x2b4/0x4d0 mm/slub.c:4842\n  free_netdev+0x6c5/0x910 net/core/dev.c:11892\n  lecd_attach net/atm/lec.c:744 [inline]\n  lane_ioctl+0x1ce8/0x23e0 net/atm/lec.c:1008\n  do_vcc_ioctl+0x12c/0x930 net/atm/ioctl.c:159\n  sock_do_ioctl+0x118/0x280 net/socket.c:1190\n  sock_ioctl+0x227/0x6b0 net/socket.c:1311\n  vfs_ioctl fs/ioctl.c:51 [inline]\n  __do_sys_ioctl fs/ioctl.c:907 [inline]\n  __se_sys_ioctl fs/ioctl.c:893 [inline]\n  __x64_sys_ioctl+0x18e/0x210 fs/ioctl.c:893",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38326",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\naoe: clean device rq_list in aoedev_downdev()\n\nAn aoe device's rq_list contains accepted block requests that are\nwaiting to be transmitted to the aoe target. This queue was added as\npart of the conversion to blk_mq. However, the queue was not cleaned out\nwhen an aoe device is downed which caused blk_mq_freeze_queue() to sleep\nindefinitely waiting for those requests to complete, causing a hang. This\nfix cleans out the queue before calling blk_mq_freeze_queue().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38328",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: check jffs2_prealloc_raw_node_refs() result in few other places\n\nFuzzing hit another invalid pointer dereference due to the lack of\nchecking whether jffs2_prealloc_raw_node_refs() completed successfully.\nSubsequent logic implies that the node refs have been allocated.\n\nHandle that. The code is ready for propagating the error upwards.\n\nKASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\nCPU: 1 PID: 5835 Comm: syz-executor145 Not tainted 5.10.234-syzkaller #0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014\nRIP: 0010:jffs2_link_node_ref+0xac/0x690 fs/jffs2/nodelist.c:600\nCall Trace:\n jffs2_mark_erased_block fs/jffs2/erase.c:460 [inline]\n jffs2_erase_pending_blocks+0x688/0x1860 fs/jffs2/erase.c:118\n jffs2_garbage_collect_pass+0x638/0x1a00 fs/jffs2/gc.c:253\n jffs2_reserve_space+0x3f4/0xad0 fs/jffs2/nodemgmt.c:167\n jffs2_write_inode_range+0x246/0xb50 fs/jffs2/write.c:362\n jffs2_write_end+0x712/0x1110 fs/jffs2/file.c:302\n generic_perform_write+0x2c2/0x500 mm/filemap.c:3347\n __generic_file_write_iter+0x252/0x610 mm/filemap.c:3465\n generic_file_write_iter+0xdb/0x230 mm/filemap.c:3497\n call_write_iter include/linux/fs.h:2039 [inline]\n do_iter_readv_writev+0x46d/0x750 fs/read_write.c:740\n do_iter_write+0x18c/0x710 fs/read_write.c:866\n vfs_writev+0x1db/0x6a0 fs/read_write.c:939\n do_pwritev fs/read_write.c:1036 [inline]\n __do_sys_pwritev fs/read_write.c:1083 [inline]\n __se_sys_pwritev fs/read_write.c:1078 [inline]\n __x64_sys_pwritev+0x235/0x310 fs/read_write.c:1078\n do_syscall_64+0x30/0x40 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x67/0xd1\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38332",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Use memcpy() for BIOS version\n\nThe strlcat() with FORTIFY support is triggering a panic because it\nthinks the target buffer will overflow although the correct target\nbuffer size is passed in.\n\nAnyway, instead of memset() with 0 followed by a strlcat(), just use\nmemcpy() and ensure that the resulting buffer is NULL terminated.\n\nBIOSVersion is only used for the lpfc_printf_log() which expects a\nproperly terminated string.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38334",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/sgx: Prevent attempts to reclaim poisoned pages\n\nTL;DR: SGX page reclaim touches the page to copy its contents to\nsecondary storage. SGX instructions do not gracefully handle machine\nchecks. Despite this, the existing SGX code will try to reclaim pages\nthat it _knows_ are poisoned. Avoid even trying to reclaim poisoned pages.\n\nThe longer story:\n\nPages used by an enclave only get epc_page-\u003epoison set in\narch_memory_failure() but they currently stay on sgx_active_page_list until\nsgx_encl_release(), with the SGX_EPC_PAGE_RECLAIMER_TRACKED flag untouched.\n\nepc_page-\u003epoison is not checked in the reclaimer logic meaning that, if other\nconditions are met, an attempt will be made to reclaim an EPC page that was\npoisoned.  This is bad because 1. we don't want that page to end up added\nto another enclave and 2. it is likely to cause one core to shut down\nand the kernel to panic.\n\nSpecifically, reclaiming uses microcode operations including \"EWB\" which\naccesses the EPC page contents to encrypt and write them out to non-SGX\nmemory.  Those operations cannot handle MCEs in their accesses other than\nby putting the executing core into a special shutdown state (affecting\nboth threads with HT.)  The kernel will subsequently panic on the\nremaining cores seeing the core didn't enter MCE handler(s) in time.\n\nCall sgx_unmark_page_reclaimable() to remove the affected EPC page from\nsgx_active_page_list on memory error to stop it being considered for\nreclaiming.\n\nTesting epc_page-\u003epoison in sgx_reclaim_pages() would also work but I assume\nit's better to add code in the less likely paths.\n\nThe affected EPC page is not added to \u0026node-\u003esgx_poison_page_list until\nlater in sgx_encl_release()-\u003esgx_free_epc_page() when it is EREMOVEd.\nMembership on other lists doesn't change to avoid changing any of the\nlists' semantics except for sgx_active_page_list.  There's a \"TBD\" comment\nin arch_memory_failure() about pre-emptive actions, the goal here is not\nto address everything that it may imply.\n\nThis also doesn't completely close the time window when a memory error\nnotification will be fatal (for a not previously poisoned EPC page) --\nthe MCE can happen after sgx_reclaim_pages() has selected its candidates\nor even *inside* a microcode operation (actually easy to trigger due to\nthe amount of time spent in them.)\n\nThe spinlock in sgx_unmark_page_reclaimable() is safe because\nmemory_failure() runs in process context and no spinlocks are held,\nexplicitly noted in a mm/memory-failure.c comment.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38335",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: gpio-keys - fix a sleep while atomic with PREEMPT_RT\n\nWhen enabling PREEMPT_RT, the gpio_keys_irq_timer() callback runs in\nhard irq context, but the input_event() takes a spin_lock, which isn't\nallowed there as it is converted to a rt_spin_lock().\n\n[ 4054.289999] BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:48\n[ 4054.290028] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper/0\n...\n[ 4054.290195]  __might_resched+0x13c/0x1f4\n[ 4054.290209]  rt_spin_lock+0x54/0x11c\n[ 4054.290219]  input_event+0x48/0x80\n[ 4054.290230]  gpio_keys_irq_timer+0x4c/0x78\n[ 4054.290243]  __hrtimer_run_queues+0x1a4/0x438\n[ 4054.290257]  hrtimer_interrupt+0xe4/0x240\n[ 4054.290269]  arch_timer_handler_phys+0x2c/0x44\n[ 4054.290283]  handle_percpu_devid_irq+0x8c/0x14c\n[ 4054.290297]  handle_irq_desc+0x40/0x58\n[ 4054.290307]  generic_handle_domain_irq+0x1c/0x28\n[ 4054.290316]  gic_handle_irq+0x44/0xcc\n\nConsidering the gpio_keys_irq_isr() can run in any context, e.g. it can\nbe threaded, it seems there's no point in requesting the timer isr to\nrun in hard irq context.\n\nRelax the hrtimer not to use the hard context.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38336",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: pata_via: Force PIO for ATAPI devices on VT6415/VT6330\n\nThe controller has a hardware bug that can hard hang the system when\ndoing ATAPI DMAs without any trace of what happened. Depending on the\ndevice attached, it can also prevent the system from booting.\n\nIn this case, the system hangs when reading the ATIP from optical media\nwith cdrecord -vvv -atip on an _NEC DVD_RW ND-4571A 1-01 and an\nOptiarc DVD RW AD-7200A 1.06 attached to an ASRock 990FX Extreme 4,\nrunning at UDMA/33.\n\nThe issue can be reproduced by running the same command with a cygwin\nbuild of cdrecord on WinXP, although it requires more attempts to cause\nit. The hang in that case is also resolved by forcing PIO. It doesn't\nappear that VIA has produced any drivers for that OS, thus no known\nworkaround exists.\n\nHDDs attached to the controller do not suffer from any DMA issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38337",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njbd2: fix data-race and null-ptr-deref in jbd2_journal_dirty_metadata()\n\nSince handle-\u003eh_transaction may be a NULL pointer, so we should change it\nto call is_handle_aborted(handle) first before dereferencing it.\n\nAnd the following data-race was reported in my fuzzer:\n\n==================================================================\nBUG: KCSAN: data-race in jbd2_journal_dirty_metadata / jbd2_journal_dirty_metadata\n\nwrite to 0xffff888011024104 of 4 bytes by task 10881 on cpu 1:\n jbd2_journal_dirty_metadata+0x2a5/0x770 fs/jbd2/transaction.c:1556\n __ext4_handle_dirty_metadata+0xe7/0x4b0 fs/ext4/ext4_jbd2.c:358\n ext4_do_update_inode fs/ext4/inode.c:5220 [inline]\n ext4_mark_iloc_dirty+0x32c/0xd50 fs/ext4/inode.c:5869\n __ext4_mark_inode_dirty+0xe1/0x450 fs/ext4/inode.c:6074\n ext4_dirty_inode+0x98/0xc0 fs/ext4/inode.c:6103\n....\n\nread to 0xffff888011024104 of 4 bytes by task 10880 on cpu 0:\n jbd2_journal_dirty_metadata+0xf2/0x770 fs/jbd2/transaction.c:1512\n __ext4_handle_dirty_metadata+0xe7/0x4b0 fs/ext4/ext4_jbd2.c:358\n ext4_do_update_inode fs/ext4/inode.c:5220 [inline]\n ext4_mark_iloc_dirty+0x32c/0xd50 fs/ext4/inode.c:5869\n __ext4_mark_inode_dirty+0xe1/0x450 fs/ext4/inode.c:6074\n ext4_dirty_inode+0x98/0xc0 fs/ext4/inode.c:6103\n....\n\nvalue changed: 0x00000000 -\u003e 0x00000001\n==================================================================\n\nThis issue is caused by missing data-race annotation for jh-\u003eb_modified.\nTherefore, the missing annotation needs to be added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38338",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/nfs/read: fix double-unlock bug in nfs_return_empty_folio()\n\nSometimes, when a file was read while it was being truncated by\nanother NFS client, the kernel could deadlock because folio_unlock()\nwas called twice, and the second call would XOR back the `PG_locked`\nflag.\n\nMost of the time (depending on the timing of the truncation), nobody\nnotices the problem because folio_unlock() gets called three times,\nwhich flips `PG_locked` back off:\n\n 1. vfs_read, nfs_read_folio, ... nfs_read_add_folio,\n    nfs_return_empty_folio\n 2. vfs_read, nfs_read_folio, ... netfs_read_collection,\n    netfs_unlock_abandoned_read_pages\n 3. vfs_read, ... nfs_do_read_folio, nfs_read_add_folio,\n    nfs_return_empty_folio\n\nThe problem is that nfs_read_add_folio() is not supposed to unlock the\nfolio if fscache is enabled, and a nfs_netfs_folio_unlock() check is\nmissing in nfs_return_empty_folio().\n\nRarely this leads to a warning in netfs_read_collection():\n\n ------------[ cut here ]------------\n R=0000031c: folio 10 is not locked\n WARNING: CPU: 0 PID: 29 at fs/netfs/read_collect.c:133 netfs_read_collection+0x7c0/0xf00\n [...]\n Workqueue: events_unbound netfs_read_collection_worker\n RIP: 0010:netfs_read_collection+0x7c0/0xf00\n [...]\n Call Trace:\n  \u003cTASK\u003e\n  netfs_read_collection_worker+0x67/0x80\n  process_one_work+0x12e/0x2c0\n  worker_thread+0x295/0x3a0\n\nMost of the time, however, processes just get stuck forever in\nfolio_wait_bit_common(), waiting for `PG_locked` to disappear, which\nnever happens because nobody is really holding the folio lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38342",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoftware node: Correct a OOB check in software_node_get_reference_args()\n\nsoftware_node_get_reference_args() wants to get @index-th element, so\nthe property value requires at least '(index + 1) * sizeof(*ref)' bytes\nbut that can not be guaranteed by current OOB check, and may cause OOB\nfor malformed property.\n\nFix by using as OOB check '((index + 1) * sizeof(*ref) \u003e prop-\u003elength)'.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38343",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7996: drop fragments with multicast or broadcast RA\n\nIEEE 802.11 fragmentation can only be applied to unicast frames.\nTherefore, drop fragments with multicast or broadcast RA. This patch\naddresses vulnerabilities such as CVE-2020-26145.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38344",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPICA: fix acpi parse and parseext cache leaks\n\nACPICA commit 8829e70e1360c81e7a5a901b5d4f48330e021ea5\n\nI'm Seunghun Han, and I work for National Security Research Institute of\nSouth Korea.\n\nI have been doing a research on ACPI and found an ACPI cache leak in ACPI\nearly abort cases.\n\nBoot log of ACPI cache leak is as follows:\n[    0.352414] ACPI: Added _OSI(Module Device)\n[    0.353182] ACPI: Added _OSI(Processor Device)\n[    0.353182] ACPI: Added _OSI(3.0 _SCP Extensions)\n[    0.353182] ACPI: Added _OSI(Processor Aggregator Device)\n[    0.356028] ACPI: Unable to start the ACPI Interpreter\n[    0.356799] ACPI Error: Could not remove SCI handler (20170303/evmisc-281)\n[    0.360215] kmem_cache_destroy Acpi-State: Slab cache still has objects\n[    0.360648] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W\n4.12.0-rc4-next-20170608+ #10\n[    0.361273] Hardware name: innotek gmb_h virtual_box/virtual_box, BIOS\nvirtual_box 12/01/2006\n[    0.361873] Call Trace:\n[    0.362243]  ? dump_stack+0x5c/0x81\n[    0.362591]  ? kmem_cache_destroy+0x1aa/0x1c0\n[    0.362944]  ? acpi_sleep_proc_init+0x27/0x27\n[    0.363296]  ? acpi_os_delete_cache+0xa/0x10\n[    0.363646]  ? acpi_ut_delete_caches+0x6d/0x7b\n[    0.364000]  ? acpi_terminate+0xa/0x14\n[    0.364000]  ? acpi_init+0x2af/0x34f\n[    0.364000]  ? __class_create+0x4c/0x80\n[    0.364000]  ? video_setup+0x7f/0x7f\n[    0.364000]  ? acpi_sleep_proc_init+0x27/0x27\n[    0.364000]  ? do_one_initcall+0x4e/0x1a0\n[    0.364000]  ? kernel_init_freeable+0x189/0x20a\n[    0.364000]  ? rest_init+0xc0/0xc0\n[    0.364000]  ? kernel_init+0xa/0x100\n[    0.364000]  ? ret_from_fork+0x25/0x30\n\nI analyzed this memory leak in detail. I found that \"Acpi-State\" cache and\n\"Acpi-Parse\" cache were merged because the size of cache objects was same\nslab cache size.\n\nI finally found \"Acpi-Parse\" cache and \"Acpi-parse_ext\" cache were leaked\nusing SLAB_NEVER_MERGE flag in kmem_cache_create() function.\n\nReal ACPI cache leak point is as follows:\n[    0.360101] ACPI: Added _OSI(Module Device)\n[    0.360101] ACPI: Added _OSI(Processor Device)\n[    0.360101] ACPI: Added _OSI(3.0 _SCP Extensions)\n[    0.361043] ACPI: Added _OSI(Processor Aggregator Device)\n[    0.364016] ACPI: Unable to start the ACPI Interpreter\n[    0.365061] ACPI Error: Could not remove SCI handler (20170303/evmisc-281)\n[    0.368174] kmem_cache_destroy Acpi-Parse: Slab cache still has objects\n[    0.369332] CPU: 1 PID: 1 Comm: swapper/0 Tainted: G        W\n4.12.0-rc4-next-20170608+ #8\n[    0.371256] Hardware name: innotek gmb_h virtual_box/virtual_box, BIOS\nvirtual_box 12/01/2006\n[    0.372000] Call Trace:\n[    0.372000]  ? dump_stack+0x5c/0x81\n[    0.372000]  ? kmem_cache_destroy+0x1aa/0x1c0\n[    0.372000]  ? acpi_sleep_proc_init+0x27/0x27\n[    0.372000]  ? acpi_os_delete_cache+0xa/0x10\n[    0.372000]  ? acpi_ut_delete_caches+0x56/0x7b\n[    0.372000]  ? acpi_terminate+0xa/0x14\n[    0.372000]  ? acpi_init+0x2af/0x34f\n[    0.372000]  ? __class_create+0x4c/0x80\n[    0.372000]  ? video_setup+0x7f/0x7f\n[    0.372000]  ? acpi_sleep_proc_init+0x27/0x27\n[    0.372000]  ? do_one_initcall+0x4e/0x1a0\n[    0.372000]  ? kernel_init_freeable+0x189/0x20a\n[    0.372000]  ? rest_init+0xc0/0xc0\n[    0.372000]  ? kernel_init+0xa/0x100\n[    0.372000]  ? ret_from_fork+0x25/0x30\n[    0.388039] kmem_cache_destroy Acpi-parse_ext: Slab cache still has objects\n[    0.389063] CPU: 1 PID: 1 Comm: swapper/0 Tainted: G        W\n4.12.0-rc4-next-20170608+ #8\n[    0.390557] Hardware name: innotek gmb_h virtual_box/virtual_box, BIOS\nvirtual_box 12/01/2006\n[    0.392000] Call Trace:\n[    0.392000]  ? dump_stack+0x5c/0x81\n[    0.392000]  ? kmem_cache_destroy+0x1aa/0x1c0\n[    0.392000]  ? acpi_sleep_proc_init+0x27/0x27\n[    0.392000]  ? acpi_os_delete_cache+0xa/0x10\n[    0.392000]  ? acpi_ut_delete_caches+0x6d/0x7b\n[    0.392000]  ? acpi_terminate+0xa/0x14\n[    0.392000]  ? acpi_init+0x2af/0x3\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38345",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPICA: fix acpi operand cache leak in dswstate.c\n\nACPICA commit 987a3b5cf7175916e2a4b6ea5b8e70f830dfe732\n\nI found an ACPI cache leak in ACPI early termination and boot continuing case.\n\nWhen early termination occurs due to malicious ACPI table, Linux kernel\nterminates ACPI function and continues to boot process. While kernel terminates\nACPI function, kmem_cache_destroy() reports Acpi-Operand cache leak.\n\nBoot log of ACPI operand cache leak is as follows:\n\u003e[    0.585957] ACPI: Added _OSI(Module Device)\n\u003e[    0.587218] ACPI: Added _OSI(Processor Device)\n\u003e[    0.588530] ACPI: Added _OSI(3.0 _SCP Extensions)\n\u003e[    0.589790] ACPI: Added _OSI(Processor Aggregator Device)\n\u003e[    0.591534] ACPI Error: Illegal I/O port address/length above 64K: C806E00000004002/0x2 (20170303/hwvalid-155)\n\u003e[    0.594351] ACPI Exception: AE_LIMIT, Unable to initialize fixed events (20170303/evevent-88)\n\u003e[    0.597858] ACPI: Unable to start the ACPI Interpreter\n\u003e[    0.599162] ACPI Error: Could not remove SCI handler (20170303/evmisc-281)\n\u003e[    0.601836] kmem_cache_destroy Acpi-Operand: Slab cache still has objects\n\u003e[    0.603556] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.12.0-rc5 #26\n\u003e[    0.605159] Hardware name: innotek gmb_h virtual_box/virtual_box, BIOS virtual_box 12/01/2006\n\u003e[    0.609177] Call Trace:\n\u003e[    0.610063]  ? dump_stack+0x5c/0x81\n\u003e[    0.611118]  ? kmem_cache_destroy+0x1aa/0x1c0\n\u003e[    0.612632]  ? acpi_sleep_proc_init+0x27/0x27\n\u003e[    0.613906]  ? acpi_os_delete_cache+0xa/0x10\n\u003e[    0.617986]  ? acpi_ut_delete_caches+0x3f/0x7b\n\u003e[    0.619293]  ? acpi_terminate+0xa/0x14\n\u003e[    0.620394]  ? acpi_init+0x2af/0x34f\n\u003e[    0.621616]  ? __class_create+0x4c/0x80\n\u003e[    0.623412]  ? video_setup+0x7f/0x7f\n\u003e[    0.624585]  ? acpi_sleep_proc_init+0x27/0x27\n\u003e[    0.625861]  ? do_one_initcall+0x4e/0x1a0\n\u003e[    0.627513]  ? kernel_init_freeable+0x19e/0x21f\n\u003e[    0.628972]  ? rest_init+0x80/0x80\n\u003e[    0.630043]  ? kernel_init+0xa/0x100\n\u003e[    0.631084]  ? ret_from_fork+0x25/0x30\n\u003e[    0.633343] vgaarb: loaded\n\u003e[    0.635036] EDAC MC: Ver: 3.0.0\n\u003e[    0.638601] PCI: Probing PCI hardware\n\u003e[    0.639833] PCI host bridge to bus 0000:00\n\u003e[    0.641031] pci_bus 0000:00: root bus resource [io  0x0000-0xffff]\n\u003e ... Continue to boot and log is omitted ...\n\nI analyzed this memory leak in detail and found acpi_ds_obj_stack_pop_and_\ndelete() function miscalculated the top of the stack. acpi_ds_obj_stack_push()\nfunction uses walk_state-\u003eoperand_index for start position of the top, but\nacpi_ds_obj_stack_pop_and_delete() function considers index 0 for it.\nTherefore, this causes acpi operand memory leak.\n\nThis cache leak causes a security threat because an old kernel (\u003c= 4.9) shows\nmemory locations of kernel functions in stack dump. Some malicious users\ncould use this information to neutralize kernel ASLR.\n\nI made a patch to fix ACPI operand cache leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38348",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: p54: prevent buffer-overflow in p54_rx_eeprom_readback()\n\nRobert Morris reported:\n\n|If a malicious USB device pretends to be an Intersil p54 wifi\n|interface and generates an eeprom_readback message with a large\n|eeprom-\u003ev1.len, p54_rx_eeprom_readback() will copy data from the\n|message beyond the end of priv-\u003eeeprom.\n|\n|static void p54_rx_eeprom_readback(struct p54_common *priv,\n|                                   struct sk_buff *skb)\n|{\n|        struct p54_hdr *hdr = (struct p54_hdr *) skb-\u003edata;\n|        struct p54_eeprom_lm86 *eeprom = (struct p54_eeprom_lm86 *) hdr-\u003edata;\n|\n|        if (priv-\u003efw_var \u003e= 0x509) {\n|                memcpy(priv-\u003eeeprom, eeprom-\u003ev2.data,\n|                       le16_to_cpu(eeprom-\u003ev2.len));\n|        } else {\n|                memcpy(priv-\u003eeeprom, eeprom-\u003ev1.data,\n|                       le16_to_cpu(eeprom-\u003ev1.len));\n|        }\n| [...]\n\nThe eeprom-\u003ev{1,2}.len is set by the driver in p54_download_eeprom().\nThe device is supposed to provide the same length back to the driver.\nBut yes, it's possible (like shown in the report) to alter the value\nto something that causes a crash/panic due to overrun.\n\nThis patch addresses the issue by adding the size to the common device\ncontext, so p54_rx_eeprom_readback no longer relies on possibly tampered\nvalues... That said, it also checks if the \"firmware\" altered the value\nand no longer copies them.\n\nThe one, small saving grace is: Before the driver tries to read the eeprom,\nit needs to upload \u003ea\u003c firmware. the vendor firmware has a proprietary\nlicense and as a reason, it is not present on most distributions by\ndefault.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38349",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neventpoll: don't decrement ep refcount while still holding the ep mutex\n\nJann Horn points out that epoll is decrementing the ep refcount and then\ndoing a\n\n    mutex_unlock(\u0026ep-\u003emtx);\n\nafterwards. That's very wrong, because it can lead to a use-after-free.\n\nThat pattern is actually fine for the very last reference, because the\ncode in question will delay the actual call to \"ep_free(ep)\" until after\nit has unlocked the mutex.\n\nBut it's wrong for the much subtler \"next to last\" case when somebody\n*else* may also be dropping their reference and free the ep while we're\nstill using the mutex.\n\nNote that this is true even if that other user is also using the same ep\nmutex: mutexes, unlike spinlocks, can not be used for object ownership,\neven if they guarantee mutual exclusion.\n\nA mutex \"unlock\" operation is not atomic, and as one user is still\naccessing the mutex as part of unlocking it, another user can come in\nand get the now released mutex and free the data structure while the\nfirst user is still cleaning up.\n\nSee our mutex documentation in Documentation/locking/mutex-design.rst,\nin particular the section [1] about semantics:\n\n\t\"mutex_unlock() may access the mutex structure even after it has\n\t internally released the lock already - so it's not safe for\n\t another context to acquire the mutex and assume that the\n\t mutex_unlock() context is not using the structure anymore\"\n\nSo if we drop our ep ref before the mutex unlock, but we weren't the\nlast one, we may then unlock the mutex, another user comes in, drops\n_their_ reference and releases the 'ep' as it now has no users - all\nwhile the mutex_unlock() is still accessing it.\n\nFix this by simply moving the ep refcount dropping to outside the mutex:\nthe refcount itself is atomic, and doesn't need mutex protection (that's\nthe whole _point_ of refcounts: unlike mutexes, they are inherently\nabout object lifetimes).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38350",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: Always pass notifications when child class becomes empty\n\nCertain classful qdiscs may invoke their classes' dequeue handler on an\nenqueue operation. This may unexpectedly empty the child qdisc and thus\nmake an in-flight class passive via qlen_notify(). Most qdiscs do not\nexpect such behaviour at this point in time and may re-activate the\nclass eventually anyways which will lead to a use-after-free.\n\nThe referenced fix commit attempted to fix this behavior for the HFSC\ncase by moving the backlog accounting around, though this turned out to\nbe incomplete since the parent's parent may run into the issue too.\nThe following reproducer demonstrates this use-after-free:\n\n    tc qdisc add dev lo root handle 1: drr\n    tc filter add dev lo parent 1: basic classid 1:1\n    tc class add dev lo parent 1: classid 1:1 drr\n    tc qdisc add dev lo parent 1:1 handle 2: hfsc def 1\n    tc class add dev lo parent 2: classid 2:1 hfsc rt m1 8 d 1 m2 0\n    tc qdisc add dev lo parent 2:1 handle 3: netem\n    tc qdisc add dev lo parent 3:1 handle 4: blackhole\n\n    echo 1 | socat -u STDIN UDP4-DATAGRAM:127.0.0.1:8888\n    tc class delete dev lo classid 1:1\n    echo 1 | socat -u STDIN UDP4-DATAGRAM:127.0.0.1:8888\n\nSince backlog accounting issues leading to a use-after-frees on stale\nclass pointers is a recurring pattern at this point, this patch takes\na different approach. Instead of trying to fix the accounting, the patch\nensures that qdisc_tree_reduce_backlog always calls qlen_notify when\nthe child qdisc is empty. This solves the problem because deletion of\nqdiscs always involves a call to qdisc_reset() and / or\nqdisc_purge_queue() which ultimately resets its qlen to 0 thus causing\nthe following qdisc_tree_reduce_backlog() to report to the parent. Note\nthat this may call qlen_notify on passive classes multiple times. This\nis not a problem after the recent patch series that made all the\nclassful qdiscs qlen_notify() handlers idempotent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38352",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nposix-cpu-timers: fix race between handle_posix_cpu_timers() and posix_cpu_timer_del()\n\nIf an exiting non-autoreaping task has already passed exit_notify() and\ncalls handle_posix_cpu_timers() from IRQ, it can be reaped by its parent\nor debugger right after unlock_task_sighand().\n\nIf a concurrent posix_cpu_timer_del() runs at that moment, it won't be\nable to detect timer-\u003eit.cpu.firing != 0: cpu_timer_task_rcu() and/or\nlock_task_sighand() will fail.\n\nAdd the tsk-\u003eexit_state check into run_posix_cpu_timers() to fix this.\n\nThis fix is not needed if CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y, because\nexit_task_work() is called before exit_notify(). But the check still\nmakes sense, task_work_add(\u0026tsk-\u003eposix_cputimers_work.work) will fail\nanyway in this case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38354",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/gpu: Fix crash when throttling GPU immediately during boot\n\nThere is a small chance that the GPU is already hot during boot. In that\ncase, the call to of_devfreq_cooling_register() will immediately try to\napply devfreq cooling, as seen in the following crash:\n\n  Unable to handle kernel paging request at virtual address 0000000000014110\n  pc : a6xx_gpu_busy+0x1c/0x58 [msm]\n  lr : msm_devfreq_get_dev_status+0xbc/0x140 [msm]\n  Call trace:\n   a6xx_gpu_busy+0x1c/0x58 [msm] (P)\n   devfreq_simple_ondemand_func+0x3c/0x150\n   devfreq_update_target+0x44/0xd8\n   qos_max_notifier_call+0x30/0x84\n   blocking_notifier_call_chain+0x6c/0xa0\n   pm_qos_update_target+0xd0/0x110\n   freq_qos_apply+0x3c/0x74\n   apply_constraint+0x88/0x148\n   __dev_pm_qos_update_request+0x7c/0xcc\n   dev_pm_qos_update_request+0x38/0x5c\n   devfreq_cooling_set_cur_state+0x98/0xf0\n   __thermal_cdev_update+0x64/0xb4\n   thermal_cdev_update+0x4c/0x58\n   step_wise_manage+0x1f0/0x318\n   __thermal_zone_device_update+0x278/0x424\n   __thermal_cooling_device_register+0x2bc/0x308\n   thermal_of_cooling_device_register+0x10/0x1c\n   of_devfreq_cooling_register_power+0x240/0x2bc\n   of_devfreq_cooling_register+0x14/0x20\n   msm_devfreq_init+0xc4/0x1a0 [msm]\n   msm_gpu_init+0x304/0x574 [msm]\n   adreno_gpu_init+0x1c4/0x2e0 [msm]\n   a6xx_gpu_init+0x5c8/0x9c8 [msm]\n   adreno_bind+0x2a8/0x33c [msm]\n   ...\n\nAt this point we haven't initialized the GMU at all yet, so we cannot read\nthe GMU registers inside a6xx_gpu_busy(). A similar issue was fixed before\nin commit 6694482a70e9 (\"drm/msm: Avoid unclocked GMU register access in\n6xx gpu_busy\"): msm_devfreq_init() does call devfreq_suspend_device(), but\nunlike msm_devfreq_suspend(), it doesn't set the df-\u003esuspended flag\naccordingly. This means the df-\u003esuspended flag does not match the actual\ndevfreq state after initialization and msm_devfreq_get_dev_status() will\nend up accessing GMU registers, causing the crash.\n\nFix this by setting df-\u003esuspended correctly during initialization.\n\nPatchwork: https://patchwork.freedesktop.org/patch/650772/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38362",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add null pointer check for get_first_active_display()\n\nThe function mod_hdcp_hdcp1_enable_encryption() calls the function\nget_first_active_display(), but does not check its return value.\nThe return value is a null pointer if the display list is empty.\nThis will lead to a null pointer dereference in\nmod_hdcp_hdcp2_enable_encryption().\n\nAdd a null pointer check for get_first_active_display() and return\nMOD_HDCP_STATUS_DISPLAY_NOT_FOUND if the function return null.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38363",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/tegra: Fix a possible null pointer dereference\n\nIn tegra_crtc_reset(), new memory is allocated with kzalloc(), but\nno check is performed. Before calling __drm_atomic_helper_crtc_reset,\nstate should be checked to prevent possible null pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38364",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmaple_tree: fix MA_STATE_PREALLOC flag in mas_preallocate()\n\nTemporarily clear the preallocation flag when explicitly requesting\nallocations.  Pre-existing allocations are already counted against the\nrequest through mas_node_count_gfp(), but the allocations will not happen\nif the MA_STATE_PREALLOC flag is set.  This flag is meant to avoid\nre-allocating in bulk allocation mode, and to detect issues with\npreallocation calculations.\n\nThe MA_STATE_PREALLOC flag should also always be set on zero allocations\nso that detection of underflow allocations will print a WARN_ON() during\nconsumption.\n\nUser visible effect of this flaw is a WARN_ON() followed by a null pointer\ndereference when subsequent requests for larger number of nodes is\nignored, such as the vma merge retry in mmap_region() caused by drivers\naltering the vma flags (which happens in v6.6, at least)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38365",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix a race between renames and directory logging\n\nWe have a race between a rename and directory inode logging that if it\nhappens and we crash/power fail before the rename completes, the next time\nthe filesystem is mounted, the log replay code will end up deleting the\nfile that was being renamed.\n\nThis is best explained following a step by step analysis of an interleaving\nof steps that lead into this situation.\n\nConsider the initial conditions:\n\n1) We are at transaction N;\n\n2) We have directories A and B created in a past transaction (\u003c N);\n\n3) We have inode X corresponding to a file that has 2 hardlinks, one in\n   directory A and the other in directory B, so we'll name them as\n   \"A/foo_link1\" and \"B/foo_link2\". Both hard links were persisted in a\n   past transaction (\u003c N);\n\n4) We have inode Y corresponding to a file that as a single hard link and\n   is located in directory A, we'll name it as \"A/bar\". This file was also\n   persisted in a past transaction (\u003c N).\n\nThe steps leading to a file loss are the following and for all of them we\nare under transaction N:\n\n 1) Link \"A/foo_link1\" is removed, so inode's X last_unlink_trans field\n    is updated to N, through btrfs_unlink() -\u003e btrfs_record_unlink_dir();\n\n 2) Task A starts a rename for inode Y, with the goal of renaming from\n    \"A/bar\" to \"A/baz\", so we enter btrfs_rename();\n\n 3) Task A inserts the new BTRFS_INODE_REF_KEY for inode Y by calling\n    btrfs_insert_inode_ref();\n\n 4) Because the rename happens in the same directory, we don't set the\n    last_unlink_trans field of directoty A's inode to the current\n    transaction id, that is, we don't cal btrfs_record_unlink_dir();\n\n 5) Task A then removes the entries from directory A (BTRFS_DIR_ITEM_KEY\n    and BTRFS_DIR_INDEX_KEY items) when calling __btrfs_unlink_inode()\n    (actually the dir index item is added as a delayed item, but the\n    effect is the same);\n\n 6) Now before task A adds the new entry \"A/baz\" to directory A by\n    calling btrfs_add_link(), another task, task B is logging inode X;\n\n 7) Task B starts a fsync of inode X and after logging inode X, at\n    btrfs_log_inode_parent() it calls btrfs_log_all_parents(), since\n    inode X has a last_unlink_trans value of N, set at in step 1;\n\n 8) At btrfs_log_all_parents() we search for all parent directories of\n    inode X using the commit root, so we find directories A and B and log\n    them. Bu when logging direct A, we don't have a dir index item for\n    inode Y anymore, neither the old name \"A/bar\" nor for the new name\n    \"A/baz\" since the rename has deleted the old name but has not yet\n    inserted the new name - task A hasn't called yet btrfs_add_link() to\n    do that.\n\n    Note that logging directory A doesn't fallback to a transaction\n    commit because its last_unlink_trans has a lower value than the\n    current transaction's id (see step 4);\n\n 9) Task B finishes logging directories A and B and gets back to\n    btrfs_sync_file() where it calls btrfs_sync_log() to persist the log\n    tree;\n\n10) Task B successfully persisted the log tree, btrfs_sync_log() completed\n    with success, and a power failure happened.\n\n    We have a log tree without any directory entry for inode Y, so the\n    log replay code deletes the entry for inode Y, name \"A/bar\", from the\n    subvolume tree since it doesn't exist in the log tree and the log\n    tree is authorative for its index (we logged a BTRFS_DIR_LOG_INDEX_KEY\n    item that covers the index range for the dentry that corresponds to\n    \"A/bar\").\n\n    Since there's no other hard link for inode Y and the log replay code\n    deletes the name \"A/bar\", the file is lost.\n\nThe issue wouldn't happen if task B synced the log only after task A\ncalled btrfs_log_new_name(), which would update the log with the new name\nfor inode Y (\"A/bar\").\n\nFix this by pinning the log root during renames before removing the old\ndirectory entry, and unpinning af\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38369",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Check availability of workqueue allocated by idxd wq driver before using\n\nRunning IDXD workloads in a container with the /dev directory mounted can\ntrigger a call trace or even a kernel panic when the parent process of the\ncontainer is terminated.\n\nThis issue occurs because, under certain configurations, Docker does not\nproperly propagate the mount replica back to the original mount point.\n\nIn this case, when the user driver detaches, the WQ is destroyed but it\nstill calls destroy_workqueue() attempting to completes all pending work.\nIt's necessary to check wq-\u003ewq and skip the drain if it no longer exists.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38371",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/v3d: Disable interrupts before resetting the GPU\n\nCurrently, an interrupt can be triggered during a GPU reset, which can\nlead to GPU hangs and NULL pointer dereference in an interrupt context\nas shown in the following trace:\n\n [  314.035040] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000c0\n [  314.043822] Mem abort info:\n [  314.046606]   ESR = 0x0000000096000005\n [  314.050347]   EC = 0x25: DABT (current EL), IL = 32 bits\n [  314.055651]   SET = 0, FnV = 0\n [  314.058695]   EA = 0, S1PTW = 0\n [  314.061826]   FSC = 0x05: level 1 translation fault\n [  314.066694] Data abort info:\n [  314.069564]   ISV = 0, ISS = 0x00000005, ISS2 = 0x00000000\n [  314.075039]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n [  314.080080]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n [  314.085382] user pgtable: 4k pages, 39-bit VAs, pgdp=0000000102728000\n [  314.091814] [00000000000000c0] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000\n [  314.100511] Internal error: Oops: 0000000096000005 [#1] PREEMPT SMP\n [  314.106770] Modules linked in: v3d i2c_brcmstb vc4 snd_soc_hdmi_codec gpu_sched drm_shmem_helper drm_display_helper cec drm_dma_helper drm_kms_helper drm drm_panel_orientation_quirks snd_soc_core snd_compress snd_pcm_dmaengine snd_pcm snd_timer snd backlight\n [  314.129654] CPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted 6.12.25+rpt-rpi-v8 #1  Debian 1:6.12.25-1+rpt1\n [  314.139388] Hardware name: Raspberry Pi 4 Model B Rev 1.4 (DT)\n [  314.145211] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n [  314.152165] pc : v3d_irq+0xec/0x2e0 [v3d]\n [  314.156187] lr : v3d_irq+0xe0/0x2e0 [v3d]\n [  314.160198] sp : ffffffc080003ea0\n [  314.163502] x29: ffffffc080003ea0 x28: ffffffec1f184980 x27: 021202b000000000\n [  314.170633] x26: ffffffec1f17f630 x25: ffffff8101372000 x24: ffffffec1f17d9f0\n [  314.177764] x23: 000000000000002a x22: 000000000000002a x21: ffffff8103252000\n [  314.184895] x20: 0000000000000001 x19: 00000000deadbeef x18: 0000000000000000\n [  314.192026] x17: ffffff94e51d2000 x16: ffffffec1dac3cb0 x15: c306000000000000\n [  314.199156] x14: 0000000000000000 x13: b2fc982e03cc5168 x12: 0000000000000001\n [  314.206286] x11: ffffff8103f8bcc0 x10: ffffffec1f196868 x9 : ffffffec1dac3874\n [  314.213416] x8 : 0000000000000000 x7 : 0000000000042a3a x6 : ffffff810017a180\n [  314.220547] x5 : ffffffec1ebad400 x4 : ffffffec1ebad320 x3 : 00000000000bebeb\n [  314.227677] x2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000\n [  314.234807] Call trace:\n [  314.237243]  v3d_irq+0xec/0x2e0 [v3d]\n [  314.240906]  __handle_irq_event_percpu+0x58/0x218\n [  314.245609]  handle_irq_event+0x54/0xb8\n [  314.249439]  handle_fasteoi_irq+0xac/0x240\n [  314.253527]  handle_irq_desc+0x48/0x68\n [  314.257269]  generic_handle_domain_irq+0x24/0x38\n [  314.261879]  gic_handle_irq+0x48/0xd8\n [  314.265533]  call_on_irq_stack+0x24/0x58\n [  314.269448]  do_interrupt_handler+0x88/0x98\n [  314.273624]  el1_interrupt+0x34/0x68\n [  314.277193]  el1h_64_irq_handler+0x18/0x28\n [  314.281281]  el1h_64_irq+0x64/0x68\n [  314.284673]  default_idle_call+0x3c/0x168\n [  314.288675]  do_idle+0x1fc/0x230\n [  314.291895]  cpu_startup_entry+0x3c/0x50\n [  314.295810]  rest_init+0xe4/0xf0\n [  314.299030]  start_kernel+0x5e8/0x790\n [  314.302684]  __primary_switched+0x80/0x90\n [  314.306691] Code: 940029eb 360ffc13 f9442ea0 52800001 (f9406017)\n [  314.312775] ---[ end trace 0000000000000000 ]---\n [  314.317384] Kernel panic - not syncing: Oops: Fatal exception in interrupt\n [  314.324249] SMP: stopping secondary CPUs\n [  314.328167] Kernel Offset: 0x2b9da00000 from 0xffffffc080000000\n [  314.334076] PHYS_OFFSET: 0x0\n [  314.336946] CPU features: 0x08,00002013,c0200000,0200421b\n [  314.342337] Memory Limit: none\n [  314.345382] ---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---\n\nBefore resetting the G\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38373",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/mlx5: Fix potential deadlock in MR deregistration\n\nThe issue arises when kzalloc() is invoked while holding umem_mutex or\nany other lock acquired under umem_mutex. This is problematic because\nkzalloc() can trigger fs_reclaim_aqcuire(), which may, in turn, invoke\nmmu_notifier_invalidate_range_start(). This function can lead to\nmlx5_ib_invalidate_range(), which attempts to acquire umem_mutex again,\nresulting in a deadlock.\n\nThe problematic flow:\n             CPU0                      |              CPU1\n---------------------------------------|------------------------------------------------\nmlx5_ib_dereg_mr()                     |\n -\u003e revoke_mr()                         |\n   -\u003e mutex_lock(\u0026umem_odp-\u003eumem_mutex) |\n                                       | mlx5_mkey_cache_init()\n                                       |  -\u003e mutex_lock(\u0026dev-\u003ecache.rb_lock)\n                                       |  -\u003e mlx5r_cache_create_ent_locked()\n                                       |    -\u003e kzalloc(GFP_KERNEL)\n                                       |      -\u003e fs_reclaim()\n                                       |        -\u003e mmu_notifier_invalidate_range_start()\n                                       |          -\u003e mlx5_ib_invalidate_range()\n                                       |            -\u003e mutex_lock(\u0026umem_odp-\u003eumem_mutex)\n   -\u003e cache_ent_find_and_store()        |\n     -\u003e mutex_lock(\u0026dev-\u003ecache.rb_lock) |\n\nAdditionally, when kzalloc() is called from within\ncache_ent_find_and_store(), we encounter the same deadlock due to\nre-acquisition of umem_mutex.\n\nSolve by releasing umem_mutex in dereg_mr() after umr_revoke_mr()\nand before acquiring rb_lock. This ensures that we don't hold\numem_mutex while performing memory allocations that could trigger\nthe reclaim path.\n\nThis change prevents the deadlock by ensuring proper lock ordering and\navoiding holding locks during memory allocation operations that could\ntrigger the reclaim path.\n\nThe following lockdep warning demonstrates the deadlock:\n\n python3/20557 is trying to acquire lock:\n ffff888387542128 (\u0026umem_odp-\u003eumem_mutex){+.+.}-{4:4}, at:\n mlx5_ib_invalidate_range+0x5b/0x550 [mlx5_ib]\n\n but task is already holding lock:\n ffffffff82f6b840 (mmu_notifier_invalidate_range_start){+.+.}-{0:0}, at:\n unmap_vmas+0x7b/0x1a0\n\n which lock already depends on the new lock.\n\n the existing dependency chain (in reverse order) is:\n\n -\u003e #3 (mmu_notifier_invalidate_range_start){+.+.}-{0:0}:\n       fs_reclaim_acquire+0x60/0xd0\n       mem_cgroup_css_alloc+0x6f/0x9b0\n       cgroup_init_subsys+0xa4/0x240\n       cgroup_init+0x1c8/0x510\n       start_kernel+0x747/0x760\n       x86_64_start_reservations+0x25/0x30\n       x86_64_start_kernel+0x73/0x80\n       common_startup_64+0x129/0x138\n\n -\u003e #2 (fs_reclaim){+.+.}-{0:0}:\n       fs_reclaim_acquire+0x91/0xd0\n       __kmalloc_cache_noprof+0x4d/0x4c0\n       mlx5r_cache_create_ent_locked+0x75/0x620 [mlx5_ib]\n       mlx5_mkey_cache_init+0x186/0x360 [mlx5_ib]\n       mlx5_ib_stage_post_ib_reg_umr_init+0x3c/0x60 [mlx5_ib]\n       __mlx5_ib_add+0x4b/0x190 [mlx5_ib]\n       mlx5r_probe+0xd9/0x320 [mlx5_ib]\n       auxiliary_bus_probe+0x42/0x70\n       really_probe+0xdb/0x360\n       __driver_probe_device+0x8f/0x130\n       driver_probe_device+0x1f/0xb0\n       __driver_attach+0xd4/0x1f0\n       bus_for_each_dev+0x79/0xd0\n       bus_add_driver+0xf0/0x200\n       driver_register+0x6e/0xc0\n       __auxiliary_driver_register+0x6a/0xc0\n       do_one_initcall+0x5e/0x390\n       do_init_module+0x88/0x240\n       init_module_from_file+0x85/0xc0\n       idempotent_init_module+0x104/0x300\n       __x64_sys_finit_module+0x68/0xc0\n       do_syscall_64+0x6d/0x140\n       entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\n -\u003e #1 (\u0026dev-\u003ecache.rb_lock){+.+.}-{4:4}:\n       __mutex_lock+0x98/0xf10\n       __mlx5_ib_dereg_mr+0x6f2/0x890 [mlx5_ib]\n       mlx5_ib_dereg_mr+0x21/0x110 [mlx5_ib]\n       ib_dereg_mr_user+0x85/0x1f0 [ib_core]\n  \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38375",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-net: ensure the received length does not exceed allocated size\n\nIn xdp_linearize_page, when reading the following buffers from the ring,\nwe forget to check the received length with the true allocate size. This\ncan lead to an out-of-bound read. This commit adds that missing check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38376",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: chipidea: udc: disconnect/reconnect from host when do suspend/resume\n\nShawn and John reported a hang issue during system suspend as below:\n\n - USB gadget is enabled as Ethernet\n - There is data transfer over USB Ethernet (scp a big file between host\n                                             and device)\n - Device is going in/out suspend (echo mem \u003e /sys/power/state)\n\nThe root cause is the USB device controller is suspended but the USB bus\nis still active which caused the USB host continues to transfer data with\ndevice and the device continues to queue USB requests (in this case, a\ndelayed TCP ACK packet trigger the issue) after controller is suspended,\nhowever the USB controller clock is already gated off. Then if udc driver\naccess registers after that point, the system will hang.\n\nThe correct way to avoid such issue is to disconnect device from host when\nthe USB bus is not at suspend state. Then the host will receive disconnect\nevent and stop data transfer in time. To continue make USB gadget device\nwork after system resume, this will reconnect device automatically.\n\nTo make usb wakeup work if USB bus is already at suspend state, this will\nkeep connection for it only when USB device controller has enabled wakeup\ncapability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38377",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrose: fix dangling neighbour pointers in rose_rt_device_down()\n\nThere are two bugs in rose_rt_device_down() that can cause\nuse-after-free:\n\n1. The loop bound `t-\u003ecount` is modified within the loop, which can\n   cause the loop to terminate early and miss some entries.\n\n2. When removing an entry from the neighbour array, the subsequent entries\n   are moved up to fill the gap, but the loop index `i` is still\n   incremented, causing the next entry to be skipped.\n\nFor example, if a node has three neighbours (A, A, B) with count=3 and A\nis being removed, the second A is not checked.\n\n    i=0: (A, A, B) -\u003e (A, B) with count=2\n          ^ checked\n    i=1: (A, B)    -\u003e (A, B) with count=2\n             ^ checked (B, not A!)\n    i=2: (doesn't occur because i \u003c count is false)\n\nThis leaves the second A in the array with count=2, but the rose_neigh\nstructure has been freed. Code that accesses these entries assumes that\nthe first `count` entries are valid pointers, causing a use-after-free\nwhen it accesses the dangling pointer.\n\nFix both issues by iterating over the array in reverse order with a fixed\nloop bound. This ensures that all entries are examined and that the removal\nof an entry doesn't affect subsequent iterations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38380",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38382",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix iteration of extrefs during log replay\n\nAt __inode_add_ref() when processing extrefs, if we jump into the next\nlabel we have an undefined value of victim_name.len, since we haven't\ninitialized it before we did the goto. This results in an invalid memory\naccess in the next iteration of the loop since victim_name.len was not\ninitialized to the length of the name of the current extref.\n\nFix this by initializing victim_name.len with the current extref's name\nlength.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38384",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: spinand: fix memory leak of ECC engine conf\n\nMemory allocated for the ECC engine conf is not released during spinand\ncleanup. Below kmemleak trace is seen for this memory leak:\n\nunreferenced object 0xffffff80064f00e0 (size 8):\n  comm \"swapper/0\", pid 1, jiffies 4294937458\n  hex dump (first 8 bytes):\n    00 00 00 00 00 00 00 00                          ........\n  backtrace (crc 0):\n    kmemleak_alloc+0x30/0x40\n    __kmalloc_cache_noprof+0x208/0x3c0\n    spinand_ondie_ecc_init_ctx+0x114/0x200\n    nand_ecc_init_ctx+0x70/0xa8\n    nanddev_ecc_engine_init+0xec/0x27c\n    spinand_probe+0xa2c/0x1620\n    spi_mem_probe+0x130/0x21c\n    spi_probe+0xf0/0x170\n    really_probe+0x17c/0x6e8\n    __driver_probe_device+0x17c/0x21c\n    driver_probe_device+0x58/0x180\n    __device_attach_driver+0x15c/0x1f8\n    bus_for_each_drv+0xec/0x150\n    __device_attach+0x188/0x24c\n    device_initial_probe+0x10/0x20\n    bus_probe_device+0x11c/0x160\n\nFix the leak by calling nanddev_ecc_engine_cleanup() inside\nspinand_cleanup().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38385",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: lan78xx: fix WARN in __netif_napi_del_locked on disconnect\n\nRemove redundant netif_napi_del() call from disconnect path.\n\nA WARN may be triggered in __netif_napi_del_locked() during USB device\ndisconnect:\n\n  WARNING: CPU: 0 PID: 11 at net/core/dev.c:7417 __netif_napi_del_locked+0x2b4/0x350\n\nThis happens because netif_napi_del() is called in the disconnect path while\nNAPI is still enabled. However, it is not necessary to call netif_napi_del()\nexplicitly, since unregister_netdev() will handle NAPI teardown automatically\nand safely. Removing the redundant call avoids triggering the warning.\n\nFull trace:\n lan78xx 1-1:1.0 enu1: Failed to read register index 0x000000c4. ret = -ENODEV\n lan78xx 1-1:1.0 enu1: Failed to set MAC down with error -ENODEV\n lan78xx 1-1:1.0 enu1: Link is Down\n lan78xx 1-1:1.0 enu1: Failed to read register index 0x00000120. ret = -ENODEV\n ------------[ cut here ]------------\n WARNING: CPU: 0 PID: 11 at net/core/dev.c:7417 __netif_napi_del_locked+0x2b4/0x350\n Modules linked in: flexcan can_dev fuse\n CPU: 0 UID: 0 PID: 11 Comm: kworker/0:1 Not tainted 6.16.0-rc2-00624-ge926949dab03 #9 PREEMPT\n Hardware name: SKOV IMX8MP CPU revC - bd500 (DT)\n Workqueue: usb_hub_wq hub_event\n pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __netif_napi_del_locked+0x2b4/0x350\n lr : __netif_napi_del_locked+0x7c/0x350\n sp : ffffffc085b673c0\n x29: ffffffc085b673c0 x28: ffffff800b7f2000 x27: ffffff800b7f20d8\n x26: ffffff80110bcf58 x25: ffffff80110bd978 x24: 1ffffff0022179eb\n x23: ffffff80110bc000 x22: ffffff800b7f5000 x21: ffffff80110bc000\n x20: ffffff80110bcf38 x19: ffffff80110bcf28 x18: dfffffc000000000\n x17: ffffffc081578940 x16: ffffffc08284cee0 x15: 0000000000000028\n x14: 0000000000000006 x13: 0000000000040000 x12: ffffffb0022179e8\n x11: 1ffffff0022179e7 x10: ffffffb0022179e7 x9 : dfffffc000000000\n x8 : 0000004ffdde8619 x7 : ffffff80110bcf3f x6 : 0000000000000001\n x5 : ffffff80110bcf38 x4 : ffffff80110bcf38 x3 : 0000000000000000\n x2 : 0000000000000000 x1 : 1ffffff0022179e7 x0 : 0000000000000000\n Call trace:\n  __netif_napi_del_locked+0x2b4/0x350 (P)\n  lan78xx_disconnect+0xf4/0x360\n  usb_unbind_interface+0x158/0x718\n  device_remove+0x100/0x150\n  device_release_driver_internal+0x308/0x478\n  device_release_driver+0x1c/0x30\n  bus_remove_device+0x1a8/0x368\n  device_del+0x2e0/0x7b0\n  usb_disable_device+0x244/0x540\n  usb_disconnect+0x220/0x758\n  hub_event+0x105c/0x35e0\n  process_one_work+0x760/0x17b0\n  worker_thread+0x768/0xce8\n  kthread+0x3bc/0x690\n  ret_from_fork+0x10/0x20\n irq event stamp: 211604\n hardirqs last  enabled at (211603): [\u003cffffffc0828cc9ec\u003e] _raw_spin_unlock_irqrestore+0x84/0x98\n hardirqs last disabled at (211604): [\u003cffffffc0828a9a84\u003e] el1_dbg+0x24/0x80\n softirqs last  enabled at (211296): [\u003cffffffc080095f10\u003e] handle_softirqs+0x820/0xbc8\n softirqs last disabled at (210993): [\u003cffffffc080010288\u003e] __do_softirq+0x18/0x20\n ---[ end trace 0000000000000000 ]---\n lan78xx 1-1:1.0 enu1: failed to kill vid 0081/0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38386",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPICA: Refuse to evaluate a method if arguments are missing\n\nAs reported in [1], a platform firmware update that increased the number\nof method parameters and forgot to update a least one of its callers,\ncaused ACPICA to crash due to use-after-free.\n\nSince this a result of a clear AML issue that arguably cannot be fixed\nup by the interpreter (it cannot produce missing data out of thin air),\naddress it by making ACPICA refuse to evaluate a method if the caller\nattempts to pass fewer arguments than expected to it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38387",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Initialize obj_event-\u003eobj_sub_list before xa_insert\n\nThe obj_event may be loaded immediately after inserted, then if the\nlist_head is not initialized then we may get a poisonous pointer.  This\nfixes the crash below:\n\n mlx5_core 0000:03:00.0: MLX5E: StrdRq(1) RqSz(8) StrdSz(2048) RxCqeCmprss(0 enhanced)\n mlx5_core.sf mlx5_core.sf.4: firmware version: 32.38.3056\n mlx5_core 0000:03:00.0 en3f0pf0sf2002: renamed from eth0\n mlx5_core.sf mlx5_core.sf.4: Rate limit: 127 rates are supported, range: 0Mbps to 195312Mbps\n IPv6: ADDRCONF(NETDEV_CHANGE): en3f0pf0sf2002: link becomes ready\n Unable to handle kernel NULL pointer dereference at virtual address 0000000000000060\n Mem abort info:\n   ESR = 0x96000006\n   EC = 0x25: DABT (current EL), IL = 32 bits\n   SET = 0, FnV = 0\n   EA = 0, S1PTW = 0\n Data abort info:\n   ISV = 0, ISS = 0x00000006\n   CM = 0, WnR = 0\n user pgtable: 4k pages, 48-bit VAs, pgdp=00000007760fb000\n [0000000000000060] pgd=000000076f6d7003, p4d=000000076f6d7003, pud=0000000777841003, pmd=0000000000000000\n Internal error: Oops: 96000006 [#1] SMP\n Modules linked in: ipmb_host(OE) act_mirred(E) cls_flower(E) sch_ingress(E) mptcp_diag(E) udp_diag(E) raw_diag(E) unix_diag(E) tcp_diag(E) inet_diag(E) binfmt_misc(E) bonding(OE) rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) isofs(E) cdrom(E) mst_pciconf(OE) ib_umad(OE) mlx5_ib(OE) ipmb_dev_int(OE) mlx5_core(OE) kpatch_15237886(OEK) mlxdevm(OE) auxiliary(OE) ib_uverbs(OE) ib_core(OE) psample(E) mlxfw(OE) tls(E) sunrpc(E) vfat(E) fat(E) crct10dif_ce(E) ghash_ce(E) sha1_ce(E) sbsa_gwdt(E) virtio_console(E) ext4(E) mbcache(E) jbd2(E) xfs(E) libcrc32c(E) mmc_block(E) virtio_net(E) net_failover(E) failover(E) sha2_ce(E) sha256_arm64(E) nvme(OE) nvme_core(OE) gpio_mlxbf3(OE) mlx_compat(OE) mlxbf_pmc(OE) i2c_mlxbf(OE) sdhci_of_dwcmshc(OE) pinctrl_mlxbf3(OE) mlxbf_pka(OE) gpio_generic(E) i2c_core(E) mmc_core(E) mlxbf_gige(OE) vitesse(E) pwr_mlxbf(OE) mlxbf_tmfifo(OE) micrel(E) mlxbf_bootctl(OE) virtio_ring(E) virtio(E) ipmi_devintf(E) ipmi_msghandler(E)\n  [last unloaded: mst_pci]\n CPU: 11 PID: 20913 Comm: rte-worker-11 Kdump: loaded Tainted: G           OE K   5.10.134-13.1.an8.aarch64 #1\n Hardware name: https://www.mellanox.com BlueField-3 SmartNIC Main Card/BlueField-3 SmartNIC Main Card, BIOS 4.2.2.12968 Oct 26 2023\n pstate: a0400089 (NzCv daIf +PAN -UAO -TCO BTYPE=--)\n pc : dispatch_event_fd+0x68/0x300 [mlx5_ib]\n lr : devx_event_notifier+0xcc/0x228 [mlx5_ib]\n sp : ffff80001005bcf0\n x29: ffff80001005bcf0 x28: 0000000000000001\n x27: ffff244e0740a1d8 x26: ffff244e0740a1d0\n x25: ffffda56beff5ae0 x24: ffffda56bf911618\n x23: ffff244e0596a480 x22: ffff244e0596a480\n x21: ffff244d8312ad90 x20: ffff244e0596a480\n x19: fffffffffffffff0 x18: 0000000000000000\n x17: 0000000000000000 x16: ffffda56be66d620\n x15: 0000000000000000 x14: 0000000000000000\n x13: 0000000000000000 x12: 0000000000000000\n x11: 0000000000000040 x10: ffffda56bfcafb50\n x9 : ffffda5655c25f2c x8 : 0000000000000010\n x7 : 0000000000000000 x6 : ffff24545a2e24b8\n x5 : 0000000000000003 x4 : ffff80001005bd28\n x3 : 0000000000000000 x2 : 0000000000000000\n x1 : ffff244e0596a480 x0 : ffff244d8312ad90\n Call trace:\n  dispatch_event_fd+0x68/0x300 [mlx5_ib]\n  devx_event_notifier+0xcc/0x228 [mlx5_ib]\n  atomic_notifier_call_chain+0x58/0x80\n  mlx5_eq_async_int+0x148/0x2b0 [mlx5_core]\n  atomic_notifier_call_chain+0x58/0x80\n  irq_int_handler+0x20/0x30 [mlx5_core]\n  __handle_irq_event_percpu+0x60/0x220\n  handle_irq_event_percpu+0x3c/0x90\n  handle_irq_event+0x58/0x158\n  handle_fasteoi_irq+0xfc/0x188\n  generic_handle_irq+0x34/0x48\n  ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38389",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/gt: Fix timeline left held on VMA alloc error\n\nThe following error has been reported sporadically by CI when a test\nunbinds the i915 driver on a ring submission platform:\n\n\u003c4\u003e [239.330153] ------------[ cut here ]------------\n\u003c4\u003e [239.330166] i915 0000:00:02.0: [drm] drm_WARN_ON(dev_priv-\u003emm.shrink_count)\n\u003c4\u003e [239.330196] WARNING: CPU: 1 PID: 18570 at drivers/gpu/drm/i915/i915_gem.c:1309 i915_gem_cleanup_early+0x13e/0x150 [i915]\n...\n\u003c4\u003e [239.330640] RIP: 0010:i915_gem_cleanup_early+0x13e/0x150 [i915]\n...\n\u003c4\u003e [239.330942] Call Trace:\n\u003c4\u003e [239.330944]  \u003cTASK\u003e\n\u003c4\u003e [239.330949]  i915_driver_late_release+0x2b/0xa0 [i915]\n\u003c4\u003e [239.331202]  i915_driver_release+0x86/0xa0 [i915]\n\u003c4\u003e [239.331482]  devm_drm_dev_init_release+0x61/0x90\n\u003c4\u003e [239.331494]  devm_action_release+0x15/0x30\n\u003c4\u003e [239.331504]  release_nodes+0x3d/0x120\n\u003c4\u003e [239.331517]  devres_release_all+0x96/0xd0\n\u003c4\u003e [239.331533]  device_unbind_cleanup+0x12/0x80\n\u003c4\u003e [239.331543]  device_release_driver_internal+0x23a/0x280\n\u003c4\u003e [239.331550]  ? bus_find_device+0xa5/0xe0\n\u003c4\u003e [239.331563]  device_driver_detach+0x14/0x20\n...\n\u003c4\u003e [357.719679] ---[ end trace 0000000000000000 ]---\n\nIf the test also unloads the i915 module then that's followed with:\n\n\u003c3\u003e [357.787478] =============================================================================\n\u003c3\u003e [357.788006] BUG i915_vma (Tainted: G     U  W        N ): Objects remaining on __kmem_cache_shutdown()\n\u003c3\u003e [357.788031] -----------------------------------------------------------------------------\n\u003c3\u003e [357.788204] Object 0xffff888109e7f480 @offset=29824\n\u003c3\u003e [357.788670] Allocated in i915_vma_instance+0xee/0xc10 [i915] age=292729 cpu=4 pid=2244\n\u003c4\u003e [357.788994]  i915_vma_instance+0xee/0xc10 [i915]\n\u003c4\u003e [357.789290]  init_status_page+0x7b/0x420 [i915]\n\u003c4\u003e [357.789532]  intel_engines_init+0x1d8/0x980 [i915]\n\u003c4\u003e [357.789772]  intel_gt_init+0x175/0x450 [i915]\n\u003c4\u003e [357.790014]  i915_gem_init+0x113/0x340 [i915]\n\u003c4\u003e [357.790281]  i915_driver_probe+0x847/0xed0 [i915]\n\u003c4\u003e [357.790504]  i915_pci_probe+0xe6/0x220 [i915]\n...\n\nCloser analysis of CI results history has revealed a dependency of the\nerror on a few IGT tests, namely:\n- igt@api_intel_allocator@fork-simple-stress-signal,\n- igt@api_intel_allocator@two-level-inception-interruptible,\n- igt@gem_linear_blits@interruptible,\n- igt@prime_mmap_coherency@ioctl-errors,\nwhich invisibly trigger the issue, then exhibited with first driver unbind\nattempt.\n\nAll of the above tests perform actions which are actively interrupted with\nsignals.  Further debugging has allowed to narrow that scope down to\nDRM_IOCTL_I915_GEM_EXECBUFFER2, and ring_context_alloc(), specific to ring\nsubmission, in particular.\n\nIf successful then that function, or its execlists or GuC submission\nequivalent, is supposed to be called only once per GEM context engine,\nfollowed by raise of a flag that prevents the function from being called\nagain.  The function is expected to unwind its internal errors itself, so\nit may be safely called once more after it returns an error.\n\nIn case of ring submission, the function first gets a reference to the\nengine's legacy timeline and then allocates a VMA.  If the VMA allocation\nfails, e.g. when i915_vma_instance() called from inside is interrupted\nwith a signal, then ring_context_alloc() fails, leaving the timeline held\nreferenced.  On next I915_GEM_EXECBUFFER2 IOCTL, another reference to the\ntimeline is got, and only that last one is put on successful completion.\nAs a consequence, the legacy timeline, with its underlying engine status\npage's VMA object, is still held and not released on driver unbind.\n\nGet the legacy timeline only after successful allocation of the context\nengine's VMA.\n\nv2: Add a note on other submission methods (Krzysztof Karas):\n    Both execlists and GuC submission use lrc_alloc() which seems free\n    from a similar issue.\n\n(cherry picked from commit cc43422b3cc79eacff4c5a8ba0d224688ca9dd4f)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38391",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: altmodes/displayport: do not index invalid pin_assignments\n\nA poorly implemented DisplayPort Alt Mode port partner can indicate\nthat its pin assignment capabilities are greater than the maximum\nvalue, DP_PIN_ASSIGN_F. In this case, calls to pin_assignment_show\nwill cause a BRK exception due to an out of bounds array access.\n\nPrevent for loop in pin_assignment_show from accessing\ninvalid values in pin_assignments by adding DP_PIN_ASSIGN_MAX\nvalue in typec_dp.h and using i \u003c DP_PIN_ASSIGN_MAX as a loop\ncondition.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38392",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: convert control queue mutex to a spinlock\n\nWith VIRTCHNL2_CAP_MACFILTER enabled, the following warning is generated\non module load:\n\n[  324.701677] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:578\n[  324.701684] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1582, name: NetworkManager\n[  324.701689] preempt_count: 201, expected: 0\n[  324.701693] RCU nest depth: 0, expected: 0\n[  324.701697] 2 locks held by NetworkManager/1582:\n[  324.701702]  #0: ffffffff9f7be770 (rtnl_mutex){....}-{3:3}, at: rtnl_newlink+0x791/0x21e0\n[  324.701730]  #1: ff1100216c380368 (_xmit_ETHER){....}-{2:2}, at: __dev_open+0x3f0/0x870\n[  324.701749] Preemption disabled at:\n[  324.701752] [\u003cffffffff9cd23b9d\u003e] __dev_open+0x3dd/0x870\n[  324.701765] CPU: 30 UID: 0 PID: 1582 Comm: NetworkManager Not tainted 6.15.0-rc5+ #2 PREEMPT(voluntary)\n[  324.701771] Hardware name: Intel Corporation M50FCP2SBSTD/M50FCP2SBSTD, BIOS SE5C741.86B.01.01.0001.2211140926 11/14/2022\n[  324.701774] Call Trace:\n[  324.701777]  \u003cTASK\u003e\n[  324.701779]  dump_stack_lvl+0x5d/0x80\n[  324.701788]  ? __dev_open+0x3dd/0x870\n[  324.701793]  __might_resched.cold+0x1ef/0x23d\n\u003c..\u003e\n[  324.701818]  __mutex_lock+0x113/0x1b80\n\u003c..\u003e\n[  324.701917]  idpf_ctlq_clean_sq+0xad/0x4b0 [idpf]\n[  324.701935]  ? kasan_save_track+0x14/0x30\n[  324.701941]  idpf_mb_clean+0x143/0x380 [idpf]\n\u003c..\u003e\n[  324.701991]  idpf_send_mb_msg+0x111/0x720 [idpf]\n[  324.702009]  idpf_vc_xn_exec+0x4cc/0x990 [idpf]\n[  324.702021]  ? rcu_is_watching+0x12/0xc0\n[  324.702035]  idpf_add_del_mac_filters+0x3ed/0xb50 [idpf]\n\u003c..\u003e\n[  324.702122]  __hw_addr_sync_dev+0x1cf/0x300\n[  324.702126]  ? find_held_lock+0x32/0x90\n[  324.702134]  idpf_set_rx_mode+0x317/0x390 [idpf]\n[  324.702152]  __dev_open+0x3f8/0x870\n[  324.702159]  ? __pfx___dev_open+0x10/0x10\n[  324.702174]  __dev_change_flags+0x443/0x650\n\u003c..\u003e\n[  324.702208]  netif_change_flags+0x80/0x160\n[  324.702218]  do_setlink.isra.0+0x16a0/0x3960\n\u003c..\u003e\n[  324.702349]  rtnl_newlink+0x12fd/0x21e0\n\nThe sequence is as follows:\n\trtnl_newlink()-\u003e\n\t__dev_change_flags()-\u003e\n\t__dev_open()-\u003e\n\tdev_set_rx_mode() - \u003e  # disables BH and grabs \"dev-\u003eaddr_list_lock\"\n\tidpf_set_rx_mode() -\u003e  # proceed only if VIRTCHNL2_CAP_MACFILTER is ON\n\t__dev_uc_sync() -\u003e\n\tidpf_add_mac_filter -\u003e\n\tidpf_add_del_mac_filters -\u003e\n\tidpf_send_mb_msg() -\u003e\n\tidpf_mb_clean() -\u003e\n\tidpf_ctlq_clean_sq()   # mutex_lock(cq_lock)\n\nFix by converting cq_lock to a spinlock. All operations under the new\nlock are safe except freeing the DMA memory, which may use vunmap(). Fix\nby requesting a contiguous physical memory for the DMA mapping.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38393",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4/pNFS: Fix a race to wake on NFS_LAYOUT_DRAIN\n\nWe found a few different systems hung up in writeback waiting on the same\npage lock, and one task waiting on the NFS_LAYOUT_DRAIN bit in\npnfs_update_layout(), however the pnfs_layout_hdr's plh_outstanding count\nwas zero.\n\nIt seems most likely that this is another race between the waiter and waker\nsimilar to commit ed0172af5d6f (\"SUNRPC: Fix a race to wake a sync task\").\nFix it up by applying the advised barrier.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38395",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: gpio: Fix the out-of-bounds access to drvdata::gpiods\n\ndrvdata::gpiods is supposed to hold an array of 'gpio_desc' pointers. But\nthe memory is allocated for only one pointer. This will lead to\nout-of-bounds access later in the code if 'config::ngpios' is \u003e 1. So\nfix the code to allocate enough memory to hold 'config::ngpios' of GPIO\ndescriptors.\n\nWhile at it, also move the check for memory allocation failure to be below\nthe allocation to make it more readable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38396",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: export anon_inode_make_secure_inode() and fix secretmem LSM bypass\n\nExport anon_inode_make_secure_inode() to allow KVM guest_memfd to create\nanonymous inodes with proper security context. This replaces the current\npattern of calling alloc_anon_inode() followed by\ninode_init_security_anon() for creating security context manually.\n\nThis change also fixes a security regression in secretmem where the\nS_PRIVATE flag was not cleared after alloc_anon_inode(), causing\nLSM/SELinux checks to be bypassed for secretmem file descriptors.\n\nAs guest_memfd currently resides in the KVM module, we need to export this\nsymbol for use outside the core kernel. In the future, guest_memfd might be\nmoved to core-mm, at which point the symbols no longer would have to be\nexported. When/if that happens is still unclear.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38399",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: Fix NULL pointer dereference in core_scsi3_decode_spec_i_port()\n\nThe function core_scsi3_decode_spec_i_port(), in its error code path,\nunconditionally calls core_scsi3_lunacl_undepend_item() passing the\ndest_se_deve pointer, which may be NULL.\n\nThis can lead to a NULL pointer dereference if dest_se_deve remains\nunset.\n\nSPC-3 PR SPEC_I_PT: Unable to locate dest_tpg\nUnable to handle kernel paging request at virtual address dfff800000000012\nCall trace:\n  core_scsi3_lunacl_undepend_item+0x2c/0xf0 [target_core_mod] (P)\n  core_scsi3_decode_spec_i_port+0x120c/0x1c30 [target_core_mod]\n  core_scsi3_emulate_pro_register+0x6b8/0xcd8 [target_core_mod]\n  target_scsi3_emulate_pr_out+0x56c/0x840 [target_core_mod]\n\nFix this by adding a NULL check before calling\ncore_scsi3_lunacl_undepend_item()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38400",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: Clean up /proc/net/rpc/nfs when nfs_fs_proc_net_init() fails.\n\nsyzbot reported a warning below [1] following a fault injection in\nnfs_fs_proc_net_init(). [0]\n\nWhen nfs_fs_proc_net_init() fails, /proc/net/rpc/nfs is not removed.\n\nLater, rpc_proc_exit() tries to remove /proc/net/rpc, and the warning\nis logged as the directory is not empty.\n\nLet's handle the error of nfs_fs_proc_net_init() properly.\n\n[0]:\nFAULT_INJECTION: forcing a failure.\nname failslab, interval 1, probability 0, space 0, times 0\nCPU: 1 UID: 0 PID: 6120 Comm: syz.2.27 Not tainted 6.16.0-rc1-syzkaller-00010-g2c4a1f3fe03e #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nCall Trace:\n \u003cTASK\u003e\n  dump_stack_lvl (lib/dump_stack.c:123)\n should_fail_ex (lib/fault-inject.c:73 lib/fault-inject.c:174)\n should_failslab (mm/failslab.c:46)\n kmem_cache_alloc_noprof (mm/slub.c:4178 mm/slub.c:4204)\n __proc_create (fs/proc/generic.c:427)\n proc_create_reg (fs/proc/generic.c:554)\n proc_create_net_data (fs/proc/proc_net.c:120)\n nfs_fs_proc_net_init (fs/nfs/client.c:1409)\n nfs_net_init (fs/nfs/inode.c:2600)\n ops_init (net/core/net_namespace.c:138)\n setup_net (net/core/net_namespace.c:443)\n copy_net_ns (net/core/net_namespace.c:576)\n create_new_namespaces (kernel/nsproxy.c:110)\n unshare_nsproxy_namespaces (kernel/nsproxy.c:218 (discriminator 4))\n ksys_unshare (kernel/fork.c:3123)\n __x64_sys_unshare (kernel/fork.c:3190)\n do_syscall_64 (arch/x86/entry/syscall_64.c:63 arch/x86/entry/syscall_64.c:94)\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n \u003c/TASK\u003e\n\n[1]:\nremove_proc_entry: removing non-empty directory 'net/rpc', leaking at least 'nfs'\n WARNING: CPU: 1 PID: 6120 at fs/proc/generic.c:727 remove_proc_entry+0x45e/0x530 fs/proc/generic.c:727\nModules linked in:\nCPU: 1 UID: 0 PID: 6120 Comm: syz.2.27 Not tainted 6.16.0-rc1-syzkaller-00010-g2c4a1f3fe03e #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\n RIP: 0010:remove_proc_entry+0x45e/0x530 fs/proc/generic.c:727\nCode: 3c 02 00 0f 85 85 00 00 00 48 8b 93 d8 00 00 00 4d 89 f0 4c 89 e9 48 c7 c6 40 ba a2 8b 48 c7 c7 60 b9 a2 8b e8 33 81 1d ff 90 \u003c0f\u003e 0b 90 90 e9 5f fe ff ff e8 04 69 5e ff 90 48 b8 00 00 00 00 00\nRSP: 0018:ffffc90003637b08 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffff88805f534140 RCX: ffffffff817a92c8\nRDX: ffff88807da99e00 RSI: ffffffff817a92d5 RDI: 0000000000000001\nRBP: ffff888033431ac0 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000001 R12: ffff888033431a00\nR13: ffff888033431ae4 R14: ffff888033184724 R15: dffffc0000000000\nFS:  0000555580328500(0000) GS:ffff888124a62000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f71733743e0 CR3: 000000007f618000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  sunrpc_exit_net+0x46/0x90 net/sunrpc/sunrpc_syms.c:76\n  ops_exit_list net/core/net_namespace.c:200 [inline]\n  ops_undo_list+0x2eb/0xab0 net/core/net_namespace.c:253\n  setup_net+0x2e1/0x510 net/core/net_namespace.c:457\n  copy_net_ns+0x2a6/0x5f0 net/core/net_namespace.c:574\n  create_new_namespaces+0x3ea/0xa90 kernel/nsproxy.c:110\n  unshare_nsproxy_namespaces+0xc0/0x1f0 kernel/nsproxy.c:218\n  ksys_unshare+0x45b/0xa40 kernel/fork.c:3121\n  __do_sys_unshare kernel/fork.c:3192 [inline]\n  __se_sys_unshare kernel/fork.c:3190 [inline]\n  __x64_sys_unshare+0x31/0x40 kernel/fork.c:3190\n  do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n  do_syscall_64+0xcd/0x490 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fa1a6b8e929\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38401",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtk-sd: Prevent memory corruption from DMA map failure\n\nIf msdc_prepare_data() fails to map the DMA region, the request is\nnot prepared for data receiving, but msdc_start_data() proceeds\nthe DMA with previous setting.\nSince this will lead a memory corruption, we have to stop the\nrequest operation soon after the msdc_prepare_data() fails to\nprepare it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38403",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock/vmci: Clear the vmci transport packet properly when initializing it\n\nIn vmci_transport_packet_init memset the vmci_transport_packet before\npopulating the fields to avoid any uninitialised data being left in the\nstructure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38404",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: displayport: Fix potential deadlock\n\nThe deadlock can occur due to a recursive lock acquisition of\n`cros_typec_altmode_data::mutex`.\nThe call chain is as follows:\n1. cros_typec_altmode_work() acquires the mutex\n2. typec_altmode_vdm() -\u003e dp_altmode_vdm() -\u003e\n3. typec_altmode_exit() -\u003e cros_typec_altmode_exit()\n4. cros_typec_altmode_exit() attempts to acquire the mutex again\n\nTo prevent this, defer the `typec_altmode_exit()` call by scheduling\nit rather than calling it directly from within the mutex-protected\ncontext.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38406",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath6kl: remove WARN on bad firmware input\n\nIf the firmware gives bad input, that's nothing to do with\nthe driver's stack at this point etc., so the WARN_ON()\ndoesn't add any value. Additionally, this is one of the\ntop syzbot reports now. Just print a message, and as an\nadded bonus, print the sizes too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38409",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm: Fix another leak in the submit error path\n\nput_unused_fd() doesn't free the installed file, if we've already done\nfd_install().  So we need to also free the sync_file.\n\nPatchwork: https://patchwork.freedesktop.org/patch/653583/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38410",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm: Fix a fence leak in submit error path\n\nIn error paths, we could unref the submit without calling\ndrm_sched_entity_push_job(), so msm_job_free() will never get\ncalled.  Since drm_sched_job_cleanup() will NULL out the\ns_fence, we can use that to detect this case.\n\nPatchwork: https://patchwork.freedesktop.org/patch/653584/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38412",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell-wmi-sysman: Fix WMI data block retrieval in sysfs callbacks\n\nAfter retrieving WMI data blocks in sysfs callbacks, check for the\nvalidity of them before dereferencing their content.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38414",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix GCC_GCC_PCIE_HOT_RST definition for WCN7850\n\nGCC_GCC_PCIE_HOT_RST is wrongly defined for WCN7850, causing kernel crash\non some specific platforms.\n\nSince this register is divergent for WCN7850 and QCN9274, move it to\nregister table to allow different definitions. Then correct the register\naddress for WCN7850 to fix this issue.\n\nNote IPQ5332 is not affected as it is not PCIe based device.\n\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38415",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSquashfs: check return result of sb_min_blocksize\n\nSyzkaller reports an \"UBSAN: shift-out-of-bounds in squashfs_bio_read\" bug.\n\nSyzkaller forks multiple processes which after mounting the Squashfs\nfilesystem, issues an ioctl(\"/dev/loop0\", LOOP_SET_BLOCK_SIZE, 0x8000). \nNow if this ioctl occurs at the same time another process is in the\nprocess of mounting a Squashfs filesystem on /dev/loop0, the failure\noccurs.  When this happens the following code in squashfs_fill_super()\nfails.\n\n----\nmsblk-\u003edevblksize = sb_min_blocksize(sb, SQUASHFS_DEVBLK_SIZE);\nmsblk-\u003edevblksize_log2 = ffz(~msblk-\u003edevblksize);\n----\n\nsb_min_blocksize() returns 0, which means msblk-\u003edevblksize is set to 0.\n\nAs a result, ffz(~msblk-\u003edevblksize) returns 64, and msblk-\u003edevblksize_log2\nis set to 64.\n\nThis subsequently causes the\n\nUBSAN: shift-out-of-bounds in fs/squashfs/block.c:195:36\nshift exponent 64 is too large for 64-bit type 'u64' (aka\n'unsigned long long')\n\nThis commit adds a check for a 0 return by sb_min_blocksize().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38416",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: nci: uart: Set tty-\u003edisc_data only in success path\n\nSetting tty-\u003edisc_data before opening the NCI device means we need to\nclean it up on error paths.  This also opens some short window if device\nstarts sending data, even before NCIUARTSETDRIVER IOCTL succeeded\n(broken hardware?).  Close the window by exposing tty-\u003edisc_data only on\nthe success path, when opening of the NCI device and try_module_get()\nsucceeds.\n\nThe code differs in error path in one aspect: tty-\u003edisc_data won't be\never assigned thus NULL-ified.  This however should not be relevant\ndifference, because of \"tty-\u003edisc_data=NULL\" in nci_uart_tty_open().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38420",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: carl9170: do not ping device which has failed to load firmware\n\nSyzkaller reports [1, 2] crashes caused by an attempts to ping\nthe device which has failed to load firmware. Since such a device\ndoesn't pass 'ieee80211_register_hw()', an internal workqueue\nmanaged by 'ieee80211_queue_work()' is not yet created and an\nattempt to queue work on it causes null-ptr-deref.\n\n[1] https://syzkaller.appspot.com/bug?extid=9a4aec827829942045ff\n[2] https://syzkaller.appspot.com/bug?extid=0d8afba53e8fb2633217",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38424",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix sample vs do_exit()\n\nBaisheng Gao reported an ARM64 crash, which Mark decoded as being a\nsynchronous external abort -- most likely due to trying to access\nMMIO in bad ways.\n\nThe crash further shows perf trying to do a user stack sample while in\nexit_mmap()'s tlb_finish_mmu() -- i.e. while tearing down the address\nspace it is trying to access.\n\nIt turns out that we stop perf after we tear down the userspace mm; a\nreceipie for disaster, since perf likes to access userspace for\nvarious reasons.\n\nFlip this order by moving up where we stop perf in do_exit().\n\nAdditionally, harden PERF_SAMPLE_CALLCHAIN and PERF_SAMPLE_STACK_USER\nto abort when the current task does not have an mm (exit_mm() makes\nsure to set current-\u003emm = NULL; before commencing with the actual\nteardown). Such that CPU wide events don't trip on this same problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38425",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: tegra: check msg length in SMBUS block read\n\nFor SMBUS block read, do not continue to read if the message length\npassed from the device is '0' or greater than the maximum allowed bytes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38426",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Add basic validation for RAS header\n\nIf RAS header read from EEPROM is corrupted, it could result in trying\nto allocate huge memory for reading the records. Add some validation to\nheader fields.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38428",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: ims-pcu - check record size in ims_pcu_flash_firmware()\n\nThe \"len\" variable comes from the firmware and we generally do\ntrust firmware, but it's always better to double check.  If the \"len\"\nis too large it could result in memory corruption when we do\n\"memcpy(fragment-\u003edata, rec-\u003edata, len);\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38429",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbus: mhi: ep: Update read pointer only after buffer is written\n\nInside mhi_ep_ring_add_element, the read pointer (rd_offset) is updated\nbefore the buffer is written, potentially causing race conditions where\nthe host sees an updated read pointer before the buffer is actually\nwritten. Updating rd_offset prematurely can lead to the host accessing\nan uninitialized or incomplete element, resulting in data corruption.\n\nInvoke the buffer write before updating rd_offset to ensure the element\nis fully written before signaling its availability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38430",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: nfsd4_spo_must_allow() must check this is a v4 compound request\n\nIf the request being processed is not a v4 compound request, then\nexamining the cstate can have undefined results.\n\nThis patch adds a check that the rpc procedure being executed\n(rq_procinfo) is the NFSPROC4_COMPOUND procedure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38436",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/scheduler: signal scheduled fence when kill job\n\nWhen an entity from application B is killed, drm_sched_entity_kill()\nremoves all jobs belonging to that entity through\ndrm_sched_entity_kill_jobs_work(). If application A's job depends on a\nscheduled fence from application B's job, and that fence is not properly\nsignaled during the killing process, application A's dependency cannot be\ncleared.\n\nThis leads to application A hanging indefinitely while waiting for a\ndependency that will never be resolved. Fix this issue by ensuring that\nscheduled fences are properly signaled when an entity is killed, allowing\ndependent applications to continue execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38443",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: fix uaf in nbd_genl_connect() error path\n\nThere is a use-after-free issue in nbd:\n\nblock nbd6: Receive control failed (result -104)\nblock nbd6: shutting down sockets\n==================================================================\nBUG: KASAN: slab-use-after-free in recv_work+0x694/0xa80 drivers/block/nbd.c:1022\nWrite of size 4 at addr ffff8880295de478 by task kworker/u33:0/67\n\nCPU: 2 UID: 0 PID: 67 Comm: kworker/u33:0 Not tainted 6.15.0-rc5-syzkaller-00123-g2c89c1b655c0 #0 PREEMPT(full)\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nWorkqueue: nbd6-recv recv_work\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xc3/0x670 mm/kasan/report.c:521\n kasan_report+0xe0/0x110 mm/kasan/report.c:634\n check_region_inline mm/kasan/generic.c:183 [inline]\n kasan_check_range+0xef/0x1a0 mm/kasan/generic.c:189\n instrument_atomic_read_write include/linux/instrumented.h:96 [inline]\n atomic_dec include/linux/atomic/atomic-instrumented.h:592 [inline]\n recv_work+0x694/0xa80 drivers/block/nbd.c:1022\n process_one_work+0x9cc/0x1b70 kernel/workqueue.c:3238\n process_scheduled_works kernel/workqueue.c:3319 [inline]\n worker_thread+0x6c8/0xf10 kernel/workqueue.c:3400\n kthread+0x3c2/0x780 kernel/kthread.c:464\n ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:153\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245\n \u003c/TASK\u003e\n\nnbd_genl_connect() does not properly stop the device on certain\nerror paths after nbd_start_device() has been called. This causes\nthe error path to put nbd-\u003econfig while recv_work continue to use\nthe config after putting it, leading to use-after-free in recv_work.\n\nThis patch moves nbd_start_device() after the backend file creation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38448",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: u_serial: Fix race condition in TTY wakeup\n\nA race condition occurs when gs_start_io() calls either gs_start_rx() or\ngs_start_tx(), as those functions briefly drop the port_lock for\nusb_ep_queue(). This allows gs_close() and gserial_disconnect() to clear\nport.tty and port_usb, respectively.\n\nUse the null-safe TTY Port helper function to wake up TTY.\n\nExample\n  CPU1:\t\t\t      CPU2:\n  gserial_connect() // lock\n  \t\t\t      gs_close() // await lock\n  gs_start_rx()     // unlock\n  usb_ep_queue()\n  \t\t\t      gs_close() // lock, reset port.tty and unlock\n  gs_start_rx()     // lock\n  tty_wakeup()      // NPE",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38449",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/gem: Acquire references on GEM handles for framebuffers\n\nA GEM handle can be released while the GEM buffer object is attached\nto a DRM framebuffer. This leads to the release of the dma-buf backing\nthe buffer object, if any. [1] Trying to use the framebuffer in further\nmode-setting operations leads to a segmentation fault. Most easily\nhappens with driver that use shadow planes for vmap-ing the dma-buf\nduring a page flip. An example is shown below.\n\n[  156.791968] ------------[ cut here ]------------\n[  156.796830] WARNING: CPU: 2 PID: 2255 at drivers/dma-buf/dma-buf.c:1527 dma_buf_vmap+0x224/0x430\n[...]\n[  156.942028] RIP: 0010:dma_buf_vmap+0x224/0x430\n[  157.043420] Call Trace:\n[  157.045898]  \u003cTASK\u003e\n[  157.048030]  ? show_trace_log_lvl+0x1af/0x2c0\n[  157.052436]  ? show_trace_log_lvl+0x1af/0x2c0\n[  157.056836]  ? show_trace_log_lvl+0x1af/0x2c0\n[  157.061253]  ? drm_gem_shmem_vmap+0x74/0x710\n[  157.065567]  ? dma_buf_vmap+0x224/0x430\n[  157.069446]  ? __warn.cold+0x58/0xe4\n[  157.073061]  ? dma_buf_vmap+0x224/0x430\n[  157.077111]  ? report_bug+0x1dd/0x390\n[  157.080842]  ? handle_bug+0x5e/0xa0\n[  157.084389]  ? exc_invalid_op+0x14/0x50\n[  157.088291]  ? asm_exc_invalid_op+0x16/0x20\n[  157.092548]  ? dma_buf_vmap+0x224/0x430\n[  157.096663]  ? dma_resv_get_singleton+0x6d/0x230\n[  157.101341]  ? __pfx_dma_buf_vmap+0x10/0x10\n[  157.105588]  ? __pfx_dma_resv_get_singleton+0x10/0x10\n[  157.110697]  drm_gem_shmem_vmap+0x74/0x710\n[  157.114866]  drm_gem_vmap+0xa9/0x1b0\n[  157.118763]  drm_gem_vmap_unlocked+0x46/0xa0\n[  157.123086]  drm_gem_fb_vmap+0xab/0x300\n[  157.126979]  drm_atomic_helper_prepare_planes.part.0+0x487/0xb10\n[  157.133032]  ? lockdep_init_map_type+0x19d/0x880\n[  157.137701]  drm_atomic_helper_commit+0x13d/0x2e0\n[  157.142671]  ? drm_atomic_nonblocking_commit+0xa0/0x180\n[  157.147988]  drm_mode_atomic_ioctl+0x766/0xe40\n[...]\n[  157.346424] ---[ end trace 0000000000000000 ]---\n\nAcquiring GEM handles for the framebuffer's GEM buffer objects prevents\nthis from happening. The framebuffer's cleanup later puts the handle\nreferences.\n\nCommit 1a148af06000 (\"drm/gem-shmem: Use dma_buf from GEM object\ninstance\") triggers the segmentation fault easily by using the dma-buf\nfield more widely. The underlying issue with reference counting has\nbeen present before.\n\nv2:\n- acquire the handle instead of the BO (Christian)\n- fix comment style (Christian)\n- drop the Fixes tag (Christian)\n- rename err_ gotos\n- add missing Link tag",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38455",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: Reject SEV{-ES} intra host migration if vCPU creation is in-flight\n\nReject migration of SEV{-ES} state if either the source or destination VM\nis actively creating a vCPU, i.e. if kvm_vm_ioctl_create_vcpu() is in the\nsection between incrementing created_vcpus and online_vcpus.  The bulk of\nvCPU creation runs _outside_ of kvm-\u003elock to allow creating multiple vCPUs\nin parallel, and so sev_info.es_active can get toggled from false=\u003etrue in\nthe destination VM after (or during) svm_vcpu_create(), resulting in an\nSEV{-ES} VM effectively having a non-SEV{-ES} vCPU.\n\nThe issue manifests most visibly as a crash when trying to free a vCPU's\nNULL VMSA page in an SEV-ES VM, but any number of things can go wrong.\n\n  BUG: unable to handle page fault for address: ffffebde00000000\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: Oops: 0000 [#1] SMP KASAN NOPTI\n  CPU: 227 UID: 0 PID: 64063 Comm: syz.5.60023 Tainted: G     U     O        6.15.0-smp-DEV #2 NONE\n  Tainted: [U]=USER, [O]=OOT_MODULE\n  Hardware name: Google, Inc. Arcadia_IT_80/Arcadia_IT_80, BIOS 12.52.0-0 10/28/2024\n  RIP: 0010:constant_test_bit arch/x86/include/asm/bitops.h:206 [inline]\n  RIP: 0010:arch_test_bit arch/x86/include/asm/bitops.h:238 [inline]\n  RIP: 0010:_test_bit include/asm-generic/bitops/instrumented-non-atomic.h:142 [inline]\n  RIP: 0010:PageHead include/linux/page-flags.h:866 [inline]\n  RIP: 0010:___free_pages+0x3e/0x120 mm/page_alloc.c:5067\n  Code: \u003c49\u003e f7 06 40 00 00 00 75 05 45 31 ff eb 0c 66 90 4c 89 f0 4c 39 f0\n  RSP: 0018:ffff8984551978d0 EFLAGS: 00010246\n  RAX: 0000777f80000001 RBX: 0000000000000000 RCX: ffffffff918aeb98\n  RDX: 0000000000000000 RSI: 0000000000000008 RDI: ffffebde00000000\n  RBP: 0000000000000000 R08: ffffebde00000007 R09: 1ffffd7bc0000000\n  R10: dffffc0000000000 R11: fffff97bc0000001 R12: dffffc0000000000\n  R13: ffff8983e19751a8 R14: ffffebde00000000 R15: 1ffffd7bc0000000\n  FS:  0000000000000000(0000) GS:ffff89ee661d3000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: ffffebde00000000 CR3: 000000793ceaa000 CR4: 0000000000350ef0\n  DR0: 0000000000000000 DR1: 0000000000000b5f DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n  Call Trace:\n   \u003cTASK\u003e\n   sev_free_vcpu+0x413/0x630 arch/x86/kvm/svm/sev.c:3169\n   svm_vcpu_free+0x13a/0x2a0 arch/x86/kvm/svm/svm.c:1515\n   kvm_arch_vcpu_destroy+0x6a/0x1d0 arch/x86/kvm/x86.c:12396\n   kvm_vcpu_destroy virt/kvm/kvm_main.c:470 [inline]\n   kvm_destroy_vcpus+0xd1/0x300 virt/kvm/kvm_main.c:490\n   kvm_arch_destroy_vm+0x636/0x820 arch/x86/kvm/x86.c:12895\n   kvm_put_kvm+0xb8e/0xfb0 virt/kvm/kvm_main.c:1310\n   kvm_vm_release+0x48/0x60 virt/kvm/kvm_main.c:1369\n   __fput+0x3e4/0x9e0 fs/file_table.c:465\n   task_work_run+0x1a9/0x220 kernel/task_work.c:227\n   exit_task_work include/linux/task_work.h:40 [inline]\n   do_exit+0x7f0/0x25b0 kernel/exit.c:953\n   do_group_exit+0x203/0x2d0 kernel/exit.c:1102\n   get_signal+0x1357/0x1480 kernel/signal.c:3034\n   arch_do_signal_or_restart+0x40/0x690 arch/x86/kernel/signal.c:337\n   exit_to_user_mode_loop kernel/entry/common.c:111 [inline]\n   exit_to_user_mode_prepare include/linux/entry-common.h:329 [inline]\n   __syscall_exit_to_user_mode_work kernel/entry/common.c:207 [inline]\n   syscall_exit_to_user_mode+0x67/0xb0 kernel/entry/common.c:218\n   do_syscall_64+0x7c/0x150 arch/x86/entry/syscall_64.c:100\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n  RIP: 0033:0x7f87a898e969\n   \u003c/TASK\u003e\n  Modules linked in: gq(O)\n  gsmi: Log Shutdown Reason 0x03\n  CR2: ffffebde00000000\n  ---[ end trace 0000000000000000 ]---\n\nDeliberately don't check for a NULL VMSA when freeing the vCPU, as crashing\nthe host is likely desirable due to the VMSA being consumed by hardware.\nE.g. if KVM manages to allow VMRUN on the vCPU, hardware may read/write a\nbogus VMSA page.  Accessing P\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38457",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: Abort __tc_modify_qdisc if parent class does not exist\n\nLion's patch [1] revealed an ancient bug in the qdisc API.\nWhenever a user creates/modifies a qdisc specifying as a parent another\nqdisc, the qdisc API will, during grafting, detect that the user is\nnot trying to attach to a class and reject. However grafting is\nperformed after qdisc_create (and thus the qdiscs' init callback) is\nexecuted. In qdiscs that eventually call qdisc_tree_reduce_backlog\nduring init or change (such as fq, hhf, choke, etc), an issue\narises. For example, executing the following commands:\n\nsudo tc qdisc add dev lo root handle a: htb default 2\nsudo tc qdisc add dev lo parent a: handle beef fq\n\nQdiscs such as fq, hhf, choke, etc unconditionally invoke\nqdisc_tree_reduce_backlog() in their control path init() or change() which\nthen causes a failure to find the child class; however, that does not stop\nthe unconditional invocation of the assumed child qdisc's qlen_notify with\na null class. All these qdiscs make the assumption that class is non-null.\n\nThe solution is ensure that qdisc_leaf() which looks up the parent\nclass, and is invoked prior to qdisc_create(), should return failure on\nnot finding the class.\nIn this patch, we leverage qdisc_leaf to return ERR_PTRs whenever the\nparentid doesn't correspond to a class, so that we can detect it\nearlier on and abort before qdisc_create is called.\n\n[1] https://lore.kernel.org/netdev/d912cbd7-193b-4269-9857-525bee8bbb6a@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38460",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: clip: Fix potential null-ptr-deref in to_atmarpd().\n\natmarpd is protected by RTNL since commit f3a0592b37b8 (\"[ATM]: clip\ncauses unregister hang\").\n\nHowever, it is not enough because to_atmarpd() is called without RTNL,\nespecially clip_neigh_solicit() / neigh_ops-\u003esolicit() is unsleepable.\n\nAlso, there is no RTNL dependency around atmarpd.\n\nLet's use a private mutex and RCU to protect access to atmarpd in\nto_atmarpd().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38461",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: Fix transport_* TOCTOU\n\nTransport assignment may race with module unload. Protect new_transport\nfrom becoming a stale pointer.\n\nThis also takes care of an insecure call in vsock_use_local_transport();\nadd a lockdep assert.\n\nBUG: unable to handle page fault for address: fffffbfff8056000\nOops: Oops: 0000 [#1] SMP KASAN\nRIP: 0010:vsock_assign_transport+0x366/0x600\nCall Trace:\n vsock_connect+0x59c/0xc40\n __sys_connect+0xe8/0x100\n __x64_sys_connect+0x6e/0xc0\n do_syscall_64+0x92/0x1c0\n entry_SYSCALL_64_after_hwframe+0x4b/0x53",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38462",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: Fix transport_{g2h,h2g} TOCTOU\n\nvsock_find_cid() and vsock_dev_do_ioctl() may race with module unload.\ntransport_{g2h,h2g} may become NULL after the NULL check.\n\nIntroduce vsock_transport_local_cid() to protect from a potential\nnull-ptr-deref.\n\nKASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f]\nRIP: 0010:vsock_find_cid+0x47/0x90\nCall Trace:\n __vsock_bind+0x4b2/0x720\n vsock_bind+0x90/0xe0\n __sys_bind+0x14d/0x1e0\n __x64_sys_bind+0x6e/0xc0\n do_syscall_64+0x92/0x1c0\n entry_SYSCALL_64_after_hwframe+0x4b/0x53\n\nKASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f]\nRIP: 0010:vsock_dev_do_ioctl.isra.0+0x58/0xf0\nCall Trace:\n __x64_sys_ioctl+0x12d/0x190\n do_syscall_64+0x92/0x1c0\n entry_SYSCALL_64_after_hwframe+0x4b/0x53",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38463",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Correct signedness in skb remaining space calculation\n\nSyzkaller reported a bug [1] where sk-\u003esk_forward_alloc can overflow.\n\nWhen we send data, if an skb exists at the tail of the write queue, the\nkernel will attempt to append the new data to that skb. However, the code\nthat checks for available space in the skb is flawed:\n'''\ncopy = size_goal - skb-\u003elen\n'''\n\nThe types of the variables involved are:\n'''\ncopy: ssize_t (s64 on 64-bit systems)\nsize_goal: int\nskb-\u003elen: unsigned int\n'''\n\nDue to C's type promotion rules, the signed size_goal is converted to an\nunsigned int to match skb-\u003elen before the subtraction. The result is an\nunsigned int.\n\nWhen this unsigned int result is then assigned to the s64 copy variable,\nit is zero-extended, preserving its non-negative value. Consequently, copy\nis always \u003e= 0.\n\nAssume we are sending 2GB of data and size_goal has been adjusted to a\nvalue smaller than skb-\u003elen. The subtraction will result in copy holding a\nvery large positive integer. In the subsequent logic, this large value is\nused to update sk-\u003esk_forward_alloc, which can easily cause it to overflow.\n\nThe syzkaller reproducer uses TCP_REPAIR to reliably create this\ncondition. However, this can also occur in real-world scenarios. The\ntcp_bound_to_half_wnd() function can also reduce size_goal to a small\nvalue. This would cause the subsequent tcp_wmem_schedule() to set\nsk-\u003esk_forward_alloc to a value close to INT_MAX. Further memory\nallocation requests would then cause sk_forward_alloc to wrap around and\nbecome negative.\n\n[1]: https://syzkaller.appspot.com/bug?extid=de6565462ab540f50e47",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38465",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetlink: Fix wraparounds of sk-\u003esk_rmem_alloc.\n\nNetlink has this pattern in some places\n\n  if (atomic_read(\u0026sk-\u003esk_rmem_alloc) \u003e sk-\u003esk_rcvbuf)\n  \tatomic_add(skb-\u003etruesize, \u0026sk-\u003esk_rmem_alloc);\n\n, which has the same problem fixed by commit 5a465a0da13e (\"udp:\nFix multiple wraparounds of sk-\u003esk_rmem_alloc.\").\n\nFor example, if we set INT_MAX to SO_RCVBUFFORCE, the condition\nis always false as the two operands are of int.\n\nThen, a single socket can eat as many skb as possible until OOM\nhappens, and we can see multiple wraparounds of sk-\u003esk_rmem_alloc.\n\nLet's fix it by using atomic_add_return() and comparing the two\nvariables as unsigned int.\n\nBefore:\n  [root@fedora ~]# ss -f netlink\n  Recv-Q      Send-Q Local Address:Port                Peer Address:Port\n  -1668710080 0               rtnl:nl_wraparound/293               *\n\nAfter:\n  [root@fedora ~]# ss -f netlink\n  Recv-Q     Send-Q Local Address:Port                Peer Address:Port\n  2147483072 0               rtnl:nl_wraparound/290               *\n  ^\n  `--- INT_MAX - 576",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38467",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/exynos: exynos7_drm_decon: add vblank check in IRQ handling\n\nIf there's support for another console device (such as a TTY serial),\nthe kernel occasionally panics during boot. The panic message and a\nrelevant snippet of the call stack is as follows:\n\n  Unable to handle kernel NULL pointer dereference at virtual address 000000000000000\n  Call trace:\n    drm_crtc_handle_vblank+0x10/0x30 (P)\n    decon_irq_handler+0x88/0xb4\n    [...]\n\nOtherwise, the panics don't happen. This indicates that it's some sort\nof race condition.\n\nAdd a check to validate if the drm device can handle vblanks before\ncalling drm_crtc_handle_vblank() to avoid this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38468",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: Return NULL when htb_lookup_leaf encounters an empty rbtree\n\nhtb_lookup_leaf has a BUG_ON that can trigger with the following:\n\ntc qdisc del dev lo root\ntc qdisc add dev lo root handle 1: htb default 1\ntc class add dev lo parent 1: classid 1:1 htb rate 64bit\ntc qdisc add dev lo parent 1:1 handle 2: netem\ntc qdisc add dev lo parent 2:1 handle 3: blackhole\nping -I lo -c1 -W0.001 127.0.0.1\n\nThe root cause is the following:\n\n1. htb_dequeue calls htb_dequeue_tree which calls the dequeue handler on\n   the selected leaf qdisc\n2. netem_dequeue calls enqueue on the child qdisc\n3. blackhole_enqueue drops the packet and returns a value that is not\n   just NET_XMIT_SUCCESS\n4. Because of this, netem_dequeue calls qdisc_tree_reduce_backlog, and\n   since qlen is now 0, it calls htb_qlen_notify -\u003e htb_deactivate -\u003e\n   htb_deactiviate_prios -\u003e htb_remove_class_from_row -\u003e htb_safe_rb_erase\n5. As this is the only class in the selected hprio rbtree,\n   __rb_change_child in __rb_erase_augmented sets the rb_root pointer to\n   NULL\n6. Because blackhole_dequeue returns NULL, netem_dequeue returns NULL,\n   which causes htb_dequeue_tree to call htb_lookup_leaf with the same\n   hprio rbtree, and fail the BUG_ON\n\nThe function graph for this scenario is shown here:\n 0)               |  htb_enqueue() {\n 0) + 13.635 us   |    netem_enqueue();\n 0)   4.719 us    |    htb_activate_prios();\n 0) # 2249.199 us |  }\n 0)               |  htb_dequeue() {\n 0)   2.355 us    |    htb_lookup_leaf();\n 0)               |    netem_dequeue() {\n 0) + 11.061 us   |      blackhole_enqueue();\n 0)               |      qdisc_tree_reduce_backlog() {\n 0)               |        qdisc_lookup_rcu() {\n 0)   1.873 us    |          qdisc_match_from_root();\n 0)   6.292 us    |        }\n 0)   1.894 us    |        htb_search();\n 0)               |        htb_qlen_notify() {\n 0)   2.655 us    |          htb_deactivate_prios();\n 0)   6.933 us    |        }\n 0) + 25.227 us   |      }\n 0)   1.983 us    |      blackhole_dequeue();\n 0) + 86.553 us   |    }\n 0) # 2932.761 us |    qdisc_warn_nonwc();\n 0)               |    htb_lookup_leaf() {\n 0)               |      BUG_ON();\n ------------------------------------------\n\nThe full original bug report can be seen here [1].\n\nWe can fix this just by returning NULL instead of the BUG_ON,\nas htb_dequeue_tree returns NULL when htb_lookup_leaf returns\nNULL.\n\n[1] https://lore.kernel.org/netdev/pF5XOOIim0IuEfhI-SOxTgRvNoDwuux7UHKnE_Y5-zVd4wmGvNk2ceHjKb8ORnzw0cGwfmVu42g9dL7XyJLf1NEzaztboTWcm0Ogxuojoeo=@willsroot.io/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38470",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: vlan: fix VLAN 0 refcount imbalance of toggling filtering during runtime\n\nAssuming the \"rx-vlan-filter\" feature is enabled on a net device, the\n8021q module will automatically add or remove VLAN 0 when the net device\nis put administratively up or down, respectively. There are a couple of\nproblems with the above scheme.\n\nThe first problem is a memory leak that can happen if the \"rx-vlan-filter\"\nfeature is disabled while the device is running:\n\n # ip link add bond1 up type bond mode 0\n # ethtool -K bond1 rx-vlan-filter off\n # ip link del dev bond1\n\nWhen the device is put administratively down the \"rx-vlan-filter\"\nfeature is disabled, so the 8021q module will not remove VLAN 0 and the\nmemory will be leaked [1].\n\nAnother problem that can happen is that the kernel can automatically\ndelete VLAN 0 when the device is put administratively down despite not\nadding it when the device was put administratively up since during that\ntime the \"rx-vlan-filter\" feature was disabled. null-ptr-unref or\nbug_on[2] will be triggered by unregister_vlan_dev() for refcount\nimbalance if toggling filtering during runtime:\n\n$ ip link add bond0 type bond mode 0\n$ ip link add link bond0 name vlan0 type vlan id 0 protocol 802.1q\n$ ethtool -K bond0 rx-vlan-filter off\n$ ifconfig bond0 up\n$ ethtool -K bond0 rx-vlan-filter on\n$ ifconfig bond0 down\n$ ip link del vlan0\n\nRoot cause is as below:\nstep1: add vlan0 for real_dev, such as bond, team.\nregister_vlan_dev\n    vlan_vid_add(real_dev,htons(ETH_P_8021Q),0) //refcnt=1\nstep2: disable vlan filter feature and enable real_dev\nstep3: change filter from 0 to 1\nvlan_device_event\n    vlan_filter_push_vids\n        ndo_vlan_rx_add_vid //No refcnt added to real_dev vlan0\nstep4: real_dev down\nvlan_device_event\n    vlan_vid_del(dev, htons(ETH_P_8021Q), 0); //refcnt=0\n        vlan_info_rcu_free //free vlan0\nstep5: delete vlan0\nunregister_vlan_dev\n    BUG_ON(!vlan_info); //vlan_info is null\n\nFix both problems by noting in the VLAN info whether VLAN 0 was\nautomatically added upon NETDEV_UP and based on that decide whether it\nshould be deleted upon NETDEV_DOWN, regardless of the state of the\n\"rx-vlan-filter\" feature.\n\n[1]\nunreferenced object 0xffff8880068e3100 (size 256):\n  comm \"ip\", pid 384, jiffies 4296130254\n  hex dump (first 32 bytes):\n    00 20 30 0d 80 88 ff ff 00 00 00 00 00 00 00 00  . 0.............\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc 81ce31fa):\n    __kmalloc_cache_noprof+0x2b5/0x340\n    vlan_vid_add+0x434/0x940\n    vlan_device_event.cold+0x75/0xa8\n    notifier_call_chain+0xca/0x150\n    __dev_notify_flags+0xe3/0x250\n    rtnl_configure_link+0x193/0x260\n    rtnl_newlink_create+0x383/0x8e0\n    __rtnl_newlink+0x22c/0xa40\n    rtnl_newlink+0x627/0xb00\n    rtnetlink_rcv_msg+0x6fb/0xb70\n    netlink_rcv_skb+0x11f/0x350\n    netlink_unicast+0x426/0x710\n    netlink_sendmsg+0x75a/0xc20\n    __sock_sendmsg+0xc1/0x150\n    ____sys_sendmsg+0x5aa/0x7b0\n    ___sys_sendmsg+0xfc/0x180\n\n[2]\nkernel BUG at net/8021q/vlan.c:99!\nOops: invalid opcode: 0000 [#1] SMP KASAN PTI\nCPU: 0 UID: 0 PID: 382 Comm: ip Not tainted 6.16.0-rc3 #61 PREEMPT(voluntary)\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nRIP: 0010:unregister_vlan_dev (net/8021q/vlan.c:99 (discriminator 1))\nRSP: 0018:ffff88810badf310 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88810da84000 RCX: ffffffffb47ceb9a\nRDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff88810e8b43c8\nRBP: 0000000000000000 R08: 0000000000000000 R09: fffffbfff6cefe80\nR10: ffffffffb677f407 R11: ffff88810badf3c0 R12: ffff88810e8b4000\nR13: 0000000000000000 R14: ffff88810642a5c0 R15: 000000000000017e\nFS:  00007f1ff68c20c0(0000) GS:ffff888163a24000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f1ff5dad240 CR3: 0000000107e56000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38471",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: always refresh the queue when reading sock\n\nAfter recent changes in net-next TCP compacts skbs much more\naggressively. This unearthed a bug in TLS where we may try\nto operate on an old skb when checking if all skbs in the\nqueue have matching decrypt state and geometry.\n\n    BUG: KASAN: slab-use-after-free in tls_strp_check_rcv+0x898/0x9a0 [tls]\n    (net/tls/tls_strp.c:436 net/tls/tls_strp.c:530 net/tls/tls_strp.c:544)\n    Read of size 4 at addr ffff888013085750 by task tls/13529\n\n    CPU: 2 UID: 0 PID: 13529 Comm: tls Not tainted 6.16.0-rc5-virtme\n    Call Trace:\n     kasan_report+0xca/0x100\n     tls_strp_check_rcv+0x898/0x9a0 [tls]\n     tls_rx_rec_wait+0x2c9/0x8d0 [tls]\n     tls_sw_recvmsg+0x40f/0x1aa0 [tls]\n     inet_recvmsg+0x1c3/0x1f0\n\nAlways reload the queue, fast path is to have the record in the queue\nwhen we wake, anyway (IOW the path going down \"if !strp-\u003estm.full_len\").",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38473",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix null-ptr-deref in l2cap_sock_resume_cb()\n\nsyzbot reported null-ptr-deref in l2cap_sock_resume_cb(). [0]\n\nl2cap_sock_resume_cb() has a similar problem that was fixed by commit\n1bff51ea59a9 (\"Bluetooth: fix use-after-free error in lock_sock_nested()\").\n\nSince both l2cap_sock_kill() and l2cap_sock_resume_cb() are executed\nunder l2cap_sock_resume_cb(), we can avoid the issue simply by checking\nif chan-\u003edata is NULL.\n\nLet's not access to the killed socket in l2cap_sock_resume_cb().\n\n[0]:\nBUG: KASAN: null-ptr-deref in instrument_atomic_write include/linux/instrumented.h:82 [inline]\nBUG: KASAN: null-ptr-deref in clear_bit include/asm-generic/bitops/instrumented-atomic.h:41 [inline]\nBUG: KASAN: null-ptr-deref in l2cap_sock_resume_cb+0xb4/0x17c net/bluetooth/l2cap_sock.c:1711\nWrite of size 8 at addr 0000000000000570 by task kworker/u9:0/52\n\nCPU: 1 UID: 0 PID: 52 Comm: kworker/u9:0 Not tainted 6.16.0-rc4-syzkaller-g7482bb149b9f #0 PREEMPT\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nWorkqueue: hci0 hci_rx_work\nCall trace:\n show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:501 (C)\n __dump_stack+0x30/0x40 lib/dump_stack.c:94\n dump_stack_lvl+0xd8/0x12c lib/dump_stack.c:120\n print_report+0x58/0x84 mm/kasan/report.c:524\n kasan_report+0xb0/0x110 mm/kasan/report.c:634\n check_region_inline mm/kasan/generic.c:-1 [inline]\n kasan_check_range+0x264/0x2a4 mm/kasan/generic.c:189\n __kasan_check_write+0x20/0x30 mm/kasan/shadow.c:37\n instrument_atomic_write include/linux/instrumented.h:82 [inline]\n clear_bit include/asm-generic/bitops/instrumented-atomic.h:41 [inline]\n l2cap_sock_resume_cb+0xb4/0x17c net/bluetooth/l2cap_sock.c:1711\n l2cap_security_cfm+0x524/0xea0 net/bluetooth/l2cap_core.c:7357\n hci_auth_cfm include/net/bluetooth/hci_core.h:2092 [inline]\n hci_auth_complete_evt+0x2e8/0xa4c net/bluetooth/hci_event.c:3514\n hci_event_func net/bluetooth/hci_event.c:7511 [inline]\n hci_event_packet+0x650/0xe9c net/bluetooth/hci_event.c:7565\n hci_rx_work+0x320/0xb18 net/bluetooth/hci_core.c:4070\n process_one_work+0x7e8/0x155c kernel/workqueue.c:3238\n process_scheduled_works kernel/workqueue.c:3321 [inline]\n worker_thread+0x958/0xed8 kernel/workqueue.c:3402\n kthread+0x5fc/0x75c kernel/kthread.c:464\n ret_from_fork+0x10/0x20 arch/arm64/kernel/entry.S:847",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38474",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: net: sierra: check for no status endpoint\n\nThe driver checks for having three endpoints and\nhaving bulk in and out endpoints, but not that\nthe third endpoint is interrupt input.\nRectify the omission.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38476",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrpl: Fix use-after-free in rpl_do_srh_inline().\n\nRunning lwt_dst_cache_ref_loop.sh in selftest with KASAN triggers\nthe splat below [0].\n\nrpl_do_srh_inline() fetches ipv6_hdr(skb) and accesses it after\nskb_cow_head(), which is illegal as the header could be freed then.\n\nLet's fix it by making oldhdr to a local struct instead of a pointer.\n\n[0]:\n[root@fedora net]# ./lwt_dst_cache_ref_loop.sh\n...\nTEST: rpl (input)\n[   57.631529] ==================================================================\nBUG: KASAN: slab-use-after-free in rpl_do_srh_inline.isra.0 (net/ipv6/rpl_iptunnel.c:174)\nRead of size 40 at addr ffff888122bf96d8 by task ping6/1543\n\nCPU: 50 UID: 0 PID: 1543 Comm: ping6 Not tainted 6.16.0-rc5-01302-gfadd1e6231b1 #23 PREEMPT(voluntary)\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\nCall Trace:\n \u003cIRQ\u003e\n dump_stack_lvl (lib/dump_stack.c:122)\n print_report (mm/kasan/report.c:409 mm/kasan/report.c:521)\n kasan_report (mm/kasan/report.c:221 mm/kasan/report.c:636)\n kasan_check_range (mm/kasan/generic.c:175 (discriminator 1) mm/kasan/generic.c:189 (discriminator 1))\n __asan_memmove (mm/kasan/shadow.c:94 (discriminator 2))\n rpl_do_srh_inline.isra.0 (net/ipv6/rpl_iptunnel.c:174)\n rpl_input (net/ipv6/rpl_iptunnel.c:201 net/ipv6/rpl_iptunnel.c:282)\n lwtunnel_input (net/core/lwtunnel.c:459)\n ipv6_rcv (./include/net/dst.h:471 (discriminator 1) ./include/net/dst.h:469 (discriminator 1) net/ipv6/ip6_input.c:79 (discriminator 1) ./include/linux/netfilter.h:317 (discriminator 1) ./include/linux/netfilter.h:311 (discriminator 1) net/ipv6/ip6_input.c:311 (discriminator 1))\n __netif_receive_skb_one_core (net/core/dev.c:5967)\n process_backlog (./include/linux/rcupdate.h:869 net/core/dev.c:6440)\n __napi_poll.constprop.0 (net/core/dev.c:7452)\n net_rx_action (net/core/dev.c:7518 net/core/dev.c:7643)\n handle_softirqs (kernel/softirq.c:579)\n do_softirq (kernel/softirq.c:480 (discriminator 20))\n \u003c/IRQ\u003e\n \u003cTASK\u003e\n __local_bh_enable_ip (kernel/softirq.c:407)\n __dev_queue_xmit (net/core/dev.c:4740)\n ip6_finish_output2 (./include/linux/netdevice.h:3358 ./include/net/neighbour.h:526 ./include/net/neighbour.h:540 net/ipv6/ip6_output.c:141)\n ip6_finish_output (net/ipv6/ip6_output.c:215 net/ipv6/ip6_output.c:226)\n ip6_output (./include/linux/netfilter.h:306 net/ipv6/ip6_output.c:248)\n ip6_send_skb (net/ipv6/ip6_output.c:1983)\n rawv6_sendmsg (net/ipv6/raw.c:588 net/ipv6/raw.c:918)\n __sys_sendto (net/socket.c:714 (discriminator 1) net/socket.c:729 (discriminator 1) net/socket.c:2228 (discriminator 1))\n __x64_sys_sendto (net/socket.c:2231)\n do_syscall_64 (arch/x86/entry/syscall_64.c:63 (discriminator 1) arch/x86/entry/syscall_64.c:94 (discriminator 1))\n entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\nRIP: 0033:0x7f68cffb2a06\nCode: 5d e8 41 8b 93 08 03 00 00 59 5e 48 83 f8 fc 75 19 83 e2 39 83 fa 08 75 11 e8 26 ff ff ff 66 0f 1f 44 00 00 48 8b 45 10 0f 05 \u003c48\u003e 8b 5d f8 c9 c3 0f 1f 40 00 f3 0f 1e fa 55 48 89 e5 48 83 ec 08\nRSP: 002b:00007ffefb7c53d0 EFLAGS: 00000202 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 0000564cd69f10a0 RCX: 00007f68cffb2a06\nRDX: 0000000000000040 RSI: 0000564cd69f10a4 RDI: 0000000000000003\nRBP: 00007ffefb7c53f0 R08: 0000564cd6a032ac R09: 000000000000001c\nR10: 0000000000000000 R11: 0000000000000202 R12: 0000564cd69f10a4\nR13: 0000000000000040 R14: 00007ffefb7c66e0 R15: 0000564cd69f10a0\n \u003c/TASK\u003e\n\nAllocated by task 1543:\n kasan_save_stack (mm/kasan/common.c:48)\n kasan_save_track (mm/kasan/common.c:60 (discriminator 1) mm/kasan/common.c:69 (discriminator 1))\n __kasan_slab_alloc (mm/kasan/common.c:319 mm/kasan/common.c:345)\n kmem_cache_alloc_node_noprof (./include/linux/kasan.h:250 mm/slub.c:4148 mm/slub.c:4197 mm/slub.c:4249)\n kmalloc_reserve (net/core/skbuff.c:581 (discriminator 88))\n __alloc_skb (net/core/skbuff.c:669)\n __ip6_append_data (net/ipv6/ip6_output.c:1672 (discriminator 1))\n ip6_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38477",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: sch_qfq: Fix race condition on qfq_aggregate\n\nA race condition can occur when 'agg' is modified in qfq_change_agg\n(called during qfq_enqueue) while other threads access it\nconcurrently. For example, qfq_dump_class may trigger a NULL\ndereference, and qfq_delete_class may cause a use-after-free.\n\nThis patch addresses the issue by:\n\n1. Moved qfq_destroy_class into the critical section.\n\n2. Added sch_tree_lock protection to qfq_dump_class and\nqfq_dump_class_stats.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38478",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: Fix initialization of data for instructions that write to subdevice\n\nSome Comedi subdevice instruction handlers are known to access\ninstruction data elements beyond the first `insn-\u003en` elements in some\ncases.  The `do_insn_ioctl()` and `do_insnlist_ioctl()` functions\nallocate at least `MIN_SAMPLES` (16) data elements to deal with this,\nbut they do not initialize all of that.  For Comedi instruction codes\nthat write to the subdevice, the first `insn-\u003en` data elements are\ncopied from user-space, but the remaining elements are left\nuninitialized.  That could be a problem if the subdevice instruction\nhandler reads the uninitialized data.  Ensure that the first\n`MIN_SAMPLES` elements are initialized before calling these instruction\nhandlers, filling the uncopied elements with 0.  For\n`do_insnlist_ioctl()`, the same data buffer elements are used for\nhandling a list of instructions, so ensure the first `MIN_SAMPLES`\nelements are initialized for each instruction that writes to the\nsubdevice.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38480",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: Fix use of uninitialized data in insn_rw_emulate_bits()\n\nFor Comedi `INSN_READ` and `INSN_WRITE` instructions on \"digital\"\nsubdevices (subdevice types `COMEDI_SUBD_DI`, `COMEDI_SUBD_DO`, and\n`COMEDI_SUBD_DIO`), it is common for the subdevice driver not to have\n`insn_read` and `insn_write` handler functions, but to have an\n`insn_bits` handler function for handling Comedi `INSN_BITS`\ninstructions.  In that case, the subdevice's `insn_read` and/or\n`insn_write` function handler pointers are set to point to the\n`insn_rw_emulate_bits()` function by `__comedi_device_postconfig()`.\n\nFor `INSN_WRITE`, `insn_rw_emulate_bits()` currently assumes that the\nsupplied `data[0]` value is a valid copy from user memory.  It will at\nleast exist because `do_insnlist_ioctl()` and `do_insn_ioctl()` in\n\"comedi_fops.c\" ensure at lease `MIN_SAMPLES` (16) elements are\nallocated.  However, if `insn-\u003en` is 0 (which is allowable for\n`INSN_READ` and `INSN_WRITE` instructions, then `data[0]` may contain\nuninitialized data, and certainly contains invalid data, possibly from a\ndifferent instruction in the array of instructions handled by\n`do_insnlist_ioctl()`.  This will result in an incorrect value being\nwritten to the digital output channel (or to the digital input/output\nchannel if configured as an output), and may be reflected in the\ninternal saved state of the channel.\n\nFix it by returning 0 early if `insn-\u003en` is 0, before reaching the code\nthat accesses `data[0]`.  Previously, the function always returned 1 on\nsuccess, but it is supposed to be the number of data samples actually\nread or written up to `insn-\u003en`, which is 0 in this case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38481",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: Fail COMEDI_INSNLIST ioctl if n_insns is too large\n\nThe handling of the `COMEDI_INSNLIST` ioctl allocates a kernel buffer to\nhold the array of `struct comedi_insn`, getting the length from the\n`n_insns` member of the `struct comedi_insnlist` supplied by the user.\nThe allocation will fail with a WARNING and a stack dump if it is too\nlarge.\n\nAvoid that by failing with an `-EINVAL` error if the supplied `n_insns`\nvalue is unreasonable.\n\nDefine the limit on the `n_insns` value in the `MAX_INSNS` macro.  Set\nthis to the same value as `MAX_SAMPLES` (65536), which is the maximum\nallowed sum of the values of the member `n` in the array of `struct\ncomedi_insn`, and sensible comedi instructions will have an `n` of at\nleast 1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38482",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: das6402: Fix bit shift out of bounds\n\nWhen checking for a supported IRQ number, the following test is used:\n\n\t/* IRQs 2,3,5,6,7, 10,11,15 are valid for \"enhanced\" mode */\n\tif ((1 \u003c\u003c it-\u003eoptions[1]) \u0026 0x8cec) {\n\nHowever, `it-\u003eoptions[i]` is an unchecked `int` value from userspace, so\nthe shift amount could be negative or out of bounds.  Fix the test by\nrequiring `it-\u003eoptions[1]` to be within bounds before proceeding with\nthe original test.  Valid `it-\u003eoptions[1]` values that select the IRQ\nwill be in the range [1,15]. The value 0 explicitly disables the use of\ninterrupts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38483",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: das16m1: Fix bit shift out of bounds\n\nWhen checking for a supported IRQ number, the following test is used:\n\n\t/* only irqs 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, and 15 are valid */\n\tif ((1 \u003c\u003c it-\u003eoptions[1]) \u0026 0xdcfc) {\n\nHowever, `it-\u003eoptions[i]` is an unchecked `int` value from userspace, so\nthe shift amount could be negative or out of bounds.  Fix the test by\nrequiring `it-\u003eoptions[1]` to be within bounds before proceeding with\nthe original test.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38485",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: accel: fxls8962af: Fix use after free in fxls8962af_fifo_flush\n\nfxls8962af_fifo_flush() uses indio_dev-\u003eactive_scan_mask (with\niio_for_each_active_channel()) without making sure the indio_dev\nstays in buffer mode.\nThere is a race if indio_dev exits buffer mode in the middle of the\ninterrupt that flushes the fifo. Fix this by calling\nsynchronize_irq() to ensure that no interrupt is currently running when\ndisabling buffer mode.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000 when read\n[...]\n_find_first_bit_le from fxls8962af_fifo_flush+0x17c/0x290\nfxls8962af_fifo_flush from fxls8962af_interrupt+0x80/0x178\nfxls8962af_interrupt from irq_thread_fn+0x1c/0x7c\nirq_thread_fn from irq_thread+0x110/0x1f4\nirq_thread from kthread+0xe0/0xfc\nkthread from ret_from_fork+0x14/0x2c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38487",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: aspeed: lpc-snoop: Don't disable channels that aren't enabled\n\nMitigate e.g. the following:\n\n    # echo 1e789080.lpc-snoop \u003e /sys/bus/platform/drivers/aspeed-lpc-snoop/unbind\n    ...\n    [  120.363594] Unable to handle kernel NULL pointer dereference at virtual address 00000004 when write\n    [  120.373866] [00000004] *pgd=00000000\n    [  120.377910] Internal error: Oops: 805 [#1] SMP ARM\n    [  120.383306] CPU: 1 UID: 0 PID: 315 Comm: sh Not tainted 6.15.0-rc1-00009-g926217bc7d7d-dirty #20 NONE\n    ...\n    [  120.679543] Call trace:\n    [  120.679559]  misc_deregister from aspeed_lpc_snoop_remove+0x84/0xac\n    [  120.692462]  aspeed_lpc_snoop_remove from platform_remove+0x28/0x38\n    [  120.700996]  platform_remove from device_release_driver_internal+0x188/0x200\n    ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38489",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/bpf: Fix bpf_arch_text_poke() with new_addr == NULL again\n\nCommit 7ded842b356d (\"s390/bpf: Fix bpf_plt pointer arithmetic\") has\naccidentally removed the critical piece of commit c730fce7c70c\n(\"s390/bpf: Fix bpf_arch_text_poke() with new_addr == NULL\"), causing\nintermittent kernel panics in e.g. perf's on_switch() prog to reappear.\n\nRestore the fix and add a comment.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38494",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: do not bypass hid_hw_raw_request\n\nhid_hw_raw_request() is actually useful to ensure the provided buffer\nand length are valid. Directly calling in the low level transport driver\nfunction bypassed those checks and allowed invalid paramto be used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38495",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: ensure the allocated report buffer can contain the reserved report ID\n\nWhen the report ID is not used, the low level transport drivers expect\nthe first byte to be 0. However, currently the allocated buffer not\naccount for that extra byte, meaning that instead of having 8 guaranteed\nbytes for implement to be working, we only have 7.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38496",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-bufio: fix sched in atomic context\n\nIf \"try_verify_in_tasklet\" is set for dm-verity, DM_BUFIO_CLIENT_NO_SLEEP\nis enabled for dm-bufio. However, when bufio tries to evict buffers, there\nis a chance to trigger scheduling in spin_lock_bh, the following warning\nis hit:\n\nBUG: sleeping function called from invalid context at drivers/md/dm-bufio.c:2745\nin_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 123, name: kworker/2:2\npreempt_count: 201, expected: 0\nRCU nest depth: 0, expected: 0\n4 locks held by kworker/2:2/123:\n #0: ffff88800a2d1548 ((wq_completion)dm_bufio_cache){....}-{0:0}, at: process_one_work+0xe46/0x1970\n #1: ffffc90000d97d20 ((work_completion)(\u0026dm_bufio_replacement_work)){....}-{0:0}, at: process_one_work+0x763/0x1970\n #2: ffffffff8555b528 (dm_bufio_clients_lock){....}-{3:3}, at: do_global_cleanup+0x1ce/0x710\n #3: ffff88801d5820b8 (\u0026c-\u003espinlock){....}-{2:2}, at: do_global_cleanup+0x2a5/0x710\nPreemption disabled at:\n[\u003c0000000000000000\u003e] 0x0\nCPU: 2 UID: 0 PID: 123 Comm: kworker/2:2 Not tainted 6.16.0-rc3-g90548c634bd0 #305 PREEMPT(voluntary)\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\nWorkqueue: dm_bufio_cache do_global_cleanup\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x53/0x70\n __might_resched+0x360/0x4e0\n do_global_cleanup+0x2f5/0x710\n process_one_work+0x7db/0x1970\n worker_thread+0x518/0xea0\n kthread+0x359/0x690\n ret_from_fork+0xf3/0x1b0\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nThat can be reproduced by:\n\n  veritysetup format --data-block-size=4096 --hash-block-size=4096 /dev/vda /dev/vdb\n  SIZE=$(blockdev --getsz /dev/vda)\n  dmsetup create myverity -r --table \"0 $SIZE verity 1 /dev/vda /dev/vdb 4096 4096 \u003cdata_blocks\u003e 1 sha256 \u003croot_hash\u003e \u003csalt\u003e 1 try_verify_in_tasklet\"\n  mount /dev/dm-0 /mnt -o ro\n  echo 102400 \u003e /sys/module/dm_bufio/parameters/max_cache_size_bytes\n  [read files in /mnt]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38497",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: configfs: Fix OOB read on empty string write\n\nWhen writing an empty string to either 'qw_sign' or 'landingPage'\nsysfs attributes, the store functions attempt to access page[l - 1]\nbefore validating that the length 'l' is greater than zero.\n\nThis patch fixes the vulnerability by adding a check at the beginning\nof os_desc_qw_sign_store() and webusb_landingPage_store() to handle\nthe zero-length input case gracefully by returning immediately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38498",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndo_change_type(): refuse to operate on unmounted/not ours mounts\n\nEnsure that propagation settings can only be changed for mounts located\nin the caller's mount namespace. This change aligns permission checking\nwith the rest of mount(2).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:kernel-default-6.4.0-150600.23.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-40909",
      "Description": "Perl threads have a working directory race condition where file operations may target unintended paths.\n\nIf a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone  that handle for the new thread, which is visible from any third (or  more) thread already running. \n\nThis may lead to unintended operations  such as loading code or accessing files from unexpected locations,  which a local attacker may be able to exploit.\n\nThe bug was introduced in commit  11a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:perl-5.26.1-150300.17.20.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:perl-base-5.26.1-150300.17.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4373",
      "Description": "A flaw was found in GLib, which is vulnerable to an integer overflow in the g_string_insert_unichar() function. When the position at which to insert the character is large, the position will overflow, leading to a buffer underwrite.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:glib2-tools-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgio-2_0-0-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libglib-2_0-0-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgmodule-2_0-0-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgobject-2_0-0-2.78.6-150600.4.16.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4435",
      "Description": "When using a TarFile.errorlevel = 0  and extracting with a filter the documented behavior is that any filtered members would be skipped and not extracted. However the actual behavior of TarFile.errorlevel = 0  in affected versions is that the member would still be extracted and not skipped.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4516",
      "Description": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4517",
      "Description": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".\n\n\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4598",
      "Description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libsystemd0-254.27-150600.4.43.3",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libudev1-254.27-150600.4.43.3",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:systemd-254.27-150600.4.43.3",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:systemd-sysvcompat-254.27-150600.4.43.3",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:udev-254.27-150600.4.43.3"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-46802",
      "Description": "For a short time they PTY is set to mode 666, allowing any user on the system to connect to the screen session.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:screen-4.6.2-150000.5.8.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-48060",
      "Description": "jq is a command-line JSON processor. In versions up to and including 1.7.1, a heap-buffer-overflow is present in function `jv_string_vfmt` in the jq_fuzz_execute harness from oss-fuzz. This crash happens on file jv.c, line 1456 `void* p = malloc(sz);`. As of time of publication, no patched versions are available.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:jq-1.6-150000.3.9.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libjq1-1.6-150000.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4877",
      "Description": "There's a vulnerability in the libssh package where when a libssh consumer passes in an unexpectedly large input buffer to ssh_get_fingerprint_hash() function. In such cases the bin_to_base64() function can experience an integer overflow leading to a memory under allocation, when that happens it's possible that the program perform out of bounds write leading to a heap corruption.\nThis issue affects only 32-bits builds of libssh.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh-config-0.9.8-150600.11.3.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh4-0.9.8-150600.11.3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4878",
      "Description": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the privatekey_from_file() function. This flaw can be triggered if the file specified by the filename doesn't exist and may lead to possible signing failures or heap corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh-config-0.9.8-150600.11.3.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh4-0.9.8-150600.11.3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-48964",
      "Description": "ping in iputils before 20250602 allows a denial of service (application error in adaptive ping mode or incorrect data collection) via a crafted ICMP Echo Reply packet, because a zero timestamp can lead to large intermediate values that have an integer overflow when squared during statistics calculations. NOTE: this issue exists because of an incomplete fix for CVE-2025-47268 (that fix was only about timestamp calculations, and it did not account for a specific scenario where the original timestamp in the ICMP payload is zero).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:iputils-20221126-150500.3.14.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4947",
      "Description": "libcurl accidentally skips the certificate verification for QUIC connections when connecting to a host specified as an IP address in the URL. Therefore, it does not detect impostors or man-in-the-middle attacks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49794",
      "Description": "A use-after-free vulnerability was found in libxml2. This issue occurs when parsing XPath elements under certain circumstances when the XML schematron has the \u003csch:name path=\"...\"/\u003e schema elements. This flaw allows a malicious actor to craft a malicious XML document used as input for libxml, resulting in the program's crash using libxml or other possible undefined behaviors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libxml2-2-2.10.3-150500.5.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49795",
      "Description": "A NULL pointer dereference vulnerability was found in libxml2 when processing XPath XML expressions. This flaw allows an attacker to craft a malicious XML input to libxml2, leading to a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libxml2-2-2.10.3-150500.5.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49796",
      "Description": "A vulnerability was found in libxml2. Processing certain sch:name elements from the input XML file can trigger a memory corruption issue. This flaw allows an attacker to craft a malicious XML input file that can lead libxml to crash, resulting in a denial of service or other possible undefined behavior due to sensitive data being corrupted in memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libxml2-2-2.10.3-150500.5.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-50181",
      "Description": "urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, it is possible to disable redirects for all requests by instantiating a PoolManager and specifying retries in a way that disable redirects. By default, requests and botocore users are not affected. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable. This issue has been patched in version 2.5.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-urllib3-1.25.10-150300.4.18.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5025",
      "Description": "libcurl supports *pinning* of the server certificate public key for HTTPS transfers. Due to an omission, this check is not performed when connecting with QUIC for HTTP/3, when the TLS backend is wolfSSL. Documentation says the option works with wolfSSL, failing to specify that it does not for QUIC and HTTP/3. Since pinning makes the transfer succeed if the pin is fine, users could unwittingly connect to an impostor server without noticing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5222",
      "Description": "A stack buffer overflow was found in Internationl components for unicode (ICU ). While running the genrb binary, the 'subtag' struct overflowed at the SRBRoot::addTag function. This issue may lead to memory corruption and local arbitrary code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libicu-suse65_1-65.1-150200.4.15.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libicu65_1-ledata-65.1-150200.4.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5278",
      "Description": "A flaw was found in GNU Coreutils. The sort utility's begfield() function is vulnerable to a heap buffer under-read. The program may access memory outside the allocated buffer if a user runs a crafted command using the traditional key format. A malicious input could lead to a crash or leak sensitive data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:coreutils-8.32-150400.9.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5318",
      "Description": "A flaw was found in the libssh library in versions less than 0.11.2. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh-config-0.9.8-150600.11.3.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh4-0.9.8-150600.11.3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5372",
      "Description": "A flaw was found in libssh versions built with OpenSSL versions older than 3.0, specifically in the ssh_kdf() function responsible for key derivation. Due to inconsistent interpretation of return values where OpenSSL uses 0 to indicate failure and libssh uses 0 for success-the function may mistakenly return a success status even when key derivation fails. This results in uninitialized cryptographic key buffers being used in subsequent communication, potentially compromising SSH sessions' confidentiality, integrity, and availability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh-config-0.9.8-150600.11.3.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libssh4-0.9.8-150600.11.3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5399",
      "Description": "Due to a mistake in libcurl's WebSocket code, a malicious server can send a\nparticularly crafted packet which makes libcurl get trapped in an endless\nbusy-loop.\n\nThere is no other way for the application to escape or exit this loop other\nthan killing the thread/process.\n\nThis might be used to DoS libcurl-using application.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-54388",
      "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. In versions 28.2.0 through 28.3.2, when the firewalld service is reloaded it removes all iptables rules including those created by Docker. While Docker should automatically recreate these rules, versions before 28.3.3 fail to recreate the specific rules that block external access to containers. This means that after a firewalld reload, containers with ports published to localhost (like 127.0.0.1:8080) become accessible from remote machines that have network routing to the Docker bridge, even though they should only be accessible from the host itself. The vulnerability only affects explicitly published ports - unpublished ports remain protected. This issue is fixed in version 28.3.3.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6018",
      "Description": "A Local Privilege Escalation (LPE) vulnerability has been discovered in pam-config within Linux Pluggable Authentication Modules (PAM). This flaw allows an unprivileged local attacker (for example, a user logged in via SSH) to obtain the elevated privileges normally reserved for a physically present, \"allow_active\" user. The highest risk is that the attacker can then perform all allow_active yes Polkit actions, which are typically restricted to console users, potentially gaining unauthorized control over system configurations, services, or other sensitive operations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:pam-1.3.0-150000.6.86.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:pam-config-1.1-150600.16.8.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6021",
      "Description": "A flaw was found in libxml2's xmlBuildQName function, where integer overflows in buffer size calculations can lead to a stack-based buffer overflow. This issue can result in memory corruption or a denial of service when processing crafted input.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libxml2-2-2.10.3-150500.5.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6052",
      "Description": "A flaw was found in how GLib's GString manages memory when adding data to strings. If a string is already very large, combining it with more input can cause a hidden overflow in the size calculation. This makes the system think it has enough memory when it doesn't. As a result, data may be written past the end of the allocated memory, leading to crashes or memory corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:glib2-tools-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgio-2_0-0-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libglib-2_0-0-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgmodule-2_0-0-2.78.6-150600.4.16.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgobject-2_0-0-2.78.6-150600.4.16.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6069",
      "Description": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6170",
      "Description": "A flaw was found in the interactive shell of the xmllint command-line tool, used for parsing XML files. When a user inputs an overly long command, the program does not check the input size properly, which can cause it to crash. This issue might allow attackers to run harmful code in rare configurations without modern protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libxml2-2-2.10.3-150500.5.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6395",
      "Description": "A NULL pointer dereference flaw was found in the GnuTLS software in _gnutls_figure_common_ciphersuite().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libgnutls30-3.8.3-150600.4.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6442",
      "Description": "Ruby WEBrick read_header HTTP Request Smuggling Vulnerability. This vulnerability allows remote attackers to smuggle arbitrary HTTP requests on affected installations of Ruby WEBrick. This issue is exploitable when the product is deployed behind an HTTP proxy that fulfills specific conditions.\n\nThe specific flaw exists within the read_headers method. The issue results from the inconsistent parsing of terminators of HTTP headers. An attacker can leverage this vulnerability to smuggle arbitrary HTTP requests. Was ZDI-CAN-21876.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libruby2_5-2_5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:ruby2.5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:ruby2.5-stdlib-2.5.9-150000.4.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6965",
      "Description": "There exists a vulnerability in SQLite versions before 3.50.2 where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. We recommend upgrading to version 3.50.2 or above.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libsqlite3-0-3.50.2-150000.3.33.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:sqlite3-tcl-3.50.2-150000.3.33.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-7425",
      "Description": "A flaw was found in libxslt where the attribute type, atype, flags are modified in a way that corrupts internal memory management. When XSLT functions, such as the key() process, result in tree fragments, this corruption prevents the proper cleanup of ID attributes. As a result, the system may access freed memory, causing crashes or enabling attackers to trigger heap corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libxml2-2-2.10.3-150500.5.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-7519",
      "Description": "A flaw was found in polkit. When processing an XML policy with 32 or more nested elements in depth, an out-of-bounds write can be triggered. This issue can lead to a crash or other unexpected behavior, and arbitrary code execution is not discarded. To exploit this flaw, a high-privilege account is needed as it's required to place the malicious policy file properly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libpolkit-agent-1-0-121-150500.3.6.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libpolkit-gobject-1-0-121-150500.3.6.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:polkit-121-150500.3.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-8058",
      "Description": "The regcomp function in the GNU C library version from 2.4 to 2.41 is \nsubject to a double free if some previous allocation fails. It can be \naccomplished either by a malloc failure or by using an interposed malloc\n that injects random malloc failures. The double free can allow buffer \nmanipulation depending of how the regex is constructed. This issue \naffects all architectures and ABIs supported by the GNU C library.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:glibc-2.38-150600.14.37.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:glibc-i18ndata-2.38-150600.14.37.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:glibc-locale-2.38-150600.14.37.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:glibc-locale-base-2.38-150600.14.37.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:nscd-2.38-150600.14.37.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-8194",
      "Description": "There is a defect in the CPython \"tarfile\" module affecting the \"TarFile\" extraction and entry enumeration APIs. The tar implementation would process tar archives with negative offsets without error, resulting in an infinite loop and deadlock during the parsing of maliciously crafted tar archives. \n\nThis vulnerability can be mitigated by including the following patch after importing the \"tarfile\" module:   https://gist.github.com/sethmlarson/1716ac5b82b73dbcbf23ad2eff8b33e1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-9086",
      "Description": "1. A cookie is set using the `secure` keyword for `https://target`\n2. curl is redirected to or otherwise made to speak with `http://target` (same\n   hostname, but using clear text HTTP) using the same cookie set\n3. The same cookie name is set - but with just a slash as path (`path='/'`).\n   Since this site is not secure, the cookie *should* just be ignored.\n4. A bug in the path comparison logic makes curl read outside a heap buffer\n   boundary\n\nThe bug either causes a crash or it potentially makes the comparison come to\nthe wrong conclusion and lets the clear-text site override the contents of the\nsecure cookie, contrary to expectations and depending on the memory contents\nimmediately following the single-byte allocation that holds the path.\n\nThe presumed and correct behavior would be to plainly ignore the second set of\nthe cookie since it was already set as secure on a secure host so overriding\nit on an insecure host should not be okay.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:curl-8.14.1-150600.4.28.1",
            "Public Cloud Image google/sles-15-sp6-v20250920-x86-64:libcurl4-8.14.1-150600.4.28.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}