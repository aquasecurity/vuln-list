{
  "Title": "SUSE-IU-2025:1055-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2025:1055-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2025-04-08T01:00:00Z",
    "CurrentReleaseDate": "2025-04-08T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-09-10T19:21:13Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2025:1055-1 / google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64 contains the following changes:\nPackage 000release-packages:SLES_SAP-release was updated:\n\nPackage apparmor was updated:\n\n- Add dovecot-unix_chkpwd.diff to allow dovecot-auth to execute  unix_chkpwd, and add a profile for unix_chkpwd. This is needed\n  for PAM with CVE-2024-10041 (bsc#1234452)\n\nPackage bind was updated:\n\n- Limit additional section processing for large RDATA sets.  When answering queries, donât add data to the additional\n  section if the answer has more than 13 names in the RDATA. This\n  limits the number of lookups into the database(s) during a\n  single client query, reducing the query-processing load.\n  (CVE-2024-11187)\n  [bsc#1236596, bind-9.16-CVE-2024-11187.patch]\n\nPackage ca-certificates-mozilla was updated:\n\n- explit remove distruted certs, as the distrust does not get exported  correctly and the SSL certs are still trusted. (bsc#1240343)\n  - Entrust.net Premium 2048 Secure Server CA\n  - Entrust Root Certification Authority\n  - AffirmTrust Commercial\n  - AffirmTrust Networking\n  - AffirmTrust Premium\n  - AffirmTrust Premium ECC\n  - Entrust Root Certification Authority - G2\n  - Entrust Root Certification Authority - EC1\n  - GlobalSign Root E46\n  - GLOBALTRUST 2020\n- remove-distrusted.patch: apply to certdata.txt\n\n- Fix awk to compare (missing a =) and give the following output:\n  [#] NSS_BUILTINS_LIBRARY_VERSION \u0026quot;2.74\u0026quot;\n\n- pass file argument to awk (bsc#1240009)\n\n- update to 2.74 state of Mozilla SSL root CAs:\n  Removed:\n  * SwissSign Silver CA - G2\n  Added:\n  * D-TRUST BR Root CA 2 2023\n  * D-TRUST EV Root CA 2 2023\n\n- remove extensive signature printing in comments of the cert\n  bundle\n\n- Define two macros to break a build cycle with p11-kit.\n\n- Updated to 2.72 state of Mozilla SSL root CAs (bsc#1234798)\n  Removed:\n  - SecureSign RootCA11\n  - Security Communication RootCA3\n  Added:\n  - TWCA CYBER Root CA\n  - TWCA Global Root CA G2\n  - SecureSign Root CA12\n  - SecureSign Root CA14\n  - SecureSign Root CA15\n\nPackage cloud-regionsrv-client was updated:\n\n- Update to 10.3.11 (bsc#1234050)  + Send registration code for the extensions, not only base product\n\n- Update to 10.3.8 (bsc#1233333)\n  + Fix the package requirements for cloud-regionsrv-client\n  + Follow changes to suseconnect error reporting from stdout to stderr\n\nPackage kernel-default was updated:\n\n- mm/mempolicy: fix mpol_new leak in shared_policy_replace  (CVE-2022-49080 bsc#1238033).\n- commit ee261e8\n\n- KVM: VMX: Bury Intel PT virtualization (guest/host mode)\n  behind CONFIG_BROKEN (CVE-2024-53135 bsc#1234154).\n- commit c33dbae\n\n- kabi: hide adding RCU head into struct netdev_name_node\n  (bsc#1233749).\n- net: free altname using an RCU callback (bsc#1233749).\n- net: fix removing a namespace with conflicting altnames\n  (bsc#1233749).\n- net: do not send a MOVE event when netdev changes netns\n  (bsc#1233749).\n- net: Fix undefined behavior in netdev name allocation\n  (bsc#1233749).\n- net: remove else after return in dev_prep_valid_name()\n  (bsc#1233749).\n- net: remove dev_valid_name() check from __dev_alloc_name()\n  (bsc#1233749).\n- net: trust the bitmap in __dev_alloc_name() (bsc#1233749).\n- net: reduce indentation of __dev_alloc_name() (bsc#1233749).\n- net: make dev_alloc_name() call dev_prep_valid_name()\n  (bsc#1233749).\n- net: don't use input buffer of __dev_alloc_name() as a scratch\n  space (bsc#1233749).\n- net: move altnames together with the netdevice (bsc#1233749).\n- net: avoid UAF on deleted altname (bsc#1233749).\n- net: check for altname conflicts when changing netdev's netns\n  (bsc#1233749).\n- net: fix ifname in netlink ntf during netns move (bsc#1233749).\n- net: core: Use the bitmap API to allocate bitmaps (bsc#1233749).\n- net: minor __dev_alloc_name() optimization (bsc#1233749).\n- net: introduce a function to check if a netdev name is in use\n  (bsc#1233749).\n- commit b7b1c0b\n\n- ipv4/tcp: do not use per netns ctl sockets (bsc#1237693).\n- commit 5e81510\n\n- x86/xen: allow larger contiguous memory regions in PV guests\n  (bsc#1236951).\n- commit ae8b3dd\n\n- xen/swiotlb: relax alignment requirements (bsc#1236951).\n- commit 5a1b514\n\n- x86/xen: add FRAME_END to xen_hypercall_hvm() (git-fixes).\n- commit e70ee83\n\n- x86/xen: fix xen_hypercall_hvm() to not clobber %rbx\n  (git-fixes).\n- commit 2ad21f6\n\n- idpf: call set_real_num_queues in idpf_open (bsc#1236661\n  bsc#1237316).\n- commit 97881c4\n\n- Update References for CVE-2024-53226 and bsc#1236576\n  Patch:\n  patches.suse/RDMA-hns-Fix-NULL-pointer-derefernce-in-hns_roce_map.patch\n- commit 990ce5d\n\n- gfs2: Truncate address space when flipping GFS2_DIF_JDATA flag\n  (bsc#1237139 CVE-2025-21699).\n- commit 94ceb50\n\n- cpufreq/amd-pstate: Only print supported EPP values for\n  performance governor (bsc#1236777).\n- commit 6568154\n\n- scsi: storvsc: Ratelimit warning logs to prevent VM denial of\n  service (bsc#1237025 CVE-2025-21690).\n- commit 57c2742\n\n- NFSD: use explicit lock/unlock for directory ops (bsc#1234650\n  bsc#1233701 bsc#1232472).\n- blacklist.conf: Remove this commit - we do need some of it.\n- commit dfa4cb2\n\n- sched: sch_cake: add bounds checks to host bulk flow fairness\n  counts (CVE-2025-21647 bsc#1236133).\n- commit e9841a3\n\n- Update\n  patches.suse/cifs-Fix-UAF-in-cifs_demultiplex_thread-.patch\n  (bsc#1208995 CVE-2023-1192 CVE-2023-52572 bsc#1220946).\n  Move to the sorted section.\n- commit bb08640\n\n- net: sched: fix ets qdisc OOB Indexing (bsc#1237028\n  CVE-2025-21692).\n- commit 947f160\n\n- scsi: storvsc: Set correct data length for sending SCSI command\n  without payload (git-fixes).\n- commit f05636e\n\n- net: mana: Cleanup \u0026quot;mana\u0026quot; debugfs dir after cleanup of all\n  children (bsc#1236760).\n- net: mana: Enable debugfs files for MANA device (bsc#1236758).\n- net: mana: Add get_link and get_link_ksettings in ethtool\n  (bsc#1236761).\n- net: netvsc: Update default VMBus channels (bsc#1236757).\n- commit 7db536d\n\n- Update\n  patches.suse/ALSA-6fire-Release-resources-at-card-release.patch\n  (CVE-2024-53239 bsc#1235054 bsc#1234853).\n- Update\n  patches.suse/Bluetooth-L2CAP-do-not-leave-dangling-sk-pointer-on-.patch\n  (CVE-2024-56605 bsc#1235061 bsc#1234853).\n- Update\n  patches.suse/KVM-nSVM-Ignore-nCR3-4-0-when-loading-PDPTEs-from-me.patch\n  (CVE-2024-50115 bsc#1232919 bsc#1225742).\n- Update\n  patches.suse/NFSv4.0-Fix-a-use-after-free-problem-in-the-asynchronous-open.patch\n  (CVE-2024-53173 bsc#1234891 bsc#1234853).\n- Update\n  patches.suse/hfsplus-don-t-query-the-device-logical-block-size-multiple-times.patch\n  (bsc#1235073 CVE-2024-56548 bsc#1234853).\n- Update\n  patches.suse/wifi-mwifiex-Fix-memcpy-field-spanning-write-warning-in-mwifiex_config_scan.patch\n  (CVE-2024-56539 bsc#1234963 bsc#1234853).\n- commit c3c2bf8\n\n- mac802154: check local interfaces before deleting sdata list\n  (CVE-2024-57948 bsc#1236677).\n- commit 4de21f7\n\n- media: uvcvideo: Skip parsing frames of type UVC_VS_UNDEFINED\n  in uvc_parse_format (CVE-2024-53104 bsc#1234025).\n- commit a0c98f3\n\n- xfrm: validate new SA's prefixlen using SA family when sel.family is unset (CVE-2024-50142 bsc#1233028)\n- commit 03267d6\n\n- mptcp: pm: Fix uaf in __timer_delete_sync (bsc#1231088 CVE-2024-46858)\n- commit 9ccbda8\n\n- Fix sorting error\n  ```\n  Error: Current series.conf is not sorted. Please run series_sort.py first and commit the result before adding new patches.\n  ```\n- commit a81b3e9\n\n- kABI fix for net: defer final 'struct net' free in netns dismantle (CVE-2024-56658 bsc#1235441).\n  Upstream commit 0f6ede9fbc74 (\u0026quot;net: defer final 'struct\n  net' free in netns dismantle\u0026quot;) introduced a new struct element\n  `defer_free_list` into `struct net`. In order to preserve the kABI, move\n  the newly added element into a hole.\n  ```\n    struct netns_nexthop       nexthop;              /*   560    72 */\n    /* XXX 8 bytes hole, try to pack */\n    /* --- cacheline 10 boundary (640 bytes) --- */\n    struct netns_ipv4          ipv4 __attribute__((__aligned__(64))); /*   640   704 */\n  ```\n- commit 3fc1183\n\n- net: defer final 'struct net' free in netns dismantle (CVE-2024-56658 bsc#1235441).\n- commit 8694248\n\n- NFS: Trigger the \u0026quot;ls -l\u0026quot; readdir heuristic sooner (bsc#1231847).\n- commit 9f70842\n\n- NFS: Improve heuristic for readdirplus (bsc#1231847).\n- commit 97689a4\n\n- NFS: Adjust the amount of readahead performed by NFS readdir\n  (bsc#1231847).\n- commit 28137f0\n\n- NFS: Do not flush the readdir cache in nfs_dentry_iput()\n  (bsc#1231847).\n- commit f9c2fd9\n\n- smb: prevent use-after-free due to open_cached_dir error paths\n  (CVE-2024-53177 bsc#1234896).\n- commit bf3cf0a\n\n- net: inet6: do not leave a dangling sk pointer in inet6_create()\n  (CVE-2024-56600 bsc#1235217).\n- commit 4f3d37a\n\n- ice: fold ice_ptp_read_time into ice_ptp_gettimex64\n  (bsc#1235111).\n- ice: avoid the PTP hardware semaphore in gettimex64 path\n  (bsc#1235111).\n- ice: add ice_adapter for shared data across PFs on the same NIC\n  (bsc#1235111).\n- iavf: fix the waiting time for initial reset (bsc#1235111).\n- commit 6bac5db\n\n- blacklist.conf: Not affected byy CVE-2024-44932 and CVE-2024-44964\n- Delete\n  patches.suse/idpf-fix-UAFs-when-destroying-the-queues.patch.\n- Delete\n  patches.suse/idpf-fix-memory-leaks-and-crashes-while-performing-a.patch.\n  This fixes bsc#1236628\n- commit eb1fe78\n\n- netfilter: x_tables: fix LED ID check in led_tg_check()\n  (CVE-2024-56650 bsc#1235430).\n- commit a130a9c\n\n- drm/amdkfd: Correct the migration DMA map direction (bsc#1235969 CVE-2024-57897)\n- commit e14ed1e\n\n- drm/dp_mst: Fix resetting msg rx state after topology removal (bsc#1235806 CVE-2024-57876)\n- commit 7f76a66\n\n- netfilter: nf_tables: validate family when identifying table\n  via handle (bsc#1233778 ZDI-24-1454).\n- commit 1df7b33\n\n- VFS: use system_unbound_wq for delayed_mntput (bsc#1234683).\n- commit 0a0fe49\n\n- ibmvnic: Free any outstanding tx skbs during scrq reset\n  (bsc#1226980).\n- commit a6b7a28\n\n- scsi: qedi: Fix a possible memory leak in\n  qedi_alloc_and_init_sb() (CVE-2024-56747 bsc#1234934).\n- scsi: bfa: Fix use-after-free in bfad_im_module_exit()\n  (CVE-2024-53227 bsc#1235011).\n- scsi: hisi_sas: Create all dump files during debugfs\n  initialization (CVE-2024-56588 bsc#1235123).\n- commit 9c17f1e\n\n- rcu: Remove rcu_is_idle_cpu() (bsc#1236289).\n- commit baf1fd9\n\n- x86/aperfperf: Make it correct on 32bit and UP kernels\n  (bsc#1236289).\n- commit f5502ff\n\n- x86/aperfmperf: Integrate the fallback code from show_cpuinfo()\n  (bsc#1236289).\n- commit 24182be\n\n- x86/aperfmperf: Replace arch_freq_get_on_cpu() (bsc#1236289).\n- commit d8c39fe\n\n- x86/aperfmperf: Replace aperfmperf_get_khz() (bsc#1236289).\n- commit c5c68b4\n\n- x86/aperfmperf: Store aperf/mperf data for cpu frequency reads\n  (bsc#1236289).\n- commit ee086d6\n\n- x86/aperfmperf: Make parts of the frequency invariance code\n  unconditional (bsc#1236289).\n- commit 63ca54c\n\n- x86/aperfmperf: Restructure arch_scale_freq_tick()\n  (bsc#1236289).\n- commit e174ebc\n\n- x86/aperfmperf: Put frequency invariance aperf/mperf data into\n  a struct (bsc#1236289).\n- commit 9273def\n\n- x86/aperfmperf: Untangle Intel and AMD frequency invariance init\n  (bsc#1236289).\n- commit eb608bb\n\n- x86/aperfmperf: Separate AP/BP frequency invariance init\n  (bsc#1236289).\n- commit 1b8b243\n\n- Update patches.suse/tipc-fix-NULL-deref-in-cleanup_bearer.patch\n  (bsc#1235433 CVE-2024-56661 bsc#1234931).\n- commit cb91989\n\n- Update\n  patches.suse/jffs2-Prevent-rtime-decompress-memory-corruption.patch\n  (git-fixes CVE-2024-57850 bsc#1235812).\n- Update patches.suse/nilfs2-prevent-use-of-deleted-inode.patch\n  (git-fixes CVE-2024-53690 bsc#1235842).\n- Update\n  patches.suse/powerpc-pseries-vas-Add-close-callback-in-vas_vm_ops.patch\n  (bsc#1234825 CVE-2024-56765 bsc#1235643).\n- commit f49a45b\n\n- x86/smp: Move APERF/MPERF code where it belongs (bsc#1236289).\n- Refresh\n  patches.suse/xen-allow-mapping-ACPI-data-using-a-different-physic.patch.\n- commit c07ad15\n\n- net: inet: do not leave a dangling sk pointer in inet_create()\n  (CVE-2024-56601 bsc#1235230).\n- commit b4769c0\n\n- x86/smp: Remove unnecessary assignment to local var freq_scale\n  (bsc#1236289).\n- commit a83ed82\n\n- x86/aperfmperf: Dont wake idle CPUs in arch_freq_get_on_cpu()\n  (bsc#1236289).\n- commit bfe5599\n\n- README.BRANCH: Add Vasilis as a maintainer\n- commit a02a3e0\n\n- ceph: improve error handling and short/overflow-read logic in\n  __ceph_sync_read() (bsc#1228592).\n- commit 7a83331\n\n- btrfs: fix use-after-free when COWing tree bock and tracing\n  is enabled (bsc#1235645 CVE-2024-56759).\n- commit e811c1c\n\n- gpiolib: cdev: fix uninitialised kfifo (git-fixes bsc#1225736\n  CVE-2024-36898).\n- commit f6b2a4f\n\n- Fix compiler warning introduced in\n  patches.suse/udf-Avoid-excessive-partition-lengths.patch.\n- commit fcad12d\n\n- scsi: qla2xxx: Fix use after free on unload (CVE-2024-56623\n  bsc#1235466).\n- block, bfq: fix bfqq uaf in bfq_limit_depth() (CVE-2024-53166\n  bsc#1234884).\n- commit 894e940\n\n- Refresh\n  patches.suse/x86-xen-don-t-do-PV-iret-hypercall-through-hypercall.patch.\n- commit df281af\n\n- x86/static-call: Remove early_boot_irqs_disabled check to fix\n  Xen PVH dom0 (git-fixes).\n- commit 2c0880a\n\n- bnxt_en: Fix receive ring space parameters when XDP is active\n  (CVE-2024-53209 bsc#1235002).\n- commit d4ecf76\n\n- Fix broken order in series.conf\n- commit e5bdf00\n\n- ALSA: seq: oss: Fix races at processing SysEx messages\n  (CVE-2024-57893 bsc#1235920).\n- commit f05049d\n\n- Refresh\n  patches.suse/RDMA-hns-Fix-VF-triggering-PF-reset-in-abnormal-inte.patch.\n  exportpatch and refresh to have increasing line numbers, rapidquilt\n  could've ignored that:\n  warning: patches.suse/RDMA-hns-Fix-VF-triggering-PF-reset-in-abnormal-inte.patch:\n    Possibly ignored hunk: @@ -5829,10 +5830,12 @@ static irqreturn_t hns_roce_v2_msix_interrupt_abn(int irq, void *dev_id)\n- commit eb2308c\n\n- drm/dp_mst: Ensure mst_primary pointer is valid in drm_dp_mst_handle_up_req() (CVE-2024-57798 bsc#1235818).\n- commit 570da1e\n\n- drm/dp_mst: Ensure mst_primary pointer is valid in drm_dp_mst_handle_up_req() (CVE-2024-57798 bsc#1235818).\n- commit 15490f2\n\n- net/smc: check return value of sock_recvmsg when draining clc\n  data (CVE-2024-57791 bsc#1235759).\n- commit b879d55\n\n- power: supply: gpio-charger: Fix set charge current limits\n  (git-fixes CVE-2024-57792 bsc#1235764).\n- commit 80ed527\n\n- bpf, sockmap: Fix race between element replace and close()\n  (CVE-2024-56664 bsc#1235249).\n- commit 03e2626\n\n- virt: tdx-guest: Just leak decrypted memory on unrecoverable\n  errors (CVE-2024-57793 bsc#1235768).\n- commit 9f7ed49\n\n- s390/cpum_sf: Handle CPU hotplug remove during sampling\n  (CVE-2024-57849 bsc#1235814).\n- commit e03f9af\n\n- Update\n  patches.suse/ALSA-caiaq-Use-snd_card_free_when_closed-at-disconne.patch\n  (git-fixes CVE-2024-56531 bsc#1235057).\n- Update\n  patches.suse/ALSA-us122l-Use-snd_card_free_when_closed-at-disconn.patch\n  (git-fixes CVE-2024-56532 bsc#1235059).\n- Update\n  patches.suse/ALSA-usx2y-Use-snd_card_free_when_closed-at-disconne.patch\n  (git-fixes CVE-2024-56533 bsc#1235053).\n- Update\n  patches.suse/Bluetooth-MGMT-Fix-slab-use-after-free-Read-in-set_p.patch\n  (git-fixes CVE-2024-53208 bsc#1234909).\n- Update\n  patches.suse/Bluetooth-hci_event-Align-BR-EDR-JUST_WORKS-paring-w.patch\n  (git-fixes bsc#1230697 CVE-2024-8805 CVE-2024-53144\n  bsc#1234690).\n- Update\n  patches.suse/HID-wacom-fix-when-get-product-name-maybe-null-point.patch\n  (git-fixes CVE-2024-56629 bsc#1235473).\n- Update\n  patches.suse/NFSD-Prevent-NULL-dereference-in-nfsd4_process_cb_update.patch\n  (git-fixes CVE-2024-53217 bsc#1234999).\n- Update patches.suse/PCI-Fix-reset_method_store-memory-leak.patch\n  (git-fixes CVE-2024-56745 bsc#1235563).\n- Update\n  patches.suse/RDMA-hns-Fix-cpu-stuck-caused-by-printings-during-re.patch\n  (git-fixes CVE-2024-56722 bsc#1235570).\n- Update\n  patches.suse/RDMA-mlx5-Move-events-notifier-registration-to-be-af.patch\n  (git-fixes CVE-2024-53224 bsc#1235009).\n- Update\n  patches.suse/RDMA-rxe-Fix-the-qp-flush-warnings-in-req.patch\n  (git-fixes CVE-2024-53229 bsc#1234905).\n- Update\n  patches.suse/Revert-mmc-dw_mmc-Fix-IDMAC-operation-with-pages-big.patch\n  (git-fixes CVE-2024-53127 bsc#1234153).\n- Update\n  patches.suse/SUNRPC-make-sure-cache-entry-active-before-cache_show.patch\n  (git-fixes CVE-2024-53174 bsc#1234899).\n- Update\n  patches.suse/ad7780-fix-division-by-zero-in-ad7780_write_raw.patch\n  (git-fixes CVE-2024-56567 bsc#1234916).\n- Update\n  patches.suse/arm64-sve-Discard-stale-CPU-state-when-handling-SVE-traps.patch\n  (git-fixes CVE-2024-50275 bsc#1233464).\n- Update\n  patches.suse/can-j1939-j1939_session_new-fix-skb-reference-counti.patch\n  (git-fixes CVE-2024-56645 bsc#1235134).\n- Update\n  patches.suse/comedi-Flush-partial-mappings-in-error-case.patch\n  (git-fixes CVE-2024-53148 bsc#1234832).\n- Update\n  patches.suse/crypto-bcm-add-error-check-in-the-ahash_hmac_init-fu.patch\n  (git-fixes CVE-2024-56681 bsc#1235557).\n- Update\n  patches.suse/crypto-caam-Fix-the-pointer-passed-to-caam_qi_shutdo.patch\n  (git-fixes CVE-2024-56754 bsc#1234918).\n- Update\n  patches.suse/drm-rockchip-vop-Fix-a-dereferenced-before-check-war.patch\n  (git-fixes CVE-2024-53129 bsc#1234155).\n- Update\n  patches.suse/drm-sti-avoid-potential-dereference-of-error-pointer-831214f.patch\n  (git-fixes CVE-2024-56776 bsc#1235647).\n- Update\n  patches.suse/drm-sti-avoid-potential-dereference-of-error-pointer-e965e77.patch\n  (git-fixes CVE-2024-56777 bsc#1235641).\n- Update\n  patches.suse/drm-sti-avoid-potential-dereference-of-error-pointer.patch\n  (git-fixes CVE-2024-56778 bsc#1235635).\n- Update\n  patches.suse/i3c-master-Fix-miss-free-init_dyn_addr-at-i3c_master.patch\n  (git-fixes CVE-2024-56562 bsc#1234930).\n- Update\n  patches.suse/i40e-Fix-XDP-program-unloading-while-removing-the-dr.patch\n  (git-fixes CVE-2024-41047 bsc#1228537).\n- Update\n  patches.suse/iio-adc-ad7923-Fix-buffer-overflow-for-tx_buf-and-ri.patch\n  (git-fixes CVE-2024-56557 bsc#1235122).\n- Update\n  patches.suse/jffs2-prevent-xattr-node-from-overflowing-the-eraseblock.patch\n  (git-fixes CVE-2024-38599 bsc#1226848 bsc#1223384).\n- Update\n  patches.suse/jfs-add-a-check-to-prevent-array-index-out-of-bounds-in-dbAdjTree.patch\n  (git-fixes CVE-2024-56595 bsc#1235410).\n- Update\n  patches.suse/jfs-fix-array-index-out-of-bounds-in-jfs_readdir.patch\n  (git-fixes CVE-2024-56596 bsc#1235458).\n- Update patches.suse/jfs-fix-shift-out-of-bounds-in-dbSplit.patch\n  (git-fixes CVE-2024-56597 bsc#1235222).\n- Update\n  patches.suse/md-Don-t-ignore-suspended-array-in-md_check_recovery-1baa.patch\n  (git-fixes CVE-2024-26758 bsc#1230341).\n- Update\n  patches.suse/msft-hv-3081-hv_sock-Initializing-vsk-trans-to-NULL-to-prevent-a-.patch\n  (git-fixes CVE-2024-53103 bsc#1234024).\n- Update\n  patches.suse/msft-hv-3095-Drivers-hv-util-Avoid-accessing-a-ringbuffer-not-ini.patch\n  (git-fixes CVE-2024-55916 bsc#1235747).\n- Update\n  patches.suse/net-ipv6-release-expired-exception-dst-cached-in-soc.patch\n  (bsc#1216813 CVE-2024-56644 bsc#1235133).\n- Update\n  patches.suse/net-mlx5-Unregister-notifier-on-eswitch-init-failure.patch\n  (git-fixes CVE-2024-50136 bsc#1232914).\n- Update\n  patches.suse/net-mlx5-fs-lock-FTE-when-checking-if-active.patch\n  (git-fixes CVE-2024-53121 bsc#1234078).\n- Update\n  patches.suse/net-mlx5e-Take-state-lock-during-tx-timeout-reporter.patch\n  (git-fixes CVE-2024-45019 bsc#1230432).\n- Update\n  patches.suse/net-mlx5e-kTLS-Fix-incorrect-page-refcounting.patch\n  (git-fixes CVE-2024-53138 bsc#1234223).\n- Update\n  patches.suse/nfsd-make-sure-exp-active-before-svc_export_show.patch\n  (git-fixes CVE-2024-56558 bsc#1235100).\n- Update\n  patches.suse/nouveau-dmem-handle-kcalloc-allocation-failure.patch\n  (git-fixes CVE-2024-26943 bsc#1230527).\n- Update\n  patches.suse/nvme-fabrics-fix-kernel-crash-while-shutting-down-co.patch\n  (git-fixes CVE-2024-53169 bsc#1234900).\n- Update\n  patches.suse/nvme-pci-fix-freeing-of-the-HMB-descriptor-table.patch\n  (git-fixes CVE-2024-56756 bsc#1234922).\n- Update\n  patches.suse/ocfs2-uncache-inode-which-has-failed-entering-the-group.patch\n  (bsc#1234087 CVE-2024-53112).\n- Update\n  patches.suse/posix-clock-posix-clock-Fix-unbalanced-locking-in-pc.patch\n  (CVE-2024-50195 bsc#1233103 CVE-2024-50210 bsc#1233097).\n- Update\n  patches.suse/powerpc-mm-fault-Fix-kfence-page-fault-reporting.patch\n  (bsc#1194869 CVE-2024-56678 bsc#1235495).\n- Update\n  patches.suse/powerpc-pseries-Fix-dtl_access_lock-to-be-a-rw_semap.patch\n  (bsc#1194869 CVE-2024-56701 bsc#1235496).\n- Update\n  patches.suse/rtc-check-if-__rtc_read_time-was-successful-in-rtc_t.patch\n  (git-fixes CVE-2024-56739 bsc#1235611).\n- Update\n  patches.suse/smb-client-fix-TCP-timers-deadlock-after-rmmod.patch\n  (CVE-2024-53095 bsc#1233642 CVE-2024-54680 bsc#1235723).\n- Update\n  patches.suse/spi-mpc52xx-Add-cancel_work_sync-before-module-remov.patch\n  (git-fixes CVE-2024-50051 bsc#1235739).\n- Update patches.suse/svcrdma-Address-an-integer-overflow.patch\n  (git-fixes CVE-2024-53151 bsc#1234829).\n- Update\n  patches.suse/svcrdma-fix-miss-destroy-percpu_counter-in-svc_rdma_proc_init.patch\n  (git-fixes CVE-2024-53215 bsc#1234962).\n- Update\n  patches.suse/ubifs-authentication-Fix-use-after-free-in-ubifs_tnc_end_commit.patch\n  (git-fixes CVE-2024-53171 bsc#1234889).\n- Update\n  patches.suse/usb-dwc3-gadget-Fix-looping-of-queued-SG-entries.patch\n  (git-fixes CVE-2024-56698 bsc#1235491).\n- commit 69d54c1\n\n- Update\n  patches.suse/smb-client-fix-TCP-timers-deadlock-after-rmmod.patch\n  (CVE-2024-53095 bsc#1233642 CVE-2024-54680 bsc#1235723).\n- commit 6deb1aa\n\n- smb: client: fix OOBs when building SMB2_IOCTL request\n  (bsc#1233055, CVE-2024-50151).\n- commit d88d397\n\n- mm/swapfile: skip HugeTLB pages for unuse_vma (CVE-2024-50199\n  bsc#1233112).\n- commit 63ec06b\n\n- tipc: fix NULL deref in cleanup_bearer() (bsc#1235433).\n- commit a0043a3\n\n- README.BRANCH: SLE15-SP5 became LTSS, update maintainers\n- commit 513a34e\n\n- scsi: sg: Fix slab-use-after-free read in sg_release()\n  (CVE-2024-56631 bsc#1235480).\n- commit 9399f03\n\n- 9p/xen: fix release of IRQ (CVE-2024-56704 bsc#1235584).\n- commit 614e74c\n\n- net: ieee802154: do not leave a dangling sk pointer in\n  ieee802154_create() (CVE-2024-56602 bsc#1235521).\n- commit 4049cc5\n\n- net: hsr: avoid potential out-of-bound access in\n  fill_frame_info() (CVE-2024-56648 bsc#1235451).\n- commit 0a88cb0\n\n- ovl: Filter invalid inodes with missing lookup function\n  (bsc#1235035 CVE-2024-56570).\n- commit 54169ab\n\n- NFSv4.0: Fix a use-after-free problem in the asynchronous open()\n  (CVE-2024-53173 bsc#1234891).\n- commit f801b5b\n\n- tipc: Fix use-after-free of kernel socket in cleanup_bearer()\n  (CVE-2024-56642 bsc#1235433).\n- commit ec9cc8d\n\n- sctp: properly validate chunk size in sctp_sf_ootb() (CVE-2024-50299 bsc#1233488)\n- commit 8a0e9b7\n\n- can: j1939: j1939_session_new(): fix skb reference counting\n  (CVE-2024-56645 bsc#1235134).\n- commit 5011af1\n\n- Bluetooth: L2CAP: do not leave dangling sk pointer on error\n  in l2cap_sock_create() (CVE-2024-56605 bsc#1235061).\n- commit c461209\n\n- Run scripts/renamepatches for cve/linux-5.14-LTSS\n- commit 6a1366b\n\n- idpf: trigger SW interrupt when exiting wb_on_itr mode\n  (bsc#1235507).\n- idpf: add support for SW triggered interrupts (bsc#1235507).\n- net: mana: Increase the DEF_RX_BUFFERS_PER_QUEUE to 1024\n  (bsc#1235246).\n- idpf: enable WB_ON_ITR (bsc#1235507).\n- commit b33decb\n\n- smb: client: fix use-after-free of signing key (CVE-2024-53179\n  bsc#1234921).\n- commit 86400c7\n\n- smb: client: fix TCP timers deadlock after rmmod (git-fixes)\n  [hcarvalho: this fixes issue discussed in bsc#1233642].\n- commit 3e3e1af\n\n- smb: client: Fix use-after-free of network namespace\n  (CVE-2024-53095 bsc#1233642).\n  [hcarvalho: remove netfs_tracker_* related code because we don't have\n  such infrastructure.]\n- commit 97b2d9e\n\n- wifi: mwifiex: Fix memcpy() field-spanning write warning in\n  mwifiex_config_scan() (CVE-2024-56539 bsc#1234963).\n- commit e27d4b2\n\n- Refresh\n  patches.suse/nfsd-restore-callback-functionality-for-NFSv4.0.patch.\n- commit 60bcd54\n\n- vfio/pci: Properly hide first-in-list PCIe extended capability\n  (bsc#1235004 CVE-2024-53214).\n- commit f520125\n\n- Bluetooth: RFCOMM: avoid leaving dangling sk pointer in\n  rfcomm_sock_alloc() (bsc#1235056 CVE-2024-56604).\n- commit cf32d9d\n\n- Bluetooth: Consolidate code around sk_alloc into a helper\n  function (bsc#1235056 CVE-2024-56604).\n  Refresh\n  patches.suse/Bluetooth-SCO-Fix-UAF-on-sco_sock_timeout.patch.\n- commit 4de890e\n\n- nilfs2: fix potential out-of-bounds memory access in\n  nilfs_find_entry() (bsc#1235224 CVE-2024-56619).\n- commit b3f788e\n\n- powerpc/pseries/vas: Add close() callback in vas_vm_ops struct\n  (bsc#1234825).\n- commit 7ec9265\n\n- jfs: array-index-out-of-bounds fix in dtReadFirst (bsc#1235220\n  CVE-2024-56598).\n- commit 4762f9a\n\n- Drivers: hv: util: Avoid accessing a ringbuffer not initialized yet (git-fixes).\n- commit b016f85\n\n- hfsplus: don't query the device logical block size multiple\n  times (bsc#1235073 CVE-2024-56548).\n- commit 67473c2\n\n- netfs/fscache: Add a memory barrier for FSCACHE_VOLUME_CREATING\n  (CVE-2024-56755 bsc#1234920).\n- cachefiles: Fix NULL pointer dereference in object-\u0026gt;file\n  (CVE-2024-56549 bsc#1234912).\n- commit 169a95b\n\n- wifi: ath9k: add range check for conn_rsp_epid in\n  htc_connect_service() (CVE-2024-53156 bsc#1234846).\n- commit 747e664\n\n- ALSA: 6fire: Release resources at card release (CVE-2024-53239\n  bsc#1235054).\n- commit 6995b0a\n\n- media: imx-jpeg: Ensure power suppliers be suspended before\n  detach them (CVE-2024-56575 bsc#1235039).\n- media: uvcvideo: Require entities to have a non-zero unique ID\n  (CVE-2024-56571 bsc#1235037).\n- commit 59cd438\n\n- NFSD: Prevent a potential integer overflow (CVE-2024-53146\n  bsc#1234853).\n- commit 79b751c\n\n- net: usb: lan78xx: Fix double free issue with interrupt buffer\n  allocation (CVE-2024-53213 bsc#1234973).\n- commit 15155a2\n\n- netfilter: ipset: add missing range check in bitmap_ip_uadt (CVE-2024-53141 bsc#1234381)\n- commit 8160e7d\n\n- Update\n  patches.suse/tcp-Fix-use-after-free-of-nreq-in-reqsk_timer_handler.patch\n  (CVE-2024-50154 bsc#1233070 CVE-2024-53206 bsc#1234960).\n- commit cdf9cb8\n\n- Update\n  patches.suse/media-s5p_cec-limit-msg.len-to-CEC_MAX_MSG_SIZE.patch\n  (git-fixes CVE-2022-49035 bsc#1215304).\n- commit d91bb81\n\n- firmware: arm_scpi: Check the DVFS OPP count returned by the\n  firmware (CVE-2024-53157 bsc#1234827).\n- commit f110472\n\n- EDAC/bluefield: Fix potential integer overflow (CVE-2024-53161\n  bsc#1234856).\n- commit 14c13f2\n\n- s390/iucv: MSG_PEEK causes memory leak in iucv_sock_destruct()\n  (CVE-2024-53210 bsc#1234971).\n- commit bcc5771\n\n- soc: qcom: geni-se: fix array underflow in geni_se_clk_tbl_get()\n  (CVE-2024-53158 bsc#1234811).\n- commit 9318192\n\n- crypto: qat/qat_4xxx - fix off by one in uof_get_name()\n  (CVE-2024-53162 bsc#1234843).\n- commit 21fafcd\n\n- ALSA: usb-audio: Fix out of bounds reads when finding clock\n  sources (CVE-2024-53150 bsc#1234834).\n- commit 9ca989f\n\n- svcrdma: Address an integer overflow (git-fixes).\n- commit d7773b3\n\n- nfsd: restore callback functionality for NFSv4.0 (git-fixes).\n- commit 49f5582\n\n- jffs2: Fix rtime decompressor (git-fixes).\n- commit 6531a08\n\n- proc/softirqs: replace seq_printf with seq_put_decimal_ull_width\n  (git-fixes).\n- commit fcfe46d\n\n- zonefs: fix zone report size in __zonefs_io_error() (git-fixes).\n- commit 830e757\n\n- autofs: use flexible array in ioctl structure (git-fixes).\n- commit 7918406\n\n- NFS/pnfs: Fix a live lock between recalled layouts and layoutget\n  (git-fixes).\n- commit 8cdded6\n\n- nilfs2: fix potential out-of-bounds memory access in\n  nilfs_find_entry() (git-fixes).\n- commit 899e98d\n\n- jffs2: Prevent rtime decompress memory corruption (git-fixes).\n- commit 5a66060\n\n- jffs2: fix use of uninitialized variable (git-fixes).\n- commit a9dd4d9\n\n- ubifs: authentication: Fix use-after-free in\n  ubifs_tnc_end_commit (git-fixes).\n- commit 83c8733\n\n- ubifs: Correct the total block count by deducting journal\n  reservation (git-fixes).\n- commit f37e257\n\n- exfat: fix uninit-value in __exfat_get_dentry_set (git-fixes).\n- commit d4858c9\n\n- jfs: add a check to prevent array-index-out-of-bounds in\n  dbAdjTree (git-fixes).\n- commit 44ea6d2\n\n- jfs: xattr: check invalid xattr size more strictly (git-fixes).\n- commit cf31b3c\n\n- jfs: fix array-index-out-of-bounds in jfs_readdir (git-fixes).\n- commit db0dc92\n\n- jfs: fix shift-out-of-bounds in dbSplit (git-fixes).\n- commit ea62655\n\n- jfs: array-index-out-of-bounds fix in dtReadFirst (git-fixes).\n- commit fe23c21\n\n- hfsplus: don't query the device logical block size multiple\n  times (git-fixes).\n- commit e73ecea\n\n- nilfs2: prevent use of deleted inode (git-fixes).\n- commit b6ac8cc\n\n- nfsd: restore callback functionality for NFSv4.0 (git-fixes).\n- commit e4d2610\n\n- ipc/sem: Fix dangling sem_array access in semtimedop race\n  (bsc#1234727).\n- commit 4dce14b\n\n- idpf: fix idpf_vc_core_init error path (CVE-2024-53064\n  bsc#1233558 bsc#1234464).\n- commit 0a1be5c\n\n- x86/xen: use new hypercall functions instead of hypercall page\n  (XSA-466 CVE-2024-53241 bsc#1234282).\n- commit 439afbb\n\n- btrfs: qgroup: fix sleep from invalid context bug in\n  btrfs_qgroup_inherit() (CVE-2022-49033 bsc#1232045).\n- commit 5b9ca25\n\n- x86/xen: add central hypercall functions (XSA-466 CVE-2024-53241\n  bsc#1234282).\n- commit 1784c5e\n\n- x86/xen: don't do PV iret hypercall through hypercall page\n  (XSA-466 CVE-2024-53241 bsc#1234282).\n- commit 9f17f93\n\n- x86/static-call: provide a way to do very early static-call\n  updates (XSA-466 CVE-2024-53241 bsc#1234282).\n- Refresh patches.kabi/tracepoint-fix.patch.\n- commit 2e422a6\n\n- objtool/x86: allow syscall instruction (XSA-466 CVE-2024-53241\n  bsc#1234282).\n- commit 1f61d5b\n\n- x86: make get_cpu_vendor() accessible from Xen code (XSA-466\n  CVE-2024-53241 bsc#1234282).\n- commit 4d90703\n\n- xen/netfront: fix crash when removing device (XSA-465\n  CVE-2024-53240 bsc#1234281).\n- commit f11b367\n\n- ACPI/HMAT: Move HMAT messages to pr_debug() (bsc#1234294)\n- commit 0ac2c22\n\n- arm64: Ensure bits ASID[15:8] are masked out when the kernel uses (bsc#1234605)\n- commit b2083ef\n\n- nfsd: remove unsafe BUG_ON from set_change_info (bsc#1234650\n  bsc#1233701 bsc#1232472).\n- commit ed45f70\n\n- NFSD: reduce locking in nfsd_lookup() (bsc#1234650 bsc#1233701\n  bsc#1232472).\n- blacklist.conf:\n- commit a5863a4\n\n- NFSD: Move fill_pre_wcc() and fill_post_wcc() (bsc#1234650\n  bsc#1233701 bsc#1232472).\n- blacklist.conf:\n- Refresh\n  patches.suse/nfsd-Fix-error-cleanup-path-in-nfsd_rename.patch.\n- Refresh\n  patches.suse/rename-avoid-a-deadlock-in-the-case-of-parents-havin.patch.\n- commit 6fcc887\n\n- devlink: allow registering parameters after the instance\n  (bsc#1231388 bsc#1230422).\n- devlink: don't require setting features before registration\n  (bsc#1231388 bsc#1230422).\n- commit 9e0a4cd\n\n- Update\n  patches.suse/Bluetooth-hci_event-Align-BR-EDR-JUST_WORKS-paring-w.patch\n  (git-fixes, bsc#1230697, CVE-2024-8805).\n- commit 32c6a1b\n\n- tpm_tis_spi: Release chip select when flow control fails (bsc#1234338)\n- commit 6d2db63\n\n- bpf: sync_linked_regs() must preserve subreg_def (bsc#1234156\n  CVE-2024-53125).\n- commit f08e931\n\n- scsi: pm80xx: Set phy-\u0026gt;enable_completion only when we wait\n  for it (CVE-2024-47666 bsc#1231453).\n- commit 6eaab68\n\n- kobject: Add sanity check for kset-\u0026gt;kobj.ktype in\n  kset_register() (bsc#1234639).\n- commit 191167d\n\n- NFSv4.0: Fix a use-after-free problem in the asynchronous open()\n  (git-fixes).\n- commit b63fc00\n\n- NFSD: Fix nfsd4_shutdown_copy() (git-fixes).\n- commit 374eb43\n\n- svcrdma: fix miss destroy percpu_counter in svc_rdma_proc_init()\n  (git-fixes).\n- commit 876ac53\n\n- SUNRPC: make sure cache entry active before cache_show\n  (git-fixes).\n- commit 23bad23\n\n- nfsd: make sure exp active before svc_export_show (git-fixes).\n- commit 8fcab75\n\n- NFSD: Prevent NULL dereference in nfsd4_process_cb_update()\n  (git-fixes).\n- commit 3703ee5\n\n- NFSD: Prevent a potential integer overflow (git-fixes).\n- commit 69abaa2\n\n- sunrpc: simplify two-level sysctl registration for\n  svcrdma_parm_table (git-fixes).\n- commit fcf1dc3\n\n- net: Make copy_safe_from_sockptr() match documentation\n  (git-fixes CVE-2024-36915 bsc#1225758).\n- commit 6fb42a1\n\n- RDMA/hns: Disassociate mmap pages for all uctx when HW is being reset (git-fixes)\n- commit 979dbfa\n\n- autofs: fix memory leak of waitqueues in autofs_catatonic_mode\n  (git-fixes).\n- Refresh\n  patches.suse/autofs-use-wake_up-instead-of-wake_up_interruptible.patch.\n- commit 9fa435f\n\n- Delete patches.suse/NFSD-Convert-the-callback-workqueue-to-use-delayed_w.patch.  (bsc#1233837)\n- Delete patches.suse/NFSD-Reschedule-CB-operations-when-backchannel-rpc_c.patch.  (bsc#1233837)\n- commit 60721fe\n\n- arm64: dts: allwinner: pinephone: Add mount matrix to\n  accelerometer (git-fixes).\n- commit 9be38ad\n\n- arm64: dts: rockchip: Fix LED triggers on rk3308-roc-cc\n  (git-fixes).\n- commit 17eb8d6\n\n- bpf: Fix out-of-bounds write in trie_get_next_key() (CVE-2024-50262 bsc#1233239)\n- commit 9c19140\n\n- platform/x86/amd/pmc: Detect when STB is not available (CVE-2024-53072 bsc#1233564)\n- commit 1335d85\n\n- Update references for patches.suse/net-mlx5e-CT-Fix-null-ptr-deref-in-add-rule-err-flow.patch (CVE-2024-53120 bsc#1234075 git-fixes)\n- commit abf5898\n\n- fs: Fix uninitialized value issue in from_kuid and from_kgid (CVE-2024-53101 bsc#1233769)\n- commit e038166\n\n- mptcp: cope racing subflow creation in mptcp_rcv_space_adjust (CVE-2024-53122 bsc#1234076)\n- commit 31129d0\n\n- virtio/vsock: Fix accept_queue memory leak (CVE-2024-53119 bsc#1234073)\n- commit 30399e1\n\n- arm64: dts: rockchip: Remove #cooling-cells from fan on\n  Theobroma lion (git-fixes).\n- commit 4b88506\n\n- arm64: dts: rockchip: Fix bluetooth properties on Rock960 boards\n  (git-fixes).\n- commit 836dd0e\n\n- arm64: dts: rockchip: Remove hdmi's 2nd interrupt on rk3328\n  (git-fixes).\n- commit 4d37495\n\n- arm64: dts: rockchip: Fix rt5651 compatible value on\n  rk3399-sapphire-excavator (git-fixes).\n- commit d0928c0\n\n- Fix bug introduced in backport of\n  patches.suse/udf_rename-only-access-the-child-content-on-cross-di.patch.\n- commit ae1fb0a\n\n- udf: Handle error when adding extent to a file (bsc#1234437).\n- commit dbea247\n\n- kabi/severities: ignore intermodule symbols between fsl_fman and fsl_dpaa_eth\n- commit 05606f9\n\n- net: preserve kabi for napi_struct and net_device\n  (CVE-2024-50018 bsc#1232419).\n- netfilter: nf_reject_ipv6: fix potential crash in\n  nf_send_reset6() (CVE-2024-50256 bsc#1233200).\n- fsl/fman: Fix refcount handling of fman-related devices\n  (CVE-2024-50166 bsc#1233050).\n- fsl/fman: Save device references taken in mac_probe()\n  (CVE-2024-50166 bsc#1233050).\n- net: napi: Prevent overflow of napi_defer_hard_irqs\n  (CVE-2024-50018 bsc#1232419).\n- net: fman: Unregister ethernet device on removal (CVE-2024-50166\n  bsc#1233050).\n- commit e372e18\n\n- afs: Fix lock recursion (bsc#1233637 CVE-2024-53090).\n- commit 41b742a\n\n- nilfs2: propagate directory read errors from nilfs_find_entry()\n  (bsc#1233324 CVE-2024-50202).\n- commit bad80aa\n\n- netfilter: nft_set_pipapo: do not free live element\n  (CVE-2024-26924 bsc#1223387).\n- commit f3a511c\n\n- rtnetlink: make sure to refresh master_dev/m_ops in\n  __rtnl_newlink() (CVE-2022-48742 bsc#1226694).\n- commit 36fae5a\n\n- Update References: field,\n  patches.suse/dm-cache-fix-flushing-uninitialized-delayed_work-on--1354.patch\n  (bsc#1233467, CVE-2024-50278, bsc#1233469, CVE-2024-50280).\n- commit ccb7c34\n\n- Delete\n  patches.suse/smb-client-Fix-use-after-free-of-network-namespace-.patch\n  (bsc#1233642 CVE-2024-53095).\n  [hcarvalho: revert because the fix is incomplete. The patch fixes UAF of\n  network namespace but causes in another UAF (of the socket) when the\n  cifs module is removed].\n- commit 393d09d\n\n- dmaengine: idxd: Check for driver name match before sva user\n  feature (bsc#1234357).\n- dmaengine: idxd: add wq driver name support for accel-config\n  user tool (bsc#1234357).\n- commit 9a15d19\n\n- kABI: bpf: support non-r10 register spill/fill to/from stack\n  in precision tracking (bsc#1232823 CVE-2023-52920).\n- bpf: Fix check_stack_write_fixed_off() to correctly spill imm\n  (bsc#1232823 CVE-2023-52920).\n- Refresh patches.suse/bpf-support-non-r10-register-spill-fill-to-from-stac.patch\n- Refresh patches.suse/bpf-handle-fake-register-spill-to-stack-with-BPF_ST_.patch\n- commit 66c4fd1\n\n- scatterlist: fix incorrect func name in kernel-doc (git-fixes).\n- drm/v3d: Enable Performance Counters before clearing them\n  (git-fixes).\n- drm/sti: Add __iomem for mixer_dbg_mxn's parameter (git-fixes).\n- dma-fence: Fix reference leak on fence merge failure path\n  (git-fixes).\n- regmap: detach regmap from dev on regmap_exit (git-fixes).\n- spi: mpc52xx: Add cancel_work_sync before module remove\n  (git-fixes).\n- mmc: core: Further prevent card detect during shutdown\n  (git-fixes).\n- commit a85e5af\n\n- bpf: handle fake register spill to stack with BPF_ST_MEM\n  instruction (bsc#1232823 CVE-2023-52920).\n- commit 145a13f\n\n- bpf: support non-r10 register spill/fill to/from stack in\n  precision tracking (bsc#1232823 CVE-2023-52920).\n- Refresh patches.suse/bpf-Fix-accesses-to-uninit-stack-slots.patch\n- Refresh patches.kabi/bpf-bpf_idmap-idset-workaround.patch\n- Refresh patches.kabi/bpf-callback-fixes-kABI-workaround.patch\n- bpf: Fix verifier id tracking of scalars on spill (bsc#1232823\n  CVE-2023-52920).\n- commit 67aeddf\n\n- selftests/bpf: check if BPF_ST with variable offset preserves\n  STACK_ZERO (bsc#1232823 CVE-2023-52920).\n- bpf: BPF_ST with variable offset should preserve STACK_ZERO\n  marks (bsc#1232823 CVE-2023-52920).\n- Refresh patches.suse/bpf-Fix-accesses-to-uninit-stack-slots.patch\n- selftests/bpf: check if verifier tracks constants spilled by\n  BPF_ST_MEM (bsc#1232823 CVE-2023-52920).\n- bpf: track immediate values written to stack by BPF_ST\n  instruction (bsc#1232823 CVE-2023-52920).\n- Refresh patches.suse/bpf-Fix-accesses-to-uninit-stack-slots.patch\n- commit 65c1ce3\n\n- nilfs2: fix null-ptr-deref in block_touch_buffer tracepoint\n  (bsc#1234220 CVE-2024-53131).\n- commit 026d687\n\n- nilfs2: fix null-ptr-deref in block_dirty_buffer tracepoint\n  (bsc#1234219 CVE-2024-53130).\n- commit 76ddd8d\n\n- udf: refactor udf_next_aext() to handle error (bsc#1234241).\n- commit cb2148b\n\n- udf: refactor udf_current_aext() to handle error (bsc#1234240).\n- commit 379ead1\n\n- udf: fix uninit-value use in udf_get_fileshortad (bsc#1234243\n  bsc#1233038 CVE-2024-50143).\n- commit 74fc0bf\n\n- udf: refactor inode_bmap() to handle error (bsc#1234242\n  bsc#1233096 CVE-2024-50211).\n- commit 4a34764\n\n- mm: fix NULL pointer dereference in alloc_pages_bulk_noprof\n  (CVE-2024-53113 bsc#1234077).\n- commit 064f5f8\n\n- mm/kfence: reset PG_slab and memcg_data before freeing\n  __kfence_pool (bsc#1234120).\n- commit b3bbd4a\n\n- x86/CPU/AMD: Clear virtualized VMLOAD/VMSAVE on Zen4 client (bsc#1234072 CVE-2024-53114).\n- commit 05659e3\n\n- net/ipv6: release expired exception dst cached in socket\n  (bsc#1216813).\n- commit eda9477\n\n- Update\n  patches.suse/initramfs-avoid-filename-buffer-overrun.patch\n  (CVE-2024-53142 bsc#1232436).\n- commit 14f79ec\n\n- net: bridge: mcast: wait for previous gc cycles when removing\n  port (CVE-2024-44934 bsc#1229809).\n- Bluetooth: af_bluetooth: Fix deadlock (CVE-2024-26886\n  bsc#1223044).\n- commit fc48798\n\n- scsi: storvsc: Do not flag MAINTENANCE_IN return of SRB_STATUS_DATA_OVERRUN as an error (git-fixes).\n- commit 8769bc2\n\n- dm cache: fix potential out-of-bounds access on the first resume\n  (bsc#1233467, CVE-2024-50278).\n- dm cache: optimize dirty bit checking with find_next_bit when\n  resizing (bsc#1233467, CVE-2024-50278).\n- commit ea1471d\n\n- Update the Rerferences: field,\n  patches.suse/dm-cache-fix-out-of-bounds-access-to-the-dirty-bitset-when-resizing.patch\n  (bsc#1233467, bsc#1233468, CVE-2024-50278, CVE-2024-50279).\n- commit 685afd3\n\n- dm cache: fix flushing uninitialized delayed_work on cache_ctr\n  error (bsc#1233467, CVE-2024-50278).\n- dm cache: correct the number of origin blocks to match the\n  target length (bsc#1233467, CVE-2024-50278).\n- commit 1c6d167\n\nPackage containerd was updated:\n\n- Update to containerd v1.7.23. Upstream release notes:  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.23\u0026gt;\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\n- Update to containerd v1.7.22. Upstream release notes:\n  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.22\u0026gt;\n- Bump minimum Go version to 1.22.\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\nPackage corosync was updated:\n\n- Add a patch to fix CVE-2025-30472 (bsc#1239987)  * bsc-1239987-check-size-of-orf_token-msg.patch\n\nPackage crmsh was updated:\n\n- Update to version 4.5.1+20250207.2c89797:  * Fix: bootstrap: Local joining node should be included when merging known_hosts (bsc#1229419)\n  * Dev: bootstrap: more robust implementation for ssh_merge (bsc#1230530)\n\nPackage curl was updated:\n\n- Security fix: [bsc#1236590, CVE-2025-0725]  * content_encoding: drop support for zlib before 1.2.0.4\n  * content_encoding: put the decomp buffers into the writer structs\n  * Add curl-CVE-2025-0725.patch\n\n- Security fix: [bsc#1236588, CVE-2025-0167]\n  * netrc: 'default' with no credentials is not a match\n  * Add curl-CVE-2025-0167.patch\n\nPackage dhcp was updated:\n\n- bsc#1192020: Add 'Requires(pre): group(nogroup)' to fix user  creation in pre scriptlet for dhcp-server.\n\nPackage docker was updated:\n\n- Don't use the new container-selinux conditional requires on SLE-12, as the  RPM version there doesn't support it. Arguably the change itself is a bit\n  suspect but we can fix that later. bsc#1237367\n\n- Add backport for golang.org/x/oauth2 CVE-2025-22868 fix. bsc#1239185\n  + 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n- Add backport for golang.org/x/crypto CVE-2025-22869 fix. bsc#1239322\n  + 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n- Refresh patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Make container-selinux requirement conditional on selinux-policy\n  (bsc#1237367)\n\n- Update to Docker 27.5.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/27/#2741\u0026gt; bsc#1237335\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * cli-0001-docs-include-required-tools-in-source-tree.patch\n- Update to docker-buildx 0.20.1. See upstream changelog online at\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.20.1\u0026gt;\n\n- Update to Docker 27.4.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/27/#2741\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * cli-0001-docs-include-required-tools-in-source-tree.patch\n\n- Update to docker-buildx 0.19.3. See upstream changelog online at\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.19.3\u0026gt;\n\n- Update to Docker 27.4.0-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/27/#274\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * cli-0001-docs-include-required-tools-in-source-tree.patch\n- Remove upstreamed patches:\n  - 0006-bsc1221916-update-to-patched-buildkit-version-to-fix.patch\n  - 0007-bsc1214855-volume-use-AtomicWriteFile-to-save-volume.patch\n\nPackage findutils was updated:\n\n- do not crash when file system loop was encountered [bsc#1231472]- added patches\n  fix https://git.savannah.gnu.org/cgit/findutils.git/commit/?id=e5d6eb919b9\n  + findutils-avoid-crash-system-loop.patch\n- modified patches\n  % findutils-xautofs.patch (p1)\n\nPackage glibc was updated:\n\n- assert-message-allocation.patch: Fix underallocation of abort_msg_s  struct (CVE-2025-0395, bsc#1236282, BZ #32582))\n\nPackage gnutls was updated:\n\n- Security fix [bsc#1236974, CVE-2024-12243]  * gnutls: inefficient DER Decoding in libtasn1 could lead to remote DoS\n  * Add gnutls-CVE-2024-12243.patch\n\nPackage google-cloud-sap-agent was updated:\n\n- Add patch to fix unexpected memory consumption during token  parsing in golang.org/x/oauth2 (bsc#1239197, CVE-2025-22868)\n  * CVE-2025-22868.patch\n\nPackage google-dracut-config was updated:\n\n- Update to 0.0.4  + Move dracut config files to usr/lib/ dir\n\n- Update to 0.0.3\n  + Add provides and conflicts on generic name dracut-instance-change-config\n- Update to 0.0.2\n  + Rename config for nvme for consistency\n  + Add dracut build requirement\n  + Add virtio_net, virtio_rng and idpf drivers\n\nPackage google-guest-agent was updated:\n\n- Update to version 20250327.01 (bsc#1239763, bsc#1239866)  * Remove error messages from gce_workload_cert_refresh and\n    metadata script runner (#527)\n- from version 20250327.00\n  * Update guest-logging-go dependency (#526)\n  * Add 'created-by' metadata, and pass it as option to logging library (#508)\n  * Revert \u0026quot;oslogin: Correctly handle newlines at the end of\n    modified files (#520)\u0026quot; (#523)\n  * Re-enable disabled services if the core plugin was enabled (#522)\n  * Enable guest services on package upgrade (#519)\n  * oslogin: Correctly handle newlines at the end of modified files (#520)\n  * Fix core plugin path (#518)\n  * Fix package build issues (#517)\n  * Fix dependencies ran go mod tidy -v (#515)\n  * Fix debian build path (#514)\n  * Bundle compat metadata script runner binary in package (#513)\n  * Bump golang.org/x/net from 0.27.0 to 0.36.0 (#512)\n  * Update startup/shutdown services to launch compat manager (#503)\n  * Bundle new gce metadata script runner binary in agent package (#502)\n  * Revert \u0026quot;Revert bundling new binaries in the package (#509)\u0026quot; (#511)\n- from version 20250326.00\n  * Re-enable disabled services if the core plugin was enabled (#521)\n- from version 20250324.00\n  * Enable guest services on package upgrade (#519)\n  * oslogin: Correctly handle newlines at the end of modified files (#520)\n  * Fix core plugin path (#518)\n  * Fix package build issues (#517)\n  * Fix dependencies ran go mod tidy -v (#515)\n  * Fix debian build path (#514)\n  * Bundle compat metadata script runner binary in package (#513)\n  * Bump golang.org/x/net from 0.27.0 to 0.36.0 (#512)\n  * Update startup/shutdown services to launch compat manager (#503)\n  * Bundle new gce metadata script runner binary in agent package (#502)\n  * Revert \u0026quot;Revert bundling new binaries in the package (#509)\u0026quot; (#511)\n  * Revert bundling new binaries in the package (#509)\n  * Fix typo in windows build script (#501)\n  * Include core plugin binary for all packages (#500)\n  * Update crypto library to fix  CVE-2024-45337 (#499)\n  * Start packaging compat manager (#498)\n  * Start bundling ggactl_plugin_cleanup binary in all agent packages (#492)\n  * scripts: introduce a wrapper to locally build deb package (#490)\n  * Introduce compat-manager systemd unit (#497)\n- from version 20250317.00\n  * Revert \u0026quot;Revert bundling new binaries in the package (#509)\u0026quot; (#511)\n  * Revert bundling new binaries in the package (#509)\n  * Fix typo in windows build script (#501)\n  * Include core plugin binary for all packages (#500)\n  * Update crypto library to fix  CVE-2024-45337 (#499)\n  * Start packaging compat manager (#498)\n  * Start bundling ggactl_plugin_cleanup binary in all agent packages (#492)\n  * scripts: introduce a wrapper to locally build deb package (#490)\n  * Introduce compat-manager systemd unit (#497)\n- from version 20250312.00\n  * Revert bundling new binaries in the package (#509)\n  * Fix typo in windows build script (#501)\n  * Include core plugin binary for all packages (#500)\n  * Update crypto library to fix  CVE-2024-45337 (#499)\n  * Start packaging compat manager (#498)\n  * Start bundling ggactl_plugin_cleanup binary in all agent packages (#492)\n  * scripts: introduce a wrapper to locally build deb package (#490)\n  * Introduce compat-manager systemd unit (#497)\n- from version 20250305.00\n  * Revert bundling new binaries in the package (#509)\n  * Fix typo in windows build script (#501)\n  * Include core plugin binary for all packages (#500)\n  * Update crypto library to fix  CVE-2024-45337 (#499)\n  * Start packaging compat manager (#498)\n  * Start bundling ggactl_plugin_cleanup binary in all agent packages (#492)\n  * scripts: introduce a wrapper to locally build deb package (#490)\n  * Introduce compat-manager systemd unit (#497)\n- from version 20250304.01\n  * Fix typo in windows build script (#501)\n- from version 20250214.01\n  * Include core plugin binary for all packages (#500)\n- from version 20250214.00\n  * Update crypto library to fix  CVE-2024-45337 (#499)\n- from version 20250212.00\n  * Start packaging compat manager (#498)\n  * Start bundling ggactl_plugin_cleanup binary in all agent packages (#492)\n- from version 20250211.00\n  * scripts: introduce a wrapper to locally build deb package (#490)\n  * Introduce compat-manager systemd unit (#497)\n- from version 20250207.00\n  * vlan: toggle vlan configuration in debian packaging (#495)\n  * vlan: move config out of unstable section (#494)\n  * Add clarification to comments regarding invalid NICs and the\n    `invalid` tag. (#493)\n  * Include interfaces in lists even if it has an invalid MAC. (#489)\n  * Fix windows package build failures (#491)\n  * vlan: don't index based on the vlan ID (#486)\n  * Revert PR #482 (#488)\n  * Remove Amy and Zach from OWNERS (#487)\n  * Skip interfaces in interfaceNames() instead of erroring if there is an (#482)\n  * Fix Debian packaging if guest agent manager is not checked out (#485)\n- from version 20250204.02\n  * force concourse to move version forward.\n- from version 20250204.01\n  * vlan: toggle vlan configuration in debian packaging (#495)\n- from version 20250204.00\n  * vlan: move config out of unstable section (#494)\n  * Add clarification to comments regarding invalid NICs and the\n    `invalid` tag. (#493)\n- from version 20250203.01\n  * Include interfaces in lists even if it has an invalid MAC. (#489)\n- from version 20250203.00\n  * Fix windows package build failures (#491)\n  * vlan: don't index based on the vlan ID (#486)\n  * Revert PR #482 (#488)\n  * Remove Amy and Zach from OWNERS (#487)\n  * Skip interfaces in interfaceNames() instead of erroring if there is an (#482)\n  * Fix Debian packaging if guest agent manager is not checked out (#485)\n- from version 20250122.00\n  * networkd(vlan): remove the interface in addition to config (#468)\n  * Implement support for vlan dynamic removal, update dhclient to\n    remove only if configured (#465)\n  * Update logging library (#479)\n  * Remove Pat from owners file. (#478)\n\n- Add patch to fix unexpected memory consumption during token\n  parsing in golang.org/x/oauth2 (bsc#1239197, CVE-2025-22868)\n  * CVE-2025-22868.patch\n\n- Update to version 20250116.00: (bsc#1236403)\n  * networkd(vlan): remove the interface in addition to config (#468)\n  * Implement support for vlan dynamic removal, update dhclient to remove\n    only if configured (#465)\n  * Update logging library (#479)\n  * Remove Pat from owners file. (#478)\n\n- Update to version 20241209.01: (bsc#1235664)\n  * readme: add notes about plugin manager (#476)\n  * Update metadata script runner to honor cloud logging config flag (#475)\n  * Fixing fallback from systemd-networkd to dhclient (#471)\n  * network: fix nmcli check pattern (#472)\n  * Update readme with guest agent manager (#469)\n  * Add missing packaging spec (#466)\n  * Bring back side-by-side packaging (#464)\n  * Avoid changing permissions of directory if parent is / (#463)\n  * network: force NetworkManager to connect to primary nic (#461)\n  * Revert plugin manager packaging (#460)\n  * Add GOPATH to PATH in debian build (#459)\n  * Add plugin manager to debian build (#457)\n  * rpm packaging: fix plugin manager assumptions (#458)\n  * packaging: add plugin manager to rhel packaging (#454)\n\nPackage google-guest-configs was updated:\n\n- Add ggc-no-dup-metasrv-entry.patch  + Follow up to (bsc#1234289, bsc#1234293). Avoid duplicate entries for\n    the metadata server in /etc/hosts\n\n- Update to version 20241205.00 (bsc#1234254, bsc#1234255)\n  * Update google_set_multiqueue to configure\n    vCPU ranges based on VM platform (#90)\n- from version 20241204.00\n  * Restore google_set_multiqueue changes for A3Ultra (#93)\n  * Depend on networkd-dispatcher in Ubuntu (#94)\n- Include components to set hostname and /etc/hosts entries (bsc#1234289, bsc#1234293)\n  * Add sysconfig and sysconfig-network to BuildRequires\n  * Install google_set_hostname into %{_bindir}\n  * Install google_up.sh into %{_sysconfdir}/sysconfig/network/scripts/\n  * Add code to add and remove POST_UP_SCRIPT=\u0026quot;compat:suse:google_up.sh\u0026quot;\n    to /etc/sysconfig/network/ifcfg-eth0 in %post and %postun sections\n\nPackage google-guest-oslogin was updated:\n\n- Rework SELinux support (bsc#1232553)  * Add pkgconfig(systemd) to BuildRequires for SELinux builds\n  * Add policycoreutils to BuildRequires\n  * Build and install SELinux module on older distributions as well\n    to allow users to use the module with their own SELinux policies\n  * Make checkpolicy build dependency unconditional\n  * Move oslogin.pp SELinux module into %{selinuxtype} subdirectory\n  * Own %{_datadir}/selinux{,/packages} on older distributions\n  * Split SELinux support into separate -selinux package\n  * Use SELinux RPM macros to install and uninstall SELinux module\n  * Use RPM conditional builds to enable SELinux on newer distributions\n\n- Build and install SELinux module (bsc#1232553)\n\nPackage google-osconfig-agent was updated:\n\n- Add patch to fix unexpected memory consumption during token  parsing in golang.org/x/oauth2 (bsc#1239197, CVE-2025-22868)\n  * CVE-2025-22868.patch\n\n- Add patch to fix vulnerability when creating log files\n  * CVE-2024-45339.patch (bsc#1236560, CVE-2024-45339)\n\n- Update to version 20250115.01 (bsc#1236406, bsc#1236407)\n  * Bump cloud.google.com/go/osconfig from 1.14.2 to 1.14.3 (#772)\n- from version 20250115.00\n  * Bump cloud.google.com/go/auth from 0.10.2 to 0.14.0 (#767)\n  * Bump go.opentelemetry.io/otel from 1.32.0 to 1.33.0 (#771)\n  * Bump google.golang.org/protobuf from 1.35.1 to 1.36.2 (#763)\n- from version 20250114.00\n  * Bump golang.org/x/time from 0.8.0 to 0.9.0 (#770)\n- from version 20250113.01\n  * Bump cloud.google.com/go/auth/oauth2adapt from 0.2.5 to 0.2.7 (#766)\n- from version 20250113.00\n  * Bump golang.org/x/net from 0.31.0 to 0.34.0 (#769)\n- from version 20250110.00\n  * Bump golang.org/x/crypto from 0.29.0 to 0.31.0 in the go_modules group (#760)\n  * Bump cloud.google.com/go/longrunning from 0.6.2 to 0.6.3 (#744)\n- from version 20241218.00\n  * Scanners fixes (#720)\n  * Bump cloud.google.com/go/storage from 1.46.0 to 1.47.0 (#736)\n  * Bump go.opentelemetry.io/contrib/detectors/gcp from 1.29.0 to 1.32.0 (#730)\n  * Bump go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp (#738)\n  * Bump golang.org/x/net from 0.30.0 to 0.31.0 (#731)\n- from version 20241118.01\n  * Bump github.com/googleapis/gax-go/v2 from 2.13.0 to 2.14.0 (#737)\n- from version 20241118.00\n  * move example to appropriate directory (#740)\n- from version 20241115.00\n  * Replace sles-15-sp3-sap old deprecated image in e2e tests (#739)\n  * Bump golang.org/x/time from 0.7.0 to 0.8.0 (#734)\n- from version 20241114.03\n  * Bump github.com/GoogleCloudPlatform/opentelemetry-operations-go/detectors/gcp (#735)\n- from version 20241114.02\n  * Bump go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc (#729)\n- from version 20241114.01\n  * Remove SLES-15-SP2-SAP from e2e tests and add the new SLES-15-SP6 (#733)\n  * Bump golang.org/x/crypto from 0.28.0 to 0.29.0 (#728)\n  * Bump go.opentelemetry.io/otel/sdk/metric from 1.30.0 to 1.32.0 (#727)\n- from version 20241114.00\n  * Add example to run exec script from the gcs bucket (#732)\n  * Bump cel.dev/expr from 0.16.1 to 0.18.0 (#723)\n- from version 20241112.00\n  * Bump golang.org/x/oauth2 from 0.23.0 to 0.24.0 (#722)\n  * Bump github.com/GoogleCloudPlatform/opentelemetry-operations-go/exporter/metric (#721)\n  * Bump google.golang.org/grpc from 1.67.1 to 1.68.0 (#725)\n  * Bump github.com/golang/glog from 1.2.2 to 1.2.3 (#715)\n  * Bump google.golang.org/api from 0.203.0 to 0.205.0 (#716)\n- from version 20241107.01\n  * Bump github.com/envoyproxy/go-control-plane from 0.13.0 to 0.13.1 (#717)\n  * Bump github.com/GoogleCloudPlatform/opentelemetry-operations-go/internal/resourcemapping (#718)\n  * Bump cloud.google.com/go/auth from 0.10.0 to 0.10.1 (#719)\n- from version 20241107.00\n  * Bump cloud.google.com/go/logging from 1.11.0 to 1.12.0 (#709)\n  * Bump cloud.google.com/go/iam from 1.2.1 to 1.2.2 (#710)\n  * Bump cloud.google.com/go/storage from 1.43.0 to 1.46.0 (#713)\n  * Bump cloud.google.com/go/osconfig from 1.14.1 to 1.14.2 (#708)\n  * Bump cloud.google.com/go/auth/oauth2adapt from 0.2.4 to 0.2.5 (#712)\n- from version 20241106.00\n  * Update OWNERS (#714)\n- from version 20241029.01\n  * remove toolchain override (#706)\n  * Bump go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp (#701)\n- from version 20241029.00\n  * Bump go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc (#702)\n- from version 20241028.00\n  * Bump cloud.google.com/go/longrunning from 0.6.0 to 0.6.2 (#705)\n- from version 20241017.00\n  * Add a new CloudBuild trigger config-file for auto updating the\n    presubmit test container image on every new commit (#704)\n- from version 20241004.00\n  * Add new packagebuild presubmit that will use cloud-build (#694)\n- from version 20240927.00\n  * Third batch of dependencies upgrade (#690)\n- Bump the golang compiler version to 1.22.4 (bsc#1225974, CVE-2024-24790)\n\nPackage grub2 was updated:\n\n- Fix zfs.mo not found message when booting on legacy BIOS (bsc#1237865)  * 0001-autofs-Ignore-zfs-not-found.patch\n\n- Security fixes for 2024\n  * 0001-misc-Implement-grub_strlcpy.patch\n- Fix CVE-2024-45781 (bsc#1233617)\n  * 0002-fs-ufs-Fix-a-heap-OOB-write.patch\n- Fix CVE-2024-56737 (bsc#1234958)\n- Fix CVE-2024-45782 (bsc#1233615)\n  * 0003-fs-hfs-Fix-stack-OOB-write-with-grub_strcpy.patch\n- Fix CVE-2024-45780 (bsc#1233614)\n  * 0004-fs-tar-Integer-overflow-leads-to-heap-OOB-write.patch\n- Fix CVE-2024-45783 (bsc#1233616)\n  * 0005-fs-hfsplus-Set-a-grub_errno-if-mount-fails.patch\n  * 0006-kern-file-Ensure-file-data-is-set.patch\n  * 0007-kern-file-Implement-filesystem-reference-counting.patch\n- Fix CVE-2025-0624 (bsc#1236316)\n  * 0008-net-Fix-OOB-write-in-grub_net_search_config_file.patch\n- Fix CVE-2024-45774 (bsc#1233609)\n  * 0009-video-readers-jpeg-Do-not-permit-duplicate-SOF0-mark.patch\n- Fix CVE-2024-45775 (bsc#1233610)\n  * 0010-commands-extcmd-Missing-check-for-failed-allocation.patch\n- Fix CVE-2025-0622 (bsc#1236317)\n  * 0011-commands-pgp-Unregister-the-check_signatures-hooks-o.patch\n- Fix CVE-2025-0622 (bsc#1236317)\n  * 0012-normal-Remove-variables-hooks-on-module-unload.patch\n- Fix CVE-2025-0622 (bsc#1236317)\n  * 0013-gettext-Remove-variables-hooks-on-module-unload.patch\n- Fix CVE-2024-45776 (bsc#1233612)\n  * 0014-gettext-Integer-overflow-leads-to-heap-OOB-write-or-.patch\n- Fix CVE-2024-45777 (bsc#1233613)\n  * 0015-gettext-Integer-overflow-leads-to-heap-OOB-write.patch\n- Fix CVE-2025-0690 (bsc#1237012)\n  * 0016-commands-read-Fix-an-integer-overflow-when-supplying.patch\n- Fix CVE-2025-1118 (bsc#1237013)\n  * 0017-commands-minicmd-Block-the-dump-command-in-lockdown-.patch\n- Fix CVE-2024-45778 (bsc#1233606)\n- Fix CVE-2024-45779 (bsc#1233608)\n  * 0018-fs-bfs-Disable-under-lockdown.patch\n- Fix CVE-2025-0677 (bsc#1237002)\n- Fix CVE-2025-0684 (bsc#1237008)\n- Fix CVE-2025-0685 (bsc#1237009)\n- Fix CVE-2025-0686 (bsc#1237010)\n- Fix CVE-2025-0689 (bsc#1237011)\n  * 0019-fs-Disable-many-filesystems-under-lockdown.patch\n- Fix CVE-2025-1125 (bsc#1237014)\n- Fix CVE-2025-0678 (bsc#1237006)\n  * 0020-fs-Prevent-overflows-when-allocating-memory-for-arra.patch\n- Bump upstream SBAT generation to 5\n\nPackage hawk2 was updated:\n\n- Update to version 2.6.6+git.1742310530.bfcd0e2c:  * Dev: proof code from injections (bsc#1182162,bsc#1182164)\n  * Fix: enable colocation linking\n  * Dev: make sprockets-4.2 compatible\n  * Dev: enable rails-8.0\n  * Test: test_check_cluster_configuration: relax required resource options\n  * remove patch\n  - relax-test-cluster-conf.patch\n\nPackage hwinfo was updated:\n\n- merge gh#openSUSE/hwinfo#152- avoid reporting of spurious usb storage devices (bsc#1223330)\n- 21.87\n\n- merge gh#openSUSE/hwinfo#151\n- do not overdo usb device de-duplication (bsc#1239663)\n- 21.86\n\nPackage kdump was updated:\n\nPackage krb5 was updated:\n\n- Prevent overflow when calculating ulog block size. An authenticated  attacker can cause kadmind to write beyond the end of the mapped\n  region for the iprop log file, likely causing a process crash;\n  (CVE-2025-24528); (bsc#1236619).\n- Add patch 0012-Prevent-overflow-when-calculating-ulog-block-size.patch\n\nPackage libX11 was updated:\n\n-  U_CVE-2025-26597-0001-xkb-Fix-buffer-overflow-in-XkbChangeTypesOfKey.patch  * Buffer overflow in XkbChangeTypesOfKey()\n    (CVE-2025-26597, bsc#1237431)\n\nPackage libapparmor was updated:\n\n- Add dovecot-unix_chkpwd.diff to allow dovecot-auth to execute  unix_chkpwd, and add a profile for unix_chkpwd. This is needed\n  for PAM with CVE-2024-10041 (bsc#1234452)\n\nPackage cryptsetup was updated:\n\n- luksFormat succeeds despite creating corrupt device [bsc#1234273]  * Add a better warning if luksFormat ends with image without any space for data.\n  * Print warning early if LUKS container is too small for activation.\n  * Add patches:\n  - cryptsetup-Add-a-better-warning-if-luksFormat-no-space-for-data.patch\n  - cryptsetup-Print-warning-early-if-LUKS-container-is-too-small-for-activation.patch\n\nPackage mozilla-nss was updated:\n\n- Updated nss-fips-approved-crypto-non-ec.patch to not pass in  bad targetKeyLength parameters when checking for FIPS approval\n  after keygen. This was causing false rejections.\n\n- Updated nss-fips-approved-crypto-non-ec.patch to approve\n  RSA signature verification  mechanisms with PKCS padding and\n  legacy moduli (bsc#1222834).\n\nPackage freetype2 was updated:\n\n- Added patch:  * CVE-2025-27363.patch\n    + fixes bsc#1239465, CVE-2025-27363: out-of-bounds write when\n    attempting to parse font subglyph structures related to\n    TrueType GX and variable font files\n\nPackage openssl-1_1 was updated:\n\n- Security fix: [bsc#1236136, CVE-2024-13176]  * timing side-channel in the ECDSA signature computation\n  * Add openssl-CVE-2024-13176.patch\n\nPackage procps was updated:\n\n- Add patch CVE-2023-4016-part2.patch  * Fix the ps command segfaults when pid argument has a leading space (bsc#1236842)\n\nPackage python3 was updated:\n\n- Update CVE-2024-11168-validation-IPv6-addrs.patch  according to the Debian version\n  (gh#python/cpython#103848#issuecomment-2708135083).\n\n- Add CVE-2025-0938-sq-brackets-domain-names.patch which\n  disallows square brackets ([ and ]) in domain names for parsed\n  URLs (bsc#1236705, CVE-2025-0938, gh#python/cpython#105704)\n\nPackage ruby2.5 was updated:\n\n- remove rexml-test.patch as it is included in suse.patch now- update suse.patch to f0660edeba\n  - fix HTTP request smuggling in WEBrick\n    bsc#1230930 CVE-2024-47220\n  - update REXML to 3.3.9 to fix ReDOS vulnerability\n    bsc#1232440 CVE-2024-49761\n  - [ruby/uri] Fix quadratic backtracking on invalid relative URI\n  - [ruby/time] Make RFC2822 regexp linear\n  - [ruby/time] Fix quadratic backtracking on invalid time\n  - merge some parts of CGI 0.1.1\n\nPackage libtasn1 was updated:\n\n- Security fix: [bsc#1236878, CVE-2024-12133]  * Potential DoS in handling of numerous SEQUENCE OF or SET OF elements\n  * Add libtasn1-CVE-2024-12133.patch\n\nPackage libxkbfile was updated:\n\n- U_CVE-2025-26595-0001-xkb-Fix-buffer-overflow-in-XkbVModMaskText.patch  * Buffer overflow in XkbVModMaskText() (CVE-2025-26595, bsc#1237429)\n\nPackage libxml2 was updated:\n\n- security update- added patches\n  fix CVE-2024-56171 [bsc#1237363], use-after-free in xmlSchemaIDCFillNodeTables and xmlSchemaBubbleIDCNodeTables in xmlschemas.c\n  + libxml2-CVE-2024-56171.patch\n  fix CVE-2025-24928 [bsc#1237370], stack-based buffer overflow in xmlSnprintfElements in valid.c\n  + libxml2-CVE-2025-24928.patch\n  fix CVE-2025-27113 [bsc#1237418], NULL Pointer Dereference in libxml2 xmlPatMatch\n  + libxml2-CVE-2025-27113.patch\n\n- security update\n- added patches\n  fix CVE-2022-49043 [bsc#1236460], use-after-free in xmlXIncludeAddNode\n  + libxml2-CVE-2022-49043.patch\n\nPackage libxslt was updated:\n\n- Security fixes:  * Fix use-after-free of XPath context node [bsc#1239625, CVE-2025-24855]\n  * Fix UAF related to excluded namespaces [bsc#1239637, CVE-2024-55549]\n  * Make generate-id() deterministic [bsc#1238591, CVE-2023-40403]\n    Just adding the reference here as this CVE was already fixed\n    in 0009-Make-generate-id-deterministic.patch\n  * Rebase patches to use autosetup:\n  - libxslt-1.1.24-no-net-autobuild.patch\n  - libxslt-config-fixes.patch\n  * Add patches:\n  - libxslt-CVE-2024-55549.patch\n  - libxslt-CVE-2025-24855.patch\n\nPackage libzypp was updated:\n\n- Disable zypp.conf:download.use_deltarpm by default (fixes #620)  Measurements show that you don't benefit from using deltarpms\n  unless your network connection is very slow. That's why most\n  distributions even stop offering deltarpms. The default remains\n  unchanged on SUSE-15.6 and older.\n- Make sure repo variables are evaluated in the right context\n  (bsc#1237044)\n- Introducing MediaCurl2 a alternative HTTP backend.\n  This patch adds MediaCurl2 as a testbed for experimenting with a\n  more simple way to download files. Set ZYPP_CURL2=1 in the\n  environment to use it.\n- version 17.36.3 (35)\n\n- Filesystem usrmerge must not be done in singletrans mode\n  (bsc#1236481, bsc#1189788)\n  Commit will amend the backend in case the transaction would\n  perform a filesystem usrmerge.\n- Workaround bsc#1216091 on Code16.\n- version 17.36.2 (35)\n\n- Don't issue deprecated warnings if -DNDEBUG is set (bsc#1236983)\n  Released libyui packages compile with -Werror=deprecated-declarations\n  so we can't add deprecated warnings without breaking them.\n- make gcc15 happy (fixes #613)\n- version 17.36.1 (35)\n\n- Drop zypp-CheckAccessDeleted in favor of 'zypper ps'.\n- Fix Repoverification plugin not being executed (fixes #614)\n- Refresh: Fetch the master index file before key and signature\n  (bsc#1236820)\n- Allow libzypp to compile with C++20.\n- Deprecate RepoReports we do not trigger.\n- version 17.36.0 (35)\n\n- Create '.keep_packages' in the package cache dir to enforce\n  keeping downloaded packages of all repos cahed there (bsc#1232458)\n- version 17.35.19 (35)\n\n- Fix missing UID checks in repomanager workflow (fixes #603)\n- version 17.35.18 (35)\n\n- Move cmake config files to LIB_INSTALL_DIR/cmake/Zypp (fixes #28)\n- Fix 'zypper ps' when running in incus container (bsc#1229106)\n  Should apply to lxc and lxd containers as well.\n- Re-enable 'rpm --runposttrans' usage for chrooted systems\n  (bsc#1216091)\n- version 17.35.17 (35)\n\nPackage openssh was updated:\n\n- Backported patch to fix a MitM attack against OpenSSH's  VerifyHostKeyDNS-enabled client (bsc#1237040, CVE-2025-26465):\n  * fix-CVE-2025-26465.patch\n\nPackage pam_pkcs11 was updated:\n\n- Security update fix [bsc#1237062, CVE-2025-24032], [bsc#1237058, CVE-2025-24031]  * Fix CVE-2025-24032: vulnerable to authentication bypass with default value for `cert_policy` (`none`)\n  * Fix CVE-2025-24031: vulnerable to segmentation fault on ctrl-c/ctrl-d when asked for PIN\n  * Add pam_pkcs11-CVE-2025-24032.patch\n  * Add pam_pkcs11-CVE-2025-24031.patch\n  * spec: set noarch for doc pkg, add %check section\n\nPackage python-instance-billing-flavor-check was updated:\n\n- Update to version 1.0.0 (jsc#PCT-531)  + API incompatibility: The check_payg_byos function no longer exits, it now\n    returns a tuple of (flavor, exit_code). This makes the function reusable.\n  + Update the build setup to work with the system interpreter of\n    upcoming SLE releases. SLE 12 stays with the Python 3.4 interpreter\n    and SLE 15 with the Python 3.6 interpreter.\n\n- Version 0.1.2 (bsc#1234444)\n  + Improve detection of IPv4 and IPv6 network setup and use appropriate\n    IP version for access the update servers\n  + Improve reliability of flavor detection. Try an update server multiple\n    times to get an answer, if we hit timeouts return the value flavor\n    value from a cache file.\n\n- Version 0.1.1 (bsc#1235991, bsc#1235992)\n  + Add time stamp to log\n- From version 0.1.0\n  + Doc improvements clarifying exit staus codes\n\nPackage python-Jinja2 was updated:\n\nPackage python3-M2Crypto was updated:\n\n- Change macro to %{?sle15allpythons} so we build both Python 3.6  and Python 3.11 on SLE-15.\n\n- Fix spelling of BSD-2-Clause license.\n- Add rpmlintrc â¦ overflow of ignorable rpmlint warnings caused\n  me not to see the previous problem.\n\n- Update to 0.44.0:\n  - fix(rsa): introduce internal cache for rsa.check_key()\n    (bsc#1236664, srht#mcepl/m2crypto#369)\n  - fix[authcookie]: modernize the module\n  - fix(_lib): add missing #include for windows\n  - ci: relax fedora crypto policy to legacy.\n  - enhance setup.py for macos compatibility\n  - prefer packaging.version over distutils.version\n  - fix segfault with openssl 3.4.0\n  - fix[ec]: raise ioerror instead when load_key_bio() cannot read\n    the file.\n  - doc: update installation instructions for windows.\n  - fix setting x509.verify_* variables\n  - fix building against openssl in non-standard location\n  - test_x509: use only x509_version_1 (0) as version for csr.\n\n- The real license is BSD 2-Clause, not MIT.\n\n- Update to 0.43.0:\n  - feat[m2]: add m2.time_t_bits to checking for 32bitness.\n  - fix[tests]: Use only X509_VERSION_1 (0) as version for CSR.\n  - fix[EC]: raise ValueError when load_key_bio() cannot read the\n    file (bsc#1231589).\n  - ci: use -mpip wheel instead of -mbuild\n  - fix: use PyMem_Malloc() instead of malloc()\n  - fix[hints]: more work on conversion of type hints to the py3k ones\n  - fix: make the package build even on Python 3.6\n  - ci[local]: skip freezing local tests\n  - fix[hints]: remove AnyStr type\n  - test: add suggested test for RSA.{get,set}_ex_data\n  - fix: implement interfaces for RSA_{get,set}_ex_new_{data,index}\n  - fix: generate src/SWIG/x509_v_flag.h to overcome weaknesses of\n    swig\n  - fix: replace literal enumeration of all VERIFY_ constants by a\n    cycle\n  - test: unify various test cases in test_ssl related to ftpslib\n  - fix: replace deprecated url keyword in setup.cfg with complete\n    project_urls map\n\n- Update 0.42.0:\n  - allow ASN1_{Integer,String} be initialized directly\n  - minimal infrastructure for type hints for a C extension and\n    some type hints for some basic modules\n  - time_t on 32bit Linux is 32bit (integer) not 64bit (long)\n  - EOS for CentOS 7\n  - correct checking for OpenSSL version number on Windows\n  - make compatible with Python 3.13 (replace PyEval_CallObject\n    with PyObject_CallObject)\n  - fix typo in extern function signature (and proper type of\n    engine_ctrl_cmd_string())\n  - move the package to Sorucehut\n  - setup CI to use Sourcehut CI\n  - setup CI on GitLab for Windows as well (remove Appveyor)\n  - initial draft of documentation for migration to\n    pyca/cryptography\n  - fix Read the Docs configuration (contributed kindly by Facundo\n    Tuesca)\n- Remove upstreamed 32bit_ASN1_Time.patch\n- Remove python-M2Crypto.keyring, because PyPI broke GPG support\n\n- Build for modern python stack on SLE/Leap\n\nPackage salt was updated:\n\n- Revert setting SELinux context for minion service (bsc#1233667)- Remove System V init support\n  - Make systemd the only supported init system by removing System V init\n    and insserv references\n  - Ensure package builds with no init system dependencies if built\n    without systemd (for example for use in containers)\n  - Apply some spec-cleaner suggestions (update copyright year, sort\n    requirements, adjust spacing)\n- Signed-off-by: Georg Pfuetzenreuter \u0026lt;georg.pfuetzenreuter@suse.com\u0026gt;\n- Fix the condition of alternatives for Tumbleweed and Leap 16\n- Use update-alternatives for salt-call and fix builing on EL8\n- Build all python bindings for all flavors\n- Make minion reconnecting on changing master IP (bsc#1228182)\n- Handle logger exception when flushing already closed file\n- Include passlib as a recommended dependency\n- Make Salt Bundle more tolerant to long running jobs (bsc#1228690)\n- Fix additional x509 tests and test_suse tests for SLE12\n- Added:\n  * handle-logger-flushing-already-closed-file-686.patch\n  * make-minion-reconnecting-on-changing-master-ip-bsc-1.patch\n  * revert-setting-selinux-context-for-minion-service-bs.patch\n  * enhance-cleanup-mechanism-after-salt-bundle-upgrade-.patch\n  * fix-x509-private-key-tests-and-test_suse-on-sle12-68.patch\n\nPackage zypp-plugin was updated:\n\n- version 0.6.5\n- Build package for multiple Python flavors on the SLE15 family\n  (fixes #4)\n\nPackage rsync was updated:\n\n- Fix bsc#1237187 - broken rsyncd  * Lists digests available in greeting line\n  * Add rsync-fix-daemon-proto-32.patch\n\n- Bump protocol version to 32 - make it easier to show server is patched.\n  * Add rsync-protocol-version-32.patch\n\n- Fix FLAG_GOT_DIR_FLIST collission with FLAG_HLINKED\n  * Added rsync-fix-FLAG_GOT_DIR_FLIST.patch\n\n- Security update,CVE-2024-12747, bsc#1235475 race condition in handling symbolic links\n  * Added rsync-CVE-2024-12747.patch\n\n- Security update, fix multiple vulnerabilities:\n  * CVE-2024-12085, bsc#1234101 - Info Leak via uninitialized Stack contents defeats ASLR\n  * CVE-2024-12086, bsc#1234102 - Server leaks arbitrary client files\n  * CVE-2024-12087, bsc#1234103 - Server can make client write files outside of destination directory using symbolic links\n  * CVE-2024-12088, bsc#1234104 - --safe-links Bypass\n  * Added rsync-CVE-2024-12085.patch\n  * Added rsync-CVE-2024-12086_01.patch\n  * Added rsync-CVE-2024-12086_02.patch\n  * Added rsync-CVE-2024-12086_03.patch\n  * Added rsync-CVE-2024-12086_04.patch\n  * Added rsync-CVE-2024-12087_01.patch\n  * Added rsync-CVE-2024-12087_02.patch\n  * Added rsync-CVE-2024-12088.patch\n  * Added rsync-fix-compile-missing-my_alloc_ref.patch\n\nPackage rubygem-rack was updated:\n\n- security update- added patches\n  fix CVE-2025-27610 [bsc#1239298], improper sanitization of user-supplied paths\n  + rubygem-rack-CVE-2025-27610.patch\n\n- security update\n- added patches\n  fix CVE-2025-25184 [bsc#1237141], Rack::CommonLogger can be exploited by crafting input\n  + rubygem-rack-CVE-2025-25184.patch\n  fix CVE-2025-27111 [bsc#1238607], Escape Sequence Injection vulnerability in Rack lead to Possible Log Injection\n  + rubygem-rack-CVE-2025-27111.patch\n\nPackage saptune was updated:\n\n- update package version of saptune to 3.1.5  * on Azure cloud create a saptune service drop-in file to start\n    saptune after cloud-final.service\n    (bsc#1235824, jsc#SAPSOL-523)\n  * fix NVMe device detection and update man page saptune-note.5\n    (bsc#1233126)\n  * fix wrong error handling, if system limits.conf file is missing\n    and skip reading system limits.conf file on SLES 16 as it can\n    not contain customer changes\n    (bsc#1236232)\n  * fix value for grub transparent_hugepage entries in Note 2684254\n    (bsc#1235579)\n\nPackage scap-security-guide was updated:\n\n- ssg-reproducable.patch: replace two date injections by SOURCE_DATE_EPOCH  to make reproducible. bsc#1230361\n\n- updated to 0.1.75 (jsc#ECO-3319)\n  - Add new product kylinserver10\n  - Create OL10 product\n  - Update PCI-DSS control file for version 4.0.1\n  - Add Ism profile for ol8, ol9\n  - Release SLMicro5 product\n  - Various updates for SLE 12/15\n\nPackage 000release-packages:sle-ha-release was updated:\n\nPackage 000release-packages:sle-module-basesystem-release was updated:\n\nPackage 000release-packages:sle-module-containers-release was updated:\n\nPackage 000release-packages:sle-module-desktop-applications-release was updated:\n\nPackage 000release-packages:sle-module-development-tools-release was updated:\n\nPackage 000release-packages:sle-module-public-cloud-release was updated:\n\nPackage 000release-packages:sle-module-sap-applications-release was updated:\n\nPackage 000release-packages:sle-module-server-applications-release was updated:\n\nPackage supportutils-plugin-ha-sap was updated:\n\n- Update to version 0.0.7+git.1737125956.a7079fc:  * Call saphana-check.sh if the script is available in\n    /usr/lib/saphana-checks (SUSE package) or in\n    /opt/sap/saphana-checks (SAP package)\n    (jsc#PED-11748, jsc#PED-11747)\n  * to support 'trento checks' on supportutils content\n    collect additional information:\n    /usr/sap/hostctrl/exe/saphostctrl -function Ping\n    corosync-cmapctl -b\n    su - \u0026lt;SIDADM\u0026gt; -c disp+work\n    su - \u0026lt;SIDADM\u0026gt; -c 'sapcontrol -nr \u0026lt;NR\u0026gt; -function GetVersionInfo'\n    ls -lA --time-style=long-iso /etc/polkit-1/rules.d/[0-9][0-9]-SAP[A-Z][A-Z0-9][A-Z0-9]-[0-9][0-9].rules\n    content of files in /etc/products.d/\n    (jsc#PED-12000, jsc#PED-12001)\n  * collect Netweaver version by\n    'sapcontrol -nr \u0026lt;NR\u0026gt; -function GetVersionInfo'\n  * collect 'operation_mode' setting by\n    'python getParameter.py --key=global.ini/system_replication/operation_mode --sapcontrol=1'\n  * some shellcheck cleanup\n  * adaption to the new used supportconfig.rc\n- change requirements\n  remove the long deprecated supportconfig-plugin-resource and\n  supportconfig-plugin-tag and add instead 'Requires: supportutils'\n  (bsc#1235145)\n\nPackage suse-build-key was updated:\n\n- changed keys to use SHA256 UIDs instead of SHA1. (bsc#1237294  bsc#1236779 jsc#PED-12321)\n  - gpg-pubkey-3fa1d6ce-67c856ee.asc to gpg-pubkey-09d9ea69-67c857f3.asc\n  - gpg-pubkey-09d9ea69-645b99ce.asc to gpg-pubkey-3fa1d6ce-63c9481c.asc\n  - suse_ptf_key_2023.asc, suse_ptf_key.asc: adjusted\n\nPackage tcsh was updated:\n\n- Do not interfere Meta with Carriage Return (boo#1170527)\n- Key-binding: support also other variants of terminals like xterm-256color\n\nPackage timezone was updated:\n\n- Update to 2025a:  * Paraguay adopts permanent -03 starting spring 2024\n  * Improve pre-1991 data for the Philippines\n  * Etc/Unknown is now reserved\n- Update to 2024b:\n  * Improve historical data for Mexico, Mongolia, and Portugal.\n  * System V names are now obsolescent.\n  * The main data form now uses %z.\n  * The code now conforms to RFC 8536 for early timestamps.\n  * Support POSIX.1-2024, which removes asctime_r and ctime_r.\n  * Assume POSIX.2-1992 or later for shell scripts.\n  * SUPPORT_C89 now defaults to 1.\n- Add revert-philippines-historical-data.patch, revert-systemv-deprecation.patch\n  * Fixes testsuite failures for other packages\n\nPackage vim was updated:\n\n- Introduce patch to fix bsc#1235751 (regression).  * vim-9.1.1134-revert-putty-terminal-colors.patch\n- Update to 9.1.1176. Changes:\n  * 9.1.1176: wrong indent when expanding multiple lines\n  * 9.1.1175: inconsistent behaviour with exclusive selection and motion commands\n  * 9.1.1174: tests: Test_complete_cmdline() may fail\n  * 9.1.1173: filetype: ABNF files are not detected\n  * 9.1.1172: [security]: overflow with 'nostartofline' and Ex command in tag file\n  * 9.1.1171: tests: wrong arguments passed to assert_equal()\n  * 9.1.1170: wildmenu highlighting in popup can be improved\n  * 9.1.1169: using global variable for get_insert()/get_lambda_name()\n  * 9.1.1168: wrong flags passed down to nextwild()\n  * 9.1.1167: mark '] wrong after copying text object\n  * 9.1.1166: command-line auto-completion hard with wildmenu\n  * 9.1.1165: diff: regression with multi-file diff blocks\n  * 9.1.1164: [security]: code execution with tar.vim and special crafted tar files\n  * 9.1.1163: $MYVIMDIR is set too late\n  * 9.1.1162: completion popup not cleared in cmdline\n  * 9.1.1161: preinsert requires bot \u0026quot;menu\u0026quot; and \u0026quot;menuone\u0026quot; to be set\n  * 9.1.1160: Ctrl-Y does not work well with \u0026quot;preinsert\u0026quot; when completing items\n  * 9.1.1159: $MYVIMDIR may not always be set\n  * 9.1.1158: :verbose set has wrong file name with :compiler!\n  * 9.1.1157: command completion wrong for input()\n  * 9.1.1156: tests: No test for what patch 9.1.1152 fixes\n  * 9.1.1155: Mode message not cleared after :silent message\n  * 9.1.1154: Vim9: not able to use autoload class accross scripts\n  * 9.1.1153: build error on Haiku\n  * 9.1.1152: Patch v9.1.1151 causes problems\n  * 9.1.1151: too many strlen() calls in getchar.c\n  * 9.1.1150: :hi completion may complete to wrong value\n  * 9.1.1149: Unix Makefile does not support Brazilian lang for the installer\n  * 9.1.1148: Vim9: finding imported scripts can be further improved\n  * 9.1.1147: preview-window does not scroll correctly\n  * 9.1.1146: Vim9: wrong context being used when evaluating class member\n  * 9.1.1145: multi-line completion has wrong indentation for last line\n  * 9.1.1144: no way to create raw strings from a blob\n  * 9.1.1143: illegal memory access when putting a register\n  * 9.1.1142: tests: test_startup fails if $HOME/$XDG_CONFIG_HOME is defined\n  * 9.1.1141: Misplaced comment in readfile()\n  * 9.1.1140: filetype: m17ndb files are not detected\n  * 9.1.1139: [fifo] is not displayed when editing a fifo\n  * 9.1.1138: cmdline completion for :hi is too simplistic\n  * 9.1.1137: ins_str() is inefficient by calling STRLEN()\n  * 9.1.1136: Match highlighting marks a buffer region as changed\n  * 9.1.1135: 'suffixesadd' doesn't work with multiple items\n  * 9.1.1134: filetype: Guile init file not recognized\n  * 9.1.1133: filetype: xkb files not recognized everywhere\n  * 9.1.1132: Mark positions wrong after triggering multiline completion\n  * 9.1.1131: potential out-of-memory issue in search.c\n  * 9.1.1130: 'listchars' \u0026quot;precedes\u0026quot; is not drawn on Tabs.\n  * 9.1.1129: missing out-of-memory test in buf_write()\n  * 9.1.1128: patch 9.1.1119 caused a regression with imports\n  * 9.1.1127: preinsert text is not cleaned up correctly\n  * 9.1.1126: patch 9.1.1121 used a wrong way to handle enter\n  * 9.1.1125: cannot loop through pum menu with multiline items\n  * 9.1.1124: No test for 'listchars' \u0026quot;precedes\u0026quot; with double-width char\n  * 9.1.1123: popup hi groups not falling back to defaults\n  * 9.1.1122: too many strlen() calls in findfile.c\n  * 9.1.1121: Enter does not insert newline with \u0026quot;noselect\u0026quot;\n  * 9.1.1120: tests: Test_registers fails\n  * 9.1.1119: Vim9: Not able to use an autoloaded class from another autoloaded script\n  * 9.1.1118: tests: test_termcodes fails\n  * 9.1.1117: there are a few minor style issues\n  * 9.1.1116: Vim9: super not supported in lambda expressions\n  * 9.1.1115: [security]: use-after-free in str_to_reg()\n  * 9.1.1114: enabling termguicolors automatically confuses users\n  * 9.1.1113: tests: Test_terminal_builtin_without_gui waits 2 seconds\n  * 9.1.1112: Inconsistencies in get_next_or_prev_match()\n  * 9.1.1111: Vim9: variable not found in transitive import\n  * 9.1.1110: Vim tests are slow and flaky\n  * 9.1.1109: cmdexpand.c hard to read\n  * 9.1.1108: 'smoothscroll' gets stuck with 'listchars' \u0026quot;eol\u0026quot;\n  * 9.1.1107: cannot loop through completion menu with fuzzy\n  * 9.1.1106: tests: Test_log_nonexistent() causes asan failure\n  * 9.1.1105: Vim9: no support for protected new() method\n  * 9.1.1104: CI: using Ubuntu 22.04 Github runners\n  * 9.1.1103: if_perl: still some compile errors with Perl 5.38\n  * 9.1.1102: tests: Test_WinScrolled_Resized_eiw() uses wrong filename\n\n- 9.1.1101 is a fix for:\n  bsc#1229685 (CVE-2024-43790)\n  bsc#1229822 (CVE-2024-43802)\n  bsc#1230078 (CVE-2024-45306)\n  bsc#1235695 (CVE-2025-22134)\n  bsc#1236151 (CVE-2025-24014)\n  bsc#1237137 (CVE-2025-1215)\n- Remove obsoleted patch:\n  * vim-7.3-mktemp_tutor.patch\n- update to 9.1.1101\n  * insexpand.c hard to read\n  * tests: Test_log_nonexistent only works on Linux\n  * Update base-syntax, improve variable matching\n  * Vim9: import with extends may crash\n  * leaking memory with completing multi lines\n  * --log with non-existent path causes a crash\n  * if_perl: Perl 5.38 adds new symbols causing link failure\n  * tests: matchparen plugin test wrongly named\n  * Vim9: problem finding implemented method in type hierarchy\n  * runtime(qf): Update syntax file, match second delimiter\n  * tests: output of test ...win32_ctrl_z depends on python version\n  * tests: fix expected return code for python 3.13 on Windows\n  * tests: timeout might be a bit too small\n  * tests: test_terminwscroll_topline2 unreliable\n  * tests: No check when tests are run under Github actions\n  * tests: plugin tests are named inconsistently\n  * Vim9: import with extends may crash\n  * completion doesn't work with multi lines\n  * filetype: cmmt files are not recognized\n  * Unable to persistently ignore events in a window and its buffers\n  * improve syntax highlighting\n  * setreg() doesn't correctly handle mbyte chars in blockwise mode\n  * unexpected DCS responses may cause out of bounds reads\n  * has('bsd') is true for GNU/Hurd\n  * filetype: Mill files are not recognized\n  * GUI late startup leads to uninitialized scrollbars\n  * Add support for lz4 to tar \u0026amp; gzip plugin\n  * Terminal ansi colors off by one after tgc reset\n  * included syntax items do not understand contains=TOP\n  * vim_strnchr() is strange and unnecessary\n  * Vim9: len variable not used in compile_load()\n  * runtime(vim): Update base-syntax, match :debuggreedy count prefix\n  * Strange error when heredoc marker starts with \u0026quot;trim\u0026quot;\n  * tests: test_compiler fails on Windows without Maven\n  * 'diffopt' \u0026quot;linematch\u0026quot; cannot be used with {n} less than 10\n  * args missing after failing to redefine a function\n  * Cannot control cursor positioning of getchar()\n  * preinsert text completions not deleted with \u0026lt;C-W\u0026gt;/\u0026lt;C-U\u0026gt;\n  * getchar() can't distinguish between C-I and Tab\n  * tests: Test_termwinscroll_topline2 fails on MacOS\n  * heap-use-after-free and stack-use-after-scope with :14verbose\n  * no digraph for \u0026quot;Approaches the limit\u0026quot;\n  * not possible to use plural forms with gettext()\n  * too many strlen() calls in userfunc.c\n  * terminal: E315 when dragging the terminal with the mouse\n  * runtime(openPlugin): fix unclosed parenthesis in GetWordUnderCursor()\n  * runtime(doc): Tweak documentation style a bit\n  * tests: test_glvs fails when unarchiver not available\n  * Vim always enables 'termguicolors' in a terminal\n  * completion: input text deleted with preinsert when adding leader\n  * translation(sr): Missing Serbian translation for the tutor\n  * Superfluous cleanup steps in test_ins_complete.vim\n  * runtime(netrw): correct wrong version check\n  * Vim doesn't highlight to be inserted text when completing\n  * runtime(netrw): upstream snapshot of v176\n  * runtime(dist/vim9): fix regressions in dist#vim9#Open\n  * runtime(hyprlang): fix string recognition\n  * make install fails because of a missing dependency\n  * runtime(asm): add byte directives to syntax script\n  * Vim doesn't work well with TERM=xterm-direct\n  * runtime(filetype): commit 99181205c5f8284a3 breaks V lang detection\n  * runtime: decouple Open and Launch commands and gx mapping from netrw\n  * \u0026quot;nosort\u0026quot; enables fuzzy filtering even if \u0026quot;fuzzy\u0026quot; isn't in 'completeopt'\n  * runtime(just): fix typo in syntax file\n  * runtime(filetype): Improve Verilog detection by checking for modules definition\n  * tests: off-by-one error in CheckCWD in test_debugger.vim\n  * tests: no support for env variables when running Vim in terminal\n  * too many strlen() calls in os_unix.c\n  * insert-completed items are always sorted\n  * crash after scrolling and pasting in silent Ex mode\n  * Makefiles uses non-portable syntax\n  * fuzzymatching doesn't prefer matching camelcase\n  * filetype: N-Tripels and TriG files are not recognized\n  * Vim9: Patch 9.1.1014 causes regressions\n  * translation(sr): Update Serbian messages translation\n- updade to 9.1.1043\n  * [security]: segfault in win_line()\n  * update helptags\n  * filetype: just files are not recognized\n  * Update base-syntax, match ternary and falsy operators\n  * Vim9: out-of-bound access when echoing an enum\n  * Vim9: imported type cannot be used as func return type\n  * runtime(kconfig): updated ftplugin and syntax script\n  * runtime(doc): rename last t_BG reference to t_RB\n  * Vim9: comments are outdated\n  * tests: test_channel.py fails with IPv6\n  * runtime(vim): Update base-syntax, fix is/isnot operator matching\n  * Vim9: confusing error when using abstract method via super\n  * make install fails when using shadowdir\n  * Vim9: memory leak with blob2str()\n  * runtime(tex): add texEmphStyle to texMatchGroup in syntax script\n  * runtime(netrw): upstream snapshot of v175\n  * Vim9: compiling abstract method fails without return\n  * runtime(c): add new constexpr keyword to syntax file (C23)\n  * tests: shaderslang was removed from test_filetype erroneously\n  * link error when FEAT_SPELL not defined\n  * Coverity complains about insecure data handling\n  * runtime(sh): update syntax script\n  * runtime(c): Add missing syntax test files\n  * filetype: setting bash filetype is backwards incompatible\n  * runtime(c): Update syntax and ftplugin files\n  * the installer can be improved\n  * too many strlen() calls in screen.c\n  * no sanitize check when running linematch\n  * filetype: swc configuration files are not recognized\n  * runtime(netrw): change netrw maintainer\n  * wrong return type of blob2str()\n  * blob2str/str2blob() do not support list of strings\n  * runtime(doc): fix typo in usr_02.txt\n  * Coverity complains about dereferencing NULL pointer\n  * linematch option value not completed\n  * string might be used without a trailing NUL\n  * no way to get current selected item in a async context\n  * filetype: fd ignore files are not recognized\n  * v9.1.0743 causes regression with diff mode\n  * runtime(doc): fix base64 encode/decode examples\n  * Vim9: Patch 9.1.1013 causes a few problems\n  * Not possible to convert string2blob and blob2string\n  * Coverity complains about dereferencing NULL value\n  * Vim9: variable not found in transitive import\n  * runtime(colors): Update colorschemes, include new unokai colorscheme\n  * Vim9: Regression caused by patch v9.1.0646\n  * runtime(lyrics): support milliseconds in syntax script\n  * runtime(vim): Split Vim legacy and Vim9 script indent tests\n  * Vim9: class interface inheritance not correctly working\n  * popupmenu internal error with some abbr in completion item\n  * filetype: VisualCode setting file not recognized\n  * diff feature can be improved\n  * tests: test for patch 9.1.1006 doesn't fail without the patch\n  * filetype: various ignore are not recognized\n  * tests: Load screendump files with \u0026quot;git vimdumps\u0026quot;\n  * PmenuMatch completion highlight can be combined\n  * completion text is highlighted even with no pattern found\n  * tests: a few termdebug tests are flaky\n  * [security]: heap-buffer-overflow with visual mode\n  * runtime(doc): add package-\u0026lt;name\u0026gt; helptags for included packages\n  * Vim9: unknown func error with interface declaring func var\n  * runtime(filetype): don't detect string interpolation as angular\n  * ComplMatchIns highlight hard to read on light background\n  * runtime(vim): Update base-syntax, highlight literal string quote escape\n  * runtime(editorconfig): set omnifunc to syntaxcomplete func\n  * tests: ruby tests fail with Ruby 3.4\n  * Vim9: leaking finished exception\n  * runtime(tiasm):  use correct syntax name tiasm in syntax script\n  * filetype: TI assembly files are not recognized\n  * too many strlen() calls in drawscreen.c\n  * runtime(xf86conf): add section name OutputClass to syntax script\n  * ComplMatchIns may highlight wrong text\n  * runtime(vim): Update base-syntax, improve ex-bang matching\n  * runtime(doc): clarify buffer deletion on popup_close()\n  * filetype: shaderslang files are not detected\n  * Vim9: not able to use comment after opening curly brace\n- update to 9.1.0993\n  * 9.1.0993: New 'cmdheight' behavior may be surprising\n  * runtime(sh): fix typo in Last Change header\n  * 9.1.0992: Vim9: double-free after v9.1.0988\n  * 9.1.0991: v:stacktrace has wrong type in Vim9 script\n  * runtime(sh): add PS0 to bashSpecialVariables in syntax script\n  * runtime(vim): Remove trailing comma from match_words\n  * runtime(zsh): sync syntax script with upstream repo\n  * runtime(doc): Capitalise the mnemonic \u0026quot;Zero\u0026quot; for the 'z' flag of search()\n  * 9.1.0990: Inconsistent behavior when changing cmdheight\n  * 9.1.0989: Vim9: Whitespace after the final enum value causes a syntax error\n  * runtime(java): Quietly opt out for unsupported markdown.vim versions\n  * runtime(vim): fix failing vim syntax test\n  * 9.1.0988: Vim9: no error when using uninitialized var in new()\n  * runtime(doc): update index.txt\n  * 9.1.0987: filetype: cake files are not recognized\n  * 9.1.0986: filetype: 'jj' filetype is a bit imprecise\n  * runtime(jj): Support diffs in jj syntax\n  * runtime(vim): Update matchit pattern, no Vim9 short names\n  * 9.1.0985: Vim9: some ex commands can be shortened\n  * 9.1.0984: exception handling can be improved\n  * runtime(doc): update doc for :horizontal\n  * runtime(doc): update index.txt, windows.txt and version9.txt\n  * runtime(doc): Tweak documentation about base64 function\n  * runtime(chordpro): update syntax script\n  * 9.1.0983: not able to get the displayed items in complete_info()\n  * runtime(doc): use standard SGR format at :h xterm-true-color\n  * 9.1.0982: TI linker files are not recognized\n  * runtime(vim): update vim generator syntax script\n  * 9.1.0981: tests: typo in test_filetype.vim\n  * 9.1.0980: no support for base64 en-/decoding functions in Vim Script\n  * syntax(sh): Improve the recognition of bracket expressions\n  * runtime(doc): mention how NUL bytes are handled\n  * 9.1.0979: VMS: type warning with $XDG_VIMRC_FILE\n  * 9.1.0978: GUI tests sometimes fail when setting 'scroll' options\n  * 9.1.0977: filetype: msbuild filetypes are not recognized\n  * 9.1.0976: Vim9: missing return statement with throw\n  * 9.1.0975: Vim9: interpolated string expr not working in object methods\n  * 9.1.0974: typo in change of commit v9.1.0873\n  * 9.1.0973: too many strlen() calls in fileio.c\n  * runtime(sh): set shellcheck as the compiler for supported shells\n  * runtime(doc): Fix enum example syntax\n  * 9.1.0972: filetype: TI linker map files are not recognized\n  * runtime(vim): Improve syntax script generator for Vim Script\n  * 9.1.0971: filetype: SLNX files are not recognized\n  * 9.1.0970: VMS: build errors on VMS architecture\n  * runtime(doc): Fix documentation typos\n  * runtime(doc): update for new keyprotocol option value (after v9.1.0969)\n  * 9.1.0969: ghostty not using kitty protocol by default\n  * 9.1.0968: tests: GetFileNameChecks() isn't fully sorted by filetype name\n  * runtime(doc): update version9.txt for bash filetype\n  * runtime(netrw): update last change header for #16265\n  * runtime(doc): fix doc error in :r behaviour\n  * 9.1.0967: SpotBugs compiler setup can be further improved\n  * 9.1.0966: Vim9: :enum command can be shortened\n  * runtime(compiler): include a basic bash syntax checker compiler\n  * 9.1.0965: filetype: sh filetype set when detecting the use of bash\n  * runtime(doc): clarify ARCH value for 32-bit in INSTALLpc.txt\n  * 9.1.0963: fuzzy-matching does not prefer full match\n  * 9.1.0962: filetype: bun.lock file is not recognized\n  * runtime(vim): update indentation plugin for Vim script\n  * runtime(doc): tweak documentation style in helphelp.txt\n  * runtime(vim): Update base-syntax, allow parens in default arguments\n  * runtime(doc): mention auto-format using clang-format for sound.c/sign.c\n  * runtime(help): fix typo s/additional/arbitrary/\n  * runtime(help): Add better support for language annotation highlighting\n  * 9.1.0961: filetype: TI gel files are not recognized\n  * 9.1.0960: filetype: hy history files are not recognized\n  * translation(fi): Fix typoes in Finish menu translation\n  * 9.1.0959: Coverity complains about type conversion\n  * runtime(vim): Use supported syntax in indent tests\n  * 9.1.0958: filetype: supertux2 config files detected as lisp\n  * 9.1.0956: completion may crash, completion highlight wrong with preview window\n  * 9.1.0955: Vim9: vim9compile.c can be further improved\n  * runtime(doc): move help tag E1182\n  * runtime(graphql): contribute vim-graphql to Vim core\n  * 9.1.0954: popupmenu.c can be improved\n  * 9.1.0953: filetype: APKBUILD files not correctly detected\n  * 9.1.0952: Vim9: missing type checking for any type assignment\n  * 9.1.0951: filetype: jshell files are not recognized\n  * runtime(dockerfile): do not set commentstring in syntax script\n  * 9.1.0950: filetype: fennelrc files are not recognized\n  * runtime(netrw): do not double escape Vim special characters\n  * git: ignore reformatting change of netrw plugin\n  * runtime(netrw): more reformating #16248\n  * runtime(doc): Add a note about handling symbolic links in starting.txt\n  * 9.1.0949: popups inconsistently shifted to the left\n  * git: ignore reformatting change of netrw plugin\n  * runtime(netrw): change indent size from 1 to 2\n  * 9.1.0948: Missing cmdline completion for :pbuffer\n  * runtime(tutor): Reformat tutor1\n  * 9.1.0947: short-description\n  * 9.1.0946: cross-compiling fails on osx-arm64\n  * 9.1.0945: ComplMatchIns highlight doesn't end after inserted text\n  * translation(sv): re-include the change from #16240\n  * 9.1.0944: tests: test_registers fails when not run under X11\n  * 9.1.0943: Vim9: vim9compile.c can be further improved\n  * runtime(doc): Update README and mention make check to verify\n  * translation(sv): partly revert commit 98874dca6d0b60ccd6fc3a140b3ec\n  * runtime(vim): update base-syntax after v9.1.0936\n  * 9.1.0942: a few typos were found\n  * 9.1.0941: ComplMatchIns doesn't work after multibyte chars\n  * runtime(doc): Fix style in fold.txt\n  * translation(sv): Fix typo in Swedish translation\n  * 9.1.0940: Wrong cursor shape with \u0026quot;gq\u0026quot; and 'indentexpr' executes :normal\n  * runtime(doc): fix some small errors\n  * 9.1.0939: make installtutor fails\n  * 9.1.0938: exclusive selection not respected when re-selecting block mode\n  * 9.1.0937: test_undolist() is flaky\n  * 9.1.0936: cannot highlight completed text\n  * 9.1.0935: SpotBugs compiler can be improved\n  * 9.1.0934: hard to view an existing buffer in the preview window\n  * runtime(doc): document how to minimize fold computation costs\n  * 9.1.0933: Vim9: vim9compile.c can be further improved\n  * 9.1.0932: new Italian tutor not installed\n  * runtime(doc): fix a few minor errors from the last doc updates\n  * translation(it): add Italian translation for the interactive tutor\n  * runtime(doc): update the change.txt help file\n  * runtime(help): Add Vim lang annotation support for codeblocks\n  * 9.1.0931: ml_get error in terminal buffer\n  * 9.1.0930: tests: test_terminal2 may hang in GUI mode\n  * 9.1.0929: filetype: lalrpop files are not recognized\n  * 9.1.0928: tests: test_popupwin fails because the filter command fails\n  * editorconfig: set trim_trailing_whitespace = false for src/testdir/test*.vim\n  * 9.1.0927: style issues in insexpand.c\n  * 9.1.0926: filetype: Pixi lock files are not recognized\n  * runtime(doc): Add a reference to |++opt| and |+cmd| at `:h :pedit`\n  * runtime(doc): add a note about inclusive motions and exclusive selection\n  * 9.1.0925: Vim9: expression compiled when not necessary\n  * 9.1.0924: patch 9.1.0923 causes issues\n  * 9.1.0923: too many strlen() calls in filepath.c\n  * 9.1.0923: wrong MIN macro in popupmenu.c\n  * 9.1.0921: popupmenu logic is a bit convoluted\n  * 9.1.0920: Vim9: compile_assignment() too long\n  * 9.1.0919: filetype: some assembler files are not recognized\n  * runtime(netrw): do not pollute search history with symlinks\n  * 9.1.0918: tiny Vim crashes with fuzzy buffer completion\n  * 9.1.0917: various vartabstop and shiftround bugs when shifting lines\n  * runtime(typst): add definition lists to formatlistpat, update maintainer\n  * 9.1.0916: messages.c is exceeding 80 columns\n  * runtime(proto): include filetype plugin for protobuf\n  * 9.1.0915: GVim: default font size a bit too small\n  * 9.1.0914: Vim9: compile_assignment() is too long\n  * 9.1.0913: no error check for neg values for 'messagesopt'\n  * runtime(netrw): only check first arg of netrw_browsex_viewer for being executable\n  * 9.1.0912: xxd: integer overflow with sparse files and -autoskip\n  * 9.1.0911: Variable name for 'messagesopt' doesn't match short name\n  * 9.1.0910: 'messagesopt' does not check max wait time\n  * runtime(doc): update wrong Vietnamese localization tag\n  * 9.1.0909: Vim9: crash when calling instance method\n- update to 9.1.0908\n  * refresh vim-7.3-mktemp_tutor.patch\n  * 9.1.0908: not possible to configure :messages\n  * 9.1.0907: printoptions:portrait does not change postscript Orientation\n  * runtime(doc): Add vietnamese.txt to helps main TOC\n  * 9.1.0906: filetype: Nvidia PTX files are not recognized\n  * runtime(doc): updated version9.txt with changes from v9.1.0905\n  * 9.1.0905: Missing information in CompleteDone event\n  * 9.1.0904: Vim9: copy-paste error in class_defining_member()\n  * 9.1.0903: potential overflow in spell_soundfold_wsal()\n  * runtime(netrw): do not detach when launching external programs in gvim\n  * runtime(doc): make tag alignment more consistent in filetype.txt\n  * runtime(doc): fix wrong syntax and style of vietnamese.txt\n  * translation(it): update Italian manpage for vimtutor\n  * runtime(lua): add optional lua function folding\n  * Filelist: include translations for Chapter 2 tutor\n  * translation(vi): Update Vietnamese translation\n  * runtime(doc): include vietnamese.txt\n  * runtime(tutor): fix another typo in tutor2\n  * runtime(doc): fix typo in vimtutor manpage\n  * translation(it): update Italian manpage for vimtutor\n  * translation(it): include Italian version of tutor chapter 2\n  * runtime(tutor): regenerated some translated tutor1 files\n  * runtime(tutor): fix typo in Chapter 2\n  * 9.1.0902: filetype: Conda configuration files are not recognized\n  * runtime(doc): Tweak documentation style a bit\n  * runtime(tutor): update the tutor files and re-number the chapters\n  * runtime(tutor): Update the makefiles for tutor1 and tutor2 files\n  * 9.1.0901: MS-Windows: vimtutor batch script can be improved\n  * runtime(doc): remove buffer-local completeopt todo item\n  * 9.1.0900: Vim9: digraph_getlist() does not accept bool arg\n  * runtime(typst): provide a formatlistpat in ftplugin\n  * runtime(doc): Update documentation for \u0026quot;noselect\u0026quot; in 'completeopt'\n  * 9.1.0899: default for 'backspace' can be set in C code\n  * runtime(helptoc): reload cached g:helptoc.shell_prompt when starting toc\n  * translation(ru): Updated messages translation\n  * 9.1.0898: runtime(compiler): pytest compiler not included\n  * 9.1.0897: filetype: pyrex files are not detected\n  * runtime(compiler): update eslint compiler\n  * 9.1.0896: completion list wrong after v9.1.0891\n  * runtime(doc): document changed default value for 'history'\n  * 9.1.0895: default history value is too small\n  * 9.1.0894: No test for what the spotbug compiler parses\n  * 9.1.0893: No test that undofile format does not regress\n  * translation(de): update German manpages\n  * runtime(compiler): include spotbugs Java linter\n  * 9.1.0892: the max value of 'tabheight' is limited by other tabpages\n  * runtime(po): remove poDiffOld/New, add po-format flags to syntax file\n  * 9.1.0891: building the completion list array is inefficient\n  * patch 9.1.0890: %! item not allowed for 'rulerformat'\n  * runtime(gzip): load undofile if there exists one\n  * 9.1.0889: Possible unnecessary redraw after adding/deleting lines\n  * 9.1.0888: leftcol property not available in getwininfo()\n  * 9.1.0887: Wrong expression in sign.c\n  * 9.1.0886: filetype: debian control file not detected\n  * runtime(c3): include c3 filetype plugin\n  * 9.1.0885: style of sign.c can be improved\n  * 9.1.0884: gcc warns about uninitialized variable\n  * runtime(apache): Update syntax directives for apache server 2.4.62\n  * translation(ru): updated vimtutor translation, update MAINTAINERS file\n  * 9.1.0883: message history cleanup is missing some tests\n  * runtime(doc): Expand docs on :! vs. :term\n  * runtime(netrw): Fixing powershell execution issues on Windows\n  * 9.1.0882: too many strlen() calls in insexpand.c\n  * 9.1.0881: GUI: message dialog may not get focus\n  * runtime(netrw): update netrw's decompress logic\n  * runtime(apache): Update syntax keyword definition\n  * runtime(misc): add Italian LICENSE and (top-level) README file\n  * 9.1.0880: filetype: C3 files are not recognized\n  * runtime(doc): add helptag for :HelpToc command\n  * 9.1.0879: source is not consistently formatted\n  * Add clang-format config file\n  * runtime(compiler): fix escaping of arguments passed to :CompilerSet\n  * 9.1.0878: termdebug: cannot enable DEBUG mode\n  * 9.1.0877: tests: missing test for termdebug + decimal signs\n  * 9.1.0876: filetype: openCL files are not recognized\n  * 9.1.0875: filetype: hyprlang detection can be improved\n  * 9.1.0874: filetype: karel files are not detected\n  * 9.1.0873: filetype: Vivado files are not recognized\n  * 9.1.0872: No test for W23 message\n  * 9.1.0871: getcellpixels() can be further improved\n  * 9.1.0870: too many strlen() calls in eval.c\n  * 9.1.0869: Problem: curswant not set on gm in folded line\n  * 9.1.0868: the warning about missing clipboard can be improved\n  * runtime(doc): Makefile does not clean up all temporary files\n  * 9.1.0867: ins_compl_add() has too many args\n  * editorconfig: don't trim trailing whitespaces in runtime/doc\n  * translation(am): Remove duplicate keys in desktop files\n  * runtime(doc): update helptags\n  * runtime(filetype): remove duplicated *.org file pattern\n  * runtime(cfg): only consider leading // as starting a comment\n  * 9.1.0866: filetype: LLVM IR files are not recognized\n  * 9.1.0865: filetype: org files are not recognized\n  * 9.1.0864: message history is fixed to 200\n  * 9.1.0863: getcellpixels() can be further improved\n  * runtime(sh): better function support for bash/zsh in indent script\n  * runtime(netrw): small fixes to netrw#BrowseX\n  * 9.1.0862: 'wildmenu' not enabled by default in nocp mode\n  * runtime(doc): update how to report issues for mac Vim\n  * runtime(doc): mention option-backslash at :h CompilerSet\n  * runtime(compiler): include a Java Maven compiler plugin\n  * runtime(racket): update Racket runtime files\n  * runtime(doc): improve indentation in examples for netrw-handler\n  * runtime(doc): improve examples for netrw-handler functions\n  * runtime(idris2): include filetype,indent+syntax plugins for (L)Idris2 + ipkg\n  * runtime(doc): clarify the use of filters and external commands\n  * 9.1.0861: Vim9: no runtime check for object member access of any var\n  * runtime(compiler): update pylint linter\n  * 9.1.0860: tests: mouse_shape tests use hard code sleep value\n  * 9.1.0859: several problems with the GLVS plugin\n  * 9.1.0858: Coverity complains about dead code\n  * runtime(tar): Update tar.vim to support permissions\n  * 9.1.0857: xxd: --- is incorrectly recognized as end-of-options\n  * 9.1.0851: too many strlen() calls in getchar.c\n  * 9.1.0850: Vim9: cannot access nested object inside objects\n  * runtime(tex): extra Number highlighting causes issues\n  * runtime(vim): Fix indent after :silent! function\n  * 9.1.0849: there are a few typos in the source\n  * runtime(netrw): directory symlink not resolved in tree view\n  * runtime(doc): add a table of supported Operating Systems\n  * runtime(tex): update Last Change header in syntax script\n  * runtime(doc): fix typo in g:termdebug_config\n  * runtime(vim): Update base-syntax, improve :normal highlighting\n  * runtime(tex): add Number highlighting to syntax file\n  * runtime(doc): Tweak documentation style a bit\n  * 9.1.0848: if_lua: v:false/v:true are not evaluated to boolean\n  * runtime(dune): use :setl instead of :set in ftplugin\n  * runtime(termdebug): allow to use decimal signs\n  * translation(it): Updated Italian vimtutor\n  * runtime(compiler): improve cppcheck\n  * git: git-blame-ignore-revs shown as an error on Github\n  * 9.1.0847: tests: test_popupwin fails because of updated help file\n  * 9.1.0846: debug symbols for xxd are not cleaned in Makefile\n  * runtime(structurizr): Update structurizr syntax\n  * runtime(8th): updated 8th syntax\n  * runtime(doc): Add pi_tutor.txt to help TOC\n  * runtime(compiler): add mypy and ruff compiler; update pylint linter\n  * runtime(netrw): fix several bugs in netrw tree listing\n  * runtime(netrw): prevent polluting the search history\n  * 9.1.0845: vimtutor shell script can be improved\n  * 9.1.0844: if_python: no way to pass local vars to python\n  * 9.1.0843: too many strlen() calls in undo.c\n  * runtime(doc): update default value for fillchars option\n  * runtime(compiler): fix typo in cppcheck compiler plugin\n  * runtime(doc): simplify vimtutor manpage a bit more\n  * runtime(matchparen): Add matchparen_disable_cursor_hl config option\n  * 9.1.0842: not checking for the sync() systemcall\n  * 9.1.0841: tests: still preferring python2 over python3\n  * 9.1.0840: filetype: idris2 files are not recognized\n  * 9.1.0839: filetype: leo files are not recognized\n  * runtime(cook): include cook filetype plugin\n  * runtime(debversions): Update Debian versions\n  * patch 9.1.0838: vimtutor is bash-specific\n  * runtime(doc): add help specific modeline to pi_tutor.txt\n  * Filelist: vimtutor chapter 2 is missing in Filelist\n  * 9.1.0837: cross-compiling has some issues\n  * runtime(vimtutor): Add a second chapter\n\n- Fix for bsc#1234333 / bsc#1234214 / bsc#1234245.\n  These three bugs all have the same root cause:\n  Package 'xxd' has been obsoleted by Vim, as it provides the xxd\n  files directly.\n  However, because the \u0026quot;Obsoletes\u0026quot; entry was versioned, depending on\n  which version of 'xxd' that is installed, the \u0026quot;Obsoletes\u0026quot; isn't\n  actually triggered. Thus, there is a conflict between \u0026quot;vim\u0026quot; and\n  \u0026quot;xxd\u0026quot; in these cases.\n  Fixing this by removing the version completely. The 'vim' package\n  should always replace 'xxd', even if people are migrating from an\n  older SLE15 service pack which has the exact same version.\n\nPackage wget was updated:\n\n- If wget for an http URL is redirected to a different site (hostname  parts of URLs differ), then any \u0026quot;Authenticate\u0026quot; and \u0026quot;Cookie\u0026quot; header\n  entries are discarded.\n  [bsc#1185551, wget-do-not-propagate-credentials.patch,\n  bsc#1230795, CVE-2021-31879]\n\nPackage yast2-cluster was updated:\n\n- Fix: fix a typo for sctp in cluster.firewalld.xml (bsc#1236903)- Version 4.5.4\n\n- Update HA related ports (bsc#1219773)\n- Version 4.5.3\n\nPackage zypper was updated:\n\n- Annonunce --root in commands not launching a Target  (bsc#1237044)\n- BuildRequires:  libzypp-devel \u0026gt;= 17.36.3.\n- version 1.14.85\n\n- Let zypper dup fail in case of (temporarily) unaccessible repos\n  (bsc#1228434, bsc#1236939, fixes #446)\n- version 1.14.84\n\n- New system-architecture command (bsc#1236384)\n  Prints the detected system architecture.\n- version 1.14.83\n\n- requires: libzypp \u0026gt;= 17.36.0.\n- Change versioncmp command to return exit code according to the\n  comparison result (#593)\n- version 1.14.82\n\n- lr: show the repositories keep-packages flag (bsc#1232458)\n  It is shown in the  details view or by using -k,--keep-packages.\n  In addition libyzpp supports to enforce keeping downloaded\n  packages of all repos within a package cache by creating a\n  '.keep_packages' file there.\n- version 1.14.81\n\n- Try to refresh update repos first to have updated GPG keys on\n  the fly (bsc#1234752)\n  An update repo may contain a prolonged GPG key for the GA repo.\n  Refreshing the update repo first updates a trusted key on the fly\n  and avoids a 'key has expired' warning being issued when\n  refreshing the GA repo.\n- Refresh: restore legacy behavior and suppress Exception\n  reporting as non-root (bsc#1235636)\n- version 1.14.80\n\n- info: Allow to query a specific version (jsc#PED-11268)\n  To query for a specific version simply append \u0026quot;-\u0026lt;version\u0026gt;\u0026quot; or\n  \u0026quot;-\u0026lt;version\u0026gt;-\u0026lt;release\u0026gt;\u0026quot; to the \u0026quot;\u0026lt;name\u0026gt;\u0026quot; pattern. Note that the\n  edition part must always match exactly.\n- version 1.14.79\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "apparmor-abstractions-3.0.4-150500.11.12.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "apparmor-parser-3.0.4-150500.11.12.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "augeas-1.12.0-150400.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "augeas-lenses-1.12.0-150400.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bind-utils-9.16.50-150500.8.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ca-certificates-mozilla-2.74-150200.38.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-10.3.11-150300.13.19.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-plugin-gce-1.0.0-150300.13.19.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cluster-md-kmp-default-5.14.21-150500.55.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "containerd-1.7.23-150000.120.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "corosync-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "corosync-qdevice-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "crmsh-4.5.1+20250207.2c89797-150500.3.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "crmsh-scripts-4.5.1+20250207.2c89797-150500.3.45.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.0.1-150400.5.62.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dhcp-4.3.6.P1-150000.6.22.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dhcp-client-4.3.6.P1-150000.6.22.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dlm-kmp-default-5.14.21-150500.55.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-27.5.1_ce-150000.218.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "findutils-4.8.0-150300.3.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gfs2-kmp-default-5.14.21-150500.55.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.31-150300.92.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-32bit-2.31-150300.92.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-i18ndata-2.31-150300.92.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-2.31-150300.92.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-base-2.31-150300.92.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gnutls-3.7.3-150400.4.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-cloud-sap-agent-3.6-150100.3.44.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-dracut-config-0.0.4-150300.7.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-agent-20250327.01-150000.1.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20241205.00-150400.13.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-oslogin-20240311.00-150000.1.48.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20250115.01-150000.1.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-2.06-150500.29.46.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-i386-pc-2.06-150500.29.46.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-x86_64-efi-2.06-150500.29.46.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "hawk2-2.6.6+git.1742310530.bfcd0e2c-150000.3.59.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "hwinfo-21.87-150500.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kdump-1.0.2+git48.g64445e1-150500.3.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-5.14.21-150500.55.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-1.20.1-150500.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "krb5-client-1.20.1-150500.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libX11-6-1.6.5-150000.3.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libX11-data-1.6.5-150000.3.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libX11-xcb1-1.6.5-150000.3.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libapparmor1-3.0.4-150500.11.12.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libaugeas0-1.12.0-150400.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcfg6-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcmap4-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcorosync_common4-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcpg4-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcryptsetup12-2.4.3-150400.3.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.0.1-150400.5.62.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfreebl3-3.101.2-150400.3.54.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfreetype6-2.10.4-150000.4.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgnutls30-3.7.3-150400.4.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1l-150500.17.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libprocps8-3.3.17-150000.7.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-150300.10.84.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libquorum5-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libruby2_5-2_5-2.5.9-150000.4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsam4-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsnmp40-5.9.4-150300.15.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsoftokn3-3.101.2-150400.3.54.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtasn1-4.13-150000.4.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtasn1-6-4.13-150000.4.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtotem_pg5-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libvotequorum8-2.4.6-150300.12.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxkbfile1-1.0.9-150000.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-2-2.10.3-150500.5.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-tools-2.10.3-150500.5.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxslt1-1.1.34-150400.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-17.36.3-150500.6.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-3.101.2-150400.3.54.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-certs-3.101.2-150400.3.54.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-tools-3.101.2-150400.3.54.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nscd-2.31-150300.92.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ocfs2-kmp-default-5.14.21-150500.55.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-8.4p1-150300.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-clients-8.4p1-150300.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-common-8.4p1-150300.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssh-server-8.4p1-150300.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-1_1-1.1.1l-150500.17.40.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam_pkcs11-0.6.10-150100.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-Term-ReadKey-2.37-150000.3.2.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "procps-3.3.17-150000.7.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-instance-billing-flavor-check-1.0.0-150000.1.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.6.15-150300.10.84.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-Jinja2-2.10.1-150000.3.21.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-M2Crypto-0.44.0-150400.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.6.15-150300.10.84.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-bind-9.16.50-150500.8.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-curses-3.6.15-150300.10.84.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-salt-3006.0-150500.4.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-zypp-plugin-0.6.5-150500.16.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "rsync-3.2.3-150400.3.23.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-2.5.9-150000.4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-rubygem-rack-2.0.8-150000.3.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-stdlib-2.5.9-150000.4.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "salt-3006.0-150500.4.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "salt-minion-3006.0-150500.4.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "salt-standalone-formulas-configuration-3006.0-150500.4.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "saptune-3.1.5-150400.15.19.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "scap-security-guide-0.1.75-150000.1.89.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "snmp-mibs-5.9.4-150300.15.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "supportutils-plugin-ha-sap-0.0.7+git.1737125956.a7079fc-150000.1.21.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-build-key-12.0-150000.8.58.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "tcsh-6.20.00-150000.4.18.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "timezone-2025a-150000.75.31.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.1176-150500.20.24.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.1176-150500.20.24.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wget-1.20.3-150000.3.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "yast2-cluster-4.5.4-150500.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.85-150500.6.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-sap-15-sp5-hardened-byos-v20250408-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2021-31879",
      "Description": "GNU Wget through 1.21.1 does not omit the Authorization header upon a redirect to a different origin, a related issue to CVE-2018-1000007.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "5.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:N"
      }
    },
    {
      "CVE": "CVE-2022-48742",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: make sure to refresh master_dev/m_ops in __rtnl_newlink()\n\nWhile looking at one unrelated syzbot bug, I found the replay logic\nin __rtnl_newlink() to potentially trigger use-after-free.\n\nIt is better to clear master_dev and m_ops inside the loop,\nin case we have to replay it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49033",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix sleep from invalid context bug in btrfs_qgroup_inherit()\n\nSyzkaller reported BUG as follows:\n\n  BUG: sleeping function called from invalid context at\n       include/linux/sched/mm.h:274\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0xcd/0x134\n   __might_resched.cold+0x222/0x26b\n   kmem_cache_alloc+0x2e7/0x3c0\n   update_qgroup_limit_item+0xe1/0x390\n   btrfs_qgroup_inherit+0x147b/0x1ee0\n   create_subvol+0x4eb/0x1710\n   btrfs_mksubvol+0xfe5/0x13f0\n   __btrfs_ioctl_snap_create+0x2b0/0x430\n   btrfs_ioctl_snap_create_v2+0x25a/0x520\n   btrfs_ioctl+0x2a1c/0x5ce0\n   __x64_sys_ioctl+0x193/0x200\n   do_syscall_64+0x35/0x80\n\nFix this by calling qgroup_dirty() on @dstqgroup, and update limit item in\nbtrfs_run_qgroups() later outside of the spinlock context.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49035",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: s5p_cec: limit msg.len to CEC_MAX_MSG_SIZE\n\nI expect that the hardware will have limited this to 16, but just in\ncase it hasn't, check for this corner case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49043",
      "Description": "xmlXIncludeAddNode in xinclude.c in libxml2 before 2.11.0 has a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49080",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/mempolicy: fix mpol_new leak in shared_policy_replace\n\nIf mpol_new is allocated but not used in restart loop, mpol_new will be\nfreed via mpol_put before returning to the caller.  But refcnt is not\ninitialized yet, so mpol_put could not do the right things and might\nleak the unused mpol_new.  This would happen if mempolicy was updated on\nthe shared shmem file while the sp-\u003elock has been dropped during the\nmemory allocation.\n\nThis issue could be triggered easily with the below code snippet if\nthere are many processes doing the below work at the same time:\n\n  shmid = shmget((key_t)5566, 1024 * PAGE_SIZE, 0666|IPC_CREAT);\n  shm = shmat(shmid, 0, 0);\n  loop many times {\n    mbind(shm, 1024 * PAGE_SIZE, MPOL_LOCAL, mask, maxnode, 0);\n    mbind(shm + 128 * PAGE_SIZE, 128 * PAGE_SIZE, MPOL_DEFAULT, mask,\n          maxnode, 0);\n  }",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-1192",
      "Description": "A use-after-free flaw was found in smb2_is_status_io_timeout() in CIFS in the Linux Kernel. After CIFS transfers response data to a system call, there are still local variable points to the memory region, and if the system call frees it faster than CIFS uses it, CIFS will access a free memory region, leading to a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-4016",
      "Description": "Under some circumstances, this weakness allows a user who has access to run the \"ps\" utility on a machine, the ability to write almost unlimited amounts of unfiltered data into the process heap.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-40403",
      "Description": "The issue was addressed with improved memory handling. This issue is fixed in macOS Ventura 13.6, tvOS 17, iOS 16.7 and iPadOS 16.7, macOS Monterey 12.7, watchOS 10, iOS 17 and iPadOS 17, macOS Sonoma 14. Processing web content may disclose sensitive information.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: support non-r10 register spill/fill to/from stack in precision tracking\n\nUse instruction (jump) history to record instructions that performed\nregister spill/fill to/from stack, regardless if this was done through\nread-only r10 register, or any other register after copying r10 into it\n*and* potentially adjusting offset.\n\nTo make this work reliably, we push extra per-instruction flags into\ninstruction history, encoding stack slot index (spi) and stack frame\nnumber in extra 10 bit flags we take away from prev_idx in instruction\nhistory. We don't touch idx field for maximum performance, as it's\nchecked most frequently during backtracking.\n\nThis change removes basically the last remaining practical limitation of\nprecision backtracking logic in BPF verifier. It fixes known\ndeficiencies, but also opens up new opportunities to reduce number of\nverified states, explored in the subsequent patches.\n\nThere are only three differences in selftests' BPF object files\naccording to veristat, all in the positive direction (less states).\n\nFile                                    Program        Insns (A)  Insns (B)  Insns  (DIFF)  States (A)  States (B)  States (DIFF)\n--------------------------------------  -------------  ---------  ---------  -------------  ----------  ----------  -------------\ntest_cls_redirect_dynptr.bpf.linked3.o  cls_redirect        2987       2864  -123 (-4.12%)         240         231    -9 (-3.75%)\nxdp_synproxy_kern.bpf.linked3.o         syncookie_tc       82848      82661  -187 (-0.23%)        5107        5073   -34 (-0.67%)\nxdp_synproxy_kern.bpf.linked3.o         syncookie_xdp      85116      84964  -152 (-0.18%)        5162        5130   -32 (-0.62%)\n\nNote, I avoided renaming jmp_history to more generic insn_hist to\nminimize number of lines changed and potential merge conflicts between\nbpf and bpf-next trees.\n\nNotice also cur_hist_entry pointer reset to NULL at the beginning of\ninstruction verification loop. This pointer avoids the problem of\nrelying on last jump history entry's insn_idx to determine whether we\nalready have entry for current instruction or not. It can happen that we\nadded jump history entry because current instruction is_jmp_point(), but\nalso we need to add instruction flags for stack access. In this case, we\ndon't want to entries, so we need to reuse last added entry, if it is\npresent.\n\nRelying on insn_idx comparison has the same ambiguity problem as the one\nthat was fixed recently in [0], so we avoid that.\n\n  [0] https://patchwork.kernel.org/project/netdevbpf/patch/20231110002638.4168352-3-andrii@kernel.org/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-10041",
      "Description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-11168",
      "Description": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-11187",
      "Description": "It is possible to construct a zone such that some queries to it will generate responses containing numerous records in the Additional section. An attacker sending many such queries can cause either the authoritative server itself or an independent resolver to use disproportionate resources processing the queries. Zones will usually need to have been deliberately crafted to attack this exposure.\nThis issue affects BIND 9 versions 9.11.0 through 9.11.37, 9.16.0 through 9.16.50, 9.18.0 through 9.18.32, 9.20.0 through 9.20.4, 9.21.0 through 9.21.3, 9.11.3-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.50-S1, and 9.18.11-S1 through 9.18.32-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12085",
      "Description": "A flaw was found in rsync which could be triggered when rsync compares file checksums. This flaw allows an attacker to manipulate the checksum length (s2length) to cause a comparison between a checksum and uninitialized memory and leak one byte of uninitialized stack data at a time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12086",
      "Description": "A flaw was found in rsync. It could allow a server to enumerate the contents of an arbitrary file from the client's machine. This issue occurs when files are being copied from a client to a server. During this process, the rsync server will send checksums of local data to the client to compare with in order to determine what data needs to be sent to the server. By sending specially constructed checksum values for arbitrary files, an attacker may be able to reconstruct the data of those files byte-by-byte based on the responses from the client.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12087",
      "Description": "A path traversal vulnerability exists in rsync. It stems from behavior enabled by the `--inc-recursive` option, a default-enabled option for many client options and can be enabled by the server even if not explicitly enabled by the client. When using the `--inc-recursive` option, a lack of proper symlink verification coupled with deduplication checks occurring on a per-file-list basis could allow a server to write files outside of the client's intended destination directory. A malicious server could write malicious files to arbitrary locations named after valid directories/paths on the client.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12088",
      "Description": "A flaw was found in rsync. When using the `--safe-links` option, the rsync client fails to properly verify if a symbolic link destination sent from the server contains another symbolic link within it. This results in a path traversal vulnerability, which may lead to arbitrary file write outside the desired directory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12133",
      "Description": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12243",
      "Description": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12747",
      "Description": "A flaw was found in rsync. This vulnerability arises from a race condition during rsync's handling of symbolic links. Rsync's default behavior when encountering symbolic links is to skip them. If an attacker replaced a regular file with a symbolic link at the right time, it was possible to bypass the default behavior and traverse symbolic links. Depending on the privileges of the rsync process, an attacker could leak sensitive information, potentially leading to privilege escalation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-13176",
      "Description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-24790",
      "Description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26758",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: Don't ignore suspended array in md_check_recovery()\n\nmddev_suspend() never stop sync_thread, hence it doesn't make sense to\nignore suspended array in md_check_recovery(), which might cause\nsync_thread can't be unregistered.\n\nAfter commit f52f5c71f3d4 (\"md: fix stopping sync thread\"), following\nhang can be triggered by test shell/integrity-caching.sh:\n\n1) suspend the array:\nraid_postsuspend\n mddev_suspend\n\n2) stop the array:\nraid_dtr\n md_stop\n  __md_stop_writes\n   stop_sync_thread\n    set_bit(MD_RECOVERY_INTR, \u0026mddev-\u003erecovery);\n    md_wakeup_thread_directly(mddev-\u003esync_thread);\n    wait_event(..., !test_bit(MD_RECOVERY_RUNNING, \u0026mddev-\u003erecovery))\n\n3) sync thread done:\nmd_do_sync\n set_bit(MD_RECOVERY_DONE, \u0026mddev-\u003erecovery);\n md_wakeup_thread(mddev-\u003ethread);\n\n4) daemon thread can't unregister sync thread:\nmd_check_recovery\n if (mddev-\u003esuspended)\n   return; -\u003e return directly\n md_read_sync_thread\n clear_bit(MD_RECOVERY_RUNNING, \u0026mddev-\u003erecovery);\n -\u003e MD_RECOVERY_RUNNING can't be cleared, hence step 2 hang;\n\nThis problem is not just related to dm-raid, fix it by ignoring\nsuspended array in md_check_recovery(). And follow up patches will\nimprove dm-raid better to frozen sync thread during suspend.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26886",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: af_bluetooth: Fix deadlock\n\nAttemting to do sock_lock on .recvmsg may cause a deadlock as shown\nbellow, so instead of using sock_sock this uses sk_receive_queue.lock\non bt_sock_ioctl to avoid the UAF:\n\nINFO: task kworker/u9:1:121 blocked for more than 30 seconds.\n      Not tainted 6.7.6-lemon #183\nWorkqueue: hci0 hci_rx_work\nCall Trace:\n \u003cTASK\u003e\n __schedule+0x37d/0xa00\n schedule+0x32/0xe0\n __lock_sock+0x68/0xa0\n ? __pfx_autoremove_wake_function+0x10/0x10\n lock_sock_nested+0x43/0x50\n l2cap_sock_recv_cb+0x21/0xa0\n l2cap_recv_frame+0x55b/0x30a0\n ? psi_task_switch+0xeb/0x270\n ? finish_task_switch.isra.0+0x93/0x2a0\n hci_rx_work+0x33a/0x3f0\n process_one_work+0x13a/0x2f0\n worker_thread+0x2f0/0x410\n ? __pfx_worker_thread+0x10/0x10\n kthread+0xe0/0x110\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x2c/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1b/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: do not free live element\n\nPablo reports a crash with large batches of elements with a\nback-to-back add/remove pattern.  Quoting Pablo:\n\n  add_elem(\"00000000\") timeout 100 ms\n  ...\n  add_elem(\"0000000X\") timeout 100 ms\n  del_elem(\"0000000X\") \u003c---------------- delete one that was just added\n  ...\n  add_elem(\"00005000\") timeout 100 ms\n\n  1) nft_pipapo_remove() removes element 0000000X\n  Then, KASAN shows a splat.\n\nLooking at the remove function there is a chance that we will drop a\nrule that maps to a non-deactivated element.\n\nRemoval happens in two steps, first we do a lookup for key k and return the\nto-be-removed element and mark it as inactive in the next generation.\nThen, in a second step, the element gets removed from the set/map.\n\nThe _remove function does not work correctly if we have more than one\nelement that share the same key.\n\nThis can happen if we insert an element into a set when the set already\nholds an element with same key, but the element mapping to the existing\nkey has timed out or is not active in the next generation.\n\nIn such case its possible that removal will unmap the wrong element.\nIf this happens, we will leak the non-deactivated element, it becomes\nunreachable.\n\nThe element that got deactivated (and will be freed later) will\nremain reachable in the set data structure, this can result in\na crash when such an element is retrieved during lookup (stale\npointer).\n\nAdd a check that the fully matching key does in fact map to the element\nthat we have marked as inactive in the deactivation step.\nIf not, we need to continue searching.\n\nAdd a bug/warn trap at the end of the function as well, the remove\nfunction must not ever be called with an invisible/unreachable/non-existent\nelement.\n\nv2: avoid uneeded temporary variable (Stefano)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnouveau/dmem: handle kcalloc() allocation failure\n\nThe kcalloc() in nouveau_dmem_evict_chunk() will return null if\nthe physical memory has run out. As a result, if we dereference\nsrc_pfns, dst_pfns or dma_addrs, the null pointer dereference bugs\nwill happen.\n\nMoreover, the GPU is going away. If the kcalloc() fails, we could not\nevict all pages mapping a chunk. So this patch adds a __GFP_NOFAIL\nflag in kcalloc().\n\nFinally, as there is no need to have physically contiguous memory,\nthis patch switches kcalloc() to kvcalloc() in order to avoid\nfailing allocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: cdev: fix uninitialised kfifo\n\nIf a line is requested with debounce, and that results in debouncing\nin software, and the line is subsequently reconfigured to enable edge\ndetection then the allocation of the kfifo to contain edge events is\noverlooked.  This results in events being written to and read from an\nuninitialised kfifo.  Read events are returned to userspace.\n\nInitialise the kfifo in the case where the software debounce is\nalready active.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: llcp: fix nfc_llcp_setsockopt() unsafe copies\n\nsyzbot reported unsafe calls to copy_from_sockptr() [1]\n\nUse copy_safe_from_sockptr() instead.\n\n[1]\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\nRead of size 4 at addr ffff88801caa1ec3 by task syz-executor459/5078\n\nCPU: 0 PID: 5078 Comm: syz-executor459 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114\n  print_address_description mm/kasan/report.c:377 [inline]\n  print_report+0x169/0x550 mm/kasan/report.c:488\n  kasan_report+0x143/0x180 mm/kasan/report.c:601\n  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]\n  copy_from_sockptr include/linux/sockptr.h:55 [inline]\n  nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255\n  do_sock_setsockopt+0x3b1/0x720 net/socket.c:2311\n  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334\n  __do_sys_setsockopt net/socket.c:2343 [inline]\n  __se_sys_setsockopt net/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\n do_syscall_64+0xfd/0x240\n entry_SYSCALL_64_after_hwframe+0x6d/0x75\nRIP: 0033:0x7f7fac07fd89\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff660eb788 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f7fac07fd89\nRDX: 0000000000000000 RSI: 0000000000000118 RDI: 0000000000000004\nRBP: 0000000000000000 R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020000a80 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38599",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: prevent xattr node from overflowing the eraseblock\n\nAdd a check to make sure that the requested xattr node size is no larger\nthan the eraseblock minus the cleanmarker.\n\nUnlike the usual inode nodes, the xattr nodes aren't split into parts\nand spread across multiple eraseblocks, which means that a xattr node\nmust not occupy more than one eraseblock. If the requested xattr value is\ntoo large, the xattr node can spill onto the next eraseblock, overwriting\nthe nodes and causing errors such as:\n\njffs2: argh. node added in wrong place at 0x0000b050(2)\njffs2: nextblock 0x0000a000, expected at 0000b00c\njffs2: error: (823) do_verify_xattr_datum: node CRC failed at 0x01e050,\nread=0xfc892c93, calc=0x000000\njffs2: notice: (823) jffs2_get_inode_nodes: Node header CRC failed\nat 0x01e00c. {848f,2fc4,0fef511f,59a3d171}\njffs2: Node at 0x0000000c with length 0x00001044 would run over the\nend of the erase block\njffs2: Perhaps the file system was created with the wrong erase size?\njffs2: jffs2_scan_eraseblock(): Magic bitmask 0x1985 not found\nat 0x00000010: 0x1044 instead\n\nThis breaks the filesystem and can lead to KASAN crashes such as:\n\nBUG: KASAN: slab-out-of-bounds in jffs2_sum_add_kvec+0x125e/0x15d0\nRead of size 4 at addr ffff88802c31e914 by task repro/830\nCPU: 0 PID: 830 Comm: repro Not tainted 6.9.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS Arch Linux 1.16.3-1-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0xc6/0x120\n print_report+0xc4/0x620\n ? __virt_addr_valid+0x308/0x5b0\n kasan_report+0xc1/0xf0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n ? jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_sum_add_kvec+0x125e/0x15d0\n jffs2_flash_direct_writev+0xa8/0xd0\n jffs2_flash_writev+0x9c9/0xef0\n ? __x64_sys_setxattr+0xc4/0x160\n ? do_syscall_64+0x69/0x140\n ? entry_SYSCALL_64_after_hwframe+0x76/0x7e\n [...]\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41047",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix XDP program unloading while removing the driver\n\nThe commit 6533e558c650 (\"i40e: Fix reset path while removing\nthe driver\") introduced a new PF state \"__I40E_IN_REMOVE\" to block\nmodifying the XDP program while the driver is being removed.\nUnfortunately, such a change is useful only if the \".ndo_bpf()\"\ncallback was called out of the rmmod context because unloading the\nexisting XDP program is also a part of driver removing procedure.\nIn other words, from the rmmod context the driver is expected to\nunload the XDP program without reporting any errors. Otherwise,\nthe kernel warning with callstack is printed out to dmesg.\n\nExample failing scenario:\n 1. Load the i40e driver.\n 2. Load the XDP program.\n 3. Unload the i40e driver (using \"rmmod\" command).\n\nThe example kernel warning log:\n\n[  +0.004646] WARNING: CPU: 94 PID: 10395 at net/core/dev.c:9290 unregister_netdevice_many_notify+0x7a9/0x870\n[...]\n[  +0.010959] RIP: 0010:unregister_netdevice_many_notify+0x7a9/0x870\n[...]\n[  +0.002726] Call Trace:\n[  +0.002457]  \u003cTASK\u003e\n[  +0.002119]  ? __warn+0x80/0x120\n[  +0.003245]  ? unregister_netdevice_many_notify+0x7a9/0x870\n[  +0.005586]  ? report_bug+0x164/0x190\n[  +0.003678]  ? handle_bug+0x3c/0x80\n[  +0.003503]  ? exc_invalid_op+0x17/0x70\n[  +0.003846]  ? asm_exc_invalid_op+0x1a/0x20\n[  +0.004200]  ? unregister_netdevice_many_notify+0x7a9/0x870\n[  +0.005579]  ? unregister_netdevice_many_notify+0x3cc/0x870\n[  +0.005586]  unregister_netdevice_queue+0xf7/0x140\n[  +0.004806]  unregister_netdev+0x1c/0x30\n[  +0.003933]  i40e_vsi_release+0x87/0x2f0 [i40e]\n[  +0.004604]  i40e_remove+0x1a1/0x420 [i40e]\n[  +0.004220]  pci_device_remove+0x3f/0xb0\n[  +0.003943]  device_release_driver_internal+0x19f/0x200\n[  +0.005243]  driver_detach+0x48/0x90\n[  +0.003586]  bus_remove_driver+0x6d/0xf0\n[  +0.003939]  pci_unregister_driver+0x2e/0xb0\n[  +0.004278]  i40e_exit_module+0x10/0x5f0 [i40e]\n[  +0.004570]  __do_sys_delete_module.isra.0+0x197/0x310\n[  +0.005153]  do_syscall_64+0x85/0x170\n[  +0.003684]  ? syscall_exit_to_user_mode+0x69/0x220\n[  +0.004886]  ? do_syscall_64+0x95/0x170\n[  +0.003851]  ? exc_page_fault+0x7e/0x180\n[  +0.003932]  entry_SYSCALL_64_after_hwframe+0x71/0x79\n[  +0.005064] RIP: 0033:0x7f59dc9347cb\n[  +0.003648] Code: 73 01 c3 48 8b 0d 65 16 0c 00 f7 d8 64 89 01 48 83\nc8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 b0 00 00 00 0f\n05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d 35 16 0c 00 f7 d8 64 89 01 48\n[  +0.018753] RSP: 002b:00007ffffac99048 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0\n[  +0.007577] RAX: ffffffffffffffda RBX: 0000559b9bb2f6e0 RCX: 00007f59dc9347cb\n[  +0.007140] RDX: 0000000000000000 RSI: 0000000000000800 RDI: 0000559b9bb2f748\n[  +0.007146] RBP: 00007ffffac99070 R08: 1999999999999999 R09: 0000000000000000\n[  +0.007133] R10: 00007f59dc9a5ac0 R11: 0000000000000206 R12: 0000000000000000\n[  +0.007141] R13: 00007ffffac992d8 R14: 0000559b9bb2f6e0 R15: 0000000000000000\n[  +0.007151]  \u003c/TASK\u003e\n[  +0.002204] ---[ end trace 0000000000000000 ]---\n\nFix this by checking if the XDP program is being loaded or unloaded.\nThen, block only loading a new program while \"__I40E_IN_REMOVE\" is set.\nAlso, move testing \"__I40E_IN_REMOVE\" flag to the beginning of XDP_SETUP\ncallback to avoid unnecessary operations and checks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43790",
      "Description": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43802",
      "Description": "Vim is an improved version of the unix vi text editor. When flushing the typeahead buffer, Vim moves the current position in the typeahead buffer but does not check whether there is enough space left in the buffer to handle the next characters.  So this may lead to the tb_off position within the typebuf variable to point outside of the valid buffer size, which can then later lead to a heap-buffer overflow in e.g. ins_typebuf(). Therefore, when flushing the typeahead buffer, check if there is enough space left before advancing the off position. If not, fall back to flush current typebuf contents. It's not quite clear yet, what can lead to this situation. It seems to happen when error messages occur (which will cause Vim to flush the typeahead buffer) in comnination with several long mappgins and so it may eventually move the off position out of a valid buffer size. Impact is low since it is not easily reproducible and requires to have several mappings active and run into some error condition. But when this happens, this will cause a crash. The issue has been fixed as of Vim patch v9.1.0697. Users are advised to upgrade. There are no known workarounds for this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix UAFs when destroying the queues\n\nThe second tagged commit started sometimes (very rarely, but possible)\nthrowing WARNs from\nnet/core/page_pool.c:page_pool_disable_direct_recycling().\nTurned out idpf frees interrupt vectors with embedded NAPIs *before*\nfreeing the queues making page_pools' NAPI pointers lead to freed\nmemory before these pools are destroyed by libeth.\nIt's not clear whether there are other accesses to the freed vectors\nwhen destroying the queues, but anyway, we usually free queue/interrupt\nvectors only when the queues are destroyed and the NAPIs are guaranteed\nto not be referenced anywhere.\n\nInvert the allocation and freeing logic making queue/interrupt vectors\nbe allocated first and freed last. Vectors don't require queues to be\npresent, so this is safe. Additionally, this change allows to remove\nthat useless queue-\u003eq_vector pointer cleanup, as vectors are still\nvalid when freeing the queues (+ both are freed within one function,\nso it's not clear why nullify the pointers at all).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bridge: mcast: wait for previous gc cycles when removing port\n\nsyzbot hit a use-after-free[1] which is caused because the bridge doesn't\nmake sure that all previous garbage has been collected when removing a\nport. What happens is:\n      CPU 1                   CPU 2\n start gc cycle           remove port\n                         acquire gc lock first\n wait for lock\n                         call br_multicasg_gc() directly\n acquire lock now but    free port\n the port can be freed\n while grp timers still\n running\n\nMake sure all previous gc cycles have finished by using flush_work before\nfreeing the port.\n\n[1]\n  BUG: KASAN: slab-use-after-free in br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861\n  Read of size 8 at addr ffff888071d6d000 by task syz.5.1232/9699\n\n  CPU: 1 PID: 9699 Comm: syz.5.1232 Not tainted 6.10.0-rc5-syzkaller-00021-g24ca36a562d6 #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/07/2024\n  Call Trace:\n   \u003cIRQ\u003e\n   __dump_stack lib/dump_stack.c:88 [inline]\n   dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:114\n   print_address_description mm/kasan/report.c:377 [inline]\n   print_report+0xc3/0x620 mm/kasan/report.c:488\n   kasan_report+0xd9/0x110 mm/kasan/report.c:601\n   br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861\n   call_timer_fn+0x1a3/0x610 kernel/time/timer.c:1792\n   expire_timers kernel/time/timer.c:1843 [inline]\n   __run_timers+0x74b/0xaf0 kernel/time/timer.c:2417\n   __run_timer_base kernel/time/timer.c:2428 [inline]\n   __run_timer_base kernel/time/timer.c:2421 [inline]\n   run_timer_base+0x111/0x190 kernel/time/timer.c:2437",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45019",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Take state lock during tx timeout reporter\n\nmlx5e_safe_reopen_channels() requires the state lock taken. The\nreferenced changed in the Fixes tag removed the lock to fix another\nissue. This patch adds it back but at a later point (when calling\nmlx5e_safe_reopen_channels()) to avoid the deadlock referenced in the\nFixes tag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45306",
      "Description": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45337",
      "Description": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45339",
      "Description": "When logs are written to a widely-writable directory (the default), an unprivileged attacker may predict a privileged process's log file path and pre-create a symbolic link to a sensitive file in its place. When that privileged process runs, it will follow the planted symlink and overwrite that sensitive file. To fix that, glog now causes the program to exit (with status code 2) when it finds that the configured log file already exists.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45774",
      "Description": "A flaw was found in grub2. A specially crafted JPEG file can cause the JPEG parser of grub2 to incorrectly check the bounds of its internal buffers, resulting in an out-of-bounds write. The possibility of overwriting sensitive information to bypass secure boot protections is not discarded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45775",
      "Description": "A flaw was found in grub2 where the grub_extcmd_dispatcher() function calls grub_arg_list_alloc() to allocate memory for the grub's argument list. However, it fails to check in case the memory allocation fails. Once the allocation fails, a NULL point will be processed by the parse_option() function, leading grub to crash or, in some rare scenarios, corrupt the IVT data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45776",
      "Description": "When reading the language .mo file in grub_mofile_open(), grub2 fails to verify an integer overflow when allocating its internal buffer. A crafted .mo file may lead the buffer size calculation to overflow, leading to out-of-bound reads and writes. This flaw allows an attacker to leak sensitive data or overwrite critical data, possibly circumventing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45777",
      "Description": "A flaw was found in grub2. The calculation of the translation buffer when reading a language .mo file in grub_gettext_getstr_from_position() may overflow, leading to a Out-of-bound write. This issue can be leveraged by an attacker to overwrite grub2's sensitive heap data, eventually leading to the circumvention of secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45778",
      "Description": "A stack overflow flaw was found when reading a BFS file system. A crafted BFS filesystem may lead to an uncontrolled loop, causing grub2 to crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45779",
      "Description": "An integer overflow flaw was found in the BFS file system driver in grub2. When reading a file with an indirect extent map, grub2 fails to validate the number of extent entries to be read. A crafted or corrupted BFS filesystem may cause an integer overflow during the file reading, leading to a heap of bounds read. As a consequence, sensitive data may be leaked, or grub2 will crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45780",
      "Description": "A flaw was found in grub2. When reading tar files, grub2 allocates an internal buffer for the file name. However, it fails to properly verify the allocation against possible integer overflows. It's possible to cause the allocation length to overflow with a crafted tar file, leading to a heap out-of-bounds write. This flaw eventually allows an attacker to circumvent secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45781",
      "Description": "A flaw was found in grub2. When reading a symbolic link's name from a UFS filesystem, grub2 fails to validate the string length taken as an input. The lack of validation may lead to a heap out-of-bounds write, causing data integrity issues and eventually allowing an attacker to circumvent secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45782",
      "Description": "A flaw was found in the HFS filesystem. When reading an HFS volume's name at grub_fs_mount(), the HFS filesystem driver performs a strcpy() using the user-provided volume name as input without properly validating the volume name's length. This issue may read to a heap-based out-of-bounds writer, impacting grub's sensitive data integrity and eventually leading to a secure boot protection bypass.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45783",
      "Description": "A flaw was found in grub2. When failing to mount an HFS+ grub, the hfsplus filesystem driver doesn't properly set an ERRNO value. This issue may lead to a NULL pointer access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46858",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: Fix uaf in __timer_delete_sync\n\nThere are two paths to access mptcp_pm_del_add_timer, result in a race\ncondition:\n\n     CPU1\t\t\t\tCPU2\n     ====                               ====\n     net_rx_action\n     napi_poll                          netlink_sendmsg\n     __napi_poll                        netlink_unicast\n     process_backlog                    netlink_unicast_kernel\n     __netif_receive_skb                genl_rcv\n     __netif_receive_skb_one_core       netlink_rcv_skb\n     NF_HOOK                            genl_rcv_msg\n     ip_local_deliver_finish            genl_family_rcv_msg\n     ip_protocol_deliver_rcu            genl_family_rcv_msg_doit\n     tcp_v4_rcv                         mptcp_pm_nl_flush_addrs_doit\n     tcp_v4_do_rcv                      mptcp_nl_remove_addrs_list\n     tcp_rcv_established                mptcp_pm_remove_addrs_and_subflows\n     tcp_data_queue                     remove_anno_list_by_saddr\n     mptcp_incoming_options             mptcp_pm_del_add_timer\n     mptcp_pm_del_add_timer             kfree(entry)\n\nIn remove_anno_list_by_saddr(running on CPU2), after leaving the critical\nzone protected by \"pm.lock\", the entry will be released, which leads to the\noccurrence of uaf in the mptcp_pm_del_add_timer(running on CPU1).\n\nKeeping a reference to add_timer inside the lock, and calling\nsk_stop_timer_sync() with this reference, instead of \"entry-\u003eadd_timer\".\n\nMove list_del(\u0026entry-\u003elist) to mptcp_pm_del_add_timer and inside the pm lock,\ndo not directly access any members of the entry outside the pm lock, which\ncan avoid similar \"entry-\u003ex\" uaf.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47220",
      "Description": "An issue was discovered in the WEBrick toolkit through 1.8.1 for Ruby. It allows HTTP request smuggling by providing both a Content-Length header and a Transfer-Encoding header, e.g., \"GET /admin HTTP/1.1\\r\\n\" inside of a \"POST /user HTTP/1.1\\r\\n\" request. NOTE: the supplier's position is \"Webrick should not be used in production.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47666",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Set phy-\u003eenable_completion only when we wait for it\n\npm8001_phy_control() populates the enable_completion pointer with a stack\naddress, sends a PHY_LINK_RESET / PHY_HARD_RESET, waits 300 ms, and\nreturns. The problem arises when a phy control response comes late.  After\n300 ms the pm8001_phy_control() function returns and the passed\nenable_completion stack address is no longer valid. Late phy control\nresponse invokes complete() on a dangling enable_completion pointer which\nleads to a kernel crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49761",
      "Description": "REXML is an XML toolkit for Ruby. The REXML gem before 3.3.9 has a ReDoS vulnerability when it parses an XML that has many digits between \u0026# and x...; in a hex numeric character reference (\u0026#x...;). This does not happen with Ruby 3.2 or later. Ruby 3.1 is the only affected maintained Ruby. The REXML gem 3.3.9 or later include the patch to fix the vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50018",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50051",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: mpc52xx: Add cancel_work_sync before module remove\n\nIf we remove the module which will call mpc52xx_spi_remove\nit will free 'ms' through spi_unregister_controller.\nwhile the work ms-\u003ework will be used. The sequence of operations\nthat may lead to a UAF bug.\n\nFix it by ensuring that the work is canceled before proceeding with\nthe cleanup in mpc52xx_spi_remove.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50115",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: nSVM: Ignore nCR3[4:0] when loading PDPTEs from memory\n\nIgnore nCR3[4:0] when loading PDPTEs from memory for nested SVM, as bits\n4:0 of CR3 are ignored when PAE paging is used, and thus VMRUN doesn't\nenforce 32-byte alignment of nCR3.\n\nIn the absolute worst case scenario, failure to ignore bits 4:0 can result\nin an out-of-bounds read, e.g. if the target page is at the end of a\nmemslot, and the VMM isn't using guard pages.\n\nPer the APM:\n\n  The CR3 register points to the base address of the page-directory-pointer\n  table. The page-directory-pointer table is aligned on a 32-byte boundary,\n  with the low 5 address bits 4:0 assumed to be 0.\n\nAnd the SDM's much more explicit:\n\n  4:0    Ignored\n\nNote, KVM gets this right when loading PDPTRs, it's only the nSVM flow\nthat is broken.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50136",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Unregister notifier on eswitch init failure\n\nIt otherwise remains registered and a subsequent attempt at eswitch\nenabling might trigger warnings of the sort:\n\n[  682.589148] ------------[ cut here ]------------\n[  682.590204] notifier callback eswitch_vport_event [mlx5_core] already registered\n[  682.590256] WARNING: CPU: 13 PID: 2660 at kernel/notifier.c:31 notifier_chain_register+0x3e/0x90\n[...snipped]\n[  682.610052] Call Trace:\n[  682.610369]  \u003cTASK\u003e\n[  682.610663]  ? __warn+0x7c/0x110\n[  682.611050]  ? notifier_chain_register+0x3e/0x90\n[  682.611556]  ? report_bug+0x148/0x170\n[  682.611977]  ? handle_bug+0x36/0x70\n[  682.612384]  ? exc_invalid_op+0x13/0x60\n[  682.612817]  ? asm_exc_invalid_op+0x16/0x20\n[  682.613284]  ? notifier_chain_register+0x3e/0x90\n[  682.613789]  atomic_notifier_chain_register+0x25/0x40\n[  682.614322]  mlx5_eswitch_enable_locked+0x1d4/0x3b0 [mlx5_core]\n[  682.614965]  mlx5_eswitch_enable+0xc9/0x100 [mlx5_core]\n[  682.615551]  mlx5_device_enable_sriov+0x25/0x340 [mlx5_core]\n[  682.616170]  mlx5_core_sriov_configure+0x50/0x170 [mlx5_core]\n[  682.616789]  sriov_numvfs_store+0xb0/0x1b0\n[  682.617248]  kernfs_fop_write_iter+0x117/0x1a0\n[  682.617734]  vfs_write+0x231/0x3f0\n[  682.618138]  ksys_write+0x63/0xe0\n[  682.618536]  do_syscall_64+0x4c/0x100\n[  682.618958]  entry_SYSCALL_64_after_hwframe+0x4b/0x53",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: validate new SA's prefixlen using SA family when sel.family is unset\n\nThis expands the validation introduced in commit 07bf7908950a (\"xfrm:\nValidate address prefix lengths in the xfrm selector.\")\n\nsyzbot created an SA with\n    usersa.sel.family = AF_UNSPEC\n    usersa.sel.prefixlen_s = 128\n    usersa.family = AF_INET\n\nBecause of the AF_UNSPEC selector, verify_newsa_info doesn't put\nlimits on prefixlen_{s,d}. But then copy_from_user_state sets\nx-\u003esel.family to usersa.family (AF_INET). Do the same conversion in\nverify_newsa_info before validating prefixlen_{s,d}, since that's how\nprefixlen is going to be used later on.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50143",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: fix uninit-value use in udf_get_fileshortad\n\nCheck for overflow when computing alen in udf_current_aext to mitigate\nlater uninit-value use in udf_get_fileshortad KMSAN bug[1].\nAfter applying the patch reproducer did not trigger any issue[2].\n\n[1] https://syzkaller.appspot.com/bug?extid=8901c4560b7ab5c2f9df\n[2] https://syzkaller.appspot.com/x/log.txt?x=10242227980000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50151",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix OOBs when building SMB2_IOCTL request\n\nWhen using encryption, either enforced by the server or when using\n'seal' mount option, the client will squash all compound request buffers\ndown for encryption into a single iov in smb2_set_next_command().\n\nSMB2_ioctl_init() allocates a small buffer (448 bytes) to hold the\nSMB2_IOCTL request in the first iov, and if the user passes an input\nbuffer that is greater than 328 bytes, smb2_set_next_command() will\nend up writing off the end of @rqst-\u003eiov[0].iov_base as shown below:\n\n  mount.cifs //srv/share /mnt -o ...,seal\n  ln -s $(perl -e \"print('a')for 1..1024\") /mnt/link\n\n  BUG: KASAN: slab-out-of-bounds in\n  smb2_set_next_command.cold+0x1d6/0x24c [cifs]\n  Write of size 4116 at addr ffff8881148fcab8 by task ln/859\n\n  CPU: 1 UID: 0 PID: 859 Comm: ln Not tainted 6.12.0-rc3 #1\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\n  1.16.3-2.fc40 04/01/2014\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x5d/0x80\n   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]\n   print_report+0x156/0x4d9\n   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]\n   ? __virt_addr_valid+0x145/0x310\n   ? __phys_addr+0x46/0x90\n   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]\n   kasan_report+0xda/0x110\n   ? smb2_set_next_command.cold+0x1d6/0x24c [cifs]\n   kasan_check_range+0x10f/0x1f0\n   __asan_memcpy+0x3c/0x60\n   smb2_set_next_command.cold+0x1d6/0x24c [cifs]\n   smb2_compound_op+0x238c/0x3840 [cifs]\n   ? kasan_save_track+0x14/0x30\n   ? kasan_save_free_info+0x3b/0x70\n   ? vfs_symlink+0x1a1/0x2c0\n   ? do_symlinkat+0x108/0x1c0\n   ? __pfx_smb2_compound_op+0x10/0x10 [cifs]\n   ? kmem_cache_free+0x118/0x3e0\n   ? cifs_get_writable_path+0xeb/0x1a0 [cifs]\n   smb2_get_reparse_inode+0x423/0x540 [cifs]\n   ? __pfx_smb2_get_reparse_inode+0x10/0x10 [cifs]\n   ? rcu_is_watching+0x20/0x50\n   ? __kmalloc_noprof+0x37c/0x480\n   ? smb2_create_reparse_symlink+0x257/0x490 [cifs]\n   ? smb2_create_reparse_symlink+0x38f/0x490 [cifs]\n   smb2_create_reparse_symlink+0x38f/0x490 [cifs]\n   ? __pfx_smb2_create_reparse_symlink+0x10/0x10 [cifs]\n   ? find_held_lock+0x8a/0xa0\n   ? hlock_class+0x32/0xb0\n   ? __build_path_from_dentry_optional_prefix+0x19d/0x2e0 [cifs]\n   cifs_symlink+0x24f/0x960 [cifs]\n   ? __pfx_make_vfsuid+0x10/0x10\n   ? __pfx_cifs_symlink+0x10/0x10 [cifs]\n   ? make_vfsgid+0x6b/0xc0\n   ? generic_permission+0x96/0x2d0\n   vfs_symlink+0x1a1/0x2c0\n   do_symlinkat+0x108/0x1c0\n   ? __pfx_do_symlinkat+0x10/0x10\n   ? strncpy_from_user+0xaa/0x160\n   __x64_sys_symlinkat+0xb9/0xf0\n   do_syscall_64+0xbb/0x1d0\n   entry_SYSCALL_64_after_hwframe+0x77/0x7f\n  RIP: 0033:0x7f08d75c13bb",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50154",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp/dccp: Don't use timer_pending() in reqsk_queue_unlink().\n\nMartin KaFai Lau reported use-after-free [0] in reqsk_timer_handler().\n\n  \"\"\"\n  We are seeing a use-after-free from a bpf prog attached to\n  trace_tcp_retransmit_synack. The program passes the req-\u003esk to the\n  bpf_sk_storage_get_tracing kernel helper which does check for null\n  before using it.\n  \"\"\"\n\nThe commit 83fccfc3940c (\"inet: fix potential deadlock in\nreqsk_queue_unlink()\") added timer_pending() in reqsk_queue_unlink() not\nto call del_timer_sync() from reqsk_timer_handler(), but it introduced a\nsmall race window.\n\nBefore the timer is called, expire_timers() calls detach_timer(timer, true)\nto clear timer-\u003eentry.pprev and marks it as not pending.\n\nIf reqsk_queue_unlink() checks timer_pending() just after expire_timers()\ncalls detach_timer(), TCP will miss del_timer_sync(); the reqsk timer will\ncontinue running and send multiple SYN+ACKs until it expires.\n\nThe reported UAF could happen if req-\u003esk is close()d earlier than the timer\nexpiration, which is 63s by default.\n\nThe scenario would be\n\n  1. inet_csk_complete_hashdance() calls inet_csk_reqsk_queue_drop(),\n     but del_timer_sync() is missed\n\n  2. reqsk timer is executed and scheduled again\n\n  3. req-\u003esk is accept()ed and reqsk_put() decrements rsk_refcnt, but\n     reqsk timer still has another one, and inet_csk_accept() does not\n     clear req-\u003esk for non-TFO sockets\n\n  4. sk is close()d\n\n  5. reqsk timer is executed again, and BPF touches req-\u003esk\n\nLet's not use timer_pending() by passing the caller context to\n__inet_csk_reqsk_queue_drop().\n\nNote that reqsk timer is pinned, so the issue does not happen in most\nuse cases. [1]\n\n[0]\nBUG: KFENCE: use-after-free read in bpf_sk_storage_get_tracing+0x2e/0x1b0\n\nUse-after-free read at 0x00000000a891fb3a (in kfence-#1):\nbpf_sk_storage_get_tracing+0x2e/0x1b0\nbpf_prog_5ea3e95db6da0438_tcp_retransmit_synack+0x1d20/0x1dda\nbpf_trace_run2+0x4c/0xc0\ntcp_rtx_synack+0xf9/0x100\nreqsk_timer_handler+0xda/0x3d0\nrun_timer_softirq+0x292/0x8a0\nirq_exit_rcu+0xf5/0x320\nsysvec_apic_timer_interrupt+0x6d/0x80\nasm_sysvec_apic_timer_interrupt+0x16/0x20\nintel_idle_irq+0x5a/0xa0\ncpuidle_enter_state+0x94/0x273\ncpu_startup_entry+0x15e/0x260\nstart_secondary+0x8a/0x90\nsecondary_startup_64_no_verify+0xfa/0xfb\n\nkfence-#1: 0x00000000a72cc7b6-0x00000000d97616d9, size=2376, cache=TCPv6\n\nallocated by task 0 on cpu 9 at 260507.901592s:\nsk_prot_alloc+0x35/0x140\nsk_clone_lock+0x1f/0x3f0\ninet_csk_clone_lock+0x15/0x160\ntcp_create_openreq_child+0x1f/0x410\ntcp_v6_syn_recv_sock+0x1da/0x700\ntcp_check_req+0x1fb/0x510\ntcp_v6_rcv+0x98b/0x1420\nipv6_list_rcv+0x2258/0x26e0\nnapi_complete_done+0x5b1/0x2990\nmlx5e_napi_poll+0x2ae/0x8d0\nnet_rx_action+0x13e/0x590\nirq_exit_rcu+0xf5/0x320\ncommon_interrupt+0x80/0x90\nasm_common_interrupt+0x22/0x40\ncpuidle_enter_state+0xfb/0x273\ncpu_startup_entry+0x15e/0x260\nstart_secondary+0x8a/0x90\nsecondary_startup_64_no_verify+0xfa/0xfb\n\nfreed by task 0 on cpu 9 at 260507.927527s:\nrcu_core_si+0x4ff/0xf10\nirq_exit_rcu+0xf5/0x320\nsysvec_apic_timer_interrupt+0x6d/0x80\nasm_sysvec_apic_timer_interrupt+0x16/0x20\ncpuidle_enter_state+0xfb/0x273\ncpu_startup_entry+0x15e/0x260\nstart_secondary+0x8a/0x90\nsecondary_startup_64_no_verify+0xfa/0xfb",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50166",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfsl/fman: Fix refcount handling of fman-related devices\n\nIn mac_probe() there are multiple calls to of_find_device_by_node(),\nfman_bind() and fman_port_bind() which takes references to of_dev-\u003edev.\nNot all references taken by these calls are released later on error path\nin mac_probe() and in mac_remove() which lead to reference leaks.\n\nAdd references release.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50195",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nposix-clock: Fix missing timespec64 check in pc_clock_settime()\n\nAs Andrew pointed out, it will make sense that the PTP core\nchecked timespec64 struct's tv_sec and tv_nsec range before calling\nptp-\u003einfo-\u003esettime64().\n\nAs the man manual of clock_settime() said, if tp.tv_sec is negative or\ntp.tv_nsec is outside the range [0..999,999,999], it should return EINVAL,\nwhich include dynamic clocks which handles PTP clock, and the condition is\nconsistent with timespec64_valid(). As Thomas suggested, timespec64_valid()\nonly check the timespec is valid, but not ensure that the time is\nin a valid range, so check it ahead using timespec64_valid_strict()\nin pc_clock_settime() and return -EINVAL if not valid.\n\nThere are some drivers that use tp-\u003etv_sec and tp-\u003etv_nsec directly to\nwrite registers without validity checks and assume that the higher layer\nhas checked it, which is dangerous and will benefit from this, such as\nhclge_ptp_settime(), igb_ptp_settime_i210(), _rcar_gen4_ptp_settime(),\nand some drivers can remove the checks of itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50199",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/swapfile: skip HugeTLB pages for unuse_vma\n\nI got a bad pud error and lost a 1GB HugeTLB when calling swapoff.  The\nproblem can be reproduced by the following steps:\n\n 1. Allocate an anonymous 1GB HugeTLB and some other anonymous memory.\n 2. Swapout the above anonymous memory.\n 3. run swapoff and we will get a bad pud error in kernel message:\n\n  mm/pgtable-generic.c:42: bad pud 00000000743d215d(84000001400000e7)\n\nWe can tell that pud_clear_bad is called by pud_none_or_clear_bad in\nunuse_pud_range() by ftrace.  And therefore the HugeTLB pages will never\nbe freed because we lost it from page table.  We can skip HugeTLB pages\nfor unuse_vma to fix it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50202",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: propagate directory read errors from nilfs_find_entry()\n\nSyzbot reported that a task hang occurs in vcs_open() during a fuzzing\ntest for nilfs2.\n\nThe root cause of this problem is that in nilfs_find_entry(), which\nsearches for directory entries, ignores errors when loading a directory\npage/folio via nilfs_get_folio() fails.\n\nIf the filesystem images is corrupted, and the i_size of the directory\ninode is large, and the directory page/folio is successfully read but\nfails the sanity check, for example when it is zero-filled,\nnilfs_check_folio() may continue to spit out error messages in bursts.\n\nFix this issue by propagating the error to the callers when loading a\npage/folio fails in nilfs_find_entry().\n\nThe current interface of nilfs_find_entry() and its callers is outdated\nand cannot propagate error codes such as -EIO and -ENOMEM returned via\nnilfs_find_entry(), so fix it together.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50211",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: refactor inode_bmap() to handle error\n\nRefactor inode_bmap() to handle error since udf_next_aext() can return\nerror now. On situations like ftruncate, udf_extend_file() can now\ndetect errors and bail out early without resorting to checking for\nparticular offsets and assuming internal behavior of these functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50256",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_reject_ipv6: fix potential crash in nf_send_reset6()\n\nI got a syzbot report without a repro [1] crashing in nf_send_reset6()\n\nI think the issue is that dev-\u003ehard_header_len is zero, and we attempt\nlater to push an Ethernet header.\n\nUse LL_MAX_HEADER, as other functions in net/ipv6/netfilter/nf_reject_ipv6.c.\n\n[1]\n\nskbuff: skb_under_panic: text:ffffffff89b1d008 len:74 put:14 head:ffff88803123aa00 data:ffff88803123a9f2 tail:0x3c end:0x140 dev:syz_tun\n kernel BUG at net/core/skbuff.c:206 !\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 0 UID: 0 PID: 7373 Comm: syz.1.568 Not tainted 6.12.0-rc2-syzkaller-00631-g6d858708d465 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\n RIP: 0010:skb_panic net/core/skbuff.c:206 [inline]\n RIP: 0010:skb_under_panic+0x14b/0x150 net/core/skbuff.c:216\nCode: 0d 8d 48 c7 c6 60 a6 29 8e 48 8b 54 24 08 8b 0c 24 44 8b 44 24 04 4d 89 e9 50 41 54 41 57 41 56 e8 ba 30 38 02 48 83 c4 20 90 \u003c0f\u003e 0b 0f 1f 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3\nRSP: 0018:ffffc900045269b0 EFLAGS: 00010282\nRAX: 0000000000000088 RBX: dffffc0000000000 RCX: cd66dacdc5d8e800\nRDX: 0000000000000000 RSI: 0000000000000200 RDI: 0000000000000000\nRBP: ffff88802d39a3d0 R08: ffffffff8174afec R09: 1ffff920008a4ccc\nR10: dffffc0000000000 R11: fffff520008a4ccd R12: 0000000000000140\nR13: ffff88803123aa00 R14: ffff88803123a9f2 R15: 000000000000003c\nFS:  00007fdbee5ff6c0(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000005d322000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n  skb_push+0xe5/0x100 net/core/skbuff.c:2636\n  eth_header+0x38/0x1f0 net/ethernet/eth.c:83\n  dev_hard_header include/linux/netdevice.h:3208 [inline]\n  nf_send_reset6+0xce6/0x1270 net/ipv6/netfilter/nf_reject_ipv6.c:358\n  nft_reject_inet_eval+0x3b9/0x690 net/netfilter/nft_reject_inet.c:48\n  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]\n  nft_do_chain+0x4ad/0x1da0 net/netfilter/nf_tables_core.c:288\n  nft_do_chain_inet+0x418/0x6b0 net/netfilter/nft_chain_filter.c:161\n  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n  nf_hook_slow+0xc3/0x220 net/netfilter/core.c:626\n  nf_hook include/linux/netfilter.h:269 [inline]\n  NF_HOOK include/linux/netfilter.h:312 [inline]\n  br_nf_pre_routing_ipv6+0x63e/0x770 net/bridge/br_netfilter_ipv6.c:184\n  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n  nf_hook_bridge_pre net/bridge/br_input.c:277 [inline]\n  br_handle_frame+0x9fd/0x1530 net/bridge/br_input.c:424\n  __netif_receive_skb_core+0x13e8/0x4570 net/core/dev.c:5562\n  __netif_receive_skb_one_core net/core/dev.c:5666 [inline]\n  __netif_receive_skb+0x12f/0x650 net/core/dev.c:5781\n  netif_receive_skb_internal net/core/dev.c:5867 [inline]\n  netif_receive_skb+0x1e8/0x890 net/core/dev.c:5926\n  tun_rx_batched+0x1b7/0x8f0 drivers/net/tun.c:1550\n  tun_get_user+0x3056/0x47e0 drivers/net/tun.c:2007\n  tun_chr_write_iter+0x10d/0x1f0 drivers/net/tun.c:2053\n  new_sync_write fs/read_write.c:590 [inline]\n  vfs_write+0xa6d/0xc90 fs/read_write.c:683\n  ksys_write+0x183/0x2b0 fs/read_write.c:736\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fdbeeb7d1ff\nCode: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 c9 8d 02 00 48 8b 54 24 18 48 8b 74 24 10 41 89 c0 8b 7c 24 08 b8 01 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 31 44 89 c7 48 89 44 24 08 e8 1c 8e 02 00 48\nRSP: 002b:00007fdbee5ff000 EFLAGS: 00000293 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 00007fdbeed36058 RCX: 00007fdbeeb7d1ff\nRDX: 000000000000008e RSI: 0000000020000040 RDI: 00000000000000c8\nRBP: 00007fdbeebf12be R08: 0000000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50262",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix out-of-bounds write in trie_get_next_key()\n\ntrie_get_next_key() allocates a node stack with size trie-\u003emax_prefixlen,\nwhile it writes (trie-\u003emax_prefixlen + 1) nodes to the stack when it has\nfull paths from the root to leaves. For example, consider a trie with\nmax_prefixlen is 8, and the nodes with key 0x00/0, 0x00/1, 0x00/2, ...\n0x00/8 inserted. Subsequent calls to trie_get_next_key with _key with\n.prefixlen = 8 make 9 nodes be written on the node stack with size 8.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50275",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64/sve: Discard stale CPU state when handling SVE traps\n\nThe logic for handling SVE traps manipulates saved FPSIMD/SVE state\nincorrectly, and a race with preemption can result in a task having\nTIF_SVE set and TIF_FOREIGN_FPSTATE clear even though the live CPU state\nis stale (e.g. with SVE traps enabled). This has been observed to result\nin warnings from do_sve_acc() where SVE traps are not expected while\nTIF_SVE is set:\n\n|         if (test_and_set_thread_flag(TIF_SVE))\n|                 WARN_ON(1); /* SVE access shouldn't have trapped */\n\nWarnings of this form have been reported intermittently, e.g.\n\n  https://lore.kernel.org/linux-arm-kernel/CA+G9fYtEGe_DhY2Ms7+L7NKsLYUomGsgqpdBj+QwDLeSg=JhGg@mail.gmail.com/\n  https://lore.kernel.org/linux-arm-kernel/000000000000511e9a060ce5a45c@google.com/\n\nThe race can occur when the SVE trap handler is preempted before and\nafter manipulating the saved FPSIMD/SVE state, starting and ending on\nthe same CPU, e.g.\n\n| void do_sve_acc(unsigned long esr, struct pt_regs *regs)\n| {\n|         // Trap on CPU 0 with TIF_SVE clear, SVE traps enabled\n|         // task-\u003efpsimd_cpu is 0.\n|         // per_cpu_ptr(\u0026fpsimd_last_state, 0) is task.\n|\n|         ...\n|\n|         // Preempted; migrated from CPU 0 to CPU 1.\n|         // TIF_FOREIGN_FPSTATE is set.\n|\n|         get_cpu_fpsimd_context();\n|\n|         if (test_and_set_thread_flag(TIF_SVE))\n|                 WARN_ON(1); /* SVE access shouldn't have trapped */\n|\n|         sve_init_regs() {\n|                 if (!test_thread_flag(TIF_FOREIGN_FPSTATE)) {\n|                         ...\n|                 } else {\n|                         fpsimd_to_sve(current);\n|                         current-\u003ethread.fp_type = FP_STATE_SVE;\n|                 }\n|         }\n|\n|         put_cpu_fpsimd_context();\n|\n|         // Preempted; migrated from CPU 1 to CPU 0.\n|         // task-\u003efpsimd_cpu is still 0\n|         // If per_cpu_ptr(\u0026fpsimd_last_state, 0) is still task then:\n|         // - Stale HW state is reused (with SVE traps enabled)\n|         // - TIF_FOREIGN_FPSTATE is cleared\n|         // - A return to userspace skips HW state restore\n| }\n\nFix the case where the state is not live and TIF_FOREIGN_FPSTATE is set\nby calling fpsimd_flush_task_state() to detach from the saved CPU\nstate. This ensures that a subsequent context switch will not reuse the\nstale CPU state, and will instead set TIF_FOREIGN_FPSTATE, forcing the\nnew state to be reloaded from memory prior to a return to userspace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50278",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm cache: fix potential out-of-bounds access on the first resume\n\nOut-of-bounds access occurs if the fast device is expanded unexpectedly\nbefore the first-time resume of the cache table. This happens because\nexpanding the fast device requires reloading the cache table for\ncache_create to allocate new in-core data structures that fit the new\nsize, and the check in cache_preresume is not performed during the\nfirst resume, leading to the issue.\n\nReproduce steps:\n\n1. prepare component devices:\n\ndmsetup create cmeta --table \"0 8192 linear /dev/sdc 0\"\ndmsetup create cdata --table \"0 65536 linear /dev/sdc 8192\"\ndmsetup create corig --table \"0 524288 linear /dev/sdc 262144\"\ndd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1 oflag=direct\n\n2. load a cache table of 512 cache blocks, and deliberately expand the\n   fast device before resuming the cache, making the in-core data\n   structures inadequate.\n\ndmsetup create cache --notable\ndmsetup reload cache --table \"0 524288 cache /dev/mapper/cmeta \\\n/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0\"\ndmsetup reload cdata --table \"0 131072 linear /dev/sdc 8192\"\ndmsetup resume cdata\ndmsetup resume cache\n\n3. suspend the cache to write out the in-core dirty bitset and hint\n   array, leading to out-of-bounds access to the dirty bitset at offset\n   0x40:\n\ndmsetup suspend cache\n\nKASAN reports:\n\n  BUG: KASAN: vmalloc-out-of-bounds in is_dirty_callback+0x2b/0x80\n  Read of size 8 at addr ffffc90000085040 by task dmsetup/90\n\n  (...snip...)\n  The buggy address belongs to the virtual mapping at\n   [ffffc90000085000, ffffc90000087000) created by:\n   cache_ctr+0x176a/0x35f0\n\n  (...snip...)\n  Memory state around the buggy address:\n   ffffc90000084f00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n   ffffc90000084f80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n  \u003effffc90000085000: 00 00 00 00 00 00 00 00 f8 f8 f8 f8 f8 f8 f8 f8\n                                             ^\n   ffffc90000085080: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n   ffffc90000085100: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n\nFix by checking the size change on the first resume.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50299",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: properly validate chunk size in sctp_sf_ootb()\n\nA size validation fix similar to that in Commit 50619dbf8db7 (\"sctp: add\nsize validation when walking chunks\") is also required in sctp_sf_ootb()\nto address a crash reported by syzbot:\n\n  BUG: KMSAN: uninit-value in sctp_sf_ootb+0x7f5/0xce0 net/sctp/sm_statefuns.c:3712\n  sctp_sf_ootb+0x7f5/0xce0 net/sctp/sm_statefuns.c:3712\n  sctp_do_sm+0x181/0x93d0 net/sctp/sm_sideeffect.c:1166\n  sctp_endpoint_bh_rcv+0xc38/0xf90 net/sctp/endpointola.c:407\n  sctp_inq_push+0x2ef/0x380 net/sctp/inqueue.c:88\n  sctp_rcv+0x3831/0x3b20 net/sctp/input.c:243\n  sctp4_rcv+0x42/0x50 net/sctp/protocol.c:1159\n  ip_protocol_deliver_rcu+0xb51/0x13d0 net/ipv4/ip_input.c:205\n  ip_local_deliver_finish+0x336/0x500 net/ipv4/ip_input.c:233",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53064",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix idpf_vc_core_init error path\n\nIn an event where the platform running the device control plane\nis rebooted, reset is detected on the driver. It releases\nall the resources and waits for the reset to complete. Once the\nreset is done, it tries to build the resources back. At this\ntime if the device control plane is not yet started, then\nthe driver timeouts on the virtchnl message and retries to\nestablish the mailbox again.\n\nIn the retry flow, mailbox is deinitialized but the mailbox\nworkqueue is still alive and polling for the mailbox message.\nThis results in accessing the released control queue leading to\nnull-ptr-deref. Fix it by unrolling the work queue cancellation\nand mailbox deinitialization in the reverse order which they got\ninitialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86/amd/pmc: Detect when STB is not available\n\nLoading the amd_pmc module as:\n\n    amd_pmc enable_stb=1\n\n...can result in the following messages in the kernel ring buffer:\n\n    amd_pmc AMDI0009:00: SMU cmd failed. err: 0xff\n    ioremap on RAM at 0x0000000000000000 - 0x0000000000ffffff\n    WARNING: CPU: 10 PID: 2151 at arch/x86/mm/ioremap.c:217 __ioremap_caller+0x2cd/0x340\n\nFurther debugging reveals that this occurs when the requests for\nS2D_PHYS_ADDR_LOW and S2D_PHYS_ADDR_HIGH return a value of 0,\nindicating that the STB is inaccessible. To prevent the ioremap\nwarning and provide clarity to the user, handle the invalid address\nand display an error message.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix lock recursion\n\nafs_wake_up_async_call() can incur lock recursion.  The problem is that it\nis called from AF_RXRPC whilst holding the -\u003enotify_lock, but it tries to\ntake a ref on the afs_call struct in order to pass it to a work queue - but\nif the afs_call is already queued, we then have an extraneous ref that must\nbe put... calling afs_put_call() may call back down into AF_RXRPC through\nrxrpc_kernel_shutdown_call(), however, which might try taking the\n-\u003enotify_lock again.\n\nThis case isn't very common, however, so defer it to a workqueue.  The oops\nlooks something like:\n\n  BUG: spinlock recursion on CPU#0, krxrpcio/7001/1646\n   lock: 0xffff888141399b30, .magic: dead4ead, .owner: krxrpcio/7001/1646, .owner_cpu: 0\n  CPU: 0 UID: 0 PID: 1646 Comm: krxrpcio/7001 Not tainted 6.12.0-rc2-build3+ #4351\n  Hardware name: ASUS All Series/H97-PLUS, BIOS 2306 10/09/2014\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x47/0x70\n   do_raw_spin_lock+0x3c/0x90\n   rxrpc_kernel_shutdown_call+0x83/0xb0\n   afs_put_call+0xd7/0x180\n   rxrpc_notify_socket+0xa0/0x190\n   rxrpc_input_split_jumbo+0x198/0x1d0\n   rxrpc_input_data+0x14b/0x1e0\n   ? rxrpc_input_call_packet+0xc2/0x1f0\n   rxrpc_input_call_event+0xad/0x6b0\n   rxrpc_input_packet_on_conn+0x1e1/0x210\n   rxrpc_input_packet+0x3f2/0x4d0\n   rxrpc_io_thread+0x243/0x410\n   ? __pfx_rxrpc_io_thread+0x10/0x10\n   kthread+0xcf/0xe0\n   ? __pfx_kthread+0x10/0x10\n   ret_from_fork+0x24/0x40\n   ? __pfx_kthread+0x10/0x10\n   ret_from_fork_asm+0x1a/0x30\n   \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53095",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Fix use-after-free of network namespace.\n\nRecently, we got a customer report that CIFS triggers oops while\nreconnecting to a server.  [0]\n\nThe workload runs on Kubernetes, and some pods mount CIFS servers\nin non-root network namespaces.  The problem rarely happened, but\nit was always while the pod was dying.\n\nThe root cause is wrong reference counting for network namespace.\n\nCIFS uses kernel sockets, which do not hold refcnt of the netns that\nthe socket belongs to.  That means CIFS must ensure the socket is\nalways freed before its netns; otherwise, use-after-free happens.\n\nThe repro steps are roughly:\n\n  1. mount CIFS in a non-root netns\n  2. drop packets from the netns\n  3. destroy the netns\n  4. unmount CIFS\n\nWe can reproduce the issue quickly with the script [1] below and see\nthe splat [2] if CONFIG_NET_NS_REFCNT_TRACKER is enabled.\n\nWhen the socket is TCP, it is hard to guarantee the netns lifetime\nwithout holding refcnt due to async timers.\n\nLet's hold netns refcnt for each socket as done for SMC in commit\n9744d2bf1976 (\"smc: Fix use-after-free in tcp_write_timer_handler().\").\n\nNote that we need to move put_net() from cifs_put_tcp_session() to\nclean_demultiplex_info(); otherwise, __sock_create() still could touch a\nfreed netns while cifsd tries to reconnect from cifs_demultiplex_thread().\n\nAlso, maybe_get_net() cannot be put just before __sock_create() because\nthe code is not under RCU and there is a small chance that the same\naddress happened to be reallocated to another netns.\n\n[0]:\nCIFS: VFS: \\\\XXXXXXXXXXX has not responded in 15 seconds. Reconnecting...\nCIFS: Serverclose failed 4 times, giving up\nUnable to handle kernel paging request at virtual address 14de99e461f84a07\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\n[14de99e461f84a07] address between user and kernel address ranges\nInternal error: Oops: 0000000096000004 [#1] SMP\nModules linked in: cls_bpf sch_ingress nls_utf8 cifs cifs_arc4 cifs_md4 dns_resolver tcp_diag inet_diag veth xt_state xt_connmark nf_conntrack_netlink xt_nat xt_statistic xt_MASQUERADE xt_mark xt_addrtype ipt_REJECT nf_reject_ipv4 nft_chain_nat nf_nat xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment nft_compat nf_tables nfnetlink overlay nls_ascii nls_cp437 sunrpc vfat fat aes_ce_blk aes_ce_cipher ghash_ce sm4_ce_cipher sm4 sm3_ce sm3 sha3_ce sha512_ce sha512_arm64 sha1_ce ena button sch_fq_codel loop fuse configfs dmi_sysfs sha2_ce sha256_arm64 dm_mirror dm_region_hash dm_log dm_mod dax efivarfs\nCPU: 5 PID: 2690970 Comm: cifsd Not tainted 6.1.103-109.184.amzn2023.aarch64 #1\nHardware name: Amazon EC2 r7g.4xlarge/, BIOS 1.0 11/1/2018\npstate: 00400005 (nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : fib_rules_lookup+0x44/0x238\nlr : __fib_lookup+0x64/0xbc\nsp : ffff8000265db790\nx29: ffff8000265db790 x28: 0000000000000000 x27: 000000000000bd01\nx26: 0000000000000000 x25: ffff000b4baf8000 x24: ffff00047b5e4580\nx23: ffff8000265db7e0 x22: 0000000000000000 x21: ffff00047b5e4500\nx20: ffff0010e3f694f8 x19: 14de99e461f849f7 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000000 x12: 3f92800abd010002\nx11: 0000000000000001 x10: ffff0010e3f69420 x9 : ffff800008a6f294\nx8 : 0000000000000000 x7 : 0000000000000006 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : ffff001924354280 x3 : ffff8000265db7e0\nx2 : 0000000000000000 x1 : ffff0010e3f694f8 x0 : ffff00047b5e4500\nCall trace:\n fib_rules_lookup+0x44/0x238\n __fib_lookup+0x64/0xbc\n ip_route_output_key_hash_rcu+0x2c4/0x398\n ip_route_output_key_hash+0x60/0x8c\n tcp_v4_connect+0x290/0x488\n __inet_stream_connect+0x108/0x3d0\n inet_stream_connect+0x50/0x78\n kernel_connect+0x6c/0xac\n generic_ip_conne\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: Fix uninitialized value issue in from_kuid and from_kgid\n\nocfs2_setattr() uses attr-\u003eia_mode, attr-\u003eia_uid and attr-\u003eia_gid in\na trace point even though ATTR_MODE, ATTR_UID and ATTR_GID aren't set.\n\nInitialize all fields of newattrs to avoid uninitialized variables, by\nchecking if ATTR_MODE, ATTR_UID, ATTR_GID are initialized, otherwise 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53103",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhv_sock: Initializing vsk-\u003etrans to NULL to prevent a dangling pointer\n\nWhen hvs is released, there is a possibility that vsk-\u003etrans may not\nbe initialized to NULL, which could lead to a dangling pointer.\nThis issue is resolved by initializing vsk-\u003etrans to NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: uvcvideo: Skip parsing frames of type UVC_VS_UNDEFINED in uvc_parse_format\n\nThis can lead to out of bounds writes since frames of this type were not\ntaken into account when calculating the size of the frames buffer in\nuvc_parse_streaming.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53112",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: uncache inode which has failed entering the group\n\nSyzbot has reported the following BUG:\n\nkernel BUG at fs/ocfs2/uptodate.c:509!\n...\nCall Trace:\n \u003cTASK\u003e\n ? __die_body+0x5f/0xb0\n ? die+0x9e/0xc0\n ? do_trap+0x15a/0x3a0\n ? ocfs2_set_new_buffer_uptodate+0x145/0x160\n ? do_error_trap+0x1dc/0x2c0\n ? ocfs2_set_new_buffer_uptodate+0x145/0x160\n ? __pfx_do_error_trap+0x10/0x10\n ? handle_invalid_op+0x34/0x40\n ? ocfs2_set_new_buffer_uptodate+0x145/0x160\n ? exc_invalid_op+0x38/0x50\n ? asm_exc_invalid_op+0x1a/0x20\n ? ocfs2_set_new_buffer_uptodate+0x2e/0x160\n ? ocfs2_set_new_buffer_uptodate+0x144/0x160\n ? ocfs2_set_new_buffer_uptodate+0x145/0x160\n ocfs2_group_add+0x39f/0x15a0\n ? __pfx_ocfs2_group_add+0x10/0x10\n ? __pfx_lock_acquire+0x10/0x10\n ? mnt_get_write_access+0x68/0x2b0\n ? __pfx_lock_release+0x10/0x10\n ? rcu_read_lock_any_held+0xb7/0x160\n ? __pfx_rcu_read_lock_any_held+0x10/0x10\n ? smack_log+0x123/0x540\n ? mnt_get_write_access+0x68/0x2b0\n ? mnt_get_write_access+0x68/0x2b0\n ? mnt_get_write_access+0x226/0x2b0\n ocfs2_ioctl+0x65e/0x7d0\n ? __pfx_ocfs2_ioctl+0x10/0x10\n ? smack_file_ioctl+0x29e/0x3a0\n ? __pfx_smack_file_ioctl+0x10/0x10\n ? lockdep_hardirqs_on_prepare+0x43d/0x780\n ? __pfx_lockdep_hardirqs_on_prepare+0x10/0x10\n ? __pfx_ocfs2_ioctl+0x10/0x10\n __se_sys_ioctl+0xfb/0x170\n do_syscall_64+0xf3/0x230\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n...\n \u003c/TASK\u003e\n\nWhen 'ioctl(OCFS2_IOC_GROUP_ADD, ...)' has failed for the particular\ninode in 'ocfs2_verify_group_and_input()', corresponding buffer head\nremains cached and subsequent call to the same 'ioctl()' for the same\ninode issues the BUG() in 'ocfs2_set_new_buffer_uptodate()' (trying\nto cache the same buffer head of that inode). Fix this by uncaching\nthe buffer head with 'ocfs2_remove_from_cache()' on error path in\n'ocfs2_group_add()'.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53113",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: fix NULL pointer dereference in alloc_pages_bulk_noprof\n\nWe triggered a NULL pointer dereference for ac.preferred_zoneref-\u003ezone in\nalloc_pages_bulk_noprof() when the task is migrated between cpusets.\n\nWhen cpuset is enabled, in prepare_alloc_pages(), ac-\u003enodemask may be\n\u0026current-\u003emems_allowed.  when first_zones_zonelist() is called to find\npreferred_zoneref, the ac-\u003enodemask may be modified concurrently if the\ntask is migrated between different cpusets.  Assuming we have 2 NUMA Node,\nwhen traversing Node1 in ac-\u003ezonelist, the nodemask is 2, and when\ntraversing Node2 in ac-\u003ezonelist, the nodemask is 1.  As a result, the\nac-\u003epreferred_zoneref points to NULL zone.\n\nIn alloc_pages_bulk_noprof(), for_each_zone_zonelist_nodemask() finds a\nallowable zone and calls zonelist_node_idx(ac.preferred_zoneref), leading\nto NULL pointer dereference.\n\n__alloc_pages_noprof() fixes this issue by checking NULL pointer in commit\nea57485af8f4 (\"mm, page_alloc: fix check for NULL preferred_zone\") and\ncommit df76cee6bbeb (\"mm, page_alloc: remove redundant checks from alloc\nfastpath\").\n\nTo fix it, check NULL pointer for preferred_zoneref-\u003ezone.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53114",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/CPU/AMD: Clear virtualized VMLOAD/VMSAVE on Zen4 client\n\nA number of Zen4 client SoCs advertise the ability to use virtualized\nVMLOAD/VMSAVE, but using these instructions is reported to be a cause\nof a random host reboot.\n\nThese instructions aren't intended to be advertised on Zen4 client\nso clear the capability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53119",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio/vsock: Fix accept_queue memory leak\n\nAs the final stages of socket destruction may be delayed, it is possible\nthat virtio_transport_recv_listen() will be called after the accept_queue\nhas been flushed, but before the SOCK_DONE flag has been set. As a result,\nsockets enqueued after the flush would remain unremoved, leading to a\nmemory leak.\n\nvsock_release\n  __vsock_release\n    lock\n    virtio_transport_release\n      virtio_transport_close\n        schedule_delayed_work(close_work)\n    sk_shutdown = SHUTDOWN_MASK\n(!) flush accept_queue\n    release\n                                        virtio_transport_recv_pkt\n                                          vsock_find_bound_socket\n                                          lock\n                                          if flag(SOCK_DONE) return\n                                          virtio_transport_recv_listen\n                                            child = vsock_create_connected\n                                      (!)   vsock_enqueue_accept(child)\n                                          release\nclose_work\n  lock\n  virtio_transport_do_close\n    set_flag(SOCK_DONE)\n    virtio_transport_remove_sock\n      vsock_remove_sock\n        vsock_remove_bound\n  release\n\nIntroduce a sk_shutdown check to disallow vsock_enqueue_accept() during\nsocket destruction.\n\nunreferenced object 0xffff888109e3f800 (size 2040):\n  comm \"kworker/5:2\", pid 371, jiffies 4294940105\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    28 00 0b 40 00 00 00 00 00 00 00 00 00 00 00 00  (..@............\n  backtrace (crc 9e5f4e84):\n    [\u003cffffffff81418ff1\u003e] kmem_cache_alloc_noprof+0x2c1/0x360\n    [\u003cffffffff81d27aa0\u003e] sk_prot_alloc+0x30/0x120\n    [\u003cffffffff81d2b54c\u003e] sk_alloc+0x2c/0x4b0\n    [\u003cffffffff81fe049a\u003e] __vsock_create.constprop.0+0x2a/0x310\n    [\u003cffffffff81fe6d6c\u003e] virtio_transport_recv_pkt+0x4dc/0x9a0\n    [\u003cffffffff81fe745d\u003e] vsock_loopback_work+0xfd/0x140\n    [\u003cffffffff810fc6ac\u003e] process_one_work+0x20c/0x570\n    [\u003cffffffff810fce3f\u003e] worker_thread+0x1bf/0x3a0\n    [\u003cffffffff811070dd\u003e] kthread+0xdd/0x110\n    [\u003cffffffff81044fdd\u003e] ret_from_fork+0x2d/0x50\n    [\u003cffffffff8100785a\u003e] ret_from_fork_asm+0x1a/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53120",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: CT: Fix null-ptr-deref in add rule err flow\n\nIn error flow of mlx5_tc_ct_entry_add_rule(), in case ct_rule_add()\ncallback returns error, zone_rule-\u003eattr is used uninitiated. Fix it to\nuse attr which has the needed pointer value.\n\nKernel log:\n BUG: kernel NULL pointer dereference, address: 0000000000000110\n RIP: 0010:mlx5_tc_ct_entry_add_rule+0x2b1/0x2f0 [mlx5_core]\n…\n Call Trace:\n  \u003cTASK\u003e\n  ? __die+0x20/0x70\n  ? page_fault_oops+0x150/0x3e0\n  ? exc_page_fault+0x74/0x140\n  ? asm_exc_page_fault+0x22/0x30\n  ? mlx5_tc_ct_entry_add_rule+0x2b1/0x2f0 [mlx5_core]\n  ? mlx5_tc_ct_entry_add_rule+0x1d5/0x2f0 [mlx5_core]\n  mlx5_tc_ct_block_flow_offload+0xc6a/0xf90 [mlx5_core]\n  ? nf_flow_offload_tuple+0xd8/0x190 [nf_flow_table]\n  nf_flow_offload_tuple+0xd8/0x190 [nf_flow_table]\n  flow_offload_work_handler+0x142/0x320 [nf_flow_table]\n  ? finish_task_switch.isra.0+0x15b/0x2b0\n  process_one_work+0x16c/0x320\n  worker_thread+0x28c/0x3a0\n  ? __pfx_worker_thread+0x10/0x10\n  kthread+0xb8/0xf0\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork+0x2d/0x50\n  ? __pfx_kthread+0x10/0x10\n  ret_from_fork_asm+0x1a/0x30\n  \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53121",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: fs, lock FTE when checking if active\n\nThe referenced commits introduced a two-step process for deleting FTEs:\n\n- Lock the FTE, delete it from hardware, set the hardware deletion function\n  to NULL and unlock the FTE.\n- Lock the parent flow group, delete the software copy of the FTE, and\n  remove it from the xarray.\n\nHowever, this approach encounters a race condition if a rule with the same\nmatch value is added simultaneously. In this scenario, fs_core may set the\nhardware deletion function to NULL prematurely, causing a panic during\nsubsequent rule deletions.\n\nTo prevent this, ensure the active flag of the FTE is checked under a lock,\nwhich will prevent the fs_core layer from attaching a new steering rule to\nan FTE that is in the process of deletion.\n\n[  438.967589] MOSHE: 2496 mlx5_del_flow_rules del_hw_func\n[  438.968205] ------------[ cut here ]------------\n[  438.968654] refcount_t: decrement hit 0; leaking memory.\n[  438.969249] WARNING: CPU: 0 PID: 8957 at lib/refcount.c:31 refcount_warn_saturate+0xfb/0x110\n[  438.970054] Modules linked in: act_mirred cls_flower act_gact sch_ingress openvswitch nsh mlx5_vdpa vringh vhost_iotlb vdpa mlx5_ib mlx5_core xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcgss oid_registry overlay rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm ib_uverbs ib_core zram zsmalloc fuse [last unloaded: cls_flower]\n[  438.973288] CPU: 0 UID: 0 PID: 8957 Comm: tc Not tainted 6.12.0-rc1+ #8\n[  438.973888] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n[  438.974874] RIP: 0010:refcount_warn_saturate+0xfb/0x110\n[  438.975363] Code: 40 66 3b 82 c6 05 16 e9 4d 01 01 e8 1f 7c a0 ff 0f 0b c3 cc cc cc cc 48 c7 c7 10 66 3b 82 c6 05 fd e8 4d 01 01 e8 05 7c a0 ff \u003c0f\u003e 0b c3 cc cc cc cc 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 90\n[  438.976947] RSP: 0018:ffff888124a53610 EFLAGS: 00010286\n[  438.977446] RAX: 0000000000000000 RBX: ffff888119d56de0 RCX: 0000000000000000\n[  438.978090] RDX: ffff88852c828700 RSI: ffff88852c81b3c0 RDI: ffff88852c81b3c0\n[  438.978721] RBP: ffff888120fa0e88 R08: 0000000000000000 R09: ffff888124a534b0\n[  438.979353] R10: 0000000000000001 R11: 0000000000000001 R12: ffff888119d56de0\n[  438.979979] R13: ffff888120fa0ec0 R14: ffff888120fa0ee8 R15: ffff888119d56de0\n[  438.980607] FS:  00007fe6dcc0f800(0000) GS:ffff88852c800000(0000) knlGS:0000000000000000\n[  438.983984] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  438.984544] CR2: 00000000004275e0 CR3: 0000000186982001 CR4: 0000000000372eb0\n[  438.985205] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  438.985842] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  438.986507] Call Trace:\n[  438.986799]  \u003cTASK\u003e\n[  438.987070]  ? __warn+0x7d/0x110\n[  438.987426]  ? refcount_warn_saturate+0xfb/0x110\n[  438.987877]  ? report_bug+0x17d/0x190\n[  438.988261]  ? prb_read_valid+0x17/0x20\n[  438.988659]  ? handle_bug+0x53/0x90\n[  438.989054]  ? exc_invalid_op+0x14/0x70\n[  438.989458]  ? asm_exc_invalid_op+0x16/0x20\n[  438.989883]  ? refcount_warn_saturate+0xfb/0x110\n[  438.990348]  mlx5_del_flow_rules+0x2f7/0x340 [mlx5_core]\n[  438.990932]  __mlx5_eswitch_del_rule+0x49/0x170 [mlx5_core]\n[  438.991519]  ? mlx5_lag_is_sriov+0x3c/0x50 [mlx5_core]\n[  438.992054]  ? xas_load+0x9/0xb0\n[  438.992407]  mlx5e_tc_rule_unoffload+0x45/0xe0 [mlx5_core]\n[  438.993037]  mlx5e_tc_del_fdb_flow+0x2a6/0x2e0 [mlx5_core]\n[  438.993623]  mlx5e_flow_put+0x29/0x60 [mlx5_core]\n[  438.994161]  mlx5e_delete_flower+0x261/0x390 [mlx5_core]\n[  438.994728]  tc_setup_cb_destroy+0xb9/0x190\n[  438.995150]  fl_hw_destroy_filter+0x94/0xc0 [cls_flower]\n[  438.995650]  fl_change+0x11a4/0x13c0 [cls_flower]\n[  438.996105]  tc_new_tfilter+0x347/0xbc0\n[  438.996503]  ? __\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53122",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: cope racing subflow creation in mptcp_rcv_space_adjust\n\nAdditional active subflows - i.e. created by the in kernel path\nmanager - are included into the subflow list before starting the\n3whs.\n\nA racing recvmsg() spooling data received on an already established\nsubflow would unconditionally call tcp_cleanup_rbuf() on all the\ncurrent subflows, potentially hitting a divide by zero error on\nthe newly created ones.\n\nExplicitly check that the subflow is in a suitable state before\ninvoking tcp_cleanup_rbuf().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53125",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: sync_linked_regs() must preserve subreg_def\n\nRange propagation must not affect subreg_def marks, otherwise the\nfollowing example is rewritten by verifier incorrectly when\nBPF_F_TEST_RND_HI32 flag is set:\n\n  0: call bpf_ktime_get_ns                   call bpf_ktime_get_ns\n  1: r0 \u0026= 0x7fffffff       after verifier   r0 \u0026= 0x7fffffff\n  2: w1 = w0                rewrites         w1 = w0\n  3: if w0 \u003c 10 goto +0     --------------\u003e  r11 = 0x2f5674a6     (r)\n  4: r1 \u003e\u003e= 32                               r11 \u003c\u003c= 32           (r)\n  5: r0 = r1                                 r1 |= r11            (r)\n  6: exit;                                   if w0 \u003c 0xa goto pc+0\n                                             r1 \u003e\u003e= 32\n                                             r0 = r1\n                                             exit\n\n(or zero extension of w1 at (2) is missing for architectures that\n require zero extension for upper register half).\n\nThe following happens w/o this patch:\n- r0 is marked as not a subreg at (0);\n- w1 is marked as subreg at (2);\n- w1 subreg_def is overridden at (3) by copy_register_state();\n- w1 is read at (5) but mark_insn_zext() does not mark (2)\n  for zero extension, because w1 subreg_def is not set;\n- because of BPF_F_TEST_RND_HI32 flag verifier inserts random\n  value for hi32 bits of (2) (marked (r));\n- this random value is read at (5).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53127",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"mmc: dw_mmc: Fix IDMAC operation with pages bigger than 4K\"\n\nThe commit 8396c793ffdf (\"mmc: dw_mmc: Fix IDMAC operation with pages\nbigger than 4K\") increased the max_req_size, even for 4K pages, causing\nvarious issues:\n- Panic booting the kernel/rootfs from an SD card on Rockchip RK3566\n- Panic booting the kernel/rootfs from an SD card on StarFive JH7100\n- \"swiotlb buffer is full\" and data corruption on StarFive JH7110\n\nAt this stage no fix have been found, so it's probably better to just\nrevert the change.\n\nThis reverts commit 8396c793ffdf28bb8aee7cfe0891080f8cab7890.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53129",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/rockchip: vop: Fix a dereferenced before check warning\n\nThe 'state' can't be NULL, we should check crtc_state.\n\nFix warning:\ndrivers/gpu/drm/rockchip/rockchip_drm_vop.c:1096\nvop_plane_atomic_async_check() warn: variable dereferenced before check\n'state' (see line 1077)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53130",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix null-ptr-deref in block_dirty_buffer tracepoint\n\nWhen using the \"block:block_dirty_buffer\" tracepoint, mark_buffer_dirty()\nmay cause a NULL pointer dereference, or a general protection fault when\nKASAN is enabled.\n\nThis happens because, since the tracepoint was added in\nmark_buffer_dirty(), it references the dev_t member bh-\u003eb_bdev-\u003ebd_dev\nregardless of whether the buffer head has a pointer to a block_device\nstructure.\n\nIn the current implementation, nilfs_grab_buffer(), which grabs a buffer\nto read (or create) a block of metadata, including b-tree node blocks,\ndoes not set the block device, but instead does so only if the buffer is\nnot in the \"uptodate\" state for each of its caller block reading\nfunctions.  However, if the uptodate flag is set on a folio/page, and the\nbuffer heads are detached from it by try_to_free_buffers(), and new buffer\nheads are then attached by create_empty_buffers(), the uptodate flag may\nbe restored to each buffer without the block device being set to\nbh-\u003eb_bdev, and mark_buffer_dirty() may be called later in that state,\nresulting in the bug mentioned above.\n\nFix this issue by making nilfs_grab_buffer() always set the block device\nof the super block structure to the buffer head, regardless of the state\nof the buffer's uptodate flag.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53131",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix null-ptr-deref in block_touch_buffer tracepoint\n\nPatch series \"nilfs2: fix null-ptr-deref bugs on block tracepoints\".\n\nThis series fixes null pointer dereference bugs that occur when using\nnilfs2 and two block-related tracepoints.\n\n\nThis patch (of 2):\n\nIt has been reported that when using \"block:block_touch_buffer\"\ntracepoint, touch_buffer() called from __nilfs_get_folio_block() causes a\nNULL pointer dereference, or a general protection fault when KASAN is\nenabled.\n\nThis happens because since the tracepoint was added in touch_buffer(), it\nreferences the dev_t member bh-\u003eb_bdev-\u003ebd_dev regardless of whether the\nbuffer head has a pointer to a block_device structure.  In the current\nimplementation, the block_device structure is set after the function\nreturns to the caller.\n\nHere, touch_buffer() is used to mark the folio/page that owns the buffer\nhead as accessed, but the common search helper for folio/page used by the\ncaller function was optimized to mark the folio/page as accessed when it\nwas reimplemented a long time ago, eliminating the need to call\ntouch_buffer() here in the first place.\n\nSo this solves the issue by eliminating the touch_buffer() call itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53135",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Bury Intel PT virtualization (guest/host mode) behind CONFIG_BROKEN\n\nHide KVM's pt_mode module param behind CONFIG_BROKEN, i.e. disable support\nfor virtualizing Intel PT via guest/host mode unless BROKEN=y.  There are\nmyriad bugs in the implementation, some of which are fatal to the guest,\nand others which put the stability and health of the host at risk.\n\nFor guest fatalities, the most glaring issue is that KVM fails to ensure\ntracing is disabled, and *stays* disabled prior to VM-Enter, which is\nnecessary as hardware disallows loading (the guest's) RTIT_CTL if tracing\nis enabled (enforced via a VMX consistency check).  Per the SDM:\n\n  If the logical processor is operating with Intel PT enabled (if\n  IA32_RTIT_CTL.TraceEn = 1) at the time of VM entry, the \"load\n  IA32_RTIT_CTL\" VM-entry control must be 0.\n\nOn the host side, KVM doesn't validate the guest CPUID configuration\nprovided by userspace, and even worse, uses the guest configuration to\ndecide what MSRs to save/load at VM-Enter and VM-Exit.  E.g. configuring\nguest CPUID to enumerate more address ranges than are supported in hardware\nwill result in KVM trying to passthrough, save, and load non-existent MSRs,\nwhich generates a variety of WARNs, ToPA ERRORs in the host, a potential\ndeadlock, etc.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: kTLS, Fix incorrect page refcounting\n\nThe kTLS tx handling code is using a mix of get_page() and\npage_ref_inc() APIs to increment the page reference. But on the release\npath (mlx5e_ktls_tx_handle_resync_dump_comp()), only put_page() is used.\n\nThis is an issue when using pages from large folios: the get_page()\nreferences are stored on the folio page while the page_ref_inc()\nreferences are stored directly in the given page. On release the folio\npage will be dereferenced too many times.\n\nThis was found while doing kTLS testing with sendfile() + ZC when the\nserved file was read from NFS on a kernel with NFS large folios support\n(commit 49b29a573da8 (\"nfs: add support for large folios\")).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: add missing range check in bitmap_ip_uadt\n\nWhen tb[IPSET_ATTR_IP_TO] is not present but tb[IPSET_ATTR_CIDR] exists,\nthe values of ip and ip_to are slightly swapped. Therefore, the range check\nfor ip should be done later, but this part is missing and it seems that the\nvulnerability occurs.\n\nSo we should add missing range checks and remove unnecessary range checks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninitramfs: avoid filename buffer overrun\n\nThe initramfs filename field is defined in\nDocumentation/driver-api/early-userspace/buffer-format.rst as:\n\n 37 cpio_file := ALGN(4) + cpio_header + filename + \"\\0\" + ALGN(4) + data\n...\n 55 ============= ================== =========================\n 56 Field name    Field size         Meaning\n 57 ============= ================== =========================\n...\n 70 c_namesize    8 bytes            Length of filename, including final \\0\n\nWhen extracting an initramfs cpio archive, the kernel's do_name() path\nhandler assumes a zero-terminated path at @collected, passing it\ndirectly to filp_open() / init_mkdir() / init_mknod().\n\nIf a specially crafted cpio entry carries a non-zero-terminated filename\nand is followed by uninitialized memory, then a file may be created with\ntrailing characters that represent the uninitialized memory. The ability\nto create an initramfs entry would imply already having full control of\nthe system, so the buffer overrun shouldn't be considered a security\nvulnerability.\n\nAppend the output of the following bash script to an existing initramfs\nand observe any created /initramfs_test_fname_overrunAA* path. E.g.\n  ./reproducer.sh | gzip \u003e\u003e /myinitramfs\n\nIt's easiest to observe non-zero uninitialized memory when the output is\ngzipped, as it'll overflow the heap allocated @out_buf in __gunzip(),\nrather than the initrd_start+initrd_size block.\n\n---- reproducer.sh ----\nnilchar=\"A\"\t# change to \"\\0\" to properly zero terminate / pad\nmagic=\"070701\"\nino=1\nmode=$(( 0100777 ))\nuid=0\ngid=0\nnlink=1\nmtime=1\nfilesize=0\ndevmajor=0\ndevminor=1\nrdevmajor=0\nrdevminor=0\ncsum=0\nfname=\"initramfs_test_fname_overrun\"\nnamelen=$(( ${#fname} + 1 ))\t# plus one to account for terminator\n\nprintf \"%s%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%s\" \\\n\t$magic $ino $mode $uid $gid $nlink $mtime $filesize \\\n\t$devmajor $devminor $rdevmajor $rdevminor $namelen $csum $fname\n\ntermpadlen=$(( 1 + ((4 - ((110 + $namelen) \u0026 3)) % 4) ))\nprintf \"%.s${nilchar}\" $(seq 1 $termpadlen)\n---- reproducer.sh ----\n\nSymlink filename fields handled in do_symlink() won't overrun past the\ndata segment, due to the explicit zero-termination of the symlink\ntarget.\n\nFix filename buffer overrun by aborting the initramfs FSM if any cpio\nentry doesn't carry a zero-terminator at the expected (name_len - 1)\noffset.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53146",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Prevent a potential integer overflow\n\nIf the tag length is \u003e= U32_MAX - 3 then the \"length + 4\" addition\ncan result in an integer overflow. Address this by splitting the\ndecoding into several steps so that decode_cb_compound4res() does\nnot have to perform arithmetic on the unsafe length value.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53148",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: Flush partial mappings in error case\n\nIf some remap_pfn_range() calls succeeded before one failed, we still have\nbuffer pages mapped into the userspace page tables when we drop the buffer\nreference with comedi_buf_map_put(bm). The userspace mappings are only\ncleaned up later in the mmap error path.\n\nFix it by explicitly flushing all mappings in our VMA on the error path.\n\nSee commit 79a61cc3fc04 (\"mm: avoid leaving partial pfn mappings around in\nerror case\").",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53150",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix out of bounds reads when finding clock sources\n\nThe current USB-audio driver code doesn't check bLength of each\ndescriptor at traversing for clock descriptors.  That is, when a\ndevice provides a bogus descriptor with a shorter bLength, the driver\nmight hit out-of-bounds reads.\n\nFor addressing it, this patch adds sanity checks to the validator\nfunctions for the clock descriptor traversal.  When the descriptor\nlength is shorter than expected, it's skipped in the loop.\n\nFor the clock source and clock multiplier descriptors, we can just\ncheck bLength against the sizeof() of each descriptor type.\nOTOH, the clock selector descriptor of UAC2 and UAC3 has an array\nof bNrInPins elements and two more fields at its tail, hence those\nhave to be checked in addition to the sizeof() check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53151",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsvcrdma: Address an integer overflow\n\nDan Carpenter reports:\n\u003e Commit 78147ca8b4a9 (\"svcrdma: Add a \"parsed chunk list\" data\n\u003e structure\") from Jun 22, 2020 (linux-next), leads to the following\n\u003e Smatch static checker warning:\n\u003e\n\u003e\tnet/sunrpc/xprtrdma/svc_rdma_recvfrom.c:498 xdr_check_write_chunk()\n\u003e\twarn: potential user controlled sizeof overflow 'segcount * 4 * 4'\n\u003e\n\u003e net/sunrpc/xprtrdma/svc_rdma_recvfrom.c\n\u003e     488 static bool xdr_check_write_chunk(struct svc_rdma_recv_ctxt *rctxt)\n\u003e     489 {\n\u003e     490         u32 segcount;\n\u003e     491         __be32 *p;\n\u003e     492\n\u003e     493         if (xdr_stream_decode_u32(\u0026rctxt-\u003erc_stream, \u0026segcount))\n\u003e                                                               ^^^^^^^^\n\u003e\n\u003e     494                 return false;\n\u003e     495\n\u003e     496         /* A bogus segcount causes this buffer overflow check to fail. */\n\u003e     497         p = xdr_inline_decode(\u0026rctxt-\u003erc_stream,\n\u003e --\u003e 498                               segcount * rpcrdma_segment_maxsz * sizeof(*p));\n\u003e\n\u003e\n\u003e segcount is an untrusted u32.  On 32bit systems anything \u003e= SIZE_MAX / 16 will\n\u003e have an integer overflow and some those values will be accepted by\n\u003e xdr_inline_decode().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53156",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath9k: add range check for conn_rsp_epid in htc_connect_service()\n\nI found the following bug in my fuzzer:\n\n  UBSAN: array-index-out-of-bounds in drivers/net/wireless/ath/ath9k/htc_hst.c:26:51\n  index 255 is out of range for type 'htc_endpoint [22]'\n  CPU: 0 UID: 0 PID: 8 Comm: kworker/0:0 Not tainted 6.11.0-rc6-dirty #14\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n  Workqueue: events request_firmware_work_func\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x180/0x1b0\n   __ubsan_handle_out_of_bounds+0xd4/0x130\n   htc_issue_send.constprop.0+0x20c/0x230\n   ? _raw_spin_unlock_irqrestore+0x3c/0x70\n   ath9k_wmi_cmd+0x41d/0x610\n   ? mark_held_locks+0x9f/0xe0\n   ...\n\nSince this bug has been confirmed to be caused by insufficient verification\nof conn_rsp_epid, I think it would be appropriate to add a range check for\nconn_rsp_epid to htc_connect_service() to prevent the bug from occurring.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53157",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scpi: Check the DVFS OPP count returned by the firmware\n\nFix a kernel crash with the below call trace when the SCPI firmware\nreturns OPP count of zero.\n\ndvfs_info.opp_count may be zero on some platforms during the reboot\ntest, and the kernel will crash after dereferencing the pointer to\nkcalloc(info-\u003ecount, sizeof(*opp), GFP_KERNEL).\n\n  |  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000028\n  |  Mem abort info:\n  |    ESR = 0x96000004\n  |    Exception class = DABT (current EL), IL = 32 bits\n  |    SET = 0, FnV = 0\n  |    EA = 0, S1PTW = 0\n  |  Data abort info:\n  |    ISV = 0, ISS = 0x00000004\n  |    CM = 0, WnR = 0\n  |  user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000faefa08c\n  |  [0000000000000028] pgd=0000000000000000\n  |  Internal error: Oops: 96000004 [#1] SMP\n  |  scpi-hwmon: probe of PHYT000D:00 failed with error -110\n  |  Process systemd-udevd (pid: 1701, stack limit = 0x00000000aaede86c)\n  |  CPU: 2 PID: 1701 Comm: systemd-udevd Not tainted 4.19.90+ #1\n  |  Hardware name: PHYTIUM LTD Phytium FT2000/4/Phytium FT2000/4, BIOS\n  |  pstate: 60000005 (nZCv daif -PAN -UAO)\n  |  pc : scpi_dvfs_recalc_rate+0x40/0x58 [clk_scpi]\n  |  lr : clk_register+0x438/0x720\n  |  Call trace:\n  |   scpi_dvfs_recalc_rate+0x40/0x58 [clk_scpi]\n  |   devm_clk_hw_register+0x50/0xa0\n  |   scpi_clk_ops_init.isra.2+0xa0/0x138 [clk_scpi]\n  |   scpi_clocks_probe+0x528/0x70c [clk_scpi]\n  |   platform_drv_probe+0x58/0xa8\n  |   really_probe+0x260/0x3d0\n  |   driver_probe_device+0x12c/0x148\n  |   device_driver_attach+0x74/0x98\n  |   __driver_attach+0xb4/0xe8\n  |   bus_for_each_dev+0x88/0xe0\n  |   driver_attach+0x30/0x40\n  |   bus_add_driver+0x178/0x2b0\n  |   driver_register+0x64/0x118\n  |   __platform_driver_register+0x54/0x60\n  |   scpi_clocks_driver_init+0x24/0x1000 [clk_scpi]\n  |   do_one_initcall+0x54/0x220\n  |   do_init_module+0x54/0x1c8\n  |   load_module+0x14a4/0x1668\n  |   __se_sys_finit_module+0xf8/0x110\n  |   __arm64_sys_finit_module+0x24/0x30\n  |   el0_svc_common+0x78/0x170\n  |   el0_svc_handler+0x38/0x78\n  |   el0_svc+0x8/0x340\n  |  Code: 937d7c00 a94153f3 a8c27bfd f9400421 (b8606820)\n  |  ---[ end trace 06feb22469d89fa8 ]---\n  |  Kernel panic - not syncing: Fatal exception\n  |  SMP: stopping secondary CPUs\n  |  Kernel Offset: disabled\n  |  CPU features: 0x10,a0002008\n  |  Memory Limit: none",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53158",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: geni-se: fix array underflow in geni_se_clk_tbl_get()\n\nThis loop is supposed to break if the frequency returned from\nclk_round_rate() is the same as on the previous iteration.  However,\nthat check doesn't make sense on the first iteration through the loop.\nIt leads to reading before the start of these-\u003eclk_perf_tbl[] array.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53161",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nEDAC/bluefield: Fix potential integer overflow\n\nThe 64-bit argument for the \"get DIMM info\" SMC call consists of mem_ctrl_idx\nleft-shifted 16 bits and OR-ed with DIMM index.  With mem_ctrl_idx defined as\n32-bits wide the left-shift operation truncates the upper 16 bits of\ninformation during the calculation of the SMC argument.\n\nThe mem_ctrl_idx stack variable must be defined as 64-bits wide to prevent any\npotential integer overflow, i.e. loss of data from upper 16 bits.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat/qat_4xxx - fix off by one in uof_get_name()\n\nThe fw_objs[] array has \"num_objs\" elements so the \u003e needs to be \u003e= to\nprevent an out of bounds read.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53166",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: fix bfqq uaf in bfq_limit_depth()\n\nSet new allocated bfqq to bic or remove freed bfqq from bic are both\nprotected by bfqd-\u003elock, however bfq_limit_depth() is deferencing bfqq\nfrom bic without the lock, this can lead to UAF if the io_context is\nshared by multiple tasks.\n\nFor example, test bfq with io_uring can trigger following UAF in v6.6:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in bfqq_group+0x15/0x50\n\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x47/0x80\n print_address_description.constprop.0+0x66/0x300\n print_report+0x3e/0x70\n kasan_report+0xb4/0xf0\n bfqq_group+0x15/0x50\n bfqq_request_over_limit+0x130/0x9a0\n bfq_limit_depth+0x1b5/0x480\n __blk_mq_alloc_requests+0x2b5/0xa00\n blk_mq_get_new_requests+0x11d/0x1d0\n blk_mq_submit_bio+0x286/0xb00\n submit_bio_noacct_nocheck+0x331/0x400\n __block_write_full_folio+0x3d0/0x640\n writepage_cb+0x3b/0xc0\n write_cache_pages+0x254/0x6c0\n write_cache_pages+0x254/0x6c0\n do_writepages+0x192/0x310\n filemap_fdatawrite_wbc+0x95/0xc0\n __filemap_fdatawrite_range+0x99/0xd0\n filemap_write_and_wait_range.part.0+0x4d/0xa0\n blkdev_read_iter+0xef/0x1e0\n io_read+0x1b6/0x8a0\n io_issue_sqe+0x87/0x300\n io_wq_submit_work+0xeb/0x390\n io_worker_handle_work+0x24d/0x550\n io_wq_worker+0x27f/0x6c0\n ret_from_fork_asm+0x1b/0x30\n \u003c/TASK\u003e\n\nAllocated by task 808602:\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x21/0x30\n __kasan_slab_alloc+0x83/0x90\n kmem_cache_alloc_node+0x1b1/0x6d0\n bfq_get_queue+0x138/0xfa0\n bfq_get_bfqq_handle_split+0xe3/0x2c0\n bfq_init_rq+0x196/0xbb0\n bfq_insert_request.isra.0+0xb5/0x480\n bfq_insert_requests+0x156/0x180\n blk_mq_insert_request+0x15d/0x440\n blk_mq_submit_bio+0x8a4/0xb00\n submit_bio_noacct_nocheck+0x331/0x400\n __blkdev_direct_IO_async+0x2dd/0x330\n blkdev_write_iter+0x39a/0x450\n io_write+0x22a/0x840\n io_issue_sqe+0x87/0x300\n io_wq_submit_work+0xeb/0x390\n io_worker_handle_work+0x24d/0x550\n io_wq_worker+0x27f/0x6c0\n ret_from_fork+0x2d/0x50\n ret_from_fork_asm+0x1b/0x30\n\nFreed by task 808589:\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x21/0x30\n kasan_save_free_info+0x27/0x40\n __kasan_slab_free+0x126/0x1b0\n kmem_cache_free+0x10c/0x750\n bfq_put_queue+0x2dd/0x770\n __bfq_insert_request.isra.0+0x155/0x7a0\n bfq_insert_request.isra.0+0x122/0x480\n bfq_insert_requests+0x156/0x180\n blk_mq_dispatch_plug_list+0x528/0x7e0\n blk_mq_flush_plug_list.part.0+0xe5/0x590\n __blk_flush_plug+0x3b/0x90\n blk_finish_plug+0x40/0x60\n do_writepages+0x19d/0x310\n filemap_fdatawrite_wbc+0x95/0xc0\n __filemap_fdatawrite_range+0x99/0xd0\n filemap_write_and_wait_range.part.0+0x4d/0xa0\n blkdev_read_iter+0xef/0x1e0\n io_read+0x1b6/0x8a0\n io_issue_sqe+0x87/0x300\n io_wq_submit_work+0xeb/0x390\n io_worker_handle_work+0x24d/0x550\n io_wq_worker+0x27f/0x6c0\n ret_from_fork+0x2d/0x50\n ret_from_fork_asm+0x1b/0x30\n\nFix the problem by protecting bic_to_bfqq() with bfqd-\u003elock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53169",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fabrics: fix kernel crash while shutting down controller\n\nThe nvme keep-alive operation, which executes at a periodic interval,\ncould potentially sneak in while shutting down a fabric controller.\nThis may lead to a race between the fabric controller admin queue\ndestroy code path (invoked while shutting down controller) and hw/hctx\nqueue dispatcher called from the nvme keep-alive async request queuing\noperation. This race could lead to the kernel crash shown below:\n\nCall Trace:\n    autoremove_wake_function+0x0/0xbc (unreliable)\n    __blk_mq_sched_dispatch_requests+0x114/0x24c\n    blk_mq_sched_dispatch_requests+0x44/0x84\n    blk_mq_run_hw_queue+0x140/0x220\n    nvme_keep_alive_work+0xc8/0x19c [nvme_core]\n    process_one_work+0x200/0x4e0\n    worker_thread+0x340/0x504\n    kthread+0x138/0x140\n    start_kernel_thread+0x14/0x18\n\nWhile shutting down fabric controller, if nvme keep-alive request sneaks\nin then it would be flushed off. The nvme_keep_alive_end_io function is\nthen invoked to handle the end of the keep-alive operation which\ndecrements the admin-\u003eq_usage_counter and assuming this is the last/only\nrequest in the admin queue then the admin-\u003eq_usage_counter becomes zero.\nIf that happens then blk-mq destroy queue operation (blk_mq_destroy_\nqueue()) which could be potentially running simultaneously on another\ncpu (as this is the controller shutdown code path) would forward\nprogress and deletes the admin queue. So, now from this point onward\nwe are not supposed to access the admin queue resources. However the\nissue here's that the nvme keep-alive thread running hw/hctx queue\ndispatch operation hasn't yet finished its work and so it could still\npotentially access the admin queue resource while the admin queue had\nbeen already deleted and that causes the above crash.\n\nThe above kernel crash is regression caused due to changes implemented\nin commit a54a93d0e359 (\"nvme: move stopping keep-alive into\nnvme_uninit_ctrl()\"). Ideally we should stop keep-alive before destroyin\ng the admin queue and freeing the admin tagset so that it wouldn't sneak\nin during the shutdown operation. However we removed the keep alive stop\noperation from the beginning of the controller shutdown code path in commit\na54a93d0e359 (\"nvme: move stopping keep-alive into nvme_uninit_ctrl()\")\nand added it under nvme_uninit_ctrl() which executes very late in the\nshutdown code path after the admin queue is destroyed and its tagset is\nremoved. So this change created the possibility of keep-alive sneaking in\nand interfering with the shutdown operation and causing observed kernel\ncrash.\n\nTo fix the observed crash, we decided to move nvme_stop_keep_alive() from\nnvme_uninit_ctrl() to nvme_remove_admin_tag_set(). This change would ensure\nthat we don't forward progress and delete the admin queue until the keep-\nalive operation is finished (if it's in-flight) or cancelled and that would\nhelp contain the race condition explained above and hence avoid the crash.\n\nMoving nvme_stop_keep_alive() to nvme_remove_admin_tag_set() instead of\nadding nvme_stop_keep_alive() to the beginning of the controller shutdown\ncode path in nvme_stop_ctrl(), as was the case earlier before commit\na54a93d0e359 (\"nvme: move stopping keep-alive into nvme_uninit_ctrl()\"),\nwould help save one callsite of nvme_stop_keep_alive().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53171",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: authentication: Fix use-after-free in ubifs_tnc_end_commit\n\nAfter an insertion in TNC, the tree might split and cause a node to\nchange its `znode-\u003eparent`. A further deletion of other nodes in the\ntree (which also could free the nodes), the aforementioned node's\n`znode-\u003ecparent` could still point to a freed node. This\n`znode-\u003ecparent` may not be updated when getting nodes to commit in\n`ubifs_tnc_start_commit()`. This could then trigger a use-after-free\nwhen accessing the `znode-\u003ecparent` in `write_index()` in\n`ubifs_tnc_end_commit()`.\n\nThis can be triggered by running\n\n  rm -f /etc/test-file.bin\n  dd if=/dev/urandom of=/etc/test-file.bin bs=1M count=60 conv=fsync\n\nin a loop, and with `CONFIG_UBIFS_FS_AUTHENTICATION`. KASAN then\nreports:\n\n  BUG: KASAN: use-after-free in ubifs_tnc_end_commit+0xa5c/0x1950\n  Write of size 32 at addr ffffff800a3af86c by task ubifs_bgt0_20/153\n\n  Call trace:\n   dump_backtrace+0x0/0x340\n   show_stack+0x18/0x24\n   dump_stack_lvl+0x9c/0xbc\n   print_address_description.constprop.0+0x74/0x2b0\n   kasan_report+0x1d8/0x1f0\n   kasan_check_range+0xf8/0x1a0\n   memcpy+0x84/0xf4\n   ubifs_tnc_end_commit+0xa5c/0x1950\n   do_commit+0x4e0/0x1340\n   ubifs_bg_thread+0x234/0x2e0\n   kthread+0x36c/0x410\n   ret_from_fork+0x10/0x20\n\n  Allocated by task 401:\n   kasan_save_stack+0x38/0x70\n   __kasan_kmalloc+0x8c/0xd0\n   __kmalloc+0x34c/0x5bc\n   tnc_insert+0x140/0x16a4\n   ubifs_tnc_add+0x370/0x52c\n   ubifs_jnl_write_data+0x5d8/0x870\n   do_writepage+0x36c/0x510\n   ubifs_writepage+0x190/0x4dc\n   __writepage+0x58/0x154\n   write_cache_pages+0x394/0x830\n   do_writepages+0x1f0/0x5b0\n   filemap_fdatawrite_wbc+0x170/0x25c\n   file_write_and_wait_range+0x140/0x190\n   ubifs_fsync+0xe8/0x290\n   vfs_fsync_range+0xc0/0x1e4\n   do_fsync+0x40/0x90\n   __arm64_sys_fsync+0x34/0x50\n   invoke_syscall.constprop.0+0xa8/0x260\n   do_el0_svc+0xc8/0x1f0\n   el0_svc+0x34/0x70\n   el0t_64_sync_handler+0x108/0x114\n   el0t_64_sync+0x1a4/0x1a8\n\n  Freed by task 403:\n   kasan_save_stack+0x38/0x70\n   kasan_set_track+0x28/0x40\n   kasan_set_free_info+0x28/0x4c\n   __kasan_slab_free+0xd4/0x13c\n   kfree+0xc4/0x3a0\n   tnc_delete+0x3f4/0xe40\n   ubifs_tnc_remove_range+0x368/0x73c\n   ubifs_tnc_remove_ino+0x29c/0x2e0\n   ubifs_jnl_delete_inode+0x150/0x260\n   ubifs_evict_inode+0x1d4/0x2e4\n   evict+0x1c8/0x450\n   iput+0x2a0/0x3c4\n   do_unlinkat+0x2cc/0x490\n   __arm64_sys_unlinkat+0x90/0x100\n   invoke_syscall.constprop.0+0xa8/0x260\n   do_el0_svc+0xc8/0x1f0\n   el0_svc+0x34/0x70\n   el0t_64_sync_handler+0x108/0x114\n   el0t_64_sync+0x1a4/0x1a8\n\nThe offending `memcpy()` in `ubifs_copy_hash()` has a use-after-free\nwhen a node becomes root in TNC but still has a `cparent` to an already\nfreed node. More specifically, consider the following TNC:\n\n         zroot\n         /\n        /\n      zp1\n      /\n     /\n    zn\n\nInserting a new node `zn_new` with a key smaller then `zn` will trigger\na split in `tnc_insert()` if `zp1` is full:\n\n         zroot\n         /   \\\n        /     \\\n      zp1     zp2\n      /         \\\n     /           \\\n  zn_new          zn\n\n`zn-\u003eparent` has now been moved to `zp2`, *but* `zn-\u003ecparent` still\npoints to `zp1`.\n\nNow, consider a removal of all the nodes _except_ `zn`. Just when\n`tnc_delete()` is about to delete `zroot` and `zp2`:\n\n         zroot\n             \\\n              \\\n              zp2\n                \\\n                 \\\n                 zn\n\n`zroot` and `zp2` get freed and the tree collapses:\n\n           zn\n\n`zn` now becomes the new `zroot`.\n\n`get_znodes_to_commit()` will now only find `zn`, the new `zroot`, and\n`write_index()` will check its `znode-\u003ecparent` that wrongly points to\nthe already freed `zp1`. `ubifs_copy_hash()` thus gets wrongly called\nwith `znode-\u003ecparent-\u003ezbranch[znode-\u003eiip].hash` that triggers the\nuse-after-free!\n\nFix this by explicitly setting `znode-\u003ecparent` to `NULL` in\n`get_znodes_to_commit()` for the root node. The search for the dirty\nnodes\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53173",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4.0: Fix a use-after-free problem in the asynchronous open()\n\nYang Erkun reports that when two threads are opening files at the same\ntime, and are forced to abort before a reply is seen, then the call to\nnfs_release_seqid() in nfs4_opendata_free() can result in a\nuse-after-free of the pointer to the defunct rpc task of the other\nthread.\nThe fix is to ensure that if the RPC call is aborted before the call to\nnfs_wait_on_sequence() is complete, then we must call nfs_release_seqid()\nin nfs4_open_release() before the rpc_task is freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53174",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: make sure cache entry active before cache_show\n\nThe function `c_show` was called with protection from RCU. This only\nensures that `cp` will not be freed. Therefore, the reference count for\n`cp` can drop to zero, which will trigger a refcount use-after-free\nwarning when `cache_get` is called. To resolve this issue, use\n`cache_get_rcu` to ensure that `cp` remains active.\n\n------------[ cut here ]------------\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 7 PID: 822 at lib/refcount.c:25\nrefcount_warn_saturate+0xb1/0x120\nCPU: 7 UID: 0 PID: 822 Comm: cat Not tainted 6.12.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.1-2.fc37 04/01/2014\nRIP: 0010:refcount_warn_saturate+0xb1/0x120\n\nCall Trace:\n \u003cTASK\u003e\n c_show+0x2fc/0x380 [sunrpc]\n seq_read_iter+0x589/0x770\n seq_read+0x1e5/0x270\n proc_reg_read+0xe1/0x140\n vfs_read+0x125/0x530\n ksys_read+0xc1/0x160\n do_syscall_64+0x5f/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53177",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: prevent use-after-free due to open_cached_dir error paths\n\nIf open_cached_dir() encounters an error parsing the lease from the\nserver, the error handling may race with receiving a lease break,\nresulting in open_cached_dir() freeing the cfid while the queued work is\npending.\n\nUpdate open_cached_dir() to drop refs rather than directly freeing the\ncfid.\n\nHave cached_dir_lease_break(), cfids_laundromat_worker(), and\ninvalidate_all_cached_dirs() clear has_lease immediately while still\nholding cfids-\u003ecfid_list_lock, and then use this to also simplify the\nreference counting in cfids_laundromat_worker() and\ninvalidate_all_cached_dirs().\n\nFixes this KASAN splat (which manually injects an error and lease break\nin open_cached_dir()):\n\n==================================================================\nBUG: KASAN: slab-use-after-free in smb2_cached_lease_break+0x27/0xb0\nRead of size 8 at addr ffff88811cc24c10 by task kworker/3:1/65\n\nCPU: 3 UID: 0 PID: 65 Comm: kworker/3:1 Not tainted 6.12.0-rc6-g255cf264e6e5-dirty #87\nHardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020\nWorkqueue: cifsiod smb2_cached_lease_break\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x77/0xb0\n print_report+0xce/0x660\n kasan_report+0xd3/0x110\n smb2_cached_lease_break+0x27/0xb0\n process_one_work+0x50a/0xc50\n worker_thread+0x2ba/0x530\n kthread+0x17c/0x1c0\n ret_from_fork+0x34/0x60\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nAllocated by task 2464:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n __kasan_kmalloc+0xaa/0xb0\n open_cached_dir+0xa7d/0x1fb0\n smb2_query_path_info+0x43c/0x6e0\n cifs_get_fattr+0x346/0xf10\n cifs_get_inode_info+0x157/0x210\n cifs_revalidate_dentry_attr+0x2d1/0x460\n cifs_getattr+0x173/0x470\n vfs_statx_path+0x10f/0x160\n vfs_statx+0xe9/0x150\n vfs_fstatat+0x5e/0xc0\n __do_sys_newfstatat+0x91/0xf0\n do_syscall_64+0x95/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFreed by task 2464:\n kasan_save_stack+0x33/0x60\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n __kasan_slab_free+0x51/0x70\n kfree+0x174/0x520\n open_cached_dir+0x97f/0x1fb0\n smb2_query_path_info+0x43c/0x6e0\n cifs_get_fattr+0x346/0xf10\n cifs_get_inode_info+0x157/0x210\n cifs_revalidate_dentry_attr+0x2d1/0x460\n cifs_getattr+0x173/0x470\n vfs_statx_path+0x10f/0x160\n vfs_statx+0xe9/0x150\n vfs_fstatat+0x5e/0xc0\n __do_sys_newfstatat+0x91/0xf0\n do_syscall_64+0x95/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nLast potentially related work creation:\n kasan_save_stack+0x33/0x60\n __kasan_record_aux_stack+0xad/0xc0\n insert_work+0x32/0x100\n __queue_work+0x5c9/0x870\n queue_work_on+0x82/0x90\n open_cached_dir+0x1369/0x1fb0\n smb2_query_path_info+0x43c/0x6e0\n cifs_get_fattr+0x346/0xf10\n cifs_get_inode_info+0x157/0x210\n cifs_revalidate_dentry_attr+0x2d1/0x460\n cifs_getattr+0x173/0x470\n vfs_statx_path+0x10f/0x160\n vfs_statx+0xe9/0x150\n vfs_fstatat+0x5e/0xc0\n __do_sys_newfstatat+0x91/0xf0\n do_syscall_64+0x95/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nThe buggy address belongs to the object at ffff88811cc24c00\n which belongs to the cache kmalloc-1k of size 1024\nThe buggy address is located 16 bytes inside of\n freed 1024-byte region [ffff88811cc24c00, ffff88811cc25000)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53179",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix use-after-free of signing key\n\nCustomers have reported use-after-free in @ses-\u003eauth_key.response with\nSMB2.1 + sign mounts which occurs due to following race:\n\ntask A                         task B\ncifs_mount()\n dfs_mount_share()\n  get_session()\n   cifs_mount_get_session()    cifs_send_recv()\n    cifs_get_smb_ses()          compound_send_recv()\n     cifs_setup_session()        smb2_setup_request()\n      kfree_sensitive()           smb2_calc_signature()\n                                   crypto_shash_setkey() *UAF*\n\nFix this by ensuring that we have a valid @ses-\u003eauth_key.response by\nchecking whether @ses-\u003eses_status is SES_GOOD or SES_EXITING with\n@ses-\u003eses_lock held.  After commit 24a9799aa8ef (\"smb: client: fix UAF\nin smb2_reconnect_server()\"), we made sure to call -\u003elogoff() only\nwhen @ses was known to be good (e.g. valid -\u003eauth_key.response), so\nit's safe to access signing key when @ses-\u003eses_status == SES_EXITING.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53208",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Fix slab-use-after-free Read in set_powered_sync\n\nThis fixes the following crash:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in set_powered_sync+0x3a/0xc0 net/bluetooth/mgmt.c:1353\nRead of size 8 at addr ffff888029b4dd18 by task kworker/u9:0/54\n\nCPU: 1 UID: 0 PID: 54 Comm: kworker/u9:0 Not tainted 6.11.0-rc6-syzkaller-01155-gf723224742fc #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024\nWorkqueue: hci0 hci_cmd_sync_work\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:93 [inline]\n dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119\n print_address_description mm/kasan/report.c:377 [inline]\n print_report+0x169/0x550 mm/kasan/report.c:488\nq kasan_report+0x143/0x180 mm/kasan/report.c:601\n set_powered_sync+0x3a/0xc0 net/bluetooth/mgmt.c:1353\n hci_cmd_sync_work+0x22b/0x400 net/bluetooth/hci_sync.c:328\n process_one_work kernel/workqueue.c:3231 [inline]\n process_scheduled_works+0xa2c/0x1830 kernel/workqueue.c:3312\n worker_thread+0x86d/0xd10 kernel/workqueue.c:3389\n kthread+0x2f0/0x390 kernel/kthread.c:389\n ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n \u003c/TASK\u003e\n\nAllocated by task 5247:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n poison_kmalloc_redzone mm/kasan/common.c:370 [inline]\n __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387\n kasan_kmalloc include/linux/kasan.h:211 [inline]\n __kmalloc_cache_noprof+0x19c/0x2c0 mm/slub.c:4193\n kmalloc_noprof include/linux/slab.h:681 [inline]\n kzalloc_noprof include/linux/slab.h:807 [inline]\n mgmt_pending_new+0x65/0x250 net/bluetooth/mgmt_util.c:269\n mgmt_pending_add+0x36/0x120 net/bluetooth/mgmt_util.c:296\n set_powered+0x3cd/0x5e0 net/bluetooth/mgmt.c:1394\n hci_mgmt_cmd+0xc47/0x11d0 net/bluetooth/hci_sock.c:1712\n hci_sock_sendmsg+0x7b8/0x11c0 net/bluetooth/hci_sock.c:1832\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg+0x221/0x270 net/socket.c:745\n sock_write_iter+0x2dd/0x400 net/socket.c:1160\n new_sync_write fs/read_write.c:497 [inline]\n vfs_write+0xa72/0xc90 fs/read_write.c:590\n ksys_write+0x1a0/0x2c0 fs/read_write.c:643\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 5246:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579\n poison_slab_object+0xe0/0x150 mm/kasan/common.c:240\n __kasan_slab_free+0x37/0x60 mm/kasan/common.c:256\n kasan_slab_free include/linux/kasan.h:184 [inline]\n slab_free_hook mm/slub.c:2256 [inline]\n slab_free mm/slub.c:4477 [inline]\n kfree+0x149/0x360 mm/slub.c:4598\n settings_rsp+0x2bc/0x390 net/bluetooth/mgmt.c:1443\n mgmt_pending_foreach+0xd1/0x130 net/bluetooth/mgmt_util.c:259\n __mgmt_power_off+0x112/0x420 net/bluetooth/mgmt.c:9455\n hci_dev_close_sync+0x665/0x11a0 net/bluetooth/hci_sync.c:5191\n hci_dev_do_close net/bluetooth/hci_core.c:483 [inline]\n hci_dev_close+0x112/0x210 net/bluetooth/hci_core.c:508\n sock_do_ioctl+0x158/0x460 net/socket.c:1222\n sock_ioctl+0x629/0x8e0 net/socket.c:1341\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:907 [inline]\n __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:893\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83gv\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53209",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix receive ring space parameters when XDP is active\n\nThe MTU setting at the time an XDP multi-buffer is attached\ndetermines whether the aggregation ring will be used and the\nrx_skb_func handler.  This is done in bnxt_set_rx_skb_mode().\n\nIf the MTU is later changed, the aggregation ring setting may need\nto be changed and it may become out-of-sync with the settings\ninitially done in bnxt_set_rx_skb_mode().  This may result in\nrandom memory corruption and crashes as the HW may DMA data larger\nthan the allocated buffer size, such as:\n\nBUG: kernel NULL pointer dereference, address: 00000000000003c0\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 17 PID: 0 Comm: swapper/17 Kdump: loaded Tainted: G S         OE      6.1.0-226bf9805506 #1\nHardware name: Wiwynn Delta Lake PVT BZA.02601.0150/Delta Lake-Class1, BIOS F0E_3A12 08/26/2021\nRIP: 0010:bnxt_rx_pkt+0xe97/0x1ae0 [bnxt_en]\nCode: 8b 95 70 ff ff ff 4c 8b 9d 48 ff ff ff 66 41 89 87 b4 00 00 00 e9 0b f7 ff ff 0f b7 43 0a 49 8b 95 a8 04 00 00 25 ff 0f 00 00 \u003c0f\u003e b7 14 42 48 c1 e2 06 49 03 95 a0 04 00 00 0f b6 42 33f\nRSP: 0018:ffffa19f40cc0d18 EFLAGS: 00010202\nRAX: 00000000000001e0 RBX: ffff8e2c805c6100 RCX: 00000000000007ff\nRDX: 0000000000000000 RSI: ffff8e2c271ab990 RDI: ffff8e2c84f12380\nRBP: ffffa19f40cc0e48 R08: 000000000001000d R09: 974ea2fcddfa4cbf\nR10: 0000000000000000 R11: ffffa19f40cc0ff8 R12: ffff8e2c94b58980\nR13: ffff8e2c952d6600 R14: 0000000000000016 R15: ffff8e2c271ab990\nFS:  0000000000000000(0000) GS:ffff8e3b3f840000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000000003c0 CR3: 0000000e8580a004 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cIRQ\u003e\n __bnxt_poll_work+0x1c2/0x3e0 [bnxt_en]\n\nTo address the issue, we now call bnxt_set_rx_skb_mode() within\nbnxt_change_mtu() to properly set the AGG rings configuration and\nupdate rx_skb_func based on the new MTU value.\nAdditionally, BNXT_FLAG_NO_AGG_RINGS is cleared at the beginning of\nbnxt_set_rx_skb_mode() to make sure it gets set or cleared based on\nthe current MTU.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53210",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/iucv: MSG_PEEK causes memory leak in iucv_sock_destruct()\n\nPassing MSG_PEEK flag to skb_recv_datagram() increments skb refcount\n(skb-\u003eusers) and iucv_sock_recvmsg() does not decrement skb refcount\nat exit.\nThis results in skb memory leak in skb_queue_purge() and WARN_ON in\niucv_sock_destruct() during socket close. To fix this decrease\nskb refcount by one if MSG_PEEK is set in order to prevent memory\nleak and WARN_ON.\n\nWARNING: CPU: 2 PID: 6292 at net/iucv/af_iucv.c:286 iucv_sock_destruct+0x144/0x1a0 [af_iucv]\nCPU: 2 PID: 6292 Comm: afiucv_test_msg Kdump: loaded Tainted: G        W          6.10.0-rc7 #1\nHardware name: IBM 3931 A01 704 (z/VM 7.3.0)\nCall Trace:\n        [\u003c001587c682c4aa98\u003e] iucv_sock_destruct+0x148/0x1a0 [af_iucv]\n        [\u003c001587c682c4a9d0\u003e] iucv_sock_destruct+0x80/0x1a0 [af_iucv]\n        [\u003c001587c704117a32\u003e] __sk_destruct+0x52/0x550\n        [\u003c001587c704104a54\u003e] __sock_release+0xa4/0x230\n        [\u003c001587c704104c0c\u003e] sock_close+0x2c/0x40\n        [\u003c001587c702c5f5a8\u003e] __fput+0x2e8/0x970\n        [\u003c001587c7024148c4\u003e] task_work_run+0x1c4/0x2c0\n        [\u003c001587c7023b0716\u003e] do_exit+0x996/0x1050\n        [\u003c001587c7023b13aa\u003e] do_group_exit+0x13a/0x360\n        [\u003c001587c7023b1626\u003e] __s390x_sys_exit_group+0x56/0x60\n        [\u003c001587c7022bccca\u003e] do_syscall+0x27a/0x380\n        [\u003c001587c7049a6a0c\u003e] __do_syscall+0x9c/0x160\n        [\u003c001587c7049ce8a8\u003e] system_call+0x70/0x98\n        Last Breaking-Event-Address:\n        [\u003c001587c682c4a9d4\u003e] iucv_sock_destruct+0x84/0x1a0 [af_iucv]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53213",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: lan78xx: Fix double free issue with interrupt buffer allocation\n\nIn lan78xx_probe(), the buffer `buf` was being freed twice: once\nimplicitly through `usb_free_urb(dev-\u003eurb_intr)` with the\n`URB_FREE_BUFFER` flag and again explicitly by `kfree(buf)`. This caused\na double free issue.\n\nTo resolve this, reordered `kmalloc()` and `usb_alloc_urb()` calls to\nsimplify the initialization sequence and removed the redundant\n`kfree(buf)`.  Now, `buf` is allocated after `usb_alloc_urb()`, ensuring\nit is correctly managed by  `usb_fill_int_urb()` and freed by\n`usb_free_urb()` as intended.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53214",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/pci: Properly hide first-in-list PCIe extended capability\n\nThere are cases where a PCIe extended capability should be hidden from\nthe user. For example, an unknown capability (i.e., capability with ID\ngreater than PCI_EXT_CAP_ID_MAX) or a capability that is intentionally\nchosen to be hidden from the user.\n\nHiding a capability is done by virtualizing and modifying the 'Next\nCapability Offset' field of the previous capability so it points to the\ncapability after the one that should be hidden.\n\nThe special case where the first capability in the list should be hidden\nis handled differently because there is no previous capability that can\nbe modified. In this case, the capability ID and version are zeroed\nwhile leaving the next pointer intact. This hides the capability and\nleaves an anchor for the rest of the capability list.\n\nHowever, today, hiding the first capability in the list is not done\nproperly if the capability is unknown, as struct\nvfio_pci_core_device-\u003epci_config_map is set to the capability ID during\ninitialization but the capability ID is not properly checked later when\nused in vfio_config_do_rw(). This leads to the following warning [1] and\nto an out-of-bounds access to ecap_perms array.\n\nFix it by checking cap_id in vfio_config_do_rw(), and if it is greater\nthan PCI_EXT_CAP_ID_MAX, use an alternative struct perm_bits for direct\nread only access instead of the ecap_perms array.\n\nNote that this is safe since the above is the only case where cap_id can\nexceed PCI_EXT_CAP_ID_MAX (except for the special capabilities, which\nare already checked before).\n\n[1]\n\nWARNING: CPU: 118 PID: 5329 at drivers/vfio/pci/vfio_pci_config.c:1900 vfio_pci_config_rw+0x395/0x430 [vfio_pci_core]\nCPU: 118 UID: 0 PID: 5329 Comm: simx-qemu-syste Not tainted 6.12.0+ #1\n(snip)\nCall Trace:\n \u003cTASK\u003e\n ? show_regs+0x69/0x80\n ? __warn+0x8d/0x140\n ? vfio_pci_config_rw+0x395/0x430 [vfio_pci_core]\n ? report_bug+0x18f/0x1a0\n ? handle_bug+0x63/0xa0\n ? exc_invalid_op+0x19/0x70\n ? asm_exc_invalid_op+0x1b/0x20\n ? vfio_pci_config_rw+0x395/0x430 [vfio_pci_core]\n ? vfio_pci_config_rw+0x244/0x430 [vfio_pci_core]\n vfio_pci_rw+0x101/0x1b0 [vfio_pci_core]\n vfio_pci_core_read+0x1d/0x30 [vfio_pci_core]\n vfio_device_fops_read+0x27/0x40 [vfio]\n vfs_read+0xbd/0x340\n ? vfio_device_fops_unl_ioctl+0xbb/0x740 [vfio]\n ? __rseq_handle_notify_resume+0xa4/0x4b0\n __x64_sys_pread64+0x96/0xc0\n x64_sys_call+0x1c3d/0x20d0\n do_syscall_64+0x4d/0x120\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53215",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsvcrdma: fix miss destroy percpu_counter in svc_rdma_proc_init()\n\nThere's issue as follows:\nRPC: Registered rdma transport module.\nRPC: Registered rdma backchannel transport module.\nRPC: Unregistered rdma transport module.\nRPC: Unregistered rdma backchannel transport module.\nBUG: unable to handle page fault for address: fffffbfff80c609a\nPGD 123fee067 P4D 123fee067 PUD 123fea067 PMD 10c624067 PTE 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN NOPTI\nRIP: 0010:percpu_counter_destroy_many+0xf7/0x2a0\nCall Trace:\n \u003cTASK\u003e\n __die+0x1f/0x70\n page_fault_oops+0x2cd/0x860\n spurious_kernel_fault+0x36/0x450\n do_kern_addr_fault+0xca/0x100\n exc_page_fault+0x128/0x150\n asm_exc_page_fault+0x26/0x30\n percpu_counter_destroy_many+0xf7/0x2a0\n mmdrop+0x209/0x350\n finish_task_switch.isra.0+0x481/0x840\n schedule_tail+0xe/0xd0\n ret_from_fork+0x23/0x80\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nIf register_sysctl() return NULL, then svc_rdma_proc_cleanup() will not\ndestroy the percpu counters which init in svc_rdma_proc_init().\nIf CONFIG_HOTPLUG_CPU is enabled, residual nodes may be in the\n'percpu_counters' list. The above issue may occur once the module is\nremoved. If the CONFIG_HOTPLUG_CPU configuration is not enabled, memory\nleakage occurs.\nTo solve above issue just destroy all percpu counters when\nregister_sysctl() return NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53217",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Prevent NULL dereference in nfsd4_process_cb_update()\n\n@ses is initialized to NULL. If __nfsd4_find_backchannel() finds no\navailable backchannel session, setup_callback_client() will try to\ndereference @ses and segfault.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53224",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Move events notifier registration to be after device registration\n\nMove pkey change work initialization and cleanup from device resources\nstage to notifier stage, since this is the stage which handles this work\nevents.\n\nFix a race between the device deregistration and pkey change work by moving\nMLX5_IB_STAGE_DEVICE_NOTIFIER to be after MLX5_IB_STAGE_IB_REG in order to\nensure that the notifier is deregistered before the device during cleanup.\nWhich ensures there are no works that are being executed after the\ndevice has already unregistered which can cause the panic below.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 1 PID: 630071 Comm: kworker/1:2 Kdump: loaded Tainted: G W OE --------- --- 5.14.0-162.6.1.el9_1.x86_64 #1\nHardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS 090008 02/27/2023\nWorkqueue: events pkey_change_handler [mlx5_ib]\nRIP: 0010:setup_qp+0x38/0x1f0 [mlx5_ib]\nCode: ee 41 54 45 31 e4 55 89 f5 53 48 89 fb 48 83 ec 20 8b 77 08 65 48 8b 04 25 28 00 00 00 48 89 44 24 18 48 8b 07 48 8d 4c 24 16 \u003c4c\u003e 8b 38 49 8b 87 80 0b 00 00 4c 89 ff 48 8b 80 08 05 00 00 8b 40\nRSP: 0018:ffffbcc54068be20 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffff954054494128 RCX: ffffbcc54068be36\nRDX: ffff954004934000 RSI: 0000000000000001 RDI: ffff954054494128\nRBP: 0000000000000023 R08: ffff954001be2c20 R09: 0000000000000001\nR10: ffff954001be2c20 R11: ffff9540260133c0 R12: 0000000000000000\nR13: 0000000000000023 R14: 0000000000000000 R15: ffff9540ffcb0905\nFS: 0000000000000000(0000) GS:ffff9540ffc80000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000010625c001 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\nmlx5_ib_gsi_pkey_change+0x20/0x40 [mlx5_ib]\nprocess_one_work+0x1e8/0x3c0\nworker_thread+0x50/0x3b0\n? rescuer_thread+0x380/0x380\nkthread+0x149/0x170\n? set_kthread_struct+0x50/0x50\nret_from_fork+0x22/0x30\nModules linked in: rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_umad(OE) mlx5_ib(OE) mlx5_fwctl(OE) fwctl(OE) ib_uverbs(OE) mlx5_core(OE) mlxdevm(OE) ib_core(OE) mlx_compat(OE) psample mlxfw(OE) tls knem(OE) netconsole nfsv3 nfs_acl nfs lockd grace fscache netfs qrtr rfkill sunrpc intel_rapl_msr intel_rapl_common rapl hv_balloon hv_utils i2c_piix4 pcspkr joydev fuse ext4 mbcache jbd2 sr_mod sd_mod cdrom t10_pi sg ata_generic pci_hyperv pci_hyperv_intf hyperv_drm drm_shmem_helper drm_kms_helper hv_storvsc syscopyarea hv_netvsc sysfillrect sysimgblt hid_hyperv fb_sys_fops scsi_transport_fc hyperv_keyboard drm ata_piix crct10dif_pclmul crc32_pclmul crc32c_intel libata ghash_clmulni_intel hv_vmbus serio_raw [last unloaded: ib_core]\nCR2: 0000000000000000\n---[ end trace f6f8be4eae12f7bc ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53226",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Fix NULL pointer derefernce in hns_roce_map_mr_sg()\n\nib_map_mr_sg() allows ULPs to specify NULL as the sg_offset argument.\nThe driver needs to check whether it is a NULL pointer before\ndereferencing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53227",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bfa: Fix use-after-free in bfad_im_module_exit()\n\nBUG: KASAN: slab-use-after-free in __lock_acquire+0x2aca/0x3a20\nRead of size 8 at addr ffff8881082d80c8 by task modprobe/25303\n\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x95/0xe0\n print_report+0xcb/0x620\n kasan_report+0xbd/0xf0\n __lock_acquire+0x2aca/0x3a20\n lock_acquire+0x19b/0x520\n _raw_spin_lock+0x2b/0x40\n attribute_container_unregister+0x30/0x160\n fc_release_transport+0x19/0x90 [scsi_transport_fc]\n bfad_im_module_exit+0x23/0x60 [bfa]\n bfad_init+0xdb/0xff0 [bfa]\n do_one_initcall+0xdc/0x550\n do_init_module+0x22d/0x6b0\n load_module+0x4e96/0x5ff0\n init_module_from_file+0xcd/0x130\n idempotent_init_module+0x330/0x620\n __x64_sys_finit_module+0xb3/0x110\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n \u003c/TASK\u003e\n\nAllocated by task 25303:\n kasan_save_stack+0x24/0x50\n kasan_save_track+0x14/0x30\n __kasan_kmalloc+0x7f/0x90\n fc_attach_transport+0x4f/0x4740 [scsi_transport_fc]\n bfad_im_module_init+0x17/0x80 [bfa]\n bfad_init+0x23/0xff0 [bfa]\n do_one_initcall+0xdc/0x550\n do_init_module+0x22d/0x6b0\n load_module+0x4e96/0x5ff0\n init_module_from_file+0xcd/0x130\n idempotent_init_module+0x330/0x620\n __x64_sys_finit_module+0xb3/0x110\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nFreed by task 25303:\n kasan_save_stack+0x24/0x50\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n __kasan_slab_free+0x38/0x50\n kfree+0x212/0x480\n bfad_im_module_init+0x7e/0x80 [bfa]\n bfad_init+0x23/0xff0 [bfa]\n do_one_initcall+0xdc/0x550\n do_init_module+0x22d/0x6b0\n load_module+0x4e96/0x5ff0\n init_module_from_file+0xcd/0x130\n idempotent_init_module+0x330/0x620\n __x64_sys_finit_module+0xb3/0x110\n do_syscall_64+0xc1/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nAbove issue happens as follows:\n\nbfad_init\n  error = bfad_im_module_init()\n    fc_release_transport(bfad_im_scsi_transport_template);\n  if (error)\n    goto ext;\n\next:\n  bfad_im_module_exit();\n    fc_release_transport(bfad_im_scsi_transport_template);\n    --\u003e Trigger double release\n\nDon't call bfad_im_module_exit() if bfad_im_module_init() failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53229",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Fix the qp flush warnings in req\n\nWhen the qp is in error state, the status of WQEs in the queue should be\nset to error. Or else the following will appear.\n\n[  920.617269] WARNING: CPU: 1 PID: 21 at drivers/infiniband/sw/rxe/rxe_comp.c:756 rxe_completer+0x989/0xcc0 [rdma_rxe]\n[  920.617744] Modules linked in: rnbd_client(O) rtrs_client(O) rtrs_core(O) rdma_ucm rdma_cm iw_cm ib_cm crc32_generic rdma_rxe ip6_udp_tunnel udp_tunnel ib_uverbs ib_core loop brd null_blk ipv6\n[  920.618516] CPU: 1 PID: 21 Comm: ksoftirqd/1 Tainted: G           O       6.1.113-storage+ #65\n[  920.618986] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n[  920.619396] RIP: 0010:rxe_completer+0x989/0xcc0 [rdma_rxe]\n[  920.619658] Code: 0f b6 84 24 3a 02 00 00 41 89 84 24 44 04 00 00 e9 2a f7 ff ff 39 ca bb 03 00 00 00 b8 0e 00 00 00 48 0f 45 d8 e9 15 f7 ff ff \u003c0f\u003e 0b e9 cb f8 ff ff 41 bf f5 ff ff ff e9 08 f8 ff ff 49 8d bc 24\n[  920.620482] RSP: 0018:ffff97b7c00bbc38 EFLAGS: 00010246\n[  920.620817] RAX: 0000000000000000 RBX: 000000000000000c RCX: 0000000000000008\n[  920.621183] RDX: ffff960dc396ebc0 RSI: 0000000000005400 RDI: ffff960dc4e2fbac\n[  920.621548] RBP: 0000000000000000 R08: 0000000000000001 R09: ffffffffac406450\n[  920.621884] R10: ffffffffac4060c0 R11: 0000000000000001 R12: ffff960dc4e2f800\n[  920.622254] R13: ffff960dc4e2f928 R14: ffff97b7c029c580 R15: 0000000000000000\n[  920.622609] FS:  0000000000000000(0000) GS:ffff960ef7d00000(0000) knlGS:0000000000000000\n[  920.622979] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  920.623245] CR2: 00007fa056965e90 CR3: 00000001107f1000 CR4: 00000000000006e0\n[  920.623680] Call Trace:\n[  920.623815]  \u003cTASK\u003e\n[  920.623933]  ? __warn+0x79/0xc0\n[  920.624116]  ? rxe_completer+0x989/0xcc0 [rdma_rxe]\n[  920.624356]  ? report_bug+0xfb/0x150\n[  920.624594]  ? handle_bug+0x3c/0x60\n[  920.624796]  ? exc_invalid_op+0x14/0x70\n[  920.624976]  ? asm_exc_invalid_op+0x16/0x20\n[  920.625203]  ? rxe_completer+0x989/0xcc0 [rdma_rxe]\n[  920.625474]  ? rxe_completer+0x329/0xcc0 [rdma_rxe]\n[  920.625749]  rxe_do_task+0x80/0x110 [rdma_rxe]\n[  920.626037]  rxe_requester+0x625/0xde0 [rdma_rxe]\n[  920.626310]  ? rxe_cq_post+0xe2/0x180 [rdma_rxe]\n[  920.626583]  ? do_complete+0x18d/0x220 [rdma_rxe]\n[  920.626812]  ? rxe_completer+0x1a3/0xcc0 [rdma_rxe]\n[  920.627050]  rxe_do_task+0x80/0x110 [rdma_rxe]\n[  920.627285]  tasklet_action_common.constprop.0+0xa4/0x120\n[  920.627522]  handle_softirqs+0xc2/0x250\n[  920.627728]  ? sort_range+0x20/0x20\n[  920.627942]  run_ksoftirqd+0x1f/0x30\n[  920.628158]  smpboot_thread_fn+0xc7/0x1b0\n[  920.628334]  kthread+0xd6/0x100\n[  920.628504]  ? kthread_complete_and_exit+0x20/0x20\n[  920.628709]  ret_from_fork+0x1f/0x30\n[  920.628892]  \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53239",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: 6fire: Release resources at card release\n\nThe current 6fire code tries to release the resources right after the\ncall of usb6fire_chip_abort().  But at this moment, the card object\nmight be still in use (as we're calling snd_card_free_when_closed()).\n\nFor avoid potential UAFs, move the release of resources to the card's\nprivate_free instead of the manual call of usb6fire_chip_destroy() at\nthe USB disconnect callback.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53240",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/netfront: fix crash when removing device\n\nWhen removing a netfront device directly after a suspend/resume cycle\nit might happen that the queues have not been setup again, causing a\ncrash during the attempt to stop the queues another time.\n\nFix that by checking the queues are existing before trying to stop\nthem.\n\nThis is XSA-465 / CVE-2024-53240.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53241",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/xen: don't do PV iret hypercall through hypercall page\n\nInstead of jumping to the Xen hypercall page for doing the iret\nhypercall, directly code the required sequence in xen-asm.S.\n\nThis is done in preparation of no longer using hypercall page at all,\nas it has shown to cause problems with speculation mitigations.\n\nThis is part of XSA-466 / CVE-2024-53241.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53690",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: prevent use of deleted inode\n\nsyzbot reported a WARNING in nilfs_rmdir. [1]\n\nBecause the inode bitmap is corrupted, an inode with an inode number that\nshould exist as a \".nilfs\" file was reassigned by nilfs_mkdir for \"file0\",\ncausing an inode duplication during execution.  And this causes an\nunderflow of i_nlink in rmdir operations.\n\nThe inode is used twice by the same task to unmount and remove directories\n\".nilfs\" and \"file0\", it trigger warning in nilfs_rmdir.\n\nAvoid to this issue, check i_nlink in nilfs_iget(), if it is 0, it means\nthat this inode has been deleted, and iput is executed to reclaim it.\n\n[1]\nWARNING: CPU: 1 PID: 5824 at fs/inode.c:407 drop_nlink+0xc4/0x110 fs/inode.c:407\n...\nCall Trace:\n \u003cTASK\u003e\n nilfs_rmdir+0x1b0/0x250 fs/nilfs2/namei.c:342\n vfs_rmdir+0x3a3/0x510 fs/namei.c:4394\n do_rmdir+0x3b5/0x580 fs/namei.c:4453\n __do_sys_rmdir fs/namei.c:4472 [inline]\n __se_sys_rmdir fs/namei.c:4470 [inline]\n __x64_sys_rmdir+0x47/0x50 fs/namei.c:4470\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-55549",
      "Description": "xsltGetInheritedNsList in libxslt before 1.1.43 has a use-after-free issue related to exclusion of result prefixes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-55916",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: util: Avoid accessing a ringbuffer not initialized yet\n\nIf the KVP (or VSS) daemon starts before the VMBus channel's ringbuffer is\nfully initialized, we can hit the panic below:\n\nhv_utils: Registering HyperV Utility Driver\nhv_vmbus: registering driver hv_utils\n...\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nCPU: 44 UID: 0 PID: 2552 Comm: hv_kvp_daemon Tainted: G E 6.11.0-rc3+ #1\nRIP: 0010:hv_pkt_iter_first+0x12/0xd0\nCall Trace:\n...\n vmbus_recvpacket\n hv_kvp_onchannelcallback\n vmbus_on_event\n tasklet_action_common\n tasklet_action\n handle_softirqs\n irq_exit_rcu\n sysvec_hyperv_stimer0\n \u003c/IRQ\u003e\n \u003cTASK\u003e\n asm_sysvec_hyperv_stimer0\n...\n kvp_register_done\n hvt_op_read\n vfs_read\n ksys_read\n __x64_sys_read\n\nThis can happen because the KVP/VSS channel callback can be invoked\neven before the channel is fully opened:\n1) as soon as hv_kvp_init() -\u003e hvutil_transport_init() creates\n/dev/vmbus/hv_kvp, the kvp daemon can open the device file immediately and\nregister itself to the driver by writing a message KVP_OP_REGISTER1 to the\nfile (which is handled by kvp_on_msg() -\u003ekvp_handle_handshake()) and\nreading the file for the driver's response, which is handled by\nhvt_op_read(), which calls hvt-\u003eon_read(), i.e. kvp_register_done().\n\n2) the problem with kvp_register_done() is that it can cause the\nchannel callback to be called even before the channel is fully opened,\nand when the channel callback is starting to run, util_probe()-\u003e\nvmbus_open() may have not initialized the ringbuffer yet, so the\ncallback can hit the panic of NULL pointer dereference.\n\nTo reproduce the panic consistently, we can add a \"ssleep(10)\" for KVP in\n__vmbus_open(), just before the first hv_ringbuffer_init(), and then we\nunload and reload the driver hv_utils, and run the daemon manually within\nthe 10 seconds.\n\nFix the panic by reordering the steps in util_probe() so the char dev\nentry used by the KVP or VSS daemon is not created until after\nvmbus_open() has completed. This reordering prevents the race condition\nfrom happening.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56171",
      "Description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a use-after-free in xmlSchemaIDCFillNodeTables and xmlSchemaBubbleIDCNodeTables in xmlschemas.c. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56531",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: caiaq: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.\n\nThis patch also splits the code to the disconnect and the free phases;\nthe former is called immediately at the USB disconnect callback while\nthe latter is called from the card destructor.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56532",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: us122l: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.\n\nThe loop of us122l-\u003emmap_count check is dropped as well.  The check is\nuseless for the asynchronous operation with *_when_closed().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56533",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usx2y: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56539",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mwifiex: Fix memcpy() field-spanning write warning in mwifiex_config_scan()\n\nReplace one-element array with a flexible-array member in `struct\nmwifiex_ie_types_wildcard_ssid_params` to fix the following warning\non a MT8173 Chromebook (mt8173-elm-hana):\n\n[  356.775250] ------------[ cut here ]------------\n[  356.784543] memcpy: detected field-spanning write (size 6) of single field \"wildcard_ssid_tlv-\u003essid\" at drivers/net/wireless/marvell/mwifiex/scan.c:904 (size 1)\n[  356.813403] WARNING: CPU: 3 PID: 742 at drivers/net/wireless/marvell/mwifiex/scan.c:904 mwifiex_scan_networks+0x4fc/0xf28 [mwifiex]\n\nThe \"(size 6)\" above is exactly the length of the SSID of the network\nthis device was connected to. The source of the warning looks like:\n\n    ssid_len = user_scan_in-\u003essid_list[i].ssid_len;\n    [...]\n    memcpy(wildcard_ssid_tlv-\u003essid,\n           user_scan_in-\u003essid_list[i].ssid, ssid_len);\n\nThere is a #define WILDCARD_SSID_TLV_MAX_SIZE that uses sizeof() on this\nstruct, but it already didn't account for the size of the one-element\narray, so it doesn't need to be changed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56548",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhfsplus: don't query the device logical block size multiple times\n\nDevices block sizes may change. One of these cases is a loop device by\nusing ioctl LOOP_SET_BLOCK_SIZE.\n\nWhile this may cause other issues like IO being rejected, in the case of\nhfsplus, it will allocate a block by using that size and potentially write\nout-of-bounds when hfsplus_read_wrapper calls hfsplus_submit_bio and the\nlatter function reads a different io_size.\n\nUsing a new min_io_size initally set to sb_min_blocksize works for the\npurposes of the original fix, since it will be set to the max between\nHFSPLUS_SECTOR_SIZE and the first seen logical block size. We still use the\nmax between HFSPLUS_SECTOR_SIZE and min_io_size in case the latter is not\ninitialized.\n\nTested by mounting an hfsplus filesystem with loop block sizes 512, 1024\nand 4096.\n\nThe produced KASAN report before the fix looks like this:\n\n[  419.944641] ==================================================================\n[  419.945655] BUG: KASAN: slab-use-after-free in hfsplus_read_wrapper+0x659/0xa0a\n[  419.946703] Read of size 2 at addr ffff88800721fc00 by task repro/10678\n[  419.947612]\n[  419.947846] CPU: 0 UID: 0 PID: 10678 Comm: repro Not tainted 6.12.0-rc5-00008-gdf56e0f2f3ca #84\n[  419.949007] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014\n[  419.950035] Call Trace:\n[  419.950384]  \u003cTASK\u003e\n[  419.950676]  dump_stack_lvl+0x57/0x78\n[  419.951212]  ? hfsplus_read_wrapper+0x659/0xa0a\n[  419.951830]  print_report+0x14c/0x49e\n[  419.952361]  ? __virt_addr_valid+0x267/0x278\n[  419.952979]  ? kmem_cache_debug_flags+0xc/0x1d\n[  419.953561]  ? hfsplus_read_wrapper+0x659/0xa0a\n[  419.954231]  kasan_report+0x89/0xb0\n[  419.954748]  ? hfsplus_read_wrapper+0x659/0xa0a\n[  419.955367]  hfsplus_read_wrapper+0x659/0xa0a\n[  419.955948]  ? __pfx_hfsplus_read_wrapper+0x10/0x10\n[  419.956618]  ? do_raw_spin_unlock+0x59/0x1a9\n[  419.957214]  ? _raw_spin_unlock+0x1a/0x2e\n[  419.957772]  hfsplus_fill_super+0x348/0x1590\n[  419.958355]  ? hlock_class+0x4c/0x109\n[  419.958867]  ? __pfx_hfsplus_fill_super+0x10/0x10\n[  419.959499]  ? __pfx_string+0x10/0x10\n[  419.960006]  ? lock_acquire+0x3e2/0x454\n[  419.960532]  ? bdev_name.constprop.0+0xce/0x243\n[  419.961129]  ? __pfx_bdev_name.constprop.0+0x10/0x10\n[  419.961799]  ? pointer+0x3f0/0x62f\n[  419.962277]  ? __pfx_pointer+0x10/0x10\n[  419.962761]  ? vsnprintf+0x6c4/0xfba\n[  419.963178]  ? __pfx_vsnprintf+0x10/0x10\n[  419.963621]  ? setup_bdev_super+0x376/0x3b3\n[  419.964029]  ? snprintf+0x9d/0xd2\n[  419.964344]  ? __pfx_snprintf+0x10/0x10\n[  419.964675]  ? lock_acquired+0x45c/0x5e9\n[  419.965016]  ? set_blocksize+0x139/0x1c1\n[  419.965381]  ? sb_set_blocksize+0x6d/0xae\n[  419.965742]  ? __pfx_hfsplus_fill_super+0x10/0x10\n[  419.966179]  mount_bdev+0x12f/0x1bf\n[  419.966512]  ? __pfx_mount_bdev+0x10/0x10\n[  419.966886]  ? vfs_parse_fs_string+0xce/0x111\n[  419.967293]  ? __pfx_vfs_parse_fs_string+0x10/0x10\n[  419.967702]  ? __pfx_hfsplus_mount+0x10/0x10\n[  419.968073]  legacy_get_tree+0x104/0x178\n[  419.968414]  vfs_get_tree+0x86/0x296\n[  419.968751]  path_mount+0xba3/0xd0b\n[  419.969157]  ? __pfx_path_mount+0x10/0x10\n[  419.969594]  ? kmem_cache_free+0x1e2/0x260\n[  419.970311]  do_mount+0x99/0xe0\n[  419.970630]  ? __pfx_do_mount+0x10/0x10\n[  419.971008]  __do_sys_mount+0x199/0x1c9\n[  419.971397]  do_syscall_64+0xd0/0x135\n[  419.971761]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n[  419.972233] RIP: 0033:0x7c3cb812972e\n[  419.972564] Code: 48 8b 0d f5 46 0d 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 49 89 ca b8 a5 00 00 00 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d c2 46 0d 00 f7 d8 64 89 01 48\n[  419.974371] RSP: 002b:00007ffe30632548 EFLAGS: 00000286 ORIG_RAX: 00000000000000a5\n[  419.975048] RAX: ffffffffffffffda RBX: 00007ffe306328d8 RCX: 00007c3cb812972e\n[  419.975701] RDX: 0000000020000000 RSI: 0000000020000c80 RDI:\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56549",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: Fix NULL pointer dereference in object-\u003efile\n\nAt present, the object-\u003efile has the NULL pointer dereference problem in\nondemand-mode. The root cause is that the allocated fd and object-\u003efile\nlifetime are inconsistent, and the user-space invocation to anon_fd uses\nobject-\u003efile. Following is the process that triggers the issue:\n\n\t  [write fd]\t\t\t\t[umount]\ncachefiles_ondemand_fd_write_iter\n\t\t\t\t       fscache_cookie_state_machine\n\t\t\t\t\t cachefiles_withdraw_cookie\n  if (!file) return -ENOBUFS\n\t\t\t\t\t   cachefiles_clean_up_object\n\t\t\t\t\t     cachefiles_unmark_inode_in_use\n\t\t\t\t\t     fput(object-\u003efile)\n\t\t\t\t\t     object-\u003efile = NULL\n  // file NULL pointer dereference!\n  __cachefiles_write(..., file, ...)\n\nFix this issue by add an additional reference count to the object-\u003efile\nbefore write/llseek, and decrement after it finished.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56557",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: ad7923: Fix buffer overflow for tx_buf and ring_xfer\n\nThe AD7923 was updated to support devices with 8 channels, but the size\nof tx_buf and ring_xfer was not increased accordingly, leading to a\npotential buffer overflow in ad7923_update_scan_mode().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56558",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: make sure exp active before svc_export_show\n\nThe function `e_show` was called with protection from RCU. This only\nensures that `exp` will not be freed. Therefore, the reference count for\n`exp` can drop to zero, which will trigger a refcount use-after-free\nwarning when `exp_get` is called. To resolve this issue, use\n`cache_get_rcu` to ensure that `exp` remains active.\n\n------------[ cut here ]------------\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 3 PID: 819 at lib/refcount.c:25\nrefcount_warn_saturate+0xb1/0x120\nCPU: 3 UID: 0 PID: 819 Comm: cat Not tainted 6.12.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.1-2.fc37 04/01/2014\nRIP: 0010:refcount_warn_saturate+0xb1/0x120\n...\nCall Trace:\n \u003cTASK\u003e\n e_show+0x20b/0x230 [nfsd]\n seq_read_iter+0x589/0x770\n seq_read+0x1e5/0x270\n vfs_read+0x125/0x530\n ksys_read+0xc1/0x160\n do_syscall_64+0x5f/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56562",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: master: Fix miss free init_dyn_addr at i3c_master_put_i3c_addrs()\n\nif (dev-\u003eboardinfo \u0026\u0026 dev-\u003eboardinfo-\u003einit_dyn_addr)\n                                      ^^^ here check \"init_dyn_addr\"\n\ti3c_bus_set_addr_slot_status(\u0026master-\u003ebus, dev-\u003einfo.dyn_addr, ...)\n\t\t\t\t\t\t             ^^^^\n\t\t\t\t\t\t\tfree \"dyn_addr\"\nFix copy/paste error \"dyn_addr\" by replacing it with \"init_dyn_addr\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56567",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nad7780: fix division by zero in ad7780_write_raw()\n\nIn the ad7780_write_raw() , val2 can be zero, which might lead to a\ndivision by zero error in DIV_ROUND_CLOSEST(). The ad7780_write_raw()\nis based on iio_info's write_raw. While val is explicitly declared that\ncan be zero (in read mode), val2 is not specified to be non-zero.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56570",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\novl: Filter invalid inodes with missing lookup function\n\nAdd a check to the ovl_dentry_weird() function to prevent the\nprocessing of directory inodes that lack the lookup function.\nThis is important because such inodes can cause errors in overlayfs\nwhen passed to the lowerstack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56571",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56575",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: Ensure power suppliers be suspended before detach them\n\nThe power suppliers are always requested to suspend asynchronously,\ndev_pm_domain_detach() requires the caller to ensure proper\nsynchronization of this function with power management callbacks.\notherwise the detach may led to kernel panic, like below:\n\n[ 1457.107934] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000040\n[ 1457.116777] Mem abort info:\n[ 1457.119589]   ESR = 0x0000000096000004\n[ 1457.123358]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 1457.128692]   SET = 0, FnV = 0\n[ 1457.131764]   EA = 0, S1PTW = 0\n[ 1457.134920]   FSC = 0x04: level 0 translation fault\n[ 1457.139812] Data abort info:\n[ 1457.142707]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n[ 1457.148196]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[ 1457.153256]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[ 1457.158563] user pgtable: 4k pages, 48-bit VAs, pgdp=00000001138b6000\n[ 1457.165000] [0000000000000040] pgd=0000000000000000, p4d=0000000000000000\n[ 1457.171792] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[ 1457.178045] Modules linked in: v4l2_jpeg wave6_vpu_ctrl(-) [last unloaded: mxc_jpeg_encdec]\n[ 1457.186383] CPU: 0 PID: 51938 Comm: kworker/0:3 Not tainted 6.6.36-gd23d64eea511 #66\n[ 1457.194112] Hardware name: NXP i.MX95 19X19 board (DT)\n[ 1457.199236] Workqueue: pm pm_runtime_work\n[ 1457.203247] pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[ 1457.210188] pc : genpd_runtime_suspend+0x20/0x290\n[ 1457.214886] lr : __rpm_callback+0x48/0x1d8\n[ 1457.218968] sp : ffff80008250bc50\n[ 1457.222270] x29: ffff80008250bc50 x28: 0000000000000000 x27: 0000000000000000\n[ 1457.229394] x26: 0000000000000000 x25: 0000000000000008 x24: 00000000000f4240\n[ 1457.236518] x23: 0000000000000000 x22: ffff00008590f0e4 x21: 0000000000000008\n[ 1457.243642] x20: ffff80008099c434 x19: ffff00008590f000 x18: ffffffffffffffff\n[ 1457.250766] x17: 5300326563697665 x16: 645f676e696c6f6f x15: 63343a6d726f6674\n[ 1457.257890] x14: 0000000000000004 x13: 00000000000003a4 x12: 0000000000000002\n[ 1457.265014] x11: 0000000000000000 x10: 0000000000000a60 x9 : ffff80008250bbb0\n[ 1457.272138] x8 : ffff000092937200 x7 : ffff0003fdf6af80 x6 : 0000000000000000\n[ 1457.279262] x5 : 00000000410fd050 x4 : 0000000000200000 x3 : 0000000000000000\n[ 1457.286386] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff00008590f000\n[ 1457.293510] Call trace:\n[ 1457.295946]  genpd_runtime_suspend+0x20/0x290\n[ 1457.300296]  __rpm_callback+0x48/0x1d8\n[ 1457.304038]  rpm_callback+0x6c/0x78\n[ 1457.307515]  rpm_suspend+0x10c/0x570\n[ 1457.311077]  pm_runtime_work+0xc4/0xc8\n[ 1457.314813]  process_one_work+0x138/0x248\n[ 1457.318816]  worker_thread+0x320/0x438\n[ 1457.322552]  kthread+0x110/0x114\n[ 1457.325767]  ret_from_fork+0x10/0x20",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56588",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Create all dump files during debugfs initialization\n\nFor the current debugfs of hisi_sas, after user triggers dump, the\ndriver allocate memory space to save the register information and create\ndebugfs files to display the saved information. In this process, the\ndebugfs files created after each dump.\n\nTherefore, when the dump is triggered while the driver is unbind, the\nfollowing hang occurs:\n\n[67840.853907] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0\n[67840.862947] Mem abort info:\n[67840.865855]   ESR = 0x0000000096000004\n[67840.869713]   EC = 0x25: DABT (current EL), IL = 32 bits\n[67840.875125]   SET = 0, FnV = 0\n[67840.878291]   EA = 0, S1PTW = 0\n[67840.881545]   FSC = 0x04: level 0 translation fault\n[67840.886528] Data abort info:\n[67840.889524]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n[67840.895117]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[67840.900284]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[67840.905709] user pgtable: 4k pages, 48-bit VAs, pgdp=0000002803a1f000\n[67840.912263] [00000000000000a0] pgd=0000000000000000, p4d=0000000000000000\n[67840.919177] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[67840.996435] pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[67841.003628] pc : down_write+0x30/0x98\n[67841.007546] lr : start_creating.part.0+0x60/0x198\n[67841.012495] sp : ffff8000b979ba20\n[67841.016046] x29: ffff8000b979ba20 x28: 0000000000000010 x27: 0000000000024b40\n[67841.023412] x26: 0000000000000012 x25: ffff20202b355ae8 x24: ffff20202b35a8c8\n[67841.030779] x23: ffffa36877928208 x22: ffffa368b4972240 x21: ffff8000b979bb18\n[67841.038147] x20: ffff00281dc1e3c0 x19: fffffffffffffffe x18: 0000000000000020\n[67841.045515] x17: 0000000000000000 x16: ffffa368b128a530 x15: ffffffffffffffff\n[67841.052888] x14: ffff8000b979bc18 x13: ffffffffffffffff x12: ffff8000b979bb18\n[67841.060263] x11: 0000000000000000 x10: 0000000000000000 x9 : ffffa368b1289b18\n[67841.067640] x8 : 0000000000000012 x7 : 0000000000000000 x6 : 00000000000003a9\n[67841.075014] x5 : 0000000000000000 x4 : ffff002818c5cb00 x3 : 0000000000000001\n[67841.082388] x2 : 0000000000000000 x1 : ffff002818c5cb00 x0 : 00000000000000a0\n[67841.089759] Call trace:\n[67841.092456]  down_write+0x30/0x98\n[67841.096017]  start_creating.part.0+0x60/0x198\n[67841.100613]  debugfs_create_dir+0x48/0x1f8\n[67841.104950]  debugfs_create_files_v3_hw+0x88/0x348 [hisi_sas_v3_hw]\n[67841.111447]  debugfs_snapshot_regs_v3_hw+0x708/0x798 [hisi_sas_v3_hw]\n[67841.118111]  debugfs_trigger_dump_v3_hw_write+0x9c/0x120 [hisi_sas_v3_hw]\n[67841.125115]  full_proxy_write+0x68/0xc8\n[67841.129175]  vfs_write+0xd8/0x3f0\n[67841.132708]  ksys_write+0x70/0x108\n[67841.136317]  __arm64_sys_write+0x24/0x38\n[67841.140440]  invoke_syscall+0x50/0x128\n[67841.144385]  el0_svc_common.constprop.0+0xc8/0xf0\n[67841.149273]  do_el0_svc+0x24/0x38\n[67841.152773]  el0_svc+0x38/0xd8\n[67841.156009]  el0t_64_sync_handler+0xc0/0xc8\n[67841.160361]  el0t_64_sync+0x1a4/0x1a8\n[67841.164189] Code: b9000882 d2800002 d2800023 f9800011 (c85ffc05)\n[67841.170443] ---[ end trace 0000000000000000 ]---\n\nTo fix this issue, create all directories and files during debugfs\ninitialization. In this way, the driver only needs to allocate memory\nspace to save information each time the user triggers dumping.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: add a check to prevent array-index-out-of-bounds in dbAdjTree\n\nWhen the value of lp is 0 at the beginning of the for loop, it will\nbecome negative in the next assignment and we should bail out.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56596",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in jfs_readdir\n\nThe stbl might contain some invalid values. Added a check to\nreturn error code in that case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56597",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix shift-out-of-bounds in dbSplit\n\nWhen dmt_budmin is less than zero, it causes errors\nin the later stages. Added a check to return an error beforehand\nin dbAllocCtl itself.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: array-index-out-of-bounds fix in dtReadFirst\n\nThe value of stbl can be sometimes out of bounds due\nto a bad filesystem. Added a check with appopriate return\nof error code in that case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56600",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: inet6: do not leave a dangling sk pointer in inet6_create()\n\nsock_init_data() attaches the allocated sk pointer to the provided sock\nobject. If inet6_create() fails later, the sk object is released, but the\nsock object retains the dangling sk pointer, which may cause use-after-free\nlater.\n\nClear the sock sk pointer on error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56601",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: inet: do not leave a dangling sk pointer in inet_create()\n\nsock_init_data() attaches the allocated sk object to the provided sock\nobject. If inet_create() fails later, the sk object is freed, but the\nsock object retains the dangling pointer, which may create use-after-free\nlater.\n\nClear the sk pointer in the sock object on error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56602",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: do not leave a dangling sk pointer in ieee802154_create()\n\nsock_init_data() attaches the allocated sk object to the provided sock\nobject. If ieee802154_create() fails later, the allocated sk object is\nfreed, but the dangling pointer remains in the provided sock object, which\nmay allow use-after-free.\n\nClear the sk pointer in the sock object on error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56604",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc()\n\nbt_sock_alloc() attaches allocated sk object to the provided sock object.\nIf rfcomm_dlc_alloc() fails, we release the sk object, but leave the\ndangling pointer in the sock object, which may cause use-after-free.\n\nFix this by swapping calls to bt_sock_alloc() and rfcomm_dlc_alloc().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56605",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: do not leave dangling sk pointer on error in l2cap_sock_create()\n\nbt_sock_alloc() allocates the sk object and attaches it to the provided\nsock object. On error l2cap_sock_alloc() frees the sk object, but the\ndangling pointer is still attached to the sock object, which may create\nuse-after-free in other code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56619",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential out-of-bounds memory access in nilfs_find_entry()\n\nSyzbot reported that when searching for records in a directory where the\ninode's i_size is corrupted and has a large value, memory access outside\nthe folio/page range may occur, or a use-after-free bug may be detected if\nKASAN is enabled.\n\nThis is because nilfs_last_byte(), which is called by nilfs_find_entry()\nand others to calculate the number of valid bytes of directory data in a\npage from i_size and the page index, loses the upper 32 bits of the 64-bit\nsize information due to an inappropriate type of local variable to which\nthe i_size value is assigned.\n\nThis caused a large byte offset value due to underflow in the end address\ncalculation in the calling nilfs_find_entry(), resulting in memory access\nthat exceeds the folio/page size.\n\nFix this issue by changing the type of the local variable causing the bit\nloss from \"unsigned int\" to \"u64\".  The return value of nilfs_last_byte()\nis also of type \"unsigned int\", but it is truncated so as not to exceed\nPAGE_SIZE and no bit loss occurs, so no change is required.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56623",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix use after free on unload\n\nSystem crash is observed with stack trace warning of use after\nfree. There are 2 signals to tell dpc_thread to terminate (UNLOADING\nflag and kthread_stop).\n\nOn setting the UNLOADING flag when dpc_thread happens to run at the time\nand sees the flag, this causes dpc_thread to exit and clean up\nitself. When kthread_stop is called for final cleanup, this causes use\nafter free.\n\nRemove UNLOADING signal to terminate dpc_thread.  Use the kthread_stop\nas the main signal to exit dpc_thread.\n\n[596663.812935] kernel BUG at mm/slub.c:294!\n[596663.812950] invalid opcode: 0000 [#1] SMP PTI\n[596663.812957] CPU: 13 PID: 1475935 Comm: rmmod Kdump: loaded Tainted: G          IOE    --------- -  - 4.18.0-240.el8.x86_64 #1\n[596663.812960] Hardware name: HP ProLiant DL380p Gen8, BIOS P70 08/20/2012\n[596663.812974] RIP: 0010:__slab_free+0x17d/0x360\n\n...\n[596663.813008] Call Trace:\n[596663.813022]  ? __dentry_kill+0x121/0x170\n[596663.813030]  ? _cond_resched+0x15/0x30\n[596663.813034]  ? _cond_resched+0x15/0x30\n[596663.813039]  ? wait_for_completion+0x35/0x190\n[596663.813048]  ? try_to_wake_up+0x63/0x540\n[596663.813055]  free_task+0x5a/0x60\n[596663.813061]  kthread_stop+0xf3/0x100\n[596663.813103]  qla2x00_remove_one+0x284/0x440 [qla2xxx]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56629",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: wacom: fix when get product name maybe null pointer\n\nDue to incorrect dev-\u003eproduct reporting by certain devices, null\npointer dereferences occur when dev-\u003eproduct is empty, leading to\npotential system crashes.\n\nThis issue was found on EXCELSIOR DL37-D05 device with\nLoongson-LS3A6000-7A2000-DL37 motherboard.\n\nKernel logs:\n[   56.470885] usb 4-3: new full-speed USB device number 4 using ohci-pci\n[   56.671638] usb 4-3: string descriptor 0 read error: -22\n[   56.671644] usb 4-3: New USB device found, idVendor=056a, idProduct=0374, bcdDevice= 1.07\n[   56.671647] usb 4-3: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[   56.678839] hid-generic 0003:056A:0374.0004: hiddev0,hidraw3: USB HID v1.10 Device [HID 056a:0374] on usb-0000:00:05.0-3/input0\n[   56.697719] CPU 2 Unable to handle kernel paging request at virtual address 0000000000000000, era == 90000000066e35c8, ra == ffff800004f98a80\n[   56.697732] Oops[#1]:\n[   56.697734] CPU: 2 PID: 2742 Comm: (udev-worker) Tainted: G           OE      6.6.0-loong64-desktop #25.00.2000.015\n[   56.697737] Hardware name: Inspur CE520L2/C09901N000000000, BIOS 2.09.00 10/11/2024\n[   56.697739] pc 90000000066e35c8 ra ffff800004f98a80 tp 9000000125478000 sp 900000012547b8a0\n[   56.697741] a0 0000000000000000 a1 ffff800004818b28 a2 0000000000000000 a3 0000000000000000\n[   56.697743] a4 900000012547b8f0 a5 0000000000000000 a6 0000000000000000 a7 0000000000000000\n[   56.697745] t0 ffff800004818b2d t1 0000000000000000 t2 0000000000000003 t3 0000000000000005\n[   56.697747] t4 0000000000000000 t5 0000000000000000 t6 0000000000000000 t7 0000000000000000\n[   56.697748] t8 0000000000000000 u0 0000000000000000 s9 0000000000000000 s0 900000011aa48028\n[   56.697750] s1 0000000000000000 s2 0000000000000000 s3 ffff800004818e80 s4 ffff800004810000\n[   56.697751] s5 90000001000b98d0 s6 ffff800004811f88 s7 ffff800005470440 s8 0000000000000000\n[   56.697753]    ra: ffff800004f98a80 wacom_update_name+0xe0/0x300 [wacom]\n[   56.697802]   ERA: 90000000066e35c8 strstr+0x28/0x120\n[   56.697806]  CRMD: 000000b0 (PLV0 -IE -DA +PG DACF=CC DACM=CC -WE)\n[   56.697816]  PRMD: 0000000c (PPLV0 +PIE +PWE)\n[   56.697821]  EUEN: 00000000 (-FPE -SXE -ASXE -BTE)\n[   56.697827]  ECFG: 00071c1d (LIE=0,2-4,10-12 VS=7)\n[   56.697831] ESTAT: 00010000 [PIL] (IS= ECode=1 EsubCode=0)\n[   56.697835]  BADV: 0000000000000000\n[   56.697836]  PRID: 0014d000 (Loongson-64bit, Loongson-3A6000)\n[   56.697838] Modules linked in: wacom(+) bnep bluetooth rfkill qrtr nls_iso8859_1 nls_cp437 snd_hda_codec_conexant snd_hda_codec_generic ledtrig_audio snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd soundcore input_leds mousedev led_class joydev deepin_netmonitor(OE) fuse nfnetlink dmi_sysfs ip_tables x_tables overlay amdgpu amdxcp drm_exec gpu_sched drm_buddy radeon drm_suballoc_helper i2c_algo_bit drm_ttm_helper r8169 ttm drm_display_helper spi_loongson_pci xhci_pci cec xhci_pci_renesas spi_loongson_core hid_generic realtek gpio_loongson_64bit\n[   56.697887] Process (udev-worker) (pid: 2742, threadinfo=00000000aee0d8b4, task=00000000a9eff1f3)\n[   56.697890] Stack : 0000000000000000 ffff800004817e00 0000000000000000 0000251c00000000\n[   56.697896]         0000000000000000 00000011fffffffd 0000000000000000 0000000000000000\n[   56.697901]         0000000000000000 1b67a968695184b9 0000000000000000 90000001000b98d0\n[   56.697906]         90000001000bb8d0 900000011aa48028 0000000000000000 ffff800004f9d74c\n[   56.697911]         90000001000ba000 ffff800004f9ce58 0000000000000000 ffff800005470440\n[   56.697916]         ffff800004811f88 90000001000b98d0 9000000100da2aa8 90000001000bb8d0\n[   56.697921]         0000000000000000 90000001000ba000 900000011aa48028 ffff800004f9d74c\n[   56.697926]         ffff8000054704e8 90000001000bb8b8 90000001000ba000 0000000000000000\n[   56.697931]         90000001000bb8d0 \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56631",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Fix slab-use-after-free read in sg_release()\n\nFix a use-after-free bug in sg_release(), detected by syzbot with KASAN:\n\nBUG: KASAN: slab-use-after-free in lock_release+0x151/0xa30\nkernel/locking/lockdep.c:5838\n__mutex_unlock_slowpath+0xe2/0x750 kernel/locking/mutex.c:912\nsg_release+0x1f4/0x2e0 drivers/scsi/sg.c:407\n\nIn sg_release(), the function kref_put(\u0026sfp-\u003ef_ref, sg_remove_sfp) is\ncalled before releasing the open_rel_lock mutex. The kref_put() call may\ndecrement the reference count of sfp to zero, triggering its cleanup\nthrough sg_remove_sfp(). This cleanup includes scheduling deferred work\nvia sg_remove_sfp_usercontext(), which ultimately frees sfp.\n\nAfter kref_put(), sg_release() continues to unlock open_rel_lock and may\nreference sfp or sdp. If sfp has already been freed, this results in a\nslab-use-after-free error.\n\nMove the kref_put(\u0026sfp-\u003ef_ref, sg_remove_sfp) call after unlocking the\nopen_rel_lock mutex. This ensures:\n\n - No references to sfp or sdp occur after the reference count is\n   decremented.\n\n - Cleanup functions such as sg_remove_sfp() and\n   sg_remove_sfp_usercontext() can safely execute without impacting the\n   mutex handling in sg_release().\n\nThe fix has been tested and validated by syzbot. This patch closes the\nbug reported at the following syzkaller link and ensures proper\nsequencing of resource cleanup and mutex operations, eliminating the\nrisk of use-after-free errors in sg_release().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56642",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Fix use-after-free of kernel socket in cleanup_bearer().\n\nsyzkaller reported a use-after-free of UDP kernel socket\nin cleanup_bearer() without repro. [0][1]\n\nWhen bearer_disable() calls tipc_udp_disable(), cleanup\nof the UDP kernel socket is deferred by work calling\ncleanup_bearer().\n\ntipc_exit_net() waits for such works to finish by checking\ntipc_net(net)-\u003ewq_count.  However, the work decrements the\ncount too early before releasing the kernel socket,\nunblocking cleanup_net() and resulting in use-after-free.\n\nLet's move the decrement after releasing the socket in\ncleanup_bearer().\n\n[0]:\nref_tracker: net notrefcnt@000000009b3d1faf has 1/1 users at\n     sk_alloc+0x438/0x608\n     inet_create+0x4c8/0xcb0\n     __sock_create+0x350/0x6b8\n     sock_create_kern+0x58/0x78\n     udp_sock_create4+0x68/0x398\n     udp_sock_create+0x88/0xc8\n     tipc_udp_enable+0x5e8/0x848\n     __tipc_nl_bearer_enable+0x84c/0xed8\n     tipc_nl_bearer_enable+0x38/0x60\n     genl_family_rcv_msg_doit+0x170/0x248\n     genl_rcv_msg+0x400/0x5b0\n     netlink_rcv_skb+0x1dc/0x398\n     genl_rcv+0x44/0x68\n     netlink_unicast+0x678/0x8b0\n     netlink_sendmsg+0x5e4/0x898\n     ____sys_sendmsg+0x500/0x830\n\n[1]:\nBUG: KMSAN: use-after-free in udp_hashslot include/net/udp.h:85 [inline]\nBUG: KMSAN: use-after-free in udp_lib_unhash+0x3b8/0x930 net/ipv4/udp.c:1979\n udp_hashslot include/net/udp.h:85 [inline]\n udp_lib_unhash+0x3b8/0x930 net/ipv4/udp.c:1979\n sk_common_release+0xaf/0x3f0 net/core/sock.c:3820\n inet_release+0x1e0/0x260 net/ipv4/af_inet.c:437\n inet6_release+0x6f/0xd0 net/ipv6/af_inet6.c:489\n __sock_release net/socket.c:658 [inline]\n sock_release+0xa0/0x210 net/socket.c:686\n cleanup_bearer+0x42d/0x4c0 net/tipc/udp_media.c:819\n process_one_work kernel/workqueue.c:3229 [inline]\n process_scheduled_works+0xcaf/0x1c90 kernel/workqueue.c:3310\n worker_thread+0xf6c/0x1510 kernel/workqueue.c:3391\n kthread+0x531/0x6b0 kernel/kthread.c:389\n ret_from_fork+0x60/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:244\n\nUninit was created at:\n slab_free_hook mm/slub.c:2269 [inline]\n slab_free mm/slub.c:4580 [inline]\n kmem_cache_free+0x207/0xc40 mm/slub.c:4682\n net_free net/core/net_namespace.c:454 [inline]\n cleanup_net+0x16f2/0x19d0 net/core/net_namespace.c:647\n process_one_work kernel/workqueue.c:3229 [inline]\n process_scheduled_works+0xcaf/0x1c90 kernel/workqueue.c:3310\n worker_thread+0xf6c/0x1510 kernel/workqueue.c:3391\n kthread+0x531/0x6b0 kernel/kthread.c:389\n ret_from_fork+0x60/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:244\n\nCPU: 0 UID: 0 PID: 54 Comm: kworker/0:2 Not tainted 6.12.0-rc1-00131-gf66ebf37d69c #7 91723d6f74857f70725e1583cba3cf4adc716cfa\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\nWorkqueue: events cleanup_bearer",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56644",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/ipv6: release expired exception dst cached in socket\n\nDst objects get leaked in ip6_negative_advice() when this function is\nexecuted for an expired IPv6 route located in the exception table. There\nare several conditions that must be fulfilled for the leak to occur:\n* an ICMPv6 packet indicating a change of the MTU for the path is received,\n  resulting in an exception dst being created\n* a TCP connection that uses the exception dst for routing packets must\n  start timing out so that TCP begins retransmissions\n* after the exception dst expires, the FIB6 garbage collector must not run\n  before TCP executes ip6_negative_advice() for the expired exception dst\n\nWhen TCP executes ip6_negative_advice() for an exception dst that has\nexpired and if no other socket holds a reference to the exception dst, the\nrefcount of the exception dst is 2, which corresponds to the increment\nmade by dst_init() and the increment made by the TCP socket for which the\nconnection is timing out. The refcount made by the socket is never\nreleased. The refcount of the dst is decremented in sk_dst_reset() but\nthat decrement is counteracted by a dst_hold() intentionally placed just\nbefore the sk_dst_reset() in ip6_negative_advice(). After\nip6_negative_advice() has finished, there is no other object tied to the\ndst. The socket lost its reference stored in sk_dst_cache and the dst is\nno longer in the exception table. The exception dst becomes a leaked\nobject.\n\nAs a result of this dst leak, an unbalanced refcount is reported for the\nloopback device of a net namespace being destroyed under kernels that do\nnot contain e5f80fcf869a (\"ipv6: give an IPv6 dev to blackhole_netdev\"):\nunregister_netdevice: waiting for lo to become free. Usage count = 2\n\nFix the dst leak by removing the dst_hold() in ip6_negative_advice(). The\npatch that introduced the dst_hold() in ip6_negative_advice() was\n92f1655aa2b22 (\"net: fix __dst_negative_advice() race\"). But 92f1655aa2b22\nmerely refactored the code with regards to the dst refcount so the issue\nwas present even before 92f1655aa2b22. The bug was introduced in\n54c1a859efd9f (\"ipv6: Don't drop cache route entry unless timer actually\nexpired.\") where the expired cached route is deleted and the sk_dst_cache\nmember of the socket is set to NULL by calling dst_negative_advice() but\nthe refcount belonging to the socket is left unbalanced.\n\nThe IPv4 version - ipv4_negative_advice() - is not affected by this bug.\nWhen the TCP connection times out ipv4_negative_advice() merely resets the\nsk_dst_cache of the socket while decrementing the refcount of the\nexception dst.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56645",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: j1939_session_new(): fix skb reference counting\n\nSince j1939_session_skb_queue() does an extra skb_get() for each new\nskb, do the same for the initial one in j1939_session_new() to avoid\nrefcount underflow.\n\n[mkl: clean up commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56648",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hsr: avoid potential out-of-bound access in fill_frame_info()\n\nsyzbot is able to feed a packet with 14 bytes, pretending\nit is a vlan one.\n\nSince fill_frame_info() is relying on skb-\u003emac_len already,\nextend the check to cover this case.\n\nBUG: KMSAN: uninit-value in fill_frame_info net/hsr/hsr_forward.c:709 [inline]\n BUG: KMSAN: uninit-value in hsr_forward_skb+0x9ee/0x3b10 net/hsr/hsr_forward.c:724\n  fill_frame_info net/hsr/hsr_forward.c:709 [inline]\n  hsr_forward_skb+0x9ee/0x3b10 net/hsr/hsr_forward.c:724\n  hsr_dev_xmit+0x2f0/0x350 net/hsr/hsr_device.c:235\n  __netdev_start_xmit include/linux/netdevice.h:5002 [inline]\n  netdev_start_xmit include/linux/netdevice.h:5011 [inline]\n  xmit_one net/core/dev.c:3590 [inline]\n  dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3606\n  __dev_queue_xmit+0x366a/0x57d0 net/core/dev.c:4434\n  dev_queue_xmit include/linux/netdevice.h:3168 [inline]\n  packet_xmit+0x9c/0x6c0 net/packet/af_packet.c:276\n  packet_snd net/packet/af_packet.c:3146 [inline]\n  packet_sendmsg+0x91ae/0xa6f0 net/packet/af_packet.c:3178\n  sock_sendmsg_nosec net/socket.c:711 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:726\n  __sys_sendto+0x594/0x750 net/socket.c:2197\n  __do_sys_sendto net/socket.c:2204 [inline]\n  __se_sys_sendto net/socket.c:2200 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2200\n  x64_sys_call+0x346a/0x3c30 arch/x86/include/generated/asm/syscalls_64.h:45\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n  slab_post_alloc_hook mm/slub.c:4091 [inline]\n  slab_alloc_node mm/slub.c:4134 [inline]\n  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4186\n  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:587\n  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:678\n  alloc_skb include/linux/skbuff.h:1323 [inline]\n  alloc_skb_with_frags+0xc8/0xd00 net/core/skbuff.c:6612\n  sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2881\n  packet_alloc_skb net/packet/af_packet.c:2995 [inline]\n  packet_snd net/packet/af_packet.c:3089 [inline]\n  packet_sendmsg+0x74c6/0xa6f0 net/packet/af_packet.c:3178\n  sock_sendmsg_nosec net/socket.c:711 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:726\n  __sys_sendto+0x594/0x750 net/socket.c:2197\n  __do_sys_sendto net/socket.c:2204 [inline]\n  __se_sys_sendto net/socket.c:2200 [inline]\n  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2200\n  x64_sys_call+0x346a/0x3c30 arch/x86/include/generated/asm/syscalls_64.h:45\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56650",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: x_tables: fix LED ID check in led_tg_check()\n\nSyzbot has reported the following BUG detected by KASAN:\n\nBUG: KASAN: slab-out-of-bounds in strlen+0x58/0x70\nRead of size 1 at addr ffff8881022da0c8 by task repro/5879\n...\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x241/0x360\n ? __pfx_dump_stack_lvl+0x10/0x10\n ? __pfx__printk+0x10/0x10\n ? _printk+0xd5/0x120\n ? __virt_addr_valid+0x183/0x530\n ? __virt_addr_valid+0x183/0x530\n print_report+0x169/0x550\n ? __virt_addr_valid+0x183/0x530\n ? __virt_addr_valid+0x183/0x530\n ? __virt_addr_valid+0x45f/0x530\n ? __phys_addr+0xba/0x170\n ? strlen+0x58/0x70\n kasan_report+0x143/0x180\n ? strlen+0x58/0x70\n strlen+0x58/0x70\n kstrdup+0x20/0x80\n led_tg_check+0x18b/0x3c0\n xt_check_target+0x3bb/0xa40\n ? __pfx_xt_check_target+0x10/0x10\n ? stack_depot_save_flags+0x6e4/0x830\n ? nft_target_init+0x174/0xc30\n nft_target_init+0x82d/0xc30\n ? __pfx_nft_target_init+0x10/0x10\n ? nf_tables_newrule+0x1609/0x2980\n ? nf_tables_newrule+0x1609/0x2980\n ? rcu_is_watching+0x15/0xb0\n ? nf_tables_newrule+0x1609/0x2980\n ? nf_tables_newrule+0x1609/0x2980\n ? __kmalloc_noprof+0x21a/0x400\n nf_tables_newrule+0x1860/0x2980\n ? __pfx_nf_tables_newrule+0x10/0x10\n ? __nla_parse+0x40/0x60\n nfnetlink_rcv+0x14e5/0x2ab0\n ? __pfx_validate_chain+0x10/0x10\n ? __pfx_nfnetlink_rcv+0x10/0x10\n ? __lock_acquire+0x1384/0x2050\n ? netlink_deliver_tap+0x2e/0x1b0\n ? __pfx_lock_release+0x10/0x10\n ? netlink_deliver_tap+0x2e/0x1b0\n netlink_unicast+0x7f8/0x990\n ? __pfx_netlink_unicast+0x10/0x10\n ? __virt_addr_valid+0x183/0x530\n ? __check_object_size+0x48e/0x900\n netlink_sendmsg+0x8e4/0xcb0\n ? __pfx_netlink_sendmsg+0x10/0x10\n ? aa_sock_msg_perm+0x91/0x160\n ? __pfx_netlink_sendmsg+0x10/0x10\n __sock_sendmsg+0x223/0x270\n ____sys_sendmsg+0x52a/0x7e0\n ? __pfx_____sys_sendmsg+0x10/0x10\n __sys_sendmsg+0x292/0x380\n ? __pfx___sys_sendmsg+0x10/0x10\n ? lockdep_hardirqs_on_prepare+0x43d/0x780\n ? __pfx_lockdep_hardirqs_on_prepare+0x10/0x10\n ? exc_page_fault+0x590/0x8c0\n ? do_syscall_64+0xb6/0x230\n do_syscall_64+0xf3/0x230\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n...\n \u003c/TASK\u003e\n\nSince an invalid (without '\\0' byte at all) byte sequence may be passed\nfrom userspace, add an extra check to ensure that such a sequence is\nrejected as possible ID and so never passed to 'kstrdup()' and further.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56658",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: defer final 'struct net' free in netns dismantle\n\nIlya reported a slab-use-after-free in dst_destroy [1]\n\nIssue is in xfrm6_net_init() and xfrm4_net_init() :\n\nThey copy xfrm[46]_dst_ops_template into net-\u003exfrm.xfrm[46]_dst_ops.\n\nBut net structure might be freed before all the dst callbacks are\ncalled. So when dst_destroy() calls later :\n\nif (dst-\u003eops-\u003edestroy)\n    dst-\u003eops-\u003edestroy(dst);\n\ndst-\u003eops points to the old net-\u003exfrm.xfrm[46]_dst_ops, which has been freed.\n\nSee a relevant issue fixed in :\n\nac888d58869b (\"net: do not delay dst_entries_add() in dst_release()\")\n\nA fix is to queue the 'struct net' to be freed after one\nanother cleanup_net() round (and existing rcu_barrier())\n\n[1]\n\nBUG: KASAN: slab-use-after-free in dst_destroy (net/core/dst.c:112)\nRead of size 8 at addr ffff8882137ccab0 by task swapper/37/0\nDec 03 05:46:18 kernel:\nCPU: 37 UID: 0 PID: 0 Comm: swapper/37 Kdump: loaded Not tainted 6.12.0 #67\nHardware name: Red Hat KVM/RHEL, BIOS 1.16.1-1.el9 04/01/2014\nCall Trace:\n \u003cIRQ\u003e\ndump_stack_lvl (lib/dump_stack.c:124)\nprint_address_description.constprop.0 (mm/kasan/report.c:378)\n? dst_destroy (net/core/dst.c:112)\nprint_report (mm/kasan/report.c:489)\n? dst_destroy (net/core/dst.c:112)\n? kasan_addr_to_slab (mm/kasan/common.c:37)\nkasan_report (mm/kasan/report.c:603)\n? dst_destroy (net/core/dst.c:112)\n? rcu_do_batch (kernel/rcu/tree.c:2567)\ndst_destroy (net/core/dst.c:112)\nrcu_do_batch (kernel/rcu/tree.c:2567)\n? __pfx_rcu_do_batch (kernel/rcu/tree.c:2491)\n? lockdep_hardirqs_on_prepare (kernel/locking/lockdep.c:4339 kernel/locking/lockdep.c:4406)\nrcu_core (kernel/rcu/tree.c:2825)\nhandle_softirqs (kernel/softirq.c:554)\n__irq_exit_rcu (kernel/softirq.c:589 kernel/softirq.c:428 kernel/softirq.c:637)\nirq_exit_rcu (kernel/softirq.c:651)\nsysvec_apic_timer_interrupt (arch/x86/kernel/apic/apic.c:1049 arch/x86/kernel/apic/apic.c:1049)\n \u003c/IRQ\u003e\n \u003cTASK\u003e\nasm_sysvec_apic_timer_interrupt (./arch/x86/include/asm/idtentry.h:702)\nRIP: 0010:default_idle (./arch/x86/include/asm/irqflags.h:37 ./arch/x86/include/asm/irqflags.h:92 arch/x86/kernel/process.c:743)\nCode: 00 4d 29 c8 4c 01 c7 4c 29 c2 e9 6e ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 90 0f 00 2d c7 c9 27 00 fb f4 \u003cfa\u003e c3 cc cc cc cc 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 90\nRSP: 0018:ffff888100d2fe00 EFLAGS: 00000246\nRAX: 00000000001870ed RBX: 1ffff110201a5fc2 RCX: ffffffffb61a3e46\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffffffb3d4d123\nRBP: 0000000000000000 R08: 0000000000000001 R09: ffffed11c7e1835d\nR10: ffff888e3f0c1aeb R11: 0000000000000000 R12: 0000000000000000\nR13: ffff888100d20000 R14: dffffc0000000000 R15: 0000000000000000\n? ct_kernel_exit.constprop.0 (kernel/context_tracking.c:148)\n? cpuidle_idle_call (kernel/sched/idle.c:186)\ndefault_idle_call (./include/linux/cpuidle.h:143 kernel/sched/idle.c:118)\ncpuidle_idle_call (kernel/sched/idle.c:186)\n? __pfx_cpuidle_idle_call (kernel/sched/idle.c:168)\n? lock_release (kernel/locking/lockdep.c:467 kernel/locking/lockdep.c:5848)\n? lockdep_hardirqs_on_prepare (kernel/locking/lockdep.c:4347 kernel/locking/lockdep.c:4406)\n? tsc_verify_tsc_adjust (arch/x86/kernel/tsc_sync.c:59)\ndo_idle (kernel/sched/idle.c:326)\ncpu_startup_entry (kernel/sched/idle.c:423 (discriminator 1))\nstart_secondary (arch/x86/kernel/smpboot.c:202 arch/x86/kernel/smpboot.c:282)\n? __pfx_start_secondary (arch/x86/kernel/smpboot.c:232)\n? soft_restart_cpu (arch/x86/kernel/head_64.S:452)\ncommon_startup_64 (arch/x86/kernel/head_64.S:414)\n \u003c/TASK\u003e\nDec 03 05:46:18 kernel:\nAllocated by task 12184:\nkasan_save_stack (mm/kasan/common.c:48)\nkasan_save_track (./arch/x86/include/asm/current.h:49 mm/kasan/common.c:60 mm/kasan/common.c:69)\n__kasan_slab_alloc (mm/kasan/common.c:319 mm/kasan/common.c:345)\nkmem_cache_alloc_noprof (mm/slub.c:4085 mm/slub.c:4134 mm/slub.c:4141)\ncopy_net_ns (net/core/net_namespace.c:421 net/core/net_namespace.c:480)\ncreate_new_namespaces\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56661",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix NULL deref in cleanup_bearer()\n\nsyzbot found [1] that after blamed commit, ub-\u003eubsock-\u003esk\nwas NULL when attempting the atomic_dec() :\n\natomic_dec(\u0026tipc_net(sock_net(ub-\u003eubsock-\u003esk))-\u003ewq_count);\n\nFix this by caching the tipc_net pointer.\n\n[1]\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\nCPU: 0 UID: 0 PID: 5896 Comm: kworker/0:3 Not tainted 6.13.0-rc1-next-20241203-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nWorkqueue: events cleanup_bearer\n RIP: 0010:read_pnet include/net/net_namespace.h:387 [inline]\n RIP: 0010:sock_net include/net/sock.h:655 [inline]\n RIP: 0010:cleanup_bearer+0x1f7/0x280 net/tipc/udp_media.c:820\nCode: 18 48 89 d8 48 c1 e8 03 42 80 3c 28 00 74 08 48 89 df e8 3c f7 99 f6 48 8b 1b 48 83 c3 30 e8 f0 e4 60 00 48 89 d8 48 c1 e8 03 \u003c42\u003e 80 3c 28 00 74 08 48 89 df e8 1a f7 99 f6 49 83 c7 e8 48 8b 1b\nRSP: 0018:ffffc9000410fb70 EFLAGS: 00010206\nRAX: 0000000000000006 RBX: 0000000000000030 RCX: ffff88802fe45a00\nRDX: 0000000000000001 RSI: 0000000000000008 RDI: ffffc9000410f900\nRBP: ffff88807e1f0908 R08: ffffc9000410f907 R09: 1ffff92000821f20\nR10: dffffc0000000000 R11: fffff52000821f21 R12: ffff888031d19980\nR13: dffffc0000000000 R14: dffffc0000000000 R15: ffff88807e1f0918\nFS:  0000000000000000(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000556ca050b000 CR3: 0000000031c0c000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56664",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix race between element replace and close()\n\nElement replace (with a socket different from the one stored) may race\nwith socket's close() link popping \u0026 unlinking. __sock_map_delete()\nunconditionally unrefs the (wrong) element:\n\n// set map[0] = s0\nmap_update_elem(map, 0, s0)\n\n// drop fd of s0\nclose(s0)\n  sock_map_close()\n    lock_sock(sk)               (s0!)\n    sock_map_remove_links(sk)\n      link = sk_psock_link_pop()\n      sock_map_unlink(sk, link)\n        sock_map_delete_from_link\n                                        // replace map[0] with s1\n                                        map_update_elem(map, 0, s1)\n                                          sock_map_update_elem\n                                (s1!)       lock_sock(sk)\n                                            sock_map_update_common\n                                              psock = sk_psock(sk)\n                                              spin_lock(\u0026stab-\u003elock)\n                                              osk = stab-\u003esks[idx]\n                                              sock_map_add_link(..., \u0026stab-\u003esks[idx])\n                                              sock_map_unref(osk, \u0026stab-\u003esks[idx])\n                                                psock = sk_psock(osk)\n                                                sk_psock_put(sk, psock)\n                                                  if (refcount_dec_and_test(\u0026psock))\n                                                    sk_psock_drop(sk, psock)\n                                              spin_unlock(\u0026stab-\u003elock)\n                                            unlock_sock(sk)\n          __sock_map_delete\n            spin_lock(\u0026stab-\u003elock)\n            sk = *psk                        // s1 replaced s0; sk == s1\n            if (!sk_test || sk_test == sk)   // sk_test (s0) != sk (s1); no branch\n              sk = xchg(psk, NULL)\n            if (sk)\n              sock_map_unref(sk, psk)        // unref s1; sks[idx] will dangle\n                psock = sk_psock(sk)\n                sk_psock_put(sk, psock)\n                  if (refcount_dec_and_test())\n                    sk_psock_drop(sk, psock)\n            spin_unlock(\u0026stab-\u003elock)\n    release_sock(sk)\n\nThen close(map) enqueues bpf_map_free_deferred, which finally calls\nsock_map_free(). This results in some refcount_t warnings along with\na KASAN splat [1].\n\nFix __sock_map_delete(), do not allow sock_map_unref() on elements that\nmay have been replaced.\n\n[1]:\nBUG: KASAN: slab-use-after-free in sock_map_free+0x10e/0x330\nWrite of size 4 at addr ffff88811f5b9100 by task kworker/u64:12/1063\n\nCPU: 14 UID: 0 PID: 1063 Comm: kworker/u64:12 Not tainted 6.12.0+ #125\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04/01/2014\nWorkqueue: events_unbound bpf_map_free_deferred\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x68/0x90\n print_report+0x174/0x4f6\n kasan_report+0xb9/0x190\n kasan_check_range+0x10f/0x1e0\n sock_map_free+0x10e/0x330\n bpf_map_free_deferred+0x173/0x320\n process_one_work+0x846/0x1420\n worker_thread+0x5b3/0xf80\n kthread+0x29e/0x360\n ret_from_fork+0x2d/0x70\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nAllocated by task 1202:\n kasan_save_stack+0x1e/0x40\n kasan_save_track+0x10/0x30\n __kasan_slab_alloc+0x85/0x90\n kmem_cache_alloc_noprof+0x131/0x450\n sk_prot_alloc+0x5b/0x220\n sk_alloc+0x2c/0x870\n unix_create1+0x88/0x8a0\n unix_create+0xc5/0x180\n __sock_create+0x241/0x650\n __sys_socketpair+0x1ce/0x420\n __x64_sys_socketpair+0x92/0x100\n do_syscall_64+0x93/0x180\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFreed by task 46:\n kasan_save_stack+0x1e/0x40\n kasan_save_track+0x10/0x30\n kasan_save_free_info+0x37/0x60\n __kasan_slab_free+0x4b/0x70\n kmem_cache_free+0x1a1/0x590\n __sk_destruct+0x388/0x5a0\n sk_psock_destroy+0x73e/0xa50\n process_one_work+0x846/0x1420\n worker_thread+0x5b3/0xf80\n kthread+0x29e/0x360\n ret_from_fork+0x2d/0x70\n ret_from_fork_asm+0x1a/0x30\n\nThe bu\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56678",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/mm/fault: Fix kfence page fault reporting\n\ncopy_from_kernel_nofault() can be called when doing read of /proc/kcore.\n/proc/kcore can have some unmapped kfence objects which when read via\ncopy_from_kernel_nofault() can cause page faults. Since *_nofault()\nfunctions define their own fixup table for handling fault, use that\ninstead of asking kfence to handle such faults.\n\nHence we search the exception tables for the nip which generated the\nfault. If there is an entry then we let the fixup table handler handle the\npage fault by returning an error from within ___do_page_fault().\n\nThis can be easily triggered if someone tries to do dd from /proc/kcore.\neg. dd if=/proc/kcore of=/dev/null bs=1M\n\nSome example false negatives:\n\n  ===============================\n  BUG: KFENCE: invalid read in copy_from_kernel_nofault+0x9c/0x1a0\n  Invalid read at 0xc0000000fdff0000:\n   copy_from_kernel_nofault+0x9c/0x1a0\n   0xc00000000665f950\n   read_kcore_iter+0x57c/0xa04\n   proc_reg_read_iter+0xe4/0x16c\n   vfs_read+0x320/0x3ec\n   ksys_read+0x90/0x154\n   system_call_exception+0x120/0x310\n   system_call_vectored_common+0x15c/0x2ec\n\n  BUG: KFENCE: use-after-free read in copy_from_kernel_nofault+0x9c/0x1a0\n  Use-after-free read at 0xc0000000fe050000 (in kfence-#2):\n   copy_from_kernel_nofault+0x9c/0x1a0\n   0xc00000000665f950\n   read_kcore_iter+0x57c/0xa04\n   proc_reg_read_iter+0xe4/0x16c\n   vfs_read+0x320/0x3ec\n   ksys_read+0x90/0x154\n   system_call_exception+0x120/0x310\n   system_call_vectored_common+0x15c/0x2ec",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56681",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: bcm - add error check in the ahash_hmac_init function\n\nThe ahash_init functions may return fails. The ahash_hmac_init should\nnot return ok when ahash_init returns error. For an example, ahash_init\nwill return -ENOMEM when allocation memory is error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56698",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: gadget: Fix looping of queued SG entries\n\nThe dwc3_request-\u003enum_queued_sgs is decremented on completion. If a\npartially completed request is handled, then the\ndwc3_request-\u003enum_queued_sgs no longer reflects the total number of\nnum_queued_sgs (it would be cleared).\n\nCorrectly check the number of request SG entries remained to be prepare\nand queued. Failure to do this may cause null pointer dereference when\naccessing non-existent SG entry.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56701",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries: Fix dtl_access_lock to be a rw_semaphore\n\nThe dtl_access_lock needs to be a rw_sempahore, a sleeping lock, because\nthe code calls kmalloc() while holding it, which can sleep:\n\n  # echo 1 \u003e /proc/powerpc/vcpudispatch_stats\n  BUG: sleeping function called from invalid context at include/linux/sched/mm.h:337\n  in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 199, name: sh\n  preempt_count: 1, expected: 0\n  3 locks held by sh/199:\n   #0: c00000000a0743f8 (sb_writers#3){.+.+}-{0:0}, at: vfs_write+0x324/0x438\n   #1: c0000000028c7058 (dtl_enable_mutex){+.+.}-{3:3}, at: vcpudispatch_stats_write+0xd4/0x5f4\n   #2: c0000000028c70b8 (dtl_access_lock){+.+.}-{2:2}, at: vcpudispatch_stats_write+0x220/0x5f4\n  CPU: 0 PID: 199 Comm: sh Not tainted 6.10.0-rc4 #152\n  Hardware name: IBM pSeries (emulated by qemu) POWER9 (raw) 0x4e1202 0xf000005 of:SLOF,HEAD hv:linux,kvm pSeries\n  Call Trace:\n    dump_stack_lvl+0x130/0x148 (unreliable)\n    __might_resched+0x174/0x410\n    kmem_cache_alloc_noprof+0x340/0x3d0\n    alloc_dtl_buffers+0x124/0x1ac\n    vcpudispatch_stats_write+0x2a8/0x5f4\n    proc_reg_write+0xf4/0x150\n    vfs_write+0xfc/0x438\n    ksys_write+0x88/0x148\n    system_call_exception+0x1c4/0x5a0\n    system_call_common+0xf4/0x258",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56704",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\n9p/xen: fix release of IRQ\n\nKernel logs indicate an IRQ was double-freed.\n\nPass correct device ID during IRQ release.\n\n[Dominique: remove confusing variable reset to 0]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56722",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hns: Fix cpu stuck caused by printings during reset\n\nDuring reset, cmd to destroy resources such as qp, cq, and mr may fail,\nand error logs will be printed. When a large number of resources are\ndestroyed, there will be lots of printings, and it may lead to a cpu\nstuck.\n\nDelete some unnecessary printings and replace other printing functions\nin these paths with the ratelimited version.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56737",
      "Description": "GNU GRUB (aka GRUB2) through 2.12 has a heap-based buffer overflow in fs/hfs.c via crafted sblock data in an HFS filesystem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56739",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: check if __rtc_read_time was successful in rtc_timer_do_work()\n\nIf the __rtc_read_time call fails,, the struct rtc_time tm; may contain\nuninitialized data, or an illegal date/time read from the RTC hardware.\n\nWhen calling rtc_tm_to_ktime later, the result may be a very large value\n(possibly KTIME_MAX). If there are periodic timers in rtc-\u003etimerqueue,\nthey will continually expire, may causing kernel softlockup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56745",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: Fix reset_method_store() memory leak\n\nIn reset_method_store(), a string is allocated via kstrndup() and assigned\nto the local \"options\". options is then used in with strsep() to find\nspaces:\n\n  while ((name = strsep(\u0026options, \" \")) != NULL) {\n\nIf there are no remaining spaces, then options is set to NULL by strsep(),\nso the subsequent kfree(options) doesn't free the memory allocated via\nkstrndup().\n\nFix by using a separate tmp_options to iterate with strsep() so options is\npreserved.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56747",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedi: Fix a possible memory leak in qedi_alloc_and_init_sb()\n\nHook \"qedi_ops-\u003ecommon-\u003esb_init = qed_sb_init\" does not release the DMA\nmemory sb_virt when it fails. Add dma_free_coherent() to free it. This\nis the same way as qedr_alloc_mem_sb() and qede_alloc_mem_sb().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56754",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: caam - Fix the pointer passed to caam_qi_shutdown()\n\nThe type of the last parameter given to devm_add_action_or_reset() is\n\"struct caam_drv_private *\", but in caam_qi_shutdown(), it is casted to\n\"struct device *\".\n\nPass the correct parameter to devm_add_action_or_reset() so that the\nresources are released as expected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56755",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs/fscache: Add a memory barrier for FSCACHE_VOLUME_CREATING\n\nIn fscache_create_volume(), there is a missing memory barrier between the\nbit-clearing operation and the wake-up operation. This may cause a\nsituation where, after a wake-up, the bit-clearing operation hasn't been\ndetected yet, leading to an indefinite wait. The triggering process is as\nfollows:\n\n  [cookie1]                [cookie2]                  [volume_work]\nfscache_perform_lookup\n  fscache_create_volume\n                        fscache_perform_lookup\n                          fscache_create_volume\n\t\t\t                        fscache_create_volume_work\n                                                  cachefiles_acquire_volume\n                                                  clear_and_wake_up_bit\n    test_and_set_bit\n                            test_and_set_bit\n                              goto maybe_wait\n      goto no_wait\n\nIn the above process, cookie1 and cookie2 has the same volume. When cookie1\nenters the -no_wait- process, it will clear the bit and wake up the waiting\nprocess. If a barrier is missing, it may cause cookie2 to remain in the\n-wait- process indefinitely.\n\nIn commit 3288666c7256 (\"fscache: Use clear_and_wake_up_bit() in\nfscache_create_volume_work()\"), barriers were added to similar operations\nin fscache_create_volume_work(), but fscache_create_volume() was missed.\n\nBy combining the clear and wake operations into clear_and_wake_up_bit() to\nfix this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56756",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-pci: fix freeing of the HMB descriptor table\n\nThe HMB descriptor table is sized to the maximum number of descriptors\nthat could be used for a given device, but __nvme_alloc_host_mem could\nbreak out of the loop earlier on memory allocation failure and end up\nusing less descriptors than planned for, which leads to an incorrect\nsize passed to dma_free_coherent.\n\nIn practice this was not showing up because the number of descriptors\ntends to be low and the dma coherent allocator always allocates and\nfrees at least a page.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56759",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix use-after-free when COWing tree bock and tracing is enabled\n\nWhen a COWing a tree block, at btrfs_cow_block(), and we have the\ntracepoint trace_btrfs_cow_block() enabled and preemption is also enabled\n(CONFIG_PREEMPT=y), we can trigger a use-after-free in the COWed extent\nbuffer while inside the tracepoint code. This is because in some paths\nthat call btrfs_cow_block(), such as btrfs_search_slot(), we are holding\nthe last reference on the extent buffer @buf so btrfs_force_cow_block()\ndrops the last reference on the @buf extent buffer when it calls\nfree_extent_buffer_stale(buf), which schedules the release of the extent\nbuffer with RCU. This means that if we are on a kernel with preemption,\nthe current task may be preempted before calling trace_btrfs_cow_block()\nand the extent buffer already released by the time trace_btrfs_cow_block()\nis called, resulting in a use-after-free.\n\nFix this by moving the trace_btrfs_cow_block() from btrfs_cow_block() to\nbtrfs_force_cow_block() before the COWed extent buffer is freed.\nThis also has a side effect of invoking the tracepoint in the tree defrag\ncode, at defrag.c:btrfs_realloc_node(), since btrfs_force_cow_block() is\ncalled there, but this is fine and it was actually missing there.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56765",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/vas: Add close() callback in vas_vm_ops struct\n\nThe mapping VMA address is saved in VAS window struct when the\npaste address is mapped. This VMA address is used during migration\nto unmap the paste address if the window is active. The paste\naddress mapping will be removed when the window is closed or with\nthe munmap(). But the VMA address in the VAS window is not updated\nwith munmap() which is causing invalid access during migration.\n\nThe KASAN report shows:\n[16386.254991] BUG: KASAN: slab-use-after-free in reconfig_close_windows+0x1a0/0x4e8\n[16386.255043] Read of size 8 at addr c00000014a819670 by task drmgr/696928\n\n[16386.255096] CPU: 29 UID: 0 PID: 696928 Comm: drmgr Kdump: loaded Tainted: G    B              6.11.0-rc5-nxgzip #2\n[16386.255128] Tainted: [B]=BAD_PAGE\n[16386.255148] Hardware name: IBM,9080-HEX Power11 (architected) 0x820200 0xf000007 of:IBM,FW1110.00 (NH1110_016) hv:phyp pSeries\n[16386.255181] Call Trace:\n[16386.255202] [c00000016b297660] [c0000000018ad0ac] dump_stack_lvl+0x84/0xe8 (unreliable)\n[16386.255246] [c00000016b297690] [c0000000006e8a90] print_report+0x19c/0x764\n[16386.255285] [c00000016b297760] [c0000000006e9490] kasan_report+0x128/0x1f8\n[16386.255309] [c00000016b297880] [c0000000006eb5c8] __asan_load8+0xac/0xe0\n[16386.255326] [c00000016b2978a0] [c00000000013f898] reconfig_close_windows+0x1a0/0x4e8\n[16386.255343] [c00000016b297990] [c000000000140e58] vas_migration_handler+0x3a4/0x3fc\n[16386.255368] [c00000016b297a90] [c000000000128848] pseries_migrate_partition+0x4c/0x4c4\n...\n\n[16386.256136] Allocated by task 696554 on cpu 31 at 16377.277618s:\n[16386.256149]  kasan_save_stack+0x34/0x68\n[16386.256163]  kasan_save_track+0x34/0x80\n[16386.256175]  kasan_save_alloc_info+0x58/0x74\n[16386.256196]  __kasan_slab_alloc+0xb8/0xdc\n[16386.256209]  kmem_cache_alloc_noprof+0x200/0x3d0\n[16386.256225]  vm_area_alloc+0x44/0x150\n[16386.256245]  mmap_region+0x214/0x10c4\n[16386.256265]  do_mmap+0x5fc/0x750\n[16386.256277]  vm_mmap_pgoff+0x14c/0x24c\n[16386.256292]  ksys_mmap_pgoff+0x20c/0x348\n[16386.256303]  sys_mmap+0xd0/0x160\n...\n\n[16386.256350] Freed by task 0 on cpu 31 at 16386.204848s:\n[16386.256363]  kasan_save_stack+0x34/0x68\n[16386.256374]  kasan_save_track+0x34/0x80\n[16386.256384]  kasan_save_free_info+0x64/0x10c\n[16386.256396]  __kasan_slab_free+0x120/0x204\n[16386.256415]  kmem_cache_free+0x128/0x450\n[16386.256428]  vm_area_free_rcu_cb+0xa8/0xd8\n[16386.256441]  rcu_do_batch+0x2c8/0xcf0\n[16386.256458]  rcu_core+0x378/0x3c4\n[16386.256473]  handle_softirqs+0x20c/0x60c\n[16386.256495]  do_softirq_own_stack+0x6c/0x88\n[16386.256509]  do_softirq_own_stack+0x58/0x88\n[16386.256521]  __irq_exit_rcu+0x1a4/0x20c\n[16386.256533]  irq_exit+0x20/0x38\n[16386.256544]  interrupt_async_exit_prepare.constprop.0+0x18/0x2c\n...\n\n[16386.256717] Last potentially related work creation:\n[16386.256729]  kasan_save_stack+0x34/0x68\n[16386.256741]  __kasan_record_aux_stack+0xcc/0x12c\n[16386.256753]  __call_rcu_common.constprop.0+0x94/0xd04\n[16386.256766]  vm_area_free+0x28/0x3c\n[16386.256778]  remove_vma+0xf4/0x114\n[16386.256797]  do_vmi_align_munmap.constprop.0+0x684/0x870\n[16386.256811]  __vm_munmap+0xe0/0x1f8\n[16386.256821]  sys_munmap+0x54/0x6c\n[16386.256830]  system_call_exception+0x1a0/0x4a0\n[16386.256841]  system_call_vectored_common+0x15c/0x2ec\n\n[16386.256868] The buggy address belongs to the object at c00000014a819670\n                which belongs to the cache vm_area_struct of size 168\n[16386.256887] The buggy address is located 0 bytes inside of\n                freed 168-byte region [c00000014a819670, c00000014a819718)\n\n[16386.256915] The buggy address belongs to the physical page:\n[16386.256928] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x14a81\n[16386.256950] memcg:c0000000ba430001\n[16386.256961] anon flags: 0x43ffff800000000(node=4|zone=0|lastcpupid=0x7ffff)\n[16386.256975] page_type: 0xfdffffff(slab)\n[16386\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56776",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/sti: avoid potential dereference of error pointers\n\nThe return value of drm_atomic_get_crtc_state() needs to be\nchecked. To avoid use of error pointer 'crtc_state' in case\nof the failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/sti: avoid potential dereference of error pointers in sti_gdp_atomic_check\n\nThe return value of drm_atomic_get_crtc_state() needs to be\nchecked. To avoid use of error pointer 'crtc_state' in case\nof the failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56778",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/sti: avoid potential dereference of error pointers in sti_hqvdp_atomic_check\n\nThe return value of drm_atomic_get_crtc_state() needs to be\nchecked. To avoid use of error pointer 'crtc_state' in case\nof the failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: check return value of sock_recvmsg when draining clc data\n\nWhen receiving clc msg, the field length in smc_clc_msg_hdr indicates the\nlength of msg should be received from network and the value should not be\nfully trusted as it is from the network. Once the value of length exceeds\nthe value of buflen in function smc_clc_wait_msg it may run into deadloop\nwhen trying to drain the remaining data exceeding buflen.\n\nThis patch checks the return value of sock_recvmsg when draining data in\ncase of deadloop in draining.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npower: supply: gpio-charger: Fix set charge current limits\n\nFix set charge current limits for devices which allow to set the lowest\ncharge current limit to be greater zero. If requested charge current limit\nis below lowest limit, the index equals current_limit_map_size which leads\nto accessing memory beyond allocated memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57793",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirt: tdx-guest: Just leak decrypted memory on unrecoverable errors\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_decrypted() to fail such that an error is returned\nand the resulting memory is shared. Callers need to take care\nto handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional\nor security issues.\n\nLeak the decrypted memory when set_memory_decrypted() fails,\nand don't need to print an error since set_memory_decrypted()\nwill call WARN_ONCE().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57798",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/dp_mst: Ensure mst_primary pointer is valid in drm_dp_mst_handle_up_req()\n\nWhile receiving an MST up request message from one thread in\ndrm_dp_mst_handle_up_req(), the MST topology could be removed from\nanother thread via drm_dp_mst_topology_mgr_set_mst(false), freeing\nmst_primary and setting drm_dp_mst_topology_mgr::mst_primary to NULL.\nThis could lead to a NULL deref/use-after-free of mst_primary in\ndrm_dp_mst_handle_up_req().\n\nAvoid the above by holding a reference for mst_primary in\ndrm_dp_mst_handle_up_req() while it's used.\n\nv2: Fix kfreeing the request if getting an mst_primary reference fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cpum_sf: Handle CPU hotplug remove during sampling\n\nCPU hotplug remove handling triggers the following function\ncall sequence:\n\n   CPUHP_AP_PERF_S390_SF_ONLINE  --\u003e s390_pmu_sf_offline_cpu()\n   ...\n   CPUHP_AP_PERF_ONLINE          --\u003e perf_event_exit_cpu()\n\nThe s390 CPUMF sampling CPU hotplug handler invokes:\n\n s390_pmu_sf_offline_cpu()\n +--\u003e  cpusf_pmu_setup()\n       +--\u003e setup_pmc_cpu()\n            +--\u003e deallocate_buffers()\n\nThis function de-allocates all sampling data buffers (SDBs) allocated\nfor that CPU at event initialization. It also clears the\nPMU_F_RESERVED bit. The CPU is gone and can not be sampled.\n\nWith the event still being active on the removed CPU, the CPU event\nhotplug support in kernel performance subsystem triggers the\nfollowing function calls on the removed CPU:\n\n  perf_event_exit_cpu()\n  +--\u003e perf_event_exit_cpu_context()\n       +--\u003e __perf_event_exit_context()\n\t    +--\u003e __perf_remove_from_context()\n\t         +--\u003e event_sched_out()\n\t              +--\u003e cpumsf_pmu_del()\n\t                   +--\u003e cpumsf_pmu_stop()\n                                +--\u003e hw_perf_event_update()\n\nto stop and remove the event. During removal of the event, the\nsampling device driver tries to read out the remaining samples from\nthe sample data buffers (SDBs). But they have already been freed\n(and may have been re-assigned). This may lead to a use after free\nsituation in which case the samples are most likely invalid. In the\nbest case the memory has not been reassigned and still contains\nvalid data.\n\nRemedy this situation and check if the CPU is still in reserved\nstate (bit PMU_F_RESERVED set). In this case the SDBs have not been\nreleased an contain valid data. This is always the case when\nthe event is removed (and no CPU hotplug off occured).\nIf the PMU_F_RESERVED bit is not set, the SDB buffers are gone.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57850",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: Prevent rtime decompress memory corruption\n\nThe rtime decompression routine does not fully check bounds during the\nentirety of the decompression pass and can corrupt memory outside the\ndecompression buffer if the compressed data is corrupted. This adds the\nrequired check to prevent this failure mode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57876",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/dp_mst: Fix resetting msg rx state after topology removal\n\nIf the MST topology is removed during the reception of an MST down reply\nor MST up request sideband message, the\ndrm_dp_mst_topology_mgr::up_req_recv/down_rep_recv states could be reset\nfrom one thread via drm_dp_mst_topology_mgr_set_mst(false), racing with\nthe reading/parsing of the message from another thread via\ndrm_dp_mst_handle_down_rep() or drm_dp_mst_handle_up_req(). The race is\npossible since the reader/parser doesn't hold any lock while accessing\nthe reception state. This in turn can lead to a memory corruption in the\nreader/parser as described by commit bd2fccac61b4 (\"drm/dp_mst: Fix MST\nsideband message body length check\").\n\nFix the above by resetting the message reception state if needed before\nreading/parsing a message. Another solution would be to hold the\ndrm_dp_mst_topology_mgr::lock for the whole duration of the message\nreception/parsing in drm_dp_mst_handle_down_rep() and\ndrm_dp_mst_handle_up_req(), however this would require a bigger change.\nSince the fix is also needed for stable, opting for the simpler solution\nin this patch.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: seq: oss: Fix races at processing SysEx messages\n\nOSS sequencer handles the SysEx messages split in 6 bytes packets, and\nALSA sequencer OSS layer tries to combine those.  It stores the data\nin the internal buffer and this access is racy as of now, which may\nlead to the out-of-bounds access.\n\nAs a temporary band-aid fix, introduce a mutex for serializing the\nprocess of the SysEx message packets.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57897",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Correct the migration DMA map direction\n\nThe SVM DMA device map direction should be set the same as\nthe DMA unmap setting, otherwise the DMA core will report\nthe following warning.\n\nBefore finialize this solution, there're some discussion on\nthe DMA mapping type(stream-based or coherent) in this KFD\nmigration case, followed by https://lore.kernel.org/all/04d4ab32\n-45a1-4b88-86ee-fb0f35a0ca40@amd.com/T/.\n\nAs there's no dma_sync_single_for_*() in the DMA buffer accessed\nthat because this migration operation should be sync properly and\nautomatically. Give that there's might not be a performance problem\nin various cache sync policy of DMA sync. Therefore, in order to\nsimplify the DMA direction setting alignment, let's set the DMA map\ndirection as BIDIRECTIONAL.\n\n[  150.834218] WARNING: CPU: 8 PID: 1812 at kernel/dma/debug.c:1028 check_unmap+0x1cc/0x930\n[  150.834225] Modules linked in: amdgpu(OE) amdxcp drm_exec(OE) gpu_sched drm_buddy(OE) drm_ttm_helper(OE) ttm(OE) drm_suballoc_helper(OE) drm_display_helper(OE) drm_kms_helper(OE) i2c_algo_bit rpcsec_gss_krb5 auth_rpcgss nfsv4 nfs lockd grace netfs xt_conntrack xt_MASQUERADE nf_conntrack_netlink xfrm_user xfrm_algo iptable_nat xt_addrtype iptable_filter br_netfilter nvme_fabrics overlay nfnetlink_cttimeout nfnetlink openvswitch nsh nf_conncount nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c bridge stp llc sch_fq_codel intel_rapl_msr amd_atl intel_rapl_common snd_hda_codec_realtek snd_hda_codec_generic snd_hda_scodec_component snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg edac_mce_amd snd_pci_acp6x snd_hda_codec snd_acp_config snd_hda_core snd_hwdep snd_soc_acpi kvm_amd sunrpc snd_pcm kvm binfmt_misc snd_seq_midi crct10dif_pclmul snd_seq_midi_event ghash_clmulni_intel sha512_ssse3 snd_rawmidi nls_iso8859_1 sha256_ssse3 sha1_ssse3 snd_seq aesni_intel snd_seq_device crypto_simd snd_timer cryptd input_leds\n[  150.834310]  wmi_bmof serio_raw k10temp rapl snd sp5100_tco ipmi_devintf soundcore ccp ipmi_msghandler cm32181 industrialio mac_hid msr parport_pc ppdev lp parport efi_pstore drm(OE) ip_tables x_tables pci_stub crc32_pclmul nvme ahci libahci i2c_piix4 r8169 nvme_core i2c_designware_pci realtek i2c_ccgx_ucsi video wmi hid_generic cdc_ether usbnet usbhid hid r8152 mii\n[  150.834354] CPU: 8 PID: 1812 Comm: rocrtst64 Tainted: G           OE      6.10.0-custom #492\n[  150.834358] Hardware name: AMD Majolica-RN/Majolica-RN, BIOS RMJ1009A 06/13/2021\n[  150.834360] RIP: 0010:check_unmap+0x1cc/0x930\n[  150.834363] Code: c0 4c 89 4d c8 e8 34 bf 86 00 4c 8b 4d c8 4c 8b 45 c0 48 8b 4d b8 48 89 c6 41 57 4c 89 ea 48 c7 c7 80 49 b4 84 e8 b4 81 f3 ff \u003c0f\u003e 0b 48 c7 c7 04 83 ac 84 e8 76 ba fc ff 41 8b 76 4c 49 8d 7e 50\n[  150.834365] RSP: 0018:ffffaac5023739e0 EFLAGS: 00010086\n[  150.834368] RAX: 0000000000000000 RBX: ffffffff8566a2e0 RCX: 0000000000000027\n[  150.834370] RDX: ffff8f6a8f621688 RSI: 0000000000000001 RDI: ffff8f6a8f621680\n[  150.834372] RBP: ffffaac502373a30 R08: 00000000000000c9 R09: ffffaac502373850\n[  150.834373] R10: ffffaac502373848 R11: ffffffff84f46328 R12: ffffaac502373a40\n[  150.834375] R13: ffff8f6741045330 R14: ffff8f6741a77700 R15: ffffffff84ac831b\n[  150.834377] FS:  00007faf0fc94c00(0000) GS:ffff8f6a8f600000(0000) knlGS:0000000000000000\n[  150.834379] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  150.834381] CR2: 00007faf0b600020 CR3: 000000010a52e000 CR4: 0000000000350ef0\n[  150.834383] Call Trace:\n[  150.834385]  \u003cTASK\u003e\n[  150.834387]  ? show_regs+0x6d/0x80\n[  150.834393]  ? __warn+0x8c/0x140\n[  150.834397]  ? check_unmap+0x1cc/0x930\n[  150.834400]  ? report_bug+0x193/0x1a0\n[  150.834406]  ? handle_bug+0x46/0x80\n[  150.834410]  ? exc_invalid_op+0x1d/0x80\n[  150.834413]  ? asm_exc_invalid_op+0x1f/0x30\n[  150.834420]  ? check_unmap+0x1cc/0x930\n[  150.834425]  debug_dma_unmap_page+0x86/0x90\n[  150.834431]  ? srso_return_thunk+0x5/0x5f\n[  150.834435] \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac802154: check local interfaces before deleting sdata list\n\nsyzkaller reported a corrupted list in ieee802154_if_remove. [1]\n\nRemove an IEEE 802.15.4 network interface after unregister an IEEE 802.15.4\nhardware device from the system.\n\nCPU0\t\t\t\t\tCPU1\n====\t\t\t\t\t====\ngenl_family_rcv_msg_doit\t\tieee802154_unregister_hw\nieee802154_del_iface\t\t\tieee802154_remove_interfaces\nrdev_del_virtual_intf_deprecated\tlist_del(\u0026sdata-\u003elist)\nieee802154_if_remove\nlist_del_rcu\n\nThe net device has been unregistered, since the rcu grace period,\nunregistration must be run before ieee802154_if_remove.\n\nTo avoid this issue, add a check for local-\u003einterfaces before deleting\nsdata list.\n\n[1]\nkernel BUG at lib/list_debug.c:58!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 0 UID: 0 PID: 6277 Comm: syz-executor157 Not tainted 6.12.0-rc6-syzkaller-00005-g557329bcecc2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nRIP: 0010:__list_del_entry_valid_or_report+0xf4/0x140 lib/list_debug.c:56\nCode: e8 a1 7e 00 07 90 0f 0b 48 c7 c7 e0 37 60 8c 4c 89 fe e8 8f 7e 00 07 90 0f 0b 48 c7 c7 40 38 60 8c 4c 89 fe e8 7d 7e 00 07 90 \u003c0f\u003e 0b 48 c7 c7 a0 38 60 8c 4c 89 fe e8 6b 7e 00 07 90 0f 0b 48 c7\nRSP: 0018:ffffc9000490f3d0 EFLAGS: 00010246\nRAX: 000000000000004e RBX: dead000000000122 RCX: d211eee56bb28d00\nRDX: 0000000000000000 RSI: 0000000080000000 RDI: 0000000000000000\nRBP: ffff88805b278dd8 R08: ffffffff8174a12c R09: 1ffffffff2852f0d\nR10: dffffc0000000000 R11: fffffbfff2852f0e R12: dffffc0000000000\nR13: dffffc0000000000 R14: dead000000000100 R15: ffff88805b278cc0\nFS:  0000555572f94380(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000056262e4a3000 CR3: 0000000078496000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n __list_del_entry_valid include/linux/list.h:124 [inline]\n __list_del_entry include/linux/list.h:215 [inline]\n list_del_rcu include/linux/rculist.h:157 [inline]\n ieee802154_if_remove+0x86/0x1e0 net/mac802154/iface.c:687\n rdev_del_virtual_intf_deprecated net/ieee802154/rdev-ops.h:24 [inline]\n ieee802154_del_iface+0x2c0/0x5c0 net/ieee802154/nl-phy.c:323\n genl_family_rcv_msg_doit net/netlink/genetlink.c:1115 [inline]\n genl_family_rcv_msg net/netlink/genetlink.c:1195 [inline]\n genl_rcv_msg+0xb14/0xec0 net/netlink/genetlink.c:1210\n netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2551\n genl_rcv+0x28/0x40 net/netlink/genetlink.c:1219\n netlink_unicast_kernel net/netlink/af_netlink.c:1331 [inline]\n netlink_unicast+0x7f6/0x990 net/netlink/af_netlink.c:1357\n netlink_sendmsg+0x8e4/0xcb0 net/netlink/af_netlink.c:1901\n sock_sendmsg_nosec net/socket.c:729 [inline]\n __sock_sendmsg+0x221/0x270 net/socket.c:744\n ____sys_sendmsg+0x52a/0x7e0 net/socket.c:2607\n ___sys_sendmsg net/socket.c:2661 [inline]\n __sys_sendmsg+0x292/0x380 net/socket.c:2690\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8805",
      "Description": "BlueZ HID over GATT Profile Improper Access Control Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of BlueZ. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the implementation of the HID over GATT Profile. The issue results from the lack of authorization prior to allowing access to functionality. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-25177.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0167",
      "Description": "When asked to use a `.netrc` file for credentials **and** to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has a `default` entry that\nomits both login and password. A rare circumstance.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0395",
      "Description": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0622",
      "Description": "A flaw was found in command/gpg. In some scenarios, hooks created by loaded modules are not removed when the related module is unloaded. This flaw allows an attacker to force grub2 to call the hooks once the module that registered it was unloaded, leading to a use-after-free vulnerability. If correctly exploited, this vulnerability may result in arbitrary code execution, eventually allowing the attacker to bypass secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0624",
      "Description": "A flaw was found in grub2. During the network boot process, when trying to search for the configuration file, grub copies data from a user controlled environment variable into an internal buffer using the grub_strcpy() function. During this step, it fails to consider the environment variable length when allocating the internal buffer, resulting in an out-of-bounds write. If correctly exploited, this issue may result in remote code execution through the same network segment grub is searching for the boot information, which can be used to by-pass secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0677",
      "Description": "A flaw was found in grub2. When performing a symlink lookup, the grub's UFS module checks the inode's data size to allocate the internal buffer to read the file content, however, it fails to check if the symlink data size has overflown. When this occurs, grub_malloc() may be called with a smaller value than needed. When further reading the data from the disk into the buffer, the grub_ufs_lookup_symlink() function will write past the end of the allocated size. An attack can leverage this by crafting a malicious filesystem, and as a result, it will corrupt data stored in the heap, allowing for arbitrary code execution used to by-pass secure boot mechanisms.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0678",
      "Description": "A flaw was found in grub2. When reading data from a squash4 filesystem, grub's squash4 fs module uses user-controlled parameters from the filesystem geometry to determine the internal buffer size, however, it improperly checks for integer overflows. A maliciously crafted filesystem may lead some of those buffer size calculations to overflow, causing it to perform a grub_malloc() operation with a smaller size than expected. As a result, the direct_read() will perform a heap based out-of-bounds write during data reading. This flaw may be leveraged to corrupt grub's internal critical data and may result in arbitrary code execution, by-passing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0684",
      "Description": "A flaw was found in grub2. When performing a symlink lookup from a reiserfs filesystem, grub's reiserfs fs module uses user-controlled parameters from the filesystem geometry to determine the internal buffer size, however, it improperly checks for integer overflows. A maliciouly crafted filesystem may lead some of those buffer size calculations to overflow, causing it to perform a grub_malloc() operation with a smaller size than expected. As a result, the grub_reiserfs_read_symlink() will call grub_reiserfs_read_real() with a overflown length parameter, leading to a heap based out-of-bounds write during data reading. This flaw may be leveraged to corrupt grub's internal critical data and can result in arbitrary code execution, by-passing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0685",
      "Description": "A flaw was found in grub2. When reading data from a jfs filesystem, grub's jfs filesystem module uses user-controlled parameters from the filesystem geometry to determine the internal buffer size, however, it improperly checks for integer overflows. A maliciouly crafted filesystem may lead some of those buffer size calculations to overflow, causing it to perform a grub_malloc() operation with a smaller size than expected. As a result, the grub_jfs_lookup_symlink() function will write past the internal buffer length during grub_jfs_read_file(). This issue can be leveraged to corrupt grub's internal critical data and may result in arbitrary code execution, by-passing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0686",
      "Description": "A flaw was found in grub2. When performing a symlink lookup from a romfs filesystem, grub's romfs filesystem module uses user-controlled parameters from the filesystem geometry to determine the internal buffer size, however, it improperly checks for integer overflows. A maliciously crafted filesystem may lead some of those buffer size calculations to overflow, causing it to perform a grub_malloc() operation with a smaller size than expected. As a result, the grub_romfs_read_symlink() may cause out-of-bounds writes when the calling grub_disk_read() function. This issue may be leveraged to corrupt grub's internal critical data and can result in arbitrary code execution by-passing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0689",
      "Description": "When reading data from disk, the grub's UDF filesystem module utilizes the user controlled data length metadata to allocate its internal buffers. In certain scenarios, while iterating through disk sectors, it assumes the read size from the disk is always smaller than the allocated buffer size which is not guaranteed. A crafted filesystem image may lead to a heap-based buffer overflow resulting in critical data to be corrupted, resulting in the risk of arbitrary code execution by-passing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0690",
      "Description": "The read command is used to read the keyboard input from the user, while reads it keeps the input length in a 32-bit integer value which is further used to reallocate the line buffer to accept the next character. During this process, with a line big enough it's possible to make this variable to overflow leading to a out-of-bounds write in the heap based buffer. This flaw may be leveraged to corrupt grub's internal critical data and secure boot bypass is not discarded as consequence.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0725",
      "Description": "When libcurl is asked to perform automatic gzip decompression of\ncontent-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option,\n**using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would\nmake libcurl perform a buffer overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0938",
      "Description": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-1118",
      "Description": "A flaw was found in grub2. Grub's dump command is not blocked when grub is in lockdown mode, which allows the user to read any memory information, and an attacker may leverage this in order to extract signatures, salts, and other sensitive information from the memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-1125",
      "Description": "When reading data from a hfs filesystem, grub's hfs filesystem module uses user-controlled parameters from the filesystem metadata to calculate the internal buffers size, however it misses to properly check for integer overflows. A maliciouly crafted filesystem may lead some of those buffer size calculation to overflow, causing it to perform a grub_malloc() operation with a smaller size than expected. As a result the hfsplus_open_compressed_real() function will write past of the internal buffer length. This flaw may be leveraged to corrupt grub's internal critical data and may result in arbitrary code execution by-passing secure boot protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-1215",
      "Description": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21647",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: sch_cake: add bounds checks to host bulk flow fairness counts\n\nEven though we fixed a logic error in the commit cited below, syzbot\nstill managed to trigger an underflow of the per-host bulk flow\ncounters, leading to an out of bounds memory access.\n\nTo avoid any such logic errors causing out of bounds memory accesses,\nthis commit factors out all accesses to the per-host bulk flow counters\nto a series of helpers that perform bounds-checking before any\nincrements and decrements. This also has the benefit of improving\nreadability by moving the conditional checks for the flow mode into\nthese helpers, instead of having them spread out throughout the\ncode (which was the cause of the original logic error).\n\nAs part of this change, the flow quantum calculation is consolidated\ninto a helper function, which means that the dithering applied to the\nost load scaling is now applied both in the DRR rotation and when a\nsparse flow's quantum is first initiated. The only user-visible effect\nof this is that the maximum packet size that can be sent while a flow\nstays sparse will now vary with +/- one byte in some cases. This should\nnot make a noticeable difference in practice, and thus it's not worth\ncomplicating the code to preserve the old behaviour.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21690",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: storvsc: Ratelimit warning logs to prevent VM denial of service\n\nIf there's a persistent error in the hypervisor, the SCSI warning for\nfailed I/O can flood the kernel log and max out CPU utilization,\npreventing troubleshooting from the VM side. Ratelimit the warning so\nit doesn't DoS the VM.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21692",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix ets qdisc OOB Indexing\n\nHaowei Yan \u003cg1042620637@gmail.com\u003e found that ets_class_from_arg() can\nindex an Out-Of-Bound class in ets_class_from_arg() when passed clid of\n0. The overflow may cause local privilege escalation.\n\n [   18.852298] ------------[ cut here ]------------\n [   18.853271] UBSAN: array-index-out-of-bounds in net/sched/sch_ets.c:93:20\n [   18.853743] index 18446744073709551615 is out of range for type 'ets_class [16]'\n [   18.854254] CPU: 0 UID: 0 PID: 1275 Comm: poc Not tainted 6.12.6-dirty #17\n [   18.854821] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n [   18.856532] Call Trace:\n [   18.857441]  \u003cTASK\u003e\n [   18.858227]  dump_stack_lvl+0xc2/0xf0\n [   18.859607]  dump_stack+0x10/0x20\n [   18.860908]  __ubsan_handle_out_of_bounds+0xa7/0xf0\n [   18.864022]  ets_class_change+0x3d6/0x3f0\n [   18.864322]  tc_ctl_tclass+0x251/0x910\n [   18.864587]  ? lock_acquire+0x5e/0x140\n [   18.865113]  ? __mutex_lock+0x9c/0xe70\n [   18.866009]  ? __mutex_lock+0xa34/0xe70\n [   18.866401]  rtnetlink_rcv_msg+0x170/0x6f0\n [   18.866806]  ? __lock_acquire+0x578/0xc10\n [   18.867184]  ? __pfx_rtnetlink_rcv_msg+0x10/0x10\n [   18.867503]  netlink_rcv_skb+0x59/0x110\n [   18.867776]  rtnetlink_rcv+0x15/0x30\n [   18.868159]  netlink_unicast+0x1c3/0x2b0\n [   18.868440]  netlink_sendmsg+0x239/0x4b0\n [   18.868721]  ____sys_sendmsg+0x3e2/0x410\n [   18.869012]  ___sys_sendmsg+0x88/0xe0\n [   18.869276]  ? rseq_ip_fixup+0x198/0x260\n [   18.869563]  ? rseq_update_cpu_node_id+0x10a/0x190\n [   18.869900]  ? trace_hardirqs_off+0x5a/0xd0\n [   18.870196]  ? syscall_exit_to_user_mode+0xcc/0x220\n [   18.870547]  ? do_syscall_64+0x93/0x150\n [   18.870821]  ? __memcg_slab_free_hook+0x69/0x290\n [   18.871157]  __sys_sendmsg+0x69/0xd0\n [   18.871416]  __x64_sys_sendmsg+0x1d/0x30\n [   18.871699]  x64_sys_call+0x9e2/0x2670\n [   18.871979]  do_syscall_64+0x87/0x150\n [   18.873280]  ? do_syscall_64+0x93/0x150\n [   18.874742]  ? lock_release+0x7b/0x160\n [   18.876157]  ? do_user_addr_fault+0x5ce/0x8f0\n [   18.877833]  ? irqentry_exit_to_user_mode+0xc2/0x210\n [   18.879608]  ? irqentry_exit+0x77/0xb0\n [   18.879808]  ? clear_bhb_loop+0x15/0x70\n [   18.880023]  ? clear_bhb_loop+0x15/0x70\n [   18.880223]  ? clear_bhb_loop+0x15/0x70\n [   18.880426]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n [   18.880683] RIP: 0033:0x44a957\n [   18.880851] Code: ff ff e8 fc 00 00 00 66 2e 0f 1f 84 00 00 00 00 00 66 90 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 2e 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 89 54 24 1c 48 8974 24 10\n [   18.881766] RSP: 002b:00007ffcdd00fad8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\n [   18.882149] RAX: ffffffffffffffda RBX: 00007ffcdd010db8 RCX: 000000000044a957\n [   18.882507] RDX: 0000000000000000 RSI: 00007ffcdd00fb70 RDI: 0000000000000003\n [   18.885037] RBP: 00007ffcdd010bc0 R08: 000000000703c770 R09: 000000000703c7c0\n [   18.887203] R10: 0000000000000080 R11: 0000000000000246 R12: 0000000000000001\n [   18.888026] R13: 00007ffcdd010da8 R14: 00000000004ca7d0 R15: 0000000000000001\n [   18.888395]  \u003c/TASK\u003e\n [   18.888610] ---[ end trace ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21699",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Truncate address space when flipping GFS2_DIF_JDATA flag\n\nTruncate an inode's address space when flipping the GFS2_DIF_JDATA flag:\ndepending on that flag, the pages in the address space will either use\nbuffer heads or iomap_folio_state structs, and we cannot mix the two.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22134",
      "Description": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22868",
      "Description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22869",
      "Description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-24014",
      "Description": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-24031",
      "Description": "PAM-PKCS#11 is a Linux-PAM login module that allows a X.509 certificate based user login. In versions 0.6.12 and prior, the pam_pkcs11 module segfaults when a user presses ctrl-c/ctrl-d when they are asked for a PIN. When a user enters no PIN at all, `pam_get_pwd` will never initialize the password buffer pointer and as such `cleanse` will try to dereference an uninitialized pointer. On my system this pointer happens to have the value 3 most of the time when running sudo and as such it will segfault. The most likely impact to a system affected by this issue is an availability impact due to a daemon that uses PAM crashing. As of time of publication, a patch for the issue is unavailable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-24032",
      "Description": "PAM-PKCS#11 is a Linux-PAM login module that allows a X.509 certificate based user login. Prior to version 0.6.13, if cert_policy is set to none (the default value), then pam_pkcs11 will only check if the user is capable of logging into the token. An attacker may create a different token with the user's public data (e.g. the user's certificate) and a PIN known to the attacker. If no signature with the private key is required, then the attacker may now login as user with that created token. The default to *not* check the private key's signature has been changed with commit commi6638576892b59a99389043c90a1e7dd4d783b921, so that all versions starting with pam_pkcs11-0.6.0 should be affected. As a workaround, in `pam_pkcs11.conf`, set at least `cert_policy = signature;`.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-24528",
      "Description": "unknown",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-24855",
      "Description": "numbers.c in libxslt before 1.1.43 has a use-after-free because, in nested XPath evaluations, an XPath context node can be modified but never restored. This is related to xsltNumberFormatGetValue, xsltEvalXPathPredicate, xsltEvalXPathStringNs, and xsltComputeSortResultInternal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-24928",
      "Description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a stack-based buffer overflow in xmlSnprintfElements in valid.c. To exploit this, DTD validation must occur for an untrusted document or untrusted DTD. NOTE: this is similar to CVE-2017-9047.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-25184",
      "Description": "Rack provides an interface for developing web applications in Ruby. Prior to versions 2.2.11, 3.0.12, and 3.1.10, Rack::CommonLogger can be exploited by crafting input that includes newline characters to manipulate log entries. The supplied proof-of-concept demonstrates injecting malicious content into logs. When a user provides the authorization credentials via Rack::Auth::Basic, if success, the username will be put in env['REMOTE_USER'] and later be used by Rack::CommonLogger for logging purposes. The issue occurs when a server intentionally or unintentionally allows a user creation with the username contain CRLF and white space characters, or the server just want to log every login attempts. If an attacker enters a username with CRLF character, the logger will log the malicious username with CRLF characters into the logfile. Attackers can break log formats or insert fraudulent entries, potentially obscuring real activity or injecting malicious data into log files. Versions 2.2.11, 3.0.12, and 3.1.10 contain a fix.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-26465",
      "Description": "A vulnerability was found in OpenSSH when the VerifyHostKeyDNS option is enabled. A machine-in-the-middle attack can be performed by a malicious machine impersonating a legit server. This issue occurs due to how OpenSSH mishandles error codes in specific conditions when verifying the host key. For an attack to be considered successful, the attacker needs to manage to exhaust the client's memory resource first, turning the attack complexity high.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-26595",
      "Description": "A buffer overflow flaw was found in X.Org and Xwayland. The code in XkbVModMaskText() allocates a fixed-sized buffer on the stack and copies the names of the virtual modifiers to that buffer. The code fails to check the bounds of the buffer and would copy the data regardless of the size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-26597",
      "Description": "A buffer overflow flaw was found in X.Org and Xwayland. If XkbChangeTypesOfKey() is called with a 0 group, it will resize the key symbols table to 0 but leave the key actions unchanged. If the same function is later called with a non-zero value of groups, this will cause a buffer overflow because the key actions are of the wrong size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27111",
      "Description": "Rack is a modular Ruby web server interface. The Rack::Sendfile middleware logs unsanitised header values from the X-Sendfile-Type header. An attacker can exploit this by injecting escape sequences (such as newline characters) into the header, resulting in log injection. This vulnerability is fixed in 2.2.12, 3.0.13, and 3.1.11.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27113",
      "Description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a NULL pointer dereference in xmlPatMatch in pattern.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27363",
      "Description": "An out of bounds write exists in FreeType versions 2.13.0 and below (newer versions of FreeType are not vulnerable) when attempting to parse font subglyph structures related to TrueType GX and variable font files. The vulnerable code assigns a signed short value to an unsigned long and then adds a static value causing it to wrap around and allocate too small of a heap buffer. The code then writes up to 6 signed long integers out of bounds relative to this buffer. This may result in arbitrary code execution. This vulnerability may have been exploited in the wild.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27516",
      "Description": "Jinja is an extensible templating engine. Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to use the |attr filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment's attribute lookup. This vulnerability is fixed in 3.1.6.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27610",
      "Description": "Rack provides an interface for developing web applications in Ruby. Prior to versions 2.2.13, 3.0.14, and 3.1.12, `Rack::Static` can serve files under the specified `root:` even if `urls:` are provided, which may expose other files under the specified `root:` unexpectedly. The vulnerability occurs because `Rack::Static` does not properly sanitize user-supplied paths before serving files. Specifically, encoded path traversal sequences are not correctly validated, allowing attackers to access files outside the designated static file directory. By exploiting this vulnerability, an attacker can gain access to all files under the specified `root:` directory, provided they are able to determine then path of the file. Versions 2.2.13, 3.0.14, and 3.1.12 contain a patch for the issue. Other mitigations include removing usage of `Rack::Static`, or ensuring that `root:` points at a directory path which only contains files which should be accessed publicly. It is likely that a CDN or similar static file server would also mitigate the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-30472",
      "Description": "Corosync through 3.1.9, if encryption is disabled or the attacker knows the encryption key, has a stack-based buffer overflow in orf_token_endian_convert in exec/totemsrp.c via a large UDP packet.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "critical"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}