{
  "Title": "Security update for git",
  "Tracking": {
    "ID": "SUSE-SU-2025:20049-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2025-02-03T08:55:36Z",
    "CurrentReleaseDate": "2025-02-03T08:55:36Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-02-03T08:55:36Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for git",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for git fixes the following issues:\n\ngit was updated to 2.45.1:\n\n * CVE-2024-32002: recursive clones on case-insensitive\n   filesystems that support symbolic links are susceptible to case\n   confusion (bsc#1224168)\n * CVE-2024-32004: arbitrary code execution during local clones\n   (bsc#1224170)\n * CVE-2024-32020: file overwriting vulnerability during local\n   clones (bsc#1224171)\n * CVE-2024-32021: git may create hardlinks to arbitrary user-\n   readable files (bsc#1224172)\n * CVE-2024-32465: arbitrary code execution during clone operations\n   (bsc#1224173)\n\nUpdate to 2.45.0:\n\n  * Improved efficiency managing repositories with many references\n    (\"git init --ref-format=reftable\")\n  * \"git checkout -p\" and friends learned that that \"@\" is a\n    synonym for \"HEAD\"\n  * cli improvements handling refs\n  * Expanded a number of commands and options, UI improvements\n  * status.showUntrackedFiles now accepts \"true\"\n  * git-cherry-pick(1) now automatically drops redundant commits\n    with new --empty option\n  * The userdiff patterns for C# has been updated.\n\nUpdate to 2.44.0:\n\n  * \"git checkout -B \u003cbranch\u003e\" now longer allows switching to a\n    branch that is in use on another worktree. The users need to\n    use \"--ignore-other-worktrees\" option.\n  * Faster server-side rebases with git replay\n  * Faster pack generation with multi-pack reuse\n  * rebase auto-squashing now works in non-interactive mode\n  * pathspec now understands attr, e.g. ':(attr:~binary) for\n    selecting non-binaries, or builtin_objectmode for selecting\n    items by file mode or other properties\n  * Many other cli UI and internal improvements and extensions\n\n- Do not replace apparmor configuration, fixes bsc#1216545\n\nUpdate to 2.43.2:\n\n  * https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.43.2.txt\n  * Update to a new feature recently added, \"git show-ref --exists\".\n  * Rename detection logic ignored the final line of a file if it\n    is an incomplete line.\n  * \"git diff --no-rename A B\" did not disable rename detection but\n    did not trigger an error from the command line parser.\n  * \"git diff --no-index file1 file2\" segfaulted while invoking the\n    external diff driver, which has been corrected.\n  * A failed \"git tag -s\" did not necessarily result in an error\n    depending on the crypto backend, which has been corrected.\n  * \"git stash\" sometimes was silent even when it failed due to\n    unwritable index file, which has been corrected.\n  * Recent conversion to allow more than 0/1 in GIT_FLUSH broke the\n    mechanism by flipping what yes/no means by mistake, which has\n    been corrected.\n\nUpdate to 2.43.1:\n\n  * https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.43.1.txt\n\n- gitweb AppArmor profile: allow reading etc/gitweb-common.conf\n  (bsc#1218664)\n\n- git moved to /usr/libexec/git/git, update AppArmor profile\n  accordingly (bsc#1218588)\n\nUpdate to 2.43.0:\n\n * The \"--rfc\" option of \"git format-patch\" used to be a valid way to\n   override an earlier \"--subject-prefix=\u003csomething\u003e\" on the command\n   line and replace it with \"[RFC PATCH]\", but from this release, it\n   merely prefixes the string \"RFC \" in front of the given subject\n   prefix.  If you are negatively affected by this change, please use\n   \"--subject-prefix=PATCH --rfc\" as a replacement.\n * In Git 2.42, \"git rev-list --stdin\" learned to take non-revisions\n   (like \"--not\") from the standard input, but the way such a \"--not\" was\n   handled was quite confusing, which has been rethought.  The updated\n   rule is that \"--not\" given from the command line only affects revs\n   given from the command line that comes but not revs read from the\n   standard input, and \"--not\" read from the standard input affects\n   revs given from the standard input and not revs given from the\n   command line.\n * A message written in olden time prevented a branch from getting\n   checked out, saying it is already checked out elsewhere. But these\n   days, we treat a branch that is being bisected or rebased just like\n   a branch that is checked out and protect it from getting modified\n   with the same codepath.  The message has been rephrased to say that\n   the branch is \"in use\" to avoid confusion.\n * Hourly and other schedules of \"git maintenance\" jobs are randomly\n   distributed now.\n * \"git cmd -h\" learned to signal which options can be negated by\n   listing such options like \"--[no-]opt\".\n * The way authentication related data other than passwords (e.g.,\n   oauth token and password expiration data) are stored in libsecret\n   keyrings has been rethought.\n * Update the libsecret and wincred credential helpers to correctly\n   match which credential to erase; they erased the wrong entry in\n   some cases.\n * Git GUI updates.\n * \"git format-patch\" learned a new \"--description-file\" option that\n   lets cover letter description to be fed; this can be used on\n   detached HEAD where there is no branch description available, and\n   also can override the branch description if there is one.\n * Use of the \"--max-pack-size\" option to allow multiple packfiles to\n   be created is now supported even when we are sending unreachable\n   objects to cruft packs.\n * \"git format-patch --rfc --subject-prefix=\u003cfoo\u003e\" used to ignore the\n   \"--subject-prefix\" option and used \"[RFC PATCH]\"; now we will add\n   \"RFC\" prefix to whatever subject prefix is specified.\n * \"git log --format\" has been taught the %(decorate) placeholder for\n   further customization over what the \"--decorate\" option offers.\n * The default log message created by \"git revert\", when reverting a\n   commit that records a revert, has been tweaked, to encourage people\n   to describe complex \"revert of revert of revert\" situations better in\n   their own words.\n * The command-line completion support (in contrib/) learned to\n   complete \"git commit --trailer=\" for possible trailer keys.\n * \"git update-index\" learned the \"--show-index-version\" option to\n   inspect the index format version used by the on-disk index file.\n * \"git diff\" learned the \"diff.statNameWidth\" configuration variable,\n   to give the default width for the name part in the \"--stat\" output.\n * \"git range-diff --notes=foo\" compared \"log --notes=foo --notes\" of\n   the two ranges, instead of using just the specified notes tree,\n   which has been corrected to use only the specified notes tree.\n * The command line completion script (in contrib/) can be told to\n   complete aliases by including \": git \u003ccmd\u003e ;\" in the alias to tell\n   it that the alias should be completed in a similar way to how \"git\n   \u003ccmd\u003e\" is completed.  The parsing code for the alias has been\n   loosened to allow ';' without an extra space before it.\n * \"git for-each-ref\" and friends learned to apply mailmap to\n   authorname and other fields in a more flexible way than using\n   separate placeholder letters like %a[eElL] every time we want to\n   come up with small variants.\n * \"git repack\" machinery learned to pay attention to the \"--filter=\"\n   option.\n * \"git repack\" learned the \"--max-cruft-size\" option to prevent cruft\n   packs from growing without bounds.\n * \"git merge-tree\" learned to take strategy backend specific options\n   via the \"-X\" option, like \"git merge\" does.\n * \"git log\" and friends learned the \"--dd\" option that is a\n   short-hand for \"--diff-merges=first-parent -p\".\n * The attribute subsystem learned to honor the \"attr.tree\"\n   configuration variable that specifies which tree to read the\n   .gitattributes files from.\n * \"git merge-file\" learns a mode to read three variants of the\n   contents to be merged from blob objects.\n * see https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.43.0.txt\n\nUpdate 2.42.1:\n\n  * Fix \"git diff\" exit code handling\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-SLE-Micro-6.0-48",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "git-2.45.1-1.1",
        "RelatesToProductReference": "SUSE Linux Micro 6.0",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "git-core-2.45.1-1.1",
        "RelatesToProductReference": "SUSE Linux Micro 6.0",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-Git-2.45.1-1.1",
        "RelatesToProductReference": "SUSE Linux Micro 6.0",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2025/suse-su-202520049-1/",
      "Description": "Link for SUSE-SU-2025:20049-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2025-June/021288.html",
      "Description": "E-Mail link for SUSE-SU-2025:20049-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1042640",
      "Description": "SUSE Bug 1042640"
    },
    {
      "URL": "https://bugzilla.suse.com/1061041",
      "Description": "SUSE Bug 1061041"
    },
    {
      "URL": "https://bugzilla.suse.com/1069468",
      "Description": "SUSE Bug 1069468"
    },
    {
      "URL": "https://bugzilla.suse.com/1082023",
      "Description": "SUSE Bug 1082023"
    },
    {
      "URL": "https://bugzilla.suse.com/1216545",
      "Description": "SUSE Bug 1216545"
    },
    {
      "URL": "https://bugzilla.suse.com/1218588",
      "Description": "SUSE Bug 1218588"
    },
    {
      "URL": "https://bugzilla.suse.com/1218664",
      "Description": "SUSE Bug 1218664"
    },
    {
      "URL": "https://bugzilla.suse.com/1224168",
      "Description": "SUSE Bug 1224168"
    },
    {
      "URL": "https://bugzilla.suse.com/1224170",
      "Description": "SUSE Bug 1224170"
    },
    {
      "URL": "https://bugzilla.suse.com/1224171",
      "Description": "SUSE Bug 1224171"
    },
    {
      "URL": "https://bugzilla.suse.com/1224172",
      "Description": "SUSE Bug 1224172"
    },
    {
      "URL": "https://bugzilla.suse.com/1224173",
      "Description": "SUSE Bug 1224173"
    },
    {
      "URL": "https://bugzilla.suse.com/779536",
      "Description": "SUSE Bug 779536"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2005-4900/",
      "Description": "SUSE CVE CVE-2005-4900 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2017-14867/",
      "Description": "SUSE CVE CVE-2017-14867 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-32002/",
      "Description": "SUSE CVE CVE-2024-32002 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-32004/",
      "Description": "SUSE CVE CVE-2024-32004 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-32020/",
      "Description": "SUSE CVE CVE-2024-32020 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-32021/",
      "Description": "SUSE CVE CVE-2024-32021 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-32465/",
      "Description": "SUSE CVE CVE-2024-32465 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2005-4900",
      "Description": "SHA-1 is not collision resistant, which makes it easier for context-dependent attackers to conduct spoofing attacks, as demonstrated by attacks on the use of SHA-1 in TLS 1.2.  NOTE: this CVE exists to provide a common identifier for referencing this SHA-1 issue; the existence of an identifier is not, by itself, a technology recommendation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2005-4900.html",
          "Description": "CVE-2005-4900"
        },
        {
          "URL": "https://bugzilla.suse.com/1026646",
          "Description": "SUSE Bug 1026646"
        },
        {
          "URL": "https://bugzilla.suse.com/1026936",
          "Description": "SUSE Bug 1026936"
        },
        {
          "URL": "https://bugzilla.suse.com/1042640",
          "Description": "SUSE Bug 1042640"
        },
        {
          "URL": "https://bugzilla.suse.com/1150998",
          "Description": "SUSE Bug 1150998"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2017-14867",
      "Description": "Git before 2.10.5, 2.11.x before 2.11.4, 2.12.x before 2.12.5, 2.13.x before 2.13.6, and 2.14.x before 2.14.2 uses unsafe Perl scripts to support subcommands such as cvsserver, which allows attackers to execute arbitrary OS commands via shell metacharacters in a module name. The vulnerable code is reachable via git-shell even without CVS support.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2017-14867.html",
          "Description": "CVE-2017-14867"
        },
        {
          "URL": "https://bugzilla.suse.com/1060377",
          "Description": "SUSE Bug 1060377"
        },
        {
          "URL": "https://bugzilla.suse.com/1060378",
          "Description": "SUSE Bug 1060378"
        },
        {
          "URL": "https://bugzilla.suse.com/1061041",
          "Description": "SUSE Bug 1061041"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "9",
        "Vector": "AV:N/AC:L/Au:S/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2024-32002",
      "Description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-32002.html",
          "Description": "CVE-2024-32002"
        },
        {
          "URL": "https://bugzilla.suse.com/1224168",
          "Description": "SUSE Bug 1224168"
        },
        {
          "URL": "https://bugzilla.suse.com/1224170",
          "Description": "SUSE Bug 1224170"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32004",
      "Description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-32004.html",
          "Description": "CVE-2024-32004"
        },
        {
          "URL": "https://bugzilla.suse.com/1224170",
          "Description": "SUSE Bug 1224170"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32020",
      "Description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-32020.html",
          "Description": "CVE-2024-32020"
        },
        {
          "URL": "https://bugzilla.suse.com/1224171",
          "Description": "SUSE Bug 1224171"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32021",
      "Description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-32021.html",
          "Description": "CVE-2024-32021"
        },
        {
          "URL": "https://bugzilla.suse.com/1224172",
          "Description": "SUSE Bug 1224172"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-32465",
      "Description": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-32465.html",
          "Description": "CVE-2024-32465"
        },
        {
          "URL": "https://bugzilla.suse.com/1224170",
          "Description": "SUSE Bug 1224170"
        },
        {
          "URL": "https://bugzilla.suse.com/1224173",
          "Description": "SUSE Bug 1224173"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:git-2.45.1-1.1",
            "SUSE Linux Micro 6.0:git-core-2.45.1-1.1",
            "SUSE Linux Micro 6.0:perl-Git-2.45.1-1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}