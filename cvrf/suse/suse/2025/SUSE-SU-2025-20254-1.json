{
  "Title": "Security update for python-Jinja2",
  "Tracking": {
    "ID": "SUSE-SU-2025:20254-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2025-03-28T13:55:44Z",
    "CurrentReleaseDate": "2025-03-28T13:55:44Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-03-28T13:55:44Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for python-Jinja2",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for python-Jinja2 fixes the following issues:\n\n- CVE-2025-27516: Fixed Jinja sandbox breakout through attr filter selecting format method  (bsc#1238879)\n- CVE-2024-56201: Fixed sandbox breakout through malicious content and filename of a template  (bsc#1234808)\n- CVE-2024-56326: Fixed sandbox breakout through indirect reference to format method (bsc#1234809)\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-SLE-Micro-6.1-52",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "python311-Jinja2-3.1.4-slfo.1.1_2.1",
        "RelatesToProductReference": "SUSE Linux Micro 6.1",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2025/suse-su-202520254-1/",
      "Description": "Link for SUSE-SU-2025:20254-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2025-June/021063.html",
      "Description": "E-Mail link for SUSE-SU-2025:20254-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1234808",
      "Description": "SUSE Bug 1234808"
    },
    {
      "URL": "https://bugzilla.suse.com/1234809",
      "Description": "SUSE Bug 1234809"
    },
    {
      "URL": "https://bugzilla.suse.com/1238879",
      "Description": "SUSE Bug 1238879"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-56201/",
      "Description": "SUSE CVE CVE-2024-56201 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-56326/",
      "Description": "SUSE CVE CVE-2024-56326 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-27516/",
      "Description": "SUSE CVE CVE-2025-27516 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2024-56201",
      "Description": "Jinja is an extensible templating engine. In versions on the 3.x branch prior to 3.1.5, a bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used. To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename. This vulnerability is fixed in 3.1.5.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-56201.html",
          "Description": "CVE-2024-56201"
        },
        {
          "URL": "https://bugzilla.suse.com/1234808",
          "Description": "SUSE Bug 1234808"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:python311-Jinja2-3.1.4-slfo.1.1_2.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56326",
      "Description": "Jinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-56326.html",
          "Description": "CVE-2024-56326"
        },
        {
          "URL": "https://bugzilla.suse.com/1234809",
          "Description": "SUSE Bug 1234809"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:python311-Jinja2-3.1.4-slfo.1.1_2.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27516",
      "Description": "Jinja is an extensible templating engine. Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to use the |attr filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment's attribute lookup. This vulnerability is fixed in 3.1.6.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-27516.html",
          "Description": "CVE-2025-27516"
        },
        {
          "URL": "https://bugzilla.suse.com/1238879",
          "Description": "SUSE Bug 1238879"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:python311-Jinja2-3.1.4-slfo.1.1_2.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}