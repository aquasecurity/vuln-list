{
  "Title": "Security update for skopeo",
  "Tracking": {
    "ID": "SUSE-SU-2025:20179-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2025-04-07T09:36:08Z",
    "CurrentReleaseDate": "2025-04-07T09:36:08Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-04-07T09:36:08Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for skopeo",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for skopeo fixes the following issues:\n\n- CVE-2025-22870: golang.org/x/net/proxy: proxy bypass using IPv6 zone IDs  (bsc#1238685)\n- CVE-2025-27144: gopkg.in/square/go-jose.v2,gopkg.in/go-jose/go-jose.v2,github.com/go-jose/go-jose/v4,github.com/go-jose/go-jose/v3: Go JOSE's Parsing Vulnerable to Denial of Service  (bsc#1237613)\n- CVE-2024-6104: hashicorp/go-retryablehttp: url might write sensitive information to log file (bsc#1227056)\n- CVE-2023-45288: golang.org/x/net/http2: close connections when receiving too many headers (bsc#1236483)\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-SLE-Micro-6.0-278",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "skopeo-1.14.4-3.1",
        "RelatesToProductReference": "SUSE Linux Micro 6.0",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2025/suse-su-202520179-1/",
      "Description": "Link for SUSE-SU-2025:20179-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-security-updates/2025-June/021165.html",
      "Description": "E-Mail link for SUSE-SU-2025:20179-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1227056",
      "Description": "SUSE Bug 1227056"
    },
    {
      "URL": "https://bugzilla.suse.com/1236483",
      "Description": "SUSE Bug 1236483"
    },
    {
      "URL": "https://bugzilla.suse.com/1237613",
      "Description": "SUSE Bug 1237613"
    },
    {
      "URL": "https://bugzilla.suse.com/1238685",
      "Description": "SUSE Bug 1238685"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2023-45288/",
      "Description": "SUSE CVE CVE-2023-45288 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-6104/",
      "Description": "SUSE CVE CVE-2024-6104 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-22870/",
      "Description": "SUSE CVE CVE-2025-22870 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-27144/",
      "Description": "SUSE CVE CVE-2025-27144 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2023-45288",
      "Description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2023-45288.html",
          "Description": "CVE-2023-45288"
        },
        {
          "URL": "https://bugzilla.suse.com/1221400",
          "Description": "SUSE Bug 1221400"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:skopeo-1.14.4-3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6104",
      "Description": "go-retryablehttp prior to 0.7.7 did not sanitize urls when writing them to its log file. This could lead to go-retryablehttp writing sensitive HTTP basic auth credentials to its log file. This vulnerability, CVE-2024-6104, was fixed in go-retryablehttp 0.7.7.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-6104.html",
          "Description": "CVE-2024-6104"
        },
        {
          "URL": "https://bugzilla.suse.com/1227024",
          "Description": "SUSE Bug 1227024"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:skopeo-1.14.4-3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22870",
      "Description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-22870.html",
          "Description": "CVE-2025-22870"
        },
        {
          "URL": "https://bugzilla.suse.com/1238572",
          "Description": "SUSE Bug 1238572"
        },
        {
          "URL": "https://bugzilla.suse.com/1238611",
          "Description": "SUSE Bug 1238611"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:skopeo-1.14.4-3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27144",
      "Description": "Go JOSE provides an implementation of the Javascript Object Signing and Encryption set of standards in Go, including support for JSON Web Encryption (JWE), JSON Web Signature (JWS), and JSON Web Token (JWT) standards. In versions on the 4.x branch prior to version 4.0.5, when parsing compact JWS or JWE input, Go JOSE could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of `.` characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service. Version 4.0.5 fixes this issue. As a workaround, applications could pre-validate that payloads passed to Go JOSE do not contain an excessive number of `.` characters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-27144.html",
          "Description": "CVE-2025-27144"
        },
        {
          "URL": "https://bugzilla.suse.com/1237608",
          "Description": "SUSE Bug 1237608"
        },
        {
          "URL": "https://bugzilla.suse.com/1237609",
          "Description": "SUSE Bug 1237609"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.0:skopeo-1.14.4-3.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}