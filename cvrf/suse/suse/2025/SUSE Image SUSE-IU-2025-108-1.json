{
  "Title": "SUSE-IU-2025:108-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2025:108-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2025-01-09T01:00:00Z",
    "CurrentReleaseDate": "2025-01-09T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-08-25T14:57:28Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2025:108-1 / google/sles-15-sp4-hardened-byos-v20250109-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-15-sp4-hardened-byos-v20250109-x86-64 contains the following changes:\nPackage aaa_base was updated:\n\n- Add patch git-50-845b509c9a005340a0455cb8a7fe084d1b8f1946.patch  * Add mc helpers for both tcsh and bash resources (boo#1203617)\n\nPackage bash was updated:\n\n- Add patch boo1227807.patch  * Load completion file eveh if a brace expansion is in the\n    command line included (boo#1227807)\n\nPackage bind was updated:\n\n- Update to release 9.16.50  Bug Fixes:\n  * A regression in cache-cleaning code enabled memory use to grow\n    significantly more quickly than before, until the configured\n    max-cache-size limit was reached. This has been fixed.\n  * Using rndc flush inadvertently caused cache cleaning to become\n    less effective. This could ultimately lead to the configured\n    max-cache-size limit being exceeded and has now been fixed.\n  * The logic for cleaning up expired cached DNS records was\n    tweaked to be more aggressive. This change helps with enforcing\n    max-cache-ttl and max-ncache-ttl in a timely manner.\n  * It was possible to trigger a use-after-free assertion when the\n    overmem cache cleaning was initiated. This has been fixed.\n  New Features:\n  * Added RESOLVER.ARPA to the built in empty zones.\n- Security Fixes:\n  * It is possible to craft excessively large numbers of resource\n    record types for a given owner name, which has the effect of\n    slowing down database processing. This has been addressed by\n    adding a configurable limit to the number of records that can\n    be stored per name and type in a cache or zone database. The\n    default is 100, which can be tuned with the new\n    max-types-per-name option. (CVE-2024-1737)\n    [bsc#1228256, bind-9.16-CVE-2024-1737.patch]\n  * Validating DNS messages signed using the SIG(0) protocol (RFC\n    2931) could cause excessive CPU load, leading to a\n    denial-of-service condition. Support for SIG(0) message\n    validation was removed from this version of named.\n    (CVE-2024-1975)\n    [bsc#1228257, bind-9.16-CVE-2024-1975.patch]\n  * When looking up the NS records of parent zones as part of\n    looking up DS records, it was possible for named to trigger an\n    assertion failure if serve-stale was enabled. This has been\n    fixed. (CVE-2024-4076)\n    [bsc#1228258, bind-9.16-CVE-2024-4076.patch]\n\nPackage binutils was updated:\n\n- Update to current 2.43.1 branch [PED-10254, PED-10306]:  * s390 - Add arch15 instructions\n  * various fixes from upstream: PR32153, PR32171, PR32189,\n    PR32196, PR32191, PR32109, PR32372, PR32387\n- Adjusted binutils-2.43-branch.diff.gz.\n- Disable zstd-by-default again (needs adjustments in at least\n  golang,llvm15,llvm17 first)\n- Add binutils-fix-branch.diff.\n- Check non-changing of flex/bison inputs only after applying\n  branch and fix-branch diffs.\n\n- drop ld-relro.diff (relro is the default for some time)\n  and it warns on avr spuriously (bsc#1233520)\n\n- Add loongarch64 as new target\n\n- Enable zstd compression algorithm (instead of zlib)\n  for debug info sections by default.\n\n- Update to current 2.43.1 branch [PED-10474]:\n  * PR32109 - fuzzing problem\n  * PR32083 - LTO vs overridden common symbols\n  * PR32067 - crash with LTO-plugin and --oformat=binary\n  * PR31956 - LTO vs wrapper symbols\n  * riscv - add Zimop and Zcmop extensions\n- Adjusted binutils-2.43-branch.diff.gz.\n\n- Update to version 2.43:\n  * new .base64 pseudo-op, allowing base64 encoded data as strings\n  * Intel APX: add support for CFCMOV, CCMP, CTEST, zero-upper, NF\n    (APX_F now fully supported)\n  * x86 Intel syntax now warns about more mnemonic suffixes\n  * macros and .irp/.irpc/.rept bodies can use \\+ to get at number\n    of times the macro/body was executed\n  * aarch64: support 'armv9.5-a' for -march, add support for LUT\n    and LUT2\n  * s390: base register operand in D(X,B) and D(L,B) can now be\n    omitted (ala 'D(X,)'); warn when register type doesn't match\n    operand type (use option\n    'warn-regtype-mismatch=[strict|relaxed|no]' to adjust)\n  * riscv: support various extensions: Zacas, Zcmp, Zfbfmin,\n    Zvfbfmin, Zvfbfwma, Smcsrind/Sscsrind, XCvMem, XCvBi, XCvElw,\n    XSfCease, all at version 1.0;\n    remove support for assembly of privileged spec 1.9.1 (linking\n    support remains)\n  * arm: remove support for some old co-processors: Maverick and FPA\n  * mips: '--trap' now causes either trap or breakpoint instructions\n    to be emitted as per current ISA, instead of always using trap\n    insn and failing when current ISA was incompatible with that\n  * LoongArch: accept .option pseudo-op for fine-grained control\n    of assembly code options; add support for DT_RELR\n  * readelf: now displays RELR relocations in full detail;\n    add -j/--display-section to show just those section(s) content\n    according to their type\n  * objdump/readelf now dump also .eh_frame_hdr (when present) when\n    dumping .eh_frame\n  * gprofng: add event types for AMD Zen3/Zen4 and Intel Ice Lake\n    processors; add minimal support for riscv\n  * linker:\n  - put .got and .got.plt into relro segment\n  - add -z isa-level-report=[none|all|needed|used] to the x86 ELF\n    linker to report needed and used x86-64 ISA levels\n  - add --rosegment option which changes the -z separate-code\n    option so that only one read-only segment is created (instead\n    of two)\n  - add --section-ordering-file \u0026lt;FILE\u0026gt; option to add extra\n    mapping of input sections to output sections\n  - add -plugin-save-temps to store plugin intermediate files\n    permanently\n- Removed binutils-2.42.tar.bz2, binutils-2.42-branch.diff.gz.\n- Added binutils-2.43.tar.bz2, binutils-2.43-branch.diff.gz.\n- Removed upstream patch riscv-no-relax.patch.\n- Rebased ld-relro.diff and binutils-revert-rela.diff.\n\n- binutils-pr22868.diff: Remove obsolete patch\n- Undefine _FORTIFY_SOURCE when running checks\n\n- Allow to disable profiling\n\n- Use %patch -P N instead of deprecated %patchN.\n\n- riscv-no-relax.patch: RISC-V: Don't generate branch/jump relocation if\n  symbol is local when no-relax\n\n- Add binutils-disable-code-arch-error.diff to demote an\n  error about swapped .arch/.code directives to a warning.\n  It happens in the wild.\n\n- Update to version 2.42:\n  * Add support for many aarch64 extensions: SVE2.1, SME2.1, B16B16,\n  RASv2, LSE128, GCS, CHK, SPECRES2, LRCPC3, THE, ITE, D128, XS and\n  flags to enable them: '+fcma', '+jscvt', '+frintts', '+flagm2',\n  '+rcpc2' and '+wfxt'\n  * Add experimantal support for GAS to synthesize call-frame-info for\n  some hand-written asm (--scfi=experimental) on x86-64.\n  * Add support for more x86-64 extensions: APX: 32 GPRs, NDD, PUSH2/POP2,\n  PUSHP/POPP; USER_MSR, AVX10.1, PBNDKB, SM4, SM3, SHA512, AVX-VNNI-INT16.\n  * Add support for more RISC-V extensions: T-Head v2.3.0, CORE-V v1.0,\n  SiFive VCIX v1.0.\n  * BPF assembler: ';' separates statements now, and does not introduce\n  line comments anymore (use '#' or '//' for this).\n  * x86-64 ld: Add '-z mark-plt/-z nomark-plt' to mark PLT entries with\n  dynamic tags.\n  * risc-v ld: Add '--[no-]check-uleb128'.\n  * New linker script directive: REVERSE, to be combined with SORT_BY_NAME\n  or SORT_BY_INIT_PRIORITY, reverses the generated order.\n  * New linker options --warn-execstack-objects (warn only about execstack\n  when input object files request it), and --error-execstack plus\n  - -error-rxw-segments to convert the existing warnings into errors.\n  * objdump: Add -Z/--decompress to be used with -s/--full-contents to\n  decompress section contents before displaying.\n  * readelf: Add --extra-sym-info to be used with --symbols (currently\n  prints section name of references section index).\n  * objcopy: Add --set-section-flags for x86_64 to include\n  SHF_X86_64_LARGE.\n  * s390 disassembly: add target-specific disasm option 'insndesc',\n  as in \u0026quot;objdump -M insndesc\u0026quot; to display an instruction description\n  as comment along with the disassembly.\n- Add binutils-2.42-branch.diff.gz.\n- Rebased s390-biarch.diff.\n- Adjusted binutils-revert-hlasm-insns.diff,\n  binutils-revert-plt32-in-branches.diff and binutils-revert-rela.diff\n  for upstream changes.\n- Removed binutils-2.41-branch.diff.gz, binutils-2.41.tar.bz2,\n  binutils-2.41-branch.diff.gz.\n- Removed binutils-use-less-memory.diff, binutils-old-makeinfo.diff\n  and riscv-relro.patch (all upstreamed).\n- Removed add-ulp-section.diff, we use a different mechanism\n  for live patching since a long time.\n\n- Add binutils-use-less-memory.diff to be a little nicer to 32bit\n  userspace and huge links.  [bsc#1216908]\n\n- riscv-relro.patch: RISC-V: Protect .got with relro\n\n- Add libzstd-devel to Requires of binutils-devel. (bsc#1215341)\n\nPackage ca-certificates-mozilla was updated:\n\n- Updated to 2.68 state of Mozilla SSL root CAs (bsc#1227525)  - Added: FIRMAPROFESIONAL CA ROOT-A WEB\n  - Distrust: GLOBALTRUST 2020\n\n- Updated to 2.66 state of Mozilla SSL root CAs (bsc#1220356)\n  Added:\n  - CommScope Public Trust ECC Root-01\n  - CommScope Public Trust ECC Root-02\n  - CommScope Public Trust RSA Root-01\n  - CommScope Public Trust RSA Root-02\n  - D-Trust SBR Root CA 1 2022\n  - D-Trust SBR Root CA 2 2022\n  - Telekom Security SMIME ECC Root 2021\n  - Telekom Security SMIME RSA Root 2023\n  - Telekom Security TLS ECC Root 2020\n  - Telekom Security TLS RSA Root 2023\n  - TrustAsia Global Root CA G3\n  - TrustAsia Global Root CA G4\n  Removed:\n  - Autoridad de Certificacion Firmaprofesional CIF A62634068\n  - Chambers of Commerce Root - 2008\n  - Global Chambersign Root - 2008\n  - Security Communication Root CA\n  - Symantec Class 1 Public Primary Certification Authority - G6\n  - Symantec Class 2 Public Primary Certification Authority - G6\n  - TrustCor ECA-1\n  - TrustCor RootCert CA-1\n  - TrustCor RootCert CA-2\n  - VeriSign Class 1 Public Primary Certification Authority - G3\n  - VeriSign Class 2 Public Primary Certification Authority - G3\n- remove-trustcor.patch: removed, now upstream\n- do a versioned obsoletes of \u0026quot;openssl-certs\u0026quot;.\n\nPackage cloud-regionsrv-client was updated:\n\n- Update to 10.3.7 (bsc#1232770)  + Fix the product triplet for LTSS, it is always SLES-LTSS, not\n    $BASEPRODUCT-LTSS\n\n- Update to 10.3.6 (jsc#PCT-471, bsc#1230615)\n  + Fix sudo setup\n    ~ permissions cloudguestregistryauth\n    ~ directory ownership /etc/sudoers.d\n  + spec file\n    ~ Remove traces of registry related entries on SLE 12\n  + Forward port\n    ~ fix-for-sles12-disable-registry.patch\n    ~ fix-for-sles12-no-trans_update.patch\n  + Deregister non free extensions at registercloudguest --clean\n  + Fix registry cleanup at registercloudguest --clean, don't remove files\n  + Prevent duplicate search entries in registry setup\n- Update EC2 plugin to 1.0.5\n  + Switch to using the region endpoint from IMDS to determine the region\n    instead of deriving the data from the availability zone\n\n- Update to 10.3.5\n  + Update spec file to build in all code streams,\n    SLE 12, SLE 15, ALP, and SLFO and have proper dependencies\n\n- Update to 10.3.4\n  + Modify the message when network access over a specific IP version does\n    not work. This is an informational message and should not look like\n    an error\n  + Inform the user that LTSS registration takes a little longer\n  + Add fix-for-sles12-no-trans_update.patch\n    + SLE 12 family has no products with transactional-update we do not\n    need to look for this condition\n- From 10.3.3 (bsc#1229472)\n  + Handle changes in process structure to properly identify the running\n    zypper parent process and only check for 1 PID\n- From 10.3.2\n  + Remove rgnsrv-clnt-fix-docker-setup.patch included upstream\n- From 10.3.1 (jsc#PCT-400)\n  + Add support for LTSS registration\n  + Add fix-for-sles12-disable-registry.patch\n    ~ No container support in SLE 12\n\n- Add rgnsrv-clnt-fix-docker-setup.patch (bsc#1229137)\n  + The entry for the update infrastructure registry mirror was written\n    incorrectly causing docker daemon startup to fail.\n\n- Update to version 10.3.0 (bsc#1227308, bsc#1222985)\n  + Add support for sidecar registry\n    Podman and rootless Docker support to set up the necessary\n    configuration for the container engines to run as defined\n  + Add running command as root through sudoers file\n\n- Update to version 10.2.0 (bsc#1223571, bsc#1224014, bsc#1224016)\n  + In addition to logging, write message to stderr when registration fails\n  + Detect transactional-update system with read only setup and use\n    the transactional-update command to register\n  + Handle operation in a different target root directory for credentials\n    checking\n\nPackage containerd was updated:\n\n- Update to containerd v1.7.21. Upstream release notes:  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.21\u0026gt;\n  Fixes CVE-2023-47108. bsc#1217070\n  Fixes CVE-2023-45142. bsc#1228553\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\nPackage cups was updated:\n\n- cups-branch-2.2-commit-b643d6ba92f00752aa5e74ff86ad3974334914c1.diff  is https://github.com/OpenPrinting/cups/commit/b643d6ba92f00752aa5e74ff86ad3974334914c1\n  which was added in CUPS 2.2.8 that\n  fixed a parsing bug in cups_auth_find() in cups/auth.c\n  which lead to cupsd failing to authenticate users\n  when group membership is required by cupsd configuration\n  like 'Require user @GROUP' which lead to CUPS related commands\n  requesting password from group users even if it is not needed\n  (bsc#1226227)\n- In cups.changes replaced one place where UTF-8 characters\n  were used in the entry dated \u0026quot;Sat Sep 30 08:52:42 UTC 2017\u0026quot;\n  for what should be ' - ' by ASCII to avoid RPMLINT warning\n  about 'non-break-space' which \u0026quot;can lead to obscure errors\u0026quot;.\n\nPackage curl was updated:\n\n- Security fix: [bsc#1234068, CVE-2024-11053]  * curl could leak the password used for the first host to the\n    followed-to host under certain circumstances.\n  * netrc: address several netrc parser flaws\n  * Add curl-CVE-2024-11053.patch\n\n- Security fix: [bsc#1232528, CVE-2024-9681]\n  * HSTS subdomain overwrites parent cache entry\n  * Add curl-CVE-2024-9681.patch\n\n- Make special characters in URL work with aws-sigv4 [bsc#1230516]\n  * http_aws_sigv4: canonicalize the query [fc76a24c]\n  * test439: verify query canonization for aws-sigv4 [65661016]\n  * http_aws_sigv4: skip the op if the query pair is zero bytes [16bdc09e]\n  * aws_sigv4: the query canon code miscounted URL encoded input [a1532a33]\n  * http_aws_sigv4: canonicalise valueless query params [bbba69da]\n  * aws-sigv4: url encode the canonical path [768909d8]\n  * Add upstream patches:\n  - curl-aws_sigv4-canonicalize-the-query.patch\n  - curl-aws_sigv4-verify-query-canonization.patch\n  - curl-aws_sigv4-skip-the-op-if-the-query-pair-is-zero-bytes.patch\n  - curl-aws_sigv4-the-query-canon-code-miscounted-url-encoded-input.patch\n  - curl-aws_sigv4-canonicalise-valueless-query-params.patch\n  - curl-aws_sigv4-url-encode-the-canonical-path.patch\n\n- Security fix: [bsc#1230093, CVE-2024-8096]\n  * curl: OCSP stapling bypass with GnuTLS\n  * Add curl-CVE-2024-8096.patch\n\n- Security fix: [bsc#1228535, CVE-2024-7264]\n  * curl: ASN.1 date parser overread\n  * Add curl-CVE-2024-7264.patch\n\nPackage deltarpm was updated:\n\n- update to deltarpm-3.6.5  * support for archive files bigger than 2GByte [bnc#1230547]\n\n- update to deltarpm-3.6.4\n  * support for threaded zstd\n  * use a tmp file instead of memory to hold the incore data\n    [bsc#1228948]\n- dropped patches:\n  * deltarpm-b7987f6aa4211df3df03dcfc55a00b2ce7472e0a.patch\n\n- deltarpm-b7987f6aa4211df3df03dcfc55a00b2ce7472e0a.patch: fixed\n  some C bugs ( incorrect sized memset() , memcpy instead of strcpy,\n  unsigned int)\n\n- update to deltarpm-3.6.3\n  * support for threaded zstd compression\n\n- Actually enable zstd compression\n\n- update to deltarpm-3.6.2\n  * support for zstd compression\n\nPackage dmidecode was updated:\n\n- Update to upstream version 3.6 (jsc#PED-8574):  * Support for SMBIOS 3.6.0. This includes new memory device types, new\n    processor upgrades, and Loongarch support.\n  * Support for SMBIOS 3.7.0. This includes new port types, new processor\n    upgrades, new slot characteristics and new fields for memory modules.\n  * Add bash completion.\n  * Decode HPE OEM records 197, 216, 224, 230, 238, 239, 242 and 245.\n  * Implement options --list-strings and --list-types.\n  * Update HPE OEM records 203, 212, 216, 221, 233 and 236.\n  * Update Redfish support.\n  * Bug fixes:\n    Fix enabled slot characteristics not being printed\n  * Minor improvements:\n    Print slot width on its own line\n    Use standard strings for slot width\n  * Add a --no-quirks option.\n  * Drop the CPUID exception list.\n  * Obsoletes dmidecode-do-not-let-dump-bin-overwrite-an-existing-file.patch,\n    dmidecode-fortify-entry-point-length-checks.patch,\n    dmidecode-split-table-fetching-from-decoding.patch,\n    dmidecode-write-the-whole-dump-file-at-once.patch,\n    dmioem-fix-segmentation-fault-in-dmi_hp_240_attr.patch,\n    dmioem-hpe-oem-record-237-firmware-change.patch,\n    dmioem-typo-fix-virutal-virtual.patch,\n    ensure-dev-mem-is-a-character-device-file.patch,\n    news-fix-typo.patch and\n    use-read_file-to-read-from-dump.patch.\n  Update for HPE servers from upstream:\n- dmioem-update-hpe-oem-type-238.patch: Decode PCI bus segment in\n  HPE type 238 records.\n\nPackage docker was updated:\n\n- Update docker-buildx to v0.19.2. See upstream changelog online at  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.19.2\u0026gt;.\n  Some notable changelogs from the last update:\n  * \u0026lt;https://github.com/docker/buildx/releases/tag/v0.19.0\u0026gt;\n  * \u0026lt;https://github.com/docker/buildx/releases/tag/v0.18.0\u0026gt;\n- Update to Go 1.22.\n\n- Add a new toggle file /etc/docker/suse-secrets-enable which allows users to\n  disable the SUSEConnect integration with Docker (which creates special mounts\n  in /run/secrets to allow container-suseconnect to authenticate containers\n  with registries on registered hosts). bsc#1231348 bsc#1232999\n  In order to disable these mounts, just do\n    echo 0 \u0026gt; /etc/docker/suse-secrets-enable\n  and restart Docker. In order to re-enable them, just do\n    echo 1 \u0026gt; /etc/docker/suse-secrets-enable\n  and restart Docker. Docker will output information on startup to tell you\n  whether the SUSE secrets feature is enabled or not.\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n\n- Disable docker-buildx builds for SLES. It turns out that build containers\n  with docker-buildx don't currently get the SUSE secrets mounts applied,\n  meaning that container-suseconnect doesn't work when building images.\n  bsc#1233819\n\n- Add docker-integration-tests-devel subpackage for building and running the\n  upstream Docker integration tests on machines to test that Docker works\n  properly. Users should not install this package.\n- docker-rpmlintrc updated to include allow-list for all of the integration\n  tests package, since it contains a bunch of stuff that wouldn't normally be\n  allowed.\n\n- Remove DOCKER_NETWORK_OPTS from docker.service. This was removed from\n  sysconfig a long time ago, and apparently this causes issues with systemd in\n  some cases.\n\n- Further merge docker and docker-stable specfiles to minimise the differences.\n  The main thing is that we now include both halves of the\n  Conflicts/Provides/Obsoletes dance in both specfiles.\n\n- Update to docker-buildx v0.17.1 to match standalone docker-buildx package we\n  are replacing. See upstream changelog online at\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.17.1\u0026gt;\n\n- Allow users to disable SUSE secrets support by setting\n  DOCKER_SUSE_SECRETS_ENABLE=0 in /etc/sysconfig/docker. bsc#1231348\n  bsc#1232999\n\n- Add %{_sysconfdir}/audit/rules.d to filelist.\n\n- Mark docker-buildx as required since classic \u0026quot;docker build\u0026quot; has been\n  deprecated since Docker 23.0. bsc#1230331\n- Import docker-buildx v0.16.2 as a subpackage. Previously this was a separate\n  package, but with docker-stable it will be necessary to maintain the packages\n  together and it makes more sense to have them live in the same OBS package.\n  bsc#1230333\n- Make some minor name macro updates to help with the docker-stable package\n  fork.\n\n- Update to Docker 26.1.5-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/26.1/#2615\u0026gt;\n  bsc#1230294\n- This update includes fixes for:\n  * CVE-2024-41110. bsc#1228324\n  * CVE-2023-47108. bsc#1217070\n  * CVE-2023-45142. bsc#1228553\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  * 0006-bsc1221916-update-to-patched-buildkit-version-to-fix.patch\n  * 0007-bsc1214855-volume-use-AtomicWriteFile-to-save-volume.patch\n  * cli-0001-docs-include-required-tools-in-source-tree.patch\n\nPackage dracut was updated:\n\n- Update to version 055+suse.359.geb85610b:  * fix(convertfs): error in conditional expressions (bsc#1228847)\n\nPackage e2fsprogs was updated:\n\n- resize2fs-Check-number-of-group-descriptors-only-if-.patch: resize2fs: Check  number of group descriptors only if meta_bg is disabled (bsc#1230145)\n\nPackage glib2 was updated:\n\n- Add glib2-CVE-2024-52533.patch: fix a single byte buffer overflow  (boo#1233282 CVE-2024-52533 glgo#GNOME/glib#3461).\n\n- Add glib2-gdbusmessage-cache-arg0.patch: cache the arg0 value in\n  a dbus message. Fixes a possible use after free (boo#1224044).\n\nPackage glibc was updated:\n\n- tcache-thread-shutdown.patch: malloc: Initiate tcache shutdown even  without allocations (bsc#1228661, BZ #28028)\n\n- s390x-wcsncmp.patch: s390x: Fix segfault in wcsncmp (bsc#1228043, BZ\n  [#31934])\n\nPackage google-guest-agent was updated:\n\n- Update to version 20241011.01 (bsc#1231775, bsc#1231776)  * SUSE no overwrite bug fix, Ubuntu 18.04 exception (#451)\n- from version 20241011.00\n  * Skip MDS setup by default for this release (#450)\n- from version 20241010.01\n  * Revert \u0026quot;network/netplan: Adjust link-local accordingly (#443)\u0026quot; (#448)\n  * Set enable regardless of previous check failed or not (#447)\n- from version 20241009.03\n  * Avoid unnecessary reloads, check before overwriting configs (#446)\n- from version 20241009.02\n  * network/netplan: Do generate instead of apply (#445)\n- from version 20241009.01\n  * Skip SetupInterfaces if configs are already applied (#444)\n  * network/netplan: Adjust link-local accordingly (#443)\n  * Repeated logging could be mistaken for a recurring issue,\n    log mds mtls endpoint error only once (#439)\n  * Retry MDS PUT operation, reload netplan/networkctl\n    only if configs are changed (#438)\n  * Log interface state after setting up network (#437)\n  * network: Debian 12 rollback only if default netplan is ok (#436)\n- from version 20240930.01\n  * Change mtls mds defaults, update log message to assure error is harmless (#434)\n- from version 20240930.00\n  * network: Restore Debian 12 netplan configuration. (#433)\n  * network: Remove primary NIC left over configs. (#432)\n  * Update VLAN interfaces format to match with MDS (#431)\n  * Fix panics in agent when setting up VLAN with netplan (#430)\n  * Add VLAN NIC support for NetworkManager (#429)\n  * Fix debian12 netplan config issue, use ptr receiver (#428)\n  * Update README to reflect new network manager changes (#427)\n  * Introduce a configuration toggle for enabling/disabling cloud logging (#413)\n  * Adapt and update config key to be consistent with MDS (#426)\n  * Allow users to enable/disable the mds mtls via metadata key (#423)\n  * Make primary nic management config consistent across all network managers (#422)\n  * Document disabling account manager on AD (#421)\n  * Update README with MDS MTLS docs (#418)\n  * Avoid writing configuration files when they already exist on wicked and (#410)\n  * Update golang.org/x/net dependencies to catch up on CVEs (#412)\n  * Get rid of deperecated dependencies in snapshot service generate code (#411)\n  * Fix where agent panics on nil event (#409)\n  * Configure primary nic if only set in cfg file (#408)\n  * Update NIC management strategy (#402)\n  * Only release dhclient leases for an interface if the\n    respective dhclient is still running (#407)\n  * Disable OS Login without pruning off any extra suffix. (#400)\n  * Skip root cert rotation if installed once (#405)\n  * Add ipv6 support to guest agent (#404)\n  * Update Accounts documentation (#403)\n  * Update google-startup-scripts.service to enable logging (#399)\n  * Network subsystem remove os rules (#396)\n  * oslogin: Don't remove sshca watcher when oslogin is disabled (#398)\n  * Update dependencies to catch up on CVE fixes (#397)\n  * Network manager netplan implementation (#386)\n  * Update dependencies to catch up on CVE fixes (#391)\n  * Log current available routes on error (#388)\n  * Fix command monitor bugs (#389)\n  * windows account: Ignore \u0026quot;user already belogs to group\u0026quot; error (#387)\n  * Add more error logging in snapshot handling requests, use common retry util (#384)\n  * All non-200 status code from MDS should raise error (#383)\n  * Change metadata key to enable-oslogin-certificates (#382)\n  * Update dhclient pid/lease file directory to abide apparmor rules (#381)\n  * Add COS homedir-gid patch to upstream. (#365)\n  * Add require-oslogin-certificates logic to disable keys (#368)\n  * systemd-networkd: Support Debian 12's version (#372)\n  * Minor update typo in comment (#380)\n  * NetworkManager: Only set secondary interfaces as up (#378)\n  * address manager: Make sure we check for oldMetadata (#375)\n  * network: Early setup network (#374)\n  * NetworkManager: Fix ipv6 and ipv4 mode attribute (#373)\n  * Network Manager: Make sure we clean up ifcfg files (#371)\n  * metadata script runner: Fix script download (#370)\n  * oslogin: Avoid adding extra empty line at the end of /etc/security/group.conf (#369)\n  * Dynamic vlan (#361)\n  * Check for nil response (#366)\n  * Create NetworkManager implementation (#362)\n  * Skip interface manager on Windows (#363)\n  * network: Remove ignore setup (#360)\n  * Create wicked network service implementation and its respective unit (#356)\n  * Update metadata script runner, add tests (#357)\n  * Refactor guest-agent to use common retry util (#355)\n  * Flush logs before exiting #358 (#359)\n  * Create systemd-networkd unit tests. (#354)\n  * Update network manager unit tests (#351)\n  * Implement retry util (#350)\n  * Refactor utils package to not dump everything unrelated into one file (#352)\n  * Set version on metadata script runner (#353)\n  * Implement cleanup of deprecated configuration directives (#348)\n  * Ignore DHCP offered routes only for secondary nics (#347)\n  * Deprecate DHClient in favor of systemd-networkd (#342)\n  * Generate windows and linux licenses (#346)\n  * Remove quintonamore from OWNERS (#345)\n  * Delete integration tests (#343)\n\n- Update to version 20240816.00\n  * Add configuration toggle to enable/disable use\n    of OS native certificate stores (#419)\n  * Fix dependencies in stable branch #412 (#415)\n  * Update dep: golang.org/x/crypto to v0.17.0\n  * Update dep: google.golang.org/protobuf to 1.33.0\n  * Update dep: golang.org/x/net to 0.17.0\n  * Update dep: google.golang.org/grpc to v1.57.1\n- from version 20240813.00\n  * Update README with MDS MTLS docs (#418)\n- from version 20240808.01\n  * Avoid writing configuration files when they already\n    exist on wicked and NetworkManager (#410)\n- from version 20240808.00\n  * Update golang.org/x/net dependencies\n    to catch up on CVEs (#412)\n- from version 20240805.00\n  * Get rid of deperecated dependencies in\n    snapshot service generate code (#411)\n- Drop dont_overwrite_ifcfg.patch, fixed upstream\n\n- Update to version 20240802.00\n  * Fix where agent panics on nil event (#409)\n- from version 20240801.00\n  * Configure primary nic if only set in cfg file (#408)\n  * Update NIC management strategy (#402)\n  * Only release dhclient leases for an interface if the respective dhclient is still running (#407)\n  * Disable OS Login without pruning off any extra suffix. (#400)\n  * Skip root cert rotation if installed once (#405)\n  * Add ipv6 support to guest agent (#404)\n  * Update Accounts documentation (#403)\n  * Update google-startup-scripts.service to enable logging (#399)\n  * Network subsystem remove os rules (#396)\n  * oslogin: don't remove sshca watcher when oslogin is disabled (#398)\n  * Update dependencies to catch up on CVE fixes (#397)\n  * Network manager netplan implementation (#386)\n  * Update dependencies to catch up on CVE fixes (#391)\n  * Log current available routes on error (#388)\n  * Fix command monitor bugs (#389)\n  * Windows account: ignore \u0026quot;user already belogs to group\u0026quot; error (#387)\n  * Add more error logging in snapshot handling requests, use common retry util (#384)\n  * All non-200 status code from MDS should raise error (#383)\n  * Change metadata key to enable-oslogin-certificates (#382)\n  * Update dhclient pid/lease file directory to abide apparmor rules (#381)\n  * Add COS homedir-gid patch to upstream. (#365)\n  * Add require-oslogin-certificates logic to disable keys (#368)\n  * systemd-networkd: support debian 12's version (#372)\n  * Minor update typo in comment (#380)\n  * NetworkManager: only set secondary interfaces as up (#378)\n  * address manager: make sure we check for oldMetadata (#375)\n  * network: early setup network (#374)\n  * NetworkManager: fix ipv6 and ipv4 mode attribute (#373)\n  * Network Manager: make sure we clean up ifcfg files (#371)\n  * metadata script runner: fix script download (#370)\n  * oslogin: avoid adding extra empty line at the end of /etc/security/group.conf (#369)\n  * Dynamic vlan (#361)\n  * Check for nil response (#366)\n  * Create NetworkManager implementation (#362)\n  * Skip interface manager on Windows (#363)\n  * network: remove ignore setup (#360)\n  * Create wicked network service implementation and its respective unit (#356)\n  * Update metadata script runner, add tests (#357)\n  * Refactor guest-agent to use common retry util (#355)\n  * Flush logs before exiting #358 (#359)\n  * Create systemd-networkd unit tests. (#354)\n  * Update network manager unit tests (#351)\n  * Implement retry util (#350)\n  * Refactor utils package to not dump everything unrelated into one file (#352)\n  * Set version on metadata script runner (#353)\n  * Implement cleanup of deprecated configuration directives (#348)\n  * Ignore DHCP offered routes only for secondary nics (#347)\n  * Deprecate DHClient in favor of systemd-networkd (#342)\n  * Generate windows and linux licenses (#346)\n  * Remove quintonamore from OWNERS (#345)\n  * Delete integration tests (#343)\n- from version 20240716.00\n  * Update dep: golang.org/x/crypto to v0.17.0\n  * Update dep: google.golang.org/protobuf to 1.33.0\n  * Update dep: golang.org/x/net to 0.17.0\n  * Update dep: google.golang.org/grpc to v1.57.1\n\n- Update to version 20240701.00\n  * Update google-startup-scripts.service to enable logging (#399)\n\n- Update to version 20240611.01\n  * Network subsystem remove os rules (#396)\n  * oslogin: don't remove sshca watcher when oslogin is disabled (#398)\n  * update dependencies to catch up on CVE fixes (#397)\n  * Network manager netplan implementation (#386)\n  * update dependencies to catch up on CVE fixes (#391)\n  * Log current available routes on error (#388)\n  * Fix command monitor bugs (#389)\n  * windows account: ignore \u0026quot;user already belogs to group\u0026quot; error (#387)\n  * Add more error logging in snapshot handling requests, use common retry util (#384)\n  * All non-200 status code from MDS should raise error (#383)\n  * change metadata key to enable-oslogin-certificates (#382)\n  * Update dhclient pid/lease file directory to abide apparmor rules (#381)\n  * Add COS homedir-gid patch to upstream. (#365)\n  * Add require-oslogin-certificates logic to disable keys (#368)\n  * systemd-networkd: support debian 12's version (#372)\n  * Minor update typo in comment (#380)\n  * NetworkManager: only set secondary interfaces as up (#378)\n  * address manager: make sure we check for oldMetadata (#375)\n  * network: early setup network (#374)\n  * NetworkManager: fix ipv6 and ipv4 mode attribute (#373)\n  * Network Manager: make sure we clean up ifcfg files (#371)\n  * metadata script runner: fix script download (#370)\n  * oslogin: avoid adding extra empty line at the end of /etc/security/group.conf (#369)\n  * Dynamic vlan (#361)\n  * Check for nil response (#366)\n  * Create NetworkManager implementation (#362)\n  * Skip interface manager on Windows (#363)\n  * network: remove ignore setup (#360)\n  * Create wicked network service implementation and its respective unit (#356)\n  * Update metadata script runner, add tests (#357)\n  * Refactor guest-agent to use common retry util (#355)\n  * Flush logs before exiting #358 (#359)\n  * Create systemd-networkd unit tests. (#354)\n  * Update network manager unit tests (#351)\n  * Implement retry util (#350)\n  * Refactor utils package to not dump everything unrelated into one file (#352)\n  * Set version on metadata script runner (#353)\n  * Implement cleanup of deprecated configuration directives (#348)\n  * ignore DHCP offered routes only for secondary nics (#347)\n  * Deprecate DHClient in favor of systemd-networkd (#342)\n  * Generate windows and linux licenses (#346)\n  * Remove quintonamore from OWNERS (#345)\n  * Delete integration tests (#343)\n- from version 20240528.00\n  * update dep: golang.org/x/crypto to v0.17.0\n  * update dep: google.golang.org/protobuf to 1.33.0\n  * update dep: golang.org/x/net to 0.17.0\n  * update dep: google.golang.org/grpc to v1.57.1\n\nPackage google-guest-configs was updated:\n\n- Update to version 20241121.00 (bsc#1233625, bsc#1233626)  * Temporarily revert google_set_multiqueue changes for release (#92)\n- from version 20241115.00\n  * Remove IDPF devices from renaming rules (#91)\n- from version 20241112.00\n  * Revert \u0026quot;Revert 3 commits:\u0026quot; (#89)\n- from version 20241108.00\n  * Revert 3 commits: (#87)\n- from version 20241107.00\n  * gce-nic-naming: Exit 1 so that udev ignores the rule on error (#86)\n- from version 20241106.00\n  * Remove Apt IPv4 only config for Debian and Ubuntu (#85)\n- from version 20241031.00\n  * Add GCE intent based NIC naming tools (#84)\n- from version 20241025.00\n  * Update google_set_multiqueue to skip set_irq\n    if NIC is not a gvnic device (#83)\n- Add new binary gce-nic-naming to %{_bindir} in %files section\n\n- Update to version 20241021.00 (bsc#1231775, bsc#1231776)\n  * Add GCE-specific config for systemd-resolved (#82)\n- from version 20241015.00\n  * Update google_set_multiqueue to enable on A3Ultra family (#79)\n- from version 20241013.00\n  * Update OWNERS (#81)\n- from version 20241010.00\n  * Depend on jq in enterprise linux (#80)\n- from version 20241008.00\n  * Always use IP from primary NIC in the\n    networkd-dispatcher routable hook (#78)\n\n- Update to version 20240925.00\n  * Call google_set_hostname on openSUSE and when the agent\n    is configured to manage hostname and FQDN, let it (#75)\n- from version 20240924.00\n  * Include systemd-networkd hook in Ubuntu packaging (#77)\n- from version 20240905.00\n  * Update packaging as of Ubuntu devel packaging (#65)\n- from version 20240830.00\n  * Fix the name for A3 Edge VMs (#76)\n\n- Update to version 20240725.00\n  * Fix: hostnamectl command (#74)\n\n- Update to version 20240607.00\n  * Update is_a3_platform to include A3-edge shape (#73)\n\n- Update to version 20240514.00\n  * Add systemd-networkd hostname hook (#71)\n- from version 20240501.00\n  * Add hostname hook for NetworkManager without\n    dhclient compat script (#70)\n\nPackage google-osconfig-agent was updated:\n\n- Update to version 20240926.03 (bsc#1231775, bsc#1231776)  * Revert \u0026quot;Bump go.opentelemetry.io/otel from 1.24.0 to 1.30.0 (#679)\u0026quot; (#684)\n- from version 20240926.02\n  * Bump go.opentelemetry.io/otel from 1.24.0 to 1.30.0 (#679)\n  * another batch of depencies upgrade (#683)\n- from version 20240926.01\n  * aggregate dependabot changes to go.mod (#677)\n  * Revert back Source package info delivery to control-plane (#673)\n- from version 20240926.00\n  * Update OWNERS (#676)\n- from version 20240924.02\n  * Upgrade grpc and it's dependencies to latest version (#672)\n- from version 20240924.01\n  * Implement keepalive config (#671)\n- from version 20240924.00\n  * Set new version of gRPC for test (#669)\n- from version 20240920.00\n  * Revert \u0026quot;bump version of the gRPC\u0026quot; (#667)\n- from version 20240919.00\n  * bump version of the gRPC (#666)\n- from version 20240917.00\n  * Merge pull request #665 from GoogleCloudPlatform/revert-664-update_grpc_dependency\n  * Revert \u0026quot;Update grpc library and other dependencies. (#664)\u0026quot;\n- from version 20240916.00\n  * Update grpc library and other dependencies. (#664)\n- from version 20240913.00\n  * Move packagebuild presubmit to osconfig (#662)\n- from version 20240912.00\n  * Revert \u0026quot;update osconfig api to v1.13.0 \u0026amp; indirect dependency update\u0026quot; (#659)\n- from version 20240822.00\n  * Revert \u0026quot;Source package info delivery to control-plane (#639)\u0026quot; (#656)\n- from version 20240821.00\n  * Fix golang version format to fix builds. (#655)\n- from version 20240814.01\n  * Use gcsfuse pkg in guest-policies e2e in pkg\n    update tests instead of old pkgs (#653)\n  * Replace osconfig-agent-test pkg by gcsfuse in ospolicies\n    tests and inventory-report tests (#652)\n- from version 20240806.00\n  * Disable Repository Resource test for SLES-12 (#650)\n\n- Update to version 20240801.00\n  * Fix Debian-12 failing test by using gcsfuse pkg\n  * Fix fetching gpg key unit tests (#649)\n- from version 20240729.00\n  * Fix for old state file on Windows (#648)\n- from version 20240723.00\n  * Add debugging logs for repository resource config (#646)\n- from version 20240718.00\n  * Fix SLES-12 SP5 RPM package-resource e2e test (#645)\n- from version 20240715.01\n  * Fix OSPolicies e2e tests for SLES-15 SP5 by removing\n    zypper update from VMs startup script (#644)\n- from version 20240715.00\n  * Fix GuestPolicies e2e tests for SLES-15 SP5 by removing\n    zypper update from VMs startup script (#643)\n- from version 20240709.01\n  * Source package info delivery to control-plane (#639)\n- from version 20240709.00\n  * Enable gpgcheck flag for RPM e2e tests (#638)\n- from version 20240708.00\n  * Update osconfig api to v1.13.0\n  * Indirect dependency update (#637)\n- from version 20240705.01\n  * Updating Windows \u0026amp; Linux Chrome packages\n    to fix failing e2e tests (#636)\n- from version 20240705.00\n  * Merge pull request #635 from Gulio/patch-1\n  * Update OWNERS\n- from version 20240702.02\n  * Remove RHEL-7 and CentOS-7 images from e2e tests (#634)\n\n- Update to version 20240702.01\n  * Use Debian-11 img in googet pkg build workflow (#632)\n- from version 20240702.00\n  * Pipeline testing 00 (#631)\n- from version 20240701.00\n  * update readme file (#628)\n- from version 20240625.01\n  * Updating yum install to support multi architecture based packages\n  * Revert \u0026quot;Adding Architecture to the packages being installed/updated in yum repo\u0026quot;\n- from version 20240625.00\n  * Update old SLES images urls (#627)\n- from version 20240620.00\n  * Merge pull request #626 from GoogleCloudPlatform/yum-multiarch-fix\n  * Adding Architecture to the packages being installed/updated in yum repo\n- from version 20240618.01\n  * Extract source_name(source_rpm) for rpm packages (#624)\n- from version 20240618.00\n  * update README.md file (#625)\n- from version 20240615.00\n  * Fix(dpkg) return onlt installed items as inventory (#623)\n  * Extract source name and version for dpkg packages. (#622)\n\n- Update to version 20240607.00\n  * Update e2e tests to use VMM team's GCP project for pkgs testing version (#621)\n- from version 20240606.00\n  * Disable SUSE tests to run with testing agent repo (#619)\n- from version 20240604.00\n  * Fix the logic of pick region for Artifact Registry function (#618)\n- from version 20240603.00\n  * Disable centos-stream-8 tests as it reached EOL in May 31 (#617)\n- from version 20240529.00\n  * Merge pull request #610 from savijatv/patch-3\n  * Update cis-level1-once-a-day-policy.yaml\n- from version 20240528.00\n  * Merge pull request #616 from MahmoudOuka/allow-windows-e2e-tests-to-\\\n    install-testing-version-of-agent-from-private-artifact-registry-repos\n  * Allow Windows e2e tests to pull osconfig-agent pkg from testing (private)\n    repos from Artifact registry\n- from version 20240527.01\n  * Merge pull request #615 from MahmoudOuka/fix-SUSE-e2e-tests\n  * fix SUSE e2e tests\n- from version 20240527.00\n  * Merge pull request #614 from MahmoudOuka/allow-apt-and-yum-\\\n    e2e-tests-to-pull-osconfig-agent-pkg-from-testing-repos\n  * fix golint comments\n  * Allow Apt \u0026amp; Yum e2e tests to pull osconfig-agent pkg from testing repos\n- from version 20240524.03\n  * Merge pull request #611 from savijatv/patch-ospolicy-samples\n  * Update to the CIS OS policy samples\n- from version 20240524.00\n  * Merge pull request #612 from MahmoudOuka/update-apt-e2e-tests-\\\n    to-pull-osconfig-agent-pkg-from-new-ar-repos\n  * fix golint comment\n  * Update Apt e2e tests to pull osconfig-agent pkg from new AR repos instead of rapture\n- from version 20240523.02\n  * bump golang.org/x/crypto version (#613)\n- from version 20240523.00\n  * update go-cmp dependency (#604)\n- from version 20240522.00\n  * rollback masive dependency update (#603)\n  * Bump google.golang.org/api from 0.180.0 to 0.181.0 (#596)\n\n- Update to version 20240517.00\n  * Bump cloud.google.com/go/auth from 0.4.1 to 0.4.2 (#597)\n- from version 20240516.01\n  * Bump cloud.google.com/go/logging from 1.9.0 to 1.10.0 (#595)\n  * Bump cloud.google.com/go/storage from 1.40.0 to 1.41.0 (#594)\n- from version 20240516.00\n  * Bump google.golang.org/grpc from 1.63.2 to 1.64.0 (#593)\n\n- Update to version 20240513.02\n  * E2e tests: allow passing spesific EL version\n    number to InstallOSConfigEL func (#592)\n- from version 20240513.01\n  * Bump google.golang.org/api from 0.179.0 to 0.180.0 (#591)\n- from version 20240513.00\n  * E2e tests: Fix EL version detection logic in E2E tests (#590)\n  * Bump google.golang.org/api from 0.178.0 to 0.179.0 (#589)\n- from version 20240510.02\n  * Bump cloud.google.com/go/auth from 0.4.0 to 0.4.1 (#588)\n- from version 20240510.01\n  * E2e tests: use family url format instead of specific\n    version URL for head test images (#587)\n- from version 20240510.00\n  * Fix for lock location (#586)\n- from version 20240509.03\n  * Bump cloud.google.com/go from 0.112.2 to 0.113.0 (#584)\n- from version 20240509.02\n  * Remove dependabot not needed label (#576)\n- from version 20240509.01\n  * Write inventory to attributes only if enabled (#486)\n- from version 20240509.00\n  * E2e tests: install gnupg2 and run apt update in VMs startup-scripts (#583)\n  * Add a temporary e2e test image for Ubuntu to test\n    the latest osconfig-agent stable version (#582)\n  * Bump google.golang.org/api from 0.177.0 to 0.178.0 (#578)\n  * Bump github.com/googleapis/gax-go/v2 from 2.12.3 to 2.12.4 (#579)\n  * Bump cloud.google.com/go/iam from 1.1.7 to 1.1.8 (#577)\n  * Bump cloud.google.com/go/auth from 0.3.0 to 0.4.0 (#580)\n  * Bump go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc (#581)\n  * Bump golang.org/x/net from 0.24.0 to 0.25.0 (#575)\n  * Bump cloud.google.com/go/osconfig from 1.12.6 to 1.12.7 (#573)\n  * Bump go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp (#574)\n  * Bump cloud.google.com/go/longrunning from 0.5.6 to 0.5.7 (#571)\n- from version 20240508.08\n  * Bump github.com/golang/glog from 1.2.0 to 1.2.1 (#572)\n- from version 20240508.07\n  * Bump golang.org/x/text from 0.14.0 to 0.15.0 (#565)\n- from version 20240508.06\n  * Bump golang.org/x/oauth2 from 0.19.0 to 0.20.0 (#566)\n  * Bump golang.org/x/sys from 0.19.0 to 0.20.0 (#564)\n- from version 20240508.05\n  * Bump go.opentelemetry.io/otel/trace from 1.24.0 to 1.26.0 (#563)\n- from version 20240508.04\n  * Bump google.golang.org/protobuf from 1.34.0 to 1.34.1 (#567)\n  * Using the default reviewer set for PR approvals (#570)\n- from version 20240508.03\n  * Adding advanced CodeQL settings to scan on PRs (#569)\n- from version 20240508.02\n  * Update Debian-12 package build workflow to use debian-cloud project (#568)\n- from version 20240508.01\n  * Dependabot dependency updates (#562)\n- from version 20240508.00\n  * Revert \u0026quot;Initial configuration of the dependabot\n    for the direct and indirect dâ¦\u0026quot; (#561)\n  * Initial configuration of the dependabot for the\n    direct and indirect dependency scanning (#560)\n- from version 20240507.00\n  * Fix Debian-12 package build workflow typo (#559)\n- from version 20240506.00\n  * Use signed-by keyring approach for apt repos in Debian 12+ and Ubuntu 24+ (#558)\n- from version 20240501.03\n  * Logrus dependency update (#557)\n- from version 20240501.02\n  * Updating dependencies and respective checksums (#556)\n- from version 20240501.01\n  * Update go.mod (#554)\n- from version 20240501.00\n  * Bump golang.org/x/net from 0.17.0 to 0.23.0 (#542)\n- from version 20240430.01\n  * Remove SBOM generation logic from package build workflows (#553)\n- from version 20240425.00\n  * Fix e2e tests for exec-output size limit (#552)\n- from version 20240424.00\n  * Disabled some images which are either past EoL or broken (#549)\n- from version 20240423.01\n  * Copy packagebuild folder from guest-test-infra repo to osconfig repo (#545)\n  * OS Config windows state file location changed (#544)\n- from version 20240423.00\n  * Removed debian-10 from e2e tests (#548)\n- from version 20240422.00\n  * Merge pull request #541 from GoogleCloudPlatform/michaljankowiak-patch-1\n  * Update OWNERS\n- from version 20240409.00\n  * Bump output size limit to 500KB (#538)\n\nPackage grub2 was updated:\n\n- grub2.spec: Add ofnet to signed grub.elf to support powerpc net boot  installation when secure boot is enabled (bsc#1217761) (bsc#1228866)\n- Improved check for disk device when looking for PReP partition\n  * 0004-Introduce-prep_load_env-command.patch\n\n- Fix btrfs subvolume for platform modules not mounting at runtime when the\n  default subvolume is the topmost root tree (bsc#1228124)\n  * grub2-btrfs-06-subvol-mount.patch\n- Rediff\n  * 0001-Unify-the-check-to-enable-btrfs-relative-path.patch\n\n- Fix error in grub-install when root is on tmpfs (bsc#1226100)\n  * 0001-grub-install-bailout-root-device-probing.patch\n\n- Fix input handling in ppc64le grub2 has high latency (bsc#1223535)\n  * 0001-net-drivers-ieee1275-ofnet-Remove-200-ms-timeout-in-.patch\n\n- Fix PowerPC grub loads 5 to 10 minutes slower on SLE-15-SP5 compared to\n  SLE-15-SP2 (bsc#1217102)\n  * add 0001-ofdisk-enhance-boot-time-by-focusing-on-boot-disk-re.patch\n  * add 0002-ofdisk-add-early_log-support.patch\n\n- Enhancement to PPC secure boot's root device discovery config (bsc#1207230)\n- Fix regex for Open Firmware device specifier with encoded commas\n  * 0002-prep_loadenv-Fix-regex-for-Open-Firmware-device-spec.patch\n- Fix regular expression in PPC secure boot config to prevent escaped commas\n  from being treated as delimiters when retrieving partition substrings.\n- Use prep_load_env in PPC secure boot config to handle unset host-specific\n  environment variables and ensure successful command execution.\n  * 0004-Introduce-prep_load_env-command.patch\n- Refreshed\n  * 0005-export-environment-at-start-up.patch\n\nPackage kernel-default was updated:\n\n- idpf: fix UAFs when destroying the queues (CVE-2024-44932  bsc#1229808).\n- idpf: fix memory leaks and crashes while performing a soft reset\n  (CVE-2024-44964 bsc#1230220).\n- commit 4316b61\n\n- USB: serial: io_edgeport: fix use after free in debug printk (CVE-2024-50267 bsc#1233456)\n- commit 5a7c927\n\n- tcp: Fix use-after-free of nreq in reqsk_timer_handler()\n  (CVE-2024-50154 bsc#1233070).\n- commit 9c54dc2\n\n- README.BRANCH: Remove bouncing e-mail address.\n- commit 9d57d70\n\n- netdevsim: Add trailing zero to terminate the string\n  in nsim_nexthop_bucket_activity_write() (CVE-2024-50259\n  bsc#1233214).\n- commit 3b589d0\n\n- Update patches.suse/can-bcm-Fix-UAF-in-bcm_proc_show.patch\n  (git-fixes CVE-2023-52922 bsc#1233977).\n- commit 624f722\n\n- security/keys: fix slab-out-of-bounds in key_task_permission\n  (CVE-2024-50301 bsc#1233490).\n- commit b8c1415\n\n- media: cx24116: prevent overflows on SNR calculus\n  (CVE-2024-50290 bsc#1233479).\n- commit c59cd01\n\n- dm cache: fix out-of-bounds access to the dirty bitset when\n  resizing (CVE-2024-50279 bsc#1233468).\n- commit 6c88f14\n\n- Update config files.\n  Enabled IDPF for ARM64 (bsc#1221309)\n- commit 8dd2b1c\n\n- HID: core: zero-initialize the report buffer (CVE-2024-50302\n  bsc#1233491).\n- commit 086ff16\n\n- vsock/virtio: Initialization of the dangling pointer occurring\n  in vsk-\u0026gt;trans (CVE-2024-50264 bsc#1233453).\n- commit 008fbbf\n\n- Bluetooth: SCO: Fix UAF on sco_sock_timeout (CVE-2024-50125\n  bsc#1232928).\n- commit f9d799e\n\n- Update\n  patches.suse/0002-x86-mm-ident_map-Use-gbpages-only-where-full-GB-page.patch\n  (bsc#1220382 CVE-2024-50017 bsc#1232312).\n- commit 02ff322\n\n- Update patches.suse/can-bcm-Fix-UAF-in-bcm_proc_show.patch\n  (git-fixes CVE-2023-52922 bsc#1233977).\n- commit 82c5a0a\n\n- Refresh\n  patches.suse/initramfs-avoid-filename-buffer-overrun.patch.\n- commit 145c949\n\n- idpf: avoid vport access in idpf_get_link_ksettings\n  (CVE-2024-50274 bsc#1233463).\n- commit 8971b65\n\n- nilfs2: fix potential oob read in nilfs_btree_check_delete()\n  (bsc#1232187 CVE-2024-47757).\n- commit d813a1d\n\n- media: dvbdev: prevent the risk of out of memory access\n  (CVE-2024-53063 bsc#1233557).\n- commit 52a90e5\n\n- media: s5p-jpeg: prevent buffer overflows (CVE-2024-53061\n  bsc#1233555).\n- commit aef5475\n\n- firmware: arm_scmi: Fix slab-use-after-free in\n  scmi_bus_notifier() (CVE-2024-53068 bsc#1233561).\n- commit e507b37\n\n- kernel-binary: Enable livepatch package only when livepatch is enabled\n  Otherwise the filelist may be empty failing the build (bsc#1218644).\n- commit f730eec\n\n- Update config files (bsc#1218644).\n  LIVEPATCH_IPA_CLONES=n =\u0026gt; LIVEPATCH=n\n- commit 9c28790\n\n- ALSA: firewire-lib: Avoid division by zero in\n  apply_constraint_to_size() (CVE-2024-50205 bsc#1233293).\n- commit d31c5c9\n\n- tcp/dccp: Don't use timer_pending() in reqsk_queue_unlink()\n  (CVE-2024-50154 bsc#1233070).\n- commit 2430e1b\n\n- unicode: Don't special case ignorable code points\n  (CVE-2024-50089 bsc#1232860).\n- commit ba47e72\n\n- mm/memory: add non-anonymous page check in the\n  copy_present_page() (bsc#1231646).\n- commit 9f5cb06\n\n- README.BRANCH: drop explicit maintainers\n  kbuild already recognizes all downstream branch maintainers an\n  merge their PRs so we do not need explicit maintainers for the cve\n  branch itself.\n- commit cd6f8fb\n\n- KVM: nSVM: Ignore nCR3[4:0] when loading PDPTEs from memory\n  (CVE-2024-50115 bsc#1232919).\n- commit 4c6b1da\n\n- mptcp: fix double-free on socket dismantle (CVE-2024-26782\n  bsc#1222590).\n  (cherry picked from commit 03ac3f085c702ef308481c09b021887b5a01d52b)\n- commit 7f40404\n\n- net/ncsi: Disable the ncsi work before freeing the associated\n  structure (CVE-2024-49945 bsc#1232165).\n- commit 0369bdb\n\n- net: sched: fix use-after-free in taprio_change()\n  (CVE-2024-50127 bsc#1232907).\n- commit 88b0d06\n\n- RDMA/bnxt_re: Fix a bug while setting up Level-2 PBL pages (bsc#1233117 CVE-2024-50208)\n- commit da4098a\n\n- block: initialize integrity buffer to zero before writing it\n  to media (CVE-2024-43854 bsc#1229345).\n- commit 2fc5adb\n\n- x86/mm/ident_map: Use gbpages only where full GB page should\n  be mapped (bsc#1220382).\n- x86/kexec: Add EFI config table identity mapping for kexec\n  kernel (bsc#1220382).\n- commit c11660d\n\n- initramfs: avoid filename buffer overrun (bsc#1232436).\n- commit 6855778\n\n- fbdev: efifb: Register sysfs groups through driver core\n  (bsc#1232224 CVE-2024-49925).\n- commit ed25954\n\n- net: hisilicon: Fix potential use-after-free in hix5hd2_rx() (bsc#1231979 CVE-2022-48960)\n- commit e22014e\n\n- ipv6: avoid use-after-free in ip6_fragment() (CVE-2022-48956\n  bsc#1231893).\n- commit c192a62\n\n- drm/amdkfd: amdkfd_free_gtt_mem clear the correct pointer\n  (CVE-2024-49991 bsc#1232282).\n- commit 6ba5342\n\n- vhost_vdpa: assign irq bypass producer token correctly\n  (bsc#1232174 CVE-2024-47748).\n- commit 51b6257\n\n- ext4: fix timer use-after-free on failed mount (CVE-2024-49960\n  bsc#1232395).\n- tipc: guard against string buffer overrun (CVE-2024-49995\n  bsc#1232432).\n- commit 7dec126\n\n- net/xen-netback: prevent UAF in xenvif_flush_hash()\n  (CVE-2024-49936 bsc#1232424).\n- commit 05a71d8\n\n- Update\n  patches.suse/IB-core-Implement-a-limit-on-UMAD-receive-List.patch\n  (bsc#1228743 CVE-2024-42145 bsc#1223384).\n- Update\n  patches.suse/aoe-fix-the-potential-use-after-free-problem-in-more.patch\n  (bsc#1218562 CVE-2023-6270 CVE-2024-49982 bsc#1232097).\n- Update\n  patches.suse/fuse-Initialize-beyond-EOF-page-contents-before-setti.patch\n  (bsc#1229454 CVE-2024-44947 bsc#1229456).\n- Update patches.suse/media-edia-dvbdev-fix-a-use-after-free.patch\n  (CVE-2024-27043 bsc#1223824 bsc#1218562).\n- commit 1967352\n\n- Update\n  patches.suse/i3c-mipi-i3c-hci-Fix-out-of-bounds-access-in-hci_dma.patch\n  (git-fixes CVE-2023-52766 bsc#1230620).\n- Update\n  patches.suse/nfc-nci-fix-possible-NULL-pointer-dereference-in-sen.patch\n  (git-fixes CVE-2023-52919 bsc#1231988).\n- Update\n  patches.suse/tcp-do-not-accept-ACK-of-bytes-we-never-sent.patch\n  (CVE-2023-52881 bsc#1225611 bsc#1223384).\n- Update patches.suse/wifi-ath11k-fix-htt-pktlog-locking.patch\n  (git-fixes CVE-2023-52800 bsc#1230600).\n- commit 4af6b80\n\n- Update\n  patches.suse/0001-af_unix-Get-user_ns-from-in_skb-in-unix_diag_get_exa.patch\n  (bsc#1209290 CVE-2023-28327 CVE-2022-48970 bsc#1231887).\n- Update\n  patches.suse/ALSA-seq-Fix-function-prototype-mismatch-in-snd_seq_.patch\n  (git-fixes CVE-2022-48994 bsc#1232119).\n- Update\n  patches.suse/ASoC-ops-Check-bounds-for-second-channel-in-snd_soc_.patch\n  (git-fixes CVE-2022-48951 bsc#1231929).\n- Update\n  patches.suse/ASoC-ops-Fix-bounds-check-for-_sx-controls.patch\n  (git-fixes CVE-2022-49005 bsc#1232150).\n- Update\n  patches.suse/ASoC-soc-pcm-Add-NULL-check-in-BE-reparenting.patch\n  (git-fixes CVE-2022-48992 bsc#1232071).\n- Update\n  patches.suse/Bluetooth-Fix-not-cleanup-led-when-bt_init-fails.patch\n  (git-fixes CVE-2022-48971 bsc#1232037).\n- Update patches.suse/Bluetooth-L2CAP-Fix-u8-overflow.patch\n  (CVE-2022-45934 bsc#1205796 CVE-2022-48947 bsc#1231895).\n- Update\n  patches.suse/HID-core-fix-shift-out-of-bounds-in-hid_report_raw_e.patch\n  (git-fixes CVE-2022-48978 bsc#1232038).\n- Update\n  patches.suse/Input-raydium_ts_i2c-fix-memory-leak-in-raydium_i2c_.patch\n  (git-fixes CVE-2022-48995 bsc#1232120).\n- Update\n  patches.suse/NFC-nci-Bounds-check-struct-nfc_target-arrays.patch\n  (git-fixes CVE-2022-48967 bsc#1232304).\n- Update\n  patches.suse/afs-Fix-server-active-leak-in-afs_put_server.patch\n  (git-fixes CVE-2022-49012 bsc#1232005).\n- Update\n  patches.suse/btrfs-fix-hang-during-unmount-when-stopping-a-space-.patch\n  (bsc#1232262 CVE-2024-49867 CVE-2022-48664 bsc#1223524).\n- Update\n  patches.suse/can-af_can-fix-NULL-pointer-dereference-in-can_rcv_f.patch\n  (bsc#1210627 CVE-2023-2166 CVE-2022-48977 bsc#1231883).\n- Update\n  patches.suse/can-m_can-pci-add-missing-m_can_class_free_dev-in-pr.patch\n  (git-fixes CVE-2022-49024 bsc#1232001).\n- Update\n  patches.suse/char-tpm-Protect-tpm_pm_suspend-with-locks.patch\n  (git-fixes CVE-2022-48997 bsc#1232035).\n- Update\n  patches.suse/drm-shmem-helper-Remove-errant-put-in-error-path.patch\n  (git-fixes CVE-2022-48981 bsc#1232229).\n- Update\n  patches.suse/e100-Fix-possible-use-after-free-in-e100_xmit_prepar.patch\n  (git-fixes CVE-2022-49026 bsc#1231997).\n- Update\n  patches.suse/gpio-amd8111-Fix-PCI-device-reference-count-leak.patch\n  (git-fixes CVE-2022-48973 bsc#1232039).\n- Update\n  patches.suse/gpiolib-fix-memory-leak-in-gpiochip_setup_dev.patch\n  (git-fixes CVE-2022-48975 bsc#1231885).\n- Update\n  patches.suse/hwmon-coretemp-Check-for-null-before-removing-sysfs-.patch\n  (git-fixes CVE-2022-49010 bsc#1232172).\n- Update\n  patches.suse/hwmon-coretemp-fix-pci-device-refcount-leak-in-nv1a_.patch\n  (git-fixes CVE-2022-49011 bsc#1232006).\n- Update\n  patches.suse/hwmon-ibmpex-Fix-possible-UAF-when-ibmpex_register_b.patch\n  (git-fixes CVE-2022-49029 bsc#1231995).\n- Update\n  patches.suse/iavf-Fix-error-handling-in-iavf_init_module.patch\n  (jsc#SLE-18385 CVE-2022-49027 bsc#1232007).\n- Update\n  patches.suse/igb-Initialize-mailbox-message-for-VF-reset.patch\n  (jsc#SLE-18379 CVE-2022-48949 bsc#1231897).\n- Update\n  patches.suse/iio-health-afe4403-Fix-oob-read-in-afe4403_read_raw.patch\n  (git-fixes CVE-2022-49031 bsc#1231992).\n- Update\n  patches.suse/iio-health-afe4404-Fix-oob-read-in-afe4404_-read-wri.patch\n  (git-fixes CVE-2022-49032 bsc#1231991).\n- Update\n  patches.suse/iommu-vt-d-Fix-PCI-device-refcount-leak-in-dmar_dev_scope_init\n  (git-fixes CVE-2022-49002 bsc#1232133).\n- Update\n  patches.suse/iommu-vt-d-Fix-PCI-device-refcount-leak-in-has_external_pci\n  (git-fixes CVE-2022-49000 bsc#1232123).\n- Update\n  patches.suse/ipv4-Handle-attempt-to-delete-multipath-route-when-f.patch\n  (bsc#1204171 CVE-2022-3435 CVE-2022-48999 bsc#1231936).\n- Update\n  patches.suse/ixgbevf-Fix-resource-leak-in-ixgbevf_init_module.patch\n  (git-fixes CVE-2022-49028 bsc#1231996).\n- Update\n  patches.suse/mac802154-fix-missing-INIT_LIST_HEAD-in-ieee802154_i.patch\n  (git-fixes CVE-2022-48972 bsc#1232025).\n- Update\n  patches.suse/media-v4l2-dv-timings.c-fix-too-strict-blanking-sani.patch\n  (git-fixes CVE-2022-48987 bsc#1232067).\n- Update\n  patches.suse/msft-hv-2684-net-mana-Fix-race-on-per-CQ-variable-napi-work_done.patch\n  (git-fixes bsc#1206188 CVE-2022-48985 bsc#1231958).\n- Update\n  patches.suse/net-ethernet-nixge-fix-NULL-dereference.patch\n  (git-fixes CVE-2022-49019 bsc#1231940).\n- Update\n  patches.suse/net-mdio-fix-unbalanced-fwnode-reference-count-in-md.patch\n  (git-fixes CVE-2022-48961 bsc#1232108).\n- Update\n  patches.suse/net-mdiobus-fix-unbalanced-node-reference-count.patch\n  (git-fixes CVE-2022-49016 bsc#1231937).\n- Update\n  patches.suse/net-mlx5e-Fix-use-after-free-when-reverting-terminat.patch\n  (jsc#SLE-19253 CVE-2022-49025 bsc#1231960).\n- Update\n  patches.suse/net-phy-fix-null-ptr-deref-while-probe-failed.patch\n  (git-fixes CVE-2022-49021 bsc#1231939).\n- Update\n  patches.suse/net-thunderbolt-fix-memory-leak-in-tbnet_open.patch\n  (git-fixes CVE-2022-48955 bsc#1231892).\n- Update\n  patches.suse/net-tun-Fix-use-after-free-in-tun_detach.patch\n  (git-fixes CVE-2022-49014 bsc#1231890).\n- Update\n  patches.suse/nilfs2-fix-NULL-pointer-dereference-in-nilfs_palloc_.patch\n  (git-fixes CVE-2022-49007 bsc#1232170).\n- Update\n  patches.suse/nvme-fix-SRCU-protection-of-nvme_ns_head-list.patch\n  (git-fixes CVE-2022-49003 bsc#1232136).\n- Update\n  patches.suse/octeontx2-pf-Fix-potential-memory-leak-in-otx2_init_.patch\n  (jsc#SLE-24682 CVE-2022-48968 bsc#1232237).\n- Update\n  patches.suse/rtc-cmos-Fix-event-handler-registration-ordering-iss.patch\n  (git-fixes CVE-2022-48953 bsc#1231941).\n- Update patches.suse/s390-qeth-fix-use-after-free-in-hsci.patch\n  (bsc#1210449 git-fixes CVE-2022-48954 bsc#1231972).\n- Update\n  patches.suse/tracing-Free-buffers-when-a-used-dynamic-event-is-removed.patch\n  (git-fixes CVE-2022-49006 bsc#1232163).\n- Update\n  patches.suse/udf-Fix-preallocation-discarding-at-indirect-extent-.patch\n  (bsc#1213034 CVE-2022-48946 bsc#1231888).\n- Update\n  patches.suse/usb-gadget-uvc-Prevent-buffer-overflow-in-setup-hand.patch\n  (git-fixes CVE-2022-48948 bsc#1231896).\n- Update\n  patches.suse/wifi-cfg80211-fix-buffer-overflow-in-elem-comparison.patch\n  (git-fixes CVE-2022-49023 bsc#1231961).\n- Update\n  patches.suse/wifi-mac8021-fix-possible-oob-access-in-ieee80211_ge.patch\n  (git-fixes CVE-2022-49022 bsc#1231962).\n- Update\n  patches.suse/xen-netfront-Fix-NULL-sring-after-live-migration.patch\n  (git-fixes CVE-2022-48969 bsc#1232026).\n- commit 2377658\n\n- Update\n  patches.suse/drm-vc4-kms-Add-missing-drm_crtc_commit_put.patch\n  (git-fixes CVE-2021-47534 bsc#1230903).\n- Update patches.suse/phy-mdio-fix-memory-leak.patch (git-fixes\n  stable-5.14.12 CVE-2021-47416 bsc#1225336 bsc#1225189).\n- commit d4160e3\n\n- NFSD: Force all NFSv4.2 COPY requests to be synchronous\n  (CVE-2024-49974 bsc#1232383).\n- commit e488dd4\n\n- ACPI: sysfs: validate return type of _STR method (bsc#1231861\n  CVE-2024-49860).\n- commit 1bb3615\n\n- Delete patches.suse/scsi-Update-max_hw_sectors-on-rescan.patch (bsc#1216223)\n- commit c6f8315\n\n- Refresh\n  patches.suse/scsi-ibmvfc-Add-max_sectors-module-parameter.patch.\n- commit 707c768\n\n- drm/amd/display: Fix index out of bounds in DCN30 color\n  transformation (CVE-2024-49969 bsc#1232519).\n- commit a2392a3\n\n- smb: client: fix UAF in async decryption (bsc#1232418\n  CVE-2024-50047).\n- commit dcba7ec\n\n- net: hisilicon: Fix potential use-after-free in hisi_femac_rx()\n  (CVE-2022-48962 bsc#1232286).\n- commit 0f23f49\n\n- btrfs: wait for fixup workers before stopping cleaner kthread\n  during umount (bsc#1232262 CVE-2024-49867).\n- btrfs: fix hang during unmount when stopping a space reclaim\n  worker (bsc#1232262 CVE-2024-49867).\n- commit b603fa4\n\n- mm/khugepaged: fix collapse_pte_mapped_thp() to allow anon_vma\n  (CVE-2022-48991 bsc#1232070 prerequisity git-fix).\n- mm/khugepaged: invoke MMU notifiers in shmem/file collapse paths\n  (CVE-2022-48991 bsc#1232070).\n- commit 3ab8533\n\n- mm/khugepaged: fix GUP-fast interaction by sending IPI\n  (CVE-2022-48991 bsc#1232070 prerequisity).\n- commit 327d525\n\n- mm/khugepaged: take the right locks for page table retraction\n  (CVE-2022-48991 bsc#1232070 prerequisity).\n- commit e43adf4\n\n- mm: gup: fix the fast GUP race against THP collapse\n  (CVE-2022-48991 bsc#1232070 prerequisity).\n- commit 262192e\n\n- s390/dasd: fix error recovery leading to data corruption on\n  ESE devices (git-fixes bsc#1229452 CVE-2024-45026 bsc#1230454\n  bsc#1232281).\n- commit fc1d054\n\n- net: seeq: Fix use after free vulnerability in ether3 Driver\n  Due to Race Condition (CVE-2024-47747 bsc#1232145).\n- commit a1020b1\n\n- drm/amd/display: Check msg_id before processing transcation (CVE-2024-46814 bsc#1231193).\n- commit 81681a2\n\n- RDMA/mana_ib: use the correct page size for mapping user-mode\n  doorbell page (bsc#1232036).\n- net: mana: Fix the extra HZ in mana_hwc_send_request\n  (bsc#1232033).\n- commit 8c14fb0\n\n- block, bfq: fix possible UAF for bfqq-\u0026gt;bic with merge chain (CVE-2024-47706 bsc#1231942)\n- commit c5d0bc0\n\n- tcp: check skb is non-NULL in tcp_rto_delta_us() (CVE-2024-47684 bsc#1231987)\n- commit 569d856\n\n- net: hsr: Fix potential use-after-free (CVE-2022-49015 bsc#1231938)\n- commit 5883d13\n\n- wifi: ath11k: fix array out-of-bound access in SoC stats\n  (CVE-2024-49930 bsc#1232260).\n- commit e11de4c\n\n- Update\n  patches.suse/memcg-Fix-possible-use-after-free-in-memcg_write_event_control.patch\n  (bsc#1206344, CVE-2022-48988, bsc#1232069).\n- commit e7eaea8\n\n- net: dsa: sja1105: fix memory leak in\n  sja1105_setup_devlink_regions() (CVE-2022-48959 bsc#1231976).\n- commit ec81f5f\n\n- mm: avoid leaving partial pfn mappings around in error case\n  (CVE-2024-47674 bsc#1231673).\n- commit 9910e8f\n\n- netem: fix return value if duplicate enqueue fails\n  (CVE-2024-45016 bsc#1230429).\n- commit 2e9108a\n\n- lib/generic-radix-tree.c: Fix rare race in __genradix_ptr_alloc() (CVE-2024-47668 bsc#1231502)\n- commit 45aa8b3\n\n- dn_route: set rt neigh to blackhole_netdev instead of\n  loopback_dev in ifdown (bsc#1216813).\n- commit 673d32f\n\n- xfrm: set dst dev to blackhole_netdev instead of loopback_dev\n  in ifdown (bsc#1216813).\n- commit 0e5b278\n\n- ipv6: blackhole_netdev needs snmp6 counters (bsc#1216813).\n- commit 0c7762c\n\n- ipv6: give an IPv6 dev to blackhole_netdev (bsc#1216813).\n- commit 5d1a23a\n\n- aoe: fix the potential use-after-free problem in more places\n  (bsc#1218562 CVE-2023-6270).\n- commit e949a45\n\n- efi: fix NULL-deref in init error path (bsc#1229556\n  CVE-2022-48879).\n- commit 41e1770\n\n- dmaengine: altera-msgdma: properly free descriptor in\n  msgdma_free_descriptor (bsc#1230715 CVE-2024-46716).\n- commit 92074a5\n\n- bpf: Fix pointer-leak due to insufficient speculative store\n  bypass mitigation (bsc#1231375).\n- commit fd93435\n\n- drm/amd/display: Check gpio_id before used as array index (CVE-2024-46818 bsc#1231203).\n- commit 53caf4b\n\n- drm/amd/display: Check num_valid_sets before accessing reader_wm_sets (CVE-2024-46815 bsc#1231195).\n- commit ad18f86\n\n- drm/amd/display: Stop amdgpu_dm initialize when link nums greater than max_links (CVE-2024-46816 bsc#1231197).\n- commit 1eea356\n\n- Delete some more obsolete scripts\n- commit 0d4cf12\n\n- drm/amd/display: Check link_index before accessing dc-\u0026gt;links (CVE-2024-46813 bsc#1231191).\n- commit a97e1a4\n\n- drm/amd/display: Stop amdgpu_dm initialize when stream nums greater than 6 (CVE-2024-46817 bsc#1231200).\n- commit 18cf241\n\n- rpm/release-projects: Add SLFO projects (bsc#1231293).\n- commit 9f2c584\n\n- NFSv3: only use NFS timeout for MOUNT when protocols are\n  compatible (bsc#1231016).\n- commit 2b5943c\n\n- ASoC: meson: axg-card: fix 'use-after-free' (CVE-2024-46849 bsc#1231073)\n- commit a395e2d\n\n- rpm/check-for-config-changes: add HAVE_RUST and RUSTC_SUPPORTS_ to IGNORED_CONFIGS_RE\n  They depend on SHADOW_CALL_STACK.\n- commit 65fa52b\n\n- usb: dwc3: st: fix probed platform device ref count on probe\n  error path (bsc#1230507 CVE-2024-46674).\n- commit ffd5693\n\n- scsi: ibmvfc: Add max_sectors module parameter (bsc#1216223).\n  Delete\n  patches.suse/ibmvfc-make-max_sectors-a-module-option.patch.\n- commit 13d3e25\n\n- nvme: move stopping keep-alive into nvme_uninit_ctrl() (CVE-2024-45013 bsc#1230442)\n- commit 75bf6d9\n\n- Update\n  patches.suse/media-vivid-fix-compose-size-exceed-boundary.patch\n  (git-fixes CVE-2022-48945 bsc#1230398).\n- Update\n  patches.suse/powerpc-rtas-Prevent-Spectre-v1-gadget-construction-.patch\n  (bsc#1227487 CVE-2024-46774 bsc#1230767).\n- Update patches.suse/sched-Fix-yet-more-sched_fork-races.patch\n  (git fixes (sched/core) CVE-2022-48944 bsc#1229947).\n- commit be5b46d\n\n- SUNRPC: avoid soft lockup when transmitting UDP to reachable\n  server (bsc#1225272 bsc#1231016).\n- commit d8ddf61\n\n- kabi: add __nf_queue_get_refs() for kabi compliance.\n- netfilter: nf_queue: fix possible use-after-free (bsc#1229633,\n  CVE-2022-48911).\n- commit 09526c9\n\n- btrfs: prevent copying too big compressed lzo segment (CVE-2022-48923 bsc#1229662)\n- commit 9c5b30e\n\n- dev/parport: fix the array out-of-bounds risk (CVE-2024-42301\n  bsc#1229407).\n- commit 0515c56\n\n- KABI: kcm: Serialise kcm_sendmsg() for the same socket\n  (CVE-2024-44946 bsc#1230015).\n- commit 4220de4\n\n- kcm: Serialise kcm_sendmsg() for the same socket\n  (CVE-2024-44946 bsc#1230015).\n- commit 195f676\n\n- Refresh\n  patches.suse/Bluetooth-hci_ldisc-check-HCI_UART_PROTO_READY-flag-.patch.\n  Update upstream status and move to the sorted section.\n- commit 43dbf50\n\n- memcg_write_event_control(): fix a user-triggerable oops\n  (CVE-2024-45021 bsc#1230434).\n- commit f5c92ca\n\n- Revert \u0026quot;mm/sparsemem: fix race in accessing memory_section-\u0026gt;usage\u0026quot;\n  This reverts commit 606bd9b8228bfe004cf6ab930ffb673a535e3c55.\n- commit 532bbfe\n\n- Revert \u0026quot;mm, kmsan: fix infinite recursion due to RCU critical section\u0026quot;\n  This reverts commit 1702784a5db6b26695f0bc2c6b0cbe973db5c0f3.\n- commit e220e83\n\n- Revert \u0026quot;mm: prevent derefencing NULL ptr in pfn_section_valid()\u0026quot;\n  This reverts commit d77caa16c18115f0c470ecf5cdd3cdb6f9865aeb.\n- commit b38d226\n\n- blk-mq: add helper for checking if one CPU is mapped to\n  specified hctx (bsc#1223600).\n- blk-mq: don't schedule block kworker on isolated CPUs\n  (bsc#1223600).\n- commit 4537dc0\n\n- vfs: Don't evict inode under the inode lru traversing context\n  (CVE-2024-45003 bsc#1230245).\n- commit 82e6e44\n\n- Bluetooth: L2CAP: Fix deadlock (git-fixes).\n- commit 9438e54\n\n- bluetooth/l2cap: sync sock recv cb and release (bsc#1228576\n  CVE-2024-41062).\n- commit 5b1f743\n\n- Update references\n- commit a096907\n\n- fuse: Initialize beyond-EOF page contents before setting\n  uptodate (bsc#1229454 CVE-2024-44947).\n- commit ddfd2d7\n\n- usb: vhci-hcd: Do not drop references before new references\n  are gained (CVE-2024-43883 bsc#1229707).\n- commit 44d7bae\n\n- net: usb: qmi_wwan: fix memory leak for not ip packets\n  (CVE-2024-43861 bsc#1229500).\n- commit 3e796c3\n\n- PKCS#7: Check codeSigning EKU of certificates in PKCS#7\n  (bsc#1226666).\n- commit 95da232\n\n- Update\n  patches.suse/ASoC-ops-Shift-tested-values-in-snd_soc_put_volsw-by.patch\n  (git-fixes CVE-2022-48917 bsc#1229637).\n- Update\n  patches.suse/Bluetooth-hci_qca-Fix-driver-shutdown-on-closed-serd.patch\n  (git-fixes CVE-2022-48878 bsc#1229554).\n- Update\n  patches.suse/CDC-NCM-avoid-overflow-in-sanity-checking.patch\n  (git-fixes CVE-2022-48938 bsc#1229664).\n- Update\n  patches.suse/KVM-x86-mmu-make-apf-token-non-zero-to-fix-bug.patch\n  (git-fixes CVE-2022-48943 bsc#1229645).\n- Update\n  patches.suse/RDMA-cma-Do-not-change-route.addr.src_addr-outside-s.patch\n  (git-fixes CVE-2022-48925 bsc#1229630).\n- Update patches.suse/RDMA-ib_srp-Fix-a-deadlock.patch (git-fixes\n  CVE-2022-48930 bsc#1229624).\n- Update\n  patches.suse/USB-gadgetfs-Fix-race-between-mounting-and-unmountin.patch\n  (CVE-2022-4382 bsc#1206258 CVE-2022-48869 bsc#1229507).\n- Update\n  patches.suse/auxdisplay-lcd2s-Fix-memory-leak-in-remove.patch\n  (git-fixes CVE-2022-48907 bsc#1229608).\n- Update\n  patches.suse/blktrace-fix-use-after-free-for-struct-blk_trace.patch\n  (bsc#1198017 CVE-2022-48913 bsc#1229643).\n- Update\n  patches.suse/bpf-Fix-crash-due-to-out-of-bounds-access-into-reg2b.patch\n  (git-fixes bsc#1194111 bsc#1194765 bsc#1196261 CVE-2021-4204\n  CVE-2022-0500 CVE-2022-23222 CVE-2022-48929 bsc#1229625).\n- Update\n  patches.suse/btrfs-fix-race-between-quota-rescan-and-disable-lead.patch\n  (bsc#1207158 CVE-2023-52896 bsc#1229533).\n- Update\n  patches.suse/btrfs-fix-relocation-crash-due-to-premature-return-f.patch\n  (bsc#1203360 CVE-2022-48903 bsc#1229613).\n- Update\n  patches.suse/cgroup-cpuset-Prevent-UAF-in-proc_cpuset_show.patch\n  (bsc#1228801 CVE-2024-43853 bsc#1229292).\n- Update\n  patches.suse/cifs-fix-double-free-race-when-mount-fails-in-cifs_get_root-.patch\n  (bsc#1193629 CVE-2022-48919 bsc#1229657).\n- Update\n  patches.suse/configfs-fix-a-race-in-configfs_-un-register_subsyst.patch\n  (git-fixes CVE-2022-48931 bsc#1229623).\n- Update\n  patches.suse/dmaengine-idxd-Let-probe-fail-when-workqueue-cannot-.patch\n  (git-fixes CVE-2022-48868 bsc#1229506).\n- Update\n  patches.suse/drm-msm-another-fix-for-the-headless-Adreno-GPU.patch\n  (git-fixes CVE-2023-52911 bsc#1229522).\n- Update\n  patches.suse/drm-msm-dp-do-not-complete-dp_aux_cmd_fifo_tx-if-irq.patch\n  (git-fixes CVE-2022-48898 bsc#1229537).\n- Update patches.suse/drm-virtio-Fix-GEM-handle-creation-UAF.patch\n  (git-fixes CVE-2022-48899 bsc#1229536).\n- Update\n  patches.suse/gsmi-fix-null-deref-in-gsmi_get_variable.patch\n  (git-fixes CVE-2023-52893 bsc#1229535).\n- Update\n  patches.suse/hwmon-Handle-failure-to-register-sensor-with-thermal.patch\n  (git-fixes CVE-2022-48942 bsc#1229612).\n- Update\n  patches.suse/ibmvnic-free-reset-work-item-when-flushing.patch\n  (bsc#1196516 ltc#196391 CVE-2022-48905 bsc#1229604).\n- Update\n  patches.suse/ice-fix-concurrent-reset-and-removal-of-VFs.patch\n  (git-fixes CVE-2022-48941 bsc#1229614).\n- Update\n  patches.suse/iio-adc-men_z188_adc-Fix-a-resource-leak-in-an-error.patch\n  (git-fixes CVE-2022-48928 bsc#1229626).\n- Update\n  patches.suse/iio-adc-tsc2046-fix-memory-corruption-by-preventing-.patch\n  (git-fixes CVE-2022-48927 bsc#1229628).\n- Update\n  patches.suse/io_uring-add-a-schedule-point-in-io_add_buffers.patch\n  (git-fixes CVE-2022-48937 bsc#1229617).\n- Update patches.suse/iommu-amd-Fix-I-O-page-table-memory-leak\n  (git-fixes CVE-2022-48904 bsc#1229603).\n- Update\n  patches.suse/iommu-vt-d-fix-double-list_add-when-enabling-vmd-in-scalable-mode\n  (bsc#1196894 CVE-2022-48916 bsc#1229638).\n- Update\n  patches.suse/iwlwifi-mvm-check-debugfs_dir-ptr-before-use.patch\n  (git-fixes CVE-2022-48918 bsc#1229636).\n- Update patches.suse/ixgbe-fix-pci-device-refcount-leak.patch\n  (jsc#SLE-18384 CVE-2022-48896 bsc#1229540).\n- Update\n  patches.suse/misc-fastrpc-Don-t-remove-map-on-creater_process-and.patch\n  (git-fixes CVE-2022-48873 bsc#1229512).\n- Update\n  patches.suse/misc-fastrpc-Fix-use-after-free-race-condition-for-m.patch\n  (git-fixes CVE-2022-48872 bsc#1229510).\n- Update\n  patches.suse/net-mlx5-DR-Fix-slab-out-of-bounds-in-mlx5_cmd_dr_cr.patch\n  (jsc#SLE-19253 CVE-2022-48932 bsc#1229622).\n- Update patches.suse/net-smc-fix-connection-leak (git-fixes\n  CVE-2022-48909 bsc#1229611).\n- Update\n  patches.suse/nfc-pn533-Wait-for-out_urb-s-completion-in-pn533_usb.patch\n  (git-fixes CVE-2023-52907 bsc#1229526).\n- Update\n  patches.suse/nfp-flower-Fix-a-potential-leak-in-nfp_tunnel_add_sh.patch\n  (git-fixes CVE-2022-48934 bsc#1229620).\n- Update\n  patches.suse/nilfs2-fix-general-protection-fault-in-nilfs_btree_i.patch\n  (git-fixes CVE-2023-52900 bsc#1229581).\n- Update\n  patches.suse/octeontx2-pf-Fix-resource-leakage-in-VF-driver-unbin.patch\n  (git-fixes CVE-2023-52905 bsc#1229528).\n- Update\n  patches.suse/platform-surface-aggregator-Add-missing-call-to-ssam.patch\n  (git-fixes CVE-2022-48880 bsc#1229557).\n- Update\n  patches.suse/regulator-da9211-Use-irq-handler-when-ready.patch\n  (git-fixes CVE-2022-48891 bsc#1229565).\n- Update\n  patches.suse/sched-fair-Fix-fault-in-reweight_entity.patch\n  (git fixes (sched/core) CVE-2022-48921 bsc#1229635).\n- Update\n  patches.suse/scsi-storvsc-Fix-swiotlb-bounce-buffer-leak-in-confi.patch\n  (bsc#1206006 CVE-2022-48890 bsc#1229544).\n- Update\n  patches.suse/spi-spi-zynq-qspi-Fix-a-NULL-pointer-dereference-in-.patch\n  (git-fixes CVE-2021-4441 bsc#1229598).\n- Update\n  patches.suse/thermal-core-Fix-TZ_GET_TRIP-NULL-pointer-dereferenc.patch\n  (git-fixes CVE-2022-48915 bsc#1229639).\n- Update\n  patches.suse/thermal-int340x-fix-memory-leak-in-int3400_notify.patch\n  (git-fixes CVE-2022-48924 bsc#1229631).\n- Update\n  patches.suse/tty-fix-possible-null-ptr-defer-in-spk_ttyio_release.patch\n  (git-fixes CVE-2022-48870 bsc#1229508).\n- Update\n  patches.suse/tty-serial-qcom-geni-serial-fix-slab-out-of-bounds-o.patch\n  (git-fixes CVE-2022-48871 bsc#1229509).\n- Update\n  patches.suse/usb-gadget-f_ncm-fix-potential-NULL-ptr-deref-in-ncm.patch\n  (git-fixes CVE-2023-52894 bsc#1229566).\n- Update\n  patches.suse/usb-gadget-rndis-add-spinlock-for-rndis-response-lis.patch\n  (git-fixes CVE-2022-48926 bsc#1229629).\n- Update\n  patches.suse/usb-xhci-Check-endpoint-is-valid-before-dereferencin.patch\n  (git-fixes CVE-2023-52901 bsc#1229531).\n- Update\n  patches.suse/wifi-mac80211-sdata-can-be-NULL-during-AMPDU-start.patch\n  (git-fixes CVE-2022-48875 bsc#1229516).\n- Update\n  patches.suse/xen-netfront-destroy-queues-before-real_num_tx_queue.patch\n  (git-fixes CVE-2022-48914 bsc#1229642).\n- Update\n  patches.suse/xhci-Fix-null-pointer-dereference-when-host-dies.patch\n  (git-fixes CVE-2023-52898 bsc#1229568).\n- commit 5c5e4d7\n\n- mm: prevent derefencing NULL ptr in pfn_section_valid()\n  (git-fixes).\n- commit d77caa1\n\n- mm, kmsan: fix infinite recursion due to RCU critical section\n  (git-fixes).\n- commit 1702784\n\n- mm/sparsemem: fix race in accessing memory_section-\u0026gt;usage\n  (bsc#1221326 CVE-2023-52489).\n- commit 606bd9b\n\n- jfs: Fix shift-out-of-bounds in dbDiscardAG (bsc#1229792\n  CVE-2024-44938).\n- commit 8003b7e\n\n- ata: libata-core: Fix double free on error\n  (CVE-2024-41087,bsc#1228466).\n- commit b5892ca\n\n- exec: Fix ToCToU between perm check and set-uid/gid usage\n  (CVE-2024-43882 bsc#1229503).\n- commit 83a7456\n\n- netfilter: nf_tables: unregister flowtable hooks on netns exit (CVE-2022-48935 bsc#1229619)\n- commit 3e33f70\n\n- netfilter: fix use-after-free in __nf_register_net_hook() (CVE-2022-48912 bsc#1229641)\n- commit f8f42c3\n\n- rpm/check-for-config-changes: Exclude ARCH_USING_PATCHABLE_FUNCTION_ENTRY\n  gcc version dependent, at least on ppc\n- commit 16da158\n\n- scsi: smartpqi: Expose SAS address for SATA drives\n  (bsc#1223958).\n- commit 6711c21\n\n- net/iucv: fix use after free in iucv_sock_close()\n  (CVE-2024-42271 bsc#1229400 bsc#1228974).\n- commit 82bb6f3\n\n- Update\n  patches.suse/drm-amdkfd-don-t-allow-mapping-the-MMIO-HDP-page-wit.patch\n  (CVE-2024-41011 bsc#1228115 bsc#1228114).\n- Update\n  patches.suse/powerpc-pseries-Fix-scv-instruction-crash-with-kexec.patch\n  (bsc#1194869 CVE-2024-42230 bsc#1228489).\n- commit f6019c1\n\n- libceph: fix race between delayed_work() and ceph_monc_stop()\n  (bsc#1228959 CVE-2024-42232).\n- commit 27160c2\n\n- rpm/kernel-binary.spec.in: fix klp_symbols macro\n  The commit below removed openSUSE filter from %ifs of the klp_symbols\n  definition. But it removed -c of grep too and that causes:\n  error: syntax error in expression:  01 \u0026amp;\u0026amp; (  || 1 )\n  error:                                        ^\n  error: unmatched (:  01 \u0026amp;\u0026amp; (  || 1 )\n  error:                     ^\n  error: kernel-default.spec:137: bad %if condition:  01 \u0026amp;\u0026amp; (  || 1 )\n  So reintroduce -c to the PTF's grep.\n  Fixes: fd0b293bebaf (kernel-binary.spec.in: Enable klp_symbols on openSUSE Tumbleweed (boo#1229042).)\n- commit 4a36fe3\n\n- kernel-binary.spec.in: Enable klp_symbols on openSUSE Tumbleweed (boo#1229042).\n  After the Jump project the kernel used by SLE and openSUSE Leap are the\n  same. As consequence the klp_symbols variable is set, enabling\n  kernel-default-livepatch-devel on both SLE and openSUSE.\n  The current rules to avoid enabling the package exclude openSUSE\n  Tumbleweed alone, which doesn't makes sense for now. Enabling\n  kernel-default-livepatch-devel on TW makes it easier to test the\n  creation of kernel livepatches of the next SLE versions.\n- commit fd0b293\n\n- Update\n  patches.suse/powerpc-Avoid-nmi_enter-nmi_exit-in-real-mode-interr.patch\n  (bsc#1221645 ltc#205739 bsc#1223191 CVE-2024-42126 bsc#1228718).\n  Add CVE references.\n- commit 637c320\n\n- Update\n  patches.suse/0001-ocfs2-fix-DIO-failure-due-to-insufficient-transactio.patch\n  (bsc#1216834 CVE-2024-42077 bsc#1228516).\n  Add CVE references.\n- commit 8360e90\n\n- ax25: Fix refcount imbalance on inbound connections\n  (CVE-2024-40910 bsc#1227832).\n- commit 12cb329\n\n- config.sh: generate and install compile_commands.json (bsc#1228971)\n  This file contains the command line options used to compile every C file.\n  It's useful for the livepatching team.\n- kernel-binary: generate and install compile_commands.json (bsc#1228971)\n  This file contains the command line options used to compile every C file.\n  It's useful for the livepatching team.\n- commit 314f719\n\n- packaging: Add case-sensitive perl option parsing\n  A recent change in Getopt::Long [1]:\n  Changes in version 2.55\n  - ----------------------\n  * Fix long standing bug that duplicate options were not detected\n  when the options differ in case while ignore_case is in effect.\n  This will now yield a warning and become a fatal error in a future\n  release.\n  perl defaults to ignore_case by default, switch it off to avoid\n  accidental misparsing of options.\n  This was suggested after similar change in scripts/.\n- commit e978477\n\n- btrfs: sysfs: update fs features directory asynchronously\n  (bsc#1226168).\n- commit 97cd90c\n\n- ima: Fix use-after-free on a dentry's dname.name (bsc#1227716\n  CVE-2024-39494).\n- commit 81484ec\n\n- ASoC: topology: Fix route memory corruption (CVE-2024-41069\n  bsc#1228644).\n- commit 586db1a\n\n- net: do not leave a dangling sk pointer, when socket creation fails (CVE-2024-40954 bsc#1227808)\n- commit 8f44f81\n\n- check-for-config-changes: ignore also GCC_ASM_GOTO_OUTPUT_BROKEN\n  Mainline commit f2f6a8e88717 (\u0026quot;init/Kconfig: remove\n  CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND\u0026quot;) replaced\n  GCC_ASM_GOTO_OUTPUT_WORKAROUND with GCC_ASM_GOTO_OUTPUT_BROKEN. Ignore both\n  when checking config changes.\n- commit b60be3e\n\n- IB/core: Implement a limit on UMAD receive List (bsc#1228743 CVE-2024-42145)\n- commit 810053d\n\n- ptp: fix integer overflow in max_vclocks_store (bsc#1227829\n  CVE-2024-40994).\n- commit 205cc4c\n\n- filelock: Remove locks reliably when fcntl/close race is\n  detected (CVE-2024-41012 bsc#1228247).\n- commit e2c5917\n\n- Update\n  patches.suse/KVM-Always-flush-async-PF-workqueue-when-vCPU-is-being-des.patch\n  (bsc#1223635 (CVE-2024-26976) CVE-2024-26976).\n- Update\n  patches.suse/jfs-xattr-fix-buffer-overflow-for-invalid-xattr.patch\n  (bsc#1227383 CVE-2024-40902 bsc#1227764).\n- Update\n  patches.suse/vfio-fsl-mc-Block-calling-interrupt-handler-without-trigge.patch\n  (bsc#1222810 (CVE-2024-26814) CVE-2024-26814).\n- Update\n  patches.suse/vfio-platform-Create-persistent-IRQ-handlers.patch\n  (bsc#1222809 (CVE-2024-26813) CVE-2024-26813).\n- commit 39eeeb9\n\n- Update\n  patches.suse/SUNRPC-Fix-UAF-in-svc_tcp_listen_data_ready.patch\n  (git-fixes CVE-2023-52885 bsc#1227750).\n- Update\n  patches.suse/USB-core-Fix-race-by-not-overwriting-udev-descriptor.patch\n  (bsc#1213123 CVE-2023-37453 CVE-2023-52886 bsc#1227981).\n- Update\n  patches.suse/virtio-blk-fix-implicit-overflow-on-virtio_max_dma_size.patch\n  (bsc#1225573 (CVE-2023-52762) CVE-2023-52762).\n- commit 3784f34\n\n- Update\n  patches.suse/HID-hid-thrustmaster-fix-OOB-read-in-thrustmaster_in.patch\n  (git-fixes CVE-2022-48866 bsc#1228014).\n- Update\n  patches.suse/Input-aiptek-properly-check-endpoint-type.patch\n  (git-fixes CVE-2022-48836 bsc#1227989).\n- Update\n  patches.suse/KVM-x86-nSVM-fix-potential-NULL-derefernce-on-nested.patch\n  (git-fixes CVE-2022-48793 bsc#1228019).\n- Update\n  patches.suse/NFC-port100-fix-use-after-free-in-port100_send_compl.patch\n  (git-fixes CVE-2022-48857 bsc#1228005).\n- Update\n  patches.suse/NFSD-Fix-NFSv3-SETATTR-CREATE-s-handling-of-large-fi.patch\n  (git-fixes CVE-2022-48829 bsc#1228055).\n- Update patches.suse/NFSD-Fix-ia_size-underflow.patch (git-fixes\n  CVE-2022-48828 bsc#1228054).\n- Update\n  patches.suse/NFSD-Fix-the-behavior-of-READ-near-OFFSET_MAX.patch\n  (bsc#1195957 CVE-2022-48827 bsc#1228037).\n- Update\n  patches.suse/SUNRPC-lock-against-sock-changing-during-sysfs-read.patch\n  (bsc#1194324 CVE-2022-48816 bsc#1228038).\n- Update\n  patches.suse/can-isotp-fix-potential-CAN-frame-reception-race-in-.patch\n  (git-fixes CVE-2022-48830 bsc#1227982).\n- Update\n  patches.suse/cfg80211-fix-race-in-netlink-owner-interface-destruc.patch\n  (git-fixes CVE-2022-48784 bsc#1227938).\n- Update\n  patches.suse/dmaengine-ptdma-Fix-the-error-handling-path-in-pt_co.patch\n  (git-fixes CVE-2022-48774 bsc#1227923).\n- Update\n  patches.suse/drm-amdgpu-bypass-tiling-flag-check-in-virtual-displ.patch\n  (git-fixes CVE-2022-48849 bsc#1228061).\n- Update\n  patches.suse/drm-vc4-Fix-deadlock-on-DSI-device-attach-error.patch\n  (git-fixes CVE-2022-48826 bsc#1227975).\n- Update\n  patches.suse/drm-vrr-Set-VRR-capable-prop-only-if-it-is-attached-.patch\n  (git-fixes CVE-2022-48843 bsc#1228066).\n- Update\n  patches.suse/eeprom-ee1004-limit-i2c-reads-to-I2C_SMBUS_BLOCK_MAX.patch\n  (git-fixes CVE-2022-48806 bsc#1227948).\n- Update\n  patches.suse/ethernet-Fix-error-handling-in-xemaclite_of_probe.patch\n  (git-fixes CVE-2022-48860 bsc#1228008).\n- Update\n  patches.suse/fs-proc-task_mmu.c-don-t-read-mapcount-for-migration-entry.patch\n  (CVE-2023-1582 bsc#1209636 CVE-2022-48802 bsc#1227942).\n- Update\n  patches.suse/gianfar-ethtool-Fix-refcount-leak-in-gfar_get_ts_inf.patch\n  (git-fixes CVE-2022-48856 bsc#1228004).\n- Update patches.suse/iavf-Fix-hang-during-reboot-shutdown.patch\n  (jsc#SLE-18385 CVE-2022-48840 bsc#1227990).\n- Update\n  patches.suse/ibmvnic-don-t-release-napi-in-__ibmvnic_open.patch\n  (bsc#1195668 ltc#195811 CVE-2022-48811 bsc#1227928).\n- Update\n  patches.suse/ice-Fix-KASAN-error-in-LAG-NETDEV_UNREGISTER-handler.patch\n  (git-fixes CVE-2022-48807 bsc#1227970).\n- Update\n  patches.suse/ice-Fix-race-condition-during-interface-enslave.patch\n  (git-fixes CVE-2022-48842 bsc#1228064).\n- Update\n  patches.suse/ice-fix-NULL-pointer-dereference-in-ice_update_vsi_t.patch\n  (jsc#SLE-18375 CVE-2022-48841 bsc#1227991).\n- Update\n  patches.suse/iio-buffer-Fix-file-related-error-handling-in-IIO_BU.patch\n  (git-fixes CVE-2022-48801 bsc#1227956).\n- Update\n  patches.suse/ima-fix-reference-leak-in-asymmetric_verify.patch\n  (git-fixes CVE-2022-48831 bsc#1227986).\n- Update\n  patches.suse/iommu-Fix-potential-use-after-free-during-probe\n  (git-fixes CVE-2022-48796 bsc#1228028).\n- Update patches.suse/iwlwifi-fix-use-after-free.patch\n  (bsc#1197762 git-fixes CVE-2022-48787 bsc#1227932).\n- Update\n  patches.suse/mISDN-Fix-memory-leak-in-dsp_pipeline_build.patch\n  (git-fixes CVE-2022-48863 bsc#1228063).\n- Update\n  patches.suse/misc-fastrpc-avoid-double-fput-on-failed-usercopy.patch\n  (git-fixes CVE-2022-48821 bsc#1227976).\n- Update\n  patches.suse/mm-don-t-try-to-NUMA-migrate-COW-pages-that-have-other-uses.patch\n  (git fixes (mm/numa) CVE-2022-48797 bsc#1228035).\n- Update\n  patches.suse/mm-vmscan-remove-deadlock-due-to-throttling.patch\n  (bsc#1195357 CVE-2022-48800 bsc#1227954).\n- Update\n  patches.suse/msft-hv-2515-Drivers-hv-vmbus-Fix-memory-leak-in-vmbus_add_channe.patch\n  (git-fixes CVE-2022-48775 bsc#1227924).\n- Update\n  patches.suse/mtd-parsers-qcom-Fix-kernel-panic-on-skipped-partiti.patch\n  (git-fixes CVE-2022-48777 bsc#1227922).\n- Update\n  patches.suse/mtd-parsers-qcom-Fix-missing-free-for-pparts-in-clea.patch\n  (git-fixes CVE-2022-48776 bsc#1227925).\n- Update\n  patches.suse/mtd-rawnand-gpmi-don-t-leak-PM-reference-in-error-pa.patch\n  (git-fixes CVE-2022-48778 bsc#1227935).\n- Update\n  patches.suse/net-dsa-ar9331-register-the-mdiobus-under-devres.patch\n  (git-fixes CVE-2022-48817 bsc#1227931).\n- Update\n  patches.suse/net-dsa-bcm_sf2-don-t-use-devres-for-mdiobus.patch\n  (git-fixes CVE-2022-48815 bsc#1227933).\n- Update\n  patches.suse/net-dsa-felix-don-t-use-devres-for-mdiobus.patch\n  (git-fixes CVE-2022-48813 bsc#1227963).\n- Update\n  patches.suse/net-dsa-lantiq_gswip-don-t-use-devres-for-mdiobus.patch\n  (git-fixes CVE-2022-48812 bsc#1227971).\n- Update\n  patches.suse/net-dsa-lantiq_gswip-fix-use-after-free-in-gswip_rem.patch\n  (git-fixes CVE-2022-48783 bsc#1227949).\n- Update\n  patches.suse/net-dsa-mv88e6xxx-don-t-use-devres-for-mdiobus.patch\n  (git-fixes CVE-2022-48818 bsc#1228039).\n- Update\n  patches.suse/net-dsa-seville-register-the-mdiobus-under-devres.patch\n  (git-fixes CVE-2022-48814 bsc#1227944).\n- Update\n  patches.suse/net-ieee802154-at86rf230-Stop-leaking-skb-s.patch\n  (git-fixes CVE-2022-48794 bsc#1228025).\n- Update\n  patches.suse/net-marvell-prestera-Add-missing-of_node_put-in-pres.patch\n  (git-fixes CVE-2022-48859 bsc#1228007).\n- Update\n  patches.suse/net-mlx5-Fix-a-race-on-command-flush-flow.patch\n  (git-fixes CVE-2022-48858 bsc#1228006).\n- Update\n  patches.suse/net-packet-fix-slab-out-of-bounds-access-in-packet_r.patch\n  (CVE-2022-20368 bsc#1202346 CVE-2022-48839 bsc#1227985).\n- Update\n  patches.suse/net-smc-Avoid-overwriting-the-copies-of-clcsock-callback-functions\n  (git-fixes CVE-2022-48780 bsc#1227995).\n- Update\n  patches.suse/net-usb-ax88179_178a-Fix-out-of-bounds-accesses-in-R.patch\n  (bsc#1196018 CVE-2022-28748 bsc#1202686 CVE-2022-2964\n  CVE-2022-48805 bsc#1227969).\n- Update\n  patches.suse/nvme-fix-a-possible-use-after-free-in-controller-res.patch\n  (bsc#1193787 bsc#1197146 bsc#1193554 CVE-2022-48790\n  bsc#1227941).\n- Update\n  patches.suse/nvme-rdma-fix-possible-use-after-free-in-transport-e.patch\n  (bsc#1193787 bsc#1197146 bsc#1193554 CVE-2022-48788\n  bsc#1227952).\n- Update\n  patches.suse/nvme-tcp-fix-possible-use-after-free-in-transport-er.patch\n  (bsc#1193787 bsc#1197146 bsc#1193554 CVE-2022-48789\n  bsc#1228000).\n- Update\n  patches.suse/perf-Fix-list-corruption-in-perf_cgroup_switch.patch\n  (git fixes CVE-2022-48799 bsc#1227953).\n- Update\n  patches.suse/phy-stm32-fix-a-refcount-leak-in-stm32_usbphyc_pll_e.patch\n  (git-fixes CVE-2022-48820 bsc#1227972).\n- Update\n  patches.suse/phy-ti-Fix-missing-sentinel-for-clk_div_table.patch\n  (git-fixes CVE-2022-48803 bsc#1227965).\n- Update\n  patches.suse/s390-cio-verify-the-driver-availability-for-path_event-call\n  (bsc#1195927 LTC#196420 CVE-2022-48798 bsc#1227945).\n- Update\n  patches.suse/scsi-mpt3sas-Page-fault-in-reply-q-processing.patch\n  (git-fixes CVE-2022-48835 bsc#1228060).\n- Update patches.suse/scsi-myrs-Fix-crash-in-error-case.patch\n  (git-fixes CVE-2022-48824 bsc#1227964).\n- Update\n  patches.suse/scsi-pm8001-Fix-use-after-free-for-aborted-SSP-STP-sas_task.patch\n  (git-fixes CVE-2022-48792 bsc#1228013).\n- Update\n  patches.suse/scsi-pm8001-Fix-use-after-free-for-aborted-TMF-sas_task.patch\n  (git-fixes CVE-2022-48791 bsc#1228002).\n- Update\n  patches.suse/scsi-qedf-Add-stag_work-to-all-the-vports.patch\n  (git-fixes CVE-2022-48825 bsc#1228056).\n- Update\n  patches.suse/scsi-qedf-Fix-refcount-issue-when-LOGO-is-received-during-TMF.patch\n  (git-fixes CVE-2022-48823 bsc#1228045).\n- Update\n  patches.suse/staging-gdm724x-fix-use-after-free-in-gdm_lte_rx.patch\n  (git-fixes CVE-2022-48851 bsc#1227997).\n- Update\n  patches.suse/swiotlb-fix-info-leak-with-DMA_FROM_DEVICE.patch\n  (CVE-2022-0854 bsc#1196823 CVE-2022-48853 bsc#1228015).\n- Update patches.suse/usb-f_fs-Fix-use-after-free-for-epfile.patch\n  (git-fixes CVE-2022-48822 bsc#1228040).\n- Update\n  patches.suse/usb-gadget-Fix-use-after-free-bug-by-not-setting-udc.patch\n  (git-fixes CVE-2022-48838 bsc#1227988).\n- Update\n  patches.suse/usb-gadget-rndis-prevent-integer-overflow-in-rndis_s.patch\n  (git-fixes CVE-2022-48837 bsc#1227987).\n- Update\n  patches.suse/usb-usbtmc-Fix-bug-in-pipe-direction-for-control-tra.patch\n  (git-fixes CVE-2022-48834 bsc#1228062).\n- Update\n  patches.suse/vdpa-fix-use-after-free-on-vp_vdpa_remove.patch\n  (git-fixes CVE-2022-48861 bsc#1228009).\n- Update\n  patches.suse/vhost-fix-hung-thread-due-to-erroneous-iotlb-entries.patch\n  (git-fixes CVE-2022-48862 bsc#1228010).\n- Update\n  patches.suse/vsock-remove-vsock-from-connected-table-when-connect.patch\n  (git-fixes CVE-2022-48786 bsc#1227996).\n- Update\n  patches.suse/vt_ioctl-fix-array_index_nospec-in-vt_setactivate.patch\n  (git-fixes CVE-2022-48804 bsc#1227968).\n- Update patches.suse/watch_queue-Fix-filter-limit-check.patch\n  (CVE-2022-0995 bsc#1197246 CVE-2022-48847 bsc#1227993).\n- Update\n  patches.suse/xprtrdma-fix-pointer-derefs-in-error-cases-of-rpcrdm.patch\n  (git-fixes CVE-2022-48773 bsc#1227921).\n- commit e328ee7\n\n- Update\n  patches.suse/net-sunrpc-fix-reference-count-leaks-in-rpc_sysfs_xp.patch\n  (git-fixes CVE-2021-47624 bsc#1227920).\n- Update\n  patches.suse/scsi-ufs-Fix-a-deadlock-in-the-error-handler.patch\n  (git-fixes CVE-2021-47622 bsc#1227917).\n- commit f2d923e\n\n- nvme_core: scan namespaces asynchronously (bsc#1224105).\n- commit c8086f4\n\n- cgroup/cpuset: Prevent UAF in proc_cpuset_show() (bsc#1228801).\n- commit 8837200\n\n- net/dpaa2: Avoid explicit cpumask var allocation on stack\n  (CVE-2024-42093 bsc#1228680).\n- commit e2a1614\n\n- workqueue: Improve scalability of workqueue watchdog touch\n  (bsc#1193454).\n- commit 51a7eb4\n\n- workqueue: wq_watchdog_touch is always called with valid CPU\n  (bsc#1193454).\n- commit 10bbd80\n\n- KVM: arm64: Disassociate vcpus from redistributor region on\n  teardown (CVE-2024-40989 bsc#1227823).\n- commit 724dd5c\n\n- ASoC: topology: Fix references to freed memory (CVE-2024-41069\n  bsc#1228644).\n- commit 44dd0c7\n\n- Update\n  patches.suse/ext2-Avoid-reading-renamed-directory-if-parent-does-.patch\n  (bsc#1221044 CVE-2023-52591 bsc#1228440).\n- commit d21f810\n\n- hfsplus: fix uninit-value in copy_name (bsc#1228561\n  CVE-2024-41059).\n- commit cfc2db1\n\n- dmaengine: idxd: Fix possible Use-After-Free in\n  irq_process_work_list (CVE-2024-40956 bsc#1227810).\n- commit 3632d87\n\n- ocfs2: fix DIO failure due to insufficient transaction credits\n  (bsc#1216834).\n- commit edabc6f\n\n- tap: add missing verification for short frame (CVE-2024-41090\n  bsc#1228328).\n- commit e64bcfc\n\n- bpf: Fix overrunning reservations in ringbuf (bsc#1228020\n  CVE-2024-41009).\n- commit e559e61\n\n- rpm/guards: fix precedence issue with control flow operator\n  With perl 5.40 it report the following error on rpm/guards script:\n  Possible precedence issue with control flow operator (exit) at scripts/guards line 208.\n  Fix the issue by adding parenthesis around ternary operator.\n- commit 07b8b4e\n\n- drm/amdkfd: don't allow mapping the MMIO HDP page with large\n  pages (CVE-2024-41011 bsc#1228115).\n- commit ff8f843\n\n- 9p: add missing locking around taking dentry fid list (bsc#1227090, CVE-2024-39463).\n- commit c58a66f\n\n- sch_cake: do not call cake_destroy() from cake_init()\n  (CVE-2021-47598 bsc#1226574).\n- commit d533b8e\n\n- gve: Clear napi-\u0026gt;skb before dev_kfree_skb_any() (CVE-2024-40937\n  bsc#1227836).\n- commit 610d469\n\n- Update\n  patches.suse/powerpc-pseries-iommu-LPAR-panics-during-boot-up-wit.patch\n  (bsc#1222011 ltc#205900 CVE-2024-36926 bsc#1225829).\n- commit 1ec0d1e\n\n- Update\n  patches.suse/perf-x86-intel-pt-Fix-crash-with-stop-filters-in-single-range-mode.patch\n  (git fixes CVE-2022-48713 bsc#1227549).\n- Update\n  patches.suse/scsi-qedf-Ensure-the-copied-buf-is-NUL-terminated.patch\n  (bsc#1226758 CVE-2024-38559 bsc#1226785).\n- Update\n  patches.suse/tls-fix-use-after-free-on-failed-backlog-decryption.patch\n  (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186\n  CVE-2024-26800 bsc#1222728).\n- commit 329a684\n\n- vfio/fsl-mc: Block calling interrupt handler without trigger\n  (bsc#1222810 CVE-2024-26814).\n- commit 520ae3c\n\n- KVM: Always flush async #PF workqueue when vCPU is being\n  destroyed (bsc#1223635 CVE-2024-26976).\n- commit c5ed396\n\n- virtio-blk: fix implicit overflow on virtio_max_dma_size\n  (bsc#1225573 CVE-2023-52762).\n- commit 4296dc1\n\n- vfio/platform: Create persistent IRQ handlers (bsc#1222809\n  CVE-2024-26813).\n- commit a8290e8\n\n- net: mana: Fix Rx DMA datasize and skb_over_panic (git-fixes CVE-2024-35901 bsc#1224495).\n- commit 9db7ad0\n\n- Update patches.suse/net-tls-factor-out-tls_-crypt_async_wait.patch.\n- fix build warning\n- commit 01715f7\n\n- powerpc/pseries: Fix scv instruction crash with kexec\n  (bsc#1194869 CVE-2024-42230).\n- powerpc/kasan: Disable address sanitization in kexec paths\n  (bsc#1194869 CVE-2024-42230).\n- commit c9d175f\n\n- kernel-binary: vdso: Own module_dir\n- commit ff69986\n\n- Update\n  patches.suse/scsi-qedf-Ensure-the-copied-buf-is-NUL-terminated.patch\n  (bsc#1226785 CVE-2024-38559).\n  Fixed incorrect bug reference.\n- commit e3b8fb6\n\n- net/dcb: check for detached device before executing callbacks\n  (bsc#1215587).\n- commit 9c27e1c\n\n- kABI: rtas: Workaround false positive due to lost definition\n  (bsc#1227487).\n- commit fb8a8f3\n\n- powerpc/rtas: Prevent Spectre v1 gadget construction in\n  sys_rtas() (bsc#1227487).\n- commit 9648fb4\n\n- tls: fix use-after-free on failed backlog decryption\n  (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: separate no-async decryption request handling from async\n  (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: decrement decrypt_pending if no async completion will be\n  called (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186).\n- net: tls: handle backlogging of crypto requests (CVE-2024-26584\n  bsc#1220186).\n- tls: fix race between tx work scheduling and socket close\n  (CVE-2024-26585 bsc#1220187).\n- tls: fix race between async notify and socket close\n  (CVE-2024-26583 bsc#1220185).\n- net: tls: factor out tls_*crypt_async_wait() (CVE-2024-26583\n  CVE-2024-26584 bsc#1220185 bsc#1220186).\n- net: tls: fix async vs NIC crypto offload (CVE-2024-26583\n  CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: rx: use async as an in-out argument (CVE-2024-26583\n  CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: rx: assume crypto always calls our callback (CVE-2024-26583\n  CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: rx: don't track the async count (CVE-2024-26583\n  CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: rx: simplify async wait (CVE-2024-26583 CVE-2024-26584\n  bsc#1220185 bsc#1220186).\n- tls: rx: wrap decryption arguments in a structure\n  (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: rx: don't report text length from the bowels of decrypt\n  (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186).\n- tls: rx: drop unnecessary arguments from tls_setup_from_iter()\n  (CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186).\n- commit 63dd4a4\n\n- Delete\n  patches.suse/tls-fix-race-between-tx-work-scheduling-and-socket-c.patch.\n  Will be replaced with a refreshed version once all conflicting new patches are in.\n- commit a0fa0a3\n\n- NFS: Reduce use of uncached readdir (bsc#1226662).\n- NFS: Don't re-read the entire page cache to find the next cookie\n  (bsc#1226662).\n- commit a10cc0e\n\n- jfs: xattr: fix buffer overflow for invalid xattr\n  (bsc#1227383).\n- commit 33e2d96\n\nPackage avahi was updated:\n\n- prerequire avahi in avahi-autipd as we user \u0026quot;user avahi\u0026quot;\n- Add avahi-CVE-2024-52616.patch:\n  Backporting 1dade81c from upstream: Properly randomize query id\n  of DNS packets.\n  (CVE-2024-52616, bsc#1233420)\n\n- Add avahi-filter-bogus-services.patch: no longer supply bogus\n  services to callbacks (bsc#1226586).\n\nPackage util-linux was updated:\n\n- Skip aarch64 decode path for rest of the architectures  (bsc#1229476, util-linux-lscpu-skip-aarch64-decode.patch).\n\n- agetty: Prevent login cursor escape (bsc#1194818,\n  util-linux-agetty-prevent-cursor-escape.patch).\n\nPackage expat was updated:\n\n- security update- added patches\n  fix CVE-2024-50602 [bsc#1232579], DoS via XML_ResumeParser\n  + expat-CVE-2024-50602.patch\n\n- Security fix (bsc#1229932, CVE-2024-45492): detect integer\n  overflow in function nextScaffoldPart\n  * Added expat-CVE-2024-45492.patch\n- Security fix (bsc#1229931, CVE-2024-45491): detect integer\n  overflow in dtdCopy\n  * Added expat-CVE-2024-45491.patch\n- Security fix (bsc#1229930, CVE-2024-45490): reject negative\n  len for XML_ParseBuffer\n  * Added expat-CVE-2024-45490.patch\n\nPackage mozilla-nss was updated:\n\n- Updated nss-fips-approved-crypto-non-ec.patch to enforce  approved curves with the CKK_EC_MONTGOMERY key type (bsc#1224113).\n\nPackage ncurses was updated:\n\n- Add patch ncurses-6.1-boo1229028.patch (boo#1229028)  * Allow that terminal description based on static fallback\n    entries can be freed.\n\nPackage openssl-1_1 was updated:\n\n- Security fix: [bsc#1220262, CVE-2023-50782]  * Implicit rejection in PKCS#1 v1.5\n  * Add openssl-CVE-2023-50782.patch\n\n- Build with no-afalgeng [bsc#1226463]\n\n- Security fix: [bsc#1227138, CVE-2024-5535]\n  * SSL_select_next_proto buffer overread\n  * Add openssl-CVE-2024-5535.patch\n\nPackage libpcap was updated:\n\n- enable rdma support (bsc#1230894)\n- Security fix: [bsc#1230034, CVE-2024-8006]\n  * libpcap: NULL pointer derefence in pcap_findalldevs_ex()\n  * Add libpcap-CVE-2024-8006.patch\n\n- Security fix: [bsc#1230020, CVE-2023-7256]\n  * libpcap: double free via addrinfo in sock_initaddress()\n  * Add libpcap-CVE-2023-7256.patch\n\nPackage python3 was updated:\n\n- Remove -IVendor/ from python-config boo#1231795- Fix CVE-2024-11168-validation-IPv6-addrs.patch\n- PGO run of build freezes with parallel processing, switch to -j1\n\n- Add CVE-2024-11168-validation-IPv6-addrs.patch\n  fixing bsc#1233307 (CVE-2024-11168,\n  gh#python/cpython#103848): Improper validation of IPv6 and\n  IPvFuture addresses.\n\n- Add CVE-2024-9287-venv_path_unquoted.patch to properly quote\n  path names provided when creating a virtual environment\n  (bsc#1232241, CVE-2024-9287)\n\n- Drop .pyc files from docdir for reproducible builds\n  (bsc#1230906).\n\n- Add CVE-2024-6232-ReDOS-backtrack-tarfile.patch prevent\n  ReDos via excessive backtracking while parsing header values\n  (bsc#1230227, CVE-2024-6232).\n\n- Add CVE-2024-5642-switch-off-NPN.patch switching off the NPN\n  support eliminating bsc#1227233 (CVE-2024-5642).\n\n- Add CVE-2024-6923-email-hdr-inject.patch to prevent email\n  header injection due to unquoted newlines (bsc#1228780,\n  CVE-2024-6923).\n- Add CVE-2024-7592-quad-complex-cookies.patch fixing quadratic\n  complexity in parsing cookies with backslashes (bsc#1229596,\n  CVE-2024-7592)\n- %{profileopt} variable is set according to the variable\n  %{do_profiling} (bsc#1227999)\n\n- Remove %suse_update_desktop_file macro as it is not useful any\n  more.\n\n- Stop using %%defattr, it seems to be breaking proper executable\n  attributes on /usr/bin/ scripts (bsc#1227378).\n\nPackage ruby2.5 was updated:\n\n- backport REXML from 3.3  - fix denial of service when parsing a XML that has many deep\n    elements with the same local name attributes\n    (boo#1229673 CVE-2024-43398)\n  - fix denial of service when parsing an XML that contains many\n    specific characters such as whitespaces, \u0026gt;] and ]\u0026gt;\n    (boo#1228794 CVE-2024-41123)\n  - fix denial of service when parsing an XML that has many entity\n    expansions with SAX2 or pull parser API\n    (boo#1228799 CVE-2024-41946)\n  - fix denial of service when parsing an XML that has many left\n    angled brackets in an attribute value\n    (boo#1224390 CVE-2024-35176)\n  - fix ReDoS when parsing an XML that has many specific characters\n    (boo#1228072 CVE-2024-39908)\n\nPackage libsolv was updated:\n\n- fix replaces_installed_package using the wrong solvable id  when checking the noupdate map\n- make POOL_FLAG_ADDFILEPROVIDESFILTERED behaviour more standard\n- add rpm_query_idarray query function\n- support rpm's \u0026quot;orderwithrequires\u0026quot; dependency\n- bump version to 0.7.31\n\n- removed dependency on external find program in the repo2solv tool\n- bindings: fix return value of repodata.add_solv()\n- new SOLVER_FLAG_FOCUS_NEW flag\n- bump version to 0.7.30\n\nPackage suseconnect-ng was updated:\n\n- Update version to 1.13:  - Integrating uptime-tracker\n  - Honor auto-import-gpg-keys flag on migration (bsc#1231328)\n  - Only send labels if targetting SCC\n  - Skip the docker auth generation on RMT (bsc#1231185)\n  - Add --set-labels to register command to set labels at registration time on SCC\n  - Add a new function to display suse-uptime-tracker version\n  - Integrate with uptime-tracker ( https://github.com/SUSE/uptime-tracker/ )\n  - Add a command to show the info being gathered\n\n- Update version to 1.12:\n  - Set the filesystem root on zypper when given (bsc#1230229,bsc#1229014)\n\nPackage systemd was updated:\n\n- Import commit cba472567893618e15b4ab95a3cb0a762ad3ed10  0e8c003e1f core/unit: increase the NameOwnerChanged/GetNameOwner timeout to the unit's start timeout (bsc#1230272)\n  621e16c0b8 core/unit: add get_timeout_start_usec in UnitVTable and define it for service\n  b4140d888a sd-bus: make bus_add_match_full accept timeout\n  81cb3a4fb5 udev-builtin-path_id: SAS wide ports must have num_phys \u0026gt; 1 (bsc#1231610)\n  533e98fc6b sd-device: add helper to read a unsigned int attribute\n\n- Import commit a57a6d239c5d6b91fb3dcd269705e60804a03ae1\n  cd0c9ac4f4 unit: drop ProtectClock=yes from systemd-udevd.service (bsc#1226414)\n  e1eaa86a49 udev: do not set ID_PATH and by-path symlink for nvmf disks\n  a85d211874 man: Document ranges for distributions config files and local config files\n\n- Don't mention any rpm macros inside comments, even if escaped (bsc#1228091)\n  Otherwise pesign-obs-integration ends up re-packaging systemd with all macros\n  inside comments unescaped leading to unpredictable behavior. Now why rpm\n  expands rpm macros inside comments is the question...\n\n- Update 1011-sysv-generator-add-back-support-for-SysV-scripts-for.patch\n  Really skip redundant dependencies specified the LSB description that\n  references the file name of the service itself for early boot scripts (noticed\n  in bsc#1221479).\n\nPackage tiff was updated:\n\n- security update:  * CVE-2024-7006 [bsc#1228924]\n    Fix pointer deref in tif_dirinfo.c\n    + tiff-CVE-2024-7006.patch\n\nPackage libzypp was updated:\n\n- Url: queryparams without value should not have a trailing \u0026quot;=\u0026quot;.- version 17.35.16 (35)\n\n- Url query part: `=` is a safe char in value (bsc#1234304)\n- RpmDb: Recognize rpmdb.sqlite as database file (#593)\n- Fix typo (fixes #592)\n- cmake: check location of fcgi header and adjust include\n  accordingly. On Debian and derivatives the fcgi headers\n  are not stored in a fastcgi/ subdirectory.(#590)\n- version 17.35.15 (35)\n\n- The 20MB download limit must not apply to non-metadata files like\n  package URLs provided via the CLI (bsc#1233393).\n- version 17.35.14 (35)\n\n- BuildCache: Don't try to retrieve missing raw metadata if no\n  permission to write the cache (bsc#1225451)\n- RepoManager: throw RepoNoPermissionException if the user has no\n  permission to update(write) the caches (bsc#1225451)\n- version 17.35.13 (35)\n\n- PluginFrame: Send unescaped colons in header values\n  (bsc#1231043)\n  According to the STOMP protocol it would be correct to escape a\n  colon in a header-value, but it breaks plugin receivers which do\n  not expect this. The first colon separates header-name from\n  header-value, so escaping in the header-value is not needed\n  anyway.\n  Escaping in the header-value affects especially the urlresolver\n  plugins. The input URL is passed in a header, but sent back as\n  raw data in the frames body. If the plugin receiver does not\n  correctly unescape the URL we may get back a \u0026quot;https\\c//\u0026quot; which is\n  not usable.\n- Do not ignore return value of std::remove_if in MediaSyncFacade\n  (fixes #579)\n- Fix hang in curl code with no network connection (bsc#1230912)\n- version 17.35.12 (35)\n\n- Deprecate librpmDb::db_const_iterator default ctor (bsc#1230267)\n  It's preferred to explicitly tell the root directory of the\n  system whose database you want to query.\n- version 17.35.11 (35)\n\n- API refactoring. Prevent zypper from using now private libzypp\n  symbols (bsc#1230267)\n- Conflicts: zypper \u0026lt;= 1.14.76\n- version 17.35.10 (35)\n\n- single_rpmtrans: fix installation of .src.rpms (bsc#1228647)\n- version 17.35.9 (35)\n\n- Make sure not to statically linked installed tools (bsc#1228787)\n- version 17.35.8 (35)\n\n- MediaPluginType must be resolved to a valid MediaHandler\n  (bsc#1228208)\n- version 17.35.7 (35)\n\n- Export CredentialManager for legacy YAST versions (bsc#1228420)\n- version 17.35.6 (35)\n\n- Export asSolvable for YAST (bsc#1228420)\n- Fix 4 typos in zypp.conf.\n- version 17.35.5 (35)\n\n- Fix typo in the geoip update pipeline (bsc#1228206)\n- Export RepoVariablesStringReplacer for yast2 (bsc#1228138)\n- version 17.35.4 (35)\n\n- Translation: updated .pot file.\n- Conflict with python zypp-plugin \u0026lt; 0.6.4 (bsc#1227793)\n  Older zypp-plugins reject stomp headers including a '-'. Like the\n  'content-length' header we may send.\n- Fix int overflow in Provider (fixes #559)\n  This patch fixes an issue in safe_strtonum which caused\n  timestamps to overflow in the Provider message parser.\n- Fix error reporting on repoindex.xml parse error (bsc#1227625)\n- version 17.35.3 (35)\n\n- Keep UrlResolverPlugin API public (fixes #560)\n- Blacklist /snap executables for 'zypper ps' (bsc#1226014)\n- Fix handling of buddies when applying locks (bsc#1225267)\n  Buddy pairs (like -release package and product) internally share\n  the same status object. When applying locks from query results\n  the locked bit must be set if either item is locked.\n- version 17.35.2 (35)\n\n- Install zypp/APIConfig.h legacy include (fixes #557)\n- version 17.35.1 (35)\n\n- Update soname due to RepoManager refactoring and cleanup.\n- version 17.35.0 (35)\n\n- Workaround broken libsolv-tools-base requirements (fixes\n  openSUSE/zypper#551)\n- Strip ssl_clientkey from repo urls (bsc#1226030)\n- Remove protobuf build dependency.\n- Lazily attach medium during refresh workflows (bsc#1223094)\n- Refactor RepoManager and add Service workflows.\n- version 17.34.2 (34)\n\nPackage shadow was updated:\n\n- bsc#1230972: Add useradd warnings when requested UID is outside  the default range\n- add shadow-bsc1230972-useradd-warning.patch\n\n- bsc#1228337: chage -d date vs passwd -S output is off by one\n  Remove shadow-bsc1176006-chage-date.patch\n\nPackage logrotate was updated:\n\n- Backport 'ignoreduplicates' configuration flag (jsc#PED-10366)  * Added patch logrotate-ignore-duplicates.patch\n  * Allows log processing with duplicate logfile matches\n\nPackage opensc was updated:\n\n- Security fix: [opensc-CVE-2024-45620, bsc#1230076]- Security fix: [opensc-CVE-2024-45619, bsc#1230075]\n- Security fix: [opensc-CVE-2024-45618, bsc#1230074]\n- Security fix: [opensc-CVE-2024-45617, bsc#1230073]\n- Security fix: [opensc-CVE-2024-45616, bsc#1230072]\n- Security fix: [opensc-CVE-2024-45615, bsc#1230071]\n  * opensc: pkcs15init: Usage of uninitialized values in libopensc and pkcs15init\n  * opensc: Uninitialized values after incorrect check or usage of APDU response values in libopensc\n  * opensc: Uninitialized values after incorrect or missing checking return values of functions in libopensc\n  * opensc: Uninitialized values after incorrect or missing checking return values of functions in pkcs15init\n  * opensc: Incorrect handling length of buffers or files in libopensc\n  * opensc: Incorrect handling of the length of buffers or files in pkcs15init\n  * Added patches:\n  - opensc-CVE-2024-45615.patch\n  - opensc-CVE-2024-45616.patch\n  - opensc-CVE-2024-45617.patch\n  - opensc-CVE-2024-45618.patch\n  - opensc-CVE-2024-45619.patch\n  - opensc-CVE-2024-45620.patch\n\n- Security fix: [CVE-2024-8443, bsc#1230364]\n  * Disable deprecated declaration warnings caused by OpenSSL 3 (bsc#1217722)\n  * opensc: heap buffer overflow in OpenPGP driver when generating key\n  * Added patch: opensc-CVE-2024-8443.patch\n\nPackage pam-config was updated:\n\n- Change check for existence of modules.  If we have a biarch architecture, we check that the 64bit\n  PAM module is there and report an error if not. For the 32bit\n  variant, we only issue a warning.\n  [pam-config-change-check-for-existence-of-modules.patch, bsc#1227216]\n\nPackage pam was updated:\n\n- Prevent cursor escape from the login prompt [bsc#1194818]  * Added: pam-bsc1194818-cursor-escape.patch\n\nPackage python-Jinja2 was updated:\n\nPackage python-PyYAML was updated:\n\nPackage salt was updated:\n\n- Fix failing x509 tests with OpenSSL \u0026lt; 1.1- Avoid explicit reading of /etc/salt/minion (bsc#1220357)\n- Allow NamedLoaderContexts to be returned from loader\n- Revert the change making reactor less blocking (bsc#1230322)\n- Use --cachedir for extension_modules in salt-call (bsc#1226141)\n- Prevent using SyncWrapper with no reason\n- Fix the SELinux context for Salt Minion service (bsc#1219041)\n- Set contextvars as a build requirement for package\n- Increase warn_until_date date for code we still support\n- The test_debian test now uses port 80 for ubuntu keyserver\n- Fix too frequent systemd service restart in test_system test\n- Avoid crash on wrong output of systemctl version (bsc#1229539)\n- Improve error handling with different OpenSSL versions\n- Remove redundant run_func from salt.master.MWorker._handle_aes\n- Fix cloud minion configuration for multiple masters (bsc#1229109)\n- Use Pygit2 id instead of deprecated oid in gitfs\n- Fix few failing tests to work with both Salt and Salt bundle\n- Skip testing unsupported OpenSSL crypto algorithms\n- Added:\n  * join-masters-if-it-is-a-list-671.patch\n  * fix-deprecated-code-677.patch\n  * fix-x509-test-fails-on-old-openssl-systems-682.patch\n  * replace-use-of-pygit2-deprecated-and-removed-1.15.0-.patch\n  * fix-the-selinux-context-for-salt-minion-service-bsc-.patch\n  * avoid-crash-on-wrong-output-of-systemctl-version-bsc.patch\n  * use-cachedir-for-extension_modules-in-salt-call-bsc-.patch\n  * allow-namedloadercontexts-to-be-returned-from-loader.patch\n  * prevent-using-syncwrapper-with-no-reason.patch\n  * make-tests-compatible-with-venv-bundle.patch\n  * fix-test_debian-to-work-in-our-infrastructure-676.patch\n  * skip-more-tests-related-to-old-openssl-algorithms.patch\n  * fix-test_system-flaky-setup_teardown-fn.patch\n  * remove-redundant-run_func-from-salt.master.mworker._.patch\n  * improve-error-handling-with-different-openssl-versio.patch\n  * avoid-explicit-reading-of-etc-salt-minion-bsc-122035.patch\n  * revert-the-change-making-reactor-less-blocking-bsc-1.patch\n\n- Fix rich rule comparison in firewalld module (bsc#1222684)\n- test_vultrpy: adjust test expectation to prevent failure after Debian 10 EOL\n- Make auth.pam more robust with Salt Bundle and fix tests\n- Fix performance of user.list_groups with many remote groups\n- Fix \u0026quot;status.diskusage\u0026quot; function and exclude some tests for Salt Bundle\n- Skip certain tests if necessary for some OSes and set flaky ones\n- Add a timer to delete old env post update for venv-minion\n- Several fixes for tests to avoid errors and failures in some OSes\n- Added:\n  * test_vultrpy-adjust-test-expectation-to-prevent-fail.patch\n  * skip-certain-tests-if-necessary-and-mark-some-flaky-.patch\n  * some-more-small-tests-fixes-enhancements-661.patch\n  * firewalld-normalize-new-rich-rules-before-comparing-.patch\n  * several-fixes-for-tests-to-avoid-errors-and-failures.patch\n  * provide-systemd-timer-unit.patch\n  * fix-user.list_groups-omits-remote-groups.patch\n  * fix-status.diskusage-and-exclude-some-tests-to-run-w.patch\n\nPackage python3-setuptools was updated:\n\n- Add patch CVE-2024-6345-code-execution-via-download-funcs.patch:  * Sanitize any VCS URL we download. (CVE-2024-6345, bsc#1228105)\n\nPackage zypp-plugin was updated:\n\n- Fix stomp header regex to include '-' (bsc#1227793)- version 0.6.4\n\n- singlespec in Tumbleweed must support multiple python3 flavors\n  in the future gh#openSUSE/python-rpm-macros#66\n\n- Provide python3-zypp-plugin down to SLE12 (bsc#1081596)\n\n- Provide python3-zypp-plugin in SLE12-SP3 (bsc#1081596)\n\nPackage regionServiceClientConfigGCE was updated:\n\n- Version 4.2.0 (jsc#PCT-361)  + Add IPv6 certs to supprt access of the update infrastructure via\n    IPv6 on GCE instances.\n\n- Update to version 4.1.0 (bsc#1217538)\n  + Replace 162.222.182.90 and 35.187.193.56 (length 4096):\n    rgnsrv-gce-asia-northeast1 -\u0026gt; 162.222.182.90 expires in 9 years\n    rgnsrv-gce-us-central1 -\u0026gt; 35.187.193.56 expires in 10 years\n\nPackage rsyslog was updated:\n\n- fix PreserveFQDN option before daemon is restarted (bsc#1231229)  add 0001-core-bugfix-rsyslog-messages-may-not-always-have-FQD.patch\n\n- restart daemon after update at the end of the transaction\n  (bsc#1230984)\n\nPackage rubygem-nokogiri was updated:\n\n- added only-complain-about-version-diff-if-it-is-older.patch:  make nokogiri only complain about mismatching libxml2 version\n  if the runtime version is older than the build version as we\n  assume newer versions should be ABI compatible (boo#1213999)\n\nPackage runc was updated:\n\n[ This was only ever released for SLES and Leap. ]- Update to runc v1.1.14. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.1.14\u0026gt;.\n  Includes the patch for CVE-2024-45310. bsc#1230092\n- Rebase patches:\n  * 0001-bsc1221050-libct-seccomp-patchbpf-rm-duplicated-code.patch\n  * 0002-bsc1221050-seccomp-patchbpf-rename-nativeArch-linuxA.patch\n  * 0003-bsc1221050-seccomp-patchbpf-always-include-native-ar.patch\n  * 0004-bsc1214960-nsenter-cloned_binary-remove-bindfd-logic.patch\n\nPackage scap-security-guide was updated:\n\n- updated to 0.1.74 (jsc#ECO-3319)  - Add Amazon Linux 2023 product (#12006)\n  - Introduce new remediation type Kickstart (#12144)\n  - Make PAM macros more flexible to variables (#12133)\n  - Remove Debian 10 Product (#12205)\n  - Remove Red Hat Enterprise Linux 7 product (#12093)\n  - Update CIS RHEL9 control file to v2.0.0 (#12067)\n\nPackage shim was updated:\n\n- Update shim-install to apply the missing fix for openSUSE Leap  (bsc#1210382) fixed by Gary.\n  * 86b73d1 Fix that bootx64.efi is not updated on Leap\n- Update shim-install to use the 'removable' way for SL-Micro\n  (bsc#1230316) fixed by Gary.\n  * 433cc4e Always use the removable way for SL-Micro\n\nPackage 000release-packages:sle-module-basesystem-release was updated:\n\nPackage 000release-packages:sle-module-containers-release was updated:\n\nPackage 000release-packages:sle-module-desktop-applications-release was updated:\n\nPackage 000release-packages:sle-module-development-tools-release was updated:\n\nPackage 000release-packages:sle-module-public-cloud-release was updated:\n\nPackage 000release-packages:sle-module-server-applications-release was updated:\n\nPackage SLES-release was updated:\n\nPackage strace was updated:\n\n- Change the license to the correct LGPL-2.1-or-later  (bsc#1228216).\n\nPackage supportutils was updated:\n\n- Changes to version 3.2.8  + Avoid getting duplicate kernel verifications in boot.text (pr#190)\n  + lvm: suppress file descriptor leak warnings from lvm commands (pr#191)\n  + docker_info: Add timestamps to container logs (pr#196)\n  + Key value pairs and container log timestamps (bsc#1222021 PED-8211, pr#198)\n  + Update supportconfig get pam.d sorted (pr#199)\n  + yast_files: Exclude .zcat (pr#201)\n  + Sanitize grub bootloader (bsc#1227127, pr#203)\n  + Sanitize regcodes (pr#204)\n  + Improve product detection (pr#205)\n  + Add read_values for s390x (bsc#1228265, pr#206)\n  + hardware_info: Remove old alsa ver check (pr#209)\n  + drbd_info: Fix incorrect escape of quotes (pr#210)\n\nPackage suse-build-key was updated:\n\n- extended 2048 bit SUSE SLE 12, 15 GA-SP5 key until 2028. (bsc#1229339)  - gpg-pubkey-39db7c82-5f68629b.asc\n  + gpg-pubkey-39db7c82-66c5d91a.asc\n\n- ensure key2rpmname is called using bash.\n\n- make the per-project inclusion optional, default off.\n\n- Also include the GPG key from the current build project\n  to allow Staging testing without production keys. (bsc#1231829)\n\nPackage unzip was updated:\n\n- Use %patch -P N instead of deprecated %patchN.\n- Build unzip-rcc using multibuild and update unzip-rcc.spec file\n\nPackage util-linux-systemd was updated:\n\n- Skip aarch64 decode path for rest of the architectures  (bsc#1229476, util-linux-lscpu-skip-aarch64-decode.patch).\n\n- agetty: Prevent login cursor escape (bsc#1194818,\n  util-linux-agetty-prevent-cursor-escape.patch).\n\nPackage vim was updated:\n\n- Provide latest 9.1.0836 release.- Fix for bsc#1230625 and bsc#1231846.\n\n- update to 9.1.0836\n  * 9.1.0836: The vimtutor can be improved\n  * 9.1.0835: :setglobal doesn't work properly for 'ffu' and 'tsrfu'\n  * 9.1.0834: tests: 2html test fails\n  * 9.1.0833: CI: recent ASAN changes do not work for indent tests\n  * 9.1.0832: :set doesn't work for 'cot' and 'bkc' after :setlocal\n  * runtime(doc): update help-toc description\n  * runtime(2html): Make links use color scheme colors in TOhtml\n  * 9.1.0831: 'findexpr' can't be used as lambad or Funcref\n  * Filelist: include helptoc package\n  * runtime(doc): include a TOC Vim9 plugin\n  * Filelist: ignore .git-blame-ignore-revs\n  * 9.1.0830: using wrong highlight group for spaces for popupmenu\n  * runtime(typst): synchronize updates from the upstream typst.vim\n  * git: ignore reformatting commit for git-blame (after v9.1.0829)\n  * 9.1.0829: Vim source code uses a mix of tabs and spaces\n  * 9.1.0828: string_T struct could be used more often\n  * 9.1.0827: CI: tests can be improved\n  * runtime(doc): remove stray sentence in pi_netrw.txt\n  * 9.1.0826: filetype: sway files are not recognized\n  * runtime(doc): Include netrw-gp in TOC\n  * runtime(doc): mention 'iskeyword' at :h charclass()\n  * runtime(doc): update help tags\n  * 9.1.0825: compile error for non-diff builds\n  * runtime(netrw): fix E874 when browsing remote directory which contains `~` character\n  * runtime(doc): update coding style documentation\n  * runtime(debversions): Add plucky (25.04) as Ubuntu release name\n  * 9.1.0824: too many strlen() calls in register.c\n  * 9.1.0823: filetype: Zephyr overlay files not recognized\n  * runtime(doc): Clean up minor formatting issues for builtin functions\n  * runtime(netrw): make :Launch/Open autoloadable\n  * runtime(netrw): fix regression with x mapping on Cygwin\n  * runtime(netrw): fix filetype detection for remote files\n  * 9.1.0822: topline might be changed in diff mode unexpectedly\n  * CI: huge linux builds should also run syntax \u0026amp; indent tests\n  * 9.1.0821: 'findexpr' completion doesn't set v:fname to cmdline argument\n  * 9.1.0820: tests: Mac OS tests are too flaky\n  * runtime(awk): Highlight more awk comments in syntax script\n  * runtime(netrw): add missing change for s:redir()\n  * 9.1.0819: tests: using findexpr and imported func not tested\n  * runtime(netrw): improve netrw's open-handling further\n  * runtime(netrw): fix syntax error in netrwPlugin.vim\n  * runtime(netrw): simplify gx file handling\n  * 9.1.0818: some global functions are only used in single files\n  * 9.1.0817: termdebug: cannot evaluate expr in a popup\n  * runtime(defaults): Detect putty terminal and switch to dark background\n  * 9.1.0816: tests: not clear what tests cause asan failures\n  * runtime(doc): Remove some completed items from todo.txt\n  * 9.1.0815: \u0026quot;above\u0026quot; virtual text causes wrong 'colorcolumn' position\n  * runtime(syntax-tests): tiny vim fails because of line-continuation\n  * 9.1.0814: mapset() may remove unrelated mapping\n  * 9.1.0813: no error handling with setglobal and number types\n  * 9.1.0812: Coverity warns about dereferencing NULL ptr\n  * 9.1.0811: :find expansion does not consider 'findexpr'\n  * 9.1.0810: cannot easily adjust the |:find| command\n  * 9.1.0809: filetype: petalinux config files not recognized\n  * 9.1.0808: Terminal scrollback doesn't shrink when decreasing 'termwinscroll'\n  * 9.1.0807: tests: having 'nolist' in modelines isn't always desired\n  * 9.1.0806: tests: no error check when setting global 'briopt'\n  * 9.1.0805: tests: minor issues in gen_opt_test.vim\n  * 9.1.0804: tests: no error check when setting global 'cc'\n  * 9.1.0803: tests: no error check when setting global 'isk'\n  * 9.1.0802: tests: no error check when setting global 'fdm' to empty value\n  * 9.1.0801: tests: no error check when setting global 'termwinkey'\n  * 9.1.0800: tests: no error check when setting global 'termwinsize'\n  * runtime(doc): :ownsyntax also resets 'spelloptions'\n  * 9.1.0799: tests: gettwinvar()/gettabwinvar() tests are not comprehensive\n  * runtime(doc): Fix wrong Mac default options\n  * 9.1.0798: too many strlen() calls in cmdhist.c\n  * 9.1.0797: testing of options can be further improved\n  * 9.1.0796: filetype: libtool files are not recognized\n  * (typst): add folding to typst ftplugin\n  * runtime(netrw): deprecate and remove netrwFileHandlers#Invoke()\n  * 9.1.0795: filetype: Vivado memory info file are not recognized\n  * 9.1.0794: tests: tests may fail on Windows environment\n  * runtime(doc): improve the :colorscheme documentation\n  * 9.1.0793: xxd: -e does add one extra space\n  * 9.1.0792: tests: Test_set_values() is not comprehensive enough\n  * runtime(swayconfig): add flag for bindsym/bindcode to syntax script\n  * 9.1.0791: tests: errors in gen_opt_test.vim are not shown\n  * runtime(compiler): check for compile_commands in build dirs for cppcheck\n  * 9.1.0790: Amiga: AmigaOS4 build should use default runtime (newlib)\n  * runtime(help): Update help syntax\n  * runtime(help): fix end of sentence highlight in code examples\n  * runtime(jinja): Support jinja syntax as secondary filetype\n  * 9.1.0789: tests: ':resize + 5' has invalid space after '+'\n  * 9.1.0788: \u0026lt;CSI\u0026gt;27;\u0026lt;mod\u0026gt;u is not decoded to literal Escape in kitty/foot\n  * 9.1.0787: cursor position changed when using hidden terminal\n  * 9.1.0786: tests: quickfix update test does not test location list\n  * runtime(doc): add some docs for file-watcher programs\n  * CI: uploading failed screendumps still fails on Cirrus CI\n  * 9.1.0785: cannot preserve error position when setting quickfix list\n  * 9.1.0784: there are several problems with python 3.13\n  * 9.1.0783: 'spell' option setting has problems\n  * 9.1.0782: tests: using wrong neomuttlog file name\n  * runtime(doc): add preview flag to statusline example\n  * 9.1.0781: tests: test_filetype fails\n  * 9.1.0780: MS-Windows: incorrect Win32 error checking\n  * 9.1.0779: filetype: neomuttlog files are not recognized\n  * 9.1.0778: filetype: lf config files are not recognized\n  * runtime(comment): fix commment toggle with mixed tabs \u0026amp; spaces\n  * runtime(misc): Use consistent \u0026quot;Vim script\u0026quot; spelling\n  * runtime(gleam): add ftplugin for gleam files\n  * runtime(doc): link help-writing from write-local-help\n  * 9.1.0777: filetype: Some upstream php files are not recognized\n  * runtime(java): Define javaBlockStart and javaBlockOtherStart hl groups\n  * runtime(doc): mention conversion rules for remote_expr()\n  * runtime(tutor): Fix missing :s command in spanish translation section 4.4\n  * 9.1.0776: test_strftime may fail because of missing TZ data\n  * translation(am): Add Armenian language translation\n  * 9.1.0775: tests: not enough tests for setting options\n  * 9.1.0774: \u0026quot;shellcmdline\u0026quot; doesn't work with getcompletion()\n  * 9.1.0773: filetype: some Apache files are not recognized\n  * 9.1.0772: some missing changes from v9.1.0771\n  * 9.1.0771: completion attribute hl_group is confusing\n  * 9.1.0770: current command line completion is a bit limited\n  * 9.1.0769: filetype: MLIR files are not recognized\n  * 9.1.0768: MS-Windows: incorrect cursor position when restoring screen\n  * runtime(nasm): Update nasm syntax script\n  * 9.1.0767: A condition is always true in ex_getln.c\n  * runtime(skill): Update syntax file to fix string escapes\n  * runtime(help): highlight CTRL-\u0026lt;Key\u0026gt; correctly\n  * runtime(doc): add missing usr_52 entry to toc\n  * 9.1.0766: too many strlen() calls in ex_getln.c\n  * runtime(doc): correct `vi` registers 1-9 documentation error\n  * 9.1.0765: No test for patches 6.2.418 and 7.3.489\n  * runtime(spec): set comments and commentstring options\n  * NSIS: Include libgcc_s_sjlj-1.dll again\n  * runtime(doc): clarify the effect of 'startofline' option\n  * 9.1.0764: [security]: use-after-free when closing a buffer\n  * runtime(vim): Update base-syntax file, improve class, enum and interface highlighting\n  * 9.1.0763: tests: cannot run single syntax tests\n  * 9.1.0762: 'cedit', 'termwinkey' and 'wildchar' may not be parsed correctly\n  * 9.1.0761: :cd completion fails on Windows with backslash in path\n  * 9.1.0760: tests: no error reported, if gen_opt_test.vim fails\n  * 9.1.0759: screenpos() may return invalid position\n  * runtime(misc): unset compiler in various ftplugins\n  * runtime(doc): update formatting and syntax\n  * runtime(compiler): add cppcheck linter compiler plugin\n  * runtime(doc): Fix style in documents\n  * runtime(doc): Fix to two-space convention in user manual\n  * runtime(comment): consider \u0026amp;tabstop in lines after whitespace indent\n  * 9.1.0758: it's possible to set an invalid key to 'wildcharm'\n  * runtime(java): Manage circularity for every :syn-included syntax file\n  * 9.1.0757: tests: messages files contains ANSI escape sequences\n  * 9.1.0756: missing change from patch v9.1.0754\n  * 9.1.0755: quickfix list does not handle hardlinks well\n  * runtime(doc): 'filetype', 'syntax' and 'keymap' only allow alphanumeric + some characters\n  * runtime(systemd): small fixes to \u0026amp;keywordprg in ftplugin\n  * CI: macos-12 runner is being sunset, switch to 13\n  * 9.1.0754: fixed order of items in insert-mode completion menu\n  * runtime(comment): commenting might be off by one column\n  * 9.1.0753: Wrong display when typing in diff mode with 'smoothscroll'\n  * 9.1.0752: can set 'cedit' to an invalid value\n  * runtime(doc): add `usr` tag to usr_toc.txt\n  * 9.1.0751: Error callback for term_start() not used\n  * 9.1.0750: there are some Win9x legacy references\n  * runtime(java): Recognise the CommonMark form (///) of Javadoc comments\n  * 9.1.0749: filetype: http files not recognized\n  * runtime(comment): fix syntax error\n  * CI: uploading failed screendump tests does not work Cirrus\n  * 9.1.0748: :keep* commmands are sometimes misidentified as :k\n  * runtime(indent): allow matching negative numbers for gnu indent config file\n  * runtime(comment): add gC mapping to (un)comment rest of line\n  * 9.1.0747: various typos in repo found\n  * 9.1.0746: tests: Test_halfpage_longline() fails on large terminals\n  * runtime(doc): reformat gnat example\n  * runtime(doc): reformat ada_standard_types section\n  * 9.1.0745: filetype: bun and deno history files not recognized\n  * runtime(glvs): Correct the tag name of glvs-autoinstal\n  * runtime(doc): include short form for :earlier/:later\n  * runtime(doc): remove completed TODO\n  * 9.1.0744: filetype: notmuch configs are not recognised\n  * 9.1.0743: diff mode does not handle overlapping diffs correctly\n  * runtime(glvs): fix a few issues\n  * runtime(doc): Fix typo in :help :command-modifiers\n  * 9.1.0742: getcmdprompt() implementation can be improved\n  * runtime(docs): update `:set?` command behavior table\n  * runtime(doc): update vim90 to vim91 in docs\n  * runtime(doc): fix typo in :h dos-colors\n  * 9.1.0741: No way to get prompt for input()/confirm()\n  * runtime(doc): fix typo in version9.txt nrformat -\u0026gt; nrformats\n  * runtime(rmd,rrst): 'fex' option not properly restored\n  * runtime(netrw): remove extraneous closing bracket\n  * 9.1.0740: incorrect internal diff with empty file\n  * 9.1.0739: [security]: use-after-free in ex_getln.c\n  * runtime(filetype): tests: Test_filetype_detection() fails\n  * runtime(dist): do not output a message if executable is not found\n  * 9.1.0738: filetype: rapid files are not recognized\n  * runtime(modconf): remove erroneous :endif in ftplugin\n  * runtime(lyrics): support multiple timestamps in syntax script\n  * runtime(java): Optionally recognise _module_ import declarations\n  * runtime(vim): Update base-syntax, improve folding function matches\n  * CI: upload failed screendump tests also for Cirrus\n  * 9.1.0737: tests: screendump tests may require a bit more time\n  * runtime(misc): simplify keywordprg in various ftplugins\n  * runtime(java): Optionally recognise all primitive constants in _switch-case_ labels\n  * runtime(zsh,sh): set and unset compiler in ftplugin\n  * runtime(netrw): using inefficient highlight pattern for 'mf'\n  * 9.1.0736: Unicode tables are outdated\n  * 9.1.0735: filetype: salt files are not recognized\n  * 9.1.0734: filetype: jinja files are not recognized\n  * runtime(zathurarc): add double-click-follow to syntax script\n  * translation(ru): Updated messages translation\n  * translation(it): updated xxd man page\n  * translation(ru): updated xxd man page\n  * 9.1.0733: keyword completion does not work with fuzzy\n  * 9.1.0732: xxd: cannot use -b and -i together\n  * runtime(java): Highlight javaConceptKind modifiers with StorageClass\n  * runtime(doc): reword and reformat how to use defaults.vim\n  * 9.1.0731: inconsistent case sensitive extension matching\n  * runtime(vim): Update base-syntax, match Vim9 bool/null literal args to :if/:while/:return\n  * runtime(netrw): delete confirmation not strict enough\n  * 9.1.0730: Crash with cursor-screenline and narrow window\n  * 9.1.0729: Wrong cursor-screenline when resizing window\n  * 9.1.0728: [security]: heap-use-after-free in garbage collection with location list user data\n  * runtime(doc): clarify the effect of the timeout for search()-functions\n  * runtime(idlang): update syntax script\n  * runtime(spec): Recognize epoch when making spec changelog in ftplugin\n  * runtime(spec): add file triggers to syntax script\n  * 9.1.0727: too many strlen() calls in option.c\n  * runtime(make): add compiler/make.vim to reset compiler plugin settings\n  * runtime(java): Recognise all available standard doclet tags\n  * 9.1.0726: not using correct python3 API with dynamic linking\n  * runtime(dosini): Update syntax script, spellcheck comments only\n  * runtime(doc): Revert outdated comment in completeopt's fuzzy documentation\n  * 9.1.0725: filetype: swiftinterface files are not recognized\n  * runtime(pandoc): Update compiler plugin to use actual 'spelllang'\n  * runtime(groff): Add compiler plugin for groff\n  * 9.1.0724: if_python: link error with python 3.13 and stable ABI\n  * 9.1.0723: if_python: dynamic linking fails with python3 \u0026gt;= 3.13\n  * 9.1.0722: crash with large id in text_prop interface\n  * 9.1.0721: tests: test_mksession does not consider XDG_CONFIG_HOME\n  * runtime(glvs): update GetLatestVimScripts plugin\n  * runtime(doc): Fix typo in :help :hide text\n  * runtime(doc): buffers can be re-used\n  * 9.1.0720: Wrong breakindentopt=list:-1 with multibyte or TABs\n  * 9.1.0719: Resetting cell widths can make 'listchars' or 'fillchars' invalid\n  * runtime(doc): Update version9.txt and mention $MYVIMDIR\n\n- Update to 9.1.0718:\n  * v9.1.0718: hard to know the users personal Vim Runtime Directory\n  * v9.1.0717: Unnecessary nextcmd NULL checks in parse_command_modifiers()\n    Maintainers: fix typo in author name\n  * v9.1.0716: resetting setcellwidth( doesn't update the screen\n    runtime(hcl,terraform): Add runtime files for HCL and Terraform\n    runtime(tmux): Update syntax script\n  * v9.1.0715: Not correctly parsing color names (after v9.1.0709)\n  * v9.1.0714: GuiEnter_Turkish test may fail\n  * v9.1.0713: Newline causes E749 in Ex mode\n  * v9.1.0712: missing dependency of Test_gettext_makefile\n  * v9.1.0711: test_xxd may file when using different xxd\n  * v9.1.0710: popup window may hide part of Command line\n    runtime(vim): Update syntax, improve user-command matching\n  * v9.1.0709: GUIEnter event not found in Turkish locale\n    runtime(sudoers): improve recognized Runas_Spec and Tag_Spec items\n  * v9.1.0708: Recursive window update does not account for reset skipcol\n    runtime(nu): include filetype plugin\n  * v9.1.0707: invalid cursor position may cause a crash\n  * v9.1.0706: test_gettext fails when using shadow dir\n    CI: Install locales-all package\n  * v9.1.0705: Sorting of fuzzy filename completion is not stable\n    translation(pt): update Portuguese/Brazilian menu translation\n    runtime(vim): Update base-syntax, match bracket mark ranges\n    runtime(doc): Update :help :command-complete list\n  * v9.1.0704: inserting with a count is inefficient\n    runtime(doc): use mkdir -p to save a command\n  * v9.1.0703: crash with 2byte encoding and glob2regpat()\n    runtime(hollywood): update syn highlight for If-Then statements\n    and For-In-Loops\n  * v9.1.0702: Patch 9.1.0700 broke CI\n  * v9.1.0701: crash with NFA regex engine when searching for\n    composing chars\n  * v9.1.0700: crash with 2byte encoding and glob2regpat()\n  * v9.1.0699: \u0026quot;dvgo\u0026quot; is not always an inclusive motion\n    runtime(java): Provide support for syntax preview features\n  * v9.1.0698: \u0026quot;Untitled\u0026quot; file not removed when running Test_crash1_3\n    alone\n  * v9.1.0697: heap-buffer-overflow in ins_typebuf\n  * v9.1.0696: installing runtime files fails when using SHADOWDIR\n    runtime(doc): fix typo\n  * v9.1.0695: test_crash leaves Untitled file around\n    translation(br): Update Brazilian translation\n    translation(pt): Update menu_pt_br\n  * v9.1.0694: matchparen is slow on a long line\n  * v9.1.0693: Configure doesn't show result when not using python3\n    stable abi\n  * v9.1.0692: Wrong patlen value in ex_substitute()\n  * v9.1.0691: stable-abi may cause segfault on Python 3.11\n    runtime(vim): Update base-syntax, match :loadkeymap after colon and bar\n    runtime(mane): Improve \u0026lt;Plug\u0026gt;ManBS mapping\n  * v9.1.0690: cannot set special highlight kind in popupmenu\n    translation(pt): Revert and fix wrong Portuguese menu translation\n    files\n    translation(pt): revert Portuguese menu translation\n    translation(br): Update Brazilian translations\n    runtime(vim): Update base-syntax, improve :let-heredoc highlighting\n  * v9.1.0689: buffer-overflow in do_search( with 'rightleft'\n    runtime(vim): Improve heredoc handling for all embedded scripts\n  * v9.1.0688: dereferences NULL pointer in check_type_is_value()\n  * v9.1.0687: Makefile may not install desktop files\n    runtime(man): Fix \u0026lt;Plug\u0026gt;ManBS\n    runtime(java): Make the bundled \u0026amp;foldtext function optional\n    runtime(netrw): Change line on `mx` if command output exists\n    runtime(netrw): Fix `mf`-selected entry highlighting\n    runtime(htmlangular): add html syntax highlighting\n    translation(it): Fix filemode of Italian manpages\n    runtime(doc): Update outdated man.vim plugin information\n    runtime(zip): simplify condition to detect MS-Windows\n  * v9.1.0686: zip-plugin has problems with special characters\n    runtime(pandoc): escape quotes in \u0026amp;errorformat for pandoc\n    translation(it): updated Italian manpage\n  * v9.1.0685: too many strlen( calls in usercmd.c\n    runtime(doc): fix grammar in :h :keeppatterns\n    runtime(pandoc): refine pandoc compiler settings\n  * v9.1.0684: completion is inserted on Enter with \u0026quot;noselect\u0026quot;\n    translation(ru): update man pages\n  * v9.1.0683: mode( returns wrong value with \u0026lt;Cmd\u0026gt; mapping\n    runtime(doc): remove trailing whitespace in cmdline.txt\n  * v9.1.0682: Segfault with uninitialized funcref\n  * v9.1.0681: Analyzing failed screendumps is hard\n    runtime(doc): more clarification for the :keeppatterns needed\n  * v9.1.0680: VMS does not have defined uintptr_t\n    runtime(doc): improve typedchar documentation for KeyInputPre autocmd\n    runtime(dist): verify that executable is in $PATH\n    translation(it): update Italian manpages\n    runtime(doc): clarify the effect of :keeppatterns after * v9.1.0677\n    runtime(doc): update Makefile and make it portable between GNU and BSD\n  * v9.1.0679: Rename from w_closing to w_locked is incomplete\n    runtime(colors): update colorschemes\n    runtime(vim): Update base-syntax, improve :let-heredoc highlighting\n    runtime(doc): Updating the examples in the xxd manpage\n    translation(ru): Updated uganda.rux\n    runtime(yaml): do not re-indent when commenting out lines\n  * v9.1.0678: use-after-free in alist_add()\n  * v9.1.0677 :keepp does not retain the substitute pattern\n    translation(ja): Update Japanese translations to latest release\n    runtime(netrw): Drop committed trace lines\n    runtime(netrw): Error popup not always used\n    runtime(netrw): ErrorMsg( may throw E121\n    runtime(tutor): update Makefile and make it portable between GNU and BSD\n    translation: improve the po/cleanup.vim script\n    runtime(lang): update Makefile and make it portable between GNU and BSD\n  * v9.1.0676: style issues with man pages\n  * v9.1.0675: Patch v9.1.0674 causes problems\n    runtime(dosbatch): Show %%i as an argument in syntax file\n    runtime(dosbatch): Add syn-sync to syntax file\n    runtime(sql, mysql): fix E169: Command too recursive with\n    sql_type_default = \u0026quot;mysql\u0026quot;\n  * v9.1.0674: compiling abstract method fails because of missing return\n    runtime(javascript): fix a few issues with syntax higlighting\n    runtime(mediawiki): fix typo in doc, test for b:did_ftplugin var\n    runtime(termdebug): Fix wrong test for balloon feature\n    runtime(doc): Remove mentioning of the voting feature\n    runtime(doc): add help tags for json + markdown global variables\n  * v9.1.0673: too recursive func calls when calling super-class method\n    runtime(syntax-tests): Facilitate the viewing of rendered screendumps\n    runtime(doc): fix a few style issues\n  * v9.1.0672: marker folds may get corrupted on undo\n  * v9.1.0671 Problem:  crash with WinNewPre autocommand\n  * v9.1.0670: po file encoding fails on *BSD during make\n    translation(it): Update Italian translation\n    translation: Stop using msgconv\n  * v9.1.0669: stable python ABI not used by default\n    Update .gitignore and .hgignore files\n  * v9.1.0668: build-error with python3.12 and stable ABI\n    translations: Update generated po files\n  * v9.1.0667: Some other options reset curswant unnecessarily when set\n  * v9.1.0666: assert_equal( doesn't show multibyte string correctly\n    runtime(doc): clarify directory of Vim's executable vs CWD\n  * v9.1.0665 :for loop\n    runtime(proto): Add indent script for protobuf filetype\n  * v9.1.0664: console vim did not switch back to main screen on exit\n    runtime(zip): zip plugin does not work with Vim 9.0\n  * v9.1.0663: zip test still resets 'shellslash' option\n    runtime(zip): use defer to restore old settings\n    runtime(zip): add a generic Message function\n    runtime(zip): increment base version of zip plugin\n    runtime(zip): raise minimum Vim version to * v9.0\n    runtime(zip): refactor save and restore of options\n    runtime(zip): remove test for fnameescape\n    runtime(zip): use :echomsg instead of :echo\n    runtime(zip): clean up and remove comments\n  * v9.1.0662: filecopy( may return wrong value when readlink( fails\n  * v9.1.0661: the zip plugin is not tested.\n    runtime(zip): Fix for FreeBSD's unzip command\n    runtime(doc): capitalize correctly\n  * v9.1.0660: Shift-Insert does work on old conhost\n    translation(it): update Italian manpage\n    runtime(lua): add/subtract a 'shiftwidth' after '('/')' in indentexpr\n    runtime(zip): escape '[' on Unix as well\n  * v9.1.0659: MSVC Makefile is a bit hard to read\n    runtime(doc): fix typo in syntax.txt\n    runtime(doc): -x is only available when compiled with crypt feature\n  * v9.1.0658: Coverity warns about dereferencing NULL pointer.\n    runtime(colors): update Todo highlight in habamax colorscheme\n  * v9.1.0657: MSVC build time can be optimized\n  * v9.1.0656: MSVC Makefile CPU handling can be improved\n  * v9.1.0655: goaccess config file not recognized\n    CI: update clang compiler to version 20\n    runtime(netrw): honor `g:netrw_alt{o,v}` for `:{S,H,V}explore`\n  * v9.1.0654: completion does not respect completeslash with fuzzy\n  * v9.1.0653: Patch v9.1.0648 not completely right\n  * v9.1.0652: too many strlen( calls in syntax.c\n  * v9.1.0651 :append\n  * v9.1.0650: Coverity warning in cstrncmp()\n  * v9.1.0649: Wrong comment for \u0026quot;len\u0026quot; argument of call_simple_func()\n  * v9.1.0648: [security] double-free in dialog_changed()\n  * v9.1.0647: [security] use-after-free in tagstack_clear_entry\n    runtime(doc): re-format tag example lines, mention ctags --list-kinds\n  * v9.1.0646: imported function may not be found\n    runtime(java): Document \u0026quot;g:java_space_errors\u0026quot; and \u0026quot;g:java_comment_strings\u0026quot;\n    runtime(java): Cluster optional group definitions and their group links\n    runtime(java): Tidy up the syntax file\n    runtime(java): Tidy up the documentation for \u0026quot;ft-java-syntax\u0026quot;\n    runtime(colors): update habamax scheme - tweak diff/search/todo colors\n    runtime(nohlsearch): add missing loaded_hlsearch guard\n    runtime(kivy): Updated maintainer info for syntax script\n    Maintainers: Add maintainer for ondir ftplugin + syntax files\n    runtime(netrw): removing trailing slash when copying files in same\n    directory\n  * v9.1.0645: wrong match when searching multi-byte char case-insensitive\n    runtime(html): update syntax script to sync by 250 minlines by default\n  * v9.1.0644: Unnecessary STRLEN( when applying mapping\n    runtime(zip): Opening a remote zipfile don't work\n    runtime(cuda): source c and cpp ftplugins\n  * v9.1.0643: cursor may end up on invalid position\n  * v9.1.0642: Check that mapping rhs starts with lhs fails if not\n    simplified\n  * v9.1.0641: OLE enabled in console version\n    runtime(thrift): add ftplugin, indent and syntax scripts\n  * v9.1.0640: Makefile can be improved\n  * v9.1.0639: channel timeout may wrap around\n  * v9.1.0638: E1510 may happen when formatting a message for smsg()\n  * v9.1.0637: Style issues in MSVC Makefile\n\n- Update apparmor.vim to latest version (from AppArmor 4.0.2)\n  - add support for \u0026quot;all\u0026quot; and \u0026quot;userns\u0026quot; rules, and new profile flags\n\n- Update to 9.1.0636:\n  * 9.1.0636: filetype: ziggy files are not recognized\n  * 9.1.0635: filetype: SuperHTML template files not recognized\n  * 9.1.0634: Ctrl-P not working by default\n  * 9.1.0633: Compilation warnings with `-Wunused-parameter`\n  * 9.1.0632: MS-Windows: Compiler Warnings\n  Add support for Files-Included in syntax script\n  tweak documentation style a bit\n  * 9.1.0631: wrong completion list displayed with non-existing dir + fuzzy completion\n  * 9.1.0630: MS-Windows: build fails with VIMDLL and mzscheme\n  * 9.1.0629: Rename of pum hl_group is incomplete\n  * 9.1.0628: MinGW: coverage files are not cleaned up\n  * 9.1.0627: MinGW: build-error when COVERAGE is enabled\n  * 9.1.0626: Vim9: need more tests with null objects\n  include initial filetype plugin\n  * 9.1.0625: tests: test output all translated messages for all translations\n  * 9.1.0624: ex command modifiers not found\n  * 9.1.0623: Mingw: errors when trying to delete non-existing files\n  * 9.1.0622: MS-Windows: mingw-build can be optimized\n  * 9.1.0621: MS-Windows: startup code can be improved\n  * 9.1.0620: Vim9: segfauls with null objects\n  * 9.1.0619: tests: test_popup fails\n  * 9.1.0618: cannot mark deprecated attributes in completion menu\n  * 9.1.0617: Cursor moves beyond first line of folded end of buffer\n  * 9.1.0616: filetype: Make syntax highlighting off for MS Makefiles\n  * 9.1.0615: Unnecessary STRLEN() in make_percent_swname()\n  Add single-line comment syntax\n  Add syntax test for comments\n  Update maintainer info\n  * 9.1.0614: tests: screendump tests fail due to recent syntax changes\n  * 9.1.0613: tests: termdebug test may fail and leave file around\n  Update base-syntax, improve :set highlighting\n  Optionally highlight the :: token for method references\n  * 9.1.0612: filetype: deno.lock file not recognized\n  Use delete() for deleting directory\n  escape filename before trying to delete it\n  * 9.1.0611: ambiguous mappings not correctly resolved with modifyOtherKeys\n  correctly extract file from zip browser\n  * 9.1.0610: filetype: OpenGL Shading Language files are not detected\n  Fix endless recursion in netrw#Explore()\n  * 9.1.0609: outdated comments in Makefile\n  update syntax script\n  Fix flow mapping key detection\n  Remove orphaned YAML syntax dump files\n  * 9.1.0608: Coverity warns about a few potential issues\n  Update syntax script and remove syn sync\n  * 9.1.0607: termdebug: uses inconsistent style\n  * 9.1.0606: tests: generated files may cause failure in test_codestyle\n  * 9.1.0605: internal error with fuzzy completion\n  * 9.1.0604: popup_filter during Press Enter prompt seems to hang\n  translation: Update Serbian messages translation\n  * 9.1.0603: filetype: use correct extension for Dracula\n  * 9.1.0602: filetype: Prolog detection can be improved\n  fix more inconsistencies in assert function docs\n  * 9.1.0601: Wrong cursor position with 'breakindent' when wide char doesn't fit\n  Update base-syntax, improve :map highlighting\n  * 9.1.0600: Unused function and unused error constants\n  * 9.1.0599: Termdebug: still get E1023 when specifying arguments\n  correct wrong comment options\n  fix typo \u0026quot;a xterm\u0026quot; -\u0026gt; \u0026quot;an xterm\u0026quot;\n  * 9.1.0598: fuzzy completion does not work with default completion\n  * 9.1.0597: KeyInputPre cannot get the (unmapped typed) key\n  * 9.1.0596: filetype: devscripts config files are not recognized\n  gdb file/folder check is now performed only in CWD.\n  quote filename arguments using double quotes\n  update syntax to SDC-standard 2.1\n  minor updates.\n  Cleanup :match and :loadkeymap syntax test files\n  Update base-syntax, match types in Vim9 variable declarations\n  * 9.1.0595: make errors out with the po Makefile\n  * 9.1.0594: Unnecessary redraw when setting 'winfixbuf'\n  using wrong highlight for UTF-8\n  include simple syntax plugin\n  * 9.1.0593: filetype: Asymptote files are not recognized\n  add recommended indent options to ftplugin\n  add recommended indent options to ftplugin\n  add recommended indent options to ftplugin\n  * 9.1.0592: filetype: Mediawiki files are not recognized\n  * 9.1.0591: filetype: *.wl files are not recognized\n  * 9.1.0590: Vim9: crash when accessing getregionpos() return value\n  'cpoptions': Include \u0026quot;z\u0026quot; in the documented default\n  * 9.1.0589: vi: d{motion} and cw work differently than expected\n  update included colorschemes\n  grammar fixes in options.txt\n\n- Add \u0026quot;Keywords\u0026quot; to gvim.desktop to make searching for gvim easier\n\n- Removed patches, as they're no longer required (refreshing them\n  deleted their contents):\n  * vim-7.3-help_tags.patch\n  * vim-7.4-highlight_fstab.patch\n- Reorganise all applied patches in the spec file.\n- Update to 9.1.0588:\n  * 9.1.0588: The maze program no longer compiles on newer clang\n    runtime(typst): Add typst runtime files\n  * 9.1.0587: tests: Test_gui_lowlevel_keyevent is still flaky\n  * 9.1.0586: ocaml runtime files are outdated\n    runtime(termdebug): fix a few issues\n  * 9.1.0585: tests: test_cpoptions leaves swapfiles around\n  * 9.1.0584: Warning about redeclaring f_id() non-static\n    runtime(doc): Add hint how to load termdebug from vimrc\n    runtime(doc): document global insert behavior\n  * 9.1.0583: filetype: *.pdf_tex files are not recognized\n  * 9.1.0582: Printed line doesn't overwrite colon when pressing Enter in Ex mode\n  * 9.1.0581: Various lines are indented inconsistently\n  * 9.1.0580: :lmap mapping for keypad key not applied when typed in Select mode\n  * 9.1.0579: Ex command is still executed after giving E1247\n  * 9.1.0578: no tests for :Tohtml\n  * 9.1.0577: Unnecessary checks for v:sizeoflong in test_put.vim\n  * 9.1.0576: tests: still an issue with test_gettext_make\n  * 9.1.0575: Wrong comments in alt_tabpage()\n  * 9.1.0574: ex: wrong handling of commands after bar\n    runtime(doc): add a note for netrw bug reports\n  * 9.1.0573: ex: no implicit print for single addresses\n    runtime(vim): make \u0026amp;indentexpr available from the outside\n  * 9.1.0572: cannot specify tab page closing behaviour\n    runtime(doc): remove obsolete Ex insert behavior\n  * 9.1.0571: tests: Test_gui_lowlevel_keyevent is flaky\n    runtime(logindefs): update syntax with new keywords\n  * 9.1.0570: tests: test_gettext_make can be improved\n    runtime(filetype): Fix Prolog file detection regex\n  * 9.1.0569: fnamemodify() treats \u0026quot;..\u0026quot; and \u0026quot;../\u0026quot; differently\n    runtime(mojo): include mojo ftplugin and indent script\n  * 9.1.0568: Cannot expand paths from 'cdpath' setting\n  * 9.1.0567: Cannot use relative paths as findfile() stop directories\n  * 9.1.0566: Stop dir in findfile() doesn't work properly w/o trailing slash\n  * 9.1.0565: Stop directory doesn't work properly in 'tags'\n  * 9.1.0564: id() can be faster\n  * 9.1.0563: Cannot process any Key event\n  * 9.1.0562: tests: inconsistency in test_findfile.vim\n    runtime(fstab): Add missing keywords to fstab syntax\n  * 9.1.0561: netbeans: variable used un-initialized (Coverity)\n  * 9.1.0560: bindtextdomain() does not indicate an error\n  * 9.1.0559: translation of vim scripts can be improved\n  * 9.1.0558: filetype: prolog detection can be improved\n  * 9.1.0557: moving in the buffer list doesn't work as documented\n    runtime(doc): fix inconsistencies in :h file-searching\n  * 9.1.0556: :bwipe doesn't remove file from jumplist of other tabpages\n    runtime(htmlangular): correct comment\n  * 9.1.0555: filetype: angular ft detection is still problematic\n  * 9.1.0554: :bw leaves jumplist and tagstack data around\n  * 9.1.0553: filetype: *.mcmeta files are not recognized\n  * 9.1.0552: No test for antlr4 filetype\n  * 9.1.0551: filetype: htmlangular files are not properly detected\n  * 9.1.0550: filetype: antlr4 files are not recognized\n  * 9.1.0549: fuzzycollect regex based completion not working as expected\n    runtime(doc): autocmd_add() accepts a list not a dict\n  * 9.1.0548: it's not possible to get a unique id for some vars\n    runtime(tmux): Update syntax script\n  * 9.1.0547: No way to get the arity of a Vim function\n  * 9.1.0546: vim-tiny fails on CTRL-X/CTRL-A\n    runtime(hlsplaylist): include hlsplaylist ftplugin file\n    runtime(doc): fix typo in :h ft-csv-syntax\n    runtime(doc): Correct shell command to get $VIMRUNTIME into\n    shell\n  * 9.1.0545: MSVC conversion warning\n  * 9.1.0544: filetype: ldapconf files are not recognized\n    runtime(cmakecache): include cmakecache ftplugin file\n    runtime(lex): include lex ftplugin file\n    runtime(yacc): include yacc ftplugin file\n    runtime(squirrel): include squirrel ftplugin file\n    runtime(objcpp): include objcpp ftplugin file\n    runtime(tf): include tf ftplugin file\n    runtime(mysql): include mysql ftplugin file\n    runtime(javacc): include javacc ftplugin file\n    runtime(cabal): include cabal ftplugin file\n    runtime(cuda): include CUDA ftplugin file\n    runtime(editorconfig): include editorconfig ftplugin file\n    runtime(kivy): update kivy syntax, include ftplugin\n    runtime(syntax-tests): Stop generating redundant \u0026quot;*_* 99.dump\u0026quot;\n    files\n  * 9.1.0543: Behavior of CursorMovedC is strange\n    runtime(vim): Update base-syntax, improve :match command\n    highlighting\n  * 9.1.0542: Vim9: confusing string() output for object functions\n  * 9.1.0541: failing test with Vim configured without channel\n  * 9.1.0540: Unused assignment in sign_define_cmd()\n    runtime(doc): add page-scrolling keys to index.txt\n    runtime(doc): add reference to xterm-focus-event from\n    FocusGained/Lost\n  * 9.1.0539: Not enough tests for what v9.1.0535 fixed\n    runtime(doc): clarify how to re-init csv syntax file\n  * 9.1.0538: not possible to assign priority when defining a sign\n  * 9.1.0537: signed number detection for CTRL-X/A can be improved\n  * 9.1.0536: filetype: zone files are not recognized\n  * 9.1.0535: newline escape wrong in ex mode\n    runtime(man): honor cmd modifiers before `g:ft_man_open_mode`\n    runtime(man): use `nnoremap` to map to Ex commands\n  * 9.1.0534: completion wrong with fuzzy when cycling back to original\n    runtime(syntax-tests): Abort and report failed cursor progress\n    runtime(syntax-tests): Introduce self tests for screen dumping\n    runtime(syntax-tests): Clear and redraw the ruler line with\n    the shell info\n    runtime(syntax-tests): Allow for folded and wrapped lines in\n    syntax test files\n  * 9.1.0533: Vim9: need more tests for nested objects equality\n    CI: Pre-v* 9.0.0110 versions generate bogus documentation tag entries\n    runtime(doc): Remove wrong help tag CTRL-SHIFT-CR\n  * 9.1.0532: filetype: Cedar files not recognized\n    runtime(doc): document further keys that scroll page up/down\n  * 9.1.0531: resource leak in mch_get_random()\n    runtime(tutor): Fix wrong spanish translation\n    runtime(netrw): fix remaining case of register clobber\n  * 9.1.0530: xxd: MSVC warning about non-ASCII character\n  * 9.1.0529: silent! causes following try/catch to not work\n    runtime(rust): use shiftwidth() in indent script\n  * 9.1.0528: spell completion message still wrong in translations\n  * 9.1.0527: inconsistent parameter in Makefiles for Vim executable\n  * 9.1.0526: Unwanted cursor movement with pagescroll at start of buffer\n    runtime(doc): mention $XDG_CONFIG_HOME instead of $HOME/.config\n  * 9.1.0525: Right release selects immediately when pum is truncated.\n  * 9.1.0524: the recursive parameter in the *_equal functions can be removed\n    runtime(termdebug): Add Deprecation warnings\n  * 9.1.0523: Vim9: cannot downcast an object\n  * 9.1.0522: Vim9: string(object) hangs for recursive references\n  * 9.1.0521: if_py: _PyObject_CallFunction_SizeT is dropped in Python 3.13\n  * 9.1.0520: Vim9: incorrect type checking for modifying lists\n    runtime(manpager): avoid readonly prompt\n  * 9.1.0519: MS-Windows: libvterm compilation can be optimized\n  * 9.1.0518: initialize the random buffer can be improved\n  * 9.1.0517: MS-Windows: too long lines in Make_mvc.mak\n    runtime(terraform): Add filetype plugin for terraform\n    runtime(dockerfile): enable spellchecking of comments in\n    syntax script\n    runtime(doc): rename variable for pandoc markdown support\n    runtime(doc): In builtin overview use {buf} as param for\n    appendbufline/setbufline\n    runtime(doc): clarify, that register 1-* 9 will always be shifted\n    runtime(netrw): save and restore register 0-* 9, a and unnamed\n    runtime(termdebug): Refactored StartDebug_term and EndDebug\n    functions\n    runtime(java): Compose \u0026quot;g:java_highlight_signature\u0026quot; and\n    \u0026quot;g:java_highlight_functions\u0026quot;\n  * 9.1.0516: need more tests for nested dicts and list comparision\n  * 9.1.0515: Vim9: segfault in object_equal()\n  * 9.1.0514: Vim9: issue with comparing objects recursively\n    runtime(termdebug): Change some variables to Enums\n    runtime(vim): Update base-syntax, fix function tail comments\n  * 9.1.0513: Vim9: segfault with object comparison\n\n- Update to 9.1.0512:\n  * Mode message for spell completion doesn't match allowed keys\n  * CursorMovedC triggered wrongly with setcmdpos()\n  * update runtime files\n  * CI: test_gettext fails on MacOS14 + MSVC Win\n  * not possible to translate Vim script messages\n  * termdebug plugin can be further improved\n  * add gomod filetype plugin\n  * hard to detect cursor movement in the command line\n  * Optionally highlight parameterised types\n  * filetype: .envrc \u0026amp; .prettierignore not recognized\n  * filetype: Faust files are not recognized\n  * inner-tag textobject confused about \u0026quot;\u0026gt;\u0026quot; in attributes\n  * cannot use fuzzy keyword completion\n  * Remove the group exclusion list from @javaTop\n  * wrong return type for execute() function\n  * MS-Windows: too much legacy code\n  * too complicated mapping restore in termdebug\n  * simplify mapping\n  * cannot switch buffer in a popup\n  * MS-Windows: doesn't handle symlinks properly\n  * getcmdcompltype() interferes with cmdline completion\n  * termdebug can be further improved\n  * update htmldjango detection\n  * Improve Turkish documentation\n  * include a simple csv filetype and syntax plugin\n  * include the the simple nohlsearch package\n  * matched text is highlighted case-sensitively\n  * Matched text isn't highlighted in cmdline pum\n  * Fix typos in several documents\n  * clarify when text properties are cleared\n  * improve the vim-shebang example\n  * revert unintended formatting changes for termdebug\n  * Add a config variable for commonly used compiler options\n  * Wrong matched text highlighted in pum with 'rightleft'\n  * bump length of character references in syntax script\n  * properly check mapping variables using null_dict\n  * fix KdlIndent and kdlComment in indent script\n  * Test for patch 9.1.0489 doesn't fail without the fix\n  * Fold multi-line comments with the syntax kind of \u0026amp;fdm\n  * using wrong type for PlaceSign()\n  * filetype: Vim-script files not detected by shebang line\n  * revert unintended change to zip#Write()\n  * add another tag for vim-shebang feature\n  * Cmdline pum doesn't work properly with 'rightleft'\n  * minor style problems with patch 9.1.0487\n  * default completion may break with fuzzy\n  * Wrong padding for pum \u0026quot;kind\u0026quot; with 'rightleft'\n  * Update base-syntax, match shebang lines\n  * MS-Windows: handle files with spaces properly\n  * Restore HTML syntax file tests\n  * completed item not update on fuzzy completion\n  * filetype: Snakemake files are not recognized\n  * make TermDebugSendCommand() a global function again\n  * close all buffers in the same way\n  * Matched text shouldn't be highlighted in \u0026quot;kind\u0026quot; and \u0026quot;menu\u0026quot;\n  * fix wrong helptag for :defer\n  * Update base-syntax, match :sleep arg\n  * include Georgian keymap\n  * Sorting of completeopt+=fuzzy is not stable\n  * correctly test for windows in NetrwGlob()\n  * glob() on windows fails with [] in directory name\n  * rewrite mkdir() doc and simplify {flags} meaning\n  * glob() not sufficiently tested\n  * update return type for job_info()\n  * termdebug plugin needs more love\n  * correct return types for job_start() and job_status()\n  * Update base-syntax, match :catch and :throw args\n  * Include element values in non-marker annotations\n  * Vim9: term_getjob() throws an exception on error\n  * fuzzy string matching executed when not needed\n  * fuzzy_match_str_with_pos() does unnecessary list operations\n  * restore description of \u0026quot;$\u0026quot; in col() and virtcol()\n  * deduplicate getpos(), line(), col(), virtcol()\n  * Update g:vimsyn_comment_strings dump file tests\n  * Use string interpolation instead of string concat\n  * potential deref of NULL pointer in fuzzy_match_str_with_pos\n  * block_editing errors out when using \u0026lt;enter\u0026gt;\n  * Update base-syntax, configurable comment string highlighting\n  * fix typos in syntax.txt\n  * Cannot see matched text in popup menu\n  * Update base-syntax, match multiline continued comments\n  * clarify documentation for \u0026quot;v\u0026quot; position at line()\n  * cmod_split modifier is always reset in term_start()\n  * remove line-continuation characters\n  * use shiftwidth() instead of \u0026amp;tabstop in indent script\n  * Remove orphaned screen dump files\n  * include syntax, indent and ftplugin files\n  * CI: Test_ColonEight() fails on github runners\n  * add missing Enabled field in syntax script\n  * basic svelte ftplugin file\n  * term_start() does not clear vertical modifier\n  * fix mousemodel restoration by comparing against null_string\n  * Added definitions of Vim scripts and plugins\n  * Exclude lambda expressions from _when_ _switch-case_ label clauses\n  * Fix saved_mousemodel check\n  * Inconsistencies between functions for option flags\n  * Crash when using autocmd_get() after removing event inside autocmd\n  * Fix small style issues\n  * add return type info for Vim function descriptions\n  * Update Italian Vim manpage\n  * disable the q mapping\n  * Change 'cms' for C++ to '// %s'\n  * fix type mismatch error\n  * Fix wrong email address\n  * convert termdebug plugin to Vim9 script\n\n- Update to 9.1.0470:\n  * tests Test_ColonEight_MultiByte() fails sporadically\n  * Cannot have buffer-local value for 'completeopt'\n  * GvimExt does not consult HKEY_CURRENT_USER\n  * typos in some comments\n  * runtime(vim): Update base-syntax, allow whitespace before\n    :substitute pattern\n  * Missing comments for fuzzy completion\n  * runtime(man): update Vim manpage\n  * runtime(comment): clarify the usage of 'commentstring' option\n    value\n  * runtime(doc): clarify how fuzzy 'completeopt' should work\n  * runtime(netrw): prevent accidental data loss\n  * missing filecopy() function\n  * no whitespace padding in commentstring option in ftplugins\n  * no fuzzy-matching support for insert-completion\n  * eval5() and eval7 are too complex\n  * too many strlen() calls in drawline.c\n  * filetype lintstagedrc files are not recognized\n  * Vim9 import autoload does not work with symlink\n  * Coverity complains about division by zero\n  * tests test_gui fails on Wayland\n  * Left shift is incorrect with vartabstop and shiftwidth=0\n  * runtime(doc): clarify 'shortmess' flag \u0026quot;S\u0026quot;\n  * MS-Windows compiler warning for size_t to int conversion\n  * runtime(doc): include some vim9 script examples in the help\n  * minor issues in test_filetype with rasi test\n  * filetype rasi files are not recognized\n  * runtime(java): Improve the matching of lambda expressions\n  * Configure checks for libelf unnecessarily\n  * No test for escaping '\u0026lt;' with shellescape()\n  * check.vim complains about overlong comment lines\n  * translation(it): Update Italian translation\n  * evalc. code too complex\n  * MS-Windows Compiler warnings\n\n- Update to 9.1.0448:\n  * compiler warning in eval.c\n  * remove remaining css code\n  * Add ft_hare.txt to Reference Manual TOC\n  * re-generate vim syntax from generator\n  * fix syntax vim bug\n  * completion may be wrong when deleting all chars\n  * getregionpos() inconsistent for partly-selected multibyte char\n  * fix highlighting nested and escaped quotes in string props\n  * remove the indent plugin since it has too many issues\n  * update Debian runtime files\n  * Coverity warning after 9.1.0440\n  * Not enough tests for getregion() with multibyte chars\n  * Can't use blockwise selection with width for getregion()\n  * update outdated syntax files\n  * fix floating_modifier highlight\n  * hare runtime files outdated\n  * getregionpos() can't properly indicate positions beyond eol\n  * function get_lval() is too long\n  * Cannot filter the history\n  * Wrong Ex command executed when :g uses '?' as delimiter\n  * support floating_modifier none; revert broken highlighting\n  * Motif requires non-const char pointer for XPM  data\n  * Crash when using '?' as separator for :s\n  * filetype: cygport files are not recognized\n  * make errors trying to access autoload/zig\n  * Wrong yanking with exclusive selection and ve=all\n  * add missing help tags file\n  * Ancient XPM preprocessor hack may cause build errors\n  * include basic rescript ftplugin file\n  * eval.c is too long\n  * getregionpos() doesn't handle one char selection\n  * check for gdb file/dir before using as buffer name\n  * refactor zig ftplugin, remove auto format\n  * Coverity complains about eval.c refactor\n  * Tag guessing leaves wrong search history with very short names\n  * some issues with termdebug mapping test\n  * update matchit plugin to v1.20\n  * too many strlen() calls in search.c\n  * set commentstring option\n  * update vb indent plugin as vim9script\n  * filetype: purescript files are not recognized\n  * filetype: slint files are not recognized\n  * basic nim ftplugin file for comments\n  * Add Arduino ftplugin and indent files\n  * include basic typst ftplugin file\n  * include basic prisma ftplugin file\n  * include basic v ftplugin for comment support\n  * getregionpos() wrong with blockwise mode and multibyte\n  * function echo_string_core() is too long\n  * hyprlang files are not recognized\n  * add basic dart ftplugin file\n  * basic ftplugin file for graphql\n  * mention comment plugin at :h 'commentstring'\n  * set commentstring for sql files in ftplugin\n  * :browse oldfiles prompts even with single entry\n  * eval.c not sufficiently tested\n  * clarify why E195 is returned\n  * clarify temporary file clean up\n  * fix :NoMatchParen not working\n  * Cannot move to previous/next rare word\n  * add basic ftplugin file for sshdconfig\n  * if_py: find_module has been removed in Python 3.12.0a7\n  * some screen dump tests can be improved\n  * Some functions are not tested\n  * clarify instal instructions for comment package\n  * Unable to leave long line with 'smoothscroll' and 'scrolloff'\n  * fix typo in vim9script help file\n  * Remove trailing spaces\n  * clarify {special} argument for shellescape()\n\n- update to 9.1.0413\n  * smoothscroll may cause infinite loop\n  * add missing entries for the keys CTRL-W g\u0026lt;Tab\u0026gt; and \u0026lt;C-Tab\u0026gt;\n  * update vi_diff.txt: add default value for 'flash'\n  * typo in regexp_bt.c in DEBUG code\n  * allow indented commands\n  * Fix wrong define regex in ftplugin\n  * Filter out non-Latin-1 characters for syntax tests\n  * prefer scp over pscp\n  * fix typo in usr_52.txt\n  * too long functions in eval.c\n  * warning about uninitialized variable\n  * too many strlen() calls in the regexp engine\n  * E16 fix, async keyword support for define\n  * Stuck with long line and half-page scrolling\n  * Divide by zero with getmousepos() and 'smoothscroll'\n  * update and remove  some invalid links\n  * update translation of xxd manpage\n  * Recursively delete directories by default with netrw delete command\n  * Strive to remain compatible for at least Vim 7.0\n  * tests: xxd buffer overflow fails on 32-bit\n  * Stop handpicking syntax groups for @javaTop\n  * [security] xxd: buffer-overflow with specific flags\n  * Vim9: not able to import file from start dir\n  * filetype: mdd files detected as zsh filetype\n  * filetype: zsh module files are not recognized\n  * Remove hardcoded private.ppk logic from netrw\n  * Vim9: confusing error message for unknown type\n  * block_editing errors out when using del\n  * add new items to scripts section in syntax plugin\n  * Vim9: imported vars are not properly type checked\n  * Wrong display with 'smoothscroll' when changing quickfix list\n  * filetype: jj files are not recognized\n  * getregionpos() may leak memory on error\n  * The CODEOWNERS File is not useful\n  * Remove and cleanup Win9x legacy from netrw\n  * add MsgArea to 'highlight' option description\n  * Cannot get a list of positions describing a region\n  * Fix digit separator in syntax script for octals and floats\n  * Update link to Wikipedia Vi page\n  * clear $MANPAGER in ftplugin before shelling out\n  * Fix typos in help documents\n  * 'viewdir' not respecting $XDG_CONFIG_HOME\n  * tests: Vim9 debug tests may be flaky\n  * correct getscriptinfo() example\n  * Vim9: could improve testing\n  * test_sound fails on macos-12\n  * update Serbian menu\n  * update Slovak menu\n  * update Slovenian menu\n  * update Portuguese menu\n  * update Dutch menu\n  * update Korean menu\n  * update Icelandic menu\n  * update Czech menu\n  * update Afrikaans menu\n  * update German menu\n  * filetype: inko files are not recognized\n  * filetype: templ files are not recognized\n  * cursor() and getregion() don't handle v:maxcol well\n  * Vim9: null value tests not sufficient\n  * update Catalan menu\n  * filetype: stylus files not recognized\n  * update spanish menu localization\n  * regenerate helptags\n  * Vim9: crash with null_class and null_object\n  * Add tags about lazyloading of menu\n  * tests: vt420 terminfo entry may not be found\n  * filetype: .out files recognized as tex files\n  * filetype: Kbuild files are not recognized\n  * cbuffer and similar commands don't accept a range\n  * Improve the recognition of the \u0026quot;indent\u0026quot; method declarations\n  * Fix a typo in usr_30.txt\n  * remove undefined var s:save_cpoptions and add include setting\n  * missing setlocal in indent plugin\n  * Calculating line height for unnecessary amount of lines\n  * improve syntax file performance\n  * There are a few typos\n  * Vim9: no comments allowed after class vars\n  * CI: remove trailing white space in documentation\n  * Formatting text wrong when 'breakindent' is set\n  * Add oracular (24.10) as Ubuntu release name\n  * Vim9: Trailing commands after class/enum keywords ignored\n  * tests: 1-second delay after Test_BufEnter_botline()\n  * update helptags for jq syntax\n  * include syntax, ftplugin and compiler plugin\n  * fix typo synconcealend -\u0026gt; synconcealed\n  * include a simple comment toggling plugin\n  * wrong botline in BufEnter\n  * clarify syntax vs matching mechanism\n  * fix undefined variable in indent plugin\n  * ops.c code uses too many strlen() calls\n  * Calling CLEAR_FIELD() on the same struct twice\n  * Vim9: compile_def_function() still too long\n  * Update Serbian messages\n  * clarify the effect of setting the shell to powershell\n  * Improve the recognition of the \u0026quot;style\u0026quot; method declarations\n  * Vim9: problem when importing autoloaded scripts\n  * compile_def_function is too long\n  * filetype: ondir files are not recognized\n  * Crash when typing many keys with D- modifier\n  * tests: test_vim9_builtin is a bit slow\n  * update documentation\n  * change the download URL of \u0026quot;libsodium\u0026quot;\n  * tests: test_winfixbuf is a bit slow\n  * Add filetype, syntax and indent plugin for Astro\n  * expanding rc config files does not work well\n  * Vim9: vim9type.c is too complicated\n  * Vim9: does not handle autoloaded variables well\n  * minor spell fix in starting.txt\n  * wrong drawing in GUI with setcellwidth()\n  * Add include and suffixesadd\n  * Page scrolling should place cursor at window boundaries\n  * align command line table\n  * minor fixes to starting.txt\n  * fix comment definition in filetype plugin\n  * filetype: flake.lock files are not recognized\n  * runtime(uci): No support for uci file types\n  * Support \u0026quot;g:ftplugin_java_source_path\u0026quot; with archived files\n  * tests: Test_autoload_import_relative_compiled fails on Windows\n  * Finding cmd modifiers and cmdline-specials is inefficient\n  * No test that completing a partial mapping clears 'showcmd'\n  * tests: test_vim9_dissamble may fail\n  * Vim9: need static type for typealias\n  * X11 does not ignore smooth scroll event\n  * A few typos in test_xdg when testing gvimrc\n  * Patch v9.1.0338 fixed sourcing a script with import\n  * Problem: gvimrc not sourced from XDG_CONFIG_HOME\n  * Cursor wrong after using setcellwidth() in terminal\n  * 'showcmd' wrong for partial mapping with multibyte\n  * tests: test_taglist fails when 'helplang' contains non-english\n  * Problem: a few memory leaks are found\n  * Problem: Error with matchaddpos() and empty list\n  * tests: xdg test uses screen dumps\n  * Vim9: import through symlinks not correctly handled\n  * Missing entry for XDG vimrc file in :version\n  * tests: typo in test_xdg\n  * runtime(i3config/swayconfig): update syntax scripts\n  * document pandoc compiler and enable configuring arguments\n  * String interpolation fails for List type\n  * No test for highlight behavior with 'ambiwidth'\n  * tests: test_xdg fails on the appimage repo\n  * tests: some assert_equal() calls have wrong order of args\n  * make install does not install all files\n  * runtime(doc): fix typos in starting.txt\n\nPackage wget was updated:\n\n- Drop support for shorthand URLs  * Breaking change to fix CVE-2024-10524.\n  [+ drop-support-for-shorthand-URLs.patch, bsc#1233773]\n\n- Update 0001-possibly-truncate-pathname-components.patch\n  * Take the patch from savannah repository where the checking of the file\n    length doesn't include path length.\n  * [bsc#1204720, bsc#1231661]\n\nPackage wicked was updated:\n\n- Update to version 0.6.77  - compat-suse: use iftype in sysctl handling (bsc#1230911, gh#openSUSE/wicked#1043)\n  - Always generate the ipv4/ipv6 \u0026lt;enabled\u0026gt;true|false\u0026lt;/enabled\u0026gt; node\n  - Inherit all, default and interface sysctl settings also for loopback,\n    except for use_tempaddr and accept_dad.\n  - Consider only interface specific accept_redirects sysctl settings.\n  - Adopt ifsysctl(5) manual page with wicked specific behavior.\n  - route: fix family and destination processing (bsc#1231060)\n  - man: improve wicked-config(5) file description (gh#openSUSE/wicked#1039)\n  - dhcp4: add ignore-rfc3927-1-6 wicked-config(5) option (jsc#PED-10855, gh#openSUSE/wicked#1038)\n  - team: set arp link watcher interval default to 1s (gh#openSUSE/wicked#1037)\n  - systemd: use `BindsTo=dbus.service` in favor of `Requisite=` (bsc#1229745)\n  - compat-suse: fix use of deprecated `INTERFACETYPE=dummy` (boo#1229555)\n  - arp: don't set target broadcast hardware address (gh#openSUSE/wicked#1036)\n  - dbus: don't memcpy empty/NULL array value (gh#openSUSE/wicked#1035)\n  - ethtool: fix leak and free pause data in ethtool_free (gh#openSUSE/wicked#1030)\n- Removed patches included in the source archive:\n  [- 0001-compat-suse-repair-dummy-interfaces-boo-1229555.patch]\n\n- compat-suse: fix dummy interfaces configuration with\n  INTERFACETYPE=dummy (boo#1229555, gh#openSUSE/wicked#1031)\n  [+ 0001-compat-suse-repair-dummy-interfaces-boo-1229555.patch]\n\nPackage xen was updated:\n\n- bsc#1232622 - VUL-0: CVE-2024-45818: xen: Deadlock in x86 HVM  standard VGA handling (XSA-463)\n  xsa463-01.patch\n  xsa463-02.patch\n  xsa463-03.patch\n  xsa463-04.patch\n  xsa463-05.patch\n  xsa463-06.patch\n  xsa463-07.patch\n  xsa463-08.patch\n  xsa463-09.patch\n  xsa463-10.patch\n- bsc#1232624 - VUL-0: CVE-2024-45819: xen: libxl leaks data to PVH\n  guests via ACPI tables (XSA-464)\n  xsa464.patch\n- Drop the following patches\n  stdvga-cache.patch\n\n- bsc#1232542 - remove usage of net-tools-deprecated from supportconfig plugin\n\n- bsc#1230366 - VUL-0: CVE-2024-45817: xen: x86: Deadlock in\n  vlapic_error() (XSA-462)\n  xsa462.patch\n\n- bsc#1228201 - [Baremetal][sles15sp4][guest migration] xl\n  migration fail , guest not shutdown.\n  This also fixes, bsc#1222453 - VUL-0: CVE-2024-2201: xen: x86:\n  Native Branch History Injection (XSA-456)\n  661d00b8-VMX-prevent-fallthrough-in-vmx_set_reg.patch\n\n- bsc#1228574 - VUL-0: CVE-2024-31145: xen: error handling in x86\n  IOMMU identity mapping (XSA-460)\n  66bb7316-x86-IOMMU-move-tracking-in-iommu_identity_mapping.patch\n- bsc#1228575 - VUL-0: CVE-2024-31146: xen: PCI device pass-through\n  with shared resources (XSA-461)\n  66bb6fa5-x86-pass-through-document-as-security-unsupported.patch\n- Drop xsa458.patch in favor of upstream version (bsc#1227355)\n  669662ea-x86-IRQ-avoid-double-unlock-in-map_domain_pirq.patch\n\n- bsc#1227355 - VUL-0: CVE-2024-31143: xen: double unlock in x86\n  guest IRQ handling (XSA-458)\n  xsa458.patch\n\n- bsc#1222453 - VUL-0: CVE-2024-2201: xen: x86: Native Branch\n  History Injection (XSA-456)\n  662a6a4c-x86-spec-reporting-of-BHB-clearing.patch\n  662a6a8d-x86-spec-adjust-logic-to-elide-LFENCE.patch\n\nPackage zypper was updated:\n\n- Don't try to download missing raw metadata if cache is not  writable (bsc#1225451)\n- man: Update 'search' command description.\n  Hint to \u0026quot;se -v\u0026quot; showing the matches within the packages metadata.\n  Explain that search strings starting with a \u0026quot;/\u0026quot; will implicitly\n  look into the filelist as well. Otherfise an explicit \u0026quot;-f\u0026quot; is\n  needed.\n- version 1.14.78\n\n- API refactoring. Prevent zypper from using now private libzypp\n  symbols (bsc#1230267)\n- BuildRequires:  libzypp-devel \u0026gt;= 17.35.10.\n- Fix wrong numbers used in CommitSummary skipped/failed messages.\n- version 1.14.77\n\n- Show rpm install size before installing (bsc#1224771)\n  If filesystem snapshots are taken before the installation (e.g.\n  by snapper) no disk space is freed by removing old packages. In\n  this case the install size of all packages is a hint how much\n  additional disk space is needed by the new packages static\n  content.\n- version 1.14.76\n\n- Fix readline setup to handle Ctrl-C and Ctrl-D corrrectly\n  (bsc#1227205)\n- version 1.14.75\n\n- Let_readline_abort_on_Ctrl-C (bsc#1226493)\n- packages: add '--system' to show @System packages (bsc#222971)\n- version 1.14.74\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "aaa_base-84.87+git20180409.04c9dae-150300.10.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "aaa_base-extras-84.87+git20180409.04c9dae-150300.10.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bash-4.4-150400.27.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bash-sh-4.4-150400.27.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "bind-utils-9.16.50-150400.5.43.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "binutils-2.43-150100.7.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ca-certificates-mozilla-2.68-150200.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-10.3.7-150300.13.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-plugin-gce-1.0.0-150300.13.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "containerd-1.7.21-150000.117.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "crypto-policies-20210917.c9d86d1-150400.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cups-config-2.2.7-150000.3.65.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "curl-8.0.1-150400.5.59.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "deltarpm-3.6.5-150000.5.6.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dmidecode-3.6-150400.16.11.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-26.1.5_ce-150000.212.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dracut-055+suse.359.geb85610b-150400.3.37.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "e2fsprogs-1.46.4-150400.3.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.70.5-150400.3.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.31-150300.89.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-i18ndata-2.31-150300.89.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-2.31-150300.89.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-base-2.31-150300.89.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-agent-20241011.01-150000.1.51.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20241121.00-150400.13.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20240926.03-150000.1.38.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-2.06-150400.11.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-i386-pc-2.06-150400.11.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-x86_64-efi-2.06-150400.11.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-5.14.21-150400.24.144.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-client3-0.8-150400.7.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libavahi-common3-0.8-150400.7.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libblkid1-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcom_err2-1.46.4-150400.3.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libctf-nobfd0-2.43-150100.7.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libctf0-2.43-150100.7.52.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcups2-2.2.7-150000.3.65.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcurl4-8.0.1-150400.5.59.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libexpat1-2.4.4-150400.3.25.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libext2fs2-1.46.4-150400.3.9.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfdisk1-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfreebl3-3.101.2-150400.3.51.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-14.2.0+git10526-150000.1.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.70.5-150400.3.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.70.5-150400.3.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.70.5-150400.3.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.70.5-150400.3.17.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libmount1-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libncurses6-6.1-150000.5.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1l-150400.7.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpcap1-1.10.1-150400.3.6.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-150300.10.78.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libreadline7-7.0-150400.27.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libruby2_5-2_5-2.5.9-150000.4.32.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsmartcols1-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsodium23-1.0.18-150000.4.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsoftokn3-3.101.2-150400.3.51.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsolv-tools-0.7.31-150400.3.32.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsolv-tools-base-0.7.31-150400.3.32.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-14.2.0+git10526-150000.1.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsuseconnect-1.13.0-150400.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsystemd0-249.17-150400.8.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtiff5-4.0.9-150000.45.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libudev1-249.17-150400.8.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libuuid1-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libyaml-0-2-0.1.7-150000.3.2.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libyui-ncurses-pkg16-4.3.7-150400.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libyui-ncurses16-4.3.7-150400.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libyui16-4.3.7-150400.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-17.35.16-150400.3.105.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "login_defs-4.8.1-150400.10.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "logrotate-3.18.1-150400.3.10.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mailx-12.5-150000.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-3.101.2-150400.3.51.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-certs-3.101.2-150400.3.51.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-tools-3.101.2-150400.3.51.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ncurses-utils-6.1-150000.5.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "nscd-2.31-150300.89.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "opensc-0.22.0-150400.3.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-1_1-1.1.1l-150400.7.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-1.3.0-150000.6.71.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-config-1.1-150200.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.6.15-150300.10.78.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-Jinja2-2.10.1-150000.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-PyYAML-5.4.1-150300.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.6.15-150300.10.78.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-bind-9.16.50-150400.5.43.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-curses-3.6.15-150300.10.78.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-salt-3006.0-150400.8.69.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-setuptools-44.1.1-150400.9.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-solv-0.7.31-150400.3.32.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-zypp-plugin-0.6.4-150400.13.4.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "regionServiceClientConfigGCE-4.2.0-150000.4.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "rsyslog-8.2306.0-150400.5.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby-solv-0.7.31-150400.3.32.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-2.5.9-150000.4.32.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-rubygem-nokogiri-1.8.5-150400.14.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-stdlib-2.5.9-150000.4.32.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "runc-1.1.14-150000.70.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "salt-3006.0-150400.8.69.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "salt-minion-3006.0-150400.8.69.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "scap-security-guide-0.1.74-150000.1.86.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shadow-4.8.1-150400.10.24.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "shim-15.8-150300.4.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sles-release-15.4-150400.58.10.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "strace-5.14-150400.3.3.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "supportutils-3.2.8-150300.7.35.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-build-key-12.0-150000.8.55.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ng-1.13.0-150400.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suseconnect-ruby-bindings-1.13.0-150400.3.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-249.17-150400.8.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-sysvinit-249.17-150400.8.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "terminfo-6.1-150000.5.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "terminfo-base-6.1-150000.5.27.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "udev-249.17-150400.8.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "unzip-6.00-150000.4.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "util-linux-systemd-2.37.2-150400.8.35.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.0836-150000.5.66.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.0836-150000.5.66.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wget-1.20.3-150000.3.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-0.6.77-150400.3.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wicked-service-0.6.77-150400.3.36.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xen-libs-4.16.6_06-150400.4.65.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "yast2-pkg-bindings-4.4.7-150400.3.16.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.78-150400.3.67.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-15-sp4-hardened-byos-v20250109-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2021-4204",
      "Description": "An out-of-bounds (OOB) memory access flaw was found in the Linux kernel's eBPF due to an Improper Input Validation. This flaw allows a local attacker with a special privilege to crash the system or leak internal information.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-4441",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-zynq-qspi: Fix a NULL pointer dereference in zynq_qspi_exec_mem_op()\n\nIn zynq_qspi_exec_mem_op(), kzalloc() is directly used in memset(),\nwhich could lead to a NULL pointer dereference on failure of\nkzalloc().\n\nFix this bug by adding a check of tmpbuf.\n\nThis bug was found by a static analyzer. The analysis employs\ndifferential checking to identify inconsistent security operations\n(e.g., checks or kfrees) between two code paths and confirms that the\ninconsistent operations are not recovered in the current function or\nthe callers, so they constitute bugs.\n\nNote that, as a bug found by static analysis, it can be a false\npositive or hard to trigger. Multiple researchers have cross-reviewed\nthe bug.\n\nBuilds with CONFIG_SPI_ZYNQ_QSPI=m show no new warnings,\nand our static analyzer no longer warns about this code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47416",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus-\u003estate to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47534",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vc4: kms: Add missing drm_crtc_commit_put\n\nCommit 9ec03d7f1ed3 (\"drm/vc4: kms: Wait on previous FIFO users before a\ncommit\") introduced a global state for the HVS, with each FIFO storing\nthe current CRTC commit so that we can properly synchronize commits.\n\nHowever, the refcounting was off and we thus ended up leaking the\ndrm_crtc_commit structure every commit. Add a drm_crtc_commit_put to\nprevent the leakage.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47598",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsch_cake: do not call cake_destroy() from cake_init()\n\nqdiscs are not supposed to call their own destroy() method\nfrom init(), because core stack already does that.\n\nsyzbot was able to trigger use after free:\n\nDEBUG_LOCKS_WARN_ON(lock-\u003emagic != lock)\nWARNING: CPU: 0 PID: 21902 at kernel/locking/mutex.c:586 __mutex_lock_common kernel/locking/mutex.c:586 [inline]\nWARNING: CPU: 0 PID: 21902 at kernel/locking/mutex.c:586 __mutex_lock+0x9ec/0x12f0 kernel/locking/mutex.c:740\nModules linked in:\nCPU: 0 PID: 21902 Comm: syz-executor189 Not tainted 5.16.0-rc4-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nRIP: 0010:__mutex_lock_common kernel/locking/mutex.c:586 [inline]\nRIP: 0010:__mutex_lock+0x9ec/0x12f0 kernel/locking/mutex.c:740\nCode: 08 84 d2 0f 85 19 08 00 00 8b 05 97 38 4b 04 85 c0 0f 85 27 f7 ff ff 48 c7 c6 20 00 ac 89 48 c7 c7 a0 fe ab 89 e8 bf 76 ba ff \u003c0f\u003e 0b e9 0d f7 ff ff 48 8b 44 24 40 48 8d b8 c8 08 00 00 48 89 f8\nRSP: 0018:ffffc9000627f290 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: ffff88802315d700 RSI: ffffffff815f1db8 RDI: fffff52000c4fe44\nRBP: ffff88818f28e000 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffffff815ebb5e R11: 0000000000000000 R12: 0000000000000000\nR13: dffffc0000000000 R14: ffffc9000627f458 R15: 0000000093c30000\nFS:  0000555556abc400(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fda689c3303 CR3: 000000001cfbb000 CR4: 0000000000350ef0\nCall Trace:\n \u003cTASK\u003e\n tcf_chain0_head_change_cb_del+0x2e/0x3d0 net/sched/cls_api.c:810\n tcf_block_put_ext net/sched/cls_api.c:1381 [inline]\n tcf_block_put_ext net/sched/cls_api.c:1376 [inline]\n tcf_block_put+0xbc/0x130 net/sched/cls_api.c:1394\n cake_destroy+0x3f/0x80 net/sched/sch_cake.c:2695\n qdisc_create.constprop.0+0x9da/0x10f0 net/sched/sch_api.c:1293\n tc_modify_qdisc+0x4c5/0x1980 net/sched/sch_api.c:1660\n rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5571\n netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2496\n netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]\n netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1345\n netlink_sendmsg+0x904/0xdf0 net/netlink/af_netlink.c:1921\n sock_sendmsg_nosec net/socket.c:704 [inline]\n sock_sendmsg+0xcf/0x120 net/socket.c:724\n ____sys_sendmsg+0x6e8/0x810 net/socket.c:2409\n ___sys_sendmsg+0xf3/0x170 net/socket.c:2463\n __sys_sendmsg+0xe5/0x1b0 net/socket.c:2492\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f1bb06badb9\nCode: Unable to access opcode bytes at RIP 0x7f1bb06bad8f.\nRSP: 002b:00007fff3012a658 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f1bb06badb9\nRDX: 0000000000000000 RSI: 00000000200007c0 RDI: 0000000000000003\nRBP: 0000000000000000 R08: 0000000000000003 R09: 0000000000000003\nR10: 0000000000000003 R11: 0000000000000246 R12: 00007fff3012a688\nR13: 00007fff3012a6a0 R14: 00007fff3012a6e0 R15: 00000000000013c2\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47622",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: Fix a deadlock in the error handler\n\nThe following deadlock has been observed on a test setup:\n\n - All tags allocated\n\n - The SCSI error handler calls ufshcd_eh_host_reset_handler()\n\n - ufshcd_eh_host_reset_handler() queues work that calls\n   ufshcd_err_handler()\n\n - ufshcd_err_handler() locks up as follows:\n\nWorkqueue: ufs_eh_wq_0 ufshcd_err_handler.cfi_jt\nCall trace:\n __switch_to+0x298/0x5d8\n __schedule+0x6cc/0xa94\n schedule+0x12c/0x298\n blk_mq_get_tag+0x210/0x480\n __blk_mq_alloc_request+0x1c8/0x284\n blk_get_request+0x74/0x134\n ufshcd_exec_dev_cmd+0x68/0x640\n ufshcd_verify_dev_init+0x68/0x35c\n ufshcd_probe_hba+0x12c/0x1cb8\n ufshcd_host_reset_and_restore+0x88/0x254\n ufshcd_reset_and_restore+0xd0/0x354\n ufshcd_err_handler+0x408/0xc58\n process_one_work+0x24c/0x66c\n worker_thread+0x3e8/0xa4c\n kthread+0x150/0x1b4\n ret_from_fork+0x10/0x30\n\nFix this lockup by making ufshcd_exec_dev_cmd() allocate a reserved\nrequest.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47624",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sunrpc: fix reference count leaks in rpc_sysfs_xprt_state_change\n\nThe refcount leak issues take place in an error handling path. When the\n3rd argument buf doesn't match with \"offline\", \"online\" or \"remove\", the\nfunction simply returns -EINVAL and forgets to decrease the reference\ncount of a rpc_xprt object and a rpc_xprt_switch object increased by\nrpc_sysfs_xprt_kobj_get_xprt() and\nrpc_sysfs_xprt_kobj_get_xprt_switch(), causing reference count leaks of\nboth unused objects.\n\nFix this issue by jumping to the error handling path labelled with\nout_put when buf matches none of \"offline\", \"online\" or \"remove\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-0500",
      "Description": "A flaw was found in unrestricted eBPF usage by the BPF_BTF_LOAD, leading to a possible out-of-bounds memory write in the Linux kernel's BPF subsystem due to the way a user loads BTF. This flaw allows a local user to crash or escalate their privileges on the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.2",
        "Vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2022-0854",
      "Description": "A memory leak flaw was found in the Linux kernel's DMA subsystem, in the way a user calls DMA_FROM_DEVICE. This flaw allows a local user to read random memory from the kernel space.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "2.1",
        "Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N"
      }
    },
    {
      "CVE": "CVE-2022-0995",
      "Description": "An out-of-bounds (OOB) memory write flaw was found in the Linux kernel's watch_queue event notification subsystem. This flaw can overwrite parts of the kernel state, potentially allowing a local user to gain privileged access or cause a denial of service on the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.2",
        "Vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2022-20368",
      "Description": "Product: AndroidVersions: Android kernelAndroid ID: A-224546354References: Upstream kernel",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-28748",
      "Description": "DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2022-2964. Reason: This candidate is a reservation duplicate of CVE-2022-2964. Notes: All CVE users should reference CVE-2022-2964 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-3435",
      "Description": "A vulnerability classified as problematic has been found in Linux Kernel. This affects the function fib_nh_match of the file net/ipv4/fib_semantics.c of the component IPv4 Handler. The manipulation leads to out-of-bounds read. It is possible to initiate the attack remotely. It is recommended to apply a patch to fix this issue. The identifier VDB-210357 was assigned to this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-4382",
      "Description": "A use-after-free flaw caused by a race among the superblock operations in the gadgetfs Linux driver was found. It could be triggered by yanking out a device that is running the gadgetfs side.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-45934",
      "Description": "An issue was discovered in the Linux kernel through 6.0.10. l2cap_config_req in net/bluetooth/l2cap_core.c has an integer wraparound via L2CAP_CONF_REQ packets.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48713",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/intel/pt: Fix crash with stop filters in single-range mode\n\nAdd a check for !buf-\u003esingle before calling pt_buffer_region_size in a\nplace where a missing check can cause a kernel crash.\n\nFixes a bug introduced by commit 670638477aed (\"perf/x86/intel/pt:\nOpportunistically use single range output mode\"), which added a\nsupport for PT single-range output mode. Since that commit if a PT\nstop filter range is hit while tracing, the kernel will crash because\nof a null pointer dereference in pt_handle_status due to calling\npt_buffer_region_size without a ToPA configured.\n\nThe commit which introduced single-range mode guarded almost all uses of\nthe ToPA buffer variables with checks of the buf-\u003esingle variable, but\nmissed the case where tracing was stopped by the PT hardware, which\nhappens when execution hits a configured stop filter.\n\nTested that hitting a stop filter while PT recording successfully\nrecords a trace with this patch but crashes without this patch.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxprtrdma: fix pointer derefs in error cases of rpcrdma_ep_create\n\nIf there are failures then we must not leave the non-NULL pointers with\nthe error value, otherwise `rpcrdma_ep_destroy` gets confused and tries\nfree them, resulting in an Oops.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48774",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ptdma: Fix the error handling path in pt_core_init()\n\nIn order to free resources correctly in the error handling path of\npt_core_init(), 2 goto's have to be switched. Otherwise, some resources\nwill leak and we will try to release things that have not been allocated\nyet.\n\nAlso move a dev_err() to a place where it is more meaningful.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48775",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Fix memory leak in vmbus_add_channel_kobj\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add():\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix memory leak by calling kobject_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48776",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: parsers: qcom: Fix missing free for pparts in cleanup\n\nMtdpart doesn't free pparts when a cleanup function is declared.\nAdd missing free for pparts in cleanup function for smem to fix the\nleak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: parsers: qcom: Fix kernel panic on skipped partition\n\nIn the event of a skipped partition (case when the entry name is empty)\nthe kernel panics in the cleanup function as the name entry is NULL.\nRework the parser logic by first checking the real partition number and\nthen allocate the space and set the data for the valid partitions.\n\nThe logic was also fundamentally wrong as with a skipped partition, the\nparts number returned was incorrect by not decreasing it for the skipped\npartitions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48778",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: gpmi: don't leak PM reference in error path\n\nIf gpmi_nfc_apply_timings() fails, the PM runtime usage counter must be\ndropped.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48780",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: Avoid overwriting the copies of clcsock callback functions\n\nThe callback functions of clcsock will be saved and replaced during\nthe fallback. But if the fallback happens more than once, then the\ncopies of these callback functions will be overwritten incorrectly,\nresulting in a loop call issue:\n\nclcsk-\u003esk_error_report\n |- smc_fback_error_report() \u003c------------------------------|\n     |- smc_fback_forward_wakeup()                          | (loop)\n         |- clcsock_callback()  (incorrectly overwritten)   |\n             |- smc-\u003eclcsk_error_report() ------------------|\n\nSo this patch fixes the issue by saving these function pointers only\nonce in the fallback and avoiding overwriting.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48783",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: lantiq_gswip: fix use after free in gswip_remove()\n\nof_node_put(priv-\u003eds-\u003eslave_mii_bus-\u003edev.of_node) should be\ndone before mdiobus_free(priv-\u003eds-\u003eslave_mii_bus).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48784",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncfg80211: fix race in netlink owner interface destruction\n\nMy previous fix here to fix the deadlock left a race where\nthe exact same deadlock (see the original commit referenced\nbelow) can still happen if cfg80211_destroy_ifaces() already\nruns while nl80211_netlink_notify() is still marking some\ninterfaces as nl_owner_dead.\n\nThe race happens because we have two loops here - first we\ndev_close() all the netdevs, and then we destroy them. If we\nalso have two netdevs (first one need only be a wdev though)\nthen we can find one during the first iteration, close it,\nand go to the second iteration -- but then find two, and try\nto destroy also the one we didn't close yet.\n\nFix this by only iterating once.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: remove vsock from connected table when connect is interrupted by a signal\n\nvsock_connect() expects that the socket could already be in the\nTCP_ESTABLISHED state when the connecting task wakes up with a signal\npending. If this happens the socket will be in the connected table, and\nit is not removed when the socket state is reset. In this situation it's\ncommon for the process to retry connect(), and if the connection is\nsuccessful the socket will be added to the connected table a second\ntime, corrupting the list.\n\nPrevent this by calling vsock_remove_connected() if a signal is received\nwhile waiting for a connection. This is harmless if the socket is not in\nthe connected table, and if it is in the table then removing it will\nprevent list corruption from a double add.\n\nNote for backporting: this patch requires d5afa82c977e (\"vsock: correct\nremoval of socket from the list\"), which is in all current stable trees\nexcept 4.9.y.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48787",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niwlwifi: fix use-after-free\n\nIf no firmware was present at all (or, presumably, all of the\nfirmware files failed to parse), we end up unbinding by calling\ndevice_release_driver(), which calls remove(), which then in\niwlwifi calls iwl_drv_stop(), freeing the 'drv' struct. However\nthe new code I added will still erroneously access it after it\nwas freed.\n\nSet 'failure=false' in this case to avoid the access, all data\nwas already freed anyway.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48788",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-rdma: fix possible use-after-free in transport error_recovery work\n\nWhile nvme_rdma_submit_async_event_work is checking the ctrl and queue\nstate before preparing the AER command and scheduling io_work, in order\nto fully prevent a race where this check is not reliable the error\nrecovery work must flush async_event_work before continuing to destroy\nthe admin queue after setting the ctrl state to RESETTING such that\nthere is no race .submit_async_event and the error recovery handler\nitself changing the ctrl state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: fix possible use-after-free in transport error_recovery work\n\nWhile nvme_tcp_submit_async_event_work is checking the ctrl and queue\nstate before preparing the AER command and scheduling io_work, in order\nto fully prevent a race where this check is not reliable the error\nrecovery work must flush async_event_work before continuing to destroy\nthe admin queue after setting the ctrl state to RESETTING such that\nthere is no race .submit_async_event and the error recovery handler\nitself changing the ctrl state.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48790",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: fix a possible use-after-free in controller reset during load\n\nUnlike .queue_rq, in .submit_async_event drivers may not check the ctrl\nreadiness for AER submission. This may lead to a use-after-free\ncondition that was observed with nvme-tcp.\n\nThe race condition may happen in the following scenario:\n1. driver executes its reset_ctrl_work\n2. -\u003e nvme_stop_ctrl - flushes ctrl async_event_work\n3. ctrl sends AEN which is received by the host, which in turn\n   schedules AEN handling\n4. teardown admin queue (which releases the queue socket)\n5. AEN processed, submits another AER, calling the driver to submit\n6. driver attempts to send the cmd\n==\u003e use-after-free\n\nIn order to fix that, add ctrl state check to validate the ctrl\nis actually able to accept the AER submission.\n\nThis addresses the above race in controller resets because the driver\nduring teardown should:\n1. change ctrl state to RESETTING\n2. flush async_event_work (as well as other async work elements)\n\nSo after 1,2, any other AER command will find the\nctrl state to be RESETTING and bail out without submitting the AER.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48791",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix use-after-free for aborted TMF sas_task\n\nCurrently a use-after-free may occur if a TMF sas_task is aborted before we\nhandle the IO completion in mpi_ssp_completion(). The abort occurs due to\ntimeout.\n\nWhen the timeout occurs, the SAS_TASK_STATE_ABORTED flag is set and the\nsas_task is freed in pm8001_exec_internal_tmf_task().\n\nHowever, if the I/O completion occurs later, the I/O completion still\nthinks that the sas_task is available. Fix this by clearing the ccb-\u003etask\nif the TMF times out - the I/O completion handler does nothing if this\npointer is cleared.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix use-after-free for aborted SSP/STP sas_task\n\nCurrently a use-after-free may occur if a sas_task is aborted by the upper\nlayer before we handle the I/O completion in mpi_ssp_completion() or\nmpi_sata_completion().\n\nIn this case, the following are the two steps in handling those I/O\ncompletions:\n\n - Call complete() to inform the upper layer handler of completion of\n   the I/O.\n\n - Release driver resources associated with the sas_task in\n   pm8001_ccb_task_free() call.\n\nWhen complete() is called, the upper layer may free the sas_task. As such,\nwe should not touch the associated sas_task afterwards, but we do so in the\npm8001_ccb_task_free() call.\n\nFix by swapping the complete() and pm8001_ccb_task_free() calls ordering.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48793",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: nSVM: fix potential NULL derefernce on nested migration\n\nTurns out that due to review feedback and/or rebases\nI accidentally moved the call to nested_svm_load_cr3 to be too early,\nbefore the NPT is enabled, which is very wrong to do.\n\nKVM can't even access guest memory at that point as nested NPT\nis needed for that, and of course it won't initialize the walk_mmu,\nwhich is main issue the patch was addressing.\n\nFix this for real.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: at86rf230: Stop leaking skb's\n\nUpon error the ieee802154_xmit_complete() helper is not called. Only\nieee802154_wake_queue() is called manually. In the Tx case we then leak\nthe skb structure.\n\nFree the skb structure upon error before returning when appropriate.\n\nAs the 'is_tx = 0' cannot be moved in the complete handler because of a\npossible race between the delay in switching to STATE_RX_AACK_ON and a\nnew interrupt, we introduce an intermediate 'was_tx' boolean just for\nthis purpose.\n\nThere is no Fixes tag applying here, many changes have been made on this\narea and the issue kind of always existed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48796",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu: Fix potential use-after-free during probe\n\nKasan has reported the following use after free on dev-\u003eiommu.\nwhen a device probe fails and it is in process of freeing dev-\u003eiommu\nin dev_iommu_free function, a deferred_probe_work_func runs in parallel\nand tries to access dev-\u003eiommu-\u003efwspec in of_iommu_configure path thus\ncausing use after free.\n\nBUG: KASAN: use-after-free in of_iommu_configure+0xb4/0x4a4\nRead of size 8 at addr ffffff87a2f1acb8 by task kworker/u16:2/153\n\nWorkqueue: events_unbound deferred_probe_work_func\nCall trace:\n dump_backtrace+0x0/0x33c\n show_stack+0x18/0x24\n dump_stack_lvl+0x16c/0x1e0\n print_address_description+0x84/0x39c\n __kasan_report+0x184/0x308\n kasan_report+0x50/0x78\n __asan_load8+0xc0/0xc4\n of_iommu_configure+0xb4/0x4a4\n of_dma_configure_id+0x2fc/0x4d4\n platform_dma_configure+0x40/0x5c\n really_probe+0x1b4/0xb74\n driver_probe_device+0x11c/0x228\n __device_attach_driver+0x14c/0x304\n bus_for_each_drv+0x124/0x1b0\n __device_attach+0x25c/0x334\n device_initial_probe+0x24/0x34\n bus_probe_device+0x78/0x134\n deferred_probe_work_func+0x130/0x1a8\n process_one_work+0x4c8/0x970\n worker_thread+0x5c8/0xaec\n kthread+0x1f8/0x220\n ret_from_fork+0x10/0x18\n\nAllocated by task 1:\n ____kasan_kmalloc+0xd4/0x114\n __kasan_kmalloc+0x10/0x1c\n kmem_cache_alloc_trace+0xe4/0x3d4\n __iommu_probe_device+0x90/0x394\n probe_iommu_group+0x70/0x9c\n bus_for_each_dev+0x11c/0x19c\n bus_iommu_probe+0xb8/0x7d4\n bus_set_iommu+0xcc/0x13c\n arm_smmu_bus_init+0x44/0x130 [arm_smmu]\n arm_smmu_device_probe+0xb88/0xc54 [arm_smmu]\n platform_drv_probe+0xe4/0x13c\n really_probe+0x2c8/0xb74\n driver_probe_device+0x11c/0x228\n device_driver_attach+0xf0/0x16c\n __driver_attach+0x80/0x320\n bus_for_each_dev+0x11c/0x19c\n driver_attach+0x38/0x48\n bus_add_driver+0x1dc/0x3a4\n driver_register+0x18c/0x244\n __platform_driver_register+0x88/0x9c\n init_module+0x64/0xff4 [arm_smmu]\n do_one_initcall+0x17c/0x2f0\n do_init_module+0xe8/0x378\n load_module+0x3f80/0x4a40\n __se_sys_finit_module+0x1a0/0x1e4\n __arm64_sys_finit_module+0x44/0x58\n el0_svc_common+0x100/0x264\n do_el0_svc+0x38/0xa4\n el0_svc+0x20/0x30\n el0_sync_handler+0x68/0xac\n el0_sync+0x160/0x180\n\nFreed by task 1:\n kasan_set_track+0x4c/0x84\n kasan_set_free_info+0x28/0x4c\n ____kasan_slab_free+0x120/0x15c\n __kasan_slab_free+0x18/0x28\n slab_free_freelist_hook+0x204/0x2fc\n kfree+0xfc/0x3a4\n __iommu_probe_device+0x284/0x394\n probe_iommu_group+0x70/0x9c\n bus_for_each_dev+0x11c/0x19c\n bus_iommu_probe+0xb8/0x7d4\n bus_set_iommu+0xcc/0x13c\n arm_smmu_bus_init+0x44/0x130 [arm_smmu]\n arm_smmu_device_probe+0xb88/0xc54 [arm_smmu]\n platform_drv_probe+0xe4/0x13c\n really_probe+0x2c8/0xb74\n driver_probe_device+0x11c/0x228\n device_driver_attach+0xf0/0x16c\n __driver_attach+0x80/0x320\n bus_for_each_dev+0x11c/0x19c\n driver_attach+0x38/0x48\n bus_add_driver+0x1dc/0x3a4\n driver_register+0x18c/0x244\n __platform_driver_register+0x88/0x9c\n init_module+0x64/0xff4 [arm_smmu]\n do_one_initcall+0x17c/0x2f0\n do_init_module+0xe8/0x378\n load_module+0x3f80/0x4a40\n __se_sys_finit_module+0x1a0/0x1e4\n __arm64_sys_finit_module+0x44/0x58\n el0_svc_common+0x100/0x264\n do_el0_svc+0x38/0xa4\n el0_svc+0x20/0x30\n el0_sync_handler+0x68/0xac\n el0_sync+0x160/0x180\n\nFix this by setting dev-\u003eiommu to NULL first and\nthen freeing dev_iommu structure in dev_iommu_free\nfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48797",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: don't try to NUMA-migrate COW pages that have other uses\n\nOded Gabbay reports that enabling NUMA balancing causes corruption with\nhis Gaudi accelerator test load:\n\n \"All the details are in the bug, but the bottom line is that somehow,\n  this patch causes corruption when the numa balancing feature is\n  enabled AND we don't use process affinity AND we use GUP to pin pages\n  so our accelerator can DMA to/from system memory.\n\n  Either disabling numa balancing, using process affinity to bind to\n  specific numa-node or reverting this patch causes the bug to\n  disappear\"\n\nand Oded bisected the issue to commit 09854ba94c6a (\"mm: do_wp_page()\nsimplification\").\n\nNow, the NUMA balancing shouldn't actually be changing the writability\nof a page, and as such shouldn't matter for COW.  But it appears it\ndoes.  Suspicious.\n\nHowever, regardless of that, the condition for enabling NUMA faults in\nchange_pte_range() is nonsensical.  It uses \"page_mapcount(page)\" to\ndecide if a COW page should be NUMA-protected or not, and that makes\nabsolutely no sense.\n\nThe number of mappings a page has is irrelevant: not only does GUP get a\nreference to a page as in Oded's case, but the other mappings migth be\npaged out and the only reference to them would be in the page count.\n\nSince we should never try to NUMA-balance a page that we can't move\nanyway due to other references, just fix the code to use 'page_count()'.\nOded confirms that that fixes his issue.\n\nNow, this does imply that something in NUMA balancing ends up changing\npage protections (other than the obvious one of making the page\ninaccessible to get the NUMA faulting information).  Otherwise the COW\nsimplification wouldn't matter - since doing the GUP on the page would\nmake sure it's writable.\n\nThe cause of that permission change would be good to figure out too,\nsince it clearly results in spurious COW events - but fixing the\nnonsensical test that just happened to work before is obviously the\nCorrectThing(tm) to do regardless.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48798",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cio: verify the driver availability for path_event call\n\nIf no driver is attached to a device or the driver does not provide the\npath_event function, an FCES path-event on this device could end up in a\nkernel-panic. Verify the driver availability before the path_event\nfunction call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48799",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix list corruption in perf_cgroup_switch()\n\nThere's list corruption on cgrp_cpuctx_list. This happens on the\nfollowing path:\n\n  perf_cgroup_switch: list_for_each_entry(cgrp_cpuctx_list)\n      cpu_ctx_sched_in\n         ctx_sched_in\n            ctx_pinned_sched_in\n              merge_sched_in\n                  perf_cgroup_event_disable: remove the event from the list\n\nUse list_for_each_entry_safe() to allow removing an entry during\niteration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmscan: remove deadlock due to throttling failing to make progress\n\nA soft lockup bug in kcompactd was reported in a private bugzilla with\nthe following visible in dmesg;\n\n  watchdog: BUG: soft lockup - CPU#33 stuck for 26s! [kcompactd0:479]\n  watchdog: BUG: soft lockup - CPU#33 stuck for 52s! [kcompactd0:479]\n  watchdog: BUG: soft lockup - CPU#33 stuck for 78s! [kcompactd0:479]\n  watchdog: BUG: soft lockup - CPU#33 stuck for 104s! [kcompactd0:479]\n\nThe machine had 256G of RAM with no swap and an earlier failed\nallocation indicated that node 0 where kcompactd was run was potentially\nunreclaimable;\n\n  Node 0 active_anon:29355112kB inactive_anon:2913528kB active_file:0kB\n    inactive_file:0kB unevictable:64kB isolated(anon):0kB isolated(file):0kB\n    mapped:8kB dirty:0kB writeback:0kB shmem:26780kB shmem_thp:\n    0kB shmem_pmdmapped: 0kB anon_thp: 23480320kB writeback_tmp:0kB\n    kernel_stack:2272kB pagetables:24500kB all_unreclaimable? yes\n\nVlastimil Babka investigated a crash dump and found that a task\nmigrating pages was trying to drain PCP lists;\n\n  PID: 52922  TASK: ffff969f820e5000  CPU: 19  COMMAND: \"kworker/u128:3\"\n  Call Trace:\n     __schedule\n     schedule\n     schedule_timeout\n     wait_for_completion\n     __flush_work\n     __drain_all_pages\n     __alloc_pages_slowpath.constprop.114\n     __alloc_pages\n     alloc_migration_target\n     migrate_pages\n     migrate_to_node\n     do_migrate_pages\n     cpuset_migrate_mm_workfn\n     process_one_work\n     worker_thread\n     kthread\n     ret_from_fork\n\nThis failure is specific to CONFIG_PREEMPT=n builds.  The root of the\nproblem is that kcompact0 is not rescheduling on a CPU while a task that\nhas isolated a large number of the pages from the LRU is waiting on\nkcompact0 to reschedule so the pages can be released.  While\nshrink_inactive_list() only loops once around too_many_isolated, reclaim\ncan continue without rescheduling if sc-\u003eskipped_deactivate == 1 which\ncould happen if there was no file LRU and the inactive anon list was not\nlow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48801",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: buffer: Fix file related error handling in IIO_BUFFER_GET_FD_IOCTL\n\nIf we fail to copy the just created file descriptor to userland, we\ntry to clean up by putting back 'fd' and freeing 'ib'. The code uses\nput_unused_fd() for the former which is wrong, as the file descriptor\nwas already published by fd_install() which gets called internally by\nanon_inode_getfd().\n\nThis makes the error handling code leaving a half cleaned up file\ndescriptor table around and a partially destructed 'file' object,\nallowing userland to play use-after-free tricks on us, by abusing\nthe still usable fd and making the code operate on a dangling\n'file-\u003eprivate_data' pointer.\n\nInstead of leaving the kernel in a partially corrupted state, don't\nattempt to explicitly clean up and leave this to the process exit\npath that'll release any still valid fds, including the one created\nby the previous call to anon_inode_getfd(). Simply return -EFAULT to\nindicate the error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48803",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: Fix missing sentinel for clk_div_table\n\n_get_table_maxdiv() tries to access \"clk_div_table\" array out of bound\ndefined in phy-j721e-wiz.c. Add a sentinel entry to prevent\nthe following global-out-of-bounds error reported by enabling KASAN.\n\n[    9.552392] BUG: KASAN: global-out-of-bounds in _get_maxdiv+0xc0/0x148\n[    9.558948] Read of size 4 at addr ffff8000095b25a4 by task kworker/u4:1/38\n[    9.565926]\n[    9.567441] CPU: 1 PID: 38 Comm: kworker/u4:1 Not tainted 5.16.0-116492-gdaadb3bd0e8d-dirty #360\n[    9.576242] Hardware name: Texas Instruments J721e EVM (DT)\n[    9.581832] Workqueue: events_unbound deferred_probe_work_func\n[    9.587708] Call trace:\n[    9.590174]  dump_backtrace+0x20c/0x218\n[    9.594038]  show_stack+0x18/0x68\n[    9.597375]  dump_stack_lvl+0x9c/0xd8\n[    9.601062]  print_address_description.constprop.0+0x78/0x334\n[    9.606830]  kasan_report+0x1f0/0x260\n[    9.610517]  __asan_load4+0x9c/0xd8\n[    9.614030]  _get_maxdiv+0xc0/0x148\n[    9.617540]  divider_determine_rate+0x88/0x488\n[    9.622005]  divider_round_rate_parent+0xc8/0x124\n[    9.626729]  wiz_clk_div_round_rate+0x54/0x68\n[    9.631113]  clk_core_determine_round_nolock+0x124/0x158\n[    9.636448]  clk_core_round_rate_nolock+0x68/0x138\n[    9.641260]  clk_core_set_rate_nolock+0x268/0x3a8\n[    9.645987]  clk_set_rate+0x50/0xa8\n[    9.649499]  cdns_sierra_phy_init+0x88/0x248\n[    9.653794]  phy_init+0x98/0x108\n[    9.657046]  cdns_pcie_enable_phy+0xa0/0x170\n[    9.661340]  cdns_pcie_init_phy+0x250/0x2b0\n[    9.665546]  j721e_pcie_probe+0x4b8/0x798\n[    9.669579]  platform_probe+0x8c/0x108\n[    9.673350]  really_probe+0x114/0x630\n[    9.677037]  __driver_probe_device+0x18c/0x220\n[    9.681505]  driver_probe_device+0xac/0x150\n[    9.685712]  __device_attach_driver+0xec/0x170\n[    9.690178]  bus_for_each_drv+0xf0/0x158\n[    9.694124]  __device_attach+0x184/0x210\n[    9.698070]  device_initial_probe+0x14/0x20\n[    9.702277]  bus_probe_device+0xec/0x100\n[    9.706223]  deferred_probe_work_func+0x124/0x180\n[    9.710951]  process_one_work+0x4b0/0xbc0\n[    9.714983]  worker_thread+0x74/0x5d0\n[    9.718668]  kthread+0x214/0x230\n[    9.721919]  ret_from_fork+0x10/0x20\n[    9.725520]\n[    9.727032] The buggy address belongs to the variable:\n[    9.732183]  clk_div_table+0x24/0x440",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48804",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt_ioctl: fix array_index_nospec in vt_setactivate\n\narray_index_nospec ensures that an out-of-bounds value is set to zero\non the transient path. Decreasing the value by one afterwards causes\na transient integer underflow. vsa.console should be decreased first\nand then sanitized with array_index_nospec.\n\nKasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh\nRazavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU\nAmsterdam.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: ax88179_178a: Fix out-of-bounds accesses in RX fixup\n\nax88179_rx_fixup() contains several out-of-bounds accesses that can be\ntriggered by a malicious (or defective) USB device, in particular:\n\n - The metadata array (hdr_off..hdr_off+2*pkt_cnt) can be out of bounds,\n   causing OOB reads and (on big-endian systems) OOB endianness flips.\n - A packet can overlap the metadata array, causing a later OOB\n   endianness flip to corrupt data used by a cloned SKB that has already\n   been handed off into the network stack.\n - A packet SKB can be constructed whose tail is far beyond its end,\n   causing out-of-bounds heap data to be considered part of the SKB's\n   data.\n\nI have tested that this can be used by a malicious USB device to send a\nbogus ICMPv6 Echo Request and receive an ICMPv6 Echo Reply in response\nthat contains random kernel heap data.\nIt's probably also possible to get OOB writes from this on a\nlittle-endian system somehow - maybe by triggering skb_cow() via IP\noptions processing -, but I haven't tested that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48806",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAX\n\nCommit effa453168a7 (\"i2c: i801: Don't silently correct invalid transfer\nsize\") revealed that ee1004_eeprom_read() did not properly limit how\nmany bytes to read at once.\n\nIn particular, i2c_smbus_read_i2c_block_data_or_emulated() takes the\nlength to read as an u8.  If count == 256 after taking into account the\noffset and page boundary, the cast to u8 overflows.  And this is common\nwhen user space tries to read the entire EEPROM at once.\n\nTo fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, already\nthe maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48807",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Fix KASAN error in LAG NETDEV_UNREGISTER handler\n\nCurrently, the same handler is called for both a NETDEV_BONDING_INFO\nLAG unlink notification as for a NETDEV_UNREGISTER call.  This is\ncausing a problem though, since the netdev_notifier_info passed has\na different structure depending on which event is passed.  The problem\nmanifests as a call trace from a BUG: KASAN stack-out-of-bounds error.\n\nFix this by creating a handler specific to NETDEV_UNREGISTER that only\nis passed valid elements in the netdev_notifier_info struct for the\nNETDEV_UNREGISTER event.\n\nAlso included is the removal of an unbalanced dev_put on the peer_netdev\nand related braces.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48811",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: don't release napi in __ibmvnic_open()\n\nIf __ibmvnic_open() encounters an error such as when setting link state,\nit calls release_resources() which frees the napi structures needlessly.\nInstead, have __ibmvnic_open() only clean up the work it did so far (i.e.\ndisable napi and irqs) and leave the rest to the callers.\n\nIf caller of __ibmvnic_open() is ibmvnic_open(), it should release the\nresources immediately. If the caller is do_reset() or do_hard_reset(),\nthey will release the resources on the next reset.\n\nThis fixes following crash that occurred when running the drmgr command\nseveral times to add/remove a vnic interface:\n\n\t[102056] ibmvnic 30000003 env3: Disabling rx_scrq[6] irq\n\t[102056] ibmvnic 30000003 env3: Disabling rx_scrq[7] irq\n\t[102056] ibmvnic 30000003 env3: Replenished 8 pools\n\tKernel attempted to read user page (10) - exploit attempt? (uid: 0)\n\tBUG: Kernel NULL pointer dereference on read at 0x00000010\n\tFaulting instruction address: 0xc000000000a3c840\n\tOops: Kernel access of bad area, sig: 11 [#1]\n\tLE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\n\t...\n\tCPU: 9 PID: 102056 Comm: kworker/9:2 Kdump: loaded Not tainted 5.16.0-rc5-autotest-g6441998e2e37 #1\n\tWorkqueue: events_long __ibmvnic_reset [ibmvnic]\n\tNIP:  c000000000a3c840 LR: c0080000029b5378 CTR: c000000000a3c820\n\tREGS: c0000000548e37e0 TRAP: 0300   Not tainted  (5.16.0-rc5-autotest-g6441998e2e37)\n\tMSR:  8000000000009033 \u003cSF,EE,ME,IR,DR,RI,LE\u003e  CR: 28248484  XER: 00000004\n\tCFAR: c0080000029bdd24 DAR: 0000000000000010 DSISR: 40000000 IRQMASK: 0\n\tGPR00: c0080000029b55d0 c0000000548e3a80 c0000000028f0200 0000000000000000\n\t...\n\tNIP [c000000000a3c840] napi_enable+0x20/0xc0\n\tLR [c0080000029b5378] __ibmvnic_open+0xf0/0x430 [ibmvnic]\n\tCall Trace:\n\t[c0000000548e3a80] [0000000000000006] 0x6 (unreliable)\n\t[c0000000548e3ab0] [c0080000029b55d0] __ibmvnic_open+0x348/0x430 [ibmvnic]\n\t[c0000000548e3b40] [c0080000029bcc28] __ibmvnic_reset+0x500/0xdf0 [ibmvnic]\n\t[c0000000548e3c60] [c000000000176228] process_one_work+0x288/0x570\n\t[c0000000548e3d00] [c000000000176588] worker_thread+0x78/0x660\n\t[c0000000548e3da0] [c0000000001822f0] kthread+0x1c0/0x1d0\n\t[c0000000548e3e10] [c00000000000cf64] ret_from_kernel_thread+0x5c/0x64\n\tInstruction dump:\n\t7d2948f8 792307e0 4e800020 60000000 3c4c01eb 384239e0 f821ffd1 39430010\n\t38a0fff6 e92d1100 f9210028 39200000 \u003ce9030010\u003e f9010020 60420000 e9210020\n\t---[ end trace 5f8033b08fd27706 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48812",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: lantiq_gswip: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() \u003c-\ndevres_release_all() \u003c- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe GSWIP switch is a platform device, so the initial set of constraints\nthat I thought would cause this (I2C or SPI buses which call -\u003eremove on\n-\u003eshutdown) do not apply. But there is one more which applies here.\n\nIf the DSA master itself is on a bus that calls -\u003eremove from -\u003eshutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the GSWIP switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe gswip driver has the code structure in place for orderly mdiobus\nremoval, so just replace devm_mdiobus_alloc() with the non-devres\nvariant, and add manual free where necessary, to ensure that we don't\nlet devres free a still-registered bus.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: felix: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() \u003c-\ndevres_release_all() \u003c- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe Felix VSC9959 switch is a PCI device, so the initial set of\nconstraints that I thought would cause this (I2C or SPI buses which call\n-\u003eremove on -\u003eshutdown) do not apply. But there is one more which\napplies here.\n\nIf the DSA master itself is on a bus that calls -\u003eremove from -\u003eshutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the felix switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe felix driver has the code structure in place for orderly mdiobus\nremoval, so just replace devm_mdiobus_alloc_size() with the non-devres\nvariant, and add manual free where necessary, to ensure that we don't\nlet devres free a still-registered bus.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: seville: register the mdiobus under devres\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() \u003c-\ndevres_release_all() \u003c- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe Seville VSC9959 switch is a platform device, so the initial set of\nconstraints that I thought would cause this (I2C or SPI buses which call\n-\u003eremove on -\u003eshutdown) do not apply. But there is one more which\napplies here.\n\nIf the DSA master itself is on a bus that calls -\u003eremove from -\u003eshutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the seville switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe seville driver has a code structure that could accommodate both the\nmdiobus_unregister and mdiobus_free calls, but it has an external\ndependency upon mscc_miim_setup() from mdio-mscc-miim.c, which calls\ndevm_mdiobus_alloc_size() on its behalf. So rather than restructuring\nthat, and exporting yet one more symbol mscc_miim_teardown(), let's work\nwith devres and replace of_mdiobus_register with the devres variant.\nWhen we use all-devres, we can ensure that devres doesn't free a\nstill-registered bus (it either runs both callbacks, or none).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48815",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: bcm_sf2: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() \u003c-\ndevres_release_all() \u003c- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe Starfighter 2 is a platform device, so the initial set of\nconstraints that I thought would cause this (I2C or SPI buses which call\n-\u003eremove on -\u003eshutdown) do not apply. But there is one more which\napplies here.\n\nIf the DSA master itself is on a bus that calls -\u003eremove from -\u003eshutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the bcm_sf2 switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe bcm_sf2 driver has the code structure in place for orderly mdiobus\nremoval, so just replace devm_mdiobus_alloc() with the non-devres\nvariant, and add manual free where necessary, to ensure that we don't\nlet devres free a still-registered bus.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48816",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: lock against -\u003esock changing during sysfs read\n\n-\u003esock can be set to NULL asynchronously unless -\u003erecv_mutex is held.\nSo it is important to hold that mutex.  Otherwise a sysfs read can\ntrigger an oops.\nCommit 17f09d3f619a (\"SUNRPC: Check if the xprt is connected before\nhandling sysfs reads\") appears to attempt to fix this problem, but it\nonly narrows the race window.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: ar9331: register the mdiobus under devres\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() \u003c-\ndevres_release_all() \u003c- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe ar9331 is an MDIO device, so the initial set of constraints that I\nthought would cause this (I2C or SPI buses which call -\u003eremove on\n-\u003eshutdown) do not apply. But there is one more which applies here.\n\nIf the DSA master itself is on a bus that calls -\u003eremove from -\u003eshutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the ar9331 switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe ar9331 driver doesn't have a complex code structure for mdiobus\nremoval, so just replace of_mdiobus_register with the devres variant in\norder to be all-devres and ensure that we don't free a still-registered\nbus.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48818",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6xxx: don't use devres for mdiobus\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() \u003c-\ndevres_release_all() \u003c- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe mv88e6xxx is an MDIO device, so the initial set of constraints that\nI thought would cause this (I2C or SPI buses which call -\u003eremove on\n-\u003eshutdown) do not apply. But there is one more which applies here.\n\nIf the DSA master itself is on a bus that calls -\u003eremove from -\u003eshutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the Marvell switch driver on shutdown.\n\nsystemd-shutdown[1]: Powering off.\nmv88e6085 0x0000000008b96000:00 sw_gl0: Link is Down\nfsl-mc dpbp.9: Removing from iommu group 7\nfsl-mc dpbp.8: Removing from iommu group 7\n------------[ cut here ]------------\nkernel BUG at drivers/net/phy/mdio_bus.c:677!\nInternal error: Oops - BUG: 0 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 1 Comm: systemd-shutdow Not tainted 5.16.5-00040-gdc05f73788e5 #15\npc : mdiobus_free+0x44/0x50\nlr : devm_mdiobus_free+0x10/0x20\nCall trace:\n mdiobus_free+0x44/0x50\n devm_mdiobus_free+0x10/0x20\n devres_release_all+0xa0/0x100\n __device_release_driver+0x190/0x220\n device_release_driver_internal+0xac/0xb0\n device_links_unbind_consumers+0xd4/0x100\n __device_release_driver+0x4c/0x220\n device_release_driver_internal+0xac/0xb0\n device_links_unbind_consumers+0xd4/0x100\n __device_release_driver+0x94/0x220\n device_release_driver+0x28/0x40\n bus_remove_device+0x118/0x124\n device_del+0x174/0x420\n fsl_mc_device_remove+0x24/0x40\n __fsl_mc_device_remove+0xc/0x20\n device_for_each_child+0x58/0xa0\n dprc_remove+0x90/0xb0\n fsl_mc_driver_remove+0x20/0x5c\n __device_release_driver+0x21c/0x220\n device_release_driver+0x28/0x40\n bus_remove_device+0x118/0x124\n device_del+0x174/0x420\n fsl_mc_bus_remove+0x80/0x100\n fsl_mc_bus_shutdown+0xc/0x1c\n platform_shutdown+0x20/0x30\n device_shutdown+0x154/0x330\n kernel_power_off+0x34/0x6c\n __do_sys_reboot+0x15c/0x250\n __arm64_sys_reboot+0x20/0x30\n invoke_syscall.constprop.0+0x4c/0xe0\n do_el0_svc+0x4c/0x150\n el0_svc+0x24/0xb0\n el0t_64_sync_handler+0xa8/0xb0\n el0t_64_sync+0x178/0x17c\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe Marvell driver already has a good structure for mdiobus removal, so\njust plug in mdiobus_free and get rid of devres.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48820",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: stm32: fix a refcount leak in stm32_usbphyc_pll_enable()\n\nThis error path needs to decrement \"usbphyc-\u003en_pll_cons.counter\" before\nreturning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48821",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: avoid double fput() on failed usercopy\n\nIf the copy back to userland fails for the FASTRPC_IOCTL_ALLOC_DMA_BUFF\nioctl(), we shouldn't assume that 'buf-\u003edmabuf' is still valid. In fact,\ndma_buf_fd() called fd_install() before, i.e. \"consumed\" one reference,\nleaving us with none.\n\nCalling dma_buf_put() will therefore put a reference we no longer own,\nleading to a valid file descritor table entry for an already released\n'file' object which is a straight use-after-free.\n\nSimply avoid calling dma_buf_put() and rely on the process exit code to\ndo the necessary cleanup, if needed, i.e. if the file descriptor is\nstill valid.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: f_fs: Fix use-after-free for epfile\n\nConsider a case where ffs_func_eps_disable is called from\nffs_func_disable as part of composition switch and at the\nsame time ffs_epfile_release get called from userspace.\nffs_epfile_release will free up the read buffer and call\nffs_data_closed which in turn destroys ffs-\u003eepfiles and\nmark it as NULL. While this was happening the driver has\nalready initialized the local epfile in ffs_func_eps_disable\nwhich is now freed and waiting to acquire the spinlock. Once\nspinlock is acquired the driver proceeds with the stale value\nof epfile and tries to free the already freed read buffer\ncausing use-after-free.\n\nFollowing is the illustration of the race:\n\n      CPU1                                  CPU2\n\n   ffs_func_eps_disable\n   epfiles (local copy)\n\t\t\t\t\tffs_epfile_release\n\t\t\t\t\tffs_data_closed\n\t\t\t\t\tif (last file closed)\n\t\t\t\t\tffs_data_reset\n\t\t\t\t\tffs_data_clear\n\t\t\t\t\tffs_epfiles_destroy\nspin_lock\ndereference epfiles\n\nFix this races by taking epfiles local copy \u0026 assigning it under\nspinlock and if epfiles(local) is null then update it in ffs-\u003eepfiles\nthen finally destroy it.\nExtending the scope further from the race, protecting the ep related\nstructures, and concurrent accesses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48823",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Fix refcount issue when LOGO is received during TMF\n\nHung task call trace was seen during LOGO processing.\n\n[  974.309060] [0000:00:00.0]:[qedf_eh_device_reset:868]: 1:0:2:0: LUN RESET Issued...\n[  974.309065] [0000:00:00.0]:[qedf_initiate_tmf:2422]: tm_flags 0x10 sc_cmd 00000000c16b930f op = 0x2a target_id = 0x2 lun=0\n[  974.309178] [0000:00:00.0]:[qedf_initiate_tmf:2431]: portid=016900 tm_flags =LUN RESET\n[  974.309222] [0000:00:00.0]:[qedf_initiate_tmf:2438]: orig io_req = 00000000ec78df8f xid = 0x180 ref_cnt = 1.\n[  974.309625] host1: rport 016900: Received LOGO request while in state Ready\n[  974.309627] host1: rport 016900: Delete port\n[  974.309642] host1: rport 016900: work event 3\n[  974.309644] host1: rport 016900: lld callback ev 3\n[  974.313243] [0000:61:00.2]:[qedf_execute_tmf:2383]:1: fcport is uploading, not executing flush.\n[  974.313295] [0000:61:00.2]:[qedf_execute_tmf:2400]:1: task mgmt command success...\n[  984.031088] INFO: task jbd2/dm-15-8:7645 blocked for more than 120 seconds.\n[  984.031136]       Not tainted 4.18.0-305.el8.x86_64 #1\n\n[  984.031166] \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[  984.031209] jbd2/dm-15-8    D    0  7645      2 0x80004080\n[  984.031212] Call Trace:\n[  984.031222]  __schedule+0x2c4/0x700\n[  984.031230]  ? unfreeze_partials.isra.83+0x16e/0x1a0\n[  984.031233]  ? bit_wait_timeout+0x90/0x90\n[  984.031235]  schedule+0x38/0xa0\n[  984.031238]  io_schedule+0x12/0x40\n[  984.031240]  bit_wait_io+0xd/0x50\n[  984.031243]  __wait_on_bit+0x6c/0x80\n[  984.031248]  ? free_buffer_head+0x21/0x50\n[  984.031251]  out_of_line_wait_on_bit+0x91/0xb0\n[  984.031257]  ? init_wait_var_entry+0x50/0x50\n[  984.031268]  jbd2_journal_commit_transaction+0x112e/0x19f0 [jbd2]\n[  984.031280]  kjournald2+0xbd/0x270 [jbd2]\n[  984.031284]  ? finish_wait+0x80/0x80\n[  984.031291]  ? commit_timeout+0x10/0x10 [jbd2]\n[  984.031294]  kthread+0x116/0x130\n[  984.031300]  ? kthread_flush_work_fn+0x10/0x10\n[  984.031305]  ret_from_fork+0x1f/0x40\n\nThere was a ref count issue when LOGO is received during TMF. This leads to\none of the I/Os hanging with the driver. Fix the ref count.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48824",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: myrs: Fix crash in error case\n\nIn myrs_detect(), cs-\u003edisable_intr is NULL when privdata-\u003ehw_init() fails\nwith non-zero. In this case, myrs_cleanup(cs) will call a NULL ptr and\ncrash the kernel.\n\n[    1.105606] myrs 0000:00:03.0: Unknown Initialization Error 5A\n[    1.105872] myrs 0000:00:03.0: Failed to initialize Controller\n[    1.106082] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[    1.110774] Call Trace:\n[    1.110950]  myrs_cleanup+0xe4/0x150 [myrs]\n[    1.111135]  myrs_probe.cold+0x91/0x56a [myrs]\n[    1.111302]  ? DAC960_GEM_intr_handler+0x1f0/0x1f0 [myrs]\n[    1.111500]  local_pci_probe+0x48/0x90",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48825",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Add stag_work to all the vports\n\nCall trace seen when creating NPIV ports, only 32 out of 64 show online.\nstag work was not initialized for vport, hence initialize the stag work.\n\nWARNING: CPU: 8 PID: 645 at kernel/workqueue.c:1635 __queue_delayed_work+0x68/0x80\nCPU: 8 PID: 645 Comm: kworker/8:1 Kdump: loaded Tainted: G IOE    --------- --\n 4.18.0-348.el8.x86_64 #1\nHardware name: Dell Inc. PowerEdge MX740c/0177V9, BIOS 2.12.2 07/09/2021\nWorkqueue: events fc_lport_timeout [libfc]\nRIP: 0010:__queue_delayed_work+0x68/0x80\nCode: 89 b2 88 00 00 00 44 89 82 90 00 00 00 48 01 c8 48 89 42 50 41 81\nf8 00 20 00 00 75 1d e9 60 24 07 00 44 89 c7 e9 98 f6 ff ff \u003c0f\u003e 0b eb\nc5 0f 0b eb a1 0f 0b eb a7 0f 0b eb ac 44 89 c6 e9 40 23\nRSP: 0018:ffffae514bc3be40 EFLAGS: 00010006\nRAX: ffff8d25d6143750 RBX: 0000000000000202 RCX: 0000000000000002\nRDX: ffff8d2e31383748 RSI: ffff8d25c000d600 RDI: ffff8d2e31383788\nRBP: ffff8d2e31380de0 R08: 0000000000002000 R09: ffff8d2e31383750\nR10: ffffffffc0c957e0 R11: ffff8d2624800000 R12: ffff8d2e31380a58\nR13: ffff8d2d915eb000 R14: ffff8d25c499b5c0 R15: ffff8d2e31380e18\nFS:  0000000000000000(0000) GS:ffff8d2d1fb00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055fd0484b8b8 CR3: 00000008ffc10006 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n  queue_delayed_work_on+0x36/0x40\n  qedf_elsct_send+0x57/0x60 [qedf]\n  fc_lport_enter_flogi+0x90/0xc0 [libfc]\n  fc_lport_timeout+0xb7/0x140 [libfc]\n  process_one_work+0x1a7/0x360\n  ? create_worker+0x1a0/0x1a0\n  worker_thread+0x30/0x390\n  ? create_worker+0x1a0/0x1a0\n  kthread+0x116/0x130\n  ? kthread_flush_work_fn+0x10/0x10\n  ret_from_fork+0x35/0x40\n ---[ end trace 008f00f722f2c2ff ]--\n\nInitialize stag work for all the vports.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48826",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vc4: Fix deadlock on DSI device attach error\n\nDSI device attach to DSI host will be done with host device's lock\nheld.\n\nUn-registering host in \"device attach\" error path (ex: probe retry)\nwill result in deadlock with below call trace and non operational\nDSI display.\n\nStartup Call trace:\n[   35.043036]  rt_mutex_slowlock.constprop.21+0x184/0x1b8\n[   35.043048]  mutex_lock_nested+0x7c/0xc8\n[   35.043060]  device_del+0x4c/0x3e8\n[   35.043075]  device_unregister+0x20/0x40\n[   35.043082]  mipi_dsi_remove_device_fn+0x18/0x28\n[   35.043093]  device_for_each_child+0x68/0xb0\n[   35.043105]  mipi_dsi_host_unregister+0x40/0x90\n[   35.043115]  vc4_dsi_host_attach+0xf0/0x120 [vc4]\n[   35.043199]  mipi_dsi_attach+0x30/0x48\n[   35.043209]  tc358762_probe+0x128/0x164 [tc358762]\n[   35.043225]  mipi_dsi_drv_probe+0x28/0x38\n[   35.043234]  really_probe+0xc0/0x318\n[   35.043244]  __driver_probe_device+0x80/0xe8\n[   35.043254]  driver_probe_device+0xb8/0x118\n[   35.043263]  __device_attach_driver+0x98/0xe8\n[   35.043273]  bus_for_each_drv+0x84/0xd8\n[   35.043281]  __device_attach+0xf0/0x150\n[   35.043290]  device_initial_probe+0x1c/0x28\n[   35.043300]  bus_probe_device+0xa4/0xb0\n[   35.043308]  deferred_probe_work_func+0xa0/0xe0\n[   35.043318]  process_one_work+0x254/0x700\n[   35.043330]  worker_thread+0x4c/0x448\n[   35.043339]  kthread+0x19c/0x1a8\n[   35.043348]  ret_from_fork+0x10/0x20\n\nShutdown Call trace:\n[  365.565417] Call trace:\n[  365.565423]  __switch_to+0x148/0x200\n[  365.565452]  __schedule+0x340/0x9c8\n[  365.565467]  schedule+0x48/0x110\n[  365.565479]  schedule_timeout+0x3b0/0x448\n[  365.565496]  wait_for_completion+0xac/0x138\n[  365.565509]  __flush_work+0x218/0x4e0\n[  365.565523]  flush_work+0x1c/0x28\n[  365.565536]  wait_for_device_probe+0x68/0x158\n[  365.565550]  device_shutdown+0x24/0x348\n[  365.565561]  kernel_restart_prepare+0x40/0x50\n[  365.565578]  kernel_restart+0x20/0x70\n[  365.565591]  __do_sys_reboot+0x10c/0x220\n[  365.565605]  __arm64_sys_reboot+0x2c/0x38\n[  365.565619]  invoke_syscall+0x4c/0x110\n[  365.565634]  el0_svc_common.constprop.3+0xfc/0x120\n[  365.565648]  do_el0_svc+0x2c/0x90\n[  365.565661]  el0_svc+0x4c/0xf0\n[  365.565671]  el0t_64_sync_handler+0x90/0xb8\n[  365.565682]  el0t_64_sync+0x180/0x184",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48827",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix the behavior of READ near OFFSET_MAX\n\nDan Aloni reports:\n\u003e Due to commit 8cfb9015280d (\"NFS: Always provide aligned buffers to\n\u003e the RPC read layers\") on the client, a read of 0xfff is aligned up\n\u003e to server rsize of 0x1000.\n\u003e\n\u003e As a result, in a test where the server has a file of size\n\u003e 0x7fffffffffffffff, and the client tries to read from the offset\n\u003e 0x7ffffffffffff000, the read causes loff_t overflow in the server\n\u003e and it returns an NFS code of EINVAL to the client. The client as\n\u003e a result indefinitely retries the request.\n\nThe Linux NFS client does not handle NFS?ERR_INVAL, even though all\nNFS specifications permit servers to return that status code for a\nREAD.\n\nInstead of NFS?ERR_INVAL, have out-of-range READ requests succeed\nand return a short result. Set the EOF flag in the result to prevent\nthe client from retrying the READ request. This behavior appears to\nbe consistent with Solaris NFS servers.\n\nNote that NFSv3 and NFSv4 use u64 offset values on the wire. These\nmust be converted to loff_t internally before use -- an implicit\ntype cast is not adequate for this purpose. Otherwise VFS checks\nagainst sb-\u003es_maxbytes do not work properly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48828",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix ia_size underflow\n\niattr::ia_size is a loff_t, which is a signed 64-bit type. NFSv3 and\nNFSv4 both define file size as an unsigned 64-bit type. Thus there\nis a range of valid file size values an NFS client can send that is\nalready larger than Linux can handle.\n\nCurrently decode_fattr4() dumps a full u64 value into ia_size. If\nthat value happens to be larger than S64_MAX, then ia_size\nunderflows. I'm about to fix up the NFSv3 behavior as well, so let's\ncatch the underflow in the common code path: nfsd_setattr().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48829",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix NFSv3 SETATTR/CREATE's handling of large file sizes\n\niattr::ia_size is a loff_t, so these NFSv3 procedures must be\ncareful to deal with incoming client size values that are larger\nthan s64_max without corrupting the value.\n\nSilently capping the value results in storing a different value\nthan the client passed in which is unexpected behavior, so remove\nthe min_t() check in decode_sattr3().\n\nNote that RFC 1813 permits only the WRITE procedure to return\nNFS3ERR_FBIG. We believe that NFSv3 reference implementations\nalso return NFS3ERR_FBIG when ia_size is too large.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48830",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: isotp: fix potential CAN frame reception race in isotp_rcv()\n\nWhen receiving a CAN frame the current code logic does not consider\nconcurrently receiving processes which do not show up in real world\nusage.\n\nZiyang Xuan writes:\n\nThe following syz problem is one of the scenarios. so-\u003erx.len is\nchanged by isotp_rcv_ff() during isotp_rcv_cf(), so-\u003erx.len equals\n0 before alloc_skb() and equals 4096 after alloc_skb(). That will\ntrigger skb_over_panic() in skb_put().\n\n=======================================================\nCPU: 1 PID: 19 Comm: ksoftirqd/1 Not tainted 5.16.0-rc8-syzkaller #0\nRIP: 0010:skb_panic+0x16c/0x16e net/core/skbuff.c:113\nCall Trace:\n \u003cTASK\u003e\n skb_over_panic net/core/skbuff.c:118 [inline]\n skb_put.cold+0x24/0x24 net/core/skbuff.c:1990\n isotp_rcv_cf net/can/isotp.c:570 [inline]\n isotp_rcv+0xa38/0x1e30 net/can/isotp.c:668\n deliver net/can/af_can.c:574 [inline]\n can_rcv_filter+0x445/0x8d0 net/can/af_can.c:635\n can_receive+0x31d/0x580 net/can/af_can.c:665\n can_rcv+0x120/0x1c0 net/can/af_can.c:696\n __netif_receive_skb_one_core+0x114/0x180 net/core/dev.c:5465\n __netif_receive_skb+0x24/0x1b0 net/core/dev.c:5579\n\nTherefore we make sure the state changes and data structures stay\nconsistent at CAN frame reception time by adding a spin_lock in\nisotp_rcv(). This fixes the issue reported by syzkaller but does not\naffect real world operation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48831",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nima: fix reference leak in asymmetric_verify()\n\nDon't leak a reference to the key if its algorithm is unknown.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48834",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: usbtmc: Fix bug in pipe direction for control transfers\n\nThe syzbot fuzzer reported a minor bug in the usbtmc driver:\n\nusb 5-1: BOGUS control dir, pipe 80001e80 doesn't match bRequestType 0\nWARNING: CPU: 0 PID: 3813 at drivers/usb/core/urb.c:412\nusb_submit_urb+0x13a5/0x1970 drivers/usb/core/urb.c:410\nModules linked in:\nCPU: 0 PID: 3813 Comm: syz-executor122 Not tainted\n5.17.0-rc5-syzkaller-00306-g2293be58d6a1 #0\n...\nCall Trace:\n \u003cTASK\u003e\n usb_start_wait_urb+0x113/0x530 drivers/usb/core/message.c:58\n usb_internal_control_msg drivers/usb/core/message.c:102 [inline]\n usb_control_msg+0x2a5/0x4b0 drivers/usb/core/message.c:153\n usbtmc_ioctl_request drivers/usb/class/usbtmc.c:1947 [inline]\n\nThe problem is that usbtmc_ioctl_request() uses usb_rcvctrlpipe() for\nall of its transfers, whether they are in or out.  It's easy to fix.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48835",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Page fault in reply q processing\n\nA page fault was encountered in mpt3sas on a LUN reset error path:\n\n[  145.763216] mpt3sas_cm1: Task abort tm failed: handle(0x0002),timeout(30) tr_method(0x0) smid(3) msix_index(0)\n[  145.778932] scsi 1:0:0:0: task abort: FAILED scmd(0x0000000024ba29a2)\n[  145.817307] scsi 1:0:0:0: attempting device reset! scmd(0x0000000024ba29a2)\n[  145.827253] scsi 1:0:0:0: [sg1] tag#2 CDB: Receive Diagnostic 1c 01 01 ff fc 00\n[  145.837617] scsi target1:0:0: handle(0x0002), sas_address(0x500605b0000272b9), phy(0)\n[  145.848598] scsi target1:0:0: enclosure logical id(0x500605b0000272b8), slot(0)\n[  149.858378] mpt3sas_cm1: Poll ReplyDescriptor queues for completion of smid(0), task_type(0x05), handle(0x0002)\n[  149.875202] BUG: unable to handle page fault for address: 00000007fffc445d\n[  149.885617] #PF: supervisor read access in kernel mode\n[  149.894346] #PF: error_code(0x0000) - not-present page\n[  149.903123] PGD 0 P4D 0\n[  149.909387] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[  149.917417] CPU: 24 PID: 3512 Comm: scsi_eh_1 Kdump: loaded Tainted: G S         O      5.10.89-altav-1 #1\n[  149.934327] Hardware name: DDN           200NVX2             /200NVX2-MB          , BIOS ATHG2.2.02.01 09/10/2021\n[  149.951871] RIP: 0010:_base_process_reply_queue+0x4b/0x900 [mpt3sas]\n[  149.961889] Code: 0f 84 22 02 00 00 8d 48 01 49 89 fd 48 8d 57 38 f0 0f b1 4f 38 0f 85 d8 01 00 00 49 8b 45 10 45 31 e4 41 8b 55 0c 48 8d 1c d0 \u003c0f\u003e b6 03 83 e0 0f 3c 0f 0f 85 a2 00 00 00 e9 e6 01 00 00 0f b7 ee\n[  149.991952] RSP: 0018:ffffc9000f1ebcb8 EFLAGS: 00010246\n[  150.000937] RAX: 0000000000000055 RBX: 00000007fffc445d RCX: 000000002548f071\n[  150.011841] RDX: 00000000ffff8881 RSI: 0000000000000001 RDI: ffff888125ed50d8\n[  150.022670] RBP: 0000000000000000 R08: 0000000000000000 R09: c0000000ffff7fff\n[  150.033445] R10: ffffc9000f1ebb68 R11: ffffc9000f1ebb60 R12: 0000000000000000\n[  150.044204] R13: ffff888125ed50d8 R14: 0000000000000080 R15: 34cdc00034cdea80\n[  150.054963] FS:  0000000000000000(0000) GS:ffff88dfaf200000(0000) knlGS:0000000000000000\n[  150.066715] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  150.076078] CR2: 00000007fffc445d CR3: 000000012448a006 CR4: 0000000000770ee0\n[  150.086887] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  150.097670] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  150.108323] PKRU: 55555554\n[  150.114690] Call Trace:\n[  150.120497]  ? printk+0x48/0x4a\n[  150.127049]  mpt3sas_scsih_issue_tm.cold.114+0x2e/0x2b3 [mpt3sas]\n[  150.136453]  mpt3sas_scsih_issue_locked_tm+0x86/0xb0 [mpt3sas]\n[  150.145759]  scsih_dev_reset+0xea/0x300 [mpt3sas]\n[  150.153891]  scsi_eh_ready_devs+0x541/0x9e0 [scsi_mod]\n[  150.162206]  ? __scsi_host_match+0x20/0x20 [scsi_mod]\n[  150.170406]  ? scsi_try_target_reset+0x90/0x90 [scsi_mod]\n[  150.178925]  ? blk_mq_tagset_busy_iter+0x45/0x60\n[  150.186638]  ? scsi_try_target_reset+0x90/0x90 [scsi_mod]\n[  150.195087]  scsi_error_handler+0x3a5/0x4a0 [scsi_mod]\n[  150.203206]  ? __schedule+0x1e9/0x610\n[  150.209783]  ? scsi_eh_get_sense+0x210/0x210 [scsi_mod]\n[  150.217924]  kthread+0x12e/0x150\n[  150.224041]  ? kthread_worker_fn+0x130/0x130\n[  150.231206]  ret_from_fork+0x1f/0x30\n\nThis is caused by mpt3sas_base_sync_reply_irqs() using an invalid reply_q\npointer outside of the list_for_each_entry() loop. At the end of the full\nlist traversal the pointer is invalid.\n\nMove the _base_process_reply_queue() call inside of the loop.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48836",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: aiptek - properly check endpoint type\n\nSyzbot reported warning in usb_submit_urb() which is caused by wrong\nendpoint type. There was a check for the number of endpoints, but not\nfor the type of endpoint.\n\nFix it by replacing old desc.bNumEndpoints check with\nusb_find_common_endpoints() helper for finding endpoints\n\nFail log:\n\nusb 5-1: BOGUS urb xfer, pipe 1 != type 3\nWARNING: CPU: 2 PID: 48 at drivers/usb/core/urb.c:502 usb_submit_urb+0xed2/0x18a0 drivers/usb/core/urb.c:502\nModules linked in:\nCPU: 2 PID: 48 Comm: kworker/2:2 Not tainted 5.17.0-rc6-syzkaller-00226-g07ebd38a0da2 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014\nWorkqueue: usb_hub_wq hub_event\n...\nCall Trace:\n \u003cTASK\u003e\n aiptek_open+0xd5/0x130 drivers/input/tablet/aiptek.c:830\n input_open_device+0x1bb/0x320 drivers/input/input.c:629\n kbd_connect+0xfe/0x160 drivers/tty/vt/keyboard.c:1593",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48837",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: rndis: prevent integer overflow in rndis_set_response()\n\nIf \"BufOffset\" is very large the \"BufOffset + 8\" operation can have an\ninteger overflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48838",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: Fix use-after-free bug by not setting udc-\u003edev.driver\n\nThe syzbot fuzzer found a use-after-free bug:\n\nBUG: KASAN: use-after-free in dev_uevent+0x712/0x780 drivers/base/core.c:2320\nRead of size 8 at addr ffff88802b934098 by task udevd/3689\n\nCPU: 2 PID: 3689 Comm: udevd Not tainted 5.17.0-rc4-syzkaller-00229-g4f12b742eb2b #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n print_address_description.constprop.0.cold+0x8d/0x303 mm/kasan/report.c:255\n __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold+0x83/0xdf mm/kasan/report.c:459\n dev_uevent+0x712/0x780 drivers/base/core.c:2320\n uevent_show+0x1b8/0x380 drivers/base/core.c:2391\n dev_attr_show+0x4b/0x90 drivers/base/core.c:2094\n\nAlthough the bug manifested in the driver core, the real cause was a\nrace with the gadget core.  dev_uevent() does:\n\n\tif (dev-\u003edriver)\n\t\tadd_uevent_var(env, \"DRIVER=%s\", dev-\u003edriver-\u003ename);\n\nand between the test and the dereference of dev-\u003edriver, the gadget\ncore sets dev-\u003edriver to NULL.\n\nThe race wouldn't occur if the gadget core registered its devices on\na real bus, using the standard synchronization techniques of the\ndriver core.  However, it's not necessary to make such a large change\nin order to fix this bug; all we need to do is make sure that\nudc-\u003edev.driver is always NULL.\n\nIn fact, there is no reason for udc-\u003edev.driver ever to be set to\nanything, let alone to the value it currently gets: the address of the\ngadget's driver.  After all, a gadget driver only knows how to manage\na gadget, not how to manage a UDC.\n\nThis patch simply removes the statements in the gadget core that touch\nudc-\u003edev.driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48840",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix hang during reboot/shutdown\n\nRecent commit 974578017fc1 (\"iavf: Add waiting so the port is\ninitialized in remove\") adds a wait-loop at the beginning of\niavf_remove() to ensure that port initialization is finished\nprior unregistering net device. This causes a regression\nin reboot/shutdown scenario because in this case callback\niavf_shutdown() is called and this callback detaches the device,\nmakes it down if it is running and sets its state to __IAVF_REMOVE.\nLater shutdown callback of associated PF driver (e.g. ice_shutdown)\nis called. That callback calls among other things sriov_disable()\nthat calls indirectly iavf_remove() (see stack trace below).\nAs the adapter state is already __IAVF_REMOVE then the mentioned\nloop is end-less and shutdown process hangs.\n\nThe patch fixes this by checking adapter's state at the beginning\nof iavf_remove() and skips the rest of the function if the adapter\nis already in remove state (shutdown is in progress).\n\nReproducer:\n1. Create VF on PF driven by ice or i40e driver\n2. Ensure that the VF is bound to iavf driver\n3. Reboot\n\n[52625.981294] sysrq: SysRq : Show Blocked State\n[52625.988377] task:reboot          state:D stack:    0 pid:17359 ppid:     1 f2\n[52625.996732] Call Trace:\n[52625.999187]  __schedule+0x2d1/0x830\n[52626.007400]  schedule+0x35/0xa0\n[52626.010545]  schedule_hrtimeout_range_clock+0x83/0x100\n[52626.020046]  usleep_range+0x5b/0x80\n[52626.023540]  iavf_remove+0x63/0x5b0 [iavf]\n[52626.027645]  pci_device_remove+0x3b/0xc0\n[52626.031572]  device_release_driver_internal+0x103/0x1f0\n[52626.036805]  pci_stop_bus_device+0x72/0xa0\n[52626.040904]  pci_stop_and_remove_bus_device+0xe/0x20\n[52626.045870]  pci_iov_remove_virtfn+0xba/0x120\n[52626.050232]  sriov_disable+0x2f/0xe0\n[52626.053813]  ice_free_vfs+0x7c/0x340 [ice]\n[52626.057946]  ice_remove+0x220/0x240 [ice]\n[52626.061967]  ice_shutdown+0x16/0x50 [ice]\n[52626.065987]  pci_device_shutdown+0x34/0x60\n[52626.070086]  device_shutdown+0x165/0x1c5\n[52626.074011]  kernel_restart+0xe/0x30\n[52626.077593]  __do_sys_reboot+0x1d2/0x210\n[52626.093815]  do_syscall_64+0x5b/0x1a0\n[52626.097483]  entry_SYSCALL_64_after_hwframe+0x65/0xca",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48841",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix NULL pointer dereference in ice_update_vsi_tx_ring_stats()\n\nIt is possible to do NULL pointer dereference in routine that updates\nTx ring stats. Currently only stats and bytes are updated when ring\npointer is valid, but later on ring is accessed to propagate gathered Tx\nstats onto VSI stats.\n\nChange the existing logic to move to next ring when ring is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48842",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Fix race condition during interface enslave\n\nCommit 5dbbbd01cbba83 (\"ice: Avoid RTNL lock when re-creating\nauxiliary device\") changes a process of re-creation of aux device\nso ice_plug_aux_dev() is called from ice_service_task() context.\nThis unfortunately opens a race window that can result in dead-lock\nwhen interface has left LAG and immediately enters LAG again.\n\nReproducer:\n```\n#!/bin/sh\n\nip link add lag0 type bond mode 1 miimon 100\nip link set lag0\n\nfor n in {1..10}; do\n        echo Cycle: $n\n        ip link set ens7f0 master lag0\n        sleep 1\n        ip link set ens7f0 nomaster\ndone\n```\n\nThis results in:\n[20976.208697] Workqueue: ice ice_service_task [ice]\n[20976.213422] Call Trace:\n[20976.215871]  __schedule+0x2d1/0x830\n[20976.219364]  schedule+0x35/0xa0\n[20976.222510]  schedule_preempt_disabled+0xa/0x10\n[20976.227043]  __mutex_lock.isra.7+0x310/0x420\n[20976.235071]  enum_all_gids_of_dev_cb+0x1c/0x100 [ib_core]\n[20976.251215]  ib_enum_roce_netdev+0xa4/0xe0 [ib_core]\n[20976.256192]  ib_cache_setup_one+0x33/0xa0 [ib_core]\n[20976.261079]  ib_register_device+0x40d/0x580 [ib_core]\n[20976.266139]  irdma_ib_register_device+0x129/0x250 [irdma]\n[20976.281409]  irdma_probe+0x2c1/0x360 [irdma]\n[20976.285691]  auxiliary_bus_probe+0x45/0x70\n[20976.289790]  really_probe+0x1f2/0x480\n[20976.298509]  driver_probe_device+0x49/0xc0\n[20976.302609]  bus_for_each_drv+0x79/0xc0\n[20976.306448]  __device_attach+0xdc/0x160\n[20976.310286]  bus_probe_device+0x9d/0xb0\n[20976.314128]  device_add+0x43c/0x890\n[20976.321287]  __auxiliary_device_add+0x43/0x60\n[20976.325644]  ice_plug_aux_dev+0xb2/0x100 [ice]\n[20976.330109]  ice_service_task+0xd0c/0xed0 [ice]\n[20976.342591]  process_one_work+0x1a7/0x360\n[20976.350536]  worker_thread+0x30/0x390\n[20976.358128]  kthread+0x10a/0x120\n[20976.365547]  ret_from_fork+0x1f/0x40\n...\n[20976.438030] task:ip              state:D stack:    0 pid:213658 ppid:213627 flags:0x00004084\n[20976.446469] Call Trace:\n[20976.448921]  __schedule+0x2d1/0x830\n[20976.452414]  schedule+0x35/0xa0\n[20976.455559]  schedule_preempt_disabled+0xa/0x10\n[20976.460090]  __mutex_lock.isra.7+0x310/0x420\n[20976.464364]  device_del+0x36/0x3c0\n[20976.467772]  ice_unplug_aux_dev+0x1a/0x40 [ice]\n[20976.472313]  ice_lag_event_handler+0x2a2/0x520 [ice]\n[20976.477288]  notifier_call_chain+0x47/0x70\n[20976.481386]  __netdev_upper_dev_link+0x18b/0x280\n[20976.489845]  bond_enslave+0xe05/0x1790 [bonding]\n[20976.494475]  do_setlink+0x336/0xf50\n[20976.502517]  __rtnl_newlink+0x529/0x8b0\n[20976.543441]  rtnl_newlink+0x43/0x60\n[20976.546934]  rtnetlink_rcv_msg+0x2b1/0x360\n[20976.559238]  netlink_rcv_skb+0x4c/0x120\n[20976.563079]  netlink_unicast+0x196/0x230\n[20976.567005]  netlink_sendmsg+0x204/0x3d0\n[20976.570930]  sock_sendmsg+0x4c/0x50\n[20976.574423]  ____sys_sendmsg+0x1eb/0x250\n[20976.586807]  ___sys_sendmsg+0x7c/0xc0\n[20976.606353]  __sys_sendmsg+0x57/0xa0\n[20976.609930]  do_syscall_64+0x5b/0x1a0\n[20976.613598]  entry_SYSCALL_64_after_hwframe+0x65/0xca\n\n1. Command 'ip link ... set nomaster' causes that ice_plug_aux_dev()\n   is called from ice_service_task() context, aux device is created\n   and associated device-\u003elock is taken.\n2. Command 'ip link ... set master...' calls ice's notifier under\n   RTNL lock and that notifier calls ice_unplug_aux_dev(). That\n   function tries to take aux device-\u003elock but this is already taken\n   by ice_plug_aux_dev() in step 1\n3. Later ice_plug_aux_dev() tries to take RTNL lock but this is already\n   taken in step 2\n4. Dead-lock\n\nThe patch fixes this issue by following changes:\n- Bit ICE_FLAG_PLUG_AUX_DEV is kept to be set during ice_plug_aux_dev()\n  call in ice_service_task()\n- The bit is checked in ice_clear_rdma_cap() and only if it is not set\n  then ice_unplug_aux_dev() is called. If it is set (in other words\n  plugging of aux device was requested and ice_plug_aux_dev() is\n  potentially running) then the function only clears the\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48843",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vrr: Set VRR capable prop only if it is attached to connector\n\nVRR capable property is not attached by default to the connector\nIt is attached only if VRR is supported.\nSo if the driver tries to call drm core set prop function without\nit being attached that causes NULL dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: bypass tiling flag check in virtual display case (v2)\n\nvkms leverages common amdgpu framebuffer creation, and\nalso as it does not support FB modifier, there is no need\nto check tiling flags when initing framebuffer when virtual\ndisplay is enabled.\n\nThis can fix below calltrace:\n\namdgpu 0000:00:08.0: GFX9+ requires FB check based on format modifier\nWARNING: CPU: 0 PID: 1023 at drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:1150 amdgpu_display_framebuffer_init+0x8e7/0xb40 [amdgpu]\n\nv2: check adev-\u003eenable_virtual_display instead as vkms can be\n\tenabled in bare metal as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48851",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: gdm724x: fix use after free in gdm_lte_rx()\n\nThe netif_rx_ni() function frees the skb so we can't dereference it to\nsave the skb-\u003elen.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48856",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngianfar: ethtool: Fix refcount leak in gfar_get_ts_info\n\nThe of_find_compatible_node() function returns a node pointer with\nrefcount incremented, We should use of_node_put() on it when done\nAdd the missing of_node_put() to release the refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48857",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: port100: fix use-after-free in port100_send_complete\n\nSyzbot reported UAF in port100_send_complete(). The root case is in\nmissing usb_kill_urb() calls on error handling path of -\u003eprobe function.\n\nport100_send_complete() accesses devm allocated memory which will be\nfreed on probe failure. We should kill this urbs before returning an\nerror from probe function to prevent reported use-after-free\n\nFail log:\n\nBUG: KASAN: use-after-free in port100_send_complete+0x16e/0x1a0 drivers/nfc/port100.c:935\nRead of size 1 at addr ffff88801bb59540 by task ksoftirqd/2/26\n...\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n print_address_description.constprop.0.cold+0x8d/0x303 mm/kasan/report.c:255\n __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold+0x83/0xdf mm/kasan/report.c:459\n port100_send_complete+0x16e/0x1a0 drivers/nfc/port100.c:935\n __usb_hcd_giveback_urb+0x2b0/0x5c0 drivers/usb/core/hcd.c:1670\n\n...\n\nAllocated by task 1255:\n kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\n kasan_set_track mm/kasan/common.c:45 [inline]\n set_alloc_info mm/kasan/common.c:436 [inline]\n ____kasan_kmalloc mm/kasan/common.c:515 [inline]\n ____kasan_kmalloc mm/kasan/common.c:474 [inline]\n __kasan_kmalloc+0xa6/0xd0 mm/kasan/common.c:524\n alloc_dr drivers/base/devres.c:116 [inline]\n devm_kmalloc+0x96/0x1d0 drivers/base/devres.c:823\n devm_kzalloc include/linux/device.h:209 [inline]\n port100_probe+0x8a/0x1320 drivers/nfc/port100.c:1502\n\nFreed by task 1255:\n kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\n kasan_set_track+0x21/0x30 mm/kasan/common.c:45\n kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370\n ____kasan_slab_free mm/kasan/common.c:366 [inline]\n ____kasan_slab_free+0xff/0x140 mm/kasan/common.c:328\n kasan_slab_free include/linux/kasan.h:236 [inline]\n __cache_free mm/slab.c:3437 [inline]\n kfree+0xf8/0x2b0 mm/slab.c:3794\n release_nodes+0x112/0x1a0 drivers/base/devres.c:501\n devres_release_all+0x114/0x190 drivers/base/devres.c:530\n really_probe+0x626/0xcc0 drivers/base/dd.c:670",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48858",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix a race on command flush flow\n\nFix a refcount use after free warning due to a race on command entry.\nSuch race occurs when one of the commands releases its last refcount and\nfrees its index and entry while another process running command flush\nflow takes refcount to this command entry. The process which handles\ncommands flush may see this command as needed to be flushed if the other\nprocess released its refcount but didn't release the index yet. Fix it\nby adding the needed spin lock.\n\nIt fixes the following warning trace:\n\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 11 PID: 540311 at lib/refcount.c:25 refcount_warn_saturate+0x80/0xe0\n...\nRIP: 0010:refcount_warn_saturate+0x80/0xe0\n...\nCall Trace:\n \u003cTASK\u003e\n mlx5_cmd_trigger_completions+0x293/0x340 [mlx5_core]\n mlx5_cmd_flush+0x3a/0xf0 [mlx5_core]\n enter_error_state+0x44/0x80 [mlx5_core]\n mlx5_fw_fatal_reporter_err_work+0x37/0xe0 [mlx5_core]\n process_one_work+0x1be/0x390\n worker_thread+0x4d/0x3d0\n ? rescuer_thread+0x350/0x350\n kthread+0x141/0x160\n ? set_kthread_struct+0x40/0x40\n ret_from_fork+0x1f/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48859",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: marvell: prestera: Add missing of_node_put() in prestera_switch_set_base_mac_addr\n\nThis node pointer is returned by of_find_compatible_node() with\nrefcount incremented. Calling of_node_put() to aovid the refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethernet: Fix error handling in xemaclite_of_probe\n\nThis node pointer is returned by of_parse_phandle() with refcount\nincremented in this function. Calling of_node_put() to avoid the\nrefcount leak. As the remove function do.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvdpa: fix use-after-free on vp_vdpa_remove\n\nWhen vp_vdpa driver is unbind, vp_vdpa is freed in vdpa_unregister_device\nand then vp_vdpa-\u003emdev.pci_dev is dereferenced in vp_modern_remove,\ntriggering use-after-free.\n\nCall Trace of unbinding driver free vp_vdpa :\ndo_syscall_64\n  vfs_write\n    kernfs_fop_write_iter\n      device_release_driver_internal\n        pci_device_remove\n          vp_vdpa_remove\n            vdpa_unregister_device\n              kobject_release\n                device_release\n                  kfree\n\nCall Trace of dereference vp_vdpa-\u003emdev.pci_dev:\nvp_modern_remove\n  pci_release_selected_regions\n    pci_release_region\n      pci_resource_len\n        pci_resource_end\n          (dev)-\u003eresource[(bar)].end",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48862",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvhost: fix hung thread due to erroneous iotlb entries\n\nIn vhost_iotlb_add_range_ctx(), range size can overflow to 0 when\nstart is 0 and last is ULONG_MAX. One instance where it can happen\nis when userspace sends an IOTLB message with iova=size=uaddr=0\n(vhost_process_iotlb_msg). So, an entry with size = 0, start = 0,\nlast = ULONG_MAX ends up in the iotlb. Next time a packet is sent,\niotlb_access_ok() loops indefinitely due to that erroneous entry.\n\n\tCall Trace:\n\t \u003cTASK\u003e\n\t iotlb_access_ok+0x21b/0x3e0 drivers/vhost/vhost.c:1340\n\t vq_meta_prefetch+0xbc/0x280 drivers/vhost/vhost.c:1366\n\t vhost_transport_do_send_pkt+0xe0/0xfd0 drivers/vhost/vsock.c:104\n\t vhost_worker+0x23d/0x3d0 drivers/vhost/vhost.c:372\n\t kthread+0x2e9/0x3a0 kernel/kthread.c:377\n\t ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295\n\t \u003c/TASK\u003e\n\nReported by syzbot at:\n\thttps://syzkaller.appspot.com/bug?extid=0abd373e2e50d704db87\n\nTo fix this, do two things:\n\n1. Return -EINVAL in vhost_chr_write_iter() when userspace asks to map\n   a range with size 0.\n2. Fix vhost_iotlb_add_range_ctx() to handle the range [0, ULONG_MAX]\n   by splitting it into two entries.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: Fix memory leak in dsp_pipeline_build()\n\ndsp_pipeline_build() allocates dup pointer by kstrdup(cfg),\nbut then it updates dup variable by strsep(\u0026dup, \"|\").\nAs a result when it calls kfree(dup), the dup variable contains NULL.\n\nFound by Linux Driver Verification project (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48866",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hid-thrustmaster: fix OOB read in thrustmaster_interrupts\n\nSyzbot reported an slab-out-of-bounds Read in thrustmaster_probe() bug.\nThe root case is in missing validation check of actual number of endpoints.\n\nCode should not blindly access usb_host_interface::endpoint array, since\nit may contain less endpoints than code expects.\n\nFix it by adding missing validaion check and print an error if\nnumber of endpoints do not match expected number",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Let probe fail when workqueue cannot be enabled\n\nThe workqueue is enabled when the appropriate driver is loaded and\ndisabled when the driver is removed. When the driver is removed it\nassumes that the workqueue was enabled successfully and proceeds to\nfree allocations made during workqueue enabling.\n\nFailure during workqueue enabling does not prevent the driver from\nbeing loaded. This is because the error path within drv_enable_wq()\nreturns success unless a second failure is encountered\nduring the error path. By returning success it is possible to load\nthe driver even if the workqueue cannot be enabled and\nallocations that do not exist are attempted to be freed during\ndriver remove.\n\nSome examples of problematic flows:\n(a)\n\n idxd_dmaengine_drv_probe() -\u003e drv_enable_wq() -\u003e idxd_wq_request_irq():\n In above flow, if idxd_wq_request_irq() fails then\n idxd_wq_unmap_portal() is called on error exit path, but\n drv_enable_wq() returns 0 because idxd_wq_disable() succeeds. The\n driver is thus loaded successfully.\n\n idxd_dmaengine_drv_remove()-\u003edrv_disable_wq()-\u003eidxd_wq_unmap_portal()\n Above flow on driver unload triggers the WARN in devm_iounmap() because\n the device resource has already been removed during error path of\n drv_enable_wq().\n\n(b)\n\n idxd_dmaengine_drv_probe() -\u003e drv_enable_wq() -\u003e idxd_wq_request_irq():\n In above flow, if idxd_wq_request_irq() fails then\n idxd_wq_init_percpu_ref() is never called to initialize the percpu\n counter, yet the driver loads successfully because drv_enable_wq()\n returns 0.\n\n idxd_dmaengine_drv_remove()-\u003e__idxd_wq_quiesce()-\u003epercpu_ref_kill():\n Above flow on driver unload triggers a BUG when attempting to drop the\n initial ref of the uninitialized percpu ref:\n BUG: kernel NULL pointer dereference, address: 0000000000000010\n\nFix the drv_enable_wq() error path by returning the original error that\nindicates failure of workqueue enabling. This ensures that the probe\nfails when an error is encountered and the driver remove paths are only\nattempted when the workqueue was enabled successfully.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: fix possible null-ptr-defer in spk_ttyio_release\n\nRun the following tests on the qemu platform:\n\nsyzkaller:~# modprobe speakup_audptr\n input: Speakup as /devices/virtual/input/input4\n initialized device: /dev/synth, node (MAJOR 10, MINOR 125)\n speakup 3.1.6: initialized\n synth name on entry is: (null)\n synth probe\n\nspk_ttyio_initialise_ldisc failed because tty_kopen_exclusive returned\nfailed (errno -16), then remove the module, we will get a null-ptr-defer\nproblem, as follow:\n\nsyzkaller:~# modprobe -r speakup_audptr\n releasing synth audptr\n BUG: kernel NULL pointer dereference, address: 0000000000000080\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 0 P4D 0\n Oops: 0002 [#1] PREEMPT SMP PTI\n CPU: 2 PID: 204 Comm: modprobe Not tainted 6.1.0-rc6-dirty #1\n RIP: 0010:mutex_lock+0x14/0x30\n Call Trace:\n \u003cTASK\u003e\n  spk_ttyio_release+0x19/0x70 [speakup]\n  synth_release.part.6+0xac/0xc0 [speakup]\n  synth_remove+0x56/0x60 [speakup]\n  __x64_sys_delete_module+0x156/0x250\n  ? fpregs_assert_state_consistent+0x1d/0x50\n  do_syscall_64+0x37/0x90\n  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n \u003c/TASK\u003e\n Modules linked in: speakup_audptr(-) speakup\n Dumping ftrace buffer:\n\nin_synth-\u003edev was not initialized during modprobe, so we add check\nfor in_synth-\u003edev to fix this bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48871",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: qcom-geni-serial: fix slab-out-of-bounds on RX FIFO buffer\n\nDriver's probe allocates memory for RX FIFO (port-\u003erx_fifo) based on\ndefault RX FIFO depth, e.g. 16.  Later during serial startup the\nqcom_geni_serial_port_setup() updates the RX FIFO depth\n(port-\u003erx_fifo_depth) to match real device capabilities, e.g. to 32.\n\nThe RX UART handle code will read \"port-\u003erx_fifo_depth\" number of words\ninto \"port-\u003erx_fifo\" buffer, thus exceeding the bounds.  This can be\nobserved in certain configurations with Qualcomm Bluetooth HCI UART\ndevice and KASAN:\n\n  Bluetooth: hci0: QCA Product ID   :0x00000010\n  Bluetooth: hci0: QCA SOC Version  :0x400a0200\n  Bluetooth: hci0: QCA ROM Version  :0x00000200\n  Bluetooth: hci0: QCA Patch Version:0x00000d2b\n  Bluetooth: hci0: QCA controller version 0x02000200\n  Bluetooth: hci0: QCA Downloading qca/htbtfw20.tlv\n  bluetooth hci0: Direct firmware load for qca/htbtfw20.tlv failed with error -2\n  Bluetooth: hci0: QCA Failed to request file: qca/htbtfw20.tlv (-2)\n  Bluetooth: hci0: QCA Failed to download patch (-2)\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in handle_rx_uart+0xa8/0x18c\n  Write of size 4 at addr ffff279347d578c0 by task swapper/0/0\n\n  CPU: 0 PID: 0 Comm: swapper/0 Not tainted 6.1.0-rt5-00350-gb2450b7e00be-dirty #26\n  Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)\n  Call trace:\n   dump_backtrace.part.0+0xe0/0xf0\n   show_stack+0x18/0x40\n   dump_stack_lvl+0x8c/0xb8\n   print_report+0x188/0x488\n   kasan_report+0xb4/0x100\n   __asan_store4+0x80/0xa4\n   handle_rx_uart+0xa8/0x18c\n   qcom_geni_serial_handle_rx+0x84/0x9c\n   qcom_geni_serial_isr+0x24c/0x760\n   __handle_irq_event_percpu+0x108/0x500\n   handle_irq_event+0x6c/0x110\n   handle_fasteoi_irq+0x138/0x2cc\n   generic_handle_domain_irq+0x48/0x64\n\nIf the RX FIFO depth changes after probe, be sure to resize the buffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48872",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: Fix use-after-free race condition for maps\n\nIt is possible that in between calling fastrpc_map_get() until\nmap-\u003efl-\u003elock is taken in fastrpc_free_map(), another thread can call\nfastrpc_map_lookup() and get a reference to a map that is about to be\ndeleted.\n\nRewrite fastrpc_map_get() to only increase the reference count of a map\nif it's non-zero. Propagate this to callers so they can know if a map is\nabout to be deleted.\n\nFixes this warning:\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 5 PID: 10100 at lib/refcount.c:25 refcount_warn_saturate\n...\nCall trace:\n refcount_warn_saturate\n [fastrpc_map_get inlined]\n [fastrpc_map_lookup inlined]\n fastrpc_map_create\n fastrpc_internal_invoke\n fastrpc_device_ioctl\n __arm64_sys_ioctl\n invoke_syscall",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48873",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: Don't remove map on creater_process and device_release\n\nDo not remove the map from the list on error path in\nfastrpc_init_create_process, instead call fastrpc_map_put, to avoid\nuse-after-free. Do not remove it on fastrpc_device_release either,\ncall fastrpc_map_put instead.\n\nThe fastrpc_free_map is the only proper place to remove the map.\nThis is called only after the reference count is 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48875",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: sdata can be NULL during AMPDU start\n\nieee80211_tx_ba_session_handle_start() may get NULL for sdata when a\ndeauthentication is ongoing.\n\nHere a trace triggering the race with the hostapd test\nmulti_ap_fronthaul_on_ap:\n\n(gdb) list *drv_ampdu_action+0x46\n0x8b16 is in drv_ampdu_action (net/mac80211/driver-ops.c:396).\n391             int ret = -EOPNOTSUPP;\n392\n393             might_sleep();\n394\n395             sdata = get_bss_sdata(sdata);\n396             if (!check_sdata_in_driver(sdata))\n397                     return -EIO;\n398\n399             trace_drv_ampdu_action(local, sdata, params);\n400\n\nwlan0: moving STA 02:00:00:00:03:00 to state 3\nwlan0: associated\nwlan0: deauthenticating from 02:00:00:00:03:00 by local choice (Reason: 3=DEAUTH_LEAVING)\nwlan3.sta1: Open BA session requested for 02:00:00:00:00:00 tid 0\nwlan3.sta1: dropped frame to 02:00:00:00:00:00 (unauthorized port)\nwlan0: moving STA 02:00:00:00:03:00 to state 2\nwlan0: moving STA 02:00:00:00:03:00 to state 1\nwlan0: Removed STA 02:00:00:00:03:00\nwlan0: Destroyed STA 02:00:00:00:03:00\nBUG: unable to handle page fault for address: fffffffffffffb48\nPGD 11814067 P4D 11814067 PUD 11816067 PMD 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 2 PID: 133397 Comm: kworker/u16:1 Tainted: G        W          6.1.0-rc8-wt+ #59\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04/01/2014\nWorkqueue: phy3 ieee80211_ba_session_work [mac80211]\nRIP: 0010:drv_ampdu_action+0x46/0x280 [mac80211]\nCode: 53 48 89 f3 be 89 01 00 00 e8 d6 43 bf ef e8 21 46 81 f0 83 bb a0 1b 00 00 04 75 0e 48 8b 9b 28 0d 00 00 48 81 eb 10 0e 00 00 \u003c8b\u003e 93 58 09 00 00 f6 c2 20 0f 84 3b 01 00 00 8b 05 dd 1c 0f 00 85\nRSP: 0018:ffffc900025ebd20 EFLAGS: 00010287\nRAX: 0000000000000000 RBX: fffffffffffff1f0 RCX: ffff888102228240\nRDX: 0000000080000000 RSI: ffffffff918c5de0 RDI: ffff888102228b40\nRBP: ffffc900025ebd40 R08: 0000000000000001 R09: 0000000000000001\nR10: 0000000000000001 R11: 0000000000000000 R12: ffff888118c18ec0\nR13: 0000000000000000 R14: ffffc900025ebd60 R15: ffff888018b7efb8\nFS:  0000000000000000(0000) GS:ffff88817a600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: fffffffffffffb48 CR3: 0000000105228006 CR4: 0000000000170ee0\nCall Trace:\n \u003cTASK\u003e\n ieee80211_tx_ba_session_handle_start+0xd0/0x190 [mac80211]\n ieee80211_ba_session_work+0xff/0x2e0 [mac80211]\n process_one_work+0x29f/0x620\n worker_thread+0x4d/0x3d0\n ? process_one_work+0x620/0x620\n kthread+0xfb/0x120\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x22/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48878",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_qca: Fix driver shutdown on closed serdev\n\nThe driver shutdown callback (which sends EDL_SOC_RESET to the device\nover serdev) should not be invoked when HCI device is not open (e.g. if\nhci_dev_open_sync() failed), because the serdev and its TTY are not open\neither.  Also skip this step if device is powered off\n(qca_power_shutdown()).\n\nThe shutdown callback causes use-after-free during system reboot with\nQualcomm Atheros Bluetooth:\n\n  Unable to handle kernel paging request at virtual address\n  0072662f67726fd7\n  ...\n  CPU: 6 PID: 1 Comm: systemd-shutdow Tainted: G        W\n  6.1.0-rt5-00325-g8a5f56bcfcca #8\n  Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)\n  Call trace:\n   tty_driver_flush_buffer+0x4/0x30\n   serdev_device_write_flush+0x24/0x34\n   qca_serdev_shutdown+0x80/0x130 [hci_uart]\n   device_shutdown+0x15c/0x260\n   kernel_restart+0x48/0xac\n\nKASAN report:\n\n  BUG: KASAN: use-after-free in tty_driver_flush_buffer+0x1c/0x50\n  Read of size 8 at addr ffff16270c2e0018 by task systemd-shutdow/1\n\n  CPU: 7 PID: 1 Comm: systemd-shutdow Not tainted\n  6.1.0-next-20221220-00014-gb85aaf97fb01-dirty #28\n  Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)\n  Call trace:\n   dump_backtrace.part.0+0xdc/0xf0\n   show_stack+0x18/0x30\n   dump_stack_lvl+0x68/0x84\n   print_report+0x188/0x488\n   kasan_report+0xa4/0xf0\n   __asan_load8+0x80/0xac\n   tty_driver_flush_buffer+0x1c/0x50\n   ttyport_write_flush+0x34/0x44\n   serdev_device_write_flush+0x48/0x60\n   qca_serdev_shutdown+0x124/0x274\n   device_shutdown+0x1e8/0x350\n   kernel_restart+0x48/0xb0\n   __do_sys_reboot+0x244/0x2d0\n   __arm64_sys_reboot+0x54/0x70\n   invoke_syscall+0x60/0x190\n   el0_svc_common.constprop.0+0x7c/0x160\n   do_el0_svc+0x44/0xf0\n   el0_svc+0x2c/0x6c\n   el0t_64_sync_handler+0xbc/0x140\n   el0t_64_sync+0x190/0x194",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48879",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nefi: fix NULL-deref in init error path\n\nIn cases where runtime services are not supported or have been disabled,\nthe runtime services workqueue will never have been allocated.\n\nDo not try to destroy the workqueue unconditionally in the unlikely\nevent that EFI initialisation fails to avoid dereferencing a NULL\npointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/surface: aggregator: Add missing call to ssam_request_sync_free()\n\nAlthough rare, ssam_request_sync_init() can fail. In that case, the\nrequest should be freed via ssam_request_sync_free(). Currently it is\nleaked instead. Fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: storvsc: Fix swiotlb bounce buffer leak in confidential VM\n\nstorvsc_queuecommand() maps the scatter/gather list using scsi_dma_map(),\nwhich in a confidential VM allocates swiotlb bounce buffers. If the I/O\nsubmission fails in storvsc_do_io(), the I/O is typically retried by higher\nlevel code, but the bounce buffer memory is never freed.  The mostly like\ncause of I/O submission failure is a full VMBus channel ring buffer, which\nis not uncommon under high I/O loads.  Eventually enough bounce buffer\nmemory leaks that the confidential VM can't do any I/O. The same problem\ncan arise in a non-confidential VM with kernel boot parameter\nswiotlb=force.\n\nFix this by doing scsi_dma_unmap() in the case of an I/O submission\nerror, which frees the bounce buffer memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48891",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: da9211: Use irq handler when ready\n\nIf the system does not come from reset (like when it is kexec()), the\nregulator might have an IRQ waiting for us.\n\nIf we enable the IRQ handler before its structures are ready, we crash.\n\nThis patch fixes:\n\n[    1.141839] Unable to handle kernel read from unreadable memory at virtual address 0000000000000078\n[    1.316096] Call trace:\n[    1.316101]  blocking_notifier_call_chain+0x20/0xa8\n[    1.322757] cpu cpu0: dummy supplies not allowed for exclusive requests\n[    1.327823]  regulator_notifier_call_chain+0x1c/0x2c\n[    1.327825]  da9211_irq_handler+0x68/0xf8\n[    1.327829]  irq_thread+0x11c/0x234\n[    1.327833]  kthread+0x13c/0x154",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48896",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nixgbe: fix pci device refcount leak\n\nAs the comment of pci_get_domain_bus_and_slot() says, it\nreturns a PCI device with refcount incremented, when finish\nusing it, the caller must decrement the reference count by\ncalling pci_dev_put().\n\nIn ixgbe_get_first_secondary_devfn() and ixgbe_x550em_a_has_mii(),\npci_dev_put() is called to avoid leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/dp: do not complete dp_aux_cmd_fifo_tx() if irq is not for aux transfer\n\nThere are 3 possible interrupt sources are handled by DP controller,\nHPDstatus, Controller state changes and Aux read/write transaction.\nAt every irq, DP controller have to check isr status of every interrupt\nsources and service the interrupt if its isr status bits shows interrupts\nare pending. There is potential race condition may happen at current aux\nisr handler implementation since it is always complete dp_aux_cmd_fifo_tx()\neven irq is not for aux read or write transaction. This may cause aux read\ntransaction return premature if host aux data read is in the middle of\nwaiting for sink to complete transferring data to host while irq happen.\nThis will cause host's receiving buffer contains unexpected data. This\npatch fixes this problem by checking aux isr and return immediately at\naux isr handler if there are no any isr status bits set.\n\nCurrent there is a bug report regrading eDP edid corruption happen during\nsystem booting up. After lengthy debugging to found that VIDEO_READY\ninterrupt was continuously firing during system booting up which cause\ndp_aux_isr() to complete dp_aux_cmd_fifo_tx() prematurely to retrieve data\nfrom aux hardware buffer which is not yet contains complete data transfer\nfrom sink. This cause edid corruption.\n\nFollows are the signature at kernel logs when problem happen,\nEDID has corrupt header\npanel-simple-dp-aux aux-aea0000.edp: Couldn't identify panel via EDID\n\nChanges in v2:\n-- do complete if (ret == IRQ_HANDLED) ay dp-aux_isr()\n-- add more commit text\n\nChanges in v3:\n-- add Stephen suggested\n-- dp_aux_isr() return IRQ_XXX back to caller\n-- dp_ctrl_isr() return IRQ_XXX back to caller\n\nChanges in v4:\n-- split into two patches\n\nChanges in v5:\n-- delete empty line between tags\n\nChanges in v6:\n-- remove extra \"that\" and fixed line more than 75 char at commit text\n\nPatchwork: https://patchwork.freedesktop.org/patch/516121/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48899",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/virtio: Fix GEM handle creation UAF\n\nUserspace can guess the handle value and try to race GEM object creation\nwith handle close, resulting in a use-after-free if we dereference the\nobject after dropping the handle's reference.  For that reason, dropping\nthe handle's reference must be done *after* we are done dereferencing\nthe object.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48903",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix relocation crash due to premature return from btrfs_commit_transaction()\n\nWe are seeing crashes similar to the following trace:\n\n[38.969182] WARNING: CPU: 20 PID: 2105 at fs/btrfs/relocation.c:4070 btrfs_relocate_block_group+0x2dc/0x340 [btrfs]\n[38.973556] CPU: 20 PID: 2105 Comm: btrfs Not tainted 5.17.0-rc4 #54\n[38.974580] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n[38.976539] RIP: 0010:btrfs_relocate_block_group+0x2dc/0x340 [btrfs]\n[38.980336] RSP: 0000:ffffb0dd42e03c20 EFLAGS: 00010206\n[38.981218] RAX: ffff96cfc4ede800 RBX: ffff96cfc3ce0000 RCX: 000000000002ca14\n[38.982560] RDX: 0000000000000000 RSI: 4cfd109a0bcb5d7f RDI: ffff96cfc3ce0360\n[38.983619] RBP: ffff96cfc309c000 R08: 0000000000000000 R09: 0000000000000000\n[38.984678] R10: ffff96cec0000001 R11: ffffe84c80000000 R12: ffff96cfc4ede800\n[38.985735] R13: 0000000000000000 R14: 0000000000000000 R15: ffff96cfc3ce0360\n[38.987146] FS:  00007f11c15218c0(0000) GS:ffff96d6dfb00000(0000) knlGS:0000000000000000\n[38.988662] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[38.989398] CR2: 00007ffc922c8e60 CR3: 00000001147a6001 CR4: 0000000000370ee0\n[38.990279] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[38.991219] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[38.992528] Call Trace:\n[38.992854]  \u003cTASK\u003e\n[38.993148]  btrfs_relocate_chunk+0x27/0xe0 [btrfs]\n[38.993941]  btrfs_balance+0x78e/0xea0 [btrfs]\n[38.994801]  ? vsnprintf+0x33c/0x520\n[38.995368]  ? __kmalloc_track_caller+0x351/0x440\n[38.996198]  btrfs_ioctl_balance+0x2b9/0x3a0 [btrfs]\n[38.997084]  btrfs_ioctl+0x11b0/0x2da0 [btrfs]\n[38.997867]  ? mod_objcg_state+0xee/0x340\n[38.998552]  ? seq_release+0x24/0x30\n[38.999184]  ? proc_nr_files+0x30/0x30\n[38.999654]  ? call_rcu+0xc8/0x2f0\n[39.000228]  ? __x64_sys_ioctl+0x84/0xc0\n[39.000872]  ? btrfs_ioctl_get_supported_features+0x30/0x30 [btrfs]\n[39.001973]  __x64_sys_ioctl+0x84/0xc0\n[39.002566]  do_syscall_64+0x3a/0x80\n[39.003011]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n[39.003735] RIP: 0033:0x7f11c166959b\n[39.007324] RSP: 002b:00007fff2543e998 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n[39.008521] RAX: ffffffffffffffda RBX: 00007f11c1521698 RCX: 00007f11c166959b\n[39.009833] RDX: 00007fff2543ea40 RSI: 00000000c4009420 RDI: 0000000000000003\n[39.011270] RBP: 0000000000000003 R08: 0000000000000013 R09: 00007f11c16f94e0\n[39.012581] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fff25440df3\n[39.014046] R13: 0000000000000000 R14: 00007fff2543ea40 R15: 0000000000000001\n[39.015040]  \u003c/TASK\u003e\n[39.015418] ---[ end trace 0000000000000000 ]---\n[43.131559] ------------[ cut here ]------------\n[43.132234] kernel BUG at fs/btrfs/extent-tree.c:2717!\n[43.133031] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[43.133702] CPU: 1 PID: 1839 Comm: btrfs Tainted: G        W         5.17.0-rc4 #54\n[43.134863] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014\n[43.136426] RIP: 0010:unpin_extent_range+0x37a/0x4f0 [btrfs]\n[43.139913] RSP: 0000:ffffb0dd4216bc70 EFLAGS: 00010246\n[43.140629] RAX: 0000000000000000 RBX: ffff96cfc34490f8 RCX: 0000000000000001\n[43.141604] RDX: 0000000080000001 RSI: 0000000051d00000 RDI: 00000000ffffffff\n[43.142645] RBP: 0000000000000000 R08: 0000000000000000 R09: ffff96cfd07dca50\n[43.143669] R10: ffff96cfc46e8a00 R11: fffffffffffec000 R12: 0000000041d00000\n[43.144657] R13: ffff96cfc3ce0000 R14: ffffb0dd4216bd08 R15: 0000000000000000\n[43.145686] FS:  00007f7657dd68c0(0000) GS:ffff96d6df640000(0000) knlGS:0000000000000000\n[43.146808] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[43.147584] CR2: 00007f7fe81bf5b0 CR3: 00000001093ee004 CR4: 0000000000370ee0\n[43.148589] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[43.149581] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 00000000000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/amd: Fix I/O page table memory leak\n\nThe current logic updates the I/O page table mode for the domain\nbefore calling the logic to free memory used for the page table.\nThis results in IOMMU page table memory leak, and can be observed\nwhen launching VM w/ pass-through devices.\n\nFix by freeing the memory used for page table before updating the mode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: free reset-work-item when flushing\n\nFix a tiny memory leak when flushing the reset work queue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nauxdisplay: lcd2s: Fix memory leak in -\u003eremove()\n\nOnce allocated the struct lcd2s_data is never freed.\nFix the memory leak by switching to devm_kzalloc().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: fix connection leak\n\nThere's a potential leak issue under following execution sequence :\n\nsmc_release  \t\t\t\tsmc_connect_work\nif (sk-\u003esk_state == SMC_INIT)\n\t\t\t\t\tsend_clc_confirim\n\ttcp_abort();\n\t\t\t\t\t...\n\t\t\t\t\tsk.sk_state = SMC_ACTIVE\nsmc_close_active\nswitch(sk-\u003esk_state) {\n...\ncase SMC_ACTIVE:\n\tsmc_close_final()\n\t// then wait peer closed\n\nUnfortunately, tcp_abort() may discard CLC CONFIRM messages that are\nstill in the tcp send buffer, in which case our connection token cannot\nbe delivered to the server side, which means that we cannot get a\npassive close message at all. Therefore, it is impossible for the to be\ndisconnected at all.\n\nThis patch tries a very simple way to avoid this issue, once the state\nhas changed to SMC_ACTIVE after tcp_abort(), we can actively abort the\nsmc connection, considering that the state is SMC_INIT before\ntcp_abort(), abandoning the complete disconnection process should not\ncause too much problem.\n\nIn fact, this problem may exist as long as the CLC CONFIRM message is\nnot received by the server. Whether a timer should be added after\nsmc_close_final() needs to be discussed in the future. But even so, this\npatch provides a faster release for connection in above case, it should\nalso be valuable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_queue: fix possible use-after-free\n\nEric Dumazet says:\n  The sock_hold() side seems suspect, because there is no guarantee\n  that sk_refcnt is not already 0.\n\nOn failure, we cannot queue the packet and need to indicate an\nerror.  The packet will be dropped by the caller.\n\nv2: split skb prefetch hunk into separate change",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48912",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: fix use-after-free in __nf_register_net_hook()\n\nWe must not dereference @new_hooks after nf_hook_mutex has been released,\nbecause other threads might have freed our allocated hooks already.\n\nBUG: KASAN: use-after-free in nf_hook_entries_get_hook_ops include/linux/netfilter.h:130 [inline]\nBUG: KASAN: use-after-free in hooks_validate net/netfilter/core.c:171 [inline]\nBUG: KASAN: use-after-free in __nf_register_net_hook+0x77a/0x820 net/netfilter/core.c:438\nRead of size 2 at addr ffff88801c1a8000 by task syz-executor237/4430\n\nCPU: 1 PID: 4430 Comm: syz-executor237 Not tainted 5.17.0-rc5-syzkaller-00306-g2293be58d6a1 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\n print_address_description.constprop.0.cold+0x8d/0x336 mm/kasan/report.c:255\n __kasan_report mm/kasan/report.c:442 [inline]\n kasan_report.cold+0x83/0xdf mm/kasan/report.c:459\n nf_hook_entries_get_hook_ops include/linux/netfilter.h:130 [inline]\n hooks_validate net/netfilter/core.c:171 [inline]\n __nf_register_net_hook+0x77a/0x820 net/netfilter/core.c:438\n nf_register_net_hook+0x114/0x170 net/netfilter/core.c:571\n nf_register_net_hooks+0x59/0xc0 net/netfilter/core.c:587\n nf_synproxy_ipv6_init+0x85/0xe0 net/netfilter/nf_synproxy_core.c:1218\n synproxy_tg6_check+0x30d/0x560 net/ipv6/netfilter/ip6t_SYNPROXY.c:81\n xt_check_target+0x26c/0x9e0 net/netfilter/x_tables.c:1038\n check_target net/ipv6/netfilter/ip6_tables.c:530 [inline]\n find_check_entry.constprop.0+0x7f1/0x9e0 net/ipv6/netfilter/ip6_tables.c:573\n translate_table+0xc8b/0x1750 net/ipv6/netfilter/ip6_tables.c:735\n do_replace net/ipv6/netfilter/ip6_tables.c:1153 [inline]\n do_ip6t_set_ctl+0x56e/0xb90 net/ipv6/netfilter/ip6_tables.c:1639\n nf_setsockopt+0x83/0xe0 net/netfilter/nf_sockopt.c:101\n ipv6_setsockopt+0x122/0x180 net/ipv6/ipv6_sockglue.c:1024\n rawv6_setsockopt+0xd3/0x6a0 net/ipv6/raw.c:1084\n __sys_setsockopt+0x2db/0x610 net/socket.c:2180\n __do_sys_setsockopt net/socket.c:2191 [inline]\n __se_sys_setsockopt net/socket.c:2188 [inline]\n __x64_sys_setsockopt+0xba/0x150 net/socket.c:2188\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f65a1ace7d9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 71 15 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f65a1a7f308 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 0000000000000006 RCX: 00007f65a1ace7d9\nRDX: 0000000000000040 RSI: 0000000000000029 RDI: 0000000000000003\nRBP: 00007f65a1b574c8 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000020000000 R11: 0000000000000246 R12: 00007f65a1b55130\nR13: 00007f65a1b574c0 R14: 00007f65a1b24090 R15: 0000000000022000\n \u003c/TASK\u003e\n\nThe buggy address belongs to the page:\npage:ffffea0000706a00 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1c1a8\nflags: 0xfff00000000000(node=0|zone=1|lastcpupid=0x7ff)\nraw: 00fff00000000000 ffffea0001c1b108 ffffea000046dd08 0000000000000000\nraw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as freed\npage last allocated via order 2, migratetype Unmovable, gfp_mask 0x52dc0(GFP_KERNEL|__GFP_NOWARN|__GFP_NORETRY|__GFP_COMP|__GFP_ZERO), pid 4430, ts 1061781545818, free_ts 1061791488993\n prep_new_page mm/page_alloc.c:2434 [inline]\n get_page_from_freelist+0xa72/0x2f50 mm/page_alloc.c:4165\n __alloc_pages+0x1b2/0x500 mm/page_alloc.c:5389\n __alloc_pages_node include/linux/gfp.h:572 [inline]\n alloc_pages_node include/linux/gfp.h:595 [inline]\n kmalloc_large_node+0x62/0x130 mm/slub.c:4438\n __kmalloc_node+0x35a/0x4a0 mm/slub.\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48913",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblktrace: fix use after free for struct blk_trace\n\nWhen tracing the whole disk, 'dropped' and 'msg' will be created\nunder 'q-\u003edebugfs_dir' and 'bt-\u003edir' is NULL, thus blk_trace_free()\nwon't remove those files. What's worse, the following UAF can be\ntriggered because of accessing stale 'dropped' and 'msg':\n\n==================================================================\nBUG: KASAN: use-after-free in blk_dropped_read+0x89/0x100\nRead of size 4 at addr ffff88816912f3d8 by task blktrace/1188\n\nCPU: 27 PID: 1188 Comm: blktrace Not tainted 5.17.0-rc4-next-20220217+ #469\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-4\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x34/0x44\n print_address_description.constprop.0.cold+0xab/0x381\n ? blk_dropped_read+0x89/0x100\n ? blk_dropped_read+0x89/0x100\n kasan_report.cold+0x83/0xdf\n ? blk_dropped_read+0x89/0x100\n kasan_check_range+0x140/0x1b0\n blk_dropped_read+0x89/0x100\n ? blk_create_buf_file_callback+0x20/0x20\n ? kmem_cache_free+0xa1/0x500\n ? do_sys_openat2+0x258/0x460\n full_proxy_read+0x8f/0xc0\n vfs_read+0xc6/0x260\n ksys_read+0xb9/0x150\n ? vfs_write+0x3d0/0x3d0\n ? fpregs_assert_state_consistent+0x55/0x60\n ? exit_to_user_mode_prepare+0x39/0x1e0\n do_syscall_64+0x35/0x80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7fbc080d92fd\nCode: ce 20 00 00 75 10 b8 00 00 00 00 0f 05 48 3d 01 f0 ff ff 73 31 c3 48 83 1\nRSP: 002b:00007fbb95ff9cb0 EFLAGS: 00000293 ORIG_RAX: 0000000000000000\nRAX: ffffffffffffffda RBX: 00007fbb95ff9dc0 RCX: 00007fbc080d92fd\nRDX: 0000000000000100 RSI: 00007fbb95ff9cc0 RDI: 0000000000000045\nRBP: 0000000000000045 R08: 0000000000406299 R09: 00000000fffffffd\nR10: 000000000153afa0 R11: 0000000000000293 R12: 00007fbb780008c0\nR13: 00007fbb78000938 R14: 0000000000608b30 R15: 00007fbb780029c8\n \u003c/TASK\u003e\n\nAllocated by task 1050:\n kasan_save_stack+0x1e/0x40\n __kasan_kmalloc+0x81/0xa0\n do_blk_trace_setup+0xcb/0x410\n __blk_trace_setup+0xac/0x130\n blk_trace_ioctl+0xe9/0x1c0\n blkdev_ioctl+0xf1/0x390\n __x64_sys_ioctl+0xa5/0xe0\n do_syscall_64+0x35/0x80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFreed by task 1050:\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x21/0x30\n kasan_set_free_info+0x20/0x30\n __kasan_slab_free+0x103/0x180\n kfree+0x9a/0x4c0\n __blk_trace_remove+0x53/0x70\n blk_trace_ioctl+0x199/0x1c0\n blkdev_common_ioctl+0x5e9/0xb30\n blkdev_ioctl+0x1a5/0x390\n __x64_sys_ioctl+0xa5/0xe0\n do_syscall_64+0x35/0x80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThe buggy address belongs to the object at ffff88816912f380\n which belongs to the cache kmalloc-96 of size 96\nThe buggy address is located 88 bytes inside of\n 96-byte region [ffff88816912f380, ffff88816912f3e0)\nThe buggy address belongs to the page:\npage:000000009a1b4e7c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0f\nflags: 0x17ffffc0000200(slab|node=0|zone=2|lastcpupid=0x1fffff)\nraw: 0017ffffc0000200 ffffea00044f1100 dead000000000002 ffff88810004c780\nraw: 0000000000000000 0000000000200020 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff88816912f280: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n ffff88816912f300: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n\u003effff88816912f380: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n                                                    ^\n ffff88816912f400: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n ffff88816912f480: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n==================================================================",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48914",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/netfront: destroy queues before real_num_tx_queues is zeroed\n\nxennet_destroy_queues() relies on info-\u003enetdev-\u003ereal_num_tx_queues to\ndelete queues. Since d7dac083414eb5bb99a6d2ed53dc2c1b405224e5\n(\"net-sysfs: update the queue counts in the unregistration path\"),\nunregister_netdev() indirectly sets real_num_tx_queues to 0. Those two\nfacts together means, that xennet_destroy_queues() called from\nxennet_remove() cannot do its job, because it's called after\nunregister_netdev(). This results in kfree-ing queues that are still\nlinked in napi, which ultimately crashes:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    #PF: supervisor read access in kernel mode\n    #PF: error_code(0x0000) - not-present page\n    PGD 0 P4D 0\n    Oops: 0000 [#1] PREEMPT SMP PTI\n    CPU: 1 PID: 52 Comm: xenwatch Tainted: G        W         5.16.10-1.32.fc32.qubes.x86_64+ #226\n    RIP: 0010:free_netdev+0xa3/0x1a0\n    Code: ff 48 89 df e8 2e e9 00 00 48 8b 43 50 48 8b 08 48 8d b8 a0 fe ff ff 48 8d a9 a0 fe ff ff 49 39 c4 75 26 eb 47 e8 ed c1 66 ff \u003c48\u003e 8b 85 60 01 00 00 48 8d 95 60 01 00 00 48 89 ef 48 2d 60 01 00\n    RSP: 0000:ffffc90000bcfd00 EFLAGS: 00010286\n    RAX: 0000000000000000 RBX: ffff88800edad000 RCX: 0000000000000000\n    RDX: 0000000000000001 RSI: ffffc90000bcfc30 RDI: 00000000ffffffff\n    RBP: fffffffffffffea0 R08: 0000000000000000 R09: 0000000000000000\n    R10: 0000000000000000 R11: 0000000000000001 R12: ffff88800edad050\n    R13: ffff8880065f8f88 R14: 0000000000000000 R15: ffff8880066c6680\n    FS:  0000000000000000(0000) GS:ffff8880f3300000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 0000000000000000 CR3: 00000000e998c006 CR4: 00000000003706e0\n    Call Trace:\n     \u003cTASK\u003e\n     xennet_remove+0x13d/0x300 [xen_netfront]\n     xenbus_dev_remove+0x6d/0xf0\n     __device_release_driver+0x17a/0x240\n     device_release_driver+0x24/0x30\n     bus_remove_device+0xd8/0x140\n     device_del+0x18b/0x410\n     ? _raw_spin_unlock+0x16/0x30\n     ? klist_iter_exit+0x14/0x20\n     ? xenbus_dev_request_and_reply+0x80/0x80\n     device_unregister+0x13/0x60\n     xenbus_dev_changed+0x18e/0x1f0\n     xenwatch_thread+0xc0/0x1a0\n     ? do_wait_intr_irq+0xa0/0xa0\n     kthread+0x16b/0x190\n     ? set_kthread_struct+0x40/0x40\n     ret_from_fork+0x22/0x30\n     \u003c/TASK\u003e\n\nFix this by calling xennet_destroy_queues() from xennet_uninit(),\nwhen real_num_tx_queues is still available. This ensures that queues are\ndestroyed when real_num_tx_queues is set to 0, regardless of how\nunregister_netdev() was called.\n\nOriginally reported at\nhttps://github.com/QubesOS/qubes-issues/issues/7257",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: core: Fix TZ_GET_TRIP NULL pointer dereference\n\nDo not call get_trip_hyst() from thermal_genl_cmd_tz_get_trip() if\nthe thermal zone does not define one.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48916",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix double list_add when enabling VMD in scalable mode\n\nWhen enabling VMD and IOMMU scalable mode, the following kernel panic\ncall trace/kernel log is shown in Eagle Stream platform (Sapphire Rapids\nCPU) during booting:\n\npci 0000:59:00.5: Adding to iommu group 42\n...\nvmd 0000:59:00.5: PCI host bridge to bus 10000:80\npci 10000:80:01.0: [8086:352a] type 01 class 0x060400\npci 10000:80:01.0: reg 0x10: [mem 0x00000000-0x0001ffff 64bit]\npci 10000:80:01.0: enabling Extended Tags\npci 10000:80:01.0: PME# supported from D0 D3hot D3cold\npci 10000:80:01.0: DMAR: Setup RID2PASID failed\npci 10000:80:01.0: Failed to add to iommu group 42: -16\npci 10000:80:03.0: [8086:352b] type 01 class 0x060400\npci 10000:80:03.0: reg 0x10: [mem 0x00000000-0x0001ffff 64bit]\npci 10000:80:03.0: enabling Extended Tags\npci 10000:80:03.0: PME# supported from D0 D3hot D3cold\n------------[ cut here ]------------\nkernel BUG at lib/list_debug.c:29!\ninvalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 0 PID: 7 Comm: kworker/0:1 Not tainted 5.17.0-rc3+ #7\nHardware name: Lenovo ThinkSystem SR650V3/SB27A86647, BIOS ESE101Y-1.00 01/13/2022\nWorkqueue: events work_for_cpu_fn\nRIP: 0010:__list_add_valid.cold+0x26/0x3f\nCode: 9a 4a ab ff 4c 89 c1 48 c7 c7 40 0c d9 9e e8 b9 b1 fe ff 0f\n      0b 48 89 f2 4c 89 c1 48 89 fe 48 c7 c7 f0 0c d9 9e e8 a2 b1\n      fe ff \u003c0f\u003e 0b 48 89 d1 4c 89 c6 4c 89 ca 48 c7 c7 98 0c d9\n      9e e8 8b b1 fe\nRSP: 0000:ff5ad434865b3a40 EFLAGS: 00010246\nRAX: 0000000000000058 RBX: ff4d61160b74b880 RCX: ff4d61255e1fffa8\nRDX: 0000000000000000 RSI: 00000000fffeffff RDI: ffffffff9fd34f20\nRBP: ff4d611d8e245c00 R08: 0000000000000000 R09: ff5ad434865b3888\nR10: ff5ad434865b3880 R11: ff4d61257fdc6fe8 R12: ff4d61160b74b8a0\nR13: ff4d61160b74b8a0 R14: ff4d611d8e245c10 R15: ff4d611d8001ba70\nFS:  0000000000000000(0000) GS:ff4d611d5ea00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ff4d611fa1401000 CR3: 0000000aa0210001 CR4: 0000000000771ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n intel_pasid_alloc_table+0x9c/0x1d0\n dmar_insert_one_dev_info+0x423/0x540\n ? device_to_iommu+0x12d/0x2f0\n intel_iommu_attach_device+0x116/0x290\n __iommu_attach_device+0x1a/0x90\n iommu_group_add_device+0x190/0x2c0\n __iommu_probe_device+0x13e/0x250\n iommu_probe_device+0x24/0x150\n iommu_bus_notifier+0x69/0x90\n blocking_notifier_call_chain+0x5a/0x80\n device_add+0x3db/0x7b0\n ? arch_memremap_can_ram_remap+0x19/0x50\n ? memremap+0x75/0x140\n pci_device_add+0x193/0x1d0\n pci_scan_single_device+0xb9/0xf0\n pci_scan_slot+0x4c/0x110\n pci_scan_child_bus_extend+0x3a/0x290\n vmd_enable_domain.constprop.0+0x63e/0x820\n vmd_probe+0x163/0x190\n local_pci_probe+0x42/0x80\n work_for_cpu_fn+0x13/0x20\n process_one_work+0x1e2/0x3b0\n worker_thread+0x1c4/0x3a0\n ? rescuer_thread+0x370/0x370\n kthread+0xc7/0xf0\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30\n \u003c/TASK\u003e\nModules linked in:\n---[ end trace 0000000000000000 ]---\n...\nKernel panic - not syncing: Fatal exception\nKernel Offset: 0x1ca00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)\n---[ end Kernel panic - not syncing: Fatal exception ]---\n\nThe following 'lspci' output shows devices '10000:80:*' are subdevices of\nthe VMD device 0000:59:00.5:\n\n  $ lspci\n  ...\n  0000:59:00.5 RAID bus controller: Intel Corporation Volume Management Device NVMe RAID Controller (rev 20)\n  ...\n  10000:80:01.0 PCI bridge: Intel Corporation Device 352a (rev 03)\n  10000:80:03.0 PCI bridge: Intel Corporation Device 352b (rev 03)\n  10000:80:05.0 PCI bridge: Intel Corporation Device 352c (rev 03)\n  10000:80:07.0 PCI bridge: Intel Corporation Device 352d (rev 03)\n  10000:81:00.0 Non-Volatile memory controller: Intel Corporation NVMe Datacenter SSD [3DNAND, Beta Rock Controller]\n  10000:82:00\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48917",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48918",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niwlwifi: mvm: check debugfs_dir ptr before use\n\nWhen \"debugfs=off\" is used on the kernel command line, iwiwifi's\nmvm module uses an invalid/unchecked debugfs_dir pointer and causes\na BUG:\n\n BUG: kernel NULL pointer dereference, address: 000000000000004f\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP\n CPU: 1 PID: 503 Comm: modprobe Tainted: G        W         5.17.0-rc5 #7\n Hardware name: Dell Inc. Inspiron 15 5510/076F7Y, BIOS 2.4.1 11/05/2021\n RIP: 0010:iwl_mvm_dbgfs_register+0x692/0x700 [iwlmvm]\n Code: 69 a0 be 80 01 00 00 48 c7 c7 50 73 6a a0 e8 95 cf ee e0 48 8b 83 b0 1e 00 00 48 c7 c2 54 73 6a a0 be 64 00 00 00 48 8d 7d 8c \u003c48\u003e 8b 48 50 e8 15 22 07 e1 48 8b 43 28 48 8d 55 8c 48 c7 c7 5f 73\n RSP: 0018:ffffc90000a0ba68 EFLAGS: 00010246\n RAX: ffffffffffffffff RBX: ffff88817d6e3328 RCX: ffff88817d6e3328\n RDX: ffffffffa06a7354 RSI: 0000000000000064 RDI: ffffc90000a0ba6c\n RBP: ffffc90000a0bae0 R08: ffffffff824e4880 R09: ffffffffa069d620\n R10: ffffc90000a0ba00 R11: ffffffffffffffff R12: 0000000000000000\n R13: ffffc90000a0bb28 R14: ffff88817d6e3328 R15: ffff88817d6e3320\n FS:  00007f64dd92d740(0000) GS:ffff88847f640000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000000000000004f CR3: 000000016fc79001 CR4: 0000000000770ee0\n PKRU: 55555554\n Call Trace:\n  \u003cTASK\u003e\n  ? iwl_mvm_mac_setup_register+0xbdc/0xda0 [iwlmvm]\n  iwl_mvm_start_post_nvm+0x71/0x100 [iwlmvm]\n  iwl_op_mode_mvm_start+0xab8/0xb30 [iwlmvm]\n  _iwl_op_mode_start+0x6f/0xd0 [iwlwifi]\n  iwl_opmode_register+0x6a/0xe0 [iwlwifi]\n  ? 0xffffffffa0231000\n  iwl_mvm_init+0x35/0x1000 [iwlmvm]\n  ? 0xffffffffa0231000\n  do_one_initcall+0x5a/0x1b0\n  ? kmem_cache_alloc+0x1e5/0x2f0\n  ? do_init_module+0x1e/0x220\n  do_init_module+0x48/0x220\n  load_module+0x2602/0x2bc0\n  ? __kernel_read+0x145/0x2e0\n  ? kernel_read_file+0x229/0x290\n  __do_sys_finit_module+0xc5/0x130\n  ? __do_sys_finit_module+0xc5/0x130\n  __x64_sys_finit_module+0x13/0x20\n  do_syscall_64+0x38/0x90\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n RIP: 0033:0x7f64dda564dd\n Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d 1b 29 0f 00 f7 d8 64 89 01 48\n RSP: 002b:00007ffdba393f88 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\n RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f64dda564dd\n RDX: 0000000000000000 RSI: 00005575399e2ab2 RDI: 0000000000000001\n RBP: 000055753a91c5e0 R08: 0000000000000000 R09: 0000000000000002\n R10: 0000000000000001 R11: 0000000000000246 R12: 00005575399e2ab2\n R13: 000055753a91ceb0 R14: 0000000000000000 R15: 000055753a923018\n  \u003c/TASK\u003e\n Modules linked in: btintel(+) btmtk bluetooth vfat snd_hda_codec_hdmi fat snd_hda_codec_realtek snd_hda_codec_generic iwlmvm(+) snd_sof_pci_intel_tgl mac80211 snd_sof_intel_hda_common soundwire_intel soundwire_generic_allocation soundwire_cadence soundwire_bus snd_sof_intel_hda snd_sof_pci snd_sof snd_sof_xtensa_dsp snd_soc_hdac_hda snd_hda_ext_core snd_soc_acpi_intel_match snd_soc_acpi snd_soc_core btrfs snd_compress snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_hda_codec raid6_pq iwlwifi snd_hda_core snd_pcm snd_timer snd soundcore cfg80211 intel_ish_ipc(+) thunderbolt rfkill intel_ishtp ucsi_acpi wmi i2c_hid_acpi i2c_hid evdev\n CR2: 000000000000004f\n ---[ end trace 0000000000000000 ]---\n\nCheck the debugfs_dir pointer for an error before using it.\n\n[change to make both conditional]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix double free race when mount fails in cifs_get_root()\n\nWhen cifs_get_root() fails during cifs_smb3_do_mount() we call\ndeactivate_locked_super() which eventually will call delayed_free() which\nwill free the context.\nIn this situation we should not proceed to enter the out: section in\ncifs_smb3_do_mount() and free the same resources a second time.\n\n[Thu Feb 10 12:59:06 2022] BUG: KASAN: use-after-free in rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022] Read of size 8 at addr ffff888364f4d110 by task swapper/1/0\n\n[Thu Feb 10 12:59:06 2022] CPU: 1 PID: 0 Comm: swapper/1 Tainted: G           OE     5.17.0-rc3+ #4\n[Thu Feb 10 12:59:06 2022] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.0 12/17/2019\n[Thu Feb 10 12:59:06 2022] Call Trace:\n[Thu Feb 10 12:59:06 2022]  \u003cIRQ\u003e\n[Thu Feb 10 12:59:06 2022]  dump_stack_lvl+0x5d/0x78\n[Thu Feb 10 12:59:06 2022]  print_address_description.constprop.0+0x24/0x150\n[Thu Feb 10 12:59:06 2022]  ? rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022]  kasan_report.cold+0x7d/0x117\n[Thu Feb 10 12:59:06 2022]  ? rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022]  __asan_load8+0x86/0xa0\n[Thu Feb 10 12:59:06 2022]  rcu_cblist_dequeue+0x32/0x60\n[Thu Feb 10 12:59:06 2022]  rcu_core+0x547/0xca0\n[Thu Feb 10 12:59:06 2022]  ? call_rcu+0x3c0/0x3c0\n[Thu Feb 10 12:59:06 2022]  ? __this_cpu_preempt_check+0x13/0x20\n[Thu Feb 10 12:59:06 2022]  ? lock_is_held_type+0xea/0x140\n[Thu Feb 10 12:59:06 2022]  rcu_core_si+0xe/0x10\n[Thu Feb 10 12:59:06 2022]  __do_softirq+0x1d4/0x67b\n[Thu Feb 10 12:59:06 2022]  __irq_exit_rcu+0x100/0x150\n[Thu Feb 10 12:59:06 2022]  irq_exit_rcu+0xe/0x30\n[Thu Feb 10 12:59:06 2022]  sysvec_hyperv_stimer0+0x9d/0xc0\n...\n[Thu Feb 10 12:59:07 2022] Freed by task 58179:\n[Thu Feb 10 12:59:07 2022]  kasan_save_stack+0x26/0x50\n[Thu Feb 10 12:59:07 2022]  kasan_set_track+0x25/0x30\n[Thu Feb 10 12:59:07 2022]  kasan_set_free_info+0x24/0x40\n[Thu Feb 10 12:59:07 2022]  ____kasan_slab_free+0x137/0x170\n[Thu Feb 10 12:59:07 2022]  __kasan_slab_free+0x12/0x20\n[Thu Feb 10 12:59:07 2022]  slab_free_freelist_hook+0xb3/0x1d0\n[Thu Feb 10 12:59:07 2022]  kfree+0xcd/0x520\n[Thu Feb 10 12:59:07 2022]  cifs_smb3_do_mount+0x149/0xbe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  smb3_get_tree+0x1a0/0x2e0 [cifs]\n[Thu Feb 10 12:59:07 2022]  vfs_get_tree+0x52/0x140\n[Thu Feb 10 12:59:07 2022]  path_mount+0x635/0x10c0\n[Thu Feb 10 12:59:07 2022]  __x64_sys_mount+0x1bf/0x210\n[Thu Feb 10 12:59:07 2022]  do_syscall_64+0x5c/0xc0\n[Thu Feb 10 12:59:07 2022]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\n[Thu Feb 10 12:59:07 2022] Last potentially related work creation:\n[Thu Feb 10 12:59:07 2022]  kasan_save_stack+0x26/0x50\n[Thu Feb 10 12:59:07 2022]  __kasan_record_aux_stack+0xb6/0xc0\n[Thu Feb 10 12:59:07 2022]  kasan_record_aux_stack_noalloc+0xb/0x10\n[Thu Feb 10 12:59:07 2022]  call_rcu+0x76/0x3c0\n[Thu Feb 10 12:59:07 2022]  cifs_umount+0xce/0xe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  cifs_kill_sb+0xc8/0xe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  deactivate_locked_super+0x5d/0xd0\n[Thu Feb 10 12:59:07 2022]  cifs_smb3_do_mount+0xab9/0xbe0 [cifs]\n[Thu Feb 10 12:59:07 2022]  smb3_get_tree+0x1a0/0x2e0 [cifs]\n[Thu Feb 10 12:59:07 2022]  vfs_get_tree+0x52/0x140\n[Thu Feb 10 12:59:07 2022]  path_mount+0x635/0x10c0\n[Thu Feb 10 12:59:07 2022]  __x64_sys_mount+0x1bf/0x210\n[Thu Feb 10 12:59:07 2022]  do_syscall_64+0x5c/0xc0\n[Thu Feb 10 12:59:07 2022]  entry_SYSCALL_64_after_hwframe+0x44/0xae",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/fair: Fix fault in reweight_entity\n\nSyzbot found a GPF in reweight_entity. This has been bisected to\ncommit 4ef0c5c6b5ba (\"kernel/sched: Fix sched_fork() access an invalid\nsched_task_group\")\n\nThere  is a race between sched_post_fork() and setpriority(PRIO_PGRP)\nwithin a thread group that causes a null-ptr-deref  in\nreweight_entity() in CFS. The scenario is that the main process spawns\nnumber of new threads, which then call setpriority(PRIO_PGRP, 0, -20),\nwait, and exit.  For each of the new threads the copy_process() gets\ninvoked, which adds the new task_struct and calls sched_post_fork()\nfor it.\n\nIn the above scenario there is a possibility that\nsetpriority(PRIO_PGRP) and set_one_prio() will be called for a thread\nin the group that is just being created by copy_process(), and for\nwhich the sched_post_fork() has not been executed yet. This will\ntrigger a null pointer dereference in reweight_entity(),  as it will\ntry to access the run queue pointer, which hasn't been set.\n\nBefore the mentioned change the cfs_rq pointer for the task  has been\nset in sched_fork(), which is called much earlier in copy_process(),\nbefore the new task is added to the thread_group.  Now it is done in\nthe sched_post_fork(), which is called after that.  To fix the issue\nthe remove the update_load param from the update_load param() function\nand call reweight_task() only if the task flag doesn't have the\nTASK_NEW flag set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: prevent copying too big compressed lzo segment\n\nCompressed length can be corrupted to be a lot larger than memory\nwe have allocated for buffer.\nThis will cause memcpy in copy_compressed_segment to write outside\nof allocated memory.\n\nThis mostly results in stuck read syscall but sometimes when using\nbtrfs send can get #GP\n\n  kernel: general protection fault, probably for non-canonical address 0x841551d5c1000: 0000 [#1] PREEMPT SMP NOPTI\n  kernel: CPU: 17 PID: 264 Comm: kworker/u256:7 Tainted: P           OE     5.17.0-rc2-1 #12\n  kernel: Workqueue: btrfs-endio btrfs_work_helper [btrfs]\n  kernel: RIP: 0010:lzo_decompress_bio (./include/linux/fortify-string.h:225 fs/btrfs/lzo.c:322 fs/btrfs/lzo.c:394) btrfs\n  Code starting with the faulting instruction\n  ===========================================\n     0:*  48 8b 06                mov    (%rsi),%rax              \u003c-- trapping instruction\n     3:   48 8d 79 08             lea    0x8(%rcx),%rdi\n     7:   48 83 e7 f8             and    $0xfffffffffffffff8,%rdi\n     b:   48 89 01                mov    %rax,(%rcx)\n     e:   44 89 f0                mov    %r14d,%eax\n    11:   48 8b 54 06 f8          mov    -0x8(%rsi,%rax,1),%rdx\n  kernel: RSP: 0018:ffffb110812efd50 EFLAGS: 00010212\n  kernel: RAX: 0000000000001000 RBX: 000000009ca264c8 RCX: ffff98996e6d8ff8\n  kernel: RDX: 0000000000000064 RSI: 000841551d5c1000 RDI: ffffffff9500435d\n  kernel: RBP: ffff989a3be856c0 R08: 0000000000000000 R09: 0000000000000000\n  kernel: R10: 0000000000000000 R11: 0000000000001000 R12: ffff98996e6d8000\n  kernel: R13: 0000000000000008 R14: 0000000000001000 R15: 000841551d5c1000\n  kernel: FS:  0000000000000000(0000) GS:ffff98a09d640000(0000) knlGS:0000000000000000\n  kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  kernel: CR2: 00001e9f984d9ea8 CR3: 000000014971a000 CR4: 00000000003506e0\n  kernel: Call Trace:\n  kernel:  \u003cTASK\u003e\n  kernel: end_compressed_bio_read (fs/btrfs/compression.c:104 fs/btrfs/compression.c:1363 fs/btrfs/compression.c:323) btrfs\n  kernel: end_workqueue_fn (fs/btrfs/disk-io.c:1923) btrfs\n  kernel: btrfs_work_helper (fs/btrfs/async-thread.c:326) btrfs\n  kernel: process_one_work (./arch/x86/include/asm/jump_label.h:27 ./include/linux/jump_label.h:212 ./include/trace/events/workqueue.h:108 kernel/workqueue.c:2312)\n  kernel: worker_thread (./include/linux/list.h:292 kernel/workqueue.c:2455)\n  kernel: ? process_one_work (kernel/workqueue.c:2397)\n  kernel: kthread (kernel/kthread.c:377)\n  kernel: ? kthread_complete_and_exit (kernel/kthread.c:332)\n  kernel: ret_from_fork (arch/x86/entry/entry_64.S:301)\n  kernel:  \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: int340x: fix memory leak in int3400_notify()\n\nIt is easy to hit the below memory leaks in my TigerLake platform:\n\nunreferenced object 0xffff927c8b91dbc0 (size 32):\n  comm \"kworker/0:2\", pid 112, jiffies 4294893323 (age 83.604s)\n  hex dump (first 32 bytes):\n    4e 41 4d 45 3d 49 4e 54 33 34 30 30 20 54 68 65  NAME=INT3400 The\n    72 6d 61 6c 00 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b a5  rmal.kkkkkkkkkk.\n  backtrace:\n    [\u003cffffffff9c502c3e\u003e] __kmalloc_track_caller+0x2fe/0x4a0\n    [\u003cffffffff9c7b7c15\u003e] kvasprintf+0x65/0xd0\n    [\u003cffffffff9c7b7d6e\u003e] kasprintf+0x4e/0x70\n    [\u003cffffffffc04cb662\u003e] int3400_notify+0x82/0x120 [int3400_thermal]\n    [\u003cffffffff9c8b7358\u003e] acpi_ev_notify_dispatch+0x54/0x71\n    [\u003cffffffff9c88f1a7\u003e] acpi_os_execute_deferred+0x17/0x30\n    [\u003cffffffff9c2c2c0a\u003e] process_one_work+0x21a/0x3f0\n    [\u003cffffffff9c2c2e2a\u003e] worker_thread+0x4a/0x3b0\n    [\u003cffffffff9c2cb4dd\u003e] kthread+0xfd/0x130\n    [\u003cffffffff9c201c1f\u003e] ret_from_fork+0x1f/0x30\n\nFix it by calling kfree() accordingly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Do not change route.addr.src_addr outside state checks\n\nIf the state is not idle then resolve_prepare_src() should immediately\nfail and no change to global state should happen. However, it\nunconditionally overwrites the src_addr trying to build a temporary any\naddress.\n\nFor instance if the state is already RDMA_CM_LISTEN then this will corrupt\nthe src_addr and would cause the test in cma_cancel_operation():\n\n           if (cma_any_addr(cma_src_addr(id_priv)) \u0026\u0026 !id_priv-\u003ecma_dev)\n\nWhich would manifest as this trace from syzkaller:\n\n  BUG: KASAN: use-after-free in __list_add_valid+0x93/0xa0 lib/list_debug.c:26\n  Read of size 8 at addr ffff8881546491e0 by task syz-executor.1/32204\n\n  CPU: 1 PID: 32204 Comm: syz-executor.1 Not tainted 5.12.0-rc8-syzkaller #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\n  Call Trace:\n   __dump_stack lib/dump_stack.c:79 [inline]\n   dump_stack+0x141/0x1d7 lib/dump_stack.c:120\n   print_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:232\n   __kasan_report mm/kasan/report.c:399 [inline]\n   kasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416\n   __list_add_valid+0x93/0xa0 lib/list_debug.c:26\n   __list_add include/linux/list.h:67 [inline]\n   list_add_tail include/linux/list.h:100 [inline]\n   cma_listen_on_all drivers/infiniband/core/cma.c:2557 [inline]\n   rdma_listen+0x787/0xe00 drivers/infiniband/core/cma.c:3751\n   ucma_listen+0x16a/0x210 drivers/infiniband/core/ucma.c:1102\n   ucma_write+0x259/0x350 drivers/infiniband/core/ucma.c:1732\n   vfs_write+0x28e/0xa30 fs/read_write.c:603\n   ksys_write+0x1ee/0x250 fs/read_write.c:658\n   do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThis is indicating that an rdma_id_private was destroyed without doing\ncma_cancel_listens().\n\nInstead of trying to re-use the src_addr memory to indirectly create an\nany address derived from the dst build one explicitly on the stack and\nbind to that as any other normal flow would do. rdma_bind_addr() will copy\nit over the src_addr once it knows the state is valid.\n\nThis is similar to commit bc0bdc5afaa7 (\"RDMA/cma: Do not change\nroute.addr.src_addr.ss_family\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48926",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: rndis: add spinlock for rndis response list\n\nThere's no lock for rndis response list. It could cause list corruption\nif there're two different list_add at the same time like below.\nIt's better to add in rndis_add_response / rndis_free_response\n/ rndis_get_next_response to prevent any race condition on response list.\n\n[  361.894299] [1:   irq/191-dwc3:16979] list_add corruption.\nnext-\u003eprev should be prev (ffffff80651764d0),\nbut was ffffff883dc36f80. (next=ffffff80651764d0).\n\n[  361.904380] [1:   irq/191-dwc3:16979] Call trace:\n[  361.904391] [1:   irq/191-dwc3:16979]  __list_add_valid+0x74/0x90\n[  361.904401] [1:   irq/191-dwc3:16979]  rndis_msg_parser+0x168/0x8c0\n[  361.904409] [1:   irq/191-dwc3:16979]  rndis_command_complete+0x24/0x84\n[  361.904417] [1:   irq/191-dwc3:16979]  usb_gadget_giveback_request+0x20/0xe4\n[  361.904426] [1:   irq/191-dwc3:16979]  dwc3_gadget_giveback+0x44/0x60\n[  361.904434] [1:   irq/191-dwc3:16979]  dwc3_ep0_complete_data+0x1e8/0x3a0\n[  361.904442] [1:   irq/191-dwc3:16979]  dwc3_ep0_interrupt+0x29c/0x3dc\n[  361.904450] [1:   irq/191-dwc3:16979]  dwc3_process_event_entry+0x78/0x6cc\n[  361.904457] [1:   irq/191-dwc3:16979]  dwc3_process_event_buf+0xa0/0x1ec\n[  361.904465] [1:   irq/191-dwc3:16979]  dwc3_thread_interrupt+0x34/0x5c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: tsc2046: fix memory corruption by preventing array overflow\n\nOn one side we have indio_dev-\u003enum_channels includes all physical channels +\ntimestamp channel. On other side we have an array allocated only for\nphysical channels. So, fix memory corruption by ARRAY_SIZE() instead of\nnum_channels variable.\n\nNote the first case is a cleanup rather than a fix as the software\ntimestamp channel bit in active_scanmask is never set by the IIO core.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: men_z188_adc: Fix a resource leak in an error handling path\n\nIf iio_device_register() fails, a previous ioremap() is left unbalanced.\n\nUpdate the error handling path and add the missing iounmap() call, as\nalready done in the remove function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/ib_srp: Fix a deadlock\n\nRemove the flush_workqueue(system_long_wq) call since flushing\nsystem_long_wq is deadlock-prone and since that call is redundant with a\npreceding cancel_work_sync()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nconfigfs: fix a race in configfs_{,un}register_subsystem()\n\nWhen configfs_register_subsystem() or configfs_unregister_subsystem()\nis executing link_group() or unlink_group(),\nit is possible that two processes add or delete list concurrently.\nSome unfortunate interleavings of them can cause kernel panic.\n\nOne of cases is:\nA --\u003e B --\u003e C --\u003e D\nA \u003c-- B \u003c-- C \u003c-- D\n\n     delete list_head *B        |      delete list_head *C\n--------------------------------|-----------------------------------\nconfigfs_unregister_subsystem   |   configfs_unregister_subsystem\n  unlink_group                  |     unlink_group\n    unlink_obj                  |       unlink_obj\n      list_del_init             |         list_del_init\n        __list_del_entry        |           __list_del_entry\n          __list_del            |             __list_del\n            // next == C        |\n            next-\u003eprev = prev   |\n                                |               next-\u003eprev = prev\n            prev-\u003enext = next   |\n                                |                 // prev == B\n                                |                 prev-\u003enext = next\n\nFix this by adding mutex when calling link_group() or unlink_group(),\nbut parent configfs_subsystem is NULL when config_item is root.\nSo I create a mutex configfs_subsystem_mutex.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: DR, Fix slab-out-of-bounds in mlx5_cmd_dr_create_fte\n\nWhen adding a rule with 32 destinations, we hit the following out-of-band\naccess issue:\n\n  BUG: KASAN: slab-out-of-bounds in mlx5_cmd_dr_create_fte+0x18ee/0x1e70\n\nThis patch fixes the issue by both increasing the allocated buffers to\naccommodate for the needed actions and by checking the number of actions\nto prevent this issue when a rule with too many actions is provided.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfp: flower: Fix a potential leak in nfp_tunnel_add_shared_mac()\n\nida_simple_get() returns an id between min (0) and max (NFP_MAX_MAC_INDEX)\ninclusive.\nSo NFP_MAX_MAC_INDEX (0xff) is a valid id.\n\nIn order for the error handling path to work correctly, the 'invalid'\nvalue for 'ida_idx' should not be in the 0..NFP_MAX_MAC_INDEX range,\ninclusive.\n\nSo set it to -1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: unregister flowtable hooks on netns exit\n\nUnregister flowtable hooks before they are releases via\nnf_tables_flowtable_destroy() otherwise hook core reports UAF.\n\nBUG: KASAN: use-after-free in nf_hook_entries_grow+0x5a7/0x700 net/netfilter/core.c:142 net/netfilter/core.c:142\nRead of size 4 at addr ffff8880736f7438 by task syz-executor579/3666\n\nCPU: 0 PID: 3666 Comm: syz-executor579 Not tainted 5.16.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n __dump_stack lib/dump_stack.c:88 [inline] lib/dump_stack.c:106\n dump_stack_lvl+0x1dc/0x2d8 lib/dump_stack.c:106 lib/dump_stack.c:106\n print_address_description+0x65/0x380 mm/kasan/report.c:247 mm/kasan/report.c:247\n __kasan_report mm/kasan/report.c:433 [inline]\n __kasan_report mm/kasan/report.c:433 [inline] mm/kasan/report.c:450\n kasan_report+0x19a/0x1f0 mm/kasan/report.c:450 mm/kasan/report.c:450\n nf_hook_entries_grow+0x5a7/0x700 net/netfilter/core.c:142 net/netfilter/core.c:142\n __nf_register_net_hook+0x27e/0x8d0 net/netfilter/core.c:429 net/netfilter/core.c:429\n nf_register_net_hook+0xaa/0x180 net/netfilter/core.c:571 net/netfilter/core.c:571\n nft_register_flowtable_net_hooks+0x3c5/0x730 net/netfilter/nf_tables_api.c:7232 net/netfilter/nf_tables_api.c:7232\n nf_tables_newflowtable+0x2022/0x2cf0 net/netfilter/nf_tables_api.c:7430 net/netfilter/nf_tables_api.c:7430\n nfnetlink_rcv_batch net/netfilter/nfnetlink.c:513 [inline]\n nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:634 [inline]\n nfnetlink_rcv_batch net/netfilter/nfnetlink.c:513 [inline] net/netfilter/nfnetlink.c:652\n nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:634 [inline] net/netfilter/nfnetlink.c:652\n nfnetlink_rcv+0x10e6/0x2550 net/netfilter/nfnetlink.c:652 net/netfilter/nfnetlink.c:652\n\n__nft_release_hook() calls nft_unregister_flowtable_net_hooks() which\nonly unregisters the hooks, then after RCU grace period, it is\nguaranteed that no packets add new entries to the flowtable (no flow\noffload rules and flowtable hooks are reachable from packet path), so it\nis safe to call nf_flow_table_free() which cleans up the remaining\nentries from the flowtable (both software and hardware) and it unbinds\nthe flow_block.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: add a schedule point in io_add_buffers()\n\nLooping ~65535 times doing kmalloc() calls can trigger soft lockups,\nespecially with DEBUG features (like KASAN).\n\n[  253.536212] watchdog: BUG: soft lockup - CPU#64 stuck for 26s! [b219417889:12575]\n[  253.544433] Modules linked in: vfat fat i2c_mux_pca954x i2c_mux spidev cdc_acm xhci_pci xhci_hcd sha3_generic gq(O)\n[  253.544451] CPU: 64 PID: 12575 Comm: b219417889 Tainted: G S         O      5.17.0-smp-DEV #801\n[  253.544457] RIP: 0010:kernel_text_address (./include/asm-generic/sections.h:192 ./include/linux/kallsyms.h:29 kernel/extable.c:67 kernel/extable.c:98)\n[  253.544464] Code: 0f 93 c0 48 c7 c1 e0 63 d7 a4 48 39 cb 0f 92 c1 20 c1 0f b6 c1 5b 5d c3 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 53 48 89 fb \u003c48\u003e c7 c0 00 00 80 a0 41 be 01 00 00 00 48 39 c7 72 0c 48 c7 c0 40\n[  253.544468] RSP: 0018:ffff8882d8baf4c0 EFLAGS: 00000246\n[  253.544471] RAX: 1ffff1105b175e00 RBX: ffffffffa13ef09a RCX: 00000000a13ef001\n[  253.544474] RDX: ffffffffa13ef09a RSI: ffff8882d8baf558 RDI: ffffffffa13ef09a\n[  253.544476] RBP: ffff8882d8baf4d8 R08: ffff8882d8baf5e0 R09: 0000000000000004\n[  253.544479] R10: ffff8882d8baf5e8 R11: ffffffffa0d59a50 R12: ffff8882eab20380\n[  253.544481] R13: ffffffffa0d59a50 R14: dffffc0000000000 R15: 1ffff1105b175eb0\n[  253.544483] FS:  00000000016d3380(0000) GS:ffff88af48c00000(0000) knlGS:0000000000000000\n[  253.544486] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  253.544488] CR2: 00000000004af0f0 CR3: 00000002eabfa004 CR4: 00000000003706e0\n[  253.544491] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  253.544492] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  253.544494] Call Trace:\n[  253.544496]  \u003cTASK\u003e\n[  253.544498] ? io_queue_sqe (fs/io_uring.c:7143)\n[  253.544505] __kernel_text_address (kernel/extable.c:78)\n[  253.544508] unwind_get_return_address (arch/x86/kernel/unwind_frame.c:19)\n[  253.544514] arch_stack_walk (arch/x86/kernel/stacktrace.c:27)\n[  253.544517] ? io_queue_sqe (fs/io_uring.c:7143)\n[  253.544521] stack_trace_save (kernel/stacktrace.c:123)\n[  253.544527] ____kasan_kmalloc (mm/kasan/common.c:39 mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:515)\n[  253.544531] ? ____kasan_kmalloc (mm/kasan/common.c:39 mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:515)\n[  253.544533] ? __kasan_kmalloc (mm/kasan/common.c:524)\n[  253.544535] ? kmem_cache_alloc_trace (./include/linux/kasan.h:270 mm/slab.c:3567)\n[  253.544541] ? io_issue_sqe (fs/io_uring.c:4556 fs/io_uring.c:4589 fs/io_uring.c:6828)\n[  253.544544] ? __io_queue_sqe (fs/io_uring.c:?)\n[  253.544551] __kasan_kmalloc (mm/kasan/common.c:524)\n[  253.544553] kmem_cache_alloc_trace (./include/linux/kasan.h:270 mm/slab.c:3567)\n[  253.544556] ? io_issue_sqe (fs/io_uring.c:4556 fs/io_uring.c:4589 fs/io_uring.c:6828)\n[  253.544560] io_issue_sqe (fs/io_uring.c:4556 fs/io_uring.c:4589 fs/io_uring.c:6828)\n[  253.544564] ? __kasan_slab_alloc (mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:469)\n[  253.544567] ? __kasan_slab_alloc (mm/kasan/common.c:39 mm/kasan/common.c:45 mm/kasan/common.c:436 mm/kasan/common.c:469)\n[  253.544569] ? kmem_cache_alloc_bulk (mm/slab.h:732 mm/slab.c:3546)\n[  253.544573] ? __io_alloc_req_refill (fs/io_uring.c:2078)\n[  253.544578] ? io_submit_sqes (fs/io_uring.c:7441)\n[  253.544581] ? __se_sys_io_uring_enter (fs/io_uring.c:10154 fs/io_uring.c:10096)\n[  253.544584] ? __x64_sys_io_uring_enter (fs/io_uring.c:10096)\n[  253.544587] ? do_syscall_64 (arch/x86/entry/common.c:50 arch/x86/entry/common.c:80)\n[  253.544590] ? entry_SYSCALL_64_after_hwframe (??:?)\n[  253.544596] __io_queue_sqe (fs/io_uring.c:?)\n[  253.544600] io_queue_sqe (fs/io_uring.c:7143)\n[  253.544603] io_submit_sqe (fs/io_uring.c:?)\n[  253.544608] io_submit_sqes (fs/io_uring.c:?)\n[  253.544612] __se_sys_io_uring_enter (fs/io_uring.c:10154 fs/io_uri\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nCDC-NCM: avoid overflow in sanity checking\n\nA broken device may give an extreme offset like 0xFFF0\nand a reasonable length for a fragment. In the sanity\ncheck as formulated now, this will create an integer\noverflow, defeating the sanity check. Both offset\nand offset + len need to be checked in such a manner\nthat no overflow can occur.\nAnd those quantities should be unsigned.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48941",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix concurrent reset and removal of VFs\n\nCommit c503e63200c6 (\"ice: Stop processing VF messages during teardown\")\nintroduced a driver state flag, ICE_VF_DEINIT_IN_PROGRESS, which is\nintended to prevent some issues with concurrently handling messages from\nVFs while tearing down the VFs.\n\nThis change was motivated by crashes caused while tearing down and\nbringing up VFs in rapid succession.\n\nIt turns out that the fix actually introduces issues with the VF driver\ncaused because the PF no longer responds to any messages sent by the VF\nduring its .remove routine. This results in the VF potentially removing\nits DMA memory before the PF has shut down the device queues.\n\nAdditionally, the fix doesn't actually resolve concurrency issues within\nthe ice driver. It is possible for a VF to initiate a reset just prior\nto the ice driver removing VFs. This can result in the remove task\nconcurrently operating while the VF is being reset. This results in\nsimilar memory corruption and panics purportedly fixed by that commit.\n\nFix this concurrency at its root by protecting both the reset and\nremoval flows using the existing VF cfg_lock. This ensures that we\ncannot remove the VF while any outstanding critical tasks such as a\nvirtchnl message or a reset are occurring.\n\nThis locking change also fixes the root cause originally fixed by commit\nc503e63200c6 (\"ice: Stop processing VF messages during teardown\"), so we\ncan simply revert it.\n\nNote that I kept these two changes together because simply reverting the\noriginal commit alone would leave the driver vulnerable to worse race\nconditions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48942",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: Handle failure to register sensor with thermal zone correctly\n\nIf an attempt is made to a sensor with a thermal zone and it fails,\nthe call to devm_thermal_zone_of_sensor_register() may return -ENODEV.\nThis may result in crashes similar to the following.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000003cd\n...\nInternal error: Oops: 96000021 [#1] PREEMPT SMP\n...\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : mutex_lock+0x18/0x60\nlr : thermal_zone_device_update+0x40/0x2e0\nsp : ffff800014c4fc60\nx29: ffff800014c4fc60 x28: ffff365ee3f6e000 x27: ffffdde218426790\nx26: ffff365ee3f6e000 x25: 0000000000000000 x24: ffff365ee3f6e000\nx23: ffffdde218426870 x22: ffff365ee3f6e000 x21: 00000000000003cd\nx20: ffff365ee8bf3308 x19: ffffffffffffffed x18: 0000000000000000\nx17: ffffdde21842689c x16: ffffdde1cb7a0b7c x15: 0000000000000040\nx14: ffffdde21a4889a0 x13: 0000000000000228 x12: 0000000000000000\nx11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\nx8 : 0000000001120000 x7 : 0000000000000001 x6 : 0000000000000000\nx5 : 0068000878e20f07 x4 : 0000000000000000 x3 : 00000000000003cd\nx2 : ffff365ee3f6e000 x1 : 0000000000000000 x0 : 00000000000003cd\nCall trace:\n mutex_lock+0x18/0x60\n hwmon_notify_event+0xfc/0x110\n 0xffffdde1cb7a0a90\n 0xffffdde1cb7a0b7c\n irq_thread_fn+0x2c/0xa0\n irq_thread+0x134/0x240\n kthread+0x178/0x190\n ret_from_fork+0x10/0x20\nCode: d503201f d503201f d2800001 aa0103e4 (c8e47c02)\n\nJon Hunter reports that the exact call sequence is:\n\nhwmon_notify_event()\n  --\u003e hwmon_thermal_notify()\n    --\u003e thermal_zone_device_update()\n      --\u003e update_temperature()\n        --\u003e mutex_lock()\n\nThe hwmon core needs to handle all errors returned from calls\nto devm_thermal_zone_of_sensor_register(). If the call fails\nwith -ENODEV, report that the sensor was not attached to a\nthermal zone  but continue to register the hwmon device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86/mmu: make apf token non-zero to fix bug\n\nIn current async pagefault logic, when a page is ready, KVM relies on\nkvm_arch_can_dequeue_async_page_present() to determine whether to deliver\na READY event to the Guest. This function test token value of struct\nkvm_vcpu_pv_apf_data, which must be reset to zero by Guest kernel when a\nREADY event is finished by Guest. If value is zero meaning that a READY\nevent is done, so the KVM can deliver another.\nBut the kvm_arch_setup_async_pf() may produce a valid token with zero\nvalue, which is confused with previous mention and may lead the loss of\nthis READY event.\n\nThis bug may cause task blocked forever in Guest:\n INFO: task stress:7532 blocked for more than 1254 seconds.\n       Not tainted 5.10.0 #16\n \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n task:stress          state:D stack:    0 pid: 7532 ppid:  1409\n flags:0x00000080\n Call Trace:\n  __schedule+0x1e7/0x650\n  schedule+0x46/0xb0\n  kvm_async_pf_task_wait_schedule+0xad/0xe0\n  ? exit_to_user_mode_prepare+0x60/0x70\n  __kvm_handle_async_pf+0x4f/0xb0\n  ? asm_exc_page_fault+0x8/0x30\n  exc_page_fault+0x6f/0x110\n  ? asm_exc_page_fault+0x8/0x30\n  asm_exc_page_fault+0x1e/0x30\n RIP: 0033:0x402d00\n RSP: 002b:00007ffd31912500 EFLAGS: 00010206\n RAX: 0000000000071000 RBX: ffffffffffffffff RCX: 00000000021a32b0\n RDX: 000000000007d011 RSI: 000000000007d000 RDI: 00000000021262b0\n RBP: 00000000021262b0 R08: 0000000000000003 R09: 0000000000000086\n R10: 00000000000000eb R11: 00007fefbdf2baa0 R12: 0000000000000000\n R13: 0000000000000002 R14: 000000000007d000 R15: 0000000000001000",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48944",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: Fix yet more sched_fork() races\n\nWhere commit 4ef0c5c6b5ba (\"kernel/sched: Fix sched_fork() access an\ninvalid sched_task_group\") fixed a fork race vs cgroup, it opened up a\nrace vs syscalls by not placing the task on the runqueue before it\ngets exposed through the pidhash.\n\nCommit 13765de8148f (\"sched/fair: Fix fault in reweight_entity\") is\ntrying to fix a single instance of this, instead fix the whole class\nof issues, effectively reverting this commit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vivid: fix compose size exceed boundary\n\nsyzkaller found a bug:\n\n BUG: unable to handle page fault for address: ffffc9000a3b1000\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 100000067 P4D 100000067 PUD 10015f067 PMD 1121ca067 PTE 0\n Oops: 0002 [#1] PREEMPT SMP\n CPU: 0 PID: 23489 Comm: vivid-000-vid-c Not tainted 6.1.0-rc1+ #512\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n RIP: 0010:memcpy_erms+0x6/0x10\n[...]\n Call Trace:\n  \u003cTASK\u003e\n  ? tpg_fill_plane_buffer+0x856/0x15b0\n  vivid_fillbuff+0x8ac/0x1110\n  vivid_thread_vid_cap_tick+0x361/0xc90\n  vivid_thread_vid_cap+0x21a/0x3a0\n  kthread+0x143/0x180\n  ret_from_fork+0x1f/0x30\n  \u003c/TASK\u003e\n\nThis is because we forget to check boundary after adjust compose-\u003eheight\nint V4L2_SEL_TGT_CROP case. Add v4l2_rect_map_inside() to fix this problem\nfor this case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Fix preallocation discarding at indirect extent boundary\n\nWhen preallocation extent is the first one in the extent block, the\ncode would corrupt extent tree header instead. Fix the problem and use\nudf_delete_aext() for deleting extent to avoid some code duplication.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: uvc: Prevent buffer overflow in setup handler\n\nSetup function uvc_function_setup permits control transfer\nrequests with up to 64 bytes of payload (UVC_MAX_REQUEST_SIZE),\ndata stage handler for OUT transfer uses memcpy to copy req-\u003eactual\nbytes to uvc_event-\u003edata.data array of size 60. This may result\nin an overflow of 4 bytes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48949",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Initialize mailbox message for VF reset\n\nWhen a MAC address is not assigned to the VF, that portion of the message\nsent to the VF is not set. The memory, however, is allocated from the\nstack meaning that information may be leaked to the VM. Initialize the\nmessage buffer to 0 so that no information is passed to the VM in this\ncase.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48951",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: ops: Check bounds for second channel in snd_soc_put_volsw_sx()\n\nThe bounds checks in snd_soc_put_volsw_sx() are only being applied to the\nfirst channel, meaning it is possible to write out of bounds values to the\nsecond channel in stereo controls. Add appropriate checks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48953",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: cmos: Fix event handler registration ordering issue\n\nBecause acpi_install_fixed_event_handler() enables the event\nautomatically on success, it is incorrect to call it before the\nhandler routine passed to it is ready to handle events.\n\nUnfortunately, the rtc-cmos driver does exactly the incorrect thing\nby calling cmos_wake_setup(), which passes rtc_handler() to\nacpi_install_fixed_event_handler(), before cmos_do_probe(), because\nrtc_handler() uses dev_get_drvdata() to get to the cmos object\npointer and the driver data pointer is only populated in\ncmos_do_probe().\n\nThis leads to a NULL pointer dereference in rtc_handler() on boot\nif the RTC fixed event happens to be active at the init time.\n\nTo address this issue, change the initialization ordering of the\ndriver so that cmos_wake_setup() is always called after a successful\ncmos_do_probe() call.\n\nWhile at it, change cmos_pnp_probe() to call cmos_do_probe() after\nthe initial if () statement used for computing the IRQ argument to\nbe passed to cmos_do_probe() which is cleaner than calling it in\neach branch of that if () (local variable \"irq\" can be of type int,\nbecause it is passed to that function as an argument of type int).\n\nNote that commit 6492fed7d8c9 (\"rtc: rtc-cmos: Do not check\nACPI_FADT_LOW_POWER_S0\") caused this issue to affect a larger number\nof systems, because previously it only affected systems with\nACPI_FADT_LOW_POWER_S0 set, but it is present regardless of that\ncommit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48954",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/qeth: fix use-after-free in hsci\n\nKASAN found that addr was dereferenced after br2dev_event_work was freed.\n\n==================================================================\nBUG: KASAN: use-after-free in qeth_l2_br2dev_worker+0x5ba/0x6b0\nRead of size 1 at addr 00000000fdcea440 by task kworker/u760:4/540\nCPU: 17 PID: 540 Comm: kworker/u760:4 Tainted: G            E      6.1.0-20221128.rc7.git1.5aa3bed4ce83.300.fc36.s390x+kasan #1\nHardware name: IBM 8561 T01 703 (LPAR)\nWorkqueue: 0.0.8000_event qeth_l2_br2dev_worker\nCall Trace:\n [\u003c000000016944d4ce\u003e] dump_stack_lvl+0xc6/0xf8\n [\u003c000000016942cd9c\u003e] print_address_description.constprop.0+0x34/0x2a0\n [\u003c000000016942d118\u003e] print_report+0x110/0x1f8\n [\u003c0000000167a7bd04\u003e] kasan_report+0xfc/0x128\n [\u003c000000016938d79a\u003e] qeth_l2_br2dev_worker+0x5ba/0x6b0\n [\u003c00000001673edd1e\u003e] process_one_work+0x76e/0x1128\n [\u003c00000001673ee85c\u003e] worker_thread+0x184/0x1098\n [\u003c000000016740718a\u003e] kthread+0x26a/0x310\n [\u003c00000001672c606a\u003e] __ret_from_fork+0x8a/0xe8\n [\u003c00000001694711da\u003e] ret_from_fork+0xa/0x40\nAllocated by task 108338:\n kasan_save_stack+0x40/0x68\n kasan_set_track+0x36/0x48\n __kasan_kmalloc+0xa0/0xc0\n qeth_l2_switchdev_event+0x25a/0x738\n atomic_notifier_call_chain+0x9c/0xf8\n br_switchdev_fdb_notify+0xf4/0x110\n fdb_notify+0x122/0x180\n fdb_add_entry.constprop.0.isra.0+0x312/0x558\n br_fdb_add+0x59e/0x858\n rtnl_fdb_add+0x58a/0x928\n rtnetlink_rcv_msg+0x5f8/0x8d8\n netlink_rcv_skb+0x1f2/0x408\n netlink_unicast+0x570/0x790\n netlink_sendmsg+0x752/0xbe0\n sock_sendmsg+0xca/0x110\n ____sys_sendmsg+0x510/0x6a8\n ___sys_sendmsg+0x12a/0x180\n __sys_sendmsg+0xe6/0x168\n __do_sys_socketcall+0x3c8/0x468\n do_syscall+0x22c/0x328\n __do_syscall+0x94/0xf0\n system_call+0x82/0xb0\nFreed by task 540:\n kasan_save_stack+0x40/0x68\n kasan_set_track+0x36/0x48\n kasan_save_free_info+0x4c/0x68\n ____kasan_slab_free+0x14e/0x1a8\n __kasan_slab_free+0x24/0x30\n __kmem_cache_free+0x168/0x338\n qeth_l2_br2dev_worker+0x154/0x6b0\n process_one_work+0x76e/0x1128\n worker_thread+0x184/0x1098\n kthread+0x26a/0x310\n __ret_from_fork+0x8a/0xe8\n ret_from_fork+0xa/0x40\nLast potentially related work creation:\n kasan_save_stack+0x40/0x68\n __kasan_record_aux_stack+0xbe/0xd0\n insert_work+0x56/0x2e8\n __queue_work+0x4ce/0xd10\n queue_work_on+0xf4/0x100\n qeth_l2_switchdev_event+0x520/0x738\n atomic_notifier_call_chain+0x9c/0xf8\n br_switchdev_fdb_notify+0xf4/0x110\n fdb_notify+0x122/0x180\n fdb_add_entry.constprop.0.isra.0+0x312/0x558\n br_fdb_add+0x59e/0x858\n rtnl_fdb_add+0x58a/0x928\n rtnetlink_rcv_msg+0x5f8/0x8d8\n netlink_rcv_skb+0x1f2/0x408\n netlink_unicast+0x570/0x790\n netlink_sendmsg+0x752/0xbe0\n sock_sendmsg+0xca/0x110\n ____sys_sendmsg+0x510/0x6a8\n ___sys_sendmsg+0x12a/0x180\n __sys_sendmsg+0xe6/0x168\n __do_sys_socketcall+0x3c8/0x468\n do_syscall+0x22c/0x328\n __do_syscall+0x94/0xf0\n system_call+0x82/0xb0\nSecond to last potentially related work creation:\n kasan_save_stack+0x40/0x68\n __kasan_record_aux_stack+0xbe/0xd0\n kvfree_call_rcu+0xb2/0x760\n kernfs_unlink_open_file+0x348/0x430\n kernfs_fop_release+0xc2/0x320\n __fput+0x1ae/0x768\n task_work_run+0x1bc/0x298\n exit_to_user_mode_prepare+0x1a0/0x1a8\n __do_syscall+0x94/0xf0\n system_call+0x82/0xb0\nThe buggy address belongs to the object at 00000000fdcea400\n which belongs to the cache kmalloc-96 of size 96\nThe buggy address is located 64 bytes inside of\n 96-byte region [00000000fdcea400, 00000000fdcea460)\nThe buggy address belongs to the physical page:\npage:000000005a9c26e8 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0xfdcea\nflags: 0x3ffff00000000200(slab|node=0|zone=1|lastcpupid=0x1ffff)\nraw: 3ffff00000000200 0000000000000000 0000000100000122 000000008008cc00\nraw: 0000000000000000 0020004100000000 ffffffff00000001 0000000000000000\npage dumped because: kasan: bad access detected\nMemory state around the buggy address:\n 00000000fdcea300: fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n 00000000fdcea380: fb fb fb fb fb fb f\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48955",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: thunderbolt: fix memory leak in tbnet_open()\n\nWhen tb_ring_alloc_rx() failed in tbnet_open(), ida that allocated in\ntb_xdomain_alloc_out_hopid() is not released. Add\ntb_xdomain_release_out_hopid() to the error path to release ida.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48956",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: avoid use-after-free in ip6_fragment()\n\nBlamed commit claimed rcu_read_lock() was held by ip6_fragment() callers.\n\nIt seems to not be always true, at least for UDP stack.\n\nsyzbot reported:\n\nBUG: KASAN: use-after-free in ip6_dst_idev include/net/ip6_fib.h:245 [inline]\nBUG: KASAN: use-after-free in ip6_fragment+0x2724/0x2770 net/ipv6/ip6_output.c:951\nRead of size 8 at addr ffff88801d403e80 by task syz-executor.3/7618\n\nCPU: 1 PID: 7618 Comm: syz-executor.3 Not tainted 6.1.0-rc6-syzkaller-00012-g4312098baf37 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:284 [inline]\n print_report+0x15e/0x45d mm/kasan/report.c:395\n kasan_report+0xbf/0x1f0 mm/kasan/report.c:495\n ip6_dst_idev include/net/ip6_fib.h:245 [inline]\n ip6_fragment+0x2724/0x2770 net/ipv6/ip6_output.c:951\n __ip6_finish_output net/ipv6/ip6_output.c:193 [inline]\n ip6_finish_output+0x9a3/0x1170 net/ipv6/ip6_output.c:206\n NF_HOOK_COND include/linux/netfilter.h:291 [inline]\n ip6_output+0x1f1/0x540 net/ipv6/ip6_output.c:227\n dst_output include/net/dst.h:445 [inline]\n ip6_local_out+0xb3/0x1a0 net/ipv6/output_core.c:161\n ip6_send_skb+0xbb/0x340 net/ipv6/ip6_output.c:1966\n udp_v6_send_skb+0x82a/0x18a0 net/ipv6/udp.c:1286\n udp_v6_push_pending_frames+0x140/0x200 net/ipv6/udp.c:1313\n udpv6_sendmsg+0x18da/0x2c80 net/ipv6/udp.c:1606\n inet6_sendmsg+0x9d/0xe0 net/ipv6/af_inet6.c:665\n sock_sendmsg_nosec net/socket.c:714 [inline]\n sock_sendmsg+0xd3/0x120 net/socket.c:734\n sock_write_iter+0x295/0x3d0 net/socket.c:1108\n call_write_iter include/linux/fs.h:2191 [inline]\n new_sync_write fs/read_write.c:491 [inline]\n vfs_write+0x9ed/0xdd0 fs/read_write.c:584\n ksys_write+0x1ec/0x250 fs/read_write.c:637\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7fde3588c0d9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fde365b6168 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 00007fde359ac050 RCX: 00007fde3588c0d9\nRDX: 000000000000ffdc RSI: 00000000200000c0 RDI: 000000000000000a\nRBP: 00007fde358e7ae9 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007fde35acfb1f R14: 00007fde365b6300 R15: 0000000000022000\n \u003c/TASK\u003e\n\nAllocated by task 7618:\n kasan_save_stack+0x22/0x40 mm/kasan/common.c:45\n kasan_set_track+0x25/0x30 mm/kasan/common.c:52\n __kasan_slab_alloc+0x82/0x90 mm/kasan/common.c:325\n kasan_slab_alloc include/linux/kasan.h:201 [inline]\n slab_post_alloc_hook mm/slab.h:737 [inline]\n slab_alloc_node mm/slub.c:3398 [inline]\n slab_alloc mm/slub.c:3406 [inline]\n __kmem_cache_alloc_lru mm/slub.c:3413 [inline]\n kmem_cache_alloc+0x2b4/0x3d0 mm/slub.c:3422\n dst_alloc+0x14a/0x1f0 net/core/dst.c:92\n ip6_dst_alloc+0x32/0xa0 net/ipv6/route.c:344\n ip6_rt_pcpu_alloc net/ipv6/route.c:1369 [inline]\n rt6_make_pcpu_route net/ipv6/route.c:1417 [inline]\n ip6_pol_route+0x901/0x1190 net/ipv6/route.c:2254\n pol_lookup_func include/net/ip6_fib.h:582 [inline]\n fib6_rule_lookup+0x52e/0x6f0 net/ipv6/fib6_rules.c:121\n ip6_route_output_flags_noref+0x2e6/0x380 net/ipv6/route.c:2625\n ip6_route_output_flags+0x76/0x320 net/ipv6/route.c:2638\n ip6_route_output include/net/ip6_route.h:98 [inline]\n ip6_dst_lookup_tail+0x5ab/0x1620 net/ipv6/ip6_output.c:1092\n ip6_dst_lookup_flow+0x90/0x1d0 net/ipv6/ip6_output.c:1222\n ip6_sk_dst_lookup_flow+0x553/0x980 net/ipv6/ip6_output.c:1260\n udpv6_sendmsg+0x151d/0x2c80 net/ipv6/udp.c:1554\n inet6_sendmsg+0x9d/0xe0 net/ipv6/af_inet6.c:665\n sock_sendmsg_nosec n\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: sja1105: fix memory leak in sja1105_setup_devlink_regions()\n\nWhen dsa_devlink_region_create failed in sja1105_setup_devlink_regions(),\npriv-\u003eregions is not released.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hisilicon: Fix potential use-after-free in hix5hd2_rx()\n\nThe skb is delivered to napi_gro_receive() which may free it, after\ncalling this, dereferencing skb may trigger use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48961",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdio: fix unbalanced fwnode reference count in mdio_device_release()\n\nThere is warning report about of_node refcount leak\nwhile probing mdio device:\n\nOF: ERROR: memory leak, expected refcount 1 instead of 2,\nof_node_get()/of_node_put() unbalanced - destroy cset entry:\nattach overlay node /spi/soc@0/mdio@710700c0/ethernet@4\n\nIn of_mdiobus_register_device(), we increase fwnode refcount\nby fwnode_handle_get() before associating the of_node with\nmdio device, but it has never been decreased in normal path.\nSince that, in mdio_device_release(), it needs to call\nfwnode_handle_put() in addition instead of calling kfree()\ndirectly.\n\nAfter above, just calling mdio_device_free() in the error handle\npath of of_mdiobus_register_device() is enough to keep the\nrefcount balanced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48962",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hisilicon: Fix potential use-after-free in hisi_femac_rx()\n\nThe skb is delivered to napi_gro_receive() which may free it, after\ncalling this, dereferencing skb may trigger use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48967",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: nci: Bounds check struct nfc_target arrays\n\nWhile running under CONFIG_FORTIFY_SOURCE=y, syzkaller reported:\n\n  memcpy: detected field-spanning write (size 129) of single field \"target-\u003esensf_res\" at net/nfc/nci/ntf.c:260 (size 18)\n\nThis appears to be a legitimate lack of bounds checking in\nnci_add_new_protocol(). Add the missing checks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48968",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix potential memory leak in otx2_init_tc()\n\nIn otx2_init_tc(), if rhashtable_init() failed, it does not free\ntc-\u003etc_entries_bitmap which is allocated in otx2_tc_alloc_ent_bitmap().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen-netfront: Fix NULL sring after live migration\n\nA NAPI is setup for each network sring to poll data to kernel\nThe sring with source host is destroyed before live migration and\nnew sring with target host is setup after live migration.\nThe NAPI for the old sring is not deleted until setup new sring\nwith target host after migration. With busy_poll/busy_read enabled,\nthe NAPI can be polled before got deleted when resume VM.\n\nBUG: unable to handle kernel NULL pointer dereference at\n0000000000000008\nIP: xennet_poll+0xae/0xd20\nPGD 0 P4D 0\nOops: 0000 [#1] SMP PTI\nCall Trace:\n finish_task_switch+0x71/0x230\n timerqueue_del+0x1d/0x40\n hrtimer_try_to_cancel+0xb5/0x110\n xennet_alloc_rx_buffers+0x2a0/0x2a0\n napi_busy_loop+0xdb/0x270\n sock_poll+0x87/0x90\n do_sys_poll+0x26f/0x580\n tracing_map_insert+0x1d4/0x2f0\n event_hist_trigger+0x14a/0x260\n\n finish_task_switch+0x71/0x230\n __schedule+0x256/0x890\n recalc_sigpending+0x1b/0x50\n xen_sched_clock+0x15/0x20\n __rb_reserve_next+0x12d/0x140\n ring_buffer_lock_reserve+0x123/0x3d0\n event_triggers_call+0x87/0xb0\n trace_event_buffer_commit+0x1c4/0x210\n xen_clocksource_get_cycles+0x15/0x20\n ktime_get_ts64+0x51/0xf0\n SyS_ppoll+0x160/0x1a0\n SyS_ppoll+0x160/0x1a0\n do_syscall_64+0x73/0x130\n entry_SYSCALL_64_after_hwframe+0x41/0xa6\n...\nRIP: xennet_poll+0xae/0xd20 RSP: ffffb4f041933900\nCR2: 0000000000000008\n---[ end trace f8601785b354351c ]---\n\nxen frontend should remove the NAPIs for the old srings before live\nmigration as the bond srings are destroyed\n\nThere is a tiny window between the srings are set to NULL and\nthe NAPIs are disabled, It is safe as the NAPI threads are still\nfrozen at that time",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48971",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix not cleanup led when bt_init fails\n\nbt_init() calls bt_leds_init() to register led, but if it fails later,\nbt_leds_cleanup() is not called to unregister it.\n\nThis can cause panic if the argument \"bluetooth-power\" in text is freed\nand then another led_trigger_register() tries to access it:\n\nBUG: unable to handle page fault for address: ffffffffc06d3bc0\nRIP: 0010:strcmp+0xc/0x30\n  Call Trace:\n    \u003cTASK\u003e\n    led_trigger_register+0x10d/0x4f0\n    led_trigger_register_simple+0x7d/0x100\n    bt_init+0x39/0xf7 [bluetooth]\n    do_one_initcall+0xd0/0x4e0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48972",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmac802154: fix missing INIT_LIST_HEAD in ieee802154_if_add()\n\nKernel fault injection test reports null-ptr-deref as follows:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nRIP: 0010:cfg802154_netdev_notifier_call+0x120/0x310 include/linux/list.h:114\nCall Trace:\n \u003cTASK\u003e\n raw_notifier_call_chain+0x6d/0xa0 kernel/notifier.c:87\n call_netdevice_notifiers_info+0x6e/0xc0 net/core/dev.c:1944\n unregister_netdevice_many_notify+0x60d/0xcb0 net/core/dev.c:1982\n unregister_netdevice_queue+0x154/0x1a0 net/core/dev.c:10879\n register_netdevice+0x9a8/0xb90 net/core/dev.c:10083\n ieee802154_if_add+0x6ed/0x7e0 net/mac802154/iface.c:659\n ieee802154_register_hw+0x29c/0x330 net/mac802154/main.c:229\n mcr20a_probe+0xaaa/0xcb1 drivers/net/ieee802154/mcr20a.c:1316\n\nieee802154_if_add() allocates wpan_dev as netdev's private data, but not\ninit the list in struct wpan_dev. cfg802154_netdev_notifier_call() manage\nthe list when device register/unregister, and may lead to null-ptr-deref.\n\nUse INIT_LIST_HEAD() on it to initialize it correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: amd8111: Fix PCI device reference count leak\n\nfor_each_pci_dev() is implemented by pci_get_device(). The comment of\npci_get_device() says that it will increase the reference count for the\nreturned pci_dev and also decrease the reference count for the input\npci_dev @from if it is not NULL.\n\nIf we break for_each_pci_dev() loop with pdev not NULL, we need to call\npci_dev_put() to decrease the reference count. Add the missing\npci_dev_put() after the 'out' label. Since pci_dev_put() can handle NULL\ninput parameter, there is no problem for the 'Device not found' branch.\nFor the normal path, add pci_dev_put() in amd_gpio_exit().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48975",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: fix memory leak in gpiochip_setup_dev()\n\nHere is a backtrace report about memory leak detected in\ngpiochip_setup_dev():\n\nunreferenced object 0xffff88810b406400 (size 512):\n  comm \"python3\", pid 1682, jiffies 4295346908 (age 24.090s)\n  backtrace:\n    kmalloc_trace\n    device_add\t\tdevice_private_init at drivers/base/core.c:3361\n\t\t\t(inlined by) device_add at drivers/base/core.c:3411\n    cdev_device_add\n    gpiolib_cdev_register\n    gpiochip_setup_dev\n    gpiochip_add_data_with_key\n\ngcdev_register() \u0026 gcdev_unregister() would call device_add() \u0026\ndevice_del() (no matter CONFIG_GPIO_CDEV is enabled or not) to\nregister/unregister device.\n\nHowever, if device_add() succeeds, some resource (like\nstruct device_private allocated by device_private_init())\nis not released by device_del().\n\nTherefore, after device_add() succeeds by gcdev_register(), it\nneeds to call put_device() to release resource in the error handle\npath.\n\nHere we move forward the register of release function, and let it\nrelease every piece of resource by put_device() instead of kfree().\n\nWhile at it, fix another subtle issue, i.e. when gc-\u003engpio is equal\nto 0, we still call kcalloc() and, in case of further error, kfree()\non the ZERO_PTR pointer, which is not NULL. It's not a bug per se,\nbut rather waste of the resources and potentially wrong expectation\nabout contents of the gdev-\u003edescs variable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: fix shift-out-of-bounds in hid_report_raw_event\n\nSyzbot reported shift-out-of-bounds in hid_report_raw_event.\n\nmicrosoft 0003:045E:07DA.0001: hid_field_extract() called with n (128) \u003e\n32! (swapper/0)\n======================================================================\nUBSAN: shift-out-of-bounds in drivers/hid/hid-core.c:1323:20\nshift exponent 127 is too large for 32-bit type 'int'\nCPU: 0 PID: 0 Comm: swapper/0 Not tainted\n6.1.0-rc4-syzkaller-00159-g4bbf3422df78 #0\nHardware name: Google Compute Engine/Google Compute Engine, BIOS\nGoogle 10/26/2022\nCall Trace:\n \u003cIRQ\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x1e3/0x2cb lib/dump_stack.c:106\n ubsan_epilogue lib/ubsan.c:151 [inline]\n __ubsan_handle_shift_out_of_bounds+0x3a6/0x420 lib/ubsan.c:322\n snto32 drivers/hid/hid-core.c:1323 [inline]\n hid_input_fetch_field drivers/hid/hid-core.c:1572 [inline]\n hid_process_report drivers/hid/hid-core.c:1665 [inline]\n hid_report_raw_event+0xd56/0x18b0 drivers/hid/hid-core.c:1998\n hid_input_report+0x408/0x4f0 drivers/hid/hid-core.c:2066\n hid_irq_in+0x459/0x690 drivers/hid/usbhid/hid-core.c:284\n __usb_hcd_giveback_urb+0x369/0x530 drivers/usb/core/hcd.c:1671\n dummy_timer+0x86b/0x3110 drivers/usb/gadget/udc/dummy_hcd.c:1988\n call_timer_fn+0xf5/0x210 kernel/time/timer.c:1474\n expire_timers kernel/time/timer.c:1519 [inline]\n __run_timers+0x76a/0x980 kernel/time/timer.c:1790\n run_timer_softirq+0x63/0xf0 kernel/time/timer.c:1803\n __do_softirq+0x277/0x75b kernel/softirq.c:571\n __irq_exit_rcu+0xec/0x170 kernel/softirq.c:650\n irq_exit_rcu+0x5/0x20 kernel/softirq.c:662\n sysvec_apic_timer_interrupt+0x91/0xb0 arch/x86/kernel/apic/apic.c:1107\n======================================================================\n\nIf the size of the integer (unsigned n) is bigger than 32 in snto32(),\nshift exponent will be too large for 32-bit type 'int', resulting in a\nshift-out-of-bounds bug.\nFix this by adding a check on the size of the integer (unsigned n) in\nsnto32(). To add support for n greater than 32 bits, set n to 32, if n\nis greater than 32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48981",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/shmem-helper: Remove errant put in error path\n\ndrm_gem_shmem_mmap() doesn't own this reference, resulting in the GEM\nobject getting prematurely freed leading to a later use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48985",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix race on per-CQ variable napi work_done\n\nAfter calling napi_complete_done(), the NAPIF_STATE_SCHED bit may be\ncleared, and another CPU can start napi thread and access per-CQ variable,\ncq-\u003ework_done. If the other thread (for example, from busy_poll) sets\nit to a value \u003e= budget, this thread will continue to run when it should\nstop, and cause memory corruption and panic.\n\nTo fix this issue, save the per-CQ work_done variable in a local variable\nbefore napi_complete_done(), so it won't be corrupted by a possible\nconcurrent thread after napi_complete_done().\n\nAlso, add a flag bit to advertise to the NIC firmware: the NAPI work_done\nvariable race is fixed, so the driver is able to reliably support features\nlike busy_poll.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48987",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-dv-timings.c: fix too strict blanking sanity checks\n\nSanity checks were added to verify the v4l2_bt_timings blanking fields\nin order to avoid integer overflows when userspace passes weird values.\n\nBut that assumed that userspace would correctly fill in the front porch,\nbackporch and sync values, but sometimes all you know is the total\nblanking, which is then assigned to just one of these fields.\n\nAnd that can fail with these checks.\n\nSo instead set a maximum for the total horizontal and vertical\nblanking and check that each field remains below that.\n\nThat is still sufficient to avoid integer overflows, but it also\nallows for more flexibility in how userspace fills in these fields.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48988",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg: fix possible use-after-free in memcg_write_event_control()\n\nmemcg_write_event_control() accesses the dentry-\u003ed_name of the specified\ncontrol fd to route the write call.  As a cgroup interface file can't be\nrenamed, it's safe to access d_name as long as the specified file is a\nregular cgroup file.  Also, as these cgroup interface files can't be\nremoved before the directory, it's safe to access the parent too.\n\nPrior to 347c4a874710 (\"memcg: remove cgroup_event-\u003ecft\"), there was a\ncall to __file_cft() which verified that the specified file is a regular\ncgroupfs file before further accesses.  The cftype pointer returned from\n__file_cft() was no longer necessary and the commit inadvertently dropped\nthe file type check with it allowing any file to slip through.  With the\ninvarients broken, the d_name and parent accesses can now race against\nrenames and removals of arbitrary files and cause use-after-free's.\n\nFix the bug by resurrecting the file type check in __file_cft().  Now that\ncgroupfs is implemented through kernfs, checking the file operations needs\nto go through a layer of indirection.  Instead, let's check the superblock\nand dentry type.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48991",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/khugepaged: invoke MMU notifiers in shmem/file collapse paths\n\nAny codepath that zaps page table entries must invoke MMU notifiers to\nensure that secondary MMUs (like KVM) don't keep accessing pages which\naren't mapped anymore.  Secondary MMUs don't hold their own references to\npages that are mirrored over, so failing to notify them can lead to page\nuse-after-free.\n\nI'm marking this as addressing an issue introduced in commit f3f0e1d2150b\n(\"khugepaged: add support of collapse for tmpfs/shmem pages\"), but most of\nthe security impact of this only came in commit 27e1f8273113 (\"khugepaged:\nenable collapse pmd for pte-mapped THP\"), which actually omitted flushes\nfor the removal of present PTEs, not just for the removal of empty page\ntables.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48992",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: soc-pcm: Add NULL check in BE reparenting\n\nAdd NULL check in dpcm_be_reparent API, to handle\nkernel NULL pointer dereference error.\nThe issue occurred in fuzzing test.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48994",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: seq: Fix function prototype mismatch in snd_seq_expand_var_event\n\nWith clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),\nindirect call targets are validated against the expected function\npointer prototype to make sure the call target is valid to help mitigate\nROP attacks. If they are not identical, there is a failure at run time,\nwhich manifests as either a kernel panic or thread getting killed.\n\nseq_copy_in_user() and seq_copy_in_kernel() did not have prototypes\nmatching snd_seq_dump_func_t. Adjust this and remove the casts. There\nare not resulting binary output differences.\n\nThis was found as a result of Clang's new -Wcast-function-type-strict\nflag, which is more sensitive than the simpler -Wcast-function-type,\nwhich only checks for type width mismatches.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "not set"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: raydium_ts_i2c - fix memory leak in raydium_i2c_send()\n\nThere is a kmemleak when test the raydium_i2c_ts with bpf mock device:\n\n  unreferenced object 0xffff88812d3675a0 (size 8):\n    comm \"python3\", pid 349, jiffies 4294741067 (age 95.695s)\n    hex dump (first 8 bytes):\n      11 0e 10 c0 01 00 04 00                          ........\n    backtrace:\n      [\u003c0000000068427125\u003e] __kmalloc+0x46/0x1b0\n      [\u003c0000000090180f91\u003e] raydium_i2c_send+0xd4/0x2bf [raydium_i2c_ts]\n      [\u003c000000006e631aee\u003e] raydium_i2c_initialize.cold+0xbc/0x3e4 [raydium_i2c_ts]\n      [\u003c00000000dc6fcf38\u003e] raydium_i2c_probe+0x3cd/0x6bc [raydium_i2c_ts]\n      [\u003c00000000a310de16\u003e] i2c_device_probe+0x651/0x680\n      [\u003c00000000f5a96bf3\u003e] really_probe+0x17c/0x3f0\n      [\u003c00000000096ba499\u003e] __driver_probe_device+0xe3/0x170\n      [\u003c00000000c5acb4d9\u003e] driver_probe_device+0x49/0x120\n      [\u003c00000000264fe082\u003e] __device_attach_driver+0xf7/0x150\n      [\u003c00000000f919423c\u003e] bus_for_each_drv+0x114/0x180\n      [\u003c00000000e067feca\u003e] __device_attach+0x1e5/0x2d0\n      [\u003c0000000054301fc2\u003e] bus_probe_device+0x126/0x140\n      [\u003c00000000aad93b22\u003e] device_add+0x810/0x1130\n      [\u003c00000000c086a53f\u003e] i2c_new_client_device+0x352/0x4e0\n      [\u003c000000003c2c248c\u003e] of_i2c_register_device+0xf1/0x110\n      [\u003c00000000ffec4177\u003e] of_i2c_notify+0x100/0x160\n  unreferenced object 0xffff88812d3675c8 (size 8):\n    comm \"python3\", pid 349, jiffies 4294741070 (age 95.692s)\n    hex dump (first 8 bytes):\n      22 00 36 2d 81 88 ff ff                          \".6-....\n    backtrace:\n      [\u003c0000000068427125\u003e] __kmalloc+0x46/0x1b0\n      [\u003c0000000090180f91\u003e] raydium_i2c_send+0xd4/0x2bf [raydium_i2c_ts]\n      [\u003c000000001d5c9620\u003e] raydium_i2c_initialize.cold+0x223/0x3e4 [raydium_i2c_ts]\n      [\u003c00000000dc6fcf38\u003e] raydium_i2c_probe+0x3cd/0x6bc [raydium_i2c_ts]\n      [\u003c00000000a310de16\u003e] i2c_device_probe+0x651/0x680\n      [\u003c00000000f5a96bf3\u003e] really_probe+0x17c/0x3f0\n      [\u003c00000000096ba499\u003e] __driver_probe_device+0xe3/0x170\n      [\u003c00000000c5acb4d9\u003e] driver_probe_device+0x49/0x120\n      [\u003c00000000264fe082\u003e] __device_attach_driver+0xf7/0x150\n      [\u003c00000000f919423c\u003e] bus_for_each_drv+0x114/0x180\n      [\u003c00000000e067feca\u003e] __device_attach+0x1e5/0x2d0\n      [\u003c0000000054301fc2\u003e] bus_probe_device+0x126/0x140\n      [\u003c00000000aad93b22\u003e] device_add+0x810/0x1130\n      [\u003c00000000c086a53f\u003e] i2c_new_client_device+0x352/0x4e0\n      [\u003c000000003c2c248c\u003e] of_i2c_register_device+0xf1/0x110\n      [\u003c00000000ffec4177\u003e] of_i2c_notify+0x100/0x160\n\nAfter BANK_SWITCH command from i2c BUS, no matter success or error\nhappened, the tx_buf should be freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-48997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nchar: tpm: Protect tpm_pm_suspend with locks\n\nCurrently tpm transactions are executed unconditionally in\ntpm_pm_suspend() function, which may lead to races with other tpm\naccessors in the system.\n\nSpecifically, the hw_random tpm driver makes use of tpm_get_random(),\nand this function is called in a loop from a kthread, which means it's\nnot frozen alongside userspace, and so can race with the work done\nduring system suspend:\n\n  tpm tpm0: tpm_transmit: tpm_recv: error -52\n  tpm tpm0: invalid TPM_STS.x 0xff, dumping stack for forensics\n  CPU: 0 PID: 1 Comm: init Not tainted 6.1.0-rc5+ #135\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04/01/2014\n  Call Trace:\n   tpm_tis_status.cold+0x19/0x20\n   tpm_transmit+0x13b/0x390\n   tpm_transmit_cmd+0x20/0x80\n   tpm1_pm_suspend+0xa6/0x110\n   tpm_pm_suspend+0x53/0x80\n   __pnp_bus_suspend+0x35/0xe0\n   __device_suspend+0x10f/0x350\n\nFix this by calling tpm_try_get_ops(), which itself is a wrapper around\ntpm_chip_start(), but takes the appropriate mutex.\n\n[Jason: reworked commit message, added metadata]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49000",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix PCI device refcount leak in has_external_pci()\n\nfor_each_pci_dev() is implemented by pci_get_device(). The comment of\npci_get_device() says that it will increase the reference count for the\nreturned pci_dev and also decrease the reference count for the input\npci_dev @from if it is not NULL.\n\nIf we break for_each_pci_dev() loop with pdev not NULL, we need to call\npci_dev_put() to decrease the reference count. Add the missing\npci_dev_put() before 'return true' to avoid reference count leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49002",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Fix PCI device refcount leak in dmar_dev_scope_init()\n\nfor_each_pci_dev() is implemented by pci_get_device(). The comment of\npci_get_device() says that it will increase the reference count for the\nreturned pci_dev and also decrease the reference count for the input\npci_dev @from if it is not NULL.\n\nIf we break for_each_pci_dev() loop with pdev not NULL, we need to call\npci_dev_put() to decrease the reference count. Add the missing\npci_dev_put() for the error path to avoid reference count leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: fix SRCU protection of nvme_ns_head list\n\nWalking the nvme_ns_head siblings list is protected by the head's srcu\nin nvme_ns_head_submit_bio() but not nvme_mpath_revalidate_paths().\nRemoving namespaces from the list also fails to synchronize the srcu.\nConcurrent scan work can therefore cause use-after-frees.\n\nHold the head's srcu lock in nvme_mpath_revalidate_paths() and\nsynchronize with the srcu, not the global RCU, in nvme_ns_remove().\n\nObserved the following panic when making NVMe/RDMA connections\nwith native multipath on the Rocky Linux 8.6 kernel\n(it seems the upstream kernel has the same race condition).\nDisassembly shows the faulting instruction is cmp 0x50(%rdx),%rcx;\ncomputing capacity != get_capacity(ns-\u003edisk).\nAddress 0x50 is dereferenced because ns-\u003edisk is NULL.\nThe NULL disk appears to be the result of concurrent scan work\nfreeing the namespace (note the log line in the middle of the panic).\n\n[37314.206036] BUG: unable to handle kernel NULL pointer dereference at 0000000000000050\n[37314.206036] nvme0n3: detected capacity change from 0 to 11811160064\n[37314.299753] PGD 0 P4D 0\n[37314.299756] Oops: 0000 [#1] SMP PTI\n[37314.299759] CPU: 29 PID: 322046 Comm: kworker/u98:3 Kdump: loaded Tainted: G        W      X --------- -  - 4.18.0-372.32.1.el8test86.x86_64 #1\n[37314.299762] Hardware name: Dell Inc. PowerEdge R720/0JP31P, BIOS 2.7.0 05/23/2018\n[37314.299763] Workqueue: nvme-wq nvme_scan_work [nvme_core]\n[37314.299783] RIP: 0010:nvme_mpath_revalidate_paths+0x26/0xb0 [nvme_core]\n[37314.299790] Code: 1f 44 00 00 66 66 66 66 90 55 53 48 8b 5f 50 48 8b 83 c8 c9 00 00 48 8b 13 48 8b 48 50 48 39 d3 74 20 48 8d 42 d0 48 8b 50 20 \u003c48\u003e 3b 4a 50 74 05 f0 80 60 70 ef 48 8b 50 30 48 8d 42 d0 48 39 d3\n[37315.058803] RSP: 0018:ffffabe28f913d10 EFLAGS: 00010202\n[37315.121316] RAX: ffff927a077da800 RBX: ffff92991dd70000 RCX: 0000000001600000\n[37315.206704] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff92991b719800\n[37315.292106] RBP: ffff929a6b70c000 R08: 000000010234cd4a R09: c0000000ffff7fff\n[37315.377501] R10: 0000000000000001 R11: ffffabe28f913a30 R12: 0000000000000000\n[37315.462889] R13: ffff92992716600c R14: ffff929964e6e030 R15: ffff92991dd70000\n[37315.548286] FS:  0000000000000000(0000) GS:ffff92b87fb80000(0000) knlGS:0000000000000000\n[37315.645111] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[37315.713871] CR2: 0000000000000050 CR3: 0000002208810006 CR4: 00000000000606e0\n[37315.799267] Call Trace:\n[37315.828515]  nvme_update_ns_info+0x1ac/0x250 [nvme_core]\n[37315.892075]  nvme_validate_or_alloc_ns+0x2ff/0xa00 [nvme_core]\n[37315.961871]  ? __blk_mq_free_request+0x6b/0x90\n[37316.015021]  nvme_scan_work+0x151/0x240 [nvme_core]\n[37316.073371]  process_one_work+0x1a7/0x360\n[37316.121318]  ? create_worker+0x1a0/0x1a0\n[37316.168227]  worker_thread+0x30/0x390\n[37316.212024]  ? create_worker+0x1a0/0x1a0\n[37316.258939]  kthread+0x10a/0x120\n[37316.297557]  ? set_kthread_struct+0x50/0x50\n[37316.347590]  ret_from_fork+0x35/0x40\n[37316.390360] Modules linked in: nvme_rdma nvme_tcp(X) nvme_fabrics nvme_core netconsole iscsi_tcp libiscsi_tcp dm_queue_length dm_service_time nf_conntrack_netlink br_netfilter bridge stp llc overlay nft_chain_nat ipt_MASQUERADE nf_nat xt_addrtype xt_CT nft_counter xt_state xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment xt_multiport nft_compat nf_tables libcrc32c nfnetlink dm_multipath tg3 rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_core_mod ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm intel_rapl_msr iTCO_wdt iTCO_vendor_support dcdbas intel_rapl_common sb_edac x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel ipmi_ssif kvm irqbypass crct10dif_pclmul crc32_pclmul mlx5_ib ghash_clmulni_intel ib_uverbs rapl intel_cstate intel_uncore ib_core ipmi_si joydev mei_me pcspkr ipmi_devintf mei lpc_ich wmi ipmi_msghandler acpi_power_meter ex\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49005",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: ops: Fix bounds check for _sx controls\n\nFor _sx controls the semantics of the max field is not the usual one, max\nis the number of steps rather than the maximum value. This means that our\ncheck in snd_soc_put_volsw_sx() needs to just check against the maximum\nvalue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49006",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Free buffers when a used dynamic event is removed\n\nAfter 65536 dynamic events have been added and removed, the \"type\" field\nof the event then uses the first type number that is available (not\ncurrently used by other events). A type number is the identifier of the\nbinary blobs in the tracing ring buffer (known as events) to map them to\nlogic that can parse the binary blob.\n\nThe issue is that if a dynamic event (like a kprobe event) is traced and\nis in the ring buffer, and then that event is removed (because it is\ndynamic, which means it can be created and destroyed), if another dynamic\nevent is created that has the same number that new event's logic on\nparsing the binary blob will be used.\n\nTo show how this can be an issue, the following can crash the kernel:\n\n # cd /sys/kernel/tracing\n # for i in `seq 65536`; do\n     echo 'p:kprobes/foo do_sys_openat2 $arg1:u32' \u003e kprobe_events\n # done\n\nFor every iteration of the above, the writing to the kprobe_events will\nremove the old event and create a new one (with the same format) and\nincrease the type number to the next available on until the type number\nreaches over 65535 which is the max number for the 16 bit type. After it\nreaches that number, the logic to allocate a new number simply looks for\nthe next available number. When an dynamic event is removed, that number\nis then available to be reused by the next dynamic event created. That is,\nonce the above reaches the max number, the number assigned to the event in\nthat loop will remain the same.\n\nNow that means deleting one dynamic event and created another will reuse\nthe previous events type number. This is where bad things can happen.\nAfter the above loop finishes, the kprobes/foo event which reads the\ndo_sys_openat2 function call's first parameter as an integer.\n\n # echo 1 \u003e kprobes/foo/enable\n # cat /etc/passwd \u003e /dev/null\n # cat trace\n             cat-2211    [005] ....  2007.849603: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196\n             cat-2211    [005] ....  2007.849620: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196\n             cat-2211    [005] ....  2007.849838: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196\n             cat-2211    [005] ....  2007.849880: foo: (do_sys_openat2+0x0/0x130) arg1=4294967196\n # echo 0 \u003e kprobes/foo/enable\n\nNow if we delete the kprobe and create a new one that reads a string:\n\n # echo 'p:kprobes/foo do_sys_openat2 +0($arg2):string' \u003e kprobe_events\n\nAnd now we can the trace:\n\n # cat trace\n        sendmail-1942    [002] .....   530.136320: foo: (do_sys_openat2+0x0/0x240) arg1=             cat-2046    [004] .....   530.930817: foo: (do_sys_openat2+0x0/0x240) arg1=\"������������������������������������������������������������������������������������������������\"\n             cat-2046    [004] .....   530.930961: foo: (do_sys_openat2+0x0/0x240) arg1=\"������������������������������������������������������������������������������������������������\"\n             cat-2046    [004] .....   530.934278: foo: (do_sys_openat2+0x0/0x240) arg1=\"������������������������������������������������������������������������������������������������\"\n             cat-2046    [004] .....   530.934563: foo: (do_sys_openat2+0x0/0x240) arg1=\"���������������������������������������\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49007",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix NULL pointer dereference in nilfs_palloc_commit_free_entry()\n\nSyzbot reported a null-ptr-deref bug:\n\n NILFS (loop0): segctord starting. Construction interval = 5 seconds, CP\n frequency \u003c 30 seconds\n general protection fault, probably for non-canonical address\n 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN\n KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\n CPU: 1 PID: 3603 Comm: segctord Not tainted\n 6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0\n Hardware name: Google Compute Engine/Google Compute Engine, BIOS Google\n 10/11/2022\n RIP: 0010:nilfs_palloc_commit_free_entry+0xe5/0x6b0\n fs/nilfs2/alloc.c:608\n Code: 00 00 00 00 fc ff df 80 3c 02 00 0f 85 cd 05 00 00 48 b8 00 00 00\n 00 00 fc ff df 4c 8b 73 08 49 8d 7e 10 48 89 fa 48 c1 ea 03 \u003c80\u003e 3c 02\n 00 0f 85 26 05 00 00 49 8b 46 10 be a6 00 00 00 48 c7 c7\n RSP: 0018:ffffc90003dff830 EFLAGS: 00010212\n RAX: dffffc0000000000 RBX: ffff88802594e218 RCX: 000000000000000d\n RDX: 0000000000000002 RSI: 0000000000002000 RDI: 0000000000000010\n RBP: ffff888071880222 R08: 0000000000000005 R09: 000000000000003f\n R10: 000000000000000d R11: 0000000000000000 R12: ffff888071880158\n R13: ffff88802594e220 R14: 0000000000000000 R15: 0000000000000004\n FS:  0000000000000000(0000) GS:ffff8880b9b00000(0000)\n knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007fb1c08316a8 CR3: 0000000018560000 CR4: 0000000000350ee0\n Call Trace:\n  \u003cTASK\u003e\n  nilfs_dat_commit_free fs/nilfs2/dat.c:114 [inline]\n  nilfs_dat_commit_end+0x464/0x5f0 fs/nilfs2/dat.c:193\n  nilfs_dat_commit_update+0x26/0x40 fs/nilfs2/dat.c:236\n  nilfs_btree_commit_update_v+0x87/0x4a0 fs/nilfs2/btree.c:1940\n  nilfs_btree_commit_propagate_v fs/nilfs2/btree.c:2016 [inline]\n  nilfs_btree_propagate_v fs/nilfs2/btree.c:2046 [inline]\n  nilfs_btree_propagate+0xa00/0xd60 fs/nilfs2/btree.c:2088\n  nilfs_bmap_propagate+0x73/0x170 fs/nilfs2/bmap.c:337\n  nilfs_collect_file_data+0x45/0xd0 fs/nilfs2/segment.c:568\n  nilfs_segctor_apply_buffers+0x14a/0x470 fs/nilfs2/segment.c:1018\n  nilfs_segctor_scan_file+0x3f4/0x6f0 fs/nilfs2/segment.c:1067\n  nilfs_segctor_collect_blocks fs/nilfs2/segment.c:1197 [inline]\n  nilfs_segctor_collect fs/nilfs2/segment.c:1503 [inline]\n  nilfs_segctor_do_construct+0x12fc/0x6af0 fs/nilfs2/segment.c:2045\n  nilfs_segctor_construct+0x8e3/0xb30 fs/nilfs2/segment.c:2379\n  nilfs_segctor_thread_construct fs/nilfs2/segment.c:2487 [inline]\n  nilfs_segctor_thread+0x3c3/0xf30 fs/nilfs2/segment.c:2570\n  kthread+0x2e4/0x3a0 kernel/kthread.c:376\n  ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n  \u003c/TASK\u003e\n ...\n\nIf DAT metadata file is corrupted on disk, there is a case where\nreq-\u003epr_desc_bh is NULL and blocknr is 0 at nilfs_dat_commit_end() during\na b-tree operation that cascadingly updates ancestor nodes of the b-tree,\nbecause nilfs_dat_commit_alloc() for a lower level block can initialize\nthe blocknr on the same DAT entry between nilfs_dat_prepare_end() and\nnilfs_dat_commit_end().\n\nIf this happens, nilfs_dat_commit_end() calls nilfs_dat_commit_free()\nwithout valid buffer heads in req-\u003epr_desc_bh and req-\u003epr_bitmap_bh, and\ncauses the NULL pointer dereference above in\nnilfs_palloc_commit_free_entry() function, which leads to a crash.\n\nFix this by adding a NULL check on req-\u003epr_desc_bh and req-\u003epr_bitmap_bh\nbefore nilfs_palloc_commit_free_entry() in nilfs_dat_commit_free().\n\nThis also calls nilfs_error() in that case to notify that there is a fatal\nflaw in the filesystem metadata and prevent further operations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49010",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (coretemp) Check for null before removing sysfs attrs\n\nIf coretemp_add_core() gets an error then pdata-\u003ecore_data[indx]\nis already NULL and has been kfreed. Don't pass that to\nsysfs_remove_group() as that will crash in sysfs_remove_group().\n\n[Shortened for readability]\n[91854.020159] sysfs: cannot create duplicate filename '/devices/platform/coretemp.0/hwmon/hwmon2/temp20_label'\n\u003ccpu offline\u003e\n[91855.126115] BUG: kernel NULL pointer dereference, address: 0000000000000188\n[91855.165103] #PF: supervisor read access in kernel mode\n[91855.194506] #PF: error_code(0x0000) - not-present page\n[91855.224445] PGD 0 P4D 0\n[91855.238508] Oops: 0000 [#1] PREEMPT SMP PTI\n...\n[91855.342716] RIP: 0010:sysfs_remove_group+0xc/0x80\n...\n[91855.796571] Call Trace:\n[91855.810524]  coretemp_cpu_offline+0x12b/0x1dd [coretemp]\n[91855.841738]  ? coretemp_cpu_online+0x180/0x180 [coretemp]\n[91855.871107]  cpuhp_invoke_callback+0x105/0x4b0\n[91855.893432]  cpuhp_thread_fun+0x8e/0x150\n...\n\nFix this by checking for NULL first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (coretemp) fix pci device refcount leak in nv1a_ram_new()\n\nAs comment of pci_get_domain_bus_and_slot() says, it returns\na pci device with refcount increment, when finish using it,\nthe caller must decrement the reference count by calling\npci_dev_put(). So call it after using to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49012",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix server-\u003eactive leak in afs_put_server\n\nThe atomic_read was accidentally replaced with atomic_inc_return,\nwhich prevents the server from getting cleaned up and causes rmmod\nto hang with a warning:\n\n    Can't purge s=00000001",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: Fix use-after-free in tun_detach()\n\nsyzbot reported use-after-free in tun_detach() [1].  This causes call\ntrace like below:\n\n==================================================================\nBUG: KASAN: use-after-free in notifier_call_chain+0x1ee/0x200 kernel/notifier.c:75\nRead of size 8 at addr ffff88807324e2a8 by task syz-executor.0/3673\n\nCPU: 0 PID: 3673 Comm: syz-executor.0 Not tainted 6.1.0-rc5-syzkaller-00044-gcc675d22e422 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:284 [inline]\n print_report+0x15e/0x461 mm/kasan/report.c:395\n kasan_report+0xbf/0x1f0 mm/kasan/report.c:495\n notifier_call_chain+0x1ee/0x200 kernel/notifier.c:75\n call_netdevice_notifiers_info+0x86/0x130 net/core/dev.c:1942\n call_netdevice_notifiers_extack net/core/dev.c:1983 [inline]\n call_netdevice_notifiers net/core/dev.c:1997 [inline]\n netdev_wait_allrefs_any net/core/dev.c:10237 [inline]\n netdev_run_todo+0xbc6/0x1100 net/core/dev.c:10351\n tun_detach drivers/net/tun.c:704 [inline]\n tun_chr_close+0xe4/0x190 drivers/net/tun.c:3467\n __fput+0x27c/0xa90 fs/file_table.c:320\n task_work_run+0x16f/0x270 kernel/task_work.c:179\n exit_task_work include/linux/task_work.h:38 [inline]\n do_exit+0xb3d/0x2a30 kernel/exit.c:820\n do_group_exit+0xd4/0x2a0 kernel/exit.c:950\n get_signal+0x21b1/0x2440 kernel/signal.c:2858\n arch_do_signal_or_restart+0x86/0x2300 arch/x86/kernel/signal.c:869\n exit_to_user_mode_loop kernel/entry/common.c:168 [inline]\n exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:203\n __syscall_exit_to_user_mode_work kernel/entry/common.c:285 [inline]\n syscall_exit_to_user_mode+0x1d/0x50 kernel/entry/common.c:296\n do_syscall_64+0x46/0xb0 arch/x86/entry/common.c:86\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe cause of the issue is that sock_put() from __tun_detach() drops\nlast reference count for struct net, and then notifier_call_chain()\nfrom netdev_state_change() accesses that struct net.\n\nThis patch fixes the issue by calling sock_put() from tun_detach()\nafter all necessary accesses for the struct net has done.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hsr: Fix potential use-after-free\n\nThe skb is delivered to netif_rx() which may free it, after calling this,\ndereferencing skb may trigger use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdiobus: fix unbalanced node reference count\n\nI got the following report while doing device(mscc-miim) load test\nwith CONFIG_OF_UNITTEST and CONFIG_OF_DYNAMIC enabled:\n\n  OF: ERROR: memory leak, expected refcount 1 instead of 2,\n  of_node_get()/of_node_put() unbalanced - destroy cset entry:\n  attach overlay node /spi/soc@0/mdio@7107009c/ethernet-phy@0\n\nIf the 'fwnode' is not an acpi node, the refcount is get in\nfwnode_mdiobus_phy_device_register(), but it has never been\nput when the device is freed in the normal path. So call\nfwnode_handle_put() in phy_device_release() to avoid leak.\n\nIf it's an acpi node, it has never been get, but it's put\nin the error path, so call fwnode_handle_get() before\nphy_device_register() to keep get/put operation balanced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49019",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: nixge: fix NULL dereference\n\nIn function nixge_hw_dma_bd_release() dereference of NULL pointer\npriv-\u003erx_bd_v is possible for the case of its allocation failure in\nnixge_hw_dma_bd_init().\n\nMove for() loop with priv-\u003erx_bd_v dereference under the check for\nits validity.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: fix null-ptr-deref while probe() failed\n\nI got a null-ptr-deref report as following when doing fault injection test:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000058\nOops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 1 PID: 253 Comm: 507-spi-dm9051 Tainted: G    B            N 6.1.0-rc3+\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\nRIP: 0010:klist_put+0x2d/0xd0\nCall Trace:\n \u003cTASK\u003e\n klist_remove+0xf1/0x1c0\n device_release_driver_internal+0x23e/0x2d0\n bus_remove_device+0x1bd/0x240\n device_del+0x357/0x770\n phy_device_remove+0x11/0x30\n mdiobus_unregister+0xa5/0x140\n release_nodes+0x6a/0xa0\n devres_release_all+0xf8/0x150\n device_unbind_cleanup+0x19/0xd0\n\n//probe path:\nphy_device_register()\n  device_add()\n\nphy_connect\n  phy_attach_direct() //set device driver\n    probe() //it's failed, driver is not bound\n    device_bind_driver() // probe failed, it's not called\n\n//remove path:\nphy_device_remove()\n  device_del()\n    device_release_driver_internal()\n      __device_release_driver() //dev-\u003edrv is not NULL\n        klist_remove() \u003c- knode_driver is not added yet, cause null-ptr-deref\n\nIn phy_attach_direct(), after setting the 'dev-\u003edriver', probe() fails,\ndevice_bind_driver() is not called, so the knode_driver-\u003en_klist is not\nset, then it causes null-ptr-deref in __device_release_driver() while\ndeleting device. Fix this by setting dev-\u003edriver to NULL in the error\npath in phy_attach_direct().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49022",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac8021: fix possible oob access in ieee80211_get_rate_duration\n\nFix possible out-of-bound access in ieee80211_get_rate_duration routine\nas reported by the following UBSAN report:\n\nUBSAN: array-index-out-of-bounds in net/mac80211/airtime.c:455:47\nindex 15 is out of range for type 'u16 [12]'\nCPU: 2 PID: 217 Comm: kworker/u32:10 Not tainted 6.1.0-060100rc3-generic\nHardware name: Acer Aspire TC-281/Aspire TC-281, BIOS R01-A2 07/18/2017\nWorkqueue: mt76 mt76u_tx_status_data [mt76_usb]\nCall Trace:\n \u003cTASK\u003e\n show_stack+0x4e/0x61\n dump_stack_lvl+0x4a/0x6f\n dump_stack+0x10/0x18\n ubsan_epilogue+0x9/0x43\n __ubsan_handle_out_of_bounds.cold+0x42/0x47\nieee80211_get_rate_duration.constprop.0+0x22f/0x2a0 [mac80211]\n ? ieee80211_tx_status_ext+0x32e/0x640 [mac80211]\n ieee80211_calc_rx_airtime+0xda/0x120 [mac80211]\n ieee80211_calc_tx_airtime+0xb4/0x100 [mac80211]\n mt76x02_send_tx_status+0x266/0x480 [mt76x02_lib]\n mt76x02_tx_status_data+0x52/0x80 [mt76x02_lib]\n mt76u_tx_status_data+0x67/0xd0 [mt76_usb]\n process_one_work+0x225/0x400\n worker_thread+0x50/0x3e0\n ? process_one_work+0x400/0x400\n kthread+0xe9/0x110\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x22/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49023",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: fix buffer overflow in elem comparison\n\nFor vendor elements, the code here assumes that 5 octets\nare present without checking. Since the element itself is\nalready checked to fit, we only need to check the length.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: pci: add missing m_can_class_free_dev() in probe/remove methods\n\nIn m_can_pci_remove() and error handling path of m_can_pci_probe(),\nm_can_class_free_dev() should be called to free resource allocated by\nm_can_class_allocate_dev(), otherwise there will be memleak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49025",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Fix use-after-free when reverting termination table\n\nWhen having multiple dests with termination tables and second one\nor afterwards fails the driver reverts usage of term tables but\ndoesn't reset the assignment in attr-\u003edests[num_vport_dests].termtbl\nwhich case a use-after-free when releasing the rule.\nFix by resetting the assignment of termtbl to null.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49026",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ne100: Fix possible use after free in e100_xmit_prepare\n\nIn e100_xmit_prepare(), if we can't map the skb, then return -ENOMEM, so\ne100_xmit_frame() will return NETDEV_TX_BUSY and the upper layer will\nresend the skb. But the skb is already freed, which will cause UAF bug\nwhen the upper layer resends the skb.\n\nRemove the harmful free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49027",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix error handling in iavf_init_module()\n\nThe iavf_init_module() won't destroy workqueue when pci_register_driver()\nfailed. Call destroy_workqueue() when pci_register_driver() failed to\nprevent the resource leak.\n\nSimilar to the handling of u132_hcd_init in commit f276e002793c\n(\"usb: u132-hcd: fix resource leak\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49028",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nixgbevf: Fix resource leak in ixgbevf_init_module()\n\nixgbevf_init_module() won't destroy the workqueue created by\ncreate_singlethread_workqueue() when pci_register_driver() failed. Add\ndestroy_workqueue() in fail path to prevent the resource leak.\n\nSimilar to the handling of u132_hcd_init in commit f276e002793c\n(\"usb: u132-hcd: fix resource leak\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49029",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (ibmpex) Fix possible UAF when ibmpex_register_bmc() fails\n\nSmatch report warning as follows:\n\ndrivers/hwmon/ibmpex.c:509 ibmpex_register_bmc() warn:\n  '\u0026data-\u003elist' not removed from list\n\nIf ibmpex_find_sensors() fails in ibmpex_register_bmc(), data will\nbe freed, but data-\u003elist will not be removed from driver_data.bmc_data,\nthen list traversal may cause UAF.\n\nFix by removeing it from driver_data.bmc_data before free().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49031",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: health: afe4403: Fix oob read in afe4403_read_raw\n\nKASAN report out-of-bounds read as follows:\n\nBUG: KASAN: global-out-of-bounds in afe4403_read_raw+0x42e/0x4c0\nRead of size 4 at addr ffffffffc02ac638 by task cat/279\n\nCall Trace:\n afe4403_read_raw\n iio_read_channel_info\n dev_attr_show\n\nThe buggy address belongs to the variable:\n afe4403_channel_leds+0x18/0xffffffffffffe9e0\n\nThis issue can be reproduced by singe command:\n\n $ cat /sys/bus/spi/devices/spi0.0/iio\\:device0/in_intensity6_raw\n\nThe array size of afe4403_channel_leds is less than channels, so access\nwith chan-\u003eaddress cause OOB read in afe4403_read_raw. Fix it by moving\naccess before use it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49032",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: health: afe4404: Fix oob read in afe4404_[read|write]_raw\n\nKASAN report out-of-bounds read as follows:\n\nBUG: KASAN: global-out-of-bounds in afe4404_read_raw+0x2ce/0x380\nRead of size 4 at addr ffffffffc00e4658 by task cat/278\n\nCall Trace:\n afe4404_read_raw\n iio_read_channel_info\n dev_attr_show\n\nThe buggy address belongs to the variable:\n afe4404_channel_leds+0x18/0xffffffffffffe9c0\n\nThis issue can be reproduce by singe command:\n\n $ cat /sys/bus/i2c/devices/0-0058/iio\\:device0/in_intensity6_raw\n\nThe array size of afe4404_channel_leds and afe4404_channel_offdacs\nare less than channels, so access with chan-\u003eaddress cause OOB read\nin afe4404_[read|write]_raw. Fix it by moving access before use them.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-1582",
      "Description": "A race problem was found in fs/proc/task_mmu.c in the memory management sub-component in the Linux kernel. This issue may allow a local attacker with user privilege to cause a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-2166",
      "Description": "A null pointer dereference issue was found in can protocol in net/can/af_can.c in the Linux before Linux. ml_priv may not be initialized in the receive path of CAN frames. A local user could use this flaw to crash the system or potentially cause a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-28327",
      "Description": "A NULL pointer dereference flaw was found in the UNIX protocol in net/unix/diag.c In unix_diag_get_exact in the Linux Kernel. The newly allocated skb does not have sk, leading to a NULL pointer. This flaw allows a local user to crash or potentially cause a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-37453",
      "Description": "An issue was discovered in the USB subsystem in the Linux kernel through 6.4.2. There is an out-of-bounds and crash in read_descriptors in drivers/usb/core/sysfs.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-45142",
      "Description": "OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. A handler wrapper out of the box adds labels `http.user_agent` and `http.method` that have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it. HTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses `httpconv.ServerRequest` that records every value for HTTP `method` and `User-Agent`. In order to be affected, a program has to use the `otelhttp.NewHandler` wrapper and not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc. Version 0.44.0 fixed this issue when the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed. As a workaround to stop being affected, `otelhttp.WithFilter()` can be used, but it requires manual careful configuration to not log certain requests entirely. For convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:containerd-1.7.21-150000.117.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:docker-26.1.5_ce-150000.212.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-47108",
      "Description": "OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. Prior to version 0.46.0, the grpc Unary Server Interceptor out of the box adds labels `net.peer.sock.addr` and `net.peer.sock.port` that have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent. An attacker can easily flood the peer address and port for requests. Version 0.46.0 contains a fix for this issue. As a workaround to stop being affected, a view removing the attributes can be used. The other possibility is to disable grpc metrics instrumentation by passing `otelgrpc.WithMeterProvider` option with `noop.NewMeterProvider`.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:containerd-1.7.21-150000.117.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:docker-26.1.5_ce-150000.212.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-50782",
      "Description": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libopenssl1_1-1.1.1l-150400.7.75.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:openssl-1_1-1.1.1l-150400.7.75.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52489",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/sparsemem: fix race in accessing memory_section-\u003eusage\n\nThe below race is observed on a PFN which falls into the device memory\nregion with the system memory configuration where PFN's are such that\n[ZONE_NORMAL ZONE_DEVICE ZONE_NORMAL].  Since normal zone start and end\npfn contains the device memory PFN's as well, the compaction triggered\nwill try on the device memory PFN's too though they end up in NOP(because\npfn_to_online_page() returns NULL for ZONE_DEVICE memory sections).  When\nfrom other core, the section mappings are being removed for the\nZONE_DEVICE region, that the PFN in question belongs to, on which\ncompaction is currently being operated is resulting into the kernel crash\nwith CONFIG_SPASEMEM_VMEMAP enabled.  The crash logs can be seen at [1].\n\ncompact_zone()\t\t\tmemunmap_pages\n-------------\t\t\t---------------\n__pageblock_pfn_to_page\n   ......\n (a)pfn_valid():\n     valid_section()//return true\n\t\t\t      (b)__remove_pages()-\u003e\n\t\t\t\t  sparse_remove_section()-\u003e\n\t\t\t\t    section_deactivate():\n\t\t\t\t    [Free the array ms-\u003eusage and set\n\t\t\t\t     ms-\u003eusage = NULL]\n     pfn_section_valid()\n     [Access ms-\u003eusage which\n     is NULL]\n\nNOTE: From the above it can be said that the race is reduced to between\nthe pfn_valid()/pfn_section_valid() and the section deactivate with\nSPASEMEM_VMEMAP enabled.\n\nThe commit b943f045a9af(\"mm/sparse: fix kernel crash with\npfn_section_valid check\") tried to address the same problem by clearing\nthe SECTION_HAS_MEM_MAP with the expectation of valid_section() returns\nfalse thus ms-\u003eusage is not accessed.\n\nFix this issue by the below steps:\n\na) Clear SECTION_HAS_MEM_MAP before freeing the -\u003eusage.\n\nb) RCU protected read side critical section will either return NULL\n   when SECTION_HAS_MEM_MAP is cleared or can successfully access -\u003eusage.\n\nc) Free the -\u003eusage with kfree_rcu() and set ms-\u003eusage = NULL.  No\n   attempt will be made to access -\u003eusage after this as the\n   SECTION_HAS_MEM_MAP is cleared thus valid_section() return false.\n\nThanks to David/Pavan for their inputs on this patch.\n\n[1] https://lore.kernel.org/linux-mm/994410bb-89aa-d987-1f50-f514903c55aa@quicinc.com/\n\nOn Snapdragon SoC, with the mentioned memory configuration of PFN's as\n[ZONE_NORMAL ZONE_DEVICE ZONE_NORMAL], we are able to see bunch of\nissues daily while testing on a device farm.\n\nFor this particular issue below is the log.  Though the below log is\nnot directly pointing to the pfn_section_valid(){ ms-\u003eusage;}, when we\nloaded this dump on T32 lauterbach tool, it is pointing.\n\n[  540.578056] Unable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000000\n[  540.578068] Mem abort info:\n[  540.578070]   ESR = 0x0000000096000005\n[  540.578073]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  540.578077]   SET = 0, FnV = 0\n[  540.578080]   EA = 0, S1PTW = 0\n[  540.578082]   FSC = 0x05: level 1 translation fault\n[  540.578085] Data abort info:\n[  540.578086]   ISV = 0, ISS = 0x00000005\n[  540.578088]   CM = 0, WnR = 0\n[  540.579431] pstate: 82400005 (Nzcv daif +PAN -UAO +TCO -DIT -SSBSBTYPE=--)\n[  540.579436] pc : __pageblock_pfn_to_page+0x6c/0x14c\n[  540.579454] lr : compact_zone+0x994/0x1058\n[  540.579460] sp : ffffffc03579b510\n[  540.579463] x29: ffffffc03579b510 x28: 0000000000235800 x27:000000000000000c\n[  540.579470] x26: 0000000000235c00 x25: 0000000000000068 x24:ffffffc03579b640\n[  540.579477] x23: 0000000000000001 x22: ffffffc03579b660 x21:0000000000000000\n[  540.579483] x20: 0000000000235bff x19: ffffffdebf7e3940 x18:ffffffdebf66d140\n[  540.579489] x17: 00000000739ba063 x16: 00000000739ba063 x15:00000000009f4bff\n[  540.579495] x14: 0000008000000000 x13: 0000000000000000 x12:0000000000000001\n[  540.579501] x11: 0000000000000000 x10: 0000000000000000 x9 :ffffff897d2cd440\n[  540.579507] x8 : 0000000000000000 x7 : 0000000000000000 x6 :ffffffc03579b5b4\n[  540.579512] x5 : 0000000000027f25 x4 : ffffffc03579b5b8 x3 :0000000000000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52591",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nreiserfs: Avoid touching renamed directory if parent does not change\n\nThe VFS will not be locking moved directory if its parent does not\nchange. Change reiserfs rename code to avoid touching renamed directory\nif its parent does not change as without locking that can corrupt the\nfilesystem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52762",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-blk: fix implicit overflow on virtio_max_dma_size\n\nThe following codes have an implicit conversion from size_t to u32:\n(u32)max_size = (size_t)virtio_max_dma_size(vdev);\n\nThis may lead overflow, Ex (size_t)4G -\u003e (u32)0. Once\nvirtio_max_dma_size() has a larger size than U32_MAX, use U32_MAX\ninstead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52766",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: mipi-i3c-hci: Fix out of bounds access in hci_dma_irq_handler\n\nDo not loop over ring headers in hci_dma_irq_handler() that are not\nallocated and enabled in hci_dma_init(). Otherwise out of bounds access\nwill occur from rings-\u003eheaders[i] access when i \u003e= number of allocated\nring headers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix htt pktlog locking\n\nThe ath11k active pdevs are protected by RCU but the htt pktlog handling\ncode calling ath11k_mac_get_ar_by_pdev_id() was not marked as a\nread-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: do not accept ACK of bytes we never sent\n\nThis patch is based on a detailed report and ideas from Yepeng Pan\nand Christian Rossow.\n\nACK seq validation is currently following RFC 5961 5.2 guidelines:\n\n   The ACK value is considered acceptable only if\n   it is in the range of ((SND.UNA - MAX.SND.WND) \u003c= SEG.ACK \u003c=\n   SND.NXT).  All incoming segments whose ACK value doesn't satisfy the\n   above condition MUST be discarded and an ACK sent back.  It needs to\n   be noted that RFC 793 on page 72 (fifth check) says: \"If the ACK is a\n   duplicate (SEG.ACK \u003c SND.UNA), it can be ignored.  If the ACK\n   acknowledges something not yet sent (SEG.ACK \u003e SND.NXT) then send an\n   ACK, drop the segment, and return\".  The \"ignored\" above implies that\n   the processing of the incoming data segment continues, which means\n   the ACK value is treated as acceptable.  This mitigation makes the\n   ACK check more stringent since any ACK \u003c SND.UNA wouldn't be\n   accepted, instead only ACKs that are in the range ((SND.UNA -\n   MAX.SND.WND) \u003c= SEG.ACK \u003c= SND.NXT) get through.\n\nThis can be refined for new (and possibly spoofed) flows,\nby not accepting ACK for bytes that were never sent.\n\nThis greatly improves TCP security at a little cost.\n\nI added a Fixes: tag to make sure this patch will reach stable trees,\neven if the 'blamed' patch was adhering to the RFC.\n\ntp-\u003ebytes_acked was added in linux-4.2\n\nFollowing packetdrill test (courtesy of Yepeng Pan) shows\nthe issue at hand:\n\n0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3\n+0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0\n+0 bind(3, ..., ...) = 0\n+0 listen(3, 1024) = 0\n\n// ---------------- Handshake ------------------- //\n\n// when window scale is set to 14 the window size can be extended to\n// 65535 * (2^14) = 1073725440. Linux would accept an ACK packet\n// with ack number in (Server_ISN+1-1073725440. Server_ISN+1)\n// ,though this ack number acknowledges some data never\n// sent by the server.\n\n+0 \u003c S 0:0(0) win 65535 \u003cmss 1400,nop,wscale 14\u003e\n+0 \u003e S. 0:0(0) ack 1 \u003c...\u003e\n+0 \u003c . 1:1(0) ack 1 win 65535\n+0 accept(3, ..., ...) = 4\n\n// For the established connection, we send an ACK packet,\n// the ack packet uses ack number 1 - 1073725300 + 2^32,\n// where 2^32 is used to wrap around.\n// Note: we used 1073725300 instead of 1073725440 to avoid possible\n// edge cases.\n// 1 - 1073725300 + 2^32 = 3221241997\n\n// Oops, old kernels happily accept this packet.\n+0 \u003c . 1:1001(1000) ack 3221241997 win 65535\n\n// After the kernel fix the following will be replaced by a challenge ACK,\n// and prior malicious frame would be dropped.\n+0 \u003e . 1:1(0) ack 1001",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52885",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix UAF in svc_tcp_listen_data_ready()\n\nAfter the listener svc_sock is freed, and before invoking svc_tcp_accept()\nfor the established child sock, there is a window that the newsock\nretaining a freed listener svc_sock in sk_user_data which cloning from\nparent. In the race window, if data is received on the newsock, we will\nobserve use-after-free report in svc_tcp_listen_data_ready().\n\nReproduce by two tasks:\n\n1. while :; do rpc.nfsd 0 ; rpc.nfsd; done\n2. while :; do echo \"\" | ncat -4 127.0.0.1 2049 ; done\n\nKASAN report:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in svc_tcp_listen_data_ready+0x1cf/0x1f0 [sunrpc]\n  Read of size 8 at addr ffff888139d96228 by task nc/102553\n  CPU: 7 PID: 102553 Comm: nc Not tainted 6.3.0+ #18\n  Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020\n  Call Trace:\n   \u003cIRQ\u003e\n   dump_stack_lvl+0x33/0x50\n   print_address_description.constprop.0+0x27/0x310\n   print_report+0x3e/0x70\n   kasan_report+0xae/0xe0\n   svc_tcp_listen_data_ready+0x1cf/0x1f0 [sunrpc]\n   tcp_data_queue+0x9f4/0x20e0\n   tcp_rcv_established+0x666/0x1f60\n   tcp_v4_do_rcv+0x51c/0x850\n   tcp_v4_rcv+0x23fc/0x2e80\n   ip_protocol_deliver_rcu+0x62/0x300\n   ip_local_deliver_finish+0x267/0x350\n   ip_local_deliver+0x18b/0x2d0\n   ip_rcv+0x2fb/0x370\n   __netif_receive_skb_one_core+0x166/0x1b0\n   process_backlog+0x24c/0x5e0\n   __napi_poll+0xa2/0x500\n   net_rx_action+0x854/0xc90\n   __do_softirq+0x1bb/0x5de\n   do_softirq+0xcb/0x100\n   \u003c/IRQ\u003e\n   \u003cTASK\u003e\n   ...\n   \u003c/TASK\u003e\n\n  Allocated by task 102371:\n   kasan_save_stack+0x1e/0x40\n   kasan_set_track+0x21/0x30\n   __kasan_kmalloc+0x7b/0x90\n   svc_setup_socket+0x52/0x4f0 [sunrpc]\n   svc_addsock+0x20d/0x400 [sunrpc]\n   __write_ports_addfd+0x209/0x390 [nfsd]\n   write_ports+0x239/0x2c0 [nfsd]\n   nfsctl_transaction_write+0xac/0x110 [nfsd]\n   vfs_write+0x1c3/0xae0\n   ksys_write+0xed/0x1c0\n   do_syscall_64+0x38/0x90\n   entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\n  Freed by task 102551:\n   kasan_save_stack+0x1e/0x40\n   kasan_set_track+0x21/0x30\n   kasan_save_free_info+0x2a/0x50\n   __kasan_slab_free+0x106/0x190\n   __kmem_cache_free+0x133/0x270\n   svc_xprt_free+0x1e2/0x350 [sunrpc]\n   svc_xprt_destroy_all+0x25a/0x440 [sunrpc]\n   nfsd_put+0x125/0x240 [nfsd]\n   nfsd_svc+0x2cb/0x3c0 [nfsd]\n   write_threads+0x1ac/0x2a0 [nfsd]\n   nfsctl_transaction_write+0xac/0x110 [nfsd]\n   vfs_write+0x1c3/0xae0\n   ksys_write+0xed/0x1c0\n   do_syscall_64+0x38/0x90\n   entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\nFix the UAF by simply doing nothing in svc_tcp_listen_data_ready()\nif state != TCP_LISTEN, that will avoid dereferencing svsk for all\nchild socket.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52893",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngsmi: fix null-deref in gsmi_get_variable\n\nWe can get EFI variables without fetching the attribute, so we must\nallow for that in gsmi.\n\ncommit 859748255b43 (\"efi: pstore: Omit efivars caching EFI varstore\naccess layer\") added a new get_variable call with attr=NULL, which\ntriggers panic in gsmi.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52894",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: f_ncm: fix potential NULL ptr deref in ncm_bitrate()\n\nIn Google internal bug 265639009 we've received an (as yet) unreproducible\ncrash report from an aarch64 GKI 5.10.149-android13 running device.\n\nAFAICT the source code is at:\n  https://android.googlesource.com/kernel/common/+/refs/tags/ASB-2022-12-05_13-5.10\n\nThe call stack is:\n  ncm_close() -\u003e ncm_notify() -\u003e ncm_do_notify()\nwith the crash at:\n  ncm_do_notify+0x98/0x270\nCode: 79000d0b b9000a6c f940012a f9400269 (b9405d4b)\n\nWhich I believe disassembles to (I don't know ARM assembly, but it looks sane enough to me...):\n\n  // halfword (16-bit) store presumably to event-\u003ewLength (at offset 6 of struct usb_cdc_notification)\n  0B 0D 00 79    strh w11, [x8, #6]\n\n  // word (32-bit) store presumably to req-\u003eLength (at offset 8 of struct usb_request)\n  6C 0A 00 B9    str  w12, [x19, #8]\n\n  // x10 (NULL) was read here from offset 0 of valid pointer x9\n  // IMHO we're reading 'cdev-\u003egadget' and getting NULL\n  // gadget is indeed at offset 0 of struct usb_composite_dev\n  2A 01 40 F9    ldr  x10, [x9]\n\n  // loading req-\u003ebuf pointer, which is at offset 0 of struct usb_request\n  69 02 40 F9    ldr  x9, [x19]\n\n  // x10 is null, crash, appears to be attempt to read cdev-\u003egadget-\u003emax_speed\n  4B 5D 40 B9    ldr  w11, [x10, #0x5c]\n\nwhich seems to line up with ncm_do_notify() case NCM_NOTIFY_SPEED code fragment:\n\n  event-\u003ewLength = cpu_to_le16(8);\n  req-\u003elength = NCM_STATUS_BYTECOUNT;\n\n  /* SPEED_CHANGE data is up/down speeds in bits/sec */\n  data = req-\u003ebuf + sizeof *event;\n  data[0] = cpu_to_le32(ncm_bitrate(cdev-\u003egadget));\n\nMy analysis of registers and NULL ptr deref crash offset\n  (Unable to handle kernel NULL pointer dereference at virtual address 000000000000005c)\nheavily suggests that the crash is due to 'cdev-\u003egadget' being NULL when executing:\n  data[0] = cpu_to_le32(ncm_bitrate(cdev-\u003egadget));\nwhich calls:\n  ncm_bitrate(NULL)\nwhich then calls:\n  gadget_is_superspeed(NULL)\nwhich reads\n  ((struct usb_gadget *)NULL)-\u003emax_speed\nand hits a panic.\n\nAFAICT, if I'm counting right, the offset of max_speed is indeed 0x5C.\n(remember there's a GKI KABI reservation of 16 bytes in struct work_struct)\n\nIt's not at all clear to me how this is all supposed to work...\nbut returning 0 seems much better than panic-ing...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52896",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix race between quota rescan and disable leading to NULL pointer deref\n\nIf we have one task trying to start the quota rescan worker while another\none is trying to disable quotas, we can end up hitting a race that results\nin the quota rescan worker doing a NULL pointer dereference. The steps for\nthis are the following:\n\n1) Quotas are enabled;\n\n2) Task A calls the quota rescan ioctl and enters btrfs_qgroup_rescan().\n   It calls qgroup_rescan_init() which returns 0 (success) and then joins a\n   transaction and commits it;\n\n3) Task B calls the quota disable ioctl and enters btrfs_quota_disable().\n   It clears the bit BTRFS_FS_QUOTA_ENABLED from fs_info-\u003eflags and calls\n   btrfs_qgroup_wait_for_completion(), which returns immediately since the\n   rescan worker is not yet running.\n   Then it starts a transaction and locks fs_info-\u003eqgroup_ioctl_lock;\n\n4) Task A queues the rescan worker, by calling btrfs_queue_work();\n\n5) The rescan worker starts, and calls rescan_should_stop() at the start\n   of its while loop, which results in 0 iterations of the loop, since\n   the flag BTRFS_FS_QUOTA_ENABLED was cleared from fs_info-\u003eflags by\n   task B at step 3);\n\n6) Task B sets fs_info-\u003equota_root to NULL;\n\n7) The rescan worker tries to start a transaction and uses\n   fs_info-\u003equota_root as the root argument for btrfs_start_transaction().\n   This results in a NULL pointer dereference down the call chain of\n   btrfs_start_transaction(). The stack trace is something like the one\n   reported in Link tag below:\n\n   general protection fault, probably for non-canonical address 0xdffffc0000000041: 0000 [#1] PREEMPT SMP KASAN\n   KASAN: null-ptr-deref in range [0x0000000000000208-0x000000000000020f]\n   CPU: 1 PID: 34 Comm: kworker/u4:2 Not tainted 6.1.0-syzkaller-13872-gb6bb9676f216 #0\n   Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022\n   Workqueue: btrfs-qgroup-rescan btrfs_work_helper\n   RIP: 0010:start_transaction+0x48/0x10f0 fs/btrfs/transaction.c:564\n   Code: 48 89 fb 48 (...)\n   RSP: 0018:ffffc90000ab7ab0 EFLAGS: 00010206\n   RAX: 0000000000000041 RBX: 0000000000000208 RCX: ffff88801779ba80\n   RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000000\n   RBP: dffffc0000000000 R08: 0000000000000001 R09: fffff52000156f5d\n   R10: fffff52000156f5d R11: 1ffff92000156f5c R12: 0000000000000000\n   R13: 0000000000000001 R14: 0000000000000001 R15: 0000000000000003\n   FS:  0000000000000000(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   CR2: 00007f2bea75b718 CR3: 000000001d0cc000 CR4: 00000000003506e0\n   DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n   DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n   Call Trace:\n    \u003cTASK\u003e\n    btrfs_qgroup_rescan_worker+0x3bb/0x6a0 fs/btrfs/qgroup.c:3402\n    btrfs_work_helper+0x312/0x850 fs/btrfs/async-thread.c:280\n    process_one_work+0x877/0xdb0 kernel/workqueue.c:2289\n    worker_thread+0xb14/0x1330 kernel/workqueue.c:2436\n    kthread+0x266/0x300 kernel/kthread.c:376\n    ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:308\n    \u003c/TASK\u003e\n   Modules linked in:\n\nSo fix this by having the rescan worker function not attempt to start a\ntransaction if it didn't do any rescan work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxhci: Fix null pointer dereference when host dies\n\nMake sure xhci_free_dev() and xhci_kill_endpoint_urbs() do not race\nand cause null pointer dereference when host suddenly dies.\n\nUsb core may call xhci_free_dev() which frees the xhci-\u003edevs[slot_id]\nvirt device at the same time that xhci_kill_endpoint_urbs() tries to\nloop through all the device's endpoints, checking if there are any\ncancelled urbs left to give back.\n\nhold the xhci spinlock while freeing the virt device",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix general protection fault in nilfs_btree_insert()\n\nIf nilfs2 reads a corrupted disk image and tries to reads a b-tree node\nblock by calling __nilfs_btree_get_block() against an invalid virtual\nblock address, it returns -ENOENT because conversion of the virtual block\naddress to a disk block address fails.  However, this return value is the\nsame as the internal code that b-tree lookup routines return to indicate\nthat the block being searched does not exist, so functions that operate on\nthat b-tree may misbehave.\n\nWhen nilfs_btree_insert() receives this spurious 'not found' code from\nnilfs_btree_do_lookup(), it misunderstands that the 'not found' check was\nsuccessful and continues the insert operation using incomplete lookup path\ndata, causing the following crash:\n\n general protection fault, probably for non-canonical address\n 0xdffffc0000000005: 0000 [#1] PREEMPT SMP KASAN\n KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]\n ...\n RIP: 0010:nilfs_btree_get_nonroot_node fs/nilfs2/btree.c:418 [inline]\n RIP: 0010:nilfs_btree_prepare_insert fs/nilfs2/btree.c:1077 [inline]\n RIP: 0010:nilfs_btree_insert+0x6d3/0x1c10 fs/nilfs2/btree.c:1238\n Code: bc 24 80 00 00 00 4c 89 f8 48 c1 e8 03 42 80 3c 28 00 74 08 4c 89\n ff e8 4b 02 92 fe 4d 8b 3f 49 83 c7 28 4c 89 f8 48 c1 e8 03 \u003c42\u003e 80 3c\n 28 00 74 08 4c 89 ff e8 2e 02 92 fe 4d 8b 3f 49 83 c7 02\n ...\n Call Trace:\n \u003cTASK\u003e\n  nilfs_bmap_do_insert fs/nilfs2/bmap.c:121 [inline]\n  nilfs_bmap_insert+0x20d/0x360 fs/nilfs2/bmap.c:147\n  nilfs_get_block+0x414/0x8d0 fs/nilfs2/inode.c:101\n  __block_write_begin_int+0x54c/0x1a80 fs/buffer.c:1991\n  __block_write_begin fs/buffer.c:2041 [inline]\n  block_write_begin+0x93/0x1e0 fs/buffer.c:2102\n  nilfs_write_begin+0x9c/0x110 fs/nilfs2/inode.c:261\n  generic_perform_write+0x2e4/0x5e0 mm/filemap.c:3772\n  __generic_file_write_iter+0x176/0x400 mm/filemap.c:3900\n  generic_file_write_iter+0xab/0x310 mm/filemap.c:3932\n  call_write_iter include/linux/fs.h:2186 [inline]\n  new_sync_write fs/read_write.c:491 [inline]\n  vfs_write+0x7dc/0xc50 fs/read_write.c:584\n  ksys_write+0x177/0x2a0 fs/read_write.c:637\n  do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n  do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n  entry_SYSCALL_64_after_hwframe+0x63/0xcd\n ...\n \u003c/TASK\u003e\n\nThis patch fixes the root cause of this problem by replacing the error\ncode that __nilfs_btree_get_block() returns on block address conversion\nfailure from -ENOENT to another internal code -EINVAL which means that the\nb-tree metadata is corrupted.\n\nBy returning -EINVAL, it propagates without glitches, and for all relevant\nb-tree operations, functions in the upper bmap layer output an error\nmessage indicating corrupted b-tree metadata via\nnilfs_bmap_convert_error(), and code -EIO will be eventually returned as\nit should be.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Check endpoint is valid before dereferencing it\n\nWhen the host controller is not responding, all URBs queued to all\nendpoints need to be killed. This can cause a kernel panic if we\ndereference an invalid endpoint.\n\nFix this by using xhci_get_virt_ep() helper to find the endpoint and\nchecking if the endpoint is valid before dereferencing it.\n\n[233311.853271] xhci-hcd xhci-hcd.1.auto: xHCI host controller not responding, assume dead\n[233311.853393] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000e8\n\n[233311.853964] pc : xhci_hc_died+0x10c/0x270\n[233311.853971] lr : xhci_hc_died+0x1ac/0x270\n\n[233311.854077] Call trace:\n[233311.854085]  xhci_hc_died+0x10c/0x270\n[233311.854093]  xhci_stop_endpoint_command_watchdog+0x100/0x1a4\n[233311.854105]  call_timer_fn+0x50/0x2d4\n[233311.854112]  expire_timers+0xac/0x2e4\n[233311.854118]  run_timer_softirq+0x300/0xabc\n[233311.854127]  __do_softirq+0x148/0x528\n[233311.854135]  irq_exit+0x194/0x1a8\n[233311.854143]  __handle_domain_irq+0x164/0x1d0\n[233311.854149]  gic_handle_irq.22273+0x10c/0x188\n[233311.854156]  el1_irq+0xfc/0x1a8\n[233311.854175]  lpm_cpuidle_enter+0x25c/0x418 [msm_pm]\n[233311.854185]  cpuidle_enter_state+0x1f0/0x764\n[233311.854194]  do_idle+0x594/0x6ac\n[233311.854201]  cpu_startup_entry+0x7c/0x80\n[233311.854209]  secondary_start_kernel+0x170/0x198",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix resource leakage in VF driver unbind\n\nresources allocated like mcam entries to support the Ntuple feature\nand hash tables for the tc feature are not getting freed in driver\nunbind. This patch fixes the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52907",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Wait for out_urb's completion in pn533_usb_send_frame()\n\nFix a use-after-free that occurs in hcd when in_urb sent from\npn533_usb_send_frame() is completed earlier than out_urb. Its callback\nfrees the skb data in pn533_send_async_complete() that is used as a\ntransfer buffer of out_urb. Wait before sending in_urb until the\ncallback of out_urb is called. To modify the callback of out_urb alone,\nseparate the complete function of out_urb and ack_urb.\n\nFound by a modified version of syzkaller.\n\nBUG: KASAN: use-after-free in dummy_timer\nCall Trace:\n memcpy (mm/kasan/shadow.c:65)\n dummy_perform_transfer (drivers/usb/gadget/udc/dummy_hcd.c:1352)\n transfer (drivers/usb/gadget/udc/dummy_hcd.c:1453)\n dummy_timer (drivers/usb/gadget/udc/dummy_hcd.c:1972)\n arch_static_branch (arch/x86/include/asm/jump_label.h:27)\n static_key_false (include/linux/jump_label.h:207)\n timer_expire_exit (include/trace/events/timer.h:127)\n call_timer_fn (kernel/time/timer.c:1475)\n expire_timers (kernel/time/timer.c:1519)\n __run_timers (kernel/time/timer.c:1790)\n run_timer_softirq (kernel/time/timer.c:1803)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm: another fix for the headless Adreno GPU\n\nFix another oops reproducible when rebooting the board with the Adreno\nGPU working in the headless mode (e.g. iMX platforms).\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000 when read\n[00000000] *pgd=74936831, *pte=00000000, *ppte=00000000\nInternal error: Oops: 17 [#1] ARM\nCPU: 0 PID: 51 Comm: reboot Not tainted 6.2.0-rc1-dirty #11\nHardware name: Freescale i.MX53 (Device Tree Support)\nPC is at msm_atomic_commit_tail+0x50/0x970\nLR is at commit_tail+0x9c/0x188\npc : [\u003cc06aa430\u003e]    lr : [\u003cc067a214\u003e]    psr: 600e0013\nsp : e0851d30  ip : ee4eb7eb  fp : 00090acc\nr10: 00000058  r9 : c2193014  r8 : c4310000\nr7 : c4759380  r6 : 07bef61d  r5 : 00000000  r4 : 00000000\nr3 : c44cc440  r2 : 00000000  r1 : 00000000  r0 : 00000000\nFlags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\nControl: 10c5387d  Table: 74910019  DAC: 00000051\nRegister r0 information: NULL pointer\nRegister r1 information: NULL pointer\nRegister r2 information: NULL pointer\nRegister r3 information: slab kmalloc-1k start c44cc400 pointer offset 64 size 1024\nRegister r4 information: NULL pointer\nRegister r5 information: NULL pointer\nRegister r6 information: non-paged memory\nRegister r7 information: slab kmalloc-128 start c4759380 pointer offset 0 size 128\nRegister r8 information: slab kmalloc-2k start c4310000 pointer offset 0 size 2048\nRegister r9 information: non-slab/vmalloc memory\nRegister r10 information: non-paged memory\nRegister r11 information: non-paged memory\nRegister r12 information: non-paged memory\nProcess reboot (pid: 51, stack limit = 0xc80046d9)\nStack: (0xe0851d30 to 0xe0852000)\n1d20:                                     c4759380 fbd77200 000005ff 002b9c70\n1d40: c4759380 c4759380 00000000 07bef61d 00000600 c0d6fe7c c2193014 00000058\n1d60: 00090acc c067a214 00000000 c4759380 c4310000 00000000 c44cc854 c067a89c\n1d80: 00000000 00000000 00000000 c4310468 00000000 c4759380 c4310000 c4310468\n1da0: c4310470 c0643258 c4759380 00000000 00000000 c0c4ee24 00000000 c44cc810\n1dc0: 00000000 c0c4ee24 00000000 c44cc810 00000000 0347d2a8 e0851e00 e0851e00\n1de0: c4759380 c067ad20 c4310000 00000000 c44cc810 c27f8718 c44cc854 c067adb8\n1e00: c4933000 00000002 00000001 00000000 00000000 c2130850 00000000 c2130854\n1e20: c25fc488 00000000 c0ff162c 00000000 00000001 00000002 00000000 00000000\n1e40: c43102c0 c43102c0 00000000 0347d2a8 c44cc810 c44cc814 c2133da8 c06d1a60\n1e60: 00000000 00000000 00079028 c2012f24 fee1dead c4933000 00000058 c01431e4\n1e80: 01234567 c0143a20 00000000 00000000 00000000 00000000 00000000 00000000\n1ea0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1ec0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1ee0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1f00: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1f20: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1f40: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1f60: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n1f80: 00000000 00000000 00000000 0347d2a8 00000002 00000004 00000078 00000058\n1fa0: c010028c c0100060 00000002 00000004 fee1dead 28121969 01234567 00079028\n1fc0: 00000002 00000004 00000078 00000058 0002fdc5 00000000 00000000 00090acc\n1fe0: 00000058 becc9c64 b6e97e05 b6e0e5f6 600e0030 fee1dead 00000000 00000000\n msm_atomic_commit_tail from commit_tail+0x9c/0x188\n commit_tail from drm_atomic_helper_commit+0x160/0x188\n drm_atomic_helper_commit from drm_atomic_commit+0xac/0xe0\n drm_atomic_commit from drm_atomic_helper_disable_all+0x1b0/0x1c0\n drm_atomic_helper_disable_all from drm_atomic_helper_shutdown+0x88/0x140\n drm_atomic_helper_shutdown from device_shutdown+0x16c/0x240\n device_shutdown from kernel_restart+0x38/0x90\n kernel_restart from __do_sys_reboot+0x\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: fix possible NULL pointer dereference in send_acknowledge()\n\nHandle memory allocation failure from nci_skb_alloc() (calling\nalloc_skb()) to avoid possible NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: bcm: Fix UAF in bcm_proc_show()\n\nBUG: KASAN: slab-use-after-free in bcm_proc_show+0x969/0xa80\nRead of size 8 at addr ffff888155846230 by task cat/7862\n\nCPU: 1 PID: 7862 Comm: cat Not tainted 6.5.0-rc1-00153-gc8746099c197 #230\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0xd5/0x150\n print_report+0xc1/0x5e0\n kasan_report+0xba/0xf0\n bcm_proc_show+0x969/0xa80\n seq_read_iter+0x4f6/0x1260\n seq_read+0x165/0x210\n proc_reg_read+0x227/0x300\n vfs_read+0x1d5/0x8d0\n ksys_read+0x11e/0x240\n do_syscall_64+0x35/0xb0\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nAllocated by task 7846:\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x21/0x30\n __kasan_kmalloc+0x9e/0xa0\n bcm_sendmsg+0x264b/0x44e0\n sock_sendmsg+0xda/0x180\n ____sys_sendmsg+0x735/0x920\n ___sys_sendmsg+0x11d/0x1b0\n __sys_sendmsg+0xfa/0x1d0\n do_syscall_64+0x35/0xb0\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nFreed by task 7846:\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x21/0x30\n kasan_save_free_info+0x27/0x40\n ____kasan_slab_free+0x161/0x1c0\n slab_free_freelist_hook+0x119/0x220\n __kmem_cache_free+0xb4/0x2e0\n rcu_core+0x809/0x1bd0\n\nbcm_op is freed before procfs entry be removed in bcm_release(),\nthis lead to bcm_proc_show() may read the freed bcm_op.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-6270",
      "Description": "A flaw was found in the ATA over Ethernet (AoE) driver in the Linux kernel. The aoecmd_cfg_pkts() function improperly updates the refcnt on `struct net_device`, and a use-after-free can be triggered by racing between the free on the struct and the access through the `skbtxq` global queue. This could lead to a denial of service condition or potential code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-7256",
      "Description": "In affected libpcap versions during the setup of a remote packet capture the internal function sock_initaddress() calls getaddrinfo() and possibly freeaddrinfo(), but does not clearly indicate to the caller function whether freeaddrinfo() still remains to be called after the function returns.  This makes it possible in some scenarios that both the function and its caller call freeaddrinfo() for the same allocated memory block.  A similar problem was reported in Apple libpcap, to which Apple assigned CVE-2023-40400.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libpcap1-1.10.1-150400.3.6.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-10524",
      "Description": "Applications that use Wget to access a remote resource using shorthand URLs and pass arbitrary user credentials in the URL are vulnerable. In these cases attackers can enter crafted credentials which will cause Wget to access an arbitrary host.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:wget-1.20.3-150000.3.26.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-11053",
      "Description": "When asked to both use a `.netrc` file for credentials and to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has an entry that matches\nthe redirect target hostname but the entry either omits just the password or\nomits both login and password.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:curl-8.0.1-150400.5.59.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libcurl4-8.0.1-150400.5.59.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-11168",
      "Description": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-3.6.15-150300.10.78.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-curses-3.6.15-150300.10.78.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-1737",
      "Description": "Resolver caches and authoritative zone databases that hold significant numbers of RRs for the same hostname (of any RTYPE) can suffer from degraded performance as content is being added or updated, and also when handling client queries for this name.\nThis issue affects BIND 9 versions 9.11.0 through 9.11.37, 9.16.0 through 9.16.50, 9.18.0 through 9.18.27, 9.19.0 through 9.19.24, 9.11.4-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.50-S1, and 9.18.11-S1 through 9.18.27-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:bind-utils-9.16.50-150400.5.43.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-bind-9.16.50-150400.5.43.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-1975",
      "Description": "If a server hosts a zone containing a \"KEY\" Resource Record, or a resolver DNSSEC-validates a \"KEY\" Resource Record from a DNSSEC-signed domain in cache, a client can exhaust resolver CPU resources by sending a stream of SIG(0) signed requests.\nThis issue affects BIND 9 versions 9.0.0 through 9.11.37, 9.16.0 through 9.16.50, 9.18.0 through 9.18.27, 9.19.0 through 9.19.24, 9.9.3-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.49-S1, and 9.18.11-S1 through 9.18.27-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:bind-utils-9.16.50-150400.5.43.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-bind-9.16.50-150400.5.43.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2201",
      "Description": "A cross-privilege Spectre v2 vulnerability allows attackers to bypass all deployed mitigations, including the recent Fine(IBT), and to leak arbitrary Linux kernel memory on Intel systems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26583",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between async notify and socket close\n\nThe submitting thread (one which called recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete()\nso any code past that point risks touching already freed data.\n\nTry to avoid the locking and extra flags altogether.\nHave the main thread hold an extra reference, this way\nwe can depend solely on the atomic ref counter for\nsynchronization.\n\nDon't futz with reiniting the completion, either, we are now\ntightly controlling when completion fires.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26584",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tls: handle backlogging of crypto requests\n\nSince we're setting the CRYPTO_TFM_REQ_MAY_BACKLOG flag on our\nrequests to the crypto API, crypto_aead_{encrypt,decrypt} can return\n -EBUSY instead of -EINPROGRESS in valid situations. For example, when\nthe cryptd queue for AESNI is full (easy to trigger with an\nartificially low cryptd.cryptd_max_cpu_qlen), requests will be enqueued\nto the backlog but still processed. In that case, the async callback\nwill also be called twice: first with err == -EINPROGRESS, which it\nseems we can just ignore, then with err == 0.\n\nCompared to Sabrina's original patch this version uses the new\ntls_*crypt_async_wait() helpers and converts the EBUSY to\nEINPROGRESS to avoid having to modify all the error handling\npaths. The handling is identical.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26585",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix race between tx work scheduling and socket close\n\nSimilarly to previous commit, the submitting thread (recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete().\nReorder scheduling the work before calling complete().\nThis seems more logical in the first place, as it's\nthe inverse order of what the submitting thread will do.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26782",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix double-free on socket dismantle\n\nwhen MPTCP server accepts an incoming connection, it clones its listener\nsocket. However, the pointer to 'inet_opt' for the new socket has the same\nvalue as the original one: as a consequence, on program exit it's possible\nto observe the following splat:\n\n  BUG: KASAN: double-free in inet_sock_destruct+0x54f/0x8b0\n  Free of addr ffff888485950880 by task swapper/25/0\n\n  CPU: 25 PID: 0 Comm: swapper/25 Kdump: loaded Not tainted 6.8.0-rc1+ #609\n  Hardware name: Supermicro SYS-6027R-72RF/X9DRH-7TF/7F/iTF/iF, BIOS 3.0  07/26/2013\n  Call Trace:\n   \u003cIRQ\u003e\n   dump_stack_lvl+0x32/0x50\n   print_report+0xca/0x620\n   kasan_report_invalid_free+0x64/0x90\n   __kasan_slab_free+0x1aa/0x1f0\n   kfree+0xed/0x2e0\n   inet_sock_destruct+0x54f/0x8b0\n   __sk_destruct+0x48/0x5b0\n   rcu_do_batch+0x34e/0xd90\n   rcu_core+0x559/0xac0\n   __do_softirq+0x183/0x5a4\n   irq_exit_rcu+0x12d/0x170\n   sysvec_apic_timer_interrupt+0x6b/0x80\n   \u003c/IRQ\u003e\n   \u003cTASK\u003e\n   asm_sysvec_apic_timer_interrupt+0x16/0x20\n  RIP: 0010:cpuidle_enter_state+0x175/0x300\n  Code: 30 00 0f 84 1f 01 00 00 83 e8 01 83 f8 ff 75 e5 48 83 c4 18 44 89 e8 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc fb 45 85 ed \u003c0f\u003e 89 60 ff ff ff 48 c1 e5 06 48 c7 43 18 00 00 00 00 48 83 44 2b\n  RSP: 0018:ffff888481cf7d90 EFLAGS: 00000202\n  RAX: 0000000000000000 RBX: ffff88887facddc8 RCX: 0000000000000000\n  RDX: 1ffff1110ff588b1 RSI: 0000000000000019 RDI: ffff88887fac4588\n  RBP: 0000000000000004 R08: 0000000000000002 R09: 0000000000043080\n  R10: 0009b02ea273363f R11: ffff88887fabf42b R12: ffffffff932592e0\n  R13: 0000000000000004 R14: 0000000000000000 R15: 00000022c880ec80\n   cpuidle_enter+0x4a/0xa0\n   do_idle+0x310/0x410\n   cpu_startup_entry+0x51/0x60\n   start_secondary+0x211/0x270\n   secondary_startup_64_no_verify+0x184/0x18b\n   \u003c/TASK\u003e\n\n  Allocated by task 6853:\n   kasan_save_stack+0x1c/0x40\n   kasan_save_track+0x10/0x30\n   __kasan_kmalloc+0xa6/0xb0\n   __kmalloc+0x1eb/0x450\n   cipso_v4_sock_setattr+0x96/0x360\n   netlbl_sock_setattr+0x132/0x1f0\n   selinux_netlbl_socket_post_create+0x6c/0x110\n   selinux_socket_post_create+0x37b/0x7f0\n   security_socket_post_create+0x63/0xb0\n   __sock_create+0x305/0x450\n   __sys_socket_create.part.23+0xbd/0x130\n   __sys_socket+0x37/0xb0\n   __x64_sys_socket+0x6f/0xb0\n   do_syscall_64+0x83/0x160\n   entry_SYSCALL_64_after_hwframe+0x6e/0x76\n\n  Freed by task 6858:\n   kasan_save_stack+0x1c/0x40\n   kasan_save_track+0x10/0x30\n   kasan_save_free_info+0x3b/0x60\n   __kasan_slab_free+0x12c/0x1f0\n   kfree+0xed/0x2e0\n   inet_sock_destruct+0x54f/0x8b0\n   __sk_destruct+0x48/0x5b0\n   subflow_ulp_release+0x1f0/0x250\n   tcp_cleanup_ulp+0x6e/0x110\n   tcp_v4_destroy_sock+0x5a/0x3a0\n   inet_csk_destroy_sock+0x135/0x390\n   tcp_fin+0x416/0x5c0\n   tcp_data_queue+0x1bc8/0x4310\n   tcp_rcv_state_process+0x15a3/0x47b0\n   tcp_v4_do_rcv+0x2c1/0x990\n   tcp_v4_rcv+0x41fb/0x5ed0\n   ip_protocol_deliver_rcu+0x6d/0x9f0\n   ip_local_deliver_finish+0x278/0x360\n   ip_local_deliver+0x182/0x2c0\n   ip_rcv+0xb5/0x1c0\n   __netif_receive_skb_one_core+0x16e/0x1b0\n   process_backlog+0x1e3/0x650\n   __napi_poll+0xa6/0x500\n   net_rx_action+0x740/0xbb0\n   __do_softirq+0x183/0x5a4\n\n  The buggy address belongs to the object at ffff888485950880\n   which belongs to the cache kmalloc-64 of size 64\n  The buggy address is located 0 bytes inside of\n   64-byte region [ffff888485950880, ffff8884859508c0)\n\n  The buggy address belongs to the physical page:\n  page:0000000056d1e95e refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888485950700 pfn:0x485950\n  flags: 0x57ffffc0000800(slab|node=1|zone=2|lastcpupid=0x1fffff)\n  page_type: 0xffffffff()\n  raw: 0057ffffc0000800 ffff88810004c640 ffffea00121b8ac0 dead000000000006\n  raw: ffff888485950700 0000000000200019 00000001ffffffff 0000000000000000\n  page dumped because: kasan: bad access detected\n\n  Memory state around the buggy address:\n   ffff888485950780: fa fb fb\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix use-after-free on failed backlog decryption\n\nWhen the decrypt request goes to the backlog and crypto_aead_decrypt\nreturns -EBUSY, tls_do_decryption will wait until all async\ndecryptions have completed. If one of them fails, tls_do_decryption\nwill return -EBADMSG and tls_decrypt_sg jumps to the error path,\nreleasing all the pages. But the pages have been passed to the async\ncallback, and have already been released by tls_decrypt_done.\n\nThe only true async case is when crypto_aead_decrypt returns\n -EINPROGRESS. With -EBUSY, we already waited so we can tell\ntls_sw_recvmsg that the data is available for immediate copy, but we\nneed to notify tls_decrypt_sg (via the new -\u003easync_done flag) that the\nmemory has already been released.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/platform: Create persistent IRQ handlers\n\nThe vfio-platform SET_IRQS ioctl currently allows loopback triggering of\nan interrupt before a signaling eventfd has been configured by the user,\nwhich thereby allows a NULL pointer dereference.\n\nRather than register the IRQ relative to a valid trigger, register all\nIRQs in a disabled state in the device open path.  This allows mask\noperations on the IRQ to nest within the overall enable state governed\nby a valid eventfd signal.  This decouples @masked, protected by the\n@locked spinlock from @trigger, protected via the @igate mutex.\n\nIn doing so, it's guaranteed that changes to @trigger cannot race the\nIRQ handlers because the IRQ handler is synchronously disabled before\nmodifying the trigger, and loopback triggering of the IRQ via ioctl is\nsafe due to serialization with trigger changes via igate.\n\nFor compatibility, request_irq() failures are maintained to be local to\nthe SET_IRQS ioctl rather than a fatal error in the open device path.\nThis allows, for example, a userspace driver with polling mode support\nto continue to work regardless of moving the request_irq() call site.\nThis necessarily blocks all SET_IRQS access to the failed index.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfio/fsl-mc: Block calling interrupt handler without trigger\n\nThe eventfd_ctx trigger pointer of the vfio_fsl_mc_irq object is\ninitially NULL and may become NULL if the user sets the trigger\neventfd to -1.  The interrupt handler itself is guaranteed that\ntrigger is always valid between request_irq() and free_irq(), but\nthe loopback testing mechanisms to invoke the handler function\nneed to test the trigger.  The triggering and setting ioctl paths\nboth make use of igate and are therefore mutually exclusive.\n\nThe vfio-fsl-mc driver does not make use of irqfds, nor does it\nsupport any sort of masking operations, therefore unlike vfio-pci\nand vfio-platform, the flow can remain essentially unchanged.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26976",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Always flush async #PF workqueue when vCPU is being destroyed\n\nAlways flush the per-vCPU async #PF workqueue when a vCPU is clearing its\ncompletion queue, e.g. when a VM and all its vCPUs is being destroyed.\nKVM must ensure that none of its workqueue callbacks is running when the\nlast reference to the KVM _module_ is put.  Gifting a reference to the\nassociated VM prevents the workqueue callback from dereferencing freed\nvCPU/VM memory, but does not prevent the KVM module from being unloaded\nbefore the callback completes.\n\nDrop the misguided VM refcount gifting, as calling kvm_put_kvm() from\nasync_pf_execute() if kvm_put_kvm() flushes the async #PF workqueue will\nresult in deadlock.  async_pf_execute() can't return until kvm_put_kvm()\nfinishes, and kvm_put_kvm() can't return until async_pf_execute() finishes:\n\n WARNING: CPU: 8 PID: 251 at virt/kvm/kvm_main.c:1435 kvm_put_kvm+0x2d/0x320 [kvm]\n Modules linked in: vhost_net vhost vhost_iotlb tap kvm_intel kvm irqbypass\n CPU: 8 PID: 251 Comm: kworker/8:1 Tainted: G        W          6.6.0-rc1-e7af8d17224a-x86/gmem-vm #119\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n Workqueue: events async_pf_execute [kvm]\n RIP: 0010:kvm_put_kvm+0x2d/0x320 [kvm]\n Call Trace:\n  \u003cTASK\u003e\n  async_pf_execute+0x198/0x260 [kvm]\n  process_one_work+0x145/0x2d0\n  worker_thread+0x27e/0x3a0\n  kthread+0xba/0xe0\n  ret_from_fork+0x2d/0x50\n  ret_from_fork_asm+0x11/0x20\n  \u003c/TASK\u003e\n ---[ end trace 0000000000000000 ]---\n INFO: task kworker/8:1:251 blocked for more than 120 seconds.\n       Tainted: G        W          6.6.0-rc1-e7af8d17224a-x86/gmem-vm #119\n \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n task:kworker/8:1     state:D stack:0     pid:251   ppid:2      flags:0x00004000\n Workqueue: events async_pf_execute [kvm]\n Call Trace:\n  \u003cTASK\u003e\n  __schedule+0x33f/0xa40\n  schedule+0x53/0xc0\n  schedule_timeout+0x12a/0x140\n  __wait_for_common+0x8d/0x1d0\n  __flush_work.isra.0+0x19f/0x2c0\n  kvm_clear_async_pf_completion_queue+0x129/0x190 [kvm]\n  kvm_arch_destroy_vm+0x78/0x1b0 [kvm]\n  kvm_put_kvm+0x1c1/0x320 [kvm]\n  async_pf_execute+0x198/0x260 [kvm]\n  process_one_work+0x145/0x2d0\n  worker_thread+0x27e/0x3a0\n  kthread+0xba/0xe0\n  ret_from_fork+0x2d/0x50\n  ret_from_fork_asm+0x11/0x20\n  \u003c/TASK\u003e\n\nIf kvm_clear_async_pf_completion_queue() actually flushes the workqueue,\nthen there's no need to gift async_pf_execute() a reference because all\ninvocations of async_pf_execute() will be forced to complete before the\nvCPU and its VM are destroyed/freed.  And that in turn fixes the module\nunloading bug as __fput() won't do module_put() on the last vCPU reference\nuntil the vCPU has been freed, e.g. if closing the vCPU file also puts the\nlast reference to the KVM module.\n\nNote that kvm_check_async_pf_completion() may also take the work item off\nthe completion queue and so also needs to flush the work queue, as the\nwork will not be seen by kvm_clear_async_pf_completion_queue().  Waiting\non the workqueue could theoretically delay a vCPU due to waiting for the\nwork to complete, but that's a very, very small chance, and likely a very\nsmall delay.  kvm_arch_async_page_present_queued() unconditionally makes a\nnew request, i.e. will effectively delay entering the guest, so the\nremaining work is really just:\n\n        trace_kvm_async_pf_completed(addr, cr2_or_gpa);\n\n        __kvm_vcpu_wake_up(vcpu);\n\n        mmput(mm);\n\nand mmput() can't drop the last reference to the page tables if the vCPU is\nstill alive, i.e. the vCPU won't get stuck tearing down page tables.\n\nAdd a helper to do the flushing, specifically to deal with \"wakeup all\"\nwork items, as they aren't actually work items, i.e. are never placed in a\nworkqueue.  Trying to flush a bogus workqueue entry rightly makes\n__flush_work() complain (kudos to whoever added that sanity check).\n\nNote, commit 5f6de5cbebee (\"KVM: Prevent module exit until al\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: edia: dvbdev: fix a use-after-free\n\nIn dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed\nin several error-handling paths. However, *pdvbdev is not set to NULL\nafter dvbdev's deallocation, causing use-after-frees in many places,\nfor example, in the following call chain:\n\nbudget_register\n  |-\u003e dvb_dmxdev_init\n        |-\u003e dvb_register_device\n  |-\u003e dvb_dmxdev_release\n        |-\u003e dvb_unregister_device\n              |-\u003e dvb_remove_device\n                    |-\u003e dvb_device_put\n                          |-\u003e kref_put\n\nWhen calling dvb_unregister_device, dmxdev-\u003edvbdev (i.e. *pdvbdev in\ndvb_register_device) could point to memory that had been freed in\ndvb_register_device. Thereafter, this pointer is transferred to\nkref_put and triggering a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-31143",
      "Description": "An optional feature of PCI MSI called \"Multiple Message\" allows a\ndevice to use multiple consecutive interrupt vectors.  Unlike for MSI-X,\nthe setting up of these consecutive vectors needs to happen all in one\ngo.  In this handling an error path could be taken in different\nsituations, with or without a particular lock held.  This error path\nwrongly releases the lock even when it is not currently held.\n",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-31145",
      "Description": "Certain PCI devices in a system might be assigned Reserved Memory\nRegions (specified via Reserved Memory Region Reporting, \"RMRR\") for\nIntel VT-d or Unity Mapping ranges for AMD-Vi.  These are typically used\nfor platform tasks such as legacy USB emulation.\n\nSince the precise purpose of these regions is unknown, once a device\nassociated with such a region is active, the mappings of these regions\nneed to remain continuouly accessible by the device.  In the logic\nestablishing these mappings, error handling was flawed, resulting in\nsuch mappings to potentially remain in place when they should have been\nremoved again.  Respective guests would then gain access to memory\nregions which they aren't supposed to have access to.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-31146",
      "Description": "When multiple devices share resources and one of them is to be passed\nthrough to a guest, security of the entire system and of respective\nguests individually cannot really be guaranteed without knowing\ninternals of any of the involved guests.  Therefore such a configuration\ncannot really be security-supported, yet making that explicit was so far\nmissing.\n\nResources the sharing of which is known to be problematic include, but\nare not limited to\n- - PCI Base Address Registers (BARs) of multiple devices mapping to the\n  same page (4k on x86),\n- - INTx lines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35176",
      "Description": " REXML is an XML toolkit for Ruby. The REXML gem before 3.2.6 has a denial of service vulnerability when it parses an XML that has many `\u003c`s in an attribute value. Those who need to parse untrusted XMLs may be impacted to this vulnerability. The REXML gem 3.2.7 or later include the patch to fix this vulnerability. As a workaround, don't parse untrusted XMLs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libruby2_5-2_5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-stdlib-2.5.9-150000.4.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix Rx DMA datasize and skb_over_panic\n\nmana_get_rxbuf_cfg() aligns the RX buffer's DMA datasize to be\nmultiple of 64. So a packet slightly bigger than mtu+14, say 1536,\ncan be received and cause skb_over_panic.\n\nSample dmesg:\n[ 5325.237162] skbuff: skb_over_panic: text:ffffffffc043277a len:1536 put:1536 head:ff1100018b517000 data:ff1100018b517100 tail:0x700 end:0x6ea dev:\u003cNULL\u003e\n[ 5325.243689] ------------[ cut here ]------------\n[ 5325.245748] kernel BUG at net/core/skbuff.c:192!\n[ 5325.247838] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[ 5325.258374] RIP: 0010:skb_panic+0x4f/0x60\n[ 5325.302941] Call Trace:\n[ 5325.304389]  \u003cIRQ\u003e\n[ 5325.315794]  ? skb_panic+0x4f/0x60\n[ 5325.317457]  ? asm_exc_invalid_op+0x1f/0x30\n[ 5325.319490]  ? skb_panic+0x4f/0x60\n[ 5325.321161]  skb_put+0x4e/0x50\n[ 5325.322670]  mana_poll+0x6fa/0xb50 [mana]\n[ 5325.324578]  __napi_poll+0x33/0x1e0\n[ 5325.326328]  net_rx_action+0x12e/0x280\n\nAs discussed internally, this alignment is not necessary. To fix\nthis bug, remove it from the code. So oversized packets will be\nmarked as CQE_RX_TRUNCATED by NIC, and dropped.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36926",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/iommu: LPAR panics during boot up with a frozen PE\n\nAt the time of LPAR boot up, partition firmware provides Open Firmware\nproperty ibm,dma-window for the PE. This property is provided on the PCI\nbus the PE is attached to.\n\nThere are execptions where the partition firmware might not provide this\nproperty for the PE at the time of LPAR boot up. One of the scenario is\nwhere the firmware has frozen the PE due to some error condition. This\nPE is frozen for 24 hours or unless the whole system is reinitialized.\n\nWithin this time frame, if the LPAR is booted, the frozen PE will be\npresented to the LPAR but ibm,dma-window property could be missing.\n\nToday, under these circumstances, the LPAR oopses with NULL pointer\ndereference, when configuring the PCI bus the PE is attached to.\n\n  BUG: Kernel NULL pointer dereference on read at 0x000000c8\n  Faulting instruction address: 0xc0000000001024c0\n  Oops: Kernel access of bad area, sig: 7 [#1]\n  LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\n  Modules linked in:\n  Supported: Yes\n  CPU: 0 PID: 1 Comm: swapper/0 Not tainted 6.4.0-150600.9-default #1\n  Hardware name: IBM,9043-MRX POWER10 (raw) 0x800200 0xf000006 of:IBM,FW1060.00 (NM1060_023) hv:phyp pSeries\n  NIP:  c0000000001024c0 LR: c0000000001024b0 CTR: c000000000102450\n  REGS: c0000000037db5c0 TRAP: 0300   Not tainted  (6.4.0-150600.9-default)\n  MSR:  8000000002009033 \u003cSF,VEC,EE,ME,IR,DR,RI,LE\u003e  CR: 28000822  XER: 00000000\n  CFAR: c00000000010254c DAR: 00000000000000c8 DSISR: 00080000 IRQMASK: 0\n  ...\n  NIP [c0000000001024c0] pci_dma_bus_setup_pSeriesLP+0x70/0x2a0\n  LR [c0000000001024b0] pci_dma_bus_setup_pSeriesLP+0x60/0x2a0\n  Call Trace:\n    pci_dma_bus_setup_pSeriesLP+0x60/0x2a0 (unreliable)\n    pcibios_setup_bus_self+0x1c0/0x370\n    __of_scan_bus+0x2f8/0x330\n    pcibios_scan_phb+0x280/0x3d0\n    pcibios_init+0x88/0x12c\n    do_one_initcall+0x60/0x320\n    kernel_init_freeable+0x344/0x3e4\n    kernel_init+0x34/0x1d0\n    ret_from_kernel_user_thread+0x14/0x1c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-38559",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qedf: Ensure the copied buf is NUL terminated\n\nCurrently, we allocate a count-sized kernel buffer and copy count from\nuserspace to that buffer. Later, we use kstrtouint on this buffer but we\ndon't ensure that the string is terminated inside the buffer, this can\nlead to OOB read when using kstrtouint. Fix this issue by using\nmemdup_user_nul instead of memdup_user.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39463",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\n9p: add missing locking around taking dentry fid list\n\nFix a use-after-free on dentry's d_fsdata fid list when a thread\nlooks up a fid through dentry while another thread unlinks it:\n\nUAF thread:\nrefcount_t: addition on 0; use-after-free.\n p9_fid_get linux/./include/net/9p/client.h:262\n v9fs_fid_find+0x236/0x280 linux/fs/9p/fid.c:129\n v9fs_fid_lookup_with_uid linux/fs/9p/fid.c:181\n v9fs_fid_lookup+0xbf/0xc20 linux/fs/9p/fid.c:314\n v9fs_vfs_getattr_dotl+0xf9/0x360 linux/fs/9p/vfs_inode_dotl.c:400\n vfs_statx+0xdd/0x4d0 linux/fs/stat.c:248\n\nFreed by:\n p9_fid_destroy (inlined)\n p9_client_clunk+0xb0/0xe0 linux/net/9p/client.c:1456\n p9_fid_put linux/./include/net/9p/client.h:278\n v9fs_dentry_release+0xb5/0x140 linux/fs/9p/vfs_dentry.c:55\n v9fs_remove+0x38f/0x620 linux/fs/9p/vfs_inode.c:518\n vfs_unlink+0x29a/0x810 linux/fs/namei.c:4335\n\nThe problem is that d_fsdata was not accessed under d_lock, because\nd_release() normally is only called once the dentry is otherwise no\nlonger accessible but since we also call it explicitly in v9fs_remove\nthat lock is required:\nmove the hlist out of the dentry under lock then unref its fids once\nthey are no longer accessible.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39494",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nima: Fix use-after-free on a dentry's dname.name\n\n-\u003ed_name.name can change on rename and the earlier value can be freed;\nthere are conditions sufficient to stabilize it (-\u003ed_lock on dentry,\n-\u003ed_lock on its parent, -\u003ei_rwsem exclusive on the parent's inode,\nrename_lock), but none of those are met at any of the sites. Take a stable\nsnapshot of the name instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-39908",
      "Description": " REXML is an XML toolkit for Ruby. The REXML gem before 3.3.1 has some DoS vulnerabilities when it parses an XML that has many specific characters such as `\u003c`, `0` and `%\u003e`. If you need to parse untrusted XMLs, you many be impacted to these vulnerabilities. The REXML gem 3.3.2 or later include the patches to fix these vulnerabilities. Users are advised to upgrade. Users unable to upgrade should avoid parsing untrusted XML strings.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libruby2_5-2_5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-stdlib-2.5.9-150000.4.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-4076",
      "Description": "Client queries that trigger serving stale data and that also require lookups in local authoritative zone data may result in an assertion failure.\nThis issue affects BIND 9 versions 9.16.13 through 9.16.50, 9.18.0 through 9.18.27, 9.19.0 through 9.19.24, 9.11.33-S1 through 9.11.37-S1, 9.16.13-S1 through 9.16.50-S1, and 9.18.11-S1 through 9.18.27-S1.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:bind-utils-9.16.50-150400.5.43.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-bind-9.16.50-150400.5.43.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40902",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: xattr: fix buffer overflow for invalid xattr\n\nWhen an xattr size is not what is expected, it is printed out to the\nkernel log in hex format as a form of debugging.  But when that xattr\nsize is bigger than the expected size, printing it out can cause an\naccess off the end of the buffer.\n\nFix this all up by properly restricting the size of the debug hex dump\nin the kernel log.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40910",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix refcount imbalance on inbound connections\n\nWhen releasing a socket in ax25_release(), we call netdev_put() to\ndecrease the refcount on the associated ax.25 device. However, the\nexecution path for accepting an incoming connection never calls\nnetdev_hold(). This imbalance leads to refcount errors, and ultimately\nto kernel crashes.\n\nA typical call trace for the above situation will start with one of the\nfollowing errors:\n\n    refcount_t: decrement hit 0; leaking memory.\n    refcount_t: underflow; use-after-free.\n\nAnd will then have a trace like:\n\n    Call Trace:\n    \u003cTASK\u003e\n    ? show_regs+0x64/0x70\n    ? __warn+0x83/0x120\n    ? refcount_warn_saturate+0xb2/0x100\n    ? report_bug+0x158/0x190\n    ? prb_read_valid+0x20/0x30\n    ? handle_bug+0x3e/0x70\n    ? exc_invalid_op+0x1c/0x70\n    ? asm_exc_invalid_op+0x1f/0x30\n    ? refcount_warn_saturate+0xb2/0x100\n    ? refcount_warn_saturate+0xb2/0x100\n    ax25_release+0x2ad/0x360\n    __sock_release+0x35/0xa0\n    sock_close+0x19/0x20\n    [...]\n\nOn reboot (or any attempt to remove the interface), the kernel gets\nstuck in an infinite loop:\n\n    unregister_netdevice: waiting for ax0 to become free. Usage count = 0\n\nThis patch corrects these issues by ensuring that we call netdev_hold()\nand ax25_dev_hold() for new connections in ax25_accept(). This makes the\nlogic leading to ax25_accept() match the logic for ax25_bind(): in both\ncases we increment the refcount, which is ultimately decremented in\nax25_release().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngve: Clear napi-\u003eskb before dev_kfree_skb_any()\n\ngve_rx_free_skb incorrectly leaves napi-\u003eskb referencing an skb after it\nis freed with dev_kfree_skb_any(). This can result in a subsequent call\nto napi_get_frags returning a dangling pointer.\n\nFix this by clearing napi-\u003eskb before the skb is freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40954",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: do not leave a dangling sk pointer, when socket creation fails\n\nIt is possible to trigger a use-after-free by:\n  * attaching an fentry probe to __sock_release() and the probe calling the\n    bpf_get_socket_cookie() helper\n  * running traceroute -I 1.1.1.1 on a freshly booted VM\n\nA KASAN enabled kernel will log something like below (decoded and stripped):\n==================================================================\nBUG: KASAN: slab-use-after-free in __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)\nRead of size 8 at addr ffff888007110dd8 by task traceroute/299\n\nCPU: 2 PID: 299 Comm: traceroute Tainted: G            E      6.10.0-rc2+ #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\ndump_stack_lvl (lib/dump_stack.c:117 (discriminator 1))\nprint_report (mm/kasan/report.c:378 mm/kasan/report.c:488)\n? __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)\nkasan_report (mm/kasan/report.c:603)\n? __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)\nkasan_check_range (mm/kasan/generic.c:183 mm/kasan/generic.c:189)\n__sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)\nbpf_get_socket_ptr_cookie (./arch/x86/include/asm/preempt.h:94 ./include/linux/sock_diag.h:42 net/core/filter.c:5094 net/core/filter.c:5092)\nbpf_prog_875642cf11f1d139___sock_release+0x6e/0x8e\nbpf_trampoline_6442506592+0x47/0xaf\n__sock_release (net/socket.c:652)\n__sock_create (net/socket.c:1601)\n...\nAllocated by task 299 on cpu 2 at 78.328492s:\nkasan_save_stack (mm/kasan/common.c:48)\nkasan_save_track (mm/kasan/common.c:68)\n__kasan_slab_alloc (mm/kasan/common.c:312 mm/kasan/common.c:338)\nkmem_cache_alloc_noprof (mm/slub.c:3941 mm/slub.c:4000 mm/slub.c:4007)\nsk_prot_alloc (net/core/sock.c:2075)\nsk_alloc (net/core/sock.c:2134)\ninet_create (net/ipv4/af_inet.c:327 net/ipv4/af_inet.c:252)\n__sock_create (net/socket.c:1572)\n__sys_socket (net/socket.c:1660 net/socket.c:1644 net/socket.c:1706)\n__x64_sys_socket (net/socket.c:1718)\ndo_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nFreed by task 299 on cpu 2 at 78.328502s:\nkasan_save_stack (mm/kasan/common.c:48)\nkasan_save_track (mm/kasan/common.c:68)\nkasan_save_free_info (mm/kasan/generic.c:582)\npoison_slab_object (mm/kasan/common.c:242)\n__kasan_slab_free (mm/kasan/common.c:256)\nkmem_cache_free (mm/slub.c:4437 mm/slub.c:4511)\n__sk_destruct (net/core/sock.c:2117 net/core/sock.c:2208)\ninet_create (net/ipv4/af_inet.c:397 net/ipv4/af_inet.c:252)\n__sock_create (net/socket.c:1572)\n__sys_socket (net/socket.c:1660 net/socket.c:1644 net/socket.c:1706)\n__x64_sys_socket (net/socket.c:1718)\ndo_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nFix this by clearing the struct socket reference in sk_common_release() to cover\nall protocol families create functions, which may already attached the\nreference to the sk object with sock_init_data().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40956",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Fix possible Use-After-Free in irq_process_work_list\n\nUse list_for_each_entry_safe() to allow iterating through the list and\ndeleting the entry in the iteration process. The descriptor is freed via\nidxd_desc_complete() and there's a slight chance may cause issue for\nthe list iterator when the descriptor is reused by another thread\nwithout it being deleted from the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40989",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Disassociate vcpus from redistributor region on teardown\n\nWhen tearing down a redistributor region, make sure we don't have\nany dangling pointer to that region stored in a vcpu.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40994",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nptp: fix integer overflow in max_vclocks_store\n\nOn 32bit systems, the \"4 * max\" multiply can overflow.  Use kcalloc()\nto do the allocation to prevent this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41009",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix overrunning reservations in ringbuf\n\nThe BPF ring buffer internally is implemented as a power-of-2 sized circular\nbuffer, with two logical and ever-increasing counters: consumer_pos is the\nconsumer counter to show which logical position the consumer consumed the\ndata, and producer_pos which is the producer counter denoting the amount of\ndata reserved by all producers.\n\nEach time a record is reserved, the producer that \"owns\" the record will\nsuccessfully advance producer counter. In user space each time a record is\nread, the consumer of the data advanced the consumer counter once it finished\nprocessing. Both counters are stored in separate pages so that from user\nspace, the producer counter is read-only and the consumer counter is read-write.\n\nOne aspect that simplifies and thus speeds up the implementation of both\nproducers and consumers is how the data area is mapped twice contiguously\nback-to-back in the virtual memory, allowing to not take any special measures\nfor samples that have to wrap around at the end of the circular buffer data\narea, because the next page after the last data page would be first data page\nagain, and thus the sample will still appear completely contiguous in virtual\nmemory.\n\nEach record has a struct bpf_ringbuf_hdr { u32 len; u32 pg_off; } header for\nbook-keeping the length and offset, and is inaccessible to the BPF program.\nHelpers like bpf_ringbuf_reserve() return `(void *)hdr + BPF_RINGBUF_HDR_SZ`\nfor the BPF program to use. Bing-Jhong and Muhammad reported that it is however\npossible to make a second allocated memory chunk overlapping with the first\nchunk and as a result, the BPF program is now able to edit first chunk's\nheader.\n\nFor example, consider the creation of a BPF_MAP_TYPE_RINGBUF map with size\nof 0x4000. Next, the consumer_pos is modified to 0x3000 /before/ a call to\nbpf_ringbuf_reserve() is made. This will allocate a chunk A, which is in\n[0x0,0x3008], and the BPF program is able to edit [0x8,0x3008]. Now, lets\nallocate a chunk B with size 0x3000. This will succeed because consumer_pos\nwas edited ahead of time to pass the `new_prod_pos - cons_pos \u003e rb-\u003emask`\ncheck. Chunk B will be in range [0x3008,0x6010], and the BPF program is able\nto edit [0x3010,0x6010]. Due to the ring buffer memory layout mentioned\nearlier, the ranges [0x0,0x4000] and [0x4000,0x8000] point to the same data\npages. This means that chunk B at [0x4000,0x4008] is chunk A's header.\nbpf_ringbuf_submit() / bpf_ringbuf_discard() use the header's pg_off to then\nlocate the bpf_ringbuf itself via bpf_ringbuf_restore_from_rec(). Once chunk\nB modified chunk A's header, then bpf_ringbuf_commit() refers to the wrong\npage and could cause a crash.\n\nFix it by calculating the oldest pending_pos and check whether the range\nfrom the oldest outstanding record to the newest would span beyond the ring\nbuffer size. If that is the case, then reject the request. We've tested with\nthe ring buffer benchmark in BPF selftests (./benchs/run_bench_ringbufs.sh)\nbefore/after the fix and while it seems a bit slower on some benchmarks, it\nis still not significantly enough to matter.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: don't allow mapping the MMIO HDP page with large pages\n\nWe don't get the right offset in that case.  The GPU has\nan unused 4K area of the register BAR space into which you can\nremap registers.  We remap the HDP flush registers into this\nspace to allow userspace (CPU or GPU) to flush the HDP when it\nupdates VRAM.  However, on systems with \u003e4K pages, we end up\nexposing PAGE_SIZE of MMIO space.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41012",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfilelock: Remove locks reliably when fcntl/close race is detected\n\nWhen fcntl_setlk() races with close(), it removes the created lock with\ndo_lock_file_wait().\nHowever, LSMs can allow the first do_lock_file_wait() that created the lock\nwhile denying the second do_lock_file_wait() that tries to remove the lock.\nSeparately, posix_lock_file() could also fail to\nremove a lock due to GFP_KERNEL allocation failure (when splitting a range\nin the middle).\n\nAfter the bug has been triggered, use-after-free reads will occur in\nlock_get_status() when userspace reads /proc/locks. This can likely be used\nto read arbitrary kernel memory, but can't corrupt kernel memory.\n\nFix it by calling locks_remove_posix() instead, which is designed to\nreliably get rid of POSIX locks associated with the given file and\nfiles_struct and is also used by filp_flush().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhfsplus: fix uninit-value in copy_name\n\n[syzbot reported]\nBUG: KMSAN: uninit-value in sized_strscpy+0xc4/0x160\n sized_strscpy+0xc4/0x160\n copy_name+0x2af/0x320 fs/hfsplus/xattr.c:411\n hfsplus_listxattr+0x11e9/0x1a50 fs/hfsplus/xattr.c:750\n vfs_listxattr fs/xattr.c:493 [inline]\n listxattr+0x1f3/0x6b0 fs/xattr.c:840\n path_listxattr fs/xattr.c:864 [inline]\n __do_sys_listxattr fs/xattr.c:876 [inline]\n __se_sys_listxattr fs/xattr.c:873 [inline]\n __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873\n x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:3877 [inline]\n slab_alloc_node mm/slub.c:3918 [inline]\n kmalloc_trace+0x57b/0xbe0 mm/slub.c:4065\n kmalloc include/linux/slab.h:628 [inline]\n hfsplus_listxattr+0x4cc/0x1a50 fs/hfsplus/xattr.c:699\n vfs_listxattr fs/xattr.c:493 [inline]\n listxattr+0x1f3/0x6b0 fs/xattr.c:840\n path_listxattr fs/xattr.c:864 [inline]\n __do_sys_listxattr fs/xattr.c:876 [inline]\n __se_sys_listxattr fs/xattr.c:873 [inline]\n __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873\n x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[Fix]\nWhen allocating memory to strbuf, initialize memory to 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbluetooth/l2cap: sync sock recv cb and release\n\nThe problem occurs between the system call to close the sock and hci_rx_work,\nwhere the former releases the sock and the latter accesses it without lock protection.\n\n           CPU0                       CPU1\n           ----                       ----\n           sock_close                 hci_rx_work\n\t   l2cap_sock_release         hci_acldata_packet\n\t   l2cap_sock_kill            l2cap_recv_frame\n\t   sk_free                    l2cap_conless_channel\n\t                              l2cap_sock_recv_cb\n\nIf hci_rx_work processes the data that needs to be received before the sock is\nclosed, then everything is normal; Otherwise, the work thread may access the\nreleased sock when receiving data.\n\nAdd a chan mutex in the rx callback of the sock to achieve synchronization between\nthe sock release and recv cb.\n\nSock is dead, so set chan data to NULL, avoid others use invalid sock pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41069",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: topology: Fix references to freed memory\n\nMost users after parsing a topology file, release memory used by it, so\nhaving pointer references directly into topology file contents is wrong.\nUse devm_kmemdup(), to allocate memory as needed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41087",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: Fix double free on error\n\nIf e.g. the ata_port_alloc() call in ata_host_alloc() fails, we will jump\nto the err_out label, which will call devres_release_group().\ndevres_release_group() will trigger a call to ata_host_release().\nata_host_release() calls kfree(host), so executing the kfree(host) in\nata_host_alloc() will lead to a double free:\n\nkernel BUG at mm/slub.c:553!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 11 PID: 599 Comm: (udev-worker) Not tainted 6.10.0-rc5 #47\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014\nRIP: 0010:kfree+0x2cf/0x2f0\nCode: 5d 41 5e 41 5f 5d e9 80 d6 ff ff 4d 89 f1 41 b8 01 00 00 00 48 89 d9 48 89 da\nRSP: 0018:ffffc90000f377f0 EFLAGS: 00010246\nRAX: ffff888112b1f2c0 RBX: ffff888112b1f2c0 RCX: ffff888112b1f320\nRDX: 000000000000400b RSI: ffffffffc02c9de5 RDI: ffff888112b1f2c0\nRBP: ffffc90000f37830 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffc90000f37610 R11: 617461203a736b6e R12: ffffea00044ac780\nR13: ffff888100046400 R14: ffffffffc02c9de5 R15: 0000000000000006\nFS:  00007f2f1cabe980(0000) GS:ffff88813b380000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f2f1c3acf75 CR3: 0000000111724000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __die_body.cold+0x19/0x27\n ? die+0x2e/0x50\n ? do_trap+0xca/0x110\n ? do_error_trap+0x6a/0x90\n ? kfree+0x2cf/0x2f0\n ? exc_invalid_op+0x50/0x70\n ? kfree+0x2cf/0x2f0\n ? asm_exc_invalid_op+0x1a/0x20\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? ata_host_alloc+0xf5/0x120 [libata]\n ? kfree+0x2cf/0x2f0\n ata_host_alloc+0xf5/0x120 [libata]\n ata_host_alloc_pinfo+0x14/0xa0 [libata]\n ahci_init_one+0x6c9/0xd20 [ahci]\n\nEnsure that we will not call kfree(host) twice, by performing the kfree()\nonly if the devres_open_group() call failed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntap: add missing verification for short frame\n\nThe cited commit missed to check against the validity of the frame length\nin the tap_get_user_xdp() path, which could cause a corrupted skb to be\nsent downstack. Even before the skb is transmitted, the\ntap_get_user_xdp()--\u003eskb_set_network_header() may assume the size is more\nthan ETH_HLEN. Once transmitted, this could either cause out-of-bound\naccess beyond the actual length, or confuse the underlayer with incorrect\nor inconsistent header length in the skb metadata.\n\nIn the alternative path, tap_get_user() already prohibits short frame which\nhas the length less than Ethernet header size from being transmitted.\n\nThis is to drop any frame shorter than the Ethernet header size just like\nhow tap_get_user() does.\n\nCVE: CVE-2024-41090",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41110",
      "Description": "Moby is an open-source project created by Docker for software containerization. A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass authorization plugins (AuthZ) under specific circumstances. The base likelihood of this being exploited is low.\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an authorization plugin without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\nA security issue was discovered In 2018, where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine v18.09.1 in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime are not vulnerable.\n\ndocker-ce v27.1.1 containes patches to fix the vulnerability. Patches have also been merged into the master, 19.03, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches. If one is unable to upgrade immediately, avoid using AuthZ plugins and/or restrict access to the Docker API to trusted parties, following the principle of least privilege.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "critical"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:docker-26.1.5_ce-150000.212.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41123",
      "Description": "REXML is an XML toolkit for Ruby. The REXML gem before 3.3.2 has some DoS vulnerabilities when it parses an XML that has many specific characters such as whitespace character, `\u003e]` and `]\u003e`. The REXML gem 3.3.3 or later include the patches to fix these vulnerabilities.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libruby2_5-2_5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-stdlib-2.5.9-150000.4.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41946",
      "Description": "REXML is an XML toolkit for Ruby. The REXML gem 3.3.2 has a DoS vulnerability when it parses an XML that has many entity expansions with SAX2 or pull parser API. The REXML gem 3.3.3 or later include the patch to fix the vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libruby2_5-2_5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-stdlib-2.5.9-150000.4.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix DIO failure due to insufficient transaction credits\n\nThe code in ocfs2_dio_end_io_write() estimates number of necessary\ntransaction credits using ocfs2_calc_extend_credits().  This however does\nnot take into account that the IO could be arbitrarily large and can\ncontain arbitrary number of extents.\n\nExtent tree manipulations do often extend the current transaction but not\nin all of the cases.  For example if we have only single block extents in\nthe tree, ocfs2_mark_extent_written() will end up calling\nocfs2_replace_extent_rec() all the time and we will never extend the\ncurrent transaction and eventually exhaust all the transaction credits if\nthe IO contains many single block extents.  Once that happens a\nWARN_ON(jbd2_handle_buffer_credits(handle) \u003c= 0) is triggered in\njbd2_journal_dirty_metadata() and subsequently OCFS2 aborts in response to\nthis error.  This was actually triggered by one of our customers on a\nheavily fragmented OCFS2 filesystem.\n\nTo fix the issue make sure the transaction always has enough credits for\none extent insert before each call of ocfs2_mark_extent_written().\n\nHeming Zhao said:\n\n------\nPANIC: \"Kernel panic - not syncing: OCFS2: (device dm-1): panic forced after error\"\n\nPID: xxx  TASK: xxxx  CPU: 5  COMMAND: \"SubmitThread-CA\"\n  #0 machine_kexec at ffffffff8c069932\n  #1 __crash_kexec at ffffffff8c1338fa\n  #2 panic at ffffffff8c1d69b9\n  #3 ocfs2_handle_error at ffffffffc0c86c0c [ocfs2]\n  #4 __ocfs2_abort at ffffffffc0c88387 [ocfs2]\n  #5 ocfs2_journal_dirty at ffffffffc0c51e98 [ocfs2]\n  #6 ocfs2_split_extent at ffffffffc0c27ea3 [ocfs2]\n  #7 ocfs2_change_extent_flag at ffffffffc0c28053 [ocfs2]\n  #8 ocfs2_mark_extent_written at ffffffffc0c28347 [ocfs2]\n  #9 ocfs2_dio_end_io_write at ffffffffc0c2bef9 [ocfs2]\n#10 ocfs2_dio_end_io at ffffffffc0c2c0f5 [ocfs2]\n#11 dio_complete at ffffffff8c2b9fa7\n#12 do_blockdev_direct_IO at ffffffff8c2bc09f\n#13 ocfs2_direct_IO at ffffffffc0c2b653 [ocfs2]\n#14 generic_file_direct_write at ffffffff8c1dcf14\n#15 __generic_file_write_iter at ffffffff8c1dd07b\n#16 ocfs2_file_write_iter at ffffffffc0c49f1f [ocfs2]\n#17 aio_write at ffffffff8c2cc72e\n#18 kmem_cache_alloc at ffffffff8c248dde\n#19 do_io_submit at ffffffff8c2ccada\n#20 do_syscall_64 at ffffffff8c004984\n#21 entry_SYSCALL_64_after_hwframe at ffffffff8c8000ba",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/dpaa2: Avoid explicit cpumask var allocation on stack\n\nFor CONFIG_CPUMASK_OFFSTACK=y kernel, explicit allocation of cpumask\nvariable on stack is not recommended since it can cause potential stack\noverflow.\n\nInstead, kernel code should always use *cpumask_var API(s) to allocate\ncpumask var in config-neutral way, leaving allocation strategy to\nCONFIG_CPUMASK_OFFSTACK.\n\nUse *cpumask_var API(s) to address it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42126",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc: Avoid nmi_enter/nmi_exit in real mode interrupt.\n\nnmi_enter()/nmi_exit() touches per cpu variables which can lead to kernel\ncrash when invoked during real mode interrupt handling (e.g. early HMI/MCE\ninterrupt handler) if percpu allocation comes from vmalloc area.\n\nEarly HMI/MCE handlers are called through DEFINE_INTERRUPT_HANDLER_NMI()\nwrapper which invokes nmi_enter/nmi_exit calls. We don't see any issue when\npercpu allocation is from the embedded first chunk. However with\nCONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK enabled there are chances where percpu\nallocation can come from the vmalloc area.\n\nWith kernel command line \"percpu_alloc=page\" we can force percpu allocation\nto come from vmalloc area and can see kernel crash in machine_check_early:\n\n[    1.215714] NIP [c000000000e49eb4] rcu_nmi_enter+0x24/0x110\n[    1.215717] LR [c0000000000461a0] machine_check_early+0xf0/0x2c0\n[    1.215719] --- interrupt: 200\n[    1.215720] [c000000fffd73180] [0000000000000000] 0x0 (unreliable)\n[    1.215722] [c000000fffd731b0] [0000000000000000] 0x0\n[    1.215724] [c000000fffd73210] [c000000000008364] machine_check_early_common+0x134/0x1f8\n\nFix this by avoiding use of nmi_enter()/nmi_exit() in real mode if percpu\nfirst chunk is not embedded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/core: Implement a limit on UMAD receive List\n\nThe existing behavior of ib_umad, which maintains received MAD\npackets in an unbounded list, poses a risk of uncontrolled growth.\nAs user-space applications extract packets from this list, the rate\nof extraction may not match the rate of incoming packets, leading\nto potential list overflow.\n\nTo address this, we introduce a limit to the size of the list. After\nconsidering typical scenarios, such as OpenSM processing, which can\nhandle approximately 100k packets per second, and the 1-second retry\ntimeout for most packets, we set the list size limit to 200k. Packets\nreceived beyond this limit are dropped, assuming they are likely timed\nout by the time they are handled by user-space.\n\nNotably, packets queued on the receive list due to reasons like\ntimed-out sends are preserved even when the list is full.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42230",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries: Fix scv instruction crash with kexec\n\nkexec on pseries disables AIL (reloc_on_exc), required for scv\ninstruction support, before other CPUs have been shut down. This means\nthey can execute scv instructions after AIL is disabled, which causes an\ninterrupt at an unexpected entry location that crashes the kernel.\n\nChange the kexec sequence to disable AIL after other CPUs have been\nbrought down.\n\nAs a refresher, the real-mode scv interrupt vector is 0x17000, and the\nfixed-location head code probably couldn't easily deal with implementing\nsuch high addresses so it was just decided not to support that interrupt\nat all.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42232",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibceph: fix race between delayed_work() and ceph_monc_stop()\n\nThe way the delayed work is handled in ceph_monc_stop() is prone to\nraces with mon_fault() and possibly also finish_hunting().  Both of\nthese can requeue the delayed work which wouldn't be canceled by any of\nthe following code in case that happens after cancel_delayed_work_sync()\nruns -- __close_session() doesn't mess with the delayed work in order\nto avoid interfering with the hunting interval logic.  This part was\nmissed in commit b5d91704f53e (\"libceph: behave in mon_fault() if\ncur_mon \u003c 0\") and use-after-free can still ensue on monc and objects\nthat hang off of it, with monc-\u003eauth and monc-\u003emonmap being\nparticularly susceptible to quickly being reused.\n\nTo fix this:\n\n- clear monc-\u003ecur_mon and monc-\u003ehunting as part of closing the session\n  in ceph_monc_stop()\n- bail from delayed_work() if monc-\u003ecur_mon is cleared, similar to how\n  it's done in mon_fault() and finish_hunting() (based on monc-\u003ehunting)\n- call cancel_delayed_work_sync() after the session is closed",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42271",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/iucv: fix use after free in iucv_sock_close()\n\niucv_sever_path() is called from process context and from bh context.\niucv-\u003epath is used as indicator whether somebody else is taking care of\nsevering the path (or it is already removed / never existed).\nThis needs to be done with atomic compare and swap, otherwise there is a\nsmall window where iucv_sock_close() will try to work with a path that has\nalready been severed and freed by iucv_callback_connrej() called by\niucv_tasklet_fn().\n\nExample:\n[452744.123844] Call Trace:\n[452744.123845] ([\u003c0000001e87f03880\u003e] 0x1e87f03880)\n[452744.123966]  [\u003c00000000d593001e\u003e] iucv_path_sever+0x96/0x138\n[452744.124330]  [\u003c000003ff801ddbca\u003e] iucv_sever_path+0xc2/0xd0 [af_iucv]\n[452744.124336]  [\u003c000003ff801e01b6\u003e] iucv_sock_close+0xa6/0x310 [af_iucv]\n[452744.124341]  [\u003c000003ff801e08cc\u003e] iucv_sock_release+0x3c/0xd0 [af_iucv]\n[452744.124345]  [\u003c00000000d574794e\u003e] __sock_release+0x5e/0xe8\n[452744.124815]  [\u003c00000000d5747a0c\u003e] sock_close+0x34/0x48\n[452744.124820]  [\u003c00000000d5421642\u003e] __fput+0xba/0x268\n[452744.124826]  [\u003c00000000d51b382c\u003e] task_work_run+0xbc/0xf0\n[452744.124832]  [\u003c00000000d5145710\u003e] do_notify_resume+0x88/0x90\n[452744.124841]  [\u003c00000000d5978096\u003e] system_call+0xe2/0x2c8\n[452744.125319] Last Breaking-Event-Address:\n[452744.125321]  [\u003c00000000d5930018\u003e] iucv_path_sever+0x90/0x138\n[452744.125324]\n[452744.125325] Kernel panic - not syncing: Fatal exception in interrupt\n\nNote that bh_lock_sock() is not serializing the tasklet context against\nprocess context, because the check for sock_owned_by_user() and\ncorresponding handling is missing.\n\nIdeas for a future clean-up patch:\nA) Correct usage of bh_lock_sock() in tasklet context, as described in\nRe-enqueue, if needed. This may require adding return values to the\ntasklet functions and thus changes to all users of iucv.\n\nB) Change iucv tasklet into worker and use only lock_sock() in af_iucv.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42301",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndev/parport: fix the array out-of-bounds risk\n\nFixed array out-of-bounds issues caused by sprintf\nby replacing it with snprintf for safer data copying,\nensuring the destination buffer is not overflowed.\n\nBelow is the stack trace I encountered during the actual issue:\n\n[ 66.575408s] [pid:5118,cpu4,QThread,4]Kernel panic - not syncing: stack-protector:\nKernel stack is corrupted in: do_hardware_base_addr+0xcc/0xd0 [parport]\n[ 66.575408s] [pid:5118,cpu4,QThread,5]CPU: 4 PID: 5118 Comm:\nQThread Tainted: G S W O 5.10.97-arm64-desktop #7100.57021.2\n[ 66.575439s] [pid:5118,cpu4,QThread,6]TGID: 5087 Comm: EFileApp\n[ 66.575439s] [pid:5118,cpu4,QThread,7]Hardware name: HUAWEI HUAWEI QingYun\nPGUX-W515x-B081/SP1PANGUXM, BIOS 1.00.07 04/29/2024\n[ 66.575439s] [pid:5118,cpu4,QThread,8]Call trace:\n[ 66.575469s] [pid:5118,cpu4,QThread,9] dump_backtrace+0x0/0x1c0\n[ 66.575469s] [pid:5118,cpu4,QThread,0] show_stack+0x14/0x20\n[ 66.575469s] [pid:5118,cpu4,QThread,1] dump_stack+0xd4/0x10c\n[ 66.575500s] [pid:5118,cpu4,QThread,2] panic+0x1d8/0x3bc\n[ 66.575500s] [pid:5118,cpu4,QThread,3] __stack_chk_fail+0x2c/0x38\n[ 66.575500s] [pid:5118,cpu4,QThread,4] do_hardware_base_addr+0xcc/0xd0 [parport]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43398",
      "Description": "REXML is an XML toolkit for Ruby. The REXML gem before 3.3.6 has a DoS vulnerability when it parses an XML that has many deep elements that have same local name attributes. If you need to parse untrusted XMLs with tree parser API like REXML::Document.new, you may be impacted to this vulnerability. If you use other parser APIs such as stream parser API and SAX2 parser API, this vulnerability is not affected. The REXML gem 3.3.6 or later include the patch to fix the vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libruby2_5-2_5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-2.5.9-150000.4.32.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:ruby2.5-stdlib-2.5.9-150000.4.32.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncgroup/cpuset: Prevent UAF in proc_cpuset_show()\n\nAn UAF can happen when /proc/cpuset is read as reported in [1].\n\nThis can be reproduced by the following methods:\n1.add an mdelay(1000) before acquiring the cgroup_lock In the\n cgroup_path_ns function.\n2.$cat /proc/\u003cpid\u003e/cpuset   repeatly.\n3.$mount -t cgroup -o cpuset cpuset /sys/fs/cgroup/cpuset/\n$umount /sys/fs/cgroup/cpuset/   repeatly.\n\nThe race that cause this bug can be shown as below:\n\n(umount)\t\t|\t(cat /proc/\u003cpid\u003e/cpuset)\ncss_release\t\t|\tproc_cpuset_show\ncss_release_work_fn\t|\tcss = task_get_css(tsk, cpuset_cgrp_id);\ncss_free_rwork_fn\t|\tcgroup_path_ns(css-\u003ecgroup, ...);\ncgroup_destroy_root\t|\tmutex_lock(\u0026cgroup_mutex);\nrebind_subsystems\t|\ncgroup_free_root \t|\n\t\t\t|\t// cgrp was freed, UAF\n\t\t\t|\tcgroup_path_ns_locked(cgrp,..);\n\nWhen the cpuset is initialized, the root node top_cpuset.css.cgrp\nwill point to \u0026cgrp_dfl_root.cgrp. In cgroup v1, the mount operation will\nallocate cgroup_root, and top_cpuset.css.cgrp will point to the allocated\n\u0026cgroup_root.cgrp. When the umount operation is executed,\ntop_cpuset.css.cgrp will be rebound to \u0026cgrp_dfl_root.cgrp.\n\nThe problem is that when rebinding to cgrp_dfl_root, there are cases\nwhere the cgroup_root allocated by setting up the root for cgroup v1\nis cached. This could lead to a Use-After-Free (UAF) if it is\nsubsequently freed. The descendant cgroups of cgroup v1 can only be\nfreed after the css is released. However, the css of the root will never\nbe released, yet the cgroup_root should be freed when it is unmounted.\nThis means that obtaining a reference to the css of the root does\nnot guarantee that css.cgrp-\u003eroot will not be freed.\n\nFix this problem by using rcu_read_lock in proc_cpuset_show().\nAs cgroup_root is kfree_rcu after commit d23b5c577715\n(\"cgroup: Make operations on the cgroup root_list RCU safe\"),\ncss-\u003ecgroup won't be freed during the critical section.\nTo call cgroup_path_ns_locked, css_set_lock is needed, so it is safe to\nreplace task_get_css with task_css.\n\n[1] https://syzkaller.appspot.com/bug?extid=9b1ff7be974a403aa4cd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: initialize integrity buffer to zero before writing it to media\n\nMetadata added by bio_integrity_prep is using plain kmalloc, which leads\nto random kernel memory being written media.  For PI metadata this is\nlimited to the app tag that isn't used by kernel generated metadata,\nbut for non-PI metadata the entire buffer leaks kernel memory.\n\nFix this by adding the __GFP_ZERO flag to allocations for writes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: qmi_wwan: fix memory leak for not ip packets\n\nFree the unused skb when not ip packets arrive.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43882",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nexec: Fix ToCToU between perm check and set-uid/gid usage\n\nWhen opening a file for exec via do_filp_open(), permission checking is\ndone against the file's metadata at that moment, and on success, a file\npointer is passed back. Much later in the execve() code path, the file\nmetadata (specifically mode, uid, and gid) is used to determine if/how\nto set the uid and gid. However, those values may have changed since the\npermissions check, meaning the execution may gain unintended privileges.\n\nFor example, if a file could change permissions from executable and not\nset-id:\n\n---------x 1 root root 16048 Aug  7 13:16 target\n\nto set-id and non-executable:\n\n---S------ 1 root root 16048 Aug  7 13:16 target\n\nit is possible to gain root privileges when execution should have been\ndisallowed.\n\nWhile this race condition is rare in real-world scenarios, it has been\nobserved (and proven exploitable) when package managers are updating\nthe setuid bits of installed programs. Such files start with being\nworld-executable but then are adjusted to be group-exec with a set-uid\nbit. For example, \"chmod o-x,u+s target\" makes \"target\" executable only\nby uid \"root\" and gid \"cdrom\", while also becoming setuid-root:\n\n-rwxr-xr-x 1 root cdrom 16048 Aug  7 13:16 target\n\nbecomes:\n\n-rwsr-xr-- 1 root cdrom 16048 Aug  7 13:16 target\n\nBut racing the chmod means users without group \"cdrom\" membership can\nget the permission to execute \"target\" just before the chmod, and when\nthe chmod finishes, the exec reaches brpm_fill_uid(), and performs the\nsetuid to root, violating the expressed authorization of \"only cdrom\ngroup members can setuid to root\".\n\nRe-check that we still have execute permissions in case the metadata\nhas changed. It would be better to keep a copy from the perm-check time,\nbut until we can do that refactoring, the least-bad option is to do a\nfull inode_permission() call (under inode lock). It is understood that\nthis is safe against dead-locks, but hardly optimal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43883",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: vhci-hcd: Do not drop references before new references are gained\n\nAt a few places the driver carries stale pointers\nto references that can still be used. Make sure that does not happen.\nThis strictly speaking closes ZDI-CAN-22273, though there may be\nsimilar races in the driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44932",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix UAFs when destroying the queues\n\nThe second tagged commit started sometimes (very rarely, but possible)\nthrowing WARNs from\nnet/core/page_pool.c:page_pool_disable_direct_recycling().\nTurned out idpf frees interrupt vectors with embedded NAPIs *before*\nfreeing the queues making page_pools' NAPI pointers lead to freed\nmemory before these pools are destroyed by libeth.\nIt's not clear whether there are other accesses to the freed vectors\nwhen destroying the queues, but anyway, we usually free queue/interrupt\nvectors only when the queues are destroyed and the NAPIs are guaranteed\nto not be referenced anywhere.\n\nInvert the allocation and freeing logic making queue/interrupt vectors\nbe allocated first and freed last. Vectors don't require queues to be\npresent, so this is safe. Additionally, this change allows to remove\nthat useless queue-\u003eq_vector pointer cleanup, as vectors are still\nvalid when freeing the queues (+ both are freed within one function,\nso it's not clear why nullify the pointers at all).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix shift-out-of-bounds in dbDiscardAG\n\nWhen searching for the next smaller log2 block, BLKSTOL2() returned 0,\ncausing shift exponent -1 to be negative.\n\nThis patch fixes the issue by exiting the loop directly when negative\nshift is found.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkcm: Serialise kcm_sendmsg() for the same socket.\n\nsyzkaller reported UAF in kcm_release(). [0]\n\nThe scenario is\n\n  1. Thread A builds a skb with MSG_MORE and sets kcm-\u003eseq_skb.\n\n  2. Thread A resumes building skb from kcm-\u003eseq_skb but is blocked\n     by sk_stream_wait_memory()\n\n  3. Thread B calls sendmsg() concurrently, finishes building kcm-\u003eseq_skb\n     and puts the skb to the write queue\n\n  4. Thread A faces an error and finally frees skb that is already in the\n     write queue\n\n  5. kcm_release() does double-free the skb in the write queue\n\nWhen a thread is building a MSG_MORE skb, another thread must not touch it.\n\nLet's add a per-sk mutex and serialise kcm_sendmsg().\n\n[0]:\nBUG: KASAN: slab-use-after-free in __skb_unlink include/linux/skbuff.h:2366 [inline]\nBUG: KASAN: slab-use-after-free in __skb_dequeue include/linux/skbuff.h:2385 [inline]\nBUG: KASAN: slab-use-after-free in __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]\nBUG: KASAN: slab-use-after-free in __skb_queue_purge include/linux/skbuff.h:3181 [inline]\nBUG: KASAN: slab-use-after-free in kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691\nRead of size 8 at addr ffff0000ced0fc80 by task syz-executor329/6167\n\nCPU: 1 PID: 6167 Comm: syz-executor329 Tainted: G    B              6.8.0-rc5-syzkaller-g9abbc24128bc #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024\nCall trace:\n dump_backtrace+0x1b8/0x1e4 arch/arm64/kernel/stacktrace.c:291\n show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:298\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd0/0x124 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:377 [inline]\n print_report+0x178/0x518 mm/kasan/report.c:488\n kasan_report+0xd8/0x138 mm/kasan/report.c:601\n __asan_report_load8_noabort+0x20/0x2c mm/kasan/report_generic.c:381\n __skb_unlink include/linux/skbuff.h:2366 [inline]\n __skb_dequeue include/linux/skbuff.h:2385 [inline]\n __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]\n __skb_queue_purge include/linux/skbuff.h:3181 [inline]\n kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691\n __sock_release net/socket.c:659 [inline]\n sock_close+0xa4/0x1e8 net/socket.c:1421\n __fput+0x30c/0x738 fs/file_table.c:376\n ____fput+0x20/0x30 fs/file_table.c:404\n task_work_run+0x230/0x2e0 kernel/task_work.c:180\n exit_task_work include/linux/task_work.h:38 [inline]\n do_exit+0x618/0x1f64 kernel/exit.c:871\n do_group_exit+0x194/0x22c kernel/exit.c:1020\n get_signal+0x1500/0x15ec kernel/signal.c:2893\n do_signal+0x23c/0x3b44 arch/arm64/kernel/signal.c:1249\n do_notify_resume+0x74/0x1f4 arch/arm64/kernel/entry-common.c:148\n exit_to_user_mode_prepare arch/arm64/kernel/entry-common.c:169 [inline]\n exit_to_user_mode arch/arm64/kernel/entry-common.c:178 [inline]\n el0_svc+0xac/0x168 arch/arm64/kernel/entry-common.c:713\n el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:730\n el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:598\n\nAllocated by task 6166:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x40/0x78 mm/kasan/common.c:68\n kasan_save_alloc_info+0x70/0x84 mm/kasan/generic.c:626\n unpoison_slab_object mm/kasan/common.c:314 [inline]\n __kasan_slab_alloc+0x74/0x8c mm/kasan/common.c:340\n kasan_slab_alloc include/linux/kasan.h:201 [inline]\n slab_post_alloc_hook mm/slub.c:3813 [inline]\n slab_alloc_node mm/slub.c:3860 [inline]\n kmem_cache_alloc_node+0x204/0x4c0 mm/slub.c:3903\n __alloc_skb+0x19c/0x3d8 net/core/skbuff.c:641\n alloc_skb include/linux/skbuff.h:1296 [inline]\n kcm_sendmsg+0x1d3c/0x2124 net/kcm/kcmsock.c:783\n sock_sendmsg_nosec net/socket.c:730 [inline]\n __sock_sendmsg net/socket.c:745 [inline]\n sock_sendmsg+0x220/0x2c0 net/socket.c:768\n splice_to_socket+0x7cc/0xd58 fs/splice.c:889\n do_splice_from fs/splice.c:941 [inline]\n direct_splice_actor+0xec/0x1d8 fs/splice.c:1164\n splice_direct_to_actor+0x438/0xa0c fs/splice.c:1108\n do_splice_direct_actor \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfuse: Initialize beyond-EOF page contents before setting uptodate\n\nfuse_notify_store(), unlike fuse_do_readpage(), does not enable page\nzeroing (because it can be used to change partial page contents).\n\nSo fuse_notify_store() must be more careful to fully initialize page\ncontents (including parts of the page that are beyond end-of-file)\nbefore marking the page uptodate.\n\nThe current code can leave beyond-EOF page contents uninitialized, which\nmakes these uninitialized page contents visible to userspace via mmap().\n\nThis is an information leak, but only affects systems which do not\nenable init-on-alloc (via CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y or the\ncorresponding kernel command line parameter).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-44964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix memory leaks and crashes while performing a soft reset\n\nThe second tagged commit introduced a UAF, as it removed restoring\nq_vector-\u003evport pointers after reinitializating the structures.\nThis is due to that all queue allocation functions are performed here\nwith the new temporary vport structure and those functions rewrite\nthe backpointers to the vport. Then, this new struct is freed and\nthe pointers start leading to nowhere.\n\nBut generally speaking, the current logic is very fragile. It claims\nto be more reliable when the system is low on memory, but in fact, it\nconsumes two times more memory as at the moment of running this\nfunction, there are two vports allocated with their queues and vectors.\nMoreover, it claims to prevent the driver from running into \"bad state\",\nbut in fact, any error during the rebuild leaves the old vport in the\npartially allocated state.\nFinally, if the interface is down when the function is called, it always\nallocates a new queue set, but when the user decides to enable the\ninterface later on, vport_open() allocates them once again, IOW there's\na clear memory leak here.\n\nJust don't allocate a new queue set when performing a reset, that solves\ncrashes and memory leaks. Readd the old queue number and reopen the\ninterface on rollback - that solves limbo states when the device is left\ndisabled and/or without HW queues enabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvfs: Don't evict inode under the inode lru traversing context\n\nThe inode reclaiming process(See function prune_icache_sb) collects all\nreclaimable inodes and mark them with I_FREEING flag at first, at that\ntime, other processes will be stuck if they try getting these inodes\n(See function find_inode_fast), then the reclaiming process destroy the\ninodes by function dispose_list(). Some filesystems(eg. ext4 with\nea_inode feature, ubifs with xattr) may do inode lookup in the inode\nevicting callback function, if the inode lookup is operated under the\ninode lru traversing context, deadlock problems may happen.\n\nCase 1: In function ext4_evict_inode(), the ea inode lookup could happen\n        if ea_inode feature is enabled, the lookup process will be stuck\n\tunder the evicting context like this:\n\n 1. File A has inode i_reg and an ea inode i_ea\n 2. getfattr(A, xattr_buf) // i_ea is added into lru // lru-\u003ei_ea\n 3. Then, following three processes running like this:\n\n    PA                              PB\n echo 2 \u003e /proc/sys/vm/drop_caches\n  shrink_slab\n   prune_dcache_sb\n   // i_reg is added into lru, lru-\u003ei_ea-\u003ei_reg\n   prune_icache_sb\n    list_lru_walk_one\n     inode_lru_isolate\n      i_ea-\u003ei_state |= I_FREEING // set inode state\n     inode_lru_isolate\n      __iget(i_reg)\n      spin_unlock(\u0026i_reg-\u003ei_lock)\n      spin_unlock(lru_lock)\n                                     rm file A\n                                      i_reg-\u003enlink = 0\n      iput(i_reg) // i_reg-\u003enlink is 0, do evict\n       ext4_evict_inode\n        ext4_xattr_delete_inode\n         ext4_xattr_inode_dec_ref_all\n          ext4_xattr_inode_iget\n           ext4_iget(i_ea-\u003ei_ino)\n            iget_locked\n             find_inode_fast\n              __wait_on_freeing_inode(i_ea) ----→ AA deadlock\n    dispose_list // cannot be executed by prune_icache_sb\n     wake_up_bit(\u0026i_ea-\u003ei_state)\n\nCase 2: In deleted inode writing function ubifs_jnl_write_inode(), file\n        deleting process holds BASEHD's wbuf-\u003eio_mutex while getting the\n\txattr inode, which could race with inode reclaiming process(The\n        reclaiming process could try locking BASEHD's wbuf-\u003eio_mutex in\n\tinode evicting function), then an ABBA deadlock problem would\n\thappen as following:\n\n 1. File A has inode ia and a xattr(with inode ixa), regular file B has\n    inode ib and a xattr.\n 2. getfattr(A, xattr_buf) // ixa is added into lru // lru-\u003eixa\n 3. Then, following three processes running like this:\n\n        PA                PB                        PC\n                echo 2 \u003e /proc/sys/vm/drop_caches\n                 shrink_slab\n                  prune_dcache_sb\n                  // ib and ia are added into lru, lru-\u003eixa-\u003eib-\u003eia\n                  prune_icache_sb\n                   list_lru_walk_one\n                    inode_lru_isolate\n                     ixa-\u003ei_state |= I_FREEING // set inode state\n                    inode_lru_isolate\n                     __iget(ib)\n                     spin_unlock(\u0026ib-\u003ei_lock)\n                     spin_unlock(lru_lock)\n                                                   rm file B\n                                                    ib-\u003enlink = 0\n rm file A\n  iput(ia)\n   ubifs_evict_inode(ia)\n    ubifs_jnl_delete_inode(ia)\n     ubifs_jnl_write_inode(ia)\n      make_reservation(BASEHD) // Lock wbuf-\u003eio_mutex\n      ubifs_iget(ixa-\u003ei_ino)\n       iget_locked\n        find_inode_fast\n         __wait_on_freeing_inode(ixa)\n          |          iput(ib) // ib-\u003enlink is 0, do evict\n          |           ubifs_evict_inode\n          |            ubifs_jnl_delete_inode(ib)\n          ↓             ubifs_jnl_write_inode\n     ABBA deadlock ←-----make_reservation(BASEHD)\n                   dispose_list // cannot be executed by prune_icache_sb\n                    wake_up_bit(\u0026ixa-\u003ei_state)\n\nFix the possible deadlock by using new inode state flag I_LRU_ISOLATING\nto pin the inode in memory while inode_lru_isolate(\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: move stopping keep-alive into nvme_uninit_ctrl()\n\nCommit 4733b65d82bd (\"nvme: start keep-alive after admin queue setup\")\nmoves starting keep-alive from nvme_start_ctrl() into\nnvme_init_ctrl_finish(), but don't move stopping keep-alive into\nnvme_uninit_ctrl(), so keep-alive work can be started and keep pending\nafter failing to start controller, finally use-after-free is triggered if\nnvme host driver is unloaded.\n\nThis patch fixes kernel panic when running nvme/004 in case that connection\nfailure is triggered, by moving stopping keep-alive into nvme_uninit_ctrl().\n\nThis way is reasonable because keep-alive is now started in\nnvme_init_ctrl_finish().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetem: fix return value if duplicate enqueue fails\n\nThere is a bug in netem_enqueue() introduced by\ncommit 5845f706388a (\"net: netem: fix skb length BUG_ON in __skb_to_sgvec\")\nthat can lead to a use-after-free.\n\nThis commit made netem_enqueue() always return NET_XMIT_SUCCESS\nwhen a packet is duplicated, which can cause the parent qdisc's q.qlen\nto be mistakenly incremented. When this happens qlen_notify() may be\nskipped on the parent during destruction, leaving a dangling pointer\nfor some classful qdiscs like DRR.\n\nThere are two ways for the bug happen:\n\n- If the duplicated packet is dropped by rootq-\u003eenqueue() and then\n  the original packet is also dropped.\n- If rootq-\u003eenqueue() sends the duplicated packet to a different qdisc\n  and the original packet is dropped.\n\nIn both cases NET_XMIT_SUCCESS is returned even though no packets\nare enqueued at the netem qdisc.\n\nThe fix is to defer the enqueue of the duplicate packet until after\nthe original packet has been guaranteed to return NET_XMIT_SUCCESS.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg_write_event_control(): fix a user-triggerable oops\n\nwe are *not* guaranteed that anything past the terminating NUL\nis mapped (let alone initialized with anything sane).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45026",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/dasd: fix error recovery leading to data corruption on ESE devices\n\nExtent Space Efficient (ESE) or thin provisioned volumes need to be\nformatted on demand during usual IO processing.\n\nThe dasd_ese_needs_format function checks for error codes that signal\nthe non existence of a proper track format.\n\nThe check for incorrect length is to imprecise since other error cases\nleading to transport of insufficient data also have this flag set.\nThis might lead to data corruption in certain error cases for example\nduring a storage server warmstart.\n\nFix by removing the check for incorrect length and replacing by\nexplicitly checking for invalid track format in transport mode.\n\nAlso remove the check for file protected since this is not a valid\nESE handling case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45310",
      "Description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:runc-1.1.14-150000.70.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45490",
      "Description": "An issue was discovered in libexpat before 2.6.3. xmlparse.c does not reject a negative length for XML_ParseBuffer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libexpat1-2.4.4-150400.3.25.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45491",
      "Description": "An issue was discovered in libexpat before 2.6.3. dtdCopy in xmlparse.c can have an integer overflow for nDefaultAtts on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libexpat1-2.4.4-150400.3.25.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45492",
      "Description": "An issue was discovered in libexpat before 2.6.3. nextScaffoldPart in xmlparse.c can have an integer overflow for m_groupSize on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libexpat1-2.4.4-150400.3.25.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45615",
      "Description": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. \nThe problem is missing  initialization of variables expected to be initialized (as arguments to other functions, etc.).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45616",
      "Description": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. \n\nThe following problems were caused by insufficient control of the response APDU buffer and its length when communicating with the card.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45617",
      "Description": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. \n\nInsufficient or missing checking of return values of functions leads to unexpected work with variables that have not been initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45618",
      "Description": "A vulnerability was found in pkcs15-init in OpenSC. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. \n\nInsufficient or missing checking of return values of functions leads to unexpected work with variables that have not been initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45619",
      "Description": "A vulnerability was found in OpenSC, OpenSC tools, PKCS#11 module, minidriver, and CTK. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. When buffers are partially filled with data, initialized parts of the buffer can be incorrectly accessed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45620",
      "Description": "A vulnerability was found in the pkcs15-init tool in OpenSC. An attacker could use a crafted USB Device or Smart Card, which would present the system with a specially crafted response to APDUs. When buffers are partially filled with data, initialized parts of the buffer can be incorrectly accessed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45817",
      "Description": "In x86's APIC (Advanced Programmable Interrupt Controller) architecture,\nerror conditions are reported in a status register.  Furthermore, the OS\ncan opt to receive an interrupt when a new error occurs.\n\nIt is possible to configure the error interrupt with an illegal vector,\nwhich generates an error when an error interrupt is raised.\n\nThis case causes Xen to recurse through vlapic_error().  The recursion\nitself is bounded; errors accumulate in the the status register and only\ngenerate an interrupt when a new status bit becomes set.\n\nHowever, the lock protecting this state in Xen will try to be taken\nrecursively, and deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45818",
      "Description": "The hypervisor contains code to accelerate VGA memory accesses for HVM\nguests, when the (virtual) VGA is in \"standard\" mode.  Locking involved\nthere has an unusual discipline, leaving a lock acquired past the\nreturn from the function that acquired it.  This behavior results in a\nproblem when emulating an instruction with two memory accesses, both of\nwhich touch VGA memory (plus some further constraints which aren't\nrelevant here).  When emulating the 2nd access, the lock that is already\nbeing held would be attempted to be re-acquired, resulting in a\ndeadlock.\n\nThis deadlock was already found when the code was first introduced, but\nwas analysed incorrectly and the fix was incomplete.  Analysis in light\nof the new finding cannot find a way to make the existing locking\ndiscipline work.\n\nIn staging, this logic has all been removed because it was discovered\nto be accidentally disabled since Xen 4.7.  Therefore, we are fixing the\nlocking problem by backporting the removal of most of the feature.  Note\nthat even with the feature disabled, the lock would still be acquired\nfor any accesses to the VGA MMIO region.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45819",
      "Description": "PVH guests have their ACPI tables constructed by the toolstack.  The\nconstruction involves building the tables in local memory, which are\nthen copied into guest memory.  While actually used parts of the local\nmemory are filled in correctly, excess space that is being allocated is\nleft with its prior contents.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:xen-libs-4.16.6_06-150400.4.65.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46674",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: st: fix probed platform device ref count on probe error path\n\nThe probe function never performs any paltform device allocation, thus\nerror path \"undo_platform_dev_alloc\" is entirely bogus.  It drops the\nreference count from the platform device being probed.  If error path is\ntriggered, this will lead to unbalanced device reference counts and\npremature release of device resources, thus possible use-after-free when\nreleasing remaining devm-managed resources.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46716",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: altera-msgdma: properly free descriptor in msgdma_free_descriptor\n\nRemove list_del call in msgdma_chan_desc_cleanup, this should be the role\nof msgdma_free_descriptor. In consequence replace list_add_tail with\nlist_move_tail in msgdma_free_descriptor.\n\nThis fixes the path:\n   msgdma_free_chan_resources -\u003e msgdma_free_descriptors -\u003e\n   msgdma_free_desc_list -\u003e msgdma_free_descriptor\n\nwhich does not correctly free the descriptors as first nodes were not\nremoved from the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46774",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/rtas: Prevent Spectre v1 gadget construction in sys_rtas()\n\nSmatch warns:\n\n  arch/powerpc/kernel/rtas.c:1932 __do_sys_rtas() warn: potential\n  spectre issue 'args.args' [r] (local cap)\n\nThe 'nargs' and 'nret' locals come directly from a user-supplied\nbuffer and are used as indexes into a small stack-based array and as\ninputs to copy_to_user() after they are subject to bounds checks.\n\nUse array_index_nospec() after the bounds checks to clamp these values\nfor speculative execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check link_index before accessing dc-\u003elinks[]\n\n[WHY \u0026 HOW]\ndc-\u003elinks[] has max size of MAX_LINKS and NULL is return when trying to\naccess with out-of-bound index.\n\nThis fixes 3 OVERRUN and 1 RESOURCE_LEAK issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check msg_id before processing transcation\n\n[WHY \u0026 HOW]\nHDCP_MESSAGE_ID_INVALID (-1) is not a valid msg_id nor is it a valid\narray index, and it needs checking before used.\n\nThis fixes 4 OVERRUN issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46815",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check num_valid_sets before accessing reader_wm_sets[]\n\n[WHY \u0026 HOW]\nnum_valid_sets needs to be checked to avoid a negative index when\naccessing reader_wm_sets[num_valid_sets - 1].\n\nThis fixes an OVERRUN issue reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46816",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Stop amdgpu_dm initialize when link nums greater than max_links\n\n[Why]\nCoverity report OVERRUN warning. There are\nonly max_links elements within dc-\u003elinks. link\ncount could up to AMDGPU_DM_MAX_DISPLAY_INDEX 31.\n\n[How]\nMake sure link count less than max_links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46817",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Stop amdgpu_dm initialize when stream nums greater than 6\n\n[Why]\nCoverity reports OVERRUN warning. Should abort amdgpu_dm\ninitialize.\n\n[How]\nReturn failure to amdgpu_dm_init.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46818",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check gpio_id before used as array index\n\n[WHY \u0026 HOW]\nGPIO_ID_UNKNOWN (-1) is not a valid value for array index and therefore\nshould be checked in advance.\n\nThis fixes 5 OVERRUN issues reported by Coverity.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: meson: axg-card: fix 'use-after-free'\n\nBuffer 'card-\u003edai_link' is reallocated in 'meson_card_reallocate_links()',\nso move 'pad' pointer initialization after this function when memory is\nalready reallocated.\n\nKasan bug report:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in axg_card_add_link+0x76c/0x9bc\nRead of size 8 at addr ffff000000e8b260 by task modprobe/356\n\nCPU: 0 PID: 356 Comm: modprobe Tainted: G O 6.9.12-sdkernel #1\nCall trace:\n dump_backtrace+0x94/0xec\n show_stack+0x18/0x24\n dump_stack_lvl+0x78/0x90\n print_report+0xfc/0x5c0\n kasan_report+0xb8/0xfc\n __asan_load8+0x9c/0xb8\n axg_card_add_link+0x76c/0x9bc [snd_soc_meson_axg_sound_card]\n meson_card_probe+0x344/0x3b8 [snd_soc_meson_card_utils]\n platform_probe+0x8c/0xf4\n really_probe+0x110/0x39c\n __driver_probe_device+0xb8/0x18c\n driver_probe_device+0x108/0x1d8\n __driver_attach+0xd0/0x25c\n bus_for_each_dev+0xe0/0x154\n driver_attach+0x34/0x44\n bus_add_driver+0x134/0x294\n driver_register+0xa8/0x1e8\n __platform_driver_register+0x44/0x54\n axg_card_pdrv_init+0x20/0x1000 [snd_soc_meson_axg_sound_card]\n do_one_initcall+0xdc/0x25c\n do_init_module+0x10c/0x334\n load_module+0x24c4/0x26cc\n init_module_from_file+0xd4/0x128\n __arm64_sys_finit_module+0x1f4/0x41c\n invoke_syscall+0x60/0x188\n el0_svc_common.constprop.0+0x78/0x13c\n do_el0_svc+0x30/0x40\n el0_svc+0x38/0x78\n el0t_64_sync_handler+0x100/0x12c\n el0t_64_sync+0x190/0x194",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47668",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlib/generic-radix-tree.c: Fix rare race in __genradix_ptr_alloc()\n\nIf we need to increase the tree depth, allocate a new node, and then\nrace with another thread that increased the tree depth before us, we'll\nstill have a preallocated node that might be used later.\n\nIf we then use that node for a new non-root node, it'll still have a\npointer to the old root instead of being zeroed - fix this by zeroing it\nin the cmpxchg failure path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47674",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: avoid leaving partial pfn mappings around in error case\n\nAs Jann points out, PFN mappings are special, because unlike normal\nmemory mappings, there is no lifetime information associated with the\nmapping - it is just a raw mapping of PFNs with no reference counting of\na 'struct page'.\n\nThat's all very much intentional, but it does mean that it's easy to\nmess up the cleanup in case of errors.  Yes, a failed mmap() will always\neventually clean up any partial mappings, but without any explicit\nlifetime in the page table mapping itself, it's very easy to do the\nerror handling in the wrong order.\n\nIn particular, it's easy to mistakenly free the physical backing store\nbefore the page tables are actually cleaned up and (temporarily) have\nstale dangling PTE entries.\n\nTo make this situation less error-prone, just make sure that any partial\npfn mapping is torn down early, before any other error handling.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47684",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: check skb is non-NULL in tcp_rto_delta_us()\n\nWe have some machines running stock Ubuntu 20.04.6 which is their 5.4.0-174-generic\nkernel that are running ceph and recently hit a null ptr dereference in\ntcp_rearm_rto(). Initially hitting it from the TLP path, but then later we also\nsaw it getting hit from the RACK case as well. Here are examples of the oops\nmessages we saw in each of those cases:\n\nJul 26 15:05:02 rx [11061395.780353] BUG: kernel NULL pointer dereference, address: 0000000000000020\nJul 26 15:05:02 rx [11061395.787572] #PF: supervisor read access in kernel mode\nJul 26 15:05:02 rx [11061395.792971] #PF: error_code(0x0000) - not-present page\nJul 26 15:05:02 rx [11061395.798362] PGD 0 P4D 0\nJul 26 15:05:02 rx [11061395.801164] Oops: 0000 [#1] SMP NOPTI\nJul 26 15:05:02 rx [11061395.805091] CPU: 0 PID: 9180 Comm: msgr-worker-1 Tainted: G W 5.4.0-174-generic #193-Ubuntu\nJul 26 15:05:02 rx [11061395.814996] Hardware name: Supermicro SMC 2x26 os-gen8 64C NVME-Y 256G/H12SSW-NTR, BIOS 2.5.V1.2U.NVMe.UEFI 05/09/2023\nJul 26 15:05:02 rx [11061395.825952] RIP: 0010:tcp_rearm_rto+0xe4/0x160\nJul 26 15:05:02 rx [11061395.830656] Code: 87 ca 04 00 00 00 5b 41 5c 41 5d 5d c3 c3 49 8b bc 24 40 06 00 00 eb 8d 48 bb cf f7 53 e3 a5 9b c4 20 4c 89 ef e8 0c fe 0e 00 \u003c48\u003e 8b 78 20 48 c1 ef 03 48 89 f8 41 8b bc 24 80 04 00 00 48 f7 e3\nJul 26 15:05:02 rx [11061395.849665] RSP: 0018:ffffb75d40003e08 EFLAGS: 00010246\nJul 26 15:05:02 rx [11061395.855149] RAX: 0000000000000000 RBX: 20c49ba5e353f7cf RCX: 0000000000000000\nJul 26 15:05:02 rx [11061395.862542] RDX: 0000000062177c30 RSI: 000000000000231c RDI: ffff9874ad283a60\nJul 26 15:05:02 rx [11061395.869933] RBP: ffffb75d40003e20 R08: 0000000000000000 R09: ffff987605e20aa8\nJul 26 15:05:02 rx [11061395.877318] R10: ffffb75d40003f00 R11: ffffb75d4460f740 R12: ffff9874ad283900\nJul 26 15:05:02 rx [11061395.884710] R13: ffff9874ad283a60 R14: ffff9874ad283980 R15: ffff9874ad283d30\nJul 26 15:05:02 rx [11061395.892095] FS: 00007f1ef4a2e700(0000) GS:ffff987605e00000(0000) knlGS:0000000000000000\nJul 26 15:05:02 rx [11061395.900438] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nJul 26 15:05:02 rx [11061395.906435] CR2: 0000000000000020 CR3: 0000003e450ba003 CR4: 0000000000760ef0\nJul 26 15:05:02 rx [11061395.913822] PKRU: 55555554\nJul 26 15:05:02 rx [11061395.916786] Call Trace:\nJul 26 15:05:02 rx [11061395.919488]\nJul 26 15:05:02 rx [11061395.921765] ? show_regs.cold+0x1a/0x1f\nJul 26 15:05:02 rx [11061395.925859] ? __die+0x90/0xd9\nJul 26 15:05:02 rx [11061395.929169] ? no_context+0x196/0x380\nJul 26 15:05:02 rx [11061395.933088] ? ip6_protocol_deliver_rcu+0x4e0/0x4e0\nJul 26 15:05:02 rx [11061395.938216] ? ip6_sublist_rcv_finish+0x3d/0x50\nJul 26 15:05:02 rx [11061395.943000] ? __bad_area_nosemaphore+0x50/0x1a0\nJul 26 15:05:02 rx [11061395.947873] ? bad_area_nosemaphore+0x16/0x20\nJul 26 15:05:02 rx [11061395.952486] ? do_user_addr_fault+0x267/0x450\nJul 26 15:05:02 rx [11061395.957104] ? ipv6_list_rcv+0x112/0x140\nJul 26 15:05:02 rx [11061395.961279] ? __do_page_fault+0x58/0x90\nJul 26 15:05:02 rx [11061395.965458] ? do_page_fault+0x2c/0xe0\nJul 26 15:05:02 rx [11061395.969465] ? page_fault+0x34/0x40\nJul 26 15:05:02 rx [11061395.973217] ? tcp_rearm_rto+0xe4/0x160\nJul 26 15:05:02 rx [11061395.977313] ? tcp_rearm_rto+0xe4/0x160\nJul 26 15:05:02 rx [11061395.981408] tcp_send_loss_probe+0x10b/0x220\nJul 26 15:05:02 rx [11061395.985937] tcp_write_timer_handler+0x1b4/0x240\nJul 26 15:05:02 rx [11061395.990809] tcp_write_timer+0x9e/0xe0\nJul 26 15:05:02 rx [11061395.994814] ? tcp_write_timer_handler+0x240/0x240\nJul 26 15:05:02 rx [11061395.999866] call_timer_fn+0x32/0x130\nJul 26 15:05:02 rx [11061396.003782] __run_timers.part.0+0x180/0x280\nJul 26 15:05:02 rx [11061396.008309] ? recalibrate_cpu_khz+0x10/0x10\nJul 26 15:05:02 rx [11061396.012841] ? native_x2apic_icr_write+0x30/0x30\nJul 26 15:05:02 rx [11061396.017718] ? lapic_next_even\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47706",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: fix possible UAF for bfqq-\u003ebic with merge chain\n\n1) initial state, three tasks:\n\n\t\tProcess 1       Process 2\tProcess 3\n\t\t (BIC1)          (BIC2)\t\t (BIC3)\n\t\t  |  Λ            |  Λ\t\t  |  Λ\n\t\t  |  |            |  |\t\t  |  |\n\t\t  V  |            V  |\t\t  V  |\n\t\t  bfqq1           bfqq2\t\t  bfqq3\nprocess ref:\t   1\t\t    1\t\t    1\n\n2) bfqq1 merged to bfqq2:\n\n\t\tProcess 1       Process 2\tProcess 3\n\t\t (BIC1)          (BIC2)\t\t (BIC3)\n\t\t  |               |\t\t  |  Λ\n\t\t  \\--------------\\|\t\t  |  |\n\t\t                  V\t\t  V  |\n\t\t  bfqq1---------\u003ebfqq2\t\t  bfqq3\nprocess ref:\t   0\t\t    2\t\t    1\n\n3) bfqq2 merged to bfqq3:\n\n\t\tProcess 1       Process 2\tProcess 3\n\t\t (BIC1)          (BIC2)\t\t (BIC3)\n\t here -\u003e Λ                |\t\t  |\n\t\t  \\--------------\\ \\-------------\\|\n\t\t                  V\t\t  V\n\t\t  bfqq1---------\u003ebfqq2----------\u003ebfqq3\nprocess ref:\t   0\t\t    1\t\t    3\n\nIn this case, IO from Process 1 will get bfqq2 from BIC1 first, and then\nget bfqq3 through merge chain, and finially handle IO by bfqq3.\nHowerver, current code will think bfqq2 is owned by BIC1, like initial\nstate, and set bfqq2-\u003ebic to BIC1.\n\nbfq_insert_request\n-\u003e by Process 1\n bfqq = bfq_init_rq(rq)\n  bfqq = bfq_get_bfqq_handle_split\n   bfqq = bic_to_bfqq\n   -\u003e get bfqq2 from BIC1\n bfqq-\u003eref++\n rq-\u003eelv.priv[0] = bic\n rq-\u003eelv.priv[1] = bfqq\n if (bfqq_process_refs(bfqq) == 1)\n  bfqq-\u003ebic = bic\n  -\u003e record BIC1 to bfqq2\n\n  __bfq_insert_request\n   new_bfqq = bfq_setup_cooperator\n   -\u003e get bfqq3 from bfqq2-\u003enew_bfqq\n   bfqq_request_freed(bfqq)\n   new_bfqq-\u003eref++\n   rq-\u003eelv.priv[1] = new_bfqq\n   -\u003e handle IO by bfqq3\n\nFix the problem by checking bfqq is from merge chain fist. And this\nmight fix a following problem reported by our syzkaller(unreproducible):\n\n==================================================================\nBUG: KASAN: slab-use-after-free in bfq_do_early_stable_merge block/bfq-iosched.c:5692 [inline]\nBUG: KASAN: slab-use-after-free in bfq_do_or_sched_stable_merge block/bfq-iosched.c:5805 [inline]\nBUG: KASAN: slab-use-after-free in bfq_get_queue+0x25b0/0x2610 block/bfq-iosched.c:5889\nWrite of size 1 at addr ffff888123839eb8 by task kworker/0:1H/18595\n\nCPU: 0 PID: 18595 Comm: kworker/0:1H Tainted: G             L     6.6.0-07439-gba2303cacfda #6\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\nWorkqueue: kblockd blk_mq_requeue_work\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x91/0xf0 lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:364 [inline]\n print_report+0x10d/0x610 mm/kasan/report.c:475\n kasan_report+0x8e/0xc0 mm/kasan/report.c:588\n bfq_do_early_stable_merge block/bfq-iosched.c:5692 [inline]\n bfq_do_or_sched_stable_merge block/bfq-iosched.c:5805 [inline]\n bfq_get_queue+0x25b0/0x2610 block/bfq-iosched.c:5889\n bfq_get_bfqq_handle_split+0x169/0x5d0 block/bfq-iosched.c:6757\n bfq_init_rq block/bfq-iosched.c:6876 [inline]\n bfq_insert_request block/bfq-iosched.c:6254 [inline]\n bfq_insert_requests+0x1112/0x5cf0 block/bfq-iosched.c:6304\n blk_mq_insert_request+0x290/0x8d0 block/blk-mq.c:2593\n blk_mq_requeue_work+0x6bc/0xa70 block/blk-mq.c:1502\n process_one_work kernel/workqueue.c:2627 [inline]\n process_scheduled_works+0x432/0x13f0 kernel/workqueue.c:2700\n worker_thread+0x6f2/0x1160 kernel/workqueue.c:2781\n kthread+0x33c/0x440 kernel/kthread.c:388\n ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:305\n \u003c/TASK\u003e\n\nAllocated by task 20776:\n kasan_save_stack+0x20/0x40 mm/kasan/common.c:45\n kasan_set_track+0x25/0x30 mm/kasan/common.c:52\n __kasan_slab_alloc+0x87/0x90 mm/kasan/common.c:328\n kasan_slab_alloc include/linux/kasan.h:188 [inline]\n slab_post_alloc_hook mm/slab.h:763 [inline]\n slab_alloc_node mm/slub.c:3458 [inline]\n kmem_cache_alloc_node+0x1a4/0x6f0 mm/slub.c:3503\n ioc_create_icq block/blk-ioc.c:370 [inline]\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47747",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: seeq: Fix use after free vulnerability in ether3 Driver Due to Race Condition\n\nIn the ether3_probe function, a timer is initialized with a callback\nfunction ether3_ledoff, bound to \u0026prev(dev)-\u003etimer. Once the timer is\nstarted, there is a risk of a race condition if the module or device\nis removed, triggering the ether3_remove function to perform cleanup.\nThe sequence of operations that may lead to a UAF bug is as follows:\n\nCPU0                                    CPU1\n\n                      |  ether3_ledoff\nether3_remove         |\n  free_netdev(dev);   |\n  put_devic           |\n  kfree(dev);         |\n |  ether3_outw(priv(dev)-\u003eregs.config2 |= CFG2_CTRLO, REG_CONFIG2);\n                      | // use dev\n\nFix it by ensuring that the timer is canceled before proceeding with\nthe cleanup in ether3_remove.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47748",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvhost_vdpa: assign irq bypass producer token correctly\n\nWe used to call irq_bypass_unregister_producer() in\nvhost_vdpa_setup_vq_irq() which is problematic as we don't know if the\ntoken pointer is still valid or not.\n\nActually, we use the eventfd_ctx as the token so the life cycle of the\ntoken should be bound to the VHOST_SET_VRING_CALL instead of\nvhost_vdpa_setup_vq_irq() which could be called by set_status().\n\nFixing this by setting up irq bypass producer's token when handling\nVHOST_SET_VRING_CALL and un-registering the producer before calling\nvhost_vring_ioctl() to prevent a possible use after free as eventfd\ncould have been released in vhost_vring_ioctl(). And such registering\nand unregistering will only be done if DRIVER_OK is set.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47757",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential oob read in nilfs_btree_check_delete()\n\nThe function nilfs_btree_check_delete(), which checks whether degeneration\nto direct mapping occurs before deleting a b-tree entry, causes memory\naccess outside the block buffer when retrieving the maximum key if the\nroot node has no entries.\n\nThis does not usually happen because b-tree mappings with 0 child nodes\nare never created by mkfs.nilfs2 or nilfs2 itself.  However, it can happen\nif the b-tree root node read from a device is configured that way, so fix\nthis potential issue by adding a check for that case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: sysfs: validate return type of _STR method\n\nOnly buffer objects are valid return values of _STR.\n\nIf something else is returned description_show() will access invalid\nmemory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: wait for fixup workers before stopping cleaner kthread during umount\n\nDuring unmount, at close_ctree(), we have the following steps in this order:\n\n1) Park the cleaner kthread - this doesn't destroy the kthread, it basically\n   halts its execution (wake ups against it work but do nothing);\n\n2) We stop the cleaner kthread - this results in freeing the respective\n   struct task_struct;\n\n3) We call btrfs_stop_all_workers() which waits for any jobs running in all\n   the work queues and then free the work queues.\n\nSyzbot reported a case where a fixup worker resulted in a crash when doing\na delayed iput on its inode while attempting to wake up the cleaner at\nbtrfs_add_delayed_iput(), because the task_struct of the cleaner kthread\nwas already freed. This can happen during unmount because we don't wait\nfor any fixup workers still running before we call kthread_stop() against\nthe cleaner kthread, which stops and free all its resources.\n\nFix this by waiting for any fixup workers at close_ctree() before we call\nkthread_stop() against the cleaner and run pending delayed iputs.\n\nThe stack traces reported by syzbot were the following:\n\n  BUG: KASAN: slab-use-after-free in __lock_acquire+0x77/0x2050 kernel/locking/lockdep.c:5065\n  Read of size 8 at addr ffff8880272a8a18 by task kworker/u8:3/52\n\n  CPU: 1 UID: 0 PID: 52 Comm: kworker/u8:3 Not tainted 6.12.0-rc1-syzkaller #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\n  Workqueue: btrfs-fixup btrfs_work_helper\n  Call Trace:\n   \u003cTASK\u003e\n   __dump_stack lib/dump_stack.c:94 [inline]\n   dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\n   print_address_description mm/kasan/report.c:377 [inline]\n   print_report+0x169/0x550 mm/kasan/report.c:488\n   kasan_report+0x143/0x180 mm/kasan/report.c:601\n   __lock_acquire+0x77/0x2050 kernel/locking/lockdep.c:5065\n   lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5825\n   __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]\n   _raw_spin_lock_irqsave+0xd5/0x120 kernel/locking/spinlock.c:162\n   class_raw_spinlock_irqsave_constructor include/linux/spinlock.h:551 [inline]\n   try_to_wake_up+0xb0/0x1480 kernel/sched/core.c:4154\n   btrfs_writepage_fixup_worker+0xc16/0xdf0 fs/btrfs/inode.c:2842\n   btrfs_work_helper+0x390/0xc50 fs/btrfs/async-thread.c:314\n   process_one_work kernel/workqueue.c:3229 [inline]\n   process_scheduled_works+0xa63/0x1850 kernel/workqueue.c:3310\n   worker_thread+0x870/0xd30 kernel/workqueue.c:3391\n   kthread+0x2f0/0x390 kernel/kthread.c:389\n   ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\n   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n   \u003c/TASK\u003e\n\n  Allocated by task 2:\n   kasan_save_stack mm/kasan/common.c:47 [inline]\n   kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n   unpoison_slab_object mm/kasan/common.c:319 [inline]\n   __kasan_slab_alloc+0x66/0x80 mm/kasan/common.c:345\n   kasan_slab_alloc include/linux/kasan.h:247 [inline]\n   slab_post_alloc_hook mm/slub.c:4086 [inline]\n   slab_alloc_node mm/slub.c:4135 [inline]\n   kmem_cache_alloc_node_noprof+0x16b/0x320 mm/slub.c:4187\n   alloc_task_struct_node kernel/fork.c:180 [inline]\n   dup_task_struct+0x57/0x8c0 kernel/fork.c:1107\n   copy_process+0x5d1/0x3d50 kernel/fork.c:2206\n   kernel_clone+0x223/0x880 kernel/fork.c:2787\n   kernel_thread+0x1bc/0x240 kernel/fork.c:2849\n   create_kthread kernel/kthread.c:412 [inline]\n   kthreadd+0x60d/0x810 kernel/kthread.c:765\n   ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\n   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\n  Freed by task 61:\n   kasan_save_stack mm/kasan/common.c:47 [inline]\n   kasan_save_track+0x3f/0x80 mm/kasan/common.c:68\n   kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579\n   poison_slab_object mm/kasan/common.c:247 [inline]\n   __kasan_slab_free+0x59/0x70 mm/kasan/common.c:264\n   kasan_slab_free include/linux/kasan.h:230 [inline]\n   slab_free_h\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: efifb: Register sysfs groups through driver core\n\nThe driver core can register and cleanup sysfs groups already.\nMake use of that functionality to simplify the error handling and\ncleanup.\n\nAlso avoid a UAF race during unregistering where the sysctl attributes\nwere usable after the info struct was freed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix array out-of-bound access in SoC stats\n\nCurrently, the ath11k_soc_dp_stats::hal_reo_error array is defined with a\nmaximum size of DP_REO_DST_RING_MAX. However, the ath11k_dp_process_rx()\nfunction access ath11k_soc_dp_stats::hal_reo_error using the REO\ndestination SRNG ring ID, which is incorrect. SRNG ring ID differ from\nnormal ring ID, and this usage leads to out-of-bounds array access. To fix\nthis issue, modify ath11k_dp_process_rx() to use the normal ring ID\ndirectly instead of the SRNG ring ID to avoid out-of-bounds array access.\n\nTested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/xen-netback: prevent UAF in xenvif_flush_hash()\n\nDuring the list_for_each_entry_rcu iteration call of xenvif_flush_hash,\nkfree_rcu does not exist inside the rcu read critical section, so if\nkfree_rcu is called when the rcu grace period ends during the iteration,\nUAF occurs when accessing head-\u003enext after the entry becomes free.\n\nTherefore, to solve this, you need to change it to list_for_each_entry_safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/ncsi: Disable the ncsi work before freeing the associated structure\n\nThe work function can run after the ncsi device is freed, resulting\nin use-after-free bugs or kernel panic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix timer use-after-free on failed mount\n\nSyzbot has found an ODEBUG bug in ext4_fill_super\n\nThe del_timer_sync function cancels the s_err_report timer,\nwhich reminds about filesystem errors daily. We should\nguarantee the timer is no longer active before kfree(sbi).\n\nWhen filesystem mounting fails, the flow goes to failed_mount3,\nwhere an error occurs when ext4_stop_mmpd is called, causing\na read I/O failure. This triggers the ext4_handle_error function\nthat ultimately re-arms the timer,\nleaving the s_err_report timer active before kfree(sbi) is called.\n\nFix the issue by canceling the s_err_report timer after calling ext4_stop_mmpd.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix index out of bounds in DCN30 color transformation\n\nThis commit addresses a potential index out of bounds issue in the\n`cm3_helper_translate_curve_to_hw_format` function in the DCN30 color\nmanagement module. The issue could occur when the index 'i' exceeds the\nnumber of transfer function points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, the function returns\nfalse to indicate an error.\n\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:180 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.red' 1025 \u003c= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:181 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.green' 1025 \u003c= s32max\ndrivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:182 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf-\u003etf_pts.blue' 1025 \u003c= s32max",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49974",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Limit the number of concurrent async COPY operations\n\nNothing appears to limit the number of concurrent async COPY\noperations that clients can start. In addition, AFAICT each async\nCOPY can copy an unlimited number of 4MB chunks, so can run for a\nlong time. Thus IMO async COPY can become a DoS vector.\n\nAdd a restriction mechanism that bounds the number of concurrent\nbackground COPY operations. Start simple and try to be fair -- this\npatch implements a per-namespace limit.\n\nAn async COPY request that occurs while this limit is exceeded gets\nNFS4ERR_DELAY. The requesting client can choose to send the request\nagain after a delay or fall back to a traditional read/write style\ncopy.\n\nIf there is need to make the mechanism more sophisticated, we can\nvisit that in future patches.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49991",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: amdkfd_free_gtt_mem clear the correct pointer\n\nPass pointer reference to amdgpu_bo_unref to clear the correct pointer,\notherwise amdgpu_bo_unref clear the local variable, the original pointer\nnot set to NULL, this could cause use-after-free bug.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49995",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50017",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm/ident_map: Use gbpages only where full GB page should be mapped.\n\nWhen ident_pud_init() uses only GB pages to create identity maps, large\nranges of addresses not actually requested can be included in the resulting\ntable; a 4K request will map a full GB.  This can include a lot of extra\naddress space past that requested, including areas marked reserved by the\nBIOS.  That allows processor speculation into reserved regions, that on UV\nsystems can cause system halts.\n\nOnly use GB pages when map creation requests include the full GB page of\nspace.  Fall back to using smaller 2M pages when only portions of a GB page\nare included in the request.\n\nNo attempt is made to coalesce mapping requests. If a request requires a\nmap entry at the 2M (pmd) level, subsequent mapping requests within the\nsame 1G region will also be at the pmd level, even if adjacent or\noverlapping such requests could have been combined to map a full GB page.\nExisting usage starts with larger regions and then adds smaller regions, so\nthis should not have any great consequence.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50047",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in async decryption\n\nDoing an async decryption (large read) crashes with a\nslab-use-after-free way down in the crypto API.\n\nReproducer:\n    # mount.cifs -o ...,seal,esize=1 //srv/share /mnt\n    # dd if=/mnt/largefile of=/dev/null\n    ...\n    [  194.196391] ==================================================================\n    [  194.196844] BUG: KASAN: slab-use-after-free in gf128mul_4k_lle+0xc1/0x110\n    [  194.197269] Read of size 8 at addr ffff888112bd0448 by task kworker/u77:2/899\n    [  194.197707]\n    [  194.197818] CPU: 12 UID: 0 PID: 899 Comm: kworker/u77:2 Not tainted 6.11.0-lku-00028-gfca3ca14a17a-dirty #43\n    [  194.198400] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.2-3-gd478f380-prebuilt.qemu.org 04/01/2014\n    [  194.199046] Workqueue: smb3decryptd smb2_decrypt_offload [cifs]\n    [  194.200032] Call Trace:\n    [  194.200191]  \u003cTASK\u003e\n    [  194.200327]  dump_stack_lvl+0x4e/0x70\n    [  194.200558]  ? gf128mul_4k_lle+0xc1/0x110\n    [  194.200809]  print_report+0x174/0x505\n    [  194.201040]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10\n    [  194.201352]  ? srso_return_thunk+0x5/0x5f\n    [  194.201604]  ? __virt_addr_valid+0xdf/0x1c0\n    [  194.201868]  ? gf128mul_4k_lle+0xc1/0x110\n    [  194.202128]  kasan_report+0xc8/0x150\n    [  194.202361]  ? gf128mul_4k_lle+0xc1/0x110\n    [  194.202616]  gf128mul_4k_lle+0xc1/0x110\n    [  194.202863]  ghash_update+0x184/0x210\n    [  194.203103]  shash_ahash_update+0x184/0x2a0\n    [  194.203377]  ? __pfx_shash_ahash_update+0x10/0x10\n    [  194.203651]  ? srso_return_thunk+0x5/0x5f\n    [  194.203877]  ? crypto_gcm_init_common+0x1ba/0x340\n    [  194.204142]  gcm_hash_assoc_remain_continue+0x10a/0x140\n    [  194.204434]  crypt_message+0xec1/0x10a0 [cifs]\n    [  194.206489]  ? __pfx_crypt_message+0x10/0x10 [cifs]\n    [  194.208507]  ? srso_return_thunk+0x5/0x5f\n    [  194.209205]  ? srso_return_thunk+0x5/0x5f\n    [  194.209925]  ? srso_return_thunk+0x5/0x5f\n    [  194.210443]  ? srso_return_thunk+0x5/0x5f\n    [  194.211037]  decrypt_raw_data+0x15f/0x250 [cifs]\n    [  194.212906]  ? __pfx_decrypt_raw_data+0x10/0x10 [cifs]\n    [  194.214670]  ? srso_return_thunk+0x5/0x5f\n    [  194.215193]  smb2_decrypt_offload+0x12a/0x6c0 [cifs]\n\nThis is because TFM is being used in parallel.\n\nFix this by allocating a new AEAD TFM for async decryption, but keep\nthe existing one for synchronous READ cases (similar to what is done\nin smb3_calc_signature()).\n\nAlso remove the calls to aead_request_set_callback() and\ncrypto_wait_req() since it's always going to be a synchronous operation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50089",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50115",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: nSVM: Ignore nCR3[4:0] when loading PDPTEs from memory\n\nIgnore nCR3[4:0] when loading PDPTEs from memory for nested SVM, as bits\n4:0 of CR3 are ignored when PAE paging is used, and thus VMRUN doesn't\nenforce 32-byte alignment of nCR3.\n\nIn the absolute worst case scenario, failure to ignore bits 4:0 can result\nin an out-of-bounds read, e.g. if the target page is at the end of a\nmemslot, and the VMM isn't using guard pages.\n\nPer the APM:\n\n  The CR3 register points to the base address of the page-directory-pointer\n  table. The page-directory-pointer table is aligned on a 32-byte boundary,\n  with the low 5 address bits 4:0 assumed to be 0.\n\nAnd the SDM's much more explicit:\n\n  4:0    Ignored\n\nNote, KVM gets this right when loading PDPTRs, it's only the nSVM flow\nthat is broken.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50125",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: SCO: Fix UAF on sco_sock_timeout\n\nconn-\u003esk maybe have been unlinked/freed while waiting for sco_conn_lock\nso this checks if the conn-\u003esk is still valid by checking if it part of\nsco_sk_list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50127",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix use-after-free in taprio_change()\n\nIn 'taprio_change()', 'admin' pointer may become dangling due to sched\nswitch / removal caused by 'advance_sched()', and critical section\nprotected by 'q-\u003ecurrent_entry_lock' is too small to prevent from such\na scenario (which causes use-after-free detected by KASAN). Fix this\nby prefer 'rcu_replace_pointer()' over 'rcu_assign_pointer()' to update\n'admin' immediately before an attempt to schedule freeing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50154",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp/dccp: Don't use timer_pending() in reqsk_queue_unlink().\n\nMartin KaFai Lau reported use-after-free [0] in reqsk_timer_handler().\n\n  \"\"\"\n  We are seeing a use-after-free from a bpf prog attached to\n  trace_tcp_retransmit_synack. The program passes the req-\u003esk to the\n  bpf_sk_storage_get_tracing kernel helper which does check for null\n  before using it.\n  \"\"\"\n\nThe commit 83fccfc3940c (\"inet: fix potential deadlock in\nreqsk_queue_unlink()\") added timer_pending() in reqsk_queue_unlink() not\nto call del_timer_sync() from reqsk_timer_handler(), but it introduced a\nsmall race window.\n\nBefore the timer is called, expire_timers() calls detach_timer(timer, true)\nto clear timer-\u003eentry.pprev and marks it as not pending.\n\nIf reqsk_queue_unlink() checks timer_pending() just after expire_timers()\ncalls detach_timer(), TCP will miss del_timer_sync(); the reqsk timer will\ncontinue running and send multiple SYN+ACKs until it expires.\n\nThe reported UAF could happen if req-\u003esk is close()d earlier than the timer\nexpiration, which is 63s by default.\n\nThe scenario would be\n\n  1. inet_csk_complete_hashdance() calls inet_csk_reqsk_queue_drop(),\n     but del_timer_sync() is missed\n\n  2. reqsk timer is executed and scheduled again\n\n  3. req-\u003esk is accept()ed and reqsk_put() decrements rsk_refcnt, but\n     reqsk timer still has another one, and inet_csk_accept() does not\n     clear req-\u003esk for non-TFO sockets\n\n  4. sk is close()d\n\n  5. reqsk timer is executed again, and BPF touches req-\u003esk\n\nLet's not use timer_pending() by passing the caller context to\n__inet_csk_reqsk_queue_drop().\n\nNote that reqsk timer is pinned, so the issue does not happen in most\nuse cases. [1]\n\n[0]\nBUG: KFENCE: use-after-free read in bpf_sk_storage_get_tracing+0x2e/0x1b0\n\nUse-after-free read at 0x00000000a891fb3a (in kfence-#1):\nbpf_sk_storage_get_tracing+0x2e/0x1b0\nbpf_prog_5ea3e95db6da0438_tcp_retransmit_synack+0x1d20/0x1dda\nbpf_trace_run2+0x4c/0xc0\ntcp_rtx_synack+0xf9/0x100\nreqsk_timer_handler+0xda/0x3d0\nrun_timer_softirq+0x292/0x8a0\nirq_exit_rcu+0xf5/0x320\nsysvec_apic_timer_interrupt+0x6d/0x80\nasm_sysvec_apic_timer_interrupt+0x16/0x20\nintel_idle_irq+0x5a/0xa0\ncpuidle_enter_state+0x94/0x273\ncpu_startup_entry+0x15e/0x260\nstart_secondary+0x8a/0x90\nsecondary_startup_64_no_verify+0xfa/0xfb\n\nkfence-#1: 0x00000000a72cc7b6-0x00000000d97616d9, size=2376, cache=TCPv6\n\nallocated by task 0 on cpu 9 at 260507.901592s:\nsk_prot_alloc+0x35/0x140\nsk_clone_lock+0x1f/0x3f0\ninet_csk_clone_lock+0x15/0x160\ntcp_create_openreq_child+0x1f/0x410\ntcp_v6_syn_recv_sock+0x1da/0x700\ntcp_check_req+0x1fb/0x510\ntcp_v6_rcv+0x98b/0x1420\nipv6_list_rcv+0x2258/0x26e0\nnapi_complete_done+0x5b1/0x2990\nmlx5e_napi_poll+0x2ae/0x8d0\nnet_rx_action+0x13e/0x590\nirq_exit_rcu+0xf5/0x320\ncommon_interrupt+0x80/0x90\nasm_common_interrupt+0x22/0x40\ncpuidle_enter_state+0xfb/0x273\ncpu_startup_entry+0x15e/0x260\nstart_secondary+0x8a/0x90\nsecondary_startup_64_no_verify+0xfa/0xfb\n\nfreed by task 0 on cpu 9 at 260507.927527s:\nrcu_core_si+0x4ff/0xf10\nirq_exit_rcu+0xf5/0x320\nsysvec_apic_timer_interrupt+0x6d/0x80\nasm_sysvec_apic_timer_interrupt+0x16/0x20\ncpuidle_enter_state+0xfb/0x273\ncpu_startup_entry+0x15e/0x260\nstart_secondary+0x8a/0x90\nsecondary_startup_64_no_verify+0xfa/0xfb",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50205",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: firewire-lib: Avoid division by zero in apply_constraint_to_size()\n\nThe step variable is initialized to zero. It is changed in the loop,\nbut if it's not changed it will remain zero. Add a variable check\nbefore the division.\n\nThe observed behavior was introduced by commit 826b5de90c0b\n(\"ALSA: firewire-lib: fix insufficient PCM rule for period/buffer size\"),\nand it is difficult to show that any of the interval parameters will\nsatisfy the snd_interval_test() condition with data from the\namdtp_rate_table[] table.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50208",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/bnxt_re: Fix a bug while setting up Level-2 PBL pages\n\nAvoid memory corruption while setting up Level-2 PBL pages for the non MR\nresources when num_pages \u003e 256K.\n\nThere will be a single PDE page address (contiguous pages in the case of \u003e\nPAGE_SIZE), but, current logic assumes multiple pages, leading to invalid\nmemory access after 256K PBL entries in the PDE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50259",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetdevsim: Add trailing zero to terminate the string in nsim_nexthop_bucket_activity_write()\n\nThis was found by a static analyzer.\nWe should not forget the trailing zero after copy_from_user()\nif we will further do some string operations, sscanf() in this\ncase. Adding a trailing zero will ensure that the function\nperforms properly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50264",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock/virtio: Initialization of the dangling pointer occurring in vsk-\u003etrans\n\nDuring loopback communication, a dangling pointer can be created in\nvsk-\u003etrans, potentially leading to a Use-After-Free condition.  This\nissue is resolved by initializing vsk-\u003etrans to NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50267",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: serial: io_edgeport: fix use after free in debug printk\n\nThe \"dev_dbg(\u0026urb-\u003edev-\u003edev, ...\" which happens after usb_free_urb(urb)\nis a use after free of the \"urb\" pointer.  Store the \"dev\" pointer at the\nstart of the function to avoid this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50274",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: avoid vport access in idpf_get_link_ksettings\n\nWhen the device control plane is removed or the platform\nrunning device control plane is rebooted, a reset is detected\non the driver. On driver reset, it releases the resources and\nwaits for the reset to complete. If the reset fails, it takes\nthe error path and releases the vport lock. At this time if the\nmonitoring tools tries to access link settings, it call traces\nfor accessing released vport pointer.\n\nTo avoid it, move link_speed_mbps to netdev_priv structure\nwhich removes the dependency on vport pointer and the vport lock\nin idpf_get_link_ksettings. Also use netif_carrier_ok()\nto check the link status and adjust the offsetof to use link_up\ninstead of link_speed_mbps.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50279",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm cache: fix out-of-bounds access to the dirty bitset when resizing\n\ndm-cache checks the dirty bits of the cache blocks to be dropped when\nshrinking the fast device, but an index bug in bitset iteration causes\nout-of-bounds access.\n\nReproduce steps:\n\n1. create a cache device of 1024 cache blocks (128 bytes dirty bitset)\n\ndmsetup create cmeta --table \"0 8192 linear /dev/sdc 0\"\ndmsetup create cdata --table \"0 131072 linear /dev/sdc 8192\"\ndmsetup create corig --table \"0 524288 linear /dev/sdc 262144\"\ndd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1 oflag=direct\ndmsetup create cache --table \"0 524288 cache /dev/mapper/cmeta \\\n/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0\"\n\n2. shrink the fast device to 512 cache blocks, triggering out-of-bounds\n   access to the dirty bitset (offset 0x80)\n\ndmsetup suspend cache\ndmsetup reload cdata --table \"0 65536 linear /dev/sdc 8192\"\ndmsetup resume cdata\ndmsetup resume cache\n\nKASAN reports:\n\n  BUG: KASAN: vmalloc-out-of-bounds in cache_preresume+0x269/0x7b0\n  Read of size 8 at addr ffffc900000f3080 by task dmsetup/131\n\n  (...snip...)\n  The buggy address belongs to the virtual mapping at\n   [ffffc900000f3000, ffffc900000f5000) created by:\n   cache_ctr+0x176a/0x35f0\n\n  (...snip...)\n  Memory state around the buggy address:\n   ffffc900000f2f80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n   ffffc900000f3000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  \u003effffc900000f3080: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n                     ^\n   ffffc900000f3100: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n   ffffc900000f3180: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n\nFix by making the index post-incremented.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50290",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: cx24116: prevent overflows on SNR calculus\n\nas reported by Coverity, if reading SNR registers fail, a negative\nnumber will be returned, causing an underflow when reading SNR\nregisters.\n\nPrevent that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50301",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsecurity/keys: fix slab-out-of-bounds in key_task_permission\n\nKASAN reports an out of bounds read:\nBUG: KASAN: slab-out-of-bounds in __kuid_val include/linux/uidgid.h:36\nBUG: KASAN: slab-out-of-bounds in uid_eq include/linux/uidgid.h:63 [inline]\nBUG: KASAN: slab-out-of-bounds in key_task_permission+0x394/0x410\nsecurity/keys/permission.c:54\nRead of size 4 at addr ffff88813c3ab618 by task stress-ng/4362\n\nCPU: 2 PID: 4362 Comm: stress-ng Not tainted 5.10.0-14930-gafbffd6c3ede #15\nCall Trace:\n __dump_stack lib/dump_stack.c:82 [inline]\n dump_stack+0x107/0x167 lib/dump_stack.c:123\n print_address_description.constprop.0+0x19/0x170 mm/kasan/report.c:400\n __kasan_report.cold+0x6c/0x84 mm/kasan/report.c:560\n kasan_report+0x3a/0x50 mm/kasan/report.c:585\n __kuid_val include/linux/uidgid.h:36 [inline]\n uid_eq include/linux/uidgid.h:63 [inline]\n key_task_permission+0x394/0x410 security/keys/permission.c:54\n search_nested_keyrings+0x90e/0xe90 security/keys/keyring.c:793\n\nThis issue was also reported by syzbot.\n\nIt can be reproduced by following these steps(more details [1]):\n1. Obtain more than 32 inputs that have similar hashes, which ends with the\n   pattern '0xxxxxxxe6'.\n2. Reboot and add the keys obtained in step 1.\n\nThe reproducer demonstrates how this issue happened:\n1. In the search_nested_keyrings function, when it iterates through the\n   slots in a node(below tag ascend_to_node), if the slot pointer is meta\n   and node-\u003eback_pointer != NULL(it means a root), it will proceed to\n   descend_to_node. However, there is an exception. If node is the root,\n   and one of the slots points to a shortcut, it will be treated as a\n   keyring.\n2. Whether the ptr is keyring decided by keyring_ptr_is_keyring function.\n   However, KEYRING_PTR_SUBTYPE is 0x2UL, the same as\n   ASSOC_ARRAY_PTR_SUBTYPE_MASK.\n3. When 32 keys with the similar hashes are added to the tree, the ROOT\n   has keys with hashes that are not similar (e.g. slot 0) and it splits\n   NODE A without using a shortcut. When NODE A is filled with keys that\n   all hashes are xxe6, the keys are similar, NODE A will split with a\n   shortcut. Finally, it forms the tree as shown below, where slot 6 points\n   to a shortcut.\n\n                      NODE A\n              +------\u003e+---+\n      ROOT    |       | 0 | xxe6\n      +---+   |       +---+\n xxxx | 0 | shortcut  :   : xxe6\n      +---+   |       +---+\n xxe6 :   :   |       |   | xxe6\n      +---+   |       +---+\n      | 6 |---+       :   : xxe6\n      +---+           +---+\n xxe6 :   :           | f | xxe6\n      +---+           +---+\n xxe6 | f |\n      +---+\n\n4. As mentioned above, If a slot(slot 6) of the root points to a shortcut,\n   it may be mistakenly transferred to a key*, leading to a read\n   out-of-bounds read.\n\nTo fix this issue, one should jump to descend_to_node if the ptr is a\nshortcut, regardless of whether the node is root or not.\n\n[1] https://lore.kernel.org/linux-kernel/1cfa878e-8c7b-4570-8606-21daf5e13ce7@huaweicloud.com/\n\n[jarkko: tweaked the commit message a bit to have an appropriate closes\n tag.]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50302",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: zero-initialize the report buffer\n\nSince the report buffer is used by all kinds of drivers in various ways, let's\nzero-initialize it during allocation to make sure that it can't be ever used\nto leak kernel memory via specially-crafted report.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50602",
      "Description": "An issue was discovered in libexpat before 2.6.4. There is a crash within the XML_ResumeParser function because XML_StopParser can stop/suspend an unstarted parser.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libexpat1-2.4.4-150400.3.25.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-52533",
      "Description": "gio/gsocks4aproxy.c in GNOME GLib before 2.82.1 has an off-by-one error and resultant buffer overflow because SOCKS4_CONN_MSG_LEN is not sufficient for a trailing '\\0' character.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:glib2-tools-2.70.5-150400.3.17.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libgio-2_0-0-2.70.5-150400.3.17.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libglib-2_0-0-2.70.5-150400.3.17.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libgmodule-2_0-0-2.70.5-150400.3.17.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libgobject-2_0-0-2.70.5-150400.3.17.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-52616",
      "Description": "A flaw was found in the Avahi-daemon, where it initializes DNS transaction IDs randomly only once at startup, incrementing them sequentially after that. This predictable behavior facilitates DNS spoofing attacks, allowing attackers to guess transaction IDs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libavahi-client3-0.8-150400.7.20.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libavahi-common3-0.8-150400.7.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53061",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: s5p-jpeg: prevent buffer overflows\n\nThe current logic allows word to be less than 2. If this happens,\nthere will be buffer overflows, as reported by smatch. Add extra\nchecks to prevent it.\n\nWhile here, remove an unused word = 0 assignment.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53063",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvbdev: prevent the risk of out of memory access\n\nThe dvbdev contains a static variable used to store dvb minors.\n\nThe behavior of it depends if CONFIG_DVB_DYNAMIC_MINORS is set\nor not. When not set, dvb_register_device() won't check for\nboundaries, as it will rely that a previous call to\ndvb_register_adapter() would already be enforcing it.\n\nOn a similar way, dvb_device_open() uses the assumption\nthat the register functions already did the needed checks.\n\nThis can be fragile if some device ends using different\ncalls. This also generate warnings on static check analysers\nlike Coverity.\n\nSo, add explicit guards to prevent potential risk of OOM issues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scmi: Fix slab-use-after-free in scmi_bus_notifier()\n\nThe scmi_dev-\u003ename is released prematurely in __scmi_device_destroy(),\nwhich causes slab-use-after-free when accessing scmi_dev-\u003ename in\nscmi_bus_notifier(). So move the release of scmi_dev-\u003ename to\nscmi_device_release() to avoid slab-use-after-free.\n\n  |  BUG: KASAN: slab-use-after-free in strncmp+0xe4/0xec\n  |  Read of size 1 at addr ffffff80a482bcc0 by task swapper/0/1\n  |\n  |  CPU: 1 PID: 1 Comm: swapper/0 Not tainted 6.6.38-debug #1\n  |  Hardware name: Qualcomm Technologies, Inc. SA8775P Ride (DT)\n  |  Call trace:\n  |   dump_backtrace+0x94/0x114\n  |   show_stack+0x18/0x24\n  |   dump_stack_lvl+0x48/0x60\n  |   print_report+0xf4/0x5b0\n  |   kasan_report+0xa4/0xec\n  |   __asan_report_load1_noabort+0x20/0x2c\n  |   strncmp+0xe4/0xec\n  |   scmi_bus_notifier+0x5c/0x54c\n  |   notifier_call_chain+0xb4/0x31c\n  |   blocking_notifier_call_chain+0x68/0x9c\n  |   bus_notify+0x54/0x78\n  |   device_del+0x1bc/0x840\n  |   device_unregister+0x20/0xb4\n  |   __scmi_device_destroy+0xac/0x280\n  |   scmi_device_destroy+0x94/0xd0\n  |   scmi_chan_setup+0x524/0x750\n  |   scmi_probe+0x7fc/0x1508\n  |   platform_probe+0xc4/0x19c\n  |   really_probe+0x32c/0x99c\n  |   __driver_probe_device+0x15c/0x3c4\n  |   driver_probe_device+0x5c/0x170\n  |   __driver_attach+0x1c8/0x440\n  |   bus_for_each_dev+0xf4/0x178\n  |   driver_attach+0x3c/0x58\n  |   bus_add_driver+0x234/0x4d4\n  |   driver_register+0xf4/0x3c0\n  |   __platform_driver_register+0x60/0x88\n  |   scmi_driver_init+0xb0/0x104\n  |   do_one_initcall+0xb4/0x664\n  |   kernel_init_freeable+0x3c8/0x894\n  |   kernel_init+0x24/0x1e8\n  |   ret_from_fork+0x10/0x20\n  |\n  |  Allocated by task 1:\n  |   kasan_save_stack+0x2c/0x54\n  |   kasan_set_track+0x2c/0x40\n  |   kasan_save_alloc_info+0x24/0x34\n  |   __kasan_kmalloc+0xa0/0xb8\n  |   __kmalloc_node_track_caller+0x6c/0x104\n  |   kstrdup+0x48/0x84\n  |   kstrdup_const+0x34/0x40\n  |   __scmi_device_create.part.0+0x8c/0x408\n  |   scmi_device_create+0x104/0x370\n  |   scmi_chan_setup+0x2a0/0x750\n  |   scmi_probe+0x7fc/0x1508\n  |   platform_probe+0xc4/0x19c\n  |   really_probe+0x32c/0x99c\n  |   __driver_probe_device+0x15c/0x3c4\n  |   driver_probe_device+0x5c/0x170\n  |   __driver_attach+0x1c8/0x440\n  |   bus_for_each_dev+0xf4/0x178\n  |   driver_attach+0x3c/0x58\n  |   bus_add_driver+0x234/0x4d4\n  |   driver_register+0xf4/0x3c0\n  |   __platform_driver_register+0x60/0x88\n  |   scmi_driver_init+0xb0/0x104\n  |   do_one_initcall+0xb4/0x664\n  |   kernel_init_freeable+0x3c8/0x894\n  |   kernel_init+0x24/0x1e8\n  |   ret_from_fork+0x10/0x20\n  |\n  |  Freed by task 1:\n  |   kasan_save_stack+0x2c/0x54\n  |   kasan_set_track+0x2c/0x40\n  |   kasan_save_free_info+0x38/0x5c\n  |   __kasan_slab_free+0xe8/0x164\n  |   __kmem_cache_free+0x11c/0x230\n  |   kfree+0x70/0x130\n  |   kfree_const+0x20/0x40\n  |   __scmi_device_destroy+0x70/0x280\n  |   scmi_device_destroy+0x94/0xd0\n  |   scmi_chan_setup+0x524/0x750\n  |   scmi_probe+0x7fc/0x1508\n  |   platform_probe+0xc4/0x19c\n  |   really_probe+0x32c/0x99c\n  |   __driver_probe_device+0x15c/0x3c4\n  |   driver_probe_device+0x5c/0x170\n  |   __driver_attach+0x1c8/0x440\n  |   bus_for_each_dev+0xf4/0x178\n  |   driver_attach+0x3c/0x58\n  |   bus_add_driver+0x234/0x4d4\n  |   driver_register+0xf4/0x3c0\n  |   __platform_driver_register+0x60/0x88\n  |   scmi_driver_init+0xb0/0x104\n  |   do_one_initcall+0xb4/0x664\n  |   kernel_init_freeable+0x3c8/0x894\n  |   kernel_init+0x24/0x1e8\n  |   ret_from_fork+0x10/0x20",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:kernel-default-5.14.21-150400.24.144.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-5535",
      "Description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libopenssl1_1-1.1.1l-150400.7.75.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:openssl-1_1-1.1.1l-150400.7.75.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56326",
      "Description": "Jinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-Jinja2-2.10.1-150000.3.18.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-5642",
      "Description": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-3.6.15-150300.10.78.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-curses-3.6.15-150300.10.78.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6232",
      "Description": "There is a MEDIUM severity vulnerability affecting CPython.\n\n\n\n\n\nRegular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-3.6.15-150300.10.78.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-curses-3.6.15-150300.10.78.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6345",
      "Description": "A vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-setuptools-44.1.1-150400.9.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-6923",
      "Description": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe \nemail module didn't properly quote newlines for email headers when \nserializing an email message allowing for header injection when an email\n is serialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-3.6.15-150300.10.78.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-curses-3.6.15-150300.10.78.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7006",
      "Description": "A null pointer dereference flaw was found in Libtiff via `tif_dirinfo.c`. This issue may allow an attacker to trigger memory allocation failures through certain means, such as restricting the heap space size or injecting faults, causing a segmentation fault. This can cause an application crash, eventually leading to a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libtiff5-4.0.9-150000.45.47.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7264",
      "Description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:curl-8.0.1-150400.5.59.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libcurl4-8.0.1-150400.5.59.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-7592",
      "Description": "There is a LOW severity vulnerability affecting CPython, specifically the\n'http.cookies' standard library module.\n\n\nWhen parsing cookies that contained backslashes for quoted characters in\nthe cookie value, the parser would use an algorithm with quadratic\ncomplexity, resulting in excess CPU resources being used while parsing the\nvalue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-3.6.15-150300.10.78.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-curses-3.6.15-150300.10.78.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8006",
      "Description": "Remote packet capture support is disabled by default in libpcap.  When a user builds libpcap with remote packet capture support enabled, one of the functions that become available is pcap_findalldevs_ex().  One of the function arguments can be a filesystem path, which normally means a directory with input data files.  When the specified path cannot be used as a directory, the function receives NULL from opendir(), but does not check the return value and passes the NULL value to readdir(), which causes a NULL pointer derefence.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libpcap1-1.10.1-150400.3.6.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8096",
      "Description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:curl-8.0.1-150400.5.59.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libcurl4-8.0.1-150400.5.59.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-8443",
      "Description": "A heap-based buffer overflow vulnerability was found in the libopensc OpenPGP driver. A crafted USB device or smart card with malicious responses to the APDUs during the card enrollment process using the `pkcs15-init` tool may lead to out-of-bound rights, possibly resulting in arbitrary code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:opensc-0.22.0-150400.3.12.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-9287",
      "Description": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-3.6.15-150300.10.78.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:python3-curses-3.6.15-150300.10.78.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-9681",
      "Description": "When curl is asked to use HSTS, the expiry time for a subdomain might\noverwrite a parent domain's cache entry, making it end sooner or later than\notherwise intended.\n\nThis affects curl using applications that enable HSTS and use URLs with the\ninsecure `HTTP://` scheme and perform transfers with hosts like\n`x.example.com` as well as `example.com` where the first host is a subdomain\nof the second host.\n\n(The HSTS cache either needs to have been populated manually or there needs to\nhave been previous HTTPS accesses done as the cache needs to have entries for\nthe domains involved to trigger this problem.)\n\nWhen `x.example.com` responds with `Strict-Transport-Security:` headers, this\nbug can make the subdomain's expiry timeout *bleed over* and get set for the\nparent domain `example.com` in curl's HSTS cache.\n\nThe result of a triggered bug is that HTTP accesses to `example.com` get\nconverted to HTTPS for a different period of time than what was asked for by\nthe origin server. If `example.com` for example stops supporting HTTPS at its\nexpiry time, curl might then fail to access `http://example.com` until the\n(wrongly set) timeout expires. This bug can also expire the parent's entry\n*earlier*, thus making curl inadvertently switch back to insecure HTTP earlier\nthan otherwise intended.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:curl-8.0.1-150400.5.59.1",
            "Public Cloud Image google/sles-15-sp4-hardened-byos-v20250109-x86-64:libcurl4-8.0.1-150400.5.59.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}