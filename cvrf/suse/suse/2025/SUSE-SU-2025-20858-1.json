{
  "Title": "Security update for rust-keylime",
  "Tracking": {
    "ID": "SUSE-SU-2025:20858-1",
    "Status": "Final",
    "Version": "1",
    "InitialReleaseDate": "2025-10-14T13:18:43Z",
    "CurrentReleaseDate": "2025-10-14T13:18:43Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-10-14T13:18:43Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Security update for rust-keylime",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This update for rust-keylime fixes the following issues:\n\n- CVE-2025-55159: slab: incorrect bounds check in get_disjoint_mut function can lead to undefined behavior or potential crash due to out-of-bounds access (bsc#1248006)\n- CVE-2025-3416: openssl: Use-After-Free in Md::fetch and Cipher::fetch in rust-openssl crate (bsc#1242623)\n- CVE-2024-58266: shlex: certain bytes allowed to appear unquoted and unescaped in command arguments (bsc#1247193)\n- CVE-2024-43806: rustix: rustix::fs::Dir iterator with the linux_raw backend can cause memory explosion (bsc#1229952)\n- CVE-2024-12224: idna: idna accepts Punycode labels that do not produce any non-ASCII when decoded (bsc#1243861)\n\n- RUSTSEC-2024-0006: Multiple issues involving quote API (bsc#1230029)\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    },
    {
      "Text": "SUSE-SLE-Micro-6.1-300",
      "Title": "Patchnames",
      "Type": "Details"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "rust-keylime-0.2.8+12-slfo.1.1_1.1",
        "RelatesToProductReference": "SUSE Linux Micro 6.1",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://www.suse.com/support/update/announcement/2025/suse-su-202520858-1/",
      "Description": "Link for SUSE-SU-2025:20858-1"
    },
    {
      "URL": "https://lists.suse.com/pipermail/sle-updates/2025-October/042320.html",
      "Description": "E-Mail link for SUSE-SU-2025:20858-1"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    },
    {
      "URL": "https://bugzilla.suse.com/1229952",
      "Description": "SUSE Bug 1229952"
    },
    {
      "URL": "https://bugzilla.suse.com/1230029",
      "Description": "SUSE Bug 1230029"
    },
    {
      "URL": "https://bugzilla.suse.com/1242623",
      "Description": "SUSE Bug 1242623"
    },
    {
      "URL": "https://bugzilla.suse.com/1243861",
      "Description": "SUSE Bug 1243861"
    },
    {
      "URL": "https://bugzilla.suse.com/1247193",
      "Description": "SUSE Bug 1247193"
    },
    {
      "URL": "https://bugzilla.suse.com/1248006",
      "Description": "SUSE Bug 1248006"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-12224/",
      "Description": "SUSE CVE CVE-2024-12224 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-43806/",
      "Description": "SUSE CVE CVE-2024-43806 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2024-58266/",
      "Description": "SUSE CVE CVE-2024-58266 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-3416/",
      "Description": "SUSE CVE CVE-2025-3416 page"
    },
    {
      "URL": "https://www.suse.com/security/cve/CVE-2025-55159/",
      "Description": "SUSE CVE CVE-2025-55159 page"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2024-12224",
      "Description": "Improper Validation of Unsafe Equivalence in punycode by the idna crate from Servo rust-url allows an attacker to create a punycode hostname that one part of a system might treat as distinct while another part of that system would treat as equivalent to another hostname.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-12224.html",
          "Description": "CVE-2024-12224"
        },
        {
          "URL": "https://bugzilla.suse.com/1243848",
          "Description": "SUSE Bug 1243848"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:rust-keylime-0.2.8+12-slfo.1.1_1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43806",
      "Description": "Rustix is a set of safe Rust bindings to POSIX-ish APIs. When using `rustix::fs::Dir` using the `linux_raw` backend, it's possible for the iterator to \"get stuck\" when an IO error is encountered. Combined with a memory over-allocation issue in `rustix::fs::Dir::read_more`, this can cause quick and unbounded memory explosion (gigabytes in a few seconds if used on a hot path) and eventually lead to an OOM crash of the application. The symptoms were initially discovered in https://github.com/imsnif/bandwhich/issues/284. That post has lots of details of our investigation. Full details can be read on the GHSA-c827-hfw6-qwvm repo advisory. If a program tries to access a directory with its file descriptor after the file has been unlinked (or any other action that leaves the `Dir` iterator in the stuck state), and the implementation does not break after seeing an error, it can cause a memory explosion. As an example, Linux's various virtual file systems (e.g. `/proc`, `/sys`) can contain directories that spontaneously pop in and out of existence. Attempting to iterate over them using `rustix::fs::Dir` directly or indirectly (e.g. with the `procfs` crate) can trigger this fault condition if the implementation decides to continue on errors. An attacker knowledgeable about the implementation details of a vulnerable target can therefore try to trigger this fault condition via any one or a combination of several available APIs. If successful, the application host will quickly run out of memory, after which the application will likely be terminated by an OOM killer, leading to denial of service. This issue has been addressed in release versions 0.35.15, 0.36.16, 0.37.25, and 0.38.19. Users are advised to upgrade. There are no known workarounds for this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-43806.html",
          "Description": "CVE-2024-43806"
        },
        {
          "URL": "https://bugzilla.suse.com/1229376",
          "Description": "SUSE Bug 1229376"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:rust-keylime-0.2.8+12-slfo.1.1_1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58266",
      "Description": "The shlex crate before 1.2.1 for Rust allows unquoted and unescaped instances of the { and \\xa0 characters, which may facilitate command injection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2024-58266.html",
          "Description": "CVE-2024-58266"
        },
        {
          "URL": "https://bugzilla.suse.com/1247186",
          "Description": "SUSE Bug 1247186"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:rust-keylime-0.2.8+12-slfo.1.1_1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-3416",
      "Description": "A flaw was found in OpenSSL's handling of the properties argument in certain functions. This vulnerability can allow use-after-free exploitation, which may result in undefined behavior or incorrect property parsing, leading to OpenSSL treating the input as an empty string.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-3416.html",
          "Description": "CVE-2025-3416"
        },
        {
          "URL": "https://bugzilla.suse.com/1242599",
          "Description": "SUSE Bug 1242599"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:rust-keylime-0.2.8+12-slfo.1.1_1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-55159",
      "Description": "slab is a pre-allocated storage for a uniform data type. In version 0.4.10, the get_disjoint_mut method incorrectly checked if indices were within the slab's capacity instead of its length, allowing access to uninitialized memory. This could lead to undefined behavior or potential crashes. This has been fixed in slab 0.4.11. A workaround for this issue involves to avoid using get_disjoint_mut with indices that might be beyond the slab's actual length.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": [
        {
          "URL": "https://www.suse.com/security/cve/CVE-2025-55159.html",
          "Description": "CVE-2025-55159"
        },
        {
          "URL": "https://bugzilla.suse.com/1248000",
          "Description": "SUSE Bug 1248000"
        }
      ],
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "SUSE Linux Micro 6.1:rust-keylime-0.2.8+12-slfo.1.1_1.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}