{
  "Title": "SUSE-IU-2025:2453-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2025:2453-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2025-09-11T01:00:00Z",
    "CurrentReleaseDate": "2025-09-11T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-10-07T14:59:18Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2025:2453-1 / google/sles-15-sp4-sapcal-v20250911-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sles-15-sp4-sapcal-v20250911-x86-64 contains the following changes:\nPackage apache2 was updated:\n\n- Fix the following CVEs / bugs:  * CVE-2024-42516 bsc#1246477\n  * CVE-2024-43204 bsc#1246305\n  * CVE-2024-47252 bsc#1246303\n  * CVE-2025-23048 bsc#1246302\n  * CVE-2025-49630 bsc#1246307\n  * CVE-2025-49812 bsc#1246169\n  * CVE-2025-53020 bsc#1246306\n- Add the following patches:\n  * CVE-2024-42516.patch\n  * CVE-2024-43204.patch\n  * CVE-2024-47252.patch\n  * CVE-2025-23048.patch\n  * CVE-2025-49630.patch\n  * CVE-2025-49812.patch\n  * CVE-2025-53020-1.patch\n  * CVE-2025-53020-2.patch\n\nPackage boost was updated:\n\n- CVE-2016-9840: fixed out-of-bounds pointer arithmetic in zlib in beast  (bsc#1245936)\n  - adds patch boost-zlib.patch\n\nPackage branding-SLE was updated:\n\n- Update plymouth theme to fix splash screen element placement issue.  (bsc#1236818)\n\nPackage cairo was updated:\n\n- Add cairo-CVE-2019-6461.patch: avoid assert when drawing arcs  with NaN angles (bsc#1122338 CVE_2019-6461 glfo@cairo/cairo#352).\n\nPackage cifs-utils was updated:\n\n- Add patches:  * 0001-cifs.upcall-correctly-treat-UPTARGET_UNSPECIFIED-as-.patch\n  (bsc#1243488)\n  * 0001-mount.cifs-retry-mount-on-EINPROGRESS.patch\n\nPackage cloud-regionsrv-client was updated:\n\n- Update version to 10.5.2 (bsc#1247539)  + When an instance fails verification server side the default credentials\n    were left behind requireing manual intervantion prior to the next\n    registration attempt.\n  + Fix issue triggered when using instance-billing-flavor-check due to\n    IP address handling as object rather than string introduced 10.5.0\n\n- Update version to 10.5.1\n  + Fix issue with picking up configured server names from the\n    regionsrv config file. Previously only IP addresses were collected\n  + Update scriptlet for package uninstall to avoid issues in the\n    build service\n\n- Update version to 10.5.0\n  + Use region server IP addresses to determine Internet access rather\n    than a generic address. Region server IP addresses may not be blocked\n    in the network construct. (bsc#1245305)\n\nPackage coreutils was updated:\n\n- coreutils-9.7-sort-CVE-2025-5278.patch: Add upstream patch:  sort with key character offsets of SIZE_MAX, could induce\n  a read of 1 byte before an allocated heap buffer.\n  (CVE-2025-5278, bsc#1243767)\n\nPackage docker was updated:\n\n- Update to Docker 28.3.3-ce. See upstream changelog online at  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2833\u0026gt;\n  CVE-2025-54388 bsc#1247367\n\n- Update to docker-buildx v0.26.1. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.26.1\u0026gt;\n\n- Update to docker-buildx v0.26.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.26.0\u0026gt;\n\n- Update to Go 1.24 for builds, to match upstream.\n\n- Update to Docker 28.3.2-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2832\u0026gt;\n\n- Update to Docker 28.3.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2831\u0026gt;\n\n- Update to Docker 28.3.0-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2830\u0026gt;\n  bsc#1246556\n- Rebase patches:\n  * 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n  * 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n[ This update is a no-op, only needed to work around unfortunate automated\n  packaging script behaviour on SLES. ]\n- The following patches were removed in openSUSE in the Docker 28.1.1-ce\n  update, but the patch names were later renamed in a SLES-only update before\n  Docker 28.1.1-ce was submitted to SLES.\n  This causes the SLES build scripts to refuse the update because the patches\n  are not referenced in the changelog. There is no obvious place to put the\n  patch removals (the 28.1.1-ce update removing the patches chronologically\n  predates their renaming in SLES), so they are included here a dummy changelog\n  entry to work around the issue.\n  - 0007-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0008-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n\n- Update to docker-buildx v0.25.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.25.0\u0026gt;\n\n- Do not try to inject SUSEConnect secrets when in Rootless Docker mode, as\n  Docker does not have permission to access the host zypper credentials in this\n  mode (and unprivileged users cannot disable the feature using\n  /etc/docker/suse-secrets-enable.) bsc#1240150\n  * 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n- Rebase patches:\n  * 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n  * 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Always clear SUSEConnect suse_* secrets when starting containers regardless\n  of whether the daemon was built with SUSEConnect support. Not doing this\n  causes containers from SUSEConnect-enabled daemons to fail to start when\n  running with SUSEConnect-disabled (i.e. upstream) daemons.\n  This was a long-standing issue with our secrets support but until recently\n  this would've required migrating from SLE packages to openSUSE packages\n  (which wasn't supported). However, as SLE Micro 6.x and SLES 16 will move\n  away from in-built SUSEConnect support, this is now a practical issue users\n  will run into. bsc#1244035\n  + 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n- Rearrange patches:\n  - 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  + 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  - 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  + 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  - 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  + 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  - 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  + 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  - 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  + 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n[NOTE: This update was only ever released in SLES and Leap.]\n- Always clear SUSEConnect suse_* secrets when starting containers regardless\n  of whether the daemon was built with SUSEConnect support. Not doing this\n  causes containers from SUSEConnect-enabled daemons to fail to start when\n  running with SUSEConnect-disabled (i.e. upstream) daemons.\n  This was a long-standing issue with our secrets support but until recently\n  this would've required migrating from SLE packages to openSUSE packages\n  (which wasn't supported). However, as SLE Micro 6.x and SLES 16 will move\n  away from in-built SUSEConnect support, this is now a practical issue users\n  will run into. bsc#1244035\n  + 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n- Rearrange patches:\n  - 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  + 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  - 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  + 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  - 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  + 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  - 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  + 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  - 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  + 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  - 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  + 0007-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n  + 0008-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n\n- Update to Docker 28.2.2-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2822\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Update to Docker 28.2.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2820\u0026gt; bsc#1243833\n  \u0026lt;https://github.com/moby/moby/releases/tag/v28.2.1\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Update to docker-buildx v0.24.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.24.0\u0026gt;\n\n- Update to Docker 28.1.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2811\u0026gt; bsc#1242114\n  Includes upstream fixes:\n  - CVE-2025-22872 bsc#1241830\n- Remove long-outdated build handling for deprecated and unsupported\n  devicemapper and AUFS storage drivers. AUFS was removed in v24, and\n  devicemapper was removed in v25.\n  \u0026lt;https://docs.docker.com/engine/deprecated/#aufs-storage-driver\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n- Remove upstreamed patches:\n  - 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n  - cli-0001-docs-include-required-tools-in-source-tree.patch\n\n- Update to docker-buildx v0.23.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.23.0\u0026gt;\n\n- Update to docker-buildx v0.22.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.22.0\u0026gt;\n  * Includes fixes for CVE-2025-0495. bsc#1239765\n\n- Disable transparent SUSEConnect support for SLE-16. PED-12534\n  When this patchset was first added in 2013 (and rewritten over the years),\n  there was no upstream way to easily provide SLE customers with a way to build\n  container images based on SLE using the host subscription. However, with\n  docker-buildx you can now define secrets for builds (this is not entirely\n  transparent, but we can easily document this new requirement for SLE-16).\n  Users should use\n    RUN --mount=type=secret,id=SCCcredentials zypper -n ...\n  in their Dockerfiles, and\n    docker buildx build --secret id=SCCcredentials,src=/etc/zypp/credentials.d/SCCcredentials,type=file .\n  when doing their builds.\n- Now that the only blocker for docker-buildx support was removed for SLE-16,\n  enable docker-buildx for SLE-16 as well. PED-8905\n\nPackage gdk-pixbuf was updated:\n\n- Add gdk-pixbuf-jpeg-icc-data.patch: be more careful with icc data  (bsc#1246114 CVE-2025-7345 glgo@GNOME/gdk-pixbuf!217).\n\n- Add gdk-pixbuf-fix-decoder-written-bytes-reporting.patch: Fix\n  memory leak caused by wrong written bytes reported by decoder\n  (CVE-2025-6199, glgo#GNOME/gdk-pixbuf#257, bsc#1245227).\n\nPackage glib2 was updated:\n\n- Add glib2-CVE-2025-4373.patch: carefully handle gssize parameters  (bsc#1242844 CVE-2025-4373 glgo#GNOME/glib#3677).\n\nPackage google-dracut-config was updated:\n\nPackage google-guest-configs was updated:\n\n- Check that %{_sysconfdir}/sysconfig/network/ifcfg-eth0 actually  exists before making any modifications to it (bsc#1241112)\n\nPackage google-guest-oslogin was updated:\n\n- Cherry-pick dont-retry-bad-requests.patch to stop retrying bad  requests causing timeouts during container startup (bsc#1243992)\n\n- Override upstream version to address upgrade problems (bsc#1243997)\n\nPackage google-osconfig-agent was updated:\n\n- Update to version 20250416.02 (bsc#1244304, bsc#1244503)  * defaultSleeper: tolerate 10% difference to reduce test flakiness (#810)\n  * Add output of some packagemanagers to the testdata (#808)\n- from version 20250416.01\n  * Refactor OS Info package (#809)\n- from version 20250416.00\n  * Report RPM inventory as YUM instead of empty SoftwarePackage\n    when neither Zypper nor YUM are installed. (#805)\n- from version 20250414.00\n  * Update hash computation algorithm (#799)\n\n- Update to version 20250320.00\n  * Bump github.com/envoyproxy/protoc-gen-validate from 1.1.0 to 1.2.1 (#797)\n- from version 20250318.00\n  * Bump go.opentelemetry.io/otel/sdk/metric from 1.32.0 to 1.35.0 (#793)\n- from version 20250317.02\n  * Bump cel.dev/expr from 0.18.0 to 0.22.0 (#792)\n  * Bump github.com/golang/glog from 1.2.3 to 1.2.4 in the go_modules group (#785)\n- from version 20250317.01\n  * Bump cloud.google.com/go/logging from 1.12.0 to 1.13.0 (#774)\n- from version 20250317.00\n  * Add tests for retryutil package. (#795)\n- from version 20250306.00\n  * Update OWNERS (#794)\n- from version 20250206.01\n  * Use separate counters for pre- and post-patch reboots. (#788)\n- from version 20250206.00\n  * Update owners (#789)\n- from version 20250203.00\n  * Fix the vet errors for contants in logging (#786)\n- from version 20250122.00\n  * change available package check (#783)\n- from version 20250121.00\n  * Fix Inventory reporting e2e tests. (#782)\n- from version 20250120.00\n  * fix e2e tests (#781)\n- Add -buildmode=pie to go build command line (bsc#1239948)\n- Drop CVE-2024-45339.patch, merged upstream\n- Renumber patches\n\nPackage grub2 was updated:\n\n- Fix CVE-2024-56738: side-channel attack due to not constant-time  algorithm in grub_crypto_memcmp (bsc#1234959)\n  * grub2-constant-time-grub_crypto_memcmp.patch\n\nPackage haveged was updated:\n\n- Fix for bsc#1222296 and bsc#1165294.- Remove haveged-switch-root.service.\n- Add haveged-once.service.\n- Add patch files introducing the '--once' flag.\n  * introduce-once-1.patch\n  * introduce-once-2.patch\n\nPackage hwinfo was updated:\n\n- merge gh#openSUSE/hwinfo#168- fix usb network card detection (bsc#1245950)\n- 21.89\n\nPackage iputils was updated:\n\n- Security fix [bsc#1243772, CVE-2025-48964]  * Fix integer overflow in ping statistics via zero timestamp\n  * Add iputils-CVE-2025-48964_01.patch\n  * Add iputils-CVE-2025-48964_02.patch\n  * Add iputils-CVE-2025-48964_03.patch\n  * Add iputils-CVE-2025-48964_regression.patch\n\nPackage jq was updated:\n\n- Add patches CVE-2025-48060-1.patch and CVE-2025-48060-2.patch  (CVE-2025-48060, bsc#1244116)\n\n- Add patch CVE-2024-23337.patch (CVE-2024-23337, bsc#1243450)\n\nPackage kernel-default was updated:\n\n- protect the fetch of -\u0026gt;fd[fd] in do_dup2() from mispredictions  (bsc#1229334 CVE-2024-42265).\n- fs: prevent out-of-bounds array speculation when closing a\n  file descriptor (CVE-2023-53117 bsc#1242780).\n- commit 832757a\n\n- net/sched: sch_qfq: Avoid triggering might_sleep in atomic\n  context in qfq_delete_class (CVE-2025-38477 bsc#1247314).\n- net/sched: Return NULL when htb_lookup_leaf encounters an\n  empty rbtree (CVE-2025-38468 bsc#1247437).\n- net/sched: sch_qfq: Fix race condition on qfq_aggregate\n  (CVE-2025-38477 bsc#1247314).\n- net/sched: Always pass notifications when child class becomes\n  empty (CVE-2025-38350 bsc#1246781).\n- commit 03528bf\n\n- net_sched: Prevent creation of classes with TC_H_ROOT\n  (CVE-2025-21971 bsc#1240799).\n- commit c846a50\n\n- Update\n  patches.suse/netfilter-nf_set_pipapo_avx2-fix-initial-map-fill.patch\n  (git-fixes CVE-2024-57947 bsc#1236333 CVE-2025-38120\n  bsc#1245711).\n- Update\n  patches.suse/powerpc-powernv-memtrace-Fix-out-of-bounds-issue-in-.patch\n  (bsc#1244309 ltc#213790 CVE-2025-38088 bsc#1245506).\n- Update\n  patches.suse/sch_hfsc-make-hfsc_qlen_notify-idempotent.patch\n  (CVE-2025-37798 bsc#1242414 CVE-2025-38177 bsc#1245986).\n- commit c5b1aff\n\n- HID: core: do not bypass hid_hw_raw_request (CVE-2025-38494\n  bsc#1247349).\n- HID: core: ensure the allocated report buffer can contain the\n  reserved report ID (CVE-2025-38495 bsc#1247348).\n- commit 8b00261\n\n- usb: gadget: configfs: Fix OOB read on empty string write\n  (CVE-2025-38497 bsc#1247347).\n- commit 2908061\n\n- netfilter: nf_tables: mark set as dead when unbinding anonymous\n  set with timeout (CVE-2024-26643 bsc#1221829).\n- commit 4daa764\n\n- netfilter: allow exp not to be removed in nf_ct_find_expectation\n  (CVE-2023-52927 bsc#1239644).\n- commit b3f811c\n\n- netfilter: nf_tables: split async and sync catchall in two\n  functions (CVE-2023-52923 bsc#1236104).\n- Refresh\n  patches.suse/netfilter-nf_tables-use-timestamp-to-check-for-set-element.patch.\n- commit 11c8f5d\n\n- netfilter: nft_set_hash: unaligned atomic read on struct\n  nft_set_ext (CVE-2023-52923 bsc#1236104).\n- commit 81059b2\n\n- netfilter: nft_set_rbtree: skip end interval element from gc\n  (CVE-2023-52923 bsc#1236104).\n- commit f47327b\n\n- netfilter: nf_tables: remove catchall element in GC sync path\n  (CVE-2023-52923 bsc#1236104).\n- Refresh\n  patches.suse/netfilter-nf_tables-use-timestamp-to-check-for-set-element.patch.\n- commit 9970986\n\n- netfilter: nf_tables: nft_set_rbtree: fix spurious insertion\n  failure (CVE-2023-52923 bsc#1236104).\n- commit e63b022\n\n- netfilter: nft_set_hash: skip duplicated elements pending gc\n  run (CVE-2023-52923 bsc#1236104).\n- commit 828ecf9\n\n- netfilter: nft_set_pipapo: prefer gfp_kernel allocation\n  (CVE-2023-52923 bsc#1236104).\n- commit 65fa0d6\n\n- netfilter: nft_set_hash: try later when GC hits EAGAIN on\n  iteration (CVE-2023-52923 bsc#1236104).\n- commit 10f2b11\n\n- netfilter: nft_set_pipapo: call nft_trans_gc_queue_sync()\n  in catchall GC (CVE-2023-52923 bsc#1236104).\n- Refresh\n  patches.suse/netfilter-nf_tables-use-timestamp-to-check-for-set-element.patch.\n- commit 01a51e7\n\n- netfilter: nft_set_rbtree: use read spinlock to avoid datapath\n  contention (CVE-2023-52923 bsc#1236104).\n- commit 3a9efbc\n\n- netfilter: nft_set_rbtree: skip sync GC for new elements in\n  this transaction (CVE-2023-52923 bsc#1236104).\n- commit 20a6d45\n\n- netfilter: nf_tables: defer gc run if previous batch is still\n  pending (CVE-2023-52923 bsc#1236104).\n- commit 8c98aa6\n\n- netfilter: nf_tables: adapt set backend to use GC transaction\n  API (CVE-2023-52923 bsc#1236104).\n- Refresh\n  patches.suse/netfilter-nf_tables-check-if-catch-all-set-element-i.patch.\n- Refresh\n  patches.suse/netfilter-nf_tables-don-t-fail-inserts-if-duplicate-has-ex.patch.\n- Refresh\n  patches.suse/netfilter-nf_tables-fix-kdoc-warnings-after-gc-rewor.patch.\n- Refresh\n  patches.suse/netfilter-nf_tables-use-timestamp-to-check-for-set-element.patch.\n- commit 84a46c0\n\n- netfilter: nft_set_rbtree: fix overlap expiration walk\n  (CVE-2023-52923 bsc#1236104).\n- commit 314088b\n\n- netfilter: nft_set_rbtree: fix null deref on element insertion\n  (CVE-2023-52923 bsc#1236104).\n- commit 5658720\n\n- netfilter: nft_set_rbtree: skip elements in transaction from\n  garbage collection (CVE-2023-52923 bsc#1236104).\n- commit da32326\n\n- netfilter: nft_set_rbtree: Switch to node list walk for overlap\n  detection (CVE-2023-52923 bsc#1236104).\n- Refresh\n  patches.suse/netfilter-nf_tables-use-timestamp-to-check-for-set-element.patch.\n- commit fb97724\n\n- netfilter: nft_set_rbtree: overlap detection with element\n  re-addition after deletion (CVE-2023-52923 bsc#1236104).\n- commit 043eda8\n\n- uprobes: Reject the shared zeropage in uprobe_write_opcode() (CVE-2025-21881 bsc#1240185)\n- commit b93487d\n\n- net: sched: fix ordering of qlen adjustment (CVE-2024-53164 bsc#1234863)\n- commit 40219c0\n\n- ipc: fix to protect IPCS lookups using RCU (CVE-2025-38212\n  bsc#1246029).\n- commit d87772b\n\n- s390/pkey: Prevent overflow in size calculation for\n  memdup_user() (git-fixes CVE-2025-38257 bsc#1246186).\n- commit 95d7e4c\n\n- i40e: fix MMIO write access to an invalid page in i40e_clear_hw\n  (CVE-2025-38200 bsc#1246045).\n- commit 1f55e7a\n\n- Revert \u0026quot;hugetlb: unshare some PMDs when splitting VMAs (bsc#1245431).\u0026quot;\n  This reverts commit 42d0bfa0c264cdd972320d70cf30244e83ed6d45.\n  Fix requires more work.\n- commit bd9ff6c\n\n- Revert \u0026quot;mm/hugetlb: fix huge_pmd_unshare() vs GUP-fast race\u0026quot;\n  This reverts commit 5ac7828c47ade79e31bb3a63af46f7ba40385d3c.\n  Fix requires more work.\n  Conflicts:\n  series.conf\n- commit b735458\n\n- Revert \u0026quot;mm/hugetlb: unshare page tables during VMA split, not before\u0026quot;\n  This reverts commit 16c03c20551418e44e64746e1adb153a94eb8624.\n  Fix requires more work.\n  Conflicts:\n  series.conf\n- commit 6f94b5c\n\n- calipso: Fix null-ptr-deref in calipso_req_{set,del}attr()\n  (CVE-2025-38181 bsc#1246000).\n- commit 84f7580\n\n- vgacon: Add check for vc_origin address range in vgacon_scroll()\n  (CVE-2025-38213 bsc#1246037).\n- commit 8cddace\n\n- exfat: fix double free in delayed_free (bsc#1246073\n  CVE-2025-38206).\n- commit e34f200\n\n- Bluetooth: hci_event: Fix checking conn for le_conn_complete_evt\n  (bsc#1238160 CVE-2022-49138).\n- commit 5955361\n\n- Bluetooth: hci_event: Fix checking for invalid handle on error\n  status (bsc#1238160 CVE-2022-49138).\n- commit bf7f8a7\n\n- Bluetooth: hci_event: Ignore multiple conn complete events\n  (bsc#1238160 CVE-2022-49138).\n- commit fa787ad\n\n- crypto: algif_hash - fix double free in hash_accept\n  (CVE-2025-38079 bsc#1245217).\n- commit 6c6cb3d\n\n- net_sched: hfsc: Fix a UAF vulnerability in class handling\n  (CVE-2025-37797 bsc#1242417).\n- commit 3ddb4b2\n\n- net/sched: stop qdisc_tree_reduce_backlog on TC_H_ROOT\n  (CVE-2024-53057 bsc#1233551).\n- commit 1066e4f\n\n- netfilter: nf_set_pipapo_avx2: fix initial map fill (git-fixes\n  CVE-2024-57947 bsc#1236333).\n- commit 1758014\n\n- netfilter: nf_set_pipapo: fix initial map fill (CVE-2024-57947\n  bsc#1236333).\n- commit 233ce6a\n\n- scsi: storvsc: Increase the timeouts to storvsc_timeout (bsc#1245455).\n- scsi: storvsc: Don't report the host packet status as the hv status (git-fixes).\n- commit 48c2b90\n\n- KVM: x86: Acquire SRCU in KVM_GET_MP_STATE to protect guest\n  memory accesses (bsc#1242782 CVE-2025-23141).\n- commit c01b303\n\n- mm/hugetlb: fix huge_pmd_unshare() vs GUP-fast race\n  (bsc#1245431).\n- commit 5ac7828\n\n- mm/hugetlb: unshare page tables during VMA split, not before\n  (bsc#1245431).\n- commit 16c03c2\n\n- hugetlb: unshare some PMDs when splitting VMAs (bsc#1245431).\n- commit 42d0bfa\n\n- Update\n  patches.suse/0012-dm-thin-fix-use-after-free-crash-in-dm_sm_register_t.patch\n  (git-fixes CVE-2022-50092 bsc#1244848).\n- Update\n  patches.suse/0023-dm-raid-fix-address-sanitizer-warning-in-raid_status.patch\n  (git-fixes CVE-2022-50084 bsc#1245117).\n- Update\n  patches.suse/0024-dm-raid-fix-address-sanitizer-warning-in-raid_resume.patch\n  (git-fixes CVE-2022-50085 bsc#1245147).\n- Update\n  patches.suse/0027-drivers-md-fix-a-potential-use-after-free-bug.patch\n  (git-fixes CVE-2022-50022 bsc#1245131).\n- Update\n  patches.suse/ALSA-bcd2000-Fix-a-UAF-bug-on-the-error-path-of-prob.patch\n  (git-fixes CVE-2022-50229 bsc#1244856).\n- Update\n  patches.suse/ARM-OMAP2-Fix-refcount-leak-in-omap3xxx_prm_late_ini.patch\n  (git-fixes CVE-2022-50198 bsc#1244872).\n- Update\n  patches.suse/ARM-OMAP2-Fix-refcount-leak-in-omapdss_init_of.patch\n  (git-fixes CVE-2022-50199 bsc#1244873).\n- Update\n  patches.suse/ARM-OMAP2-display-Fix-refcount-leak-bug.patch\n  (git-fixes CVE-2022-50203 bsc#1245189).\n- Update\n  patches.suse/ARM-OMAP2-pdata-quirks-Fix-refcount-leak-bug.patch\n  (git-fixes CVE-2022-50204 bsc#1245191).\n- Update\n  patches.suse/ARM-bcm-Fix-refcount-leak-in-bcm_kona_smc_init.patch\n  (git-fixes CVE-2022-50207 bsc#1244871).\n- Update\n  patches.suse/ASoC-SOF-debug-Fix-potential-buffer-overflow-by-snpr.patch\n  (git-fixes CVE-2022-50051 bsc#1245041).\n- Update\n  patches.suse/ASoC-cros_ec_codec-Fix-refcount-leak-in-cros_ec_code.patch\n  (git-fixes CVE-2022-50125 bsc#1244814).\n- Update patches.suse/ASoC-mt6359-Fix-refcount-leak-bug.patch\n  (git-fixes CVE-2022-50111 bsc#1244831).\n- Update\n  patches.suse/ASoC-mt6797-mt6351-Fix-refcount-leak-in-mt6797_mt635.patch\n  (git-fixes CVE-2022-50124 bsc#1244816).\n- Update\n  patches.suse/HID-cp2112-prevent-a-buffer-overflow-in-cp2112_xfer.patch\n  (git-fixes CVE-2022-50156 bsc#1244782).\n- Update\n  patches.suse/HID-hidraw-fix-memory-leak-in-hidraw_release.patch\n  (git-fixes CVE-2022-49981 bsc#1245072).\n- Update\n  patches.suse/HID-mcp2221-prevent-a-buffer-overflow-in-mcp_smbus_w.patch\n  (git-fixes CVE-2022-50131 bsc#1244807).\n- Update\n  patches.suse/HID-steam-Prevent-NULL-pointer-dereference-in-steam_.patch\n  (git-fies CVE-2022-49984 bsc#1244950).\n- Update\n  patches.suse/Input-iforce-wake-up-after-clearing-IFORCE_XMIT_RUNN.patch\n  (git-fixes CVE-2022-49954 bsc#1244976).\n- Update\n  patches.suse/KVM-SVM-Don-t-BUG-if-userspace-injects-an-interrupt-.patch\n  (git-fixes CVE-2022-50228 bsc#1244854).\n- Update\n  patches.suse/NFSv4-pnfs-Fix-a-use-after-free-bug-in-open.patch\n  (git-fixes CVE-2022-50072 bsc#1244979).\n- Update\n  patches.suse/NFSv4.2-fix-problems-with-__nfs42_ssc_open.patch\n  (git-fixes CVE-2022-50006 bsc#1245018).\n- Update\n  patches.suse/PCI-dwc-Deallocate-EPC-memory-on-dw_pcie_ep_init-err.patch\n  (git-fixes CVE-2022-50146 bsc#1244788).\n- Update\n  patches.suse/PCI-mediatek-gen3-Fix-refcount-leak-in-mtk_pcie_init.patch\n  (git-fixes CVE-2022-50154 bsc#1244784).\n- Update\n  patches.suse/PCI-microchip-Fix-refcount-leak-in-mc_pcie_init_irq_.patch\n  (git-fixes CVE-2022-50157 bsc#1244780).\n- Update\n  patches.suse/PM-hibernate-defer-device-probing-when-resuming-from.patch\n  (git-fixes CVE-2022-50202 bsc#1245154).\n- Update\n  patches.suse/RDMA-hfi1-fix-potential-memory-leak-in-setup_base_ct.patch\n  (git-fixes CVE-2022-50134 bsc#1244802).\n- Update\n  patches.suse/RDMA-irdma-Fix-a-window-for-use-after-free.patch\n  (git-fixes CVE-2022-50137 bsc#1244800).\n- Update\n  patches.suse/RDMA-qedr-Fix-potential-memory-leak-in-__qedr_alloc_.patch\n  (git-fixes CVE-2022-50138 bsc#1244797).\n- Update\n  patches.suse/RDMA-rxe-Fix-error-unwind-in-rxe_create_qp.patch\n  (git-fixes CVE-2022-50127 bsc#1244815).\n- Update\n  patches.suse/RDMA-siw-Fix-duplicated-reported-IW_CM_EVENT_CONNECT.patch\n  (git-fixes CVE-2022-50136 bsc#1244804).\n- Update patches.suse/RDMA-srpt-Fix-a-use-after-free.patch\n  (git-fixes CVE-2022-50129 bsc#1244811).\n- Update\n  patches.suse/USB-core-Prevent-nested-device-reset-calls.patch\n  (git-fixes bsc#1206664 CVE-2022-4662 CVE-2022-49936\n  bsc#1244984).\n- Update\n  patches.suse/apparmor-Fix-memleak-in-aa_simple_write_to_buffer.patch\n  (git-fixes CVE-2022-50074 bsc#1244965).\n- Update\n  patches.suse/apparmor-fix-reference-count-leak-in-aa_pivotroot.patch\n  (git-fixes CVE-2022-50077 bsc#1244977).\n- Update\n  patches.suse/arm64-cacheinfo-Fix-incorrect-assignment-of-signed-error-value-to-unsigned-fw_level.patch\n  (git-fixes CVE-2022-49964 bsc#1245064).\n- Update\n  patches.suse/arm64-fix-oops-in-concurrently-setting-insn_emulatio.patch\n  (git-fixes CVE-2022-50206 bsc#1245152).\n- Update patches.suse/ath11k-fix-netdev-open-race.patch (git-fixes\n  CVE-2022-50187 bsc#1244890).\n- Update\n  patches.suse/ath9k-fix-use-after-free-in-ath9k_hif_usb_rx_cb.patch\n  (CVE-2022-1679 bsc#1199487 CVE-2022-50179 bsc#1244886).\n- Update\n  patches.suse/bpf-Adjust-insufficient-default-bpf_jit_limit.patch\n  (bsc#1218234 git-fixes CVE-2023-53076 bsc#1242221).\n- Update\n  patches.suse/bpf-Don-t-use-tnum_range-on-array-range-checking-for.patch\n  (bsc#1202564 bsc#1202860 CVE-2022-2905 CVE-2022-49985\n  bsc#1244956).\n- Update\n  patches.suse/btrfs-fix-space-cache-corruption-and-potential-doubl.patch\n  (bsc#1203361 CVE-2022-49999 bsc#1245019).\n- Update\n  patches.suse/btrfs-unset-reloc-control-if-transaction-commit-fail.patch\n  (bsc#1212051 CVE-2023-3111 CVE-2022-50067 bsc#1245047).\n- Update\n  patches.suse/ceph-don-t-leak-snap_rwsem-in-handle_cap_grant.patch\n  (bsc#1202823 CVE-2022-50059 bsc#1245031).\n- Update\n  patches.suse/cifs-Fix-memory-leak-on-the-deferred-close.patch\n  (bsc#1193629 CVE-2022-50076 bsc#1244983).\n- Update\n  patches.suse/cifs-fix-small-mempool-leak-in-SMB2_negotiate-.patch\n  (bsc#1193629 CVE-2022-49938 bsc#1244820).\n- Update\n  patches.suse/clk-bcm-rpi-Prevent-out-of-bounds-access.patch\n  (git-fixes CVE-2022-49946 bsc#1244944).\n- Update\n  patches.suse/clk-qcom-ipq8074-dont-disable-gcc_sleep_clk_src.patch\n  (git-fixes CVE-2022-50029 bsc#1245146).\n- Update\n  patches.suse/cpufreq-zynq-Fix-refcount-leak-in-zynq_get_revision.patch\n  (git-fixes CVE-2022-50197 bsc#1244876).\n- Update\n  patches.suse/crypto-arm64-poly1305-fix-a-read-out-of-bound.patch\n  (git-fixes CVE-2022-50231 bsc#1244853).\n- Update\n  patches.suse/crypto-ccp-Use-kzalloc-for-sev-ioctl-interfaces-to-p.patch\n  (git-fixes CVE-2022-50226 bsc#1244860).\n- Update\n  patches.suse/crypto-hisilicon-sec-don-t-sleep-when-in-softirq.patch\n  (git-fixes CVE-2022-50171 bsc#1244765).\n- Update\n  patches.suse/dmaengine-dw-axi-dmac-do-not-print-NULL-LLI-during-e.patch\n  (git-fixes CVE-2022-50024 bsc#1245133).\n- Update\n  patches.suse/dmaengine-dw-axi-dmac-ignore-interrupt-if-no-descrip.patch\n  (git-fixes CVE-2022-50023 bsc#1245134).\n- Update\n  patches.suse/dmaengine-sf-pdma-Add-multithread-support-for-a-DMA-.patch\n  (git-fixes CVE-2022-50145 bsc#1244787).\n- Update\n  patches.suse/driver-core-fix-potential-deadlock-in-__driver_attac.patch\n  (git-fixes CVE-2022-50149 bsc#1244883).\n- Update\n  patches.suse/drm-amd-display-Check-correct-bounds-for-stream-enco.patch\n  (git-fixes CVE-2022-50079 bsc#1244970).\n- Update\n  patches.suse/drm-amd-display-clear-optc-underflow-before-turn-off.patch\n  (git-fixes CVE-2022-49969 bsc#1245060).\n- Update\n  patches.suse/drm-amd-pm-add-missing-fini_microcode-interface-for-.patch\n  (git-fixes CVE-2022-49966 bsc#1245062).\n- Update patches.suse/drm-i915-fix-null-pointer-dereference.patch\n  (git-fixes CVE-2022-49960 bsc#1244911).\n- Update\n  patches.suse/drm-mcde-Fix-refcount-leak-in-mcde_dsi_bind.patch\n  (git-fixes CVE-2022-50176 bsc#1244902).\n- Update\n  patches.suse/drm-meson-Fix-refcount-bugs-in-meson_vpu_has_availab.patch\n  (git-fixes CVE-2022-50038 bsc#1244943).\n- Update\n  patches.suse/drm-msm-mdp5-Fix-global-state-lock-backoff.patch\n  (git-fixes CVE-2022-50173 bsc#1244992).\n- Update\n  patches.suse/drm-radeon-fix-potential-buffer-overflow-in-ni_set_m.patch\n  (git-fixes CVE-2022-50185 bsc#1244887).\n- Update\n  patches.suse/drm-sun4i-dsi-Prevent-underflow-when-computing-packe.patch\n  (git-fixes CVE-2022-50036 bsc#1244941).\n- Update\n  patches.suse/drm-ttm-Fix-dummy-res-NULL-ptr-deref-bug.patch\n  (git-fixes CVE-2022-50068 bsc#1245142).\n- Update\n  patches.suse/ext4-add-EXT4_INODE_HAS_XATTR_SPACE-macro-in-xattr.h.patch\n  (bsc#1206878 CVE-2022-50083 bsc#1244968).\n- Update\n  patches.suse/ext4-avoid-resizing-to-a-partial-cluster-size.patch\n  (bsc#1206880 CVE-2022-50020 bsc#1245129).\n- Update\n  patches.suse/ext4-block-range-must-be-validated-before-use-in-ext.patch\n  (bsc#1213090 CVE-2022-50021 bsc#1245180).\n- Update\n  patches.suse/fbdev-fb_pm2fb-Avoid-potential-divide-by-zero-error.patch\n  (git-fixes CVE-2022-49978 bsc#1245195).\n- Update\n  patches.suse/firmware-arm_scpi-Ensure-scpi_info-is-not-assigned-i.patch\n  (git-fixes CVE-2022-50087 bsc#1245119).\n- Update\n  patches.suse/ftrace-Fix-NULL-pointer-dereference-in-is_ftrace_trampoline-when-ftrace-is-dead.patch\n  (git-fixes CVE-2022-49977 bsc#1244936).\n- Update patches.suse/gadgetfs-ep_io-wait-until-IRQ-finishes.patch\n  (git-fixes CVE-2022-50028 bsc#1245135).\n- Update\n  patches.suse/habanalabs-gaudi-fix-shift-out-of-bounds.patch\n  (git-fixes CVE-2022-50026 bsc#1245088).\n- Update\n  patches.suse/hwmon-gpio-fan-Fix-array-out-of-bounds-access.patch\n  (git-fixes CVE-2022-49945 bsc#1244908).\n- Update patches.suse/iavf-Fix-adminq-error-handling.patch\n  (git-fixes CVE-2022-50055 bsc#1245039).\n- Update patches.suse/iavf-Fix-reset-error-handling.patch\n  (git-fixes CVE-2022-50053 bsc#1245038).\n- Update\n  patches.suse/ieee802154-adf7242-defer-destroy_workqueue-call.patch\n  (git-fixes CVE-2022-49968 bsc#1244959).\n- Update\n  patches.suse/iio-light-isl29028-Fix-the-warning-in-isl29028_remov.patch\n  (git-fixes CVE-2022-50218 bsc#1244861).\n- Update\n  patches.suse/intel_th-Fix-a-resource-leak-in-an-error-handling-pa.patch\n  (git-fixes CVE-2022-50143 bsc#1244790).\n- Update patches.suse/intel_th-msu-Fix-vmalloced-buffers.patch\n  (git-fixes CVE-2022-50142 bsc#1244796).\n- Update\n  patches.suse/iommu-vt-d-avoid-invalid-memory-access-via-node_online-NUMA_NO_N\n  (git-fixes CVE-2022-50093 bsc#1244849).\n- Update\n  patches.suse/jbd2-fix-assertion-jh-b_frozen_data-NULL-failure-whe.patch\n  (bsc#1202716 CVE-2022-50126 bsc#1244813).\n- Update patches.suse/kcm-fix-strp_init-order-and-cleanup.patch\n  (git-fies CVE-2022-49957 bsc#1244966).\n- Update\n  patches.suse/kprobes-don-t-call-disarm_kprobe-for-disabled-kprobes.patch\n  (git-fixes CVE-2022-50008 bsc#1245009).\n- Update\n  patches.suse/loop-Check-for-overflow-while-configuring-loop.patch\n  (git-fies CVE-2022-49993 bsc#1245121).\n- Update patches.suse/md-call-__md_stop_writes-in-md_stop.patch\n  (git-fixes CVE-2022-49987 bsc#1245024).\n- Update patches.suse/md-raid10-fix-KASAN-warning.patch (git-fixes\n  CVE-2022-50211 bsc#1245140).\n- Update\n  patches.suse/media-mceusb-Use-new-usb_control_msg_-routines.patch\n  (CVE-2022-3903 bsc#1205220 CVE-2022-49937 bsc#1245057).\n- Update\n  patches.suse/media-pvrusb2-fix-memory-leak-in-pvr_probe.patch\n  (git-fixes CVE-2022-49982 bsc#1245069).\n- Update\n  patches.suse/media-tw686x-Fix-memory-leak-in-tw686x_video_init.patch\n  (git-fixes CVE-2022-50175 bsc#1244903).\n- Update patches.suse/memstick-ms_block-Fix-a-memory-leak.patch\n  (git-fixes CVE-2022-50140 bsc#1244793).\n- Update\n  patches.suse/meson-mx-socinfo-Fix-refcount-leak-in-meson_mx_socin.patch\n  (git-fixes CVE-2022-50209 bsc#1244868).\n- Update\n  patches.suse/mfd-max77620-Fix-refcount-leak-in-max77620_initialis.patch\n  (git-fixes CVE-2022-50108 bsc#1244834).\n- Update\n  patches.suse/misc-fastrpc-fix-memory-corruption-on-open.patch\n  (git-fixes CVE-2022-49950 bsc#1244958).\n- Update\n  patches.suse/misc-fastrpc-fix-memory-corruption-on-probe.patch\n  (git-fixes CVE-2022-49952 bsc#1244945).\n- Update\n  patches.suse/mmc-sdhci-of-esdhc-Fix-refcount-leak-in-esdhc_signal.patch\n  (git-fixes CVE-2022-50141 bsc#1244794).\n- Update\n  patches.suse/mptcp-use-OPTION_MPTCP_MPJ_SYNACK-in-subflow_finish_.patch\n  (CVE-2025-23145 bsc#1242596 CVE-2024-35840 bsc#1224597).\n- Update\n  patches.suse/msft-hv-2639-scsi-storvsc-Remove-WQ_MEM_RECLAIM-from-storvsc_erro.patch\n  (git-fixes CVE-2022-49986 bsc#1244948).\n- Update\n  patches.suse/mt76-mt76x02u-fix-possible-memory-leak-in-__mt76x02u.patch\n  (git-fixes CVE-2022-50172 bsc#1244764).\n- Update\n  patches.suse/mtd-maps-Fix-refcount-leak-in-ap_flash_init.patch\n  (git-fixes CVE-2022-50160 bsc#1244776).\n- Update\n  patches.suse/mtd-maps-Fix-refcount-leak-in-of_flash_probe_versati.patch\n  (git-fixes CVE-2022-50161 bsc#1244774).\n- Update\n  patches.suse/mtd-parsers-ofpart-Fix-refcount-leak-in-bcm4908_part.patch\n  (git-fixes CVE-2022-50155 bsc#1244781).\n- Update\n  patches.suse/mtd-partitions-Fix-refcount-leak-in-parse_redboot_of.patch\n  (git-fixes CVE-2022-50158 bsc#1244779).\n- Update\n  patches.suse/net-atlantic-fix-aq_vec-index-out-of-range-error.patch\n  (git-fixes CVE-2022-50066 bsc#1244985).\n- Update\n  patches.suse/net-bgmac-Fix-a-BUG-triggered-by-wrong-bytes_compl.patch\n  (git-fixes CVE-2022-50062 bsc#1245028).\n- Update\n  patches.suse/net-dsa-mv88e6060-prevent-crash-on-an-unused-port.patch\n  (git-fixes CVE-2022-50047 bsc#1244993).\n- Update\n  patches.suse/net-dsa-sja1105-fix-buffer-overflow-in-sja1105_setup.patch\n  (git-fixes CVE-2022-50040 bsc#1244949).\n- Update\n  patches.suse/net-sched-fix-netdevice-reference-leaks-in-attach_de.patch\n  (git-fixes CVE-2022-49958 bsc#1244974).\n- Update\n  patches.suse/net-sunrpc-fix-potential-memory-leaks-in-rpc_sysfs_x.patch\n  (git-fixes CVE-2022-50046 bsc#1244991).\n- Update\n  patches.suse/net-tap-NULL-pointer-derefence-in-dev_parse_header_p.patch\n  (git-fixes CVE-2022-50073 bsc#1244978).\n- Update\n  patches.suse/netfilter-nf_tables-do-not-allow-CHAIN_ID-to-refer-t.patch\n  (CVE-2022-2586 bsc#1202095 CVE-2022-50212 bsc#1244869).\n- Update\n  patches.suse/netfilter-nf_tables-do-not-allow-SET_ID-to-refer-to-.patch\n  (CVE-2022-2586 bsc#1202095 CVE-2022-50213 bsc#1244867).\n- Update\n  patches.suse/nfc-pn533-Fix-use-after-free-bugs-caused-by-pn532_cm.patch\n  (git-fixes CVE-2022-50005 bsc#1245011).\n- Update\n  patches.suse/octeontx2-af-Fix-mcam-entry-resource-leak.patch\n  (git-fixes CVE-2022-50060 bsc#1245032).\n- Update\n  patches.suse/pinctrl-nomadik-Fix-refcount-leak-in-nmk_pinctrl_dt_.patch\n  (git-fixes CVE-2022-50061 bsc#1245033).\n- Update\n  patches.suse/posix-cpu-timers-Cleanup-CPU-timers-before-freeing-t.patch\n  (CVE-2022-2585 bsc#1202094 CVE-2022-50095 bsc#1244846).\n- Update\n  patches.suse/powerpc-64-Init-jump-labels-before-parse_early_param.patch\n  (bsc#1065729 CVE-2022-50012 bsc#1245125).\n- Update\n  patches.suse/powerpc-iommu-fix-memory-leak-with-using-debugfs_loo.patch\n  (bsc#1194869 CVE-2023-53097 bsc#1244114).\n- Update patches.suse/powerpc-pci-Fix-get_phb_number-locking.patch\n  (bsc#1065729 CVE-2022-50045 bsc#1244967).\n- Update\n  patches.suse/powerpc-perf-Optimize-clearing-the-pending-PMI-and-r.patch\n  (bsc#1156395 CVE-2022-50118 bsc#1244825).\n- Update\n  patches.suse/powerpc-xive-Fix-refcount-leak-in-xive_get_max_prio.patch\n  (fate#322438 git-fixess CVE-2022-50104 bsc#1244836).\n- Update\n  patches.suse/regulator-of-Fix-refcount-leak-bug-in-of_get_regulat.patch\n  (git-fixes CVE-2022-50191 bsc#1244899).\n- Update\n  patches.suse/remoteproc-imx_rproc-Fix-refcount-leak-in-imx_rproc_.patch\n  (git-fixes CVE-2022-50120 bsc#1244819).\n- Update\n  patches.suse/remoteproc-k3-r5-Fix-refcount-leak-in-k3_r5_cluster_.patch\n  (git-fixes CVE-2022-50121 bsc#1244823).\n- Update\n  patches.suse/rpmsg-qcom_smd-Fix-refcount-leak-in-qcom_smd_parse_e.patch\n  (git-fixes CVE-2022-50112 bsc#1244832).\n- Update\n  patches.suse/s390-fix-double-free-of-GS-and-RI-CBs-on-fork-failure\n  (bsc#1203197 LTC#199895 CVE-2022-49990 bsc#1245006).\n- Update patches.suse/sch_htb-make-htb_deactivate-idempotent.patch\n  (CVE-2025-37798 bsc#1242414 CVE-2025-37953 bsc#1243543).\n- Update\n  patches.suse/sch_htb-make-htb_qlen_notify-idempotent.patch\n  (CVE-2025-37798 bsc#1242414 CVE-2025-37932 bsc#1243627).\n- Update\n  patches.suse/sched-core-Do-not-requeue-task-on-CPU-excluded-from-cpus_mask.patch\n  (bnc#1199356 CVE-2022-50100 bsc#1244843).\n- Update\n  patches.suse/sched-cpuset-Fix-dl_cpu_busy-panic-due-to-empty-cs-c.patch\n  (git-fixes CVE-2022-50103 bsc#1244840).\n- Update\n  patches.suse/scsi-core-Fix-unremoved-procfs-host-directory-regression.patch\n  (git-fixes CVE-2024-26935 bsc#1223675).\n- Update\n  patches.suse/scsi-iscsi-Fix-HW-conn-removal-use-after-free.patch\n  (bsc#1198410 CVE-2022-50031 bsc#1245118).\n- Update\n  patches.suse/scsi-lpfc-Fix-possible-memory-leak-when-failing-to-i.patch\n  (bsc#1201956 CVE-2022-50027 bsc#1245073).\n- Update\n  patches.suse/scsi-lpfc-Prevent-buffer-overflow-crashes-in-debugfs.patch\n  (bsc#1201956 CVE-2022-50030 bsc#1245265).\n- Update\n  patches.suse/scsi-qla2xxx-fix-crash-due-to-stale-srb-access-around-i-o-timeouts.patch\n  (bsc#1201160 CVE-2022-50098 bsc#1244841).\n- Update\n  patches.suse/scsi-sg-Allow-waiting-for-commands-to-complete-on-removed-device.patch\n  (git-fixes CVE-2022-50215 bsc#1245138).\n- Update\n  patches.suse/selinux-Add-boundary-check-in-put_entry.patch\n  (git-fixes CVE-2022-50200 bsc#1245149).\n- Update\n  patches.suse/selinux-fix-memleak-in-security_read_state_kernel.patch\n  (git-fixes CVE-2022-50201 bsc#1245197).\n- Update\n  patches.suse/soc-amlogic-Fix-refcount-leak-in-meson-secure-pwrc.c.patch\n  (git-fixes CVE-2022-50208 bsc#1244870).\n- Update\n  patches.suse/soc-qcom-aoss-Fix-refcount-leak-in-qmp_cooling_devic.patch\n  (git-fixes CVE-2022-50194 bsc#1244878).\n- Update\n  patches.suse/soc-qcom-ocmem-Fix-refcount-leak-in-of_get_ocmem.patch\n  (git-fixes CVE-2022-50196 bsc#1244875).\n- Update\n  patches.suse/spi-Fix-simplification-of-devm_spi_register_controll.patch\n  (git-fixes CVE-2022-50190 bsc#1244895).\n- Update\n  patches.suse/spi-tegra20-slink-fix-UAF-in-tegra_slink_remove.patch\n  (git-fixes CVE-2022-50192 bsc#1244879).\n- Update\n  patches.suse/spmi-trace-fix-stack-out-of-bound-access-in-SPMI-tracing-functions.patch\n  (git-fixes CVE-2022-50094 bsc#1244851).\n- Update\n  patches.suse/staging-rtl8712-fix-use-after-free-bugs.patch\n  (CVE-2022-4095 bsc#1205514 CVE-2022-49956 bsc#1244969).\n- Update\n  patches.suse/stmmac-intel-Add-a-missing-clk_disable_unprepare-cal.patch\n  (git-fixes CVE-2022-50039 bsc#1244942).\n- Update\n  patches.suse/tty-n_gsm-add-sanity-check-for-gsm-receive-in-gsm_re.patch\n  (git-fixes CVE-2022-49940 bsc#1244866).\n- Update\n  patches.suse/tty-n_gsm-fix-deadlock-and-link-starvation-in-outgoi.patch\n  (git-fixes CVE-2022-50116 bsc#1244824).\n- Update\n  patches.suse/tty-serial-Fix-refcount-leak-bug-in-ucc_uart.c.patch\n  (git-fixes CVE-2022-50019 bsc#1245098).\n- Update\n  patches.suse/tty-vt-initialize-unicode-screen-buffer.patch\n  (git-fixes CVE-2022-50222 bsc#1245136).\n- Update\n  patches.suse/udmabuf-Set-the-DMA-mask-for-the-udmabuf-device-v2.patch\n  (git-fixes CVE-2022-49983 bsc#1245092).\n- Update\n  patches.suse/usb-aspeed-vhub-Fix-refcount-leak-bug-in-ast_vhub_in.patch\n  (git-fixes CVE-2022-50139 bsc#1244798).\n- Update\n  patches.suse/usb-cdns3-change-place-of-priv_ep-assignment-in-cdns.patch\n  (git-fixes CVE-2022-50132 bsc#1244808).\n- Update\n  patches.suse/usb-cdns3-fix-random-warning-message-when-driver-loa.patch\n  (git-fixes CVE-2022-50151 bsc#1245093).\n- Update\n  patches.suse/usb-cdns3-fix-use-after-free-at-workaround-2.patch\n  (git-fixes CVE-2022-50034 bsc#1245089).\n- Update\n  patches.suse/usb-host-Fix-refcount-leak-in-ehci_hcd_ppc_of_probe.patch\n  (git-fixes CVE-2022-50153 bsc#1244786).\n- Update\n  patches.suse/usb-host-ohci-ppc-of-Fix-refcount-leak-bug.patch\n  (git-fixes CVE-2022-50033 bsc#1245139).\n- Update\n  patches.suse/usb-ohci-nxp-Fix-refcount-leak-in-ohci_hcd_nxp_probe.patch\n  (git-fixes CVE-2022-50152 bsc#1244783).\n- Update patches.suse/usb-renesas-Fix-refcount-leak-bug.patch\n  (git-fixes CVE-2022-50032 bsc#1245103).\n- Update\n  patches.suse/usb-typec-tcpm-fix-warning-when-handle-discover_iden.patch\n  (git-fixes CVE-2023-53048 bsc#1244179).\n- Update\n  patches.suse/usbnet-Fix-linkwatch-use-after-free-on-disconnect.patch\n  (git-fixes CVE-2022-50220 bsc#1245348).\n- Update\n  patches.suse/venus-pm_helpers-Fix-warning-in-OPP-during-probe.patch\n  (git-fixes CVE-2022-50011 bsc#1244915).\n- Update\n  patches.suse/video-fbdev-amba-clcd-Fix-refcount-leak-bugs.patch\n  (git-fixes CVE-2022-50109 bsc#1244884).\n- Update\n  patches.suse/video-fbdev-arkfb-Check-the-size-of-screen-before-me.patch\n  (git-fixes CVE-2022-50099 bsc#1244842).\n- Update\n  patches.suse/video-fbdev-arkfb-Fix-a-divide-by-zero-bug-in-ark_se.patch\n  (git-fixes CVE-2022-50102 bsc#1244838).\n- Update\n  patches.suse/video-fbdev-i740fb-Check-the-argument-of-i740_calc_v.patch\n  (git-fixes CVE-2022-50010 bsc#1245122).\n- Update\n  patches.suse/video-fbdev-s3fb-Check-the-size-of-screen-before-mem.patch\n  (git-fixes CVE-2022-50097 bsc#1244845).\n- Update\n  patches.suse/video-fbdev-vt8623fb-Check-the-size-of-screen-before.patch\n  (git-fixes CVE-2022-50101 bsc#1244839).\n- Update\n  patches.suse/virtio-gpu-fix-a-missing-check-to-avoid-NULL-derefer.patch\n  (git-fixes CVE-2022-50181 bsc#1244901).\n- Update\n  patches.suse/virtio_net-fix-memory-leak-inside-XPD_TX-with-mergea.patch\n  (git-fixes CVE-2022-50065 bsc#1244986).\n- Update\n  patches.suse/vt-Clear-selection-before-changing-the-font.patch\n  (git-fixes CVE-2022-49948 bsc#1245058).\n- Update\n  patches.suse/watchdog-sp5100_tco-Fix-a-memory-leak-of-EFCH-MMIO-r.patch\n  (git-fixes CVE-2022-50110 bsc#1244830).\n- Update\n  patches.suse/wifi-iwlwifi-mvm-fix-double-list_add-at-iwl_mvm_mac_.patch\n  (git-fixes CVE-2022-50164 bsc#1244770).\n- Update\n  patches.suse/wifi-libertas-Fix-possible-refcount-leak-in-if_usb_p.patch\n  (git-fixes CVE-2022-50162 bsc#1244773).\n- Update\n  patches.suse/wifi-mac80211-Don-t-finalize-CSA-in-IBSS-mode-if-sta.patch\n  (git-fixes CVE-2022-49942 bsc#1244881).\n- Update\n  patches.suse/wifi-mac80211-Fix-UAF-in-ieee80211_scan_rx.patch\n  (git-fixes CVE-2022-49934 bsc#1245051).\n- Update\n  patches.suse/wifi-rtw89-8852a-rfk-fix-div-0-exception.patch\n  (git-fixes CVE-2022-50178 bsc#1244900).\n- Update\n  patches.suse/wifi-wil6210-debugfs-fix-info-leak-in-wil_write_file.patch\n  (git-fixes CVE-2022-50169 bsc#1244767).\n- Update\n  patches.suse/wifi-wil6210-debugfs-fix-uninitialized-variable-use-.patch\n  (git-fixes CVE-2022-50165 bsc#1244771).\n- Update\n  patches.suse/writeback-avoid-use-after-free-after-removing-device.patch\n  (bsc#1207638 CVE-2022-49995 bsc#1245012).\n- Update\n  patches.suse/xen-privcmd-fix-error-exit-of-privcmd_ioctl_dm_op.patch\n  (git-fixes CVE-2022-49989 bsc#1245007).\n- commit 7202356\n\n- Update\n  patches.suse/powerpc-pseries-iommu-IOMMU-incorrectly-marks-MMIO-r.patch\n  (bsc#1218470 ltc#204531 CVE-2024-57999 bsc#1238526).\n- commit 12e737a\n\n- net_sched: prio: fix a race in prio_tune() (CVE-2025-38083\n  bsc#1245183).\n- commit 2221c2d\n\n- dmaengine: idxd: Refactor remove call with idxd_cleanup()\n  helper (CVE-2025-38014 bsc#1244732).\n- commit c97ce5d\n\n- Refresh patches.suse/netfilter-nf_tables-use-timestamp-to-check-for-set-element.patch.\n  The gc path is async therefore it shouldn't use the timestamp but the\n  current time instead.\n- commit 7fca653\n\n- net_sched: hfsc: Address reentrant enqueue adding class to\n  eltree twice (CVE-2025-38001 bsc#1244234).\n- commit 47685d0\n\n- net/sched: sch_ets: don't remove idle classes from the\n  round-robin list (bsc#1207361 CVE-2021-47595 bsc#1226552).\n- net/sched: sch_ets: don't peek at classes beyond 'nbands'\n  (bsc#1207361 bsc#1225468 CVE-2021-47557).\n- commit 6b479ec\n\n- sch_htb: make htb_deactivate() idempotent (CVE-2025-37798\n  bsc#1242414).\n- codel: remove sch-\u0026gt;q.qlen check before\n  qdisc_tree_reduce_backlog() (CVE-2025-37798 bsc#1242414).\n- sch_ets: make est_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_qfq: make qfq_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_hfsc: make hfsc_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_drr: make drr_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_htb: make htb_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- commit 4e7c132\n\n- netfilter: nf_tables: use timestamp to check for set element\n  timeout (CVE-2024-27397 bsc#1224095).\n- commit 0345626\n\n- packaging: Add support for suse-kabi-tools\n  The current workflow to check kABI stability during the RPM build of SUSE\n  kernels consists of the following steps:\n  * The downstream script rpm/modversions unpacks the consolidated kABI\n  symtypes reference data from kabi/\u0026lt;arch\u0026gt;/symtypes-\u0026lt;flavor\u0026gt; and creates\n  individual symref files.\n  * The build performs a regular kernel make. During this operation, genksyms\n  is invoked for each source file. The tool determines type signatures of\n  all exports within the file, reports any differences compared to the\n  associated symref reference, calculates symbol CRCs from the signatures\n  and writes new type data into a symtypes file.\n  * The script rpm/modversions is invoked again, this time it packs all new\n  symtypes files to a consolidated kABI file.\n  * The downstream script rpm/kabi.pl checks symbol CRCs in the new build and\n  compares them to a reference from kabi/\u0026lt;arch\u0026gt;/symvers-\u0026lt;flavor\u0026gt;, taking\n  kabi/severities into account.\n  suse-kabi-tools is a new set of tools to improve the kABI checking process.\n  The suite includes two tools, ksymtypes and ksymvers, which replace the\n  existing scripts rpm/modversions and rpm/kabi.pl, as well as the comparison\n  functionality previously provided by genksyms. The tools have their own\n  source repository and package.\n  The tools provide faster operation and more detailed, unified output. In\n  addition, they allow the use of the new upstream tool gendwarfksyms, which\n  lacks any built-in comparison functionality.\n  The updated workflow is as follows:\n  * The build performs a regular kernel make. During this operation, genksyms\n  (gendwarfksyms) is invoked as usual, determinining signatures and CRCs of\n  all exports and writing the type data to symtypes files. However,\n  genksyms no longer performs any comparison.\n  * 'ksymtypes consolidate' packs all new symtypes files to a consolidated\n  kABI file.\n  * 'ksymvers compare' checks symbol CRCs in the new build and compares them\n  to a reference from kabi/\u0026lt;arch\u0026gt;/symvers-\u0026lt;flavor\u0026gt;, taking kabi/severities\n  into account. The tool writes its result in a human-readable form on\n  standard output and also writes a list of all changed exports (not\n  ignored by kabi/severities) to the changed-exports file.\n  * 'ksymtypes compare' takes the changed-exports file, the consolidated kABI\n  symtypes reference data from kabi/\u0026lt;arch\u0026gt;/symtypes-\u0026lt;flavor\u0026gt; and the new\n  consolidated data. Based on this data, it produces a detailed report\n  explaining why the symbols changed.\n  The patch enables the use of suse-kabi-tools via rpm/config.sh, providing\n  explicit control to each branch. To enable the support, set\n  USE_SUSE_KABI_TOOLS=Yes in the config file.\n- commit a2c6f89\n\n- netfilter: nft_chain_filter: handle NETDEV_UNREGISTER for\n  inet/ingress basechain (CVE-2024-26808 bsc#1222634).\n- commit 8ae94b6\n\n- netfilter: nft_set_rbtree: .deactivate fails if element has\n  expired (CVE-2024-27397 bsc#1224095).\n- commit 544c57e\n\n- kernel-source: Remove log.sh from sources\n- commit 96bd779\n\n- netfilter: ipset: add missing range check in bitmap_ip_uadt (CVE-2024-53141 bsc#1234381)\n- commit 6255020\n\n- net_sched: hfsc: Fix a potential UAF in hfsc_dequeue() too\n  (CVE-2025-37823 bsc#1242924).\n- commit 10fd231\n\n- net: sched: sch_multiq: fix possible OOB write in multiq_tune()\n  (CVE-2024-36978 bsc#1226514).\n- commit 6416785\n\n- sch_hfsc: Fix qlen accounting bug when using peek in\n  hfsc_enqueue() (CVE-2025-38000 bsc#1244277).\n- commit 411bb06\n\n- net_sched: hfsc: Fix a UAF vulnerability in class with netem\n  as child qdisc (CVE-2025-37890 bsc#1243330).\n- commit 33c0be8\n\n- netfilter: ipset: fix region locking in hash types\n  (CVE-2025-37997 bsc#1243832).\n- commit e26a95e\n\n- netfilter: nf_tables: don't fail inserts if duplicate has\n  expired (git-fixes CVE-2023-52925 bsc#1236822).\n- commit cd97e1a\n\n- netfilter: nf_tables: don't skip expired elements during walk\n  (CVE-2023-52924 bsc#1236821).\n- Refresh\n  patches.suse/netfilter-nft_set_pipapo-skip-inactive-elements-duri.patch.\n- commit 6faff42\n\n- bpf: sync_linked_regs() must preserve subreg_def (bsc#1234156\n  CVE-2024-53125).\n- commit 29ff5bf\n\n- net: sched: Disallow replacing of child qdisc from one parent\n  to another (CVE-2025-21700 bsc#1237159).\n- commit 7b38bc0\n\n- vsock: Orphan socket after transport release (bsc#1238876\n  CVE-2025-21756).\n- commit 7e39328\n\n- vsock: Keep the binding until socket destruction (bsc#1238876\n  CVE-2025-21756).\n- commit a3adf03\n\n- netem: Update sch-\u0026gt;q.qlen before qdisc_tree_reduce_backlog()\n  (git-fixes CVE-2025-21703 bsc#1237313).\n- commit 6fdf91c\n\n- pfifo_tail_enqueue: Drop new packet when sch-\u0026gt;limit == 0 (CVE-2025-21702 bsc#1237312)\n- commit 874558c\n\n- net_sched: sch_fifo: implement lockless __fifo_dump() (bsc#1237312)\n- commit a5fc425\n\n- netfilter: nft_set_pipapo: do not free live element\n  (CVE-2024-26924 bsc#1223387).\n- commit b8b066b\n\n- net/sched: netem: account for backlog updates from child qdisc\n  (CVE-2024-56770 bsc#1235637).\n- sch/netem: fix use after free in netem_dequeue (CVE-2024-56770\n  bsc#1235637 CVE-2024-46800 bsc#1230827).\n- commit a31493e\n\n- mkspec: Exclude rt flavor from kernel-syms dependencies (bsc#1244337).\n- commit 7c95ae0\n\n- powerpc/vas: Return -EINVAL if the offset is non-zero in mmap()\n  (bsc#1244309 ltc#213790).\n- powerpc/powernv/memtrace: Fix out of bounds issue in memtrace\n  mmap (bsc#1244309 ltc#213790).\n- commit 85e9dad\n\n- MyBS: Do not build kernel-obs-qa with limit_packages\n  Fixes: 58e3f8c34b2b (\u0026quot;bs-upload-kernel: Pass limit_packages also on multibuild\u0026quot;)\n- commit f4c6047\n\n- MyBS: Simplify qa_expr generation\n  Start with a 0 which makes the expression valid even if there are no QA\n  repositories (currently does not happen). Then separator is always\n  needed.\n- commit e4c2851\n\n- MyBS: Correctly generate build flags for non-multibuild package limit\n  (bsc# 1244241)\n  Fixes: 0999112774fc (\u0026quot;MyBS: Use buildflags to set which package to build\u0026quot;)\n- commit 27588c9\n\n- bs-upload-kernel: Pass limit_packages also on multibuild\n  Fixes: 0999112774fc (\u0026quot;MyBS: Use buildflags to set which package to build\u0026quot;)\n  Fixes: 747f601d4156 (\u0026quot;bs-upload-kernel, MyBS, Buildresults: Support multibuild (JSC-SLE#5501, boo#1211226, bsc#1218184)\u0026quot;)\n- commit 8ef486c\n\n- wifi: cfg80211: fix certs build to not depend on file order\n  (bsc#1243001).\n- wifi: cfg80211: Add my certificate (bsc#1243001).\n- commit 3b8f8fd\n\n- kernel-source: Do not use multiple -r in sed parameters\n  This usage is enabled in commit b18d64d\n  (sed: allow multiple (non-conflicting) -E/-r parameters, 2016-07-31)\n  only available since sed 4.3\n  Fixes: dc2037cd8f94 (\u0026quot;kernel-source: Also replace bin/env\u0026quot;\n- commit 91ad98e\n\n- ext4: fix OOB read when checking dotdot dir (bsc#1241640\n  CVE-2025-37785).\n- commit a1f98cf\n\n- Update patches.suse/ceph-avoid-putting-the-realm-twice-when-decoding-snaps-fails.patch (bsc#1206051 CVE-2022-49770).\n- commit c4ae7a8\n\n- Update\n  patches.suse/arm64-bpf-Add-BHB-mitigation-to-the-epilogue-for-cBP.patch\n  (bsc#1242778 CVE-2025-37948 bsc#1243649).\n- Update\n  patches.suse/arm64-bpf-Only-mitigate-cBPF-programs-loaded-by-unpr.patch\n  (bsc#1242778 CVE-2025-37963 bsc#1243660).\n- Update\n  patches.suse/dm-stats-check-for-and-propagate-alloc_percpu-failur-d3aa.patch\n  (git-fixes CVE-2023-53044 bsc#1242759).\n- commit 70937e2\n\n- Update\n  patches.suse/0001-netfs-Fix-missing-xas_retry-calls-in-xarray-iteratio.patch\n  (bsc#1213946 CVE-2022-49810 bsc#1242489).\n- Update\n  patches.suse/0037-dm-ioctl-fix-misbehavior-if-list_versions-races-with-module-loading.patch\n  (git-fixes CVE-2022-49771 bsc#1242686).\n- Update\n  patches.suse/ACPI-APEI-Fix-integer-overflow-in-ghes_estatus_pool_.patch\n  (git-fixes CVE-2022-49885 bsc#1242735).\n- Update\n  patches.suse/ALSA-hda-fix-potential-memleak-in-add_widget_node.patch\n  (git-fixes CVE-2022-49835 bsc#1242385).\n- Update\n  patches.suse/ALSA-usb-audio-Drop-snd_BUG_ON-from-snd_usbmidi_outp.patch\n  (git-fixes CVE-2022-49772 bsc#1242147).\n- Update\n  patches.suse/ASoC-core-Fix-use-after-free-in-snd_soc_exit.patch\n  (git-fixes CVE-2022-49842 bsc#1242484).\n- Update\n  patches.suse/Bluetooth-L2CAP-Fix-memory-leak-in-vhci_write.patch\n  (CVE-2022-3619 bsc#1204569 CVE-2022-49908 bsc#1242157).\n- Update\n  patches.suse/Bluetooth-L2CAP-Fix-use-after-free-caused-by-l2cap_r.patch\n  (CVE-2022-3564 bsc#1206073 CVE-2022-49910 bsc#1242452).\n- Update\n  patches.suse/Bluetooth-L2CAP-fix-use-after-free-in-l2cap_conn_del.patch\n  (CVE-2022-3640 bsc#1204619 CVE-2022-49909 bsc#1242453).\n- Update\n  patches.suse/Bluetooth-btsdio-fix-use-after-free-bug-in-btsdio_re-73f7b171b7c0.patch\n  (git-fixes CVE-2023-53145 bsc#1243047).\n- Update\n  patches.suse/HID-intel-ish-hid-ipc-Fix-potential-use-after-free-i.patch\n  (git-fixes CVE-2023-53039 bsc#1242745).\n- Update\n  patches.suse/IB-hfi1-Correctly-move-list-in-sc_disable.patch\n  (git-fixes CVE-2022-49931 bsc#1242382).\n- Update\n  patches.suse/Input-i8042-fix-leaking-of-platform-device-on-module.patch\n  (git-fixes CVE-2022-49777 bsc#1242232).\n- Update\n  patches.suse/Input-iforce-invert-valid-length-check-when-fetching.patch\n  (git-fixes CVE-2022-49790 bsc#1242387).\n- Update\n  patches.suse/PCI-s390-Fix-use-after-free-of-PCI-resources-with-pe.patch\n  (git-fixes CVE-2023-53123 bsc#1242403).\n- Update\n  patches.suse/RDMA-core-Fix-null-ptr-deref-in-ib_core_cleanup.patch\n  (git-fixes CVE-2022-49925 bsc#1242371).\n- Update patches.suse/SUNRPC-Fix-a-server-shutdown-leak.patch\n  (git-fixes CVE-2023-53131 bsc#1242377).\n- Update\n  patches.suse/SUNRPC-Fix-null-ptr-deref-when-xps-sysfs-alloc-faile.patch\n  (git-fixes CVE-2022-49928 bsc#1242369).\n- Update patches.suse/arm64-entry-avoid-kprobe-recursion.patch\n  (git-fixes CVE-2022-49888 bsc#1242458).\n- Update\n  patches.suse/ata-libata-transport-fix-double-ata_host_put-in-ata_.patch\n  (git-fixes CVE-2022-49826 bsc#1242549).\n- Update\n  patches.suse/ata-libata-transport-fix-error-handling-in-ata_tdev_.patch\n  (git-fixes CVE-2022-49823 bsc#1242545).\n- Update\n  patches.suse/ata-libata-transport-fix-error-handling-in-ata_tlink.patch\n  (git-fixes CVE-2022-49824 bsc#1242547).\n- Update\n  patches.suse/ata-libata-transport-fix-error-handling-in-ata_tport.patch\n  (git-fixes CVE-2022-49825 bsc#1242548).\n- Update\n  patches.suse/bnxt_en-Avoid-order-5-memory-allocation-for-TPA-data.patch\n  (jsc#SLE-18978 CVE-2023-53134 bsc#1242380).\n- Update\n  patches.suse/bnxt_en-Fix-possible-crash-in-bnxt_hwrm_set_coal.patch\n  (git-fixes CVE-2022-49869 bsc#1242158).\n- Update\n  patches.suse/bridge-switchdev-Fix-memory-leaks-when-changing-VLAN.patch\n  (git-fixes CVE-2022-49812 bsc#1242151).\n- Update\n  patches.suse/ca8210-fix-mac_len-negative-array-access.patch\n  (git-fixes CVE-2023-53040 bsc#1242746).\n- Update\n  patches.suse/can-af_can-fix-NULL-pointer-dereference-in-can_rx_re.patch\n  (git-fixes CVE-2022-49863 bsc#1242169).\n- Update\n  patches.suse/can-j1939-j1939_send_one-fix-missing-CAN-header-init.patch\n  (git-fixes CVE-2022-49845 bsc#1243133).\n- Update\n  patches.suse/capabilities-fix-potential-memleak-on-error-path-fro.patch\n  (git-fixes CVE-2022-49890 bsc#1242469).\n- Update\n  patches.suse/capabilities-fix-undefined-behavior-in-bit-shift-for.patch\n  (git-fixes CVE-2022-49870 bsc#1242551).\n- Update\n  patches.suse/ceph-avoid-putting-the-realm-twice-when-decoding-snaps-fails.patch\n  (bsc#1206051 CVE-2022-49770 bsc#1242597).\n- Update\n  patches.suse/cifs-Fix-connections-leak-when-tlink-setup-failed.patch\n  (git-fixes CVE-2022-49822 bsc#1242544).\n- Update\n  patches.suse/cifs-fix-use-after-free-bug-in-refresh_cache_worker-.patch\n  (bsc#1193629 CVE-2023-53052 bsc#1242749).\n- Update\n  patches.suse/dmaengine-mv_xor_v2-Fix-a-resource-leak-in-mv_xor_v2.patch\n  (git-fixes CVE-2022-49861 bsc#1242580).\n- Update\n  patches.suse/dmaengine-ti-k3-udma-glue-fix-memory-leak-when-regis.patch\n  (git-fixes CVE-2022-49860 bsc#1242586).\n- Update\n  patches.suse/drm-Fix-potential-null-ptr-deref-in-drm_vblank_destr.patch\n  (git-fixes CVE-2022-49827 bsc#1242689).\n- Update\n  patches.suse/drm-amd-display-fix-shift-out-of-bounds-in-Calculate.patch\n  (git-fixes CVE-2023-53077 bsc#1242752).\n- Update\n  patches.suse/drm-amdkfd-Fix-NULL-pointer-dereference-in-svm_migra.patch\n  (git-fixes CVE-2022-49864 bsc#1242685).\n- Update\n  patches.suse/drm-amdkfd-Fix-an-illegal-memory-access.patch\n  (git-fixes CVE-2023-53090 bsc#1242753).\n- Update\n  patches.suse/drm-drv-Fix-potential-memory-leak-in-drm_dev_init.patch\n  (git-fixes CVE-2022-49830 bsc#1242150).\n- Update\n  patches.suse/drm-i915-active-Fix-misuse-of-non-idle-barriers-as-f.patch\n  (git-fixes CVE-2023-53087 bsc#1242280).\n- Update\n  patches.suse/drm-shmem-helper-Remove-another-errant-put-in-error-.patch\n  (git-fixes CVE-2023-53084 bsc#1242294).\n- Update\n  patches.suse/ext4-Fix-possible-corruption-when-moving-a-directory.patch\n  (bsc#1210763 CVE-2023-53137 bsc#1242358).\n- Update\n  patches.suse/ext4-fix-BUG_ON-when-directory-entry-has-invalid-rec.patch\n  (bsc#1206886 CVE-2022-49879 bsc#1242733).\n- Update\n  patches.suse/ext4-fix-WARNING-in-ext4_update_inline_data.patch\n  (bsc#1213012 CVE-2023-53100 bsc#1242790).\n- Update\n  patches.suse/ext4-fix-another-off-by-one-fsmap-error-on-1k-block-.patch\n  (bsc#1210767 CVE-2023-53143 bsc#1242276).\n- Update\n  patches.suse/ext4-fix-task-hung-in-ext4_xattr_delete_inode.patch\n  (bsc#1213096 CVE-2023-53089 bsc#1242744).\n- Update\n  patches.suse/ext4-fix-warning-in-ext4_da_release_space.patch\n  (bsc#1206887 CVE-2022-49880 bsc#1242734).\n- Update\n  patches.suse/ext4-update-s_journal_inum-if-it-changes-after-journ.patch\n  (bsc#1213094 CVE-2023-53091 bsc#1242767).\n- Update\n  patches.suse/ext4-zero-i_disksize-when-initializing-the-bootloade.patch\n  (bsc#1213013 CVE-2023-53101 bsc#1242791).\n- Update\n  patches.suse/firmware-xilinx-don-t-make-a-sleepable-memory-alloca.patch\n  (git-fixes CVE-2023-53099 bsc#1242399).\n- Update\n  patches.suse/ftrace-Fix-invalid-address-access-in-lookup_rec-when-index-is-0.patch\n  (git-fixes CVE-2023-53075 bsc#1242218).\n- Update\n  patches.suse/ftrace-Fix-null-pointer-dereference-in-ftrace_add_mod.patch\n  (git-fixes CVE-2022-49802 bsc#1242270).\n- Update\n  patches.suse/ftrace-Fix-use-after-free-for-dynamic-ftrace_ops.patch\n  (git-fixes CVE-2022-49892 bsc#1242449).\n- Update\n  patches.suse/gfs2-Check-sb_bsize_shift-after-reading-superblock.patch\n  (git-fixes CVE-2022-49769 bsc#1242440).\n- Update\n  patches.suse/i2c-piix4-Fix-adapter-not-be-removed-in-piix4_remove.patch\n  (git-fixes CVE-2022-49900 bsc#1242454).\n- Update\n  patches.suse/i40e-Fix-kernel-crash-during-reboot-when-adapter-is-.patch\n  (jsc#SLE-18378 CVE-2023-53114 bsc#1242398).\n- Update patches.suse/iavf-fix-hang-on-reboot-with-ice.patch\n  (jsc#SLE-18385 CVE-2023-53064 bsc#1242222).\n- Update patches.suse/ibmvnic-Free-rwi-on-reset-success.patch\n  (bsc#1184350 ltc#191533 git-fixes CVE-2022-49906 bsc#1242464).\n- Update\n  patches.suse/ice-copy-last-block-omitted-in-ice_get_module_eeprom.patch\n  (git-fixes CVE-2023-53142 bsc#1242282).\n- Update\n  patches.suse/igb-revert-rtnl_lock-that-causes-deadlock.patch\n  (jsc#SLE-18379 CVE-2023-53060 bsc#1242241).\n- Update\n  patches.suse/iio-adc-at91_adc-fix-possible-memory-leak-in-at91_ad.patch\n  (git-fixes CVE-2022-49794 bsc#1242392).\n- Update\n  patches.suse/iio-adc-mp2629-fix-potential-array-out-of-bound-acce.patch\n  (git-fixes CVE-2022-49792 bsc#1242389).\n- Update\n  patches.suse/iio-trigger-sysfs-fix-possible-memory-leak-in-iio_sy.patch\n  (git-fixes CVE-2022-49793 bsc#1242391).\n- Update\n  patches.suse/interconnect-exynos-fix-node-leak-in-probe-PM-QoS-er.patch\n  (git-fixes CVE-2023-53092 bsc#1242415).\n- Update\n  patches.suse/interconnect-fix-mem-leak-when-freeing-nodes.patch\n  (git-fixes CVE-2023-53096 bsc#1242289).\n- Update\n  patches.suse/ipv6-addrlabel-fix-infoleak-when-sending-struct-ifad.patch\n  (git-fixes CVE-2022-49865 bsc#1242570).\n- Update\n  patches.suse/kprobes-Skip-clearing-aggrprobe-s-post_handler-in-kprobe-on-ftrace-case.patch\n  (git-fixes CVE-2022-49779 bsc#1242261).\n- Update patches.suse/loop-Fix-use-after-free-issues.patch\n  (bsc#1214991 CVE-2023-53111 bsc#1242428).\n- Update\n  patches.suse/mISDN-fix-misuse-of-put_device-in-mISDN_register_dev.patch\n  (git-fixes CVE-2022-49818 bsc#1242527).\n- Update\n  patches.suse/mISDN-fix-possible-memory-leak-in-mISDN_dsp_element_.patch\n  (git-fixes CVE-2022-49821 bsc#1242542).\n- Update\n  patches.suse/mISDN-fix-possible-memory-leak-in-mISDN_register_dev.patch\n  (git-fixes CVE-2022-49915 bsc#1242409).\n- Update\n  patches.suse/macvlan-enforce-a-consistent-minimal-mtu.patch\n  (git-fixes CVE-2022-49776 bsc#1242248).\n- Update\n  patches.suse/media-meson-vdec-fix-possible-refcount-leak-in-vdec_.patch\n  (git-fixes CVE-2022-49887 bsc#1242736).\n- Update\n  patches.suse/media-rc-gpio-ir-recv-add-remove-function.patch\n  (git-fixes CVE-2023-53098 bsc#1242779).\n- Update\n  patches.suse/misc-vmw_vmci-fix-an-infoleak-in-vmci_host_do_receiv.patch\n  (git-fixes CVE-2022-49788 bsc#1242353).\n- Update\n  patches.suse/mmc-sdhci-pci-Fix-possible-memory-leak-caused-by-mis.patch\n  (git-fixes CVE-2022-49787 bsc#1242352).\n- Update\n  patches.suse/msft-hv-2675-HID-hyperv-fix-possible-memory-leak-in-mousevsc_prob.patch\n  (git-fixes CVE-2022-49874 bsc#1242478).\n- Update patches.suse/net-ena-Fix-error-handling-in-ena_init.patch\n  (git-fixes CVE-2022-49813 bsc#1242497).\n- Update patches.suse/net-iucv-Fix-size-of-interrupt-data.patch\n  (bsc#1211465 git-fixes CVE-2023-53108 bsc#1242422).\n- Update\n  patches.suse/net-macvlan-fix-memory-leaks-of-macvlan_common_newli.patch\n  (git-fixes CVE-2022-49853 bsc#1242688).\n- Update\n  patches.suse/net-mlx5-E-Switch-Fix-an-Oops-in-error-handling-code.patch\n  (jsc#SLE-19253 CVE-2023-53058 bsc#1242237).\n- Update patches.suse/net-mlx5-Fix-steering-rules-cleanup.patch\n  (jsc#SLE-19253 CVE-2023-53079 bsc#1242765).\n- Update\n  patches.suse/net-smc-Fix-possible-leaked-pernet-namespace-in-smc_init\n  (git-fixes CVE-2022-49905 bsc#1242467).\n- Update\n  patches.suse/net-tun-Fix-memory-leaks-of-napi_get_frags.patch\n  (git-fixes CVE-2022-49871 bsc#1242558).\n- Update\n  patches.suse/net-usb-lan78xx-Limit-packet-length-to-skb-len.patch\n  (git-fixes CVE-2023-53068 bsc#1242239).\n- Update\n  patches.suse/net-usb-smsc75xx-Limit-packet-length-to-skb-len.patch\n  (git-fixes CVE-2023-53125 bsc#1242285).\n- Update\n  patches.suse/net-usb-smsc95xx-Limit-packet-length-to-skb-len.patch\n  (git-fixes CVE-2023-53062 bsc#1242228).\n- Update\n  patches.suse/net-x25-Fix-skb-leak-in-x25_lapb_receive_frame.patch\n  (git-fixes CVE-2022-49809 bsc#1242402).\n- Update\n  patches.suse/nfc-fdp-Fix-potential-memory-leak-in-fdp_nci_send.patch\n  (git-fixes CVE-2022-49924 bsc#1242426).\n- Update\n  patches.suse/nfc-fdp-add-null-check-of-devm_kmalloc_array-in-fdp_.patch\n  (git-fixes CVE-2023-53139 bsc#1242361).\n- Update\n  patches.suse/nfc-nfcmrvl-Fix-potential-memory-leak-in-nfcmrvl_i2c.patch\n  (git-fixes CVE-2022-49922 bsc#1242378).\n- Update\n  patches.suse/nfc-nxp-nci-Fix-potential-memory-leak-in-nxp_nci_sen.patch\n  (git-fixes CVE-2022-49923 bsc#1242394).\n- Update\n  patches.suse/nfc-pn533-initialize-struct-pn533_out_arg-properly.patch\n  (git-fixes CVE-2023-53119 bsc#1242370).\n- Update\n  patches.suse/nfc-st-nci-Fix-use-after-free-bug-in-ndlc_remove-due.patch\n  (git-fixes bsc#1210337 CVE-2023-1990 CVE-2023-53106\n  bsc#1242215).\n- Update\n  patches.suse/nfs4-Fix-kmemleak-when-allocate-slot-failed.patch\n  (git-fixes CVE-2022-49927 bsc#1242416).\n- Update\n  patches.suse/nilfs2-fix-deadlock-in-nilfs_count_free_blocks.patch\n  (git-fixes CVE-2022-49850 bsc#1242164).\n- Update\n  patches.suse/nilfs2-fix-kernel-infoleak-in-nilfs_ioctl_wrap_copy.patch\n  (git-fixes CVE-2023-53035 bsc#1242739).\n- Update\n  patches.suse/nilfs2-fix-use-after-free-bug-of-ns_writer-on-remoun.patch\n  (git-fixes CVE-2022-49834 bsc#1242695).\n- Update\n  patches.suse/nvmet-avoid-potential-UAF-in-nvmet_req_complete.patch\n  (git-fixes CVE-2023-53116 bsc#1242411).\n- Update\n  patches.suse/nvmet-fix-a-memory-leak-in-nvmet_auth_set_key.patch\n  (git-fixes CVE-2022-49807 bsc#1242357).\n- Update\n  patches.suse/ocfs2-fix-data-corruption-after-failed-write.patch\n  (bsc#1208542 CVE-2023-53081 bsc#1242281).\n- Update\n  patches.suse/octeontx2-pf-Fix-SQE-threshold-checking.patch\n  (jsc#SLE-24682 CVE-2022-49858 bsc#1242589).\n- Update\n  patches.suse/perf-core-Fix-perf_output_begin-parameter-is-incorrectly-invoked-in-perf_event_bpf_output.patch\n  (git fixes CVE-2023-53065 bsc#1242229).\n- Update\n  patches.suse/phy-ralink-mt7621-pci-add-sentinel-to-quirks-table.patch\n  (git-fixes CVE-2022-49868 bsc#1242550).\n- Update\n  patches.suse/pinctrl-devicetree-fix-null-pointer-dereferencing-in.patch\n  (git-fixes CVE-2022-49832 bsc#1242154).\n- Update\n  patches.suse/platform-chrome-cros_ec_chardev-fix-kernel-data-leak.patch\n  (git-fixes CVE-2023-53059 bsc#1242230).\n- Update\n  patches.suse/qed-qed_sriov-guard-against-NULL-derefs-from-qed_iov.patch\n  (jsc#SLE-19001 CVE-2023-53066 bsc#1242227).\n- Update\n  patches.suse/ring-buffer-Check-for-NULL-cpu_buffer-in-ring_buffer.patch\n  (bsc#1204705 CVE-2022-49889 bsc#1242455).\n- Update\n  patches.suse/rose-Fix-NULL-pointer-dereference-in-rose_send_frame.patch\n  (git-fixes CVE-2022-49916 bsc#1242421).\n- Update\n  patches.suse/scsi-core-Remove-the-proc-scsi-proc_name-directory-earlier.patch\n  (git-fixes CVE-2023-53140 bsc#1242372).\n- Update\n  patches.suse/scsi-lpfc-Check-kzalloc-in-lpfc_sli4_cgn_params_read.patch\n  (git-fixes CVE-2023-53038 bsc#1242743).\n- Update\n  patches.suse/scsi-mpt3sas-Fix-NULL-pointer-access-in-mpt3sas_transport_port_add.patch\n  (git-fixes CVE-2023-53124 bsc#1242165).\n- Update\n  patches.suse/scsi-qla2xxx-Perform-lockless-command-completion-in-abort-path.patch\n  (git-fixes CVE-2023-53041 bsc#1242747).\n- Update\n  patches.suse/scsi-qla2xxx-Synchronize-the-IOCB-count-to-be-in-ord.patch\n  (bsc#1209292 bsc#1209684 bsc#1209556 CVE-2023-53056\n  bsc#1242219).\n- Update\n  patches.suse/scsi-scsi_dh_alua-Fix-memleak-for-qdata-in-alua_activate.patch\n  (git-fixes CVE-2023-53078 bsc#1242231).\n- Update\n  patches.suse/scsi-scsi_transport_sas-Fix-error-handling-in-sas_phy_add.patch\n  (git-fixes CVE-2022-49839 bsc#1242443).\n- Update\n  patches.suse/scsi-zfcp-Fix-double-free-of-FSF-request-when-qdio-send-fails\n  (git-fixes CVE-2022-49789 bsc#1242366).\n- Update\n  patches.suse/serial-imx-Add-missing-.thaw_noirq-hook.patch\n  (git-fixes CVE-2022-49841 bsc#1242473).\n- Update\n  patches.suse/siox-fix-possible-memory-leak-in-siox_device_add.patch\n  (git-fixes CVE-2022-49836 bsc#1242355).\n- Update\n  patches.suse/tracing-Do-not-let-histogram-values-have-some-modifiers.patch\n  (git-fixes CVE-2023-53093 bsc#1242279).\n- Update\n  patches.suse/tracing-Fix-memory-leak-in-test_gen_synth_cmd-and-test_empty_synth_event.patch\n  (git-fixes CVE-2022-49800 bsc#1242265).\n- Update\n  patches.suse/tracing-Fix-memory-leak-in-tracing_read_pipe.patch\n  (git-fixes CVE-2022-49801 bsc#1242338).\n- Update\n  patches.suse/tracing-Fix-wild-memory-access-in-register_synth_event.patch\n  (git-fixes CVE-2022-49799 bsc#1242264).\n- Update\n  patches.suse/tracing-kprobe-Fix-memory-leak-in-test_gen_kprobe-kretprobe_cmd.patch\n  (git-fixes CVE-2022-49891 bsc#1242456).\n- Update\n  patches.suse/tracing-kprobe-Fix-potential-null-ptr-deref-on-trace_array-in-kprobe_event_gen_test_exit.patch\n  (git-fixes CVE-2022-49796 bsc#1242305).\n- Update\n  patches.suse/tracing-kprobe-Fix-potential-null-ptr-deref-on-trace_event_file-in-kprobe_event_gen_test_exit.patch\n  (git-fixes CVE-2022-49797 bsc#1242320).\n- Update\n  patches.suse/udf-Fix-a-slab-out-of-bounds-write-bug-in-udf_find_e.patch\n  (bsc#1206649 CVE-2022-49846 bsc#1242716).\n- Update\n  patches.suse/usb-dwc2-fix-a-devres-leak-in-hw_enable-upon-suspend.patch\n  (git-fixes CVE-2023-53054 bsc#1242226).\n- Update\n  patches.suse/usb-gadget-u_audio-don-t-let-userspace-block-driver-.patch\n  (git-fixes CVE-2023-53045 bsc#1242756).\n- Update\n  patches.suse/usb-ucsi-Fix-NULL-pointer-deref-in-ucsi_connector_ch.patch\n  (git-fixes CVE-2023-53049 bsc#1242244).\n- Update\n  patches.suse/wifi-cfg80211-fix-memory-leak-in-query_regdb_file.patch\n  (git-fixes CVE-2022-49881 bsc#1242481).\n- Update\n  patches.suse/x86-fpu-Drop-fpregs-lock-before-inheriting-FPU-permissions.patch\n  (bnc#1205282 CVE-2022-49783 bsc#1242312).\n- commit b466a4e\n\n- arm64: proton-pack: Add new CPUs 'k' values for branch\n  mitigation (bsc#1242778).\n- commit 9eea847\n\n- arm64: bpf: Only mitigate cBPF programs loaded by unprivileged\n  users (bsc#1242778).\n- commit 8fea3ff\n\n- arm64: bpf: Add BHB mitigation to the epilogue for cBPF programs\n  (bsc#1242778).\n- commit 40fcf50\n\n- arm64: proton-pack: Expose whether the branchy loop k value\n  (bsc#1242778).\n- commit ec2de57\n\n- arm64: proton-pack: Expose whether the platform is mitigated\n  by firmware (bsc#1242778).\n- arm64: insn: Add support for encoding DSB (bsc#1242778).\n- commit ae7bc9f\n\n- Refresh patches.kabi/kabi-allow-extra-bugints.patch.\n- commit 335bd7e\n\n- net_sched: sch_sfq: move the limit validation (CVE-2025-37752 bsc#1242504)\n- commit 875a484\n\n- Fix reference in \u0026quot;net_sched: sch_sfq: use a temporary work area for validating configuration\u0026quot; (bsc#1242504)\n- net_sched: sch_sfq: use a temporary work area for validating configuration (bsc#1232504)\n- commit e3d5b43\n\n- hv_netvsc: Remove rmsg_pgcnt (bsc#1243737).\n- hv_netvsc: Preserve contiguous PFN grouping in the page buffer array (bsc#1243737).\n- hv_netvsc: Use vmbus_sendpacket_mpb_desc() to send VMBus messages (bsc#1243737).\n- Drivers: hv: Allow vmbus_sendpacket_mpb_desc() to create multiple ranges (bsc#1243737).\n- scsi: storvsc: Set correct data length for sending SCSI command without payload (git-fixes).\n- commit 19dfad0\n\n- Remove debug flavor (bsc#1243919).\n  This is only released in Leap, and we don't have Leap 15.4 anymore.\n- commit 30c990a\n\n- rpm/check-for-config-changes: add more to IGNORED_CONFIGS_RE\n  Useful when someone tries (needs) to build the kernel with clang.\n- commit 06918e3\n\n- Refresh fixes for cBPF issue (bsc#1242778)\n- Update metadata and put them into the sorted part of the series\n- Refresh\n  patches.suse/x86-bhi-do-not-set-BHI_DIS_S-in-32-bit-mode.patch.\n- Refresh\n  patches.suse/x86-bpf-add-IBHF-call-at-end-of-classic-BPF.patch.\n- Refresh\n  patches.suse/x86-bpf-call-branch-history-clearing-sequence-on-exit.patch.\n- commit 46d2b60\n\n- mptcp: fix NULL pointer in can_accept_new_subflow\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: relax check on MPC passive fallback (CVE-2025-23145\n  bsc#1242596).\n- mptcp: refine opt_mp_capable determination (CVE-2025-23145\n  bsc#1242596).\n- mptcp: use OPTION_MPTCP_MPJ_SYN in subflow_check_req()\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: use OPTION_MPTCP_MPJ_SYNACK in subflow_finish_connect()\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: strict validation before using mp_opt-\u0026gt;hmac\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: mptcp_parse_option() fix for MPTCPOPT_MP_JOIN\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: Fix duplicated argument in protocol.h (CVE-2025-23145\n  bsc#1242596).\n- mptcp: consolidate in_opt sub-options fields in a bitmask\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: better binary layout for mptcp_options_received\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: do not set unconditionally csum_reqd on incoming opt\n  (CVE-2025-23145 bsc#1242596).\n- commit 3eef261\n\n- RDMA/mlx5: Fix a WARN during dereg_mr for DM type (CVE-2025-21888 bsc#1240177)\n- commit a053ba8\n\n- net: make sock_inuse_add() available (CVE-2024-53168\n  bsc#1234887).\n- commit a64cc81\n\n- sunrpc: fix one UAF issue caused by sunrpc kernel tcp socket\n  (CVE-2024-53168 bsc#1234887).\n- commit 2087675\n\n- Refresh patches.kabi/kabi-allow-extra-bugints.patch.\n- commit ba9a618\n\n- mtd: phram: Add the kernel lock down check (bsc#1232649).\n- commit af6a7f8\n\n- Refresh\n  patches.suse/ACPI-processor-idle-return-an-error-if-both-P_LVL-2-.patch.\n  The patch has meanwhile been merged upstream. Add it to the sorted section.\n- commit 2243312\n\n- nfsd: make sure exp active before svc_export_show\n  (CVE-2024-56558 bsc#1235100).\n- commit 3fbc559\n\n- netfilter: nft_tunnel: fix geneve_opt type confusion addition\n  (CVE-2025-22056 bsc#1241525).\n- commit ead34ea\n\n- net: mvpp2: Prevent parser TCAM memory corruption\n  (CVE-2025-22060 bsc#1241526).\n- net: mvpp2: parser fix QinQ (CVE-2025-22060 bsc#1241526).\n- commit d211f59\n\n- scsi: core: Fix unremoved procfs host directory regression\n  (git-fixes).\n- commit fcdce73\n\n- tcp: cdg: allow tcp_cdg_release() to be called multiple times (CVE-2022-49775 bsc#1242245)\n- commit 1480658\n\n- rpm: Stop using is_kotd_qa macro\n  This macro is set by bs-upload-kernel, and a conditional in each spec\n  file is used to determine when to build the spec file.\n  This logic should not really be in the spec file. Previously this was\n  done with package links and package meta for the individula links.\n  However, the use of package links is rejected for packages in git based\n  release projects (nothing to do with git actually, new policy). An\n  alternative to package links is multibuild. However, for multibuild\n  packages package meta cannot be used to set which spec file gets built.\n  Use prjcon buildflags instead, and remove this conditional. Depends on\n  bs-upload-kernel adding the build flag.\n- commit 9eb8a6f\n\n- kernel-obs-qa: Use srchash for dependency as well\n- commit 485ae1d\n\n- ocfs2: fix the issue with discontiguous allocation in the\n  global_bitmap (git-fixes).\n- commit 1773903\n\n- Update\n  patches.suse/scsi-core-Fix-a-procfs-host-directory-removal-regression.patch\n  (git-fixes CVE-2023-53118 bsc#1242365).\n  updated meta-data, adding new CVE and bug references\n- commit 87fcd7f\n\n- proc: fix UAF in proc_get_inode() (bsc#1240802 CVE-2025-21999).\n- commit 8fb7944\n\n- net: openvswitch: fix nested key length validation in the set()\n  action (CVE-2025-37789 bsc#1242762).\n- commit 52f7543\n\n- check-for-config-changes: Fix flag name typo\n- commit 1046b16\n\n- netfilter: conntrack: revisit the gc initial rescheduling bias\n  (CVE-2022-49110 bsc#1237981).\n- commit 7e1d902\n\n- netfilter: conntrack: fix the gc rescheduling delay\n  (CVE-2022-49110 bsc#1237981).\n- commit 9cc8bdd\n\n- netfilter: conntrack: revisit gc autotuning (CVE-2022-49110\n  bsc#1237981).\n- commit da48bfa\n\n- Bluetooth: fix null ptr deref on hci_sync_conn_complete_evt\n  (bsc#1238032 CVE-2022-49139).\n- commit 2031355\n\n- watch_queue: fix pipe accounting mismatch (CVE-2025-23138 bsc#1241648).\n- commit 789ef85\n\n- 9p/trans_fd: always use O_NONBLOCK read/write (CVE-2022-49767 bsc#1242493).\n- commit 9dce75d\n\n- Update\n  patches.suse/dm-crypt-add-cond_resched-to-dmcrypt_write-fb29.patch\n  (git-fixes CVE-2023-53051 bsc#1242284).\n- commit 33b6152\n\n- x86/bhi: Do not set BHI_DIS_S in 32-bit mode (bsc#1242778).\n- x86/bpf: Add IBHF call at end of classic BPF (bsc#1242778).\n- x86/bpf: Call branch history clearing sequence on exit\n  (bsc#1242778).\n- commit bcd2c85\n\nPackage libarchive was updated:\n\n- Fix CVE-2025-5918, reading past EOF may be triggered for piped file streams  (CVE-2025-5918, bsc#1244279)\n  * CVE-2025-5918.patch\n- Fix CVE-2025-5917, off by one error in build_ustar_entry_name() at archive_write_set_format_pax.c\n  (CVE-2025-5917, bsc#1244336)\n  * CVE-2025-5917.patch\n- Fix CVE-2025-5916, integer overflow while reading warc files at archive_read_support_format_warc.c\n  (CVE-2025-5916, bsc#1244270)\n  * CVE-2025-5916.patch\n- Fix CVE-2025-5915, heap buffer over read in copy_from_lzss_window() at archive_read_support_format_rar.c\n  (CVE-2025-5915, bsc#1244273)\n  * CVE-2025-5915.patch\n- Fix CVE-2025-5914, double free due to an integer overflow in the archive_read_format_rar_seek_data() function\n  (CVE-2025-5914, bsc#1244272)\n  * CVE-2025-5914.patch\n\nPackage gcc14 was updated:\n\n- Exclude shared objects present for link editing in the GCC specific  subdirectory from provides processing via __provides_exclude_from.\n  [bsc#1244050][bsc#1243991]\n\n- Make cross-*-gcc14-bootstrap package conflict with the non-bootstrap\n  variant conflict with the unversioned cross-*-gcc package.\n\n- Disable build of glibc cross to loongarch64 and hppa in SLFO\n  and SLE15.\n\n- Update to GCC 14.3 release, bb24b4c804f3d95b0ba95b7496, git11799\n- Remove gcc14-pr120061.patch which is now included upstream.\n\n- Add gcc14-pr120061.patch to fix the PR108900 fix instead of\n  reverting it.\n- Remove gcc14-pr108900.patch\n\n- Add gcc14-pr108900.patch to revert it, fixing libqt6webengine build.\n\n- Update to gcc-14 branch head, 3418d740b344e0ba38022f3be, git11702\n  * Remove gcc14-pr118780.patch now on the upstream branch\n- Fix build on s390x [bsc#1241549]\n\n- Make sure link editing is done against our own shared library\n  copy rather than the installed system runtime.  [bsc#1240788]\n- Add gcc14-pr119680.patch to fix cross-compiler builds with\n  - -enable-host-pie.\n\nPackage mozilla-nss was updated:\n\n- update to NSS 3.112  * bmo#1963792 - Fix alias for mac workers on try\n  * bmo#1966786 - ensure all options can be configured with SSL_OptionSet and SSL_OptionSetDefault\n  * bmo#1931930 - ABI/API break in ssl certificate processing\n  * bmo#1955971 - remove unnecessary assertion in sec_asn1d_init_state_based_on_template\n  * bmo#1965754 - update taskgraph to v14.2.1\n  * bmo#1964358 - Workflow for automation of the release on GitHub when pushing a tag\n  * bmo#1952860 - fix faulty assertions in SEC_ASN1DecoderUpdate\n  * bmo#1934877 - Renegotiations should use a fresh ECH GREASE buffer\n  * bmo#1951396 - update taskgraph to v14.1.1\n  * bmo#1962503 - Partial fix for ACVP build CI job\n  * bmo#1961827 - Initialize find in sftk_searchDatabase\n  * bmo#1963121 - Add clang-18 to extra builds\n  * bmo#1963044 - Fault tolerant git fetch for fuzzing\n  * bmo#1962556 - Tolerate intermittent failures in ssl_policy_pkix_ocsp\n  * bmo#1962770 - fix compiler warnings when DEBUG_ASN1D_STATES or CMSDEBUG are set\n  * bmo#1961835 - fix content type tag check in NSS_CMSMessage_ContainsCertsOrCrls\n  * bmo#1963102 - Remove Cryptofuzz CI version check\n\n- update to NSS 3.111\n  * bmo#1930806 - FIPS changes need to be upstreamed: force ems policy\n  * bmo#1957685 - Turn off Websites Trust Bit from CAs\n  * bmo#1937338 - Update nssckbi version following April 2025 Batch of Changes\n  * bmo#1943135 - Disable SMIME âtrust bitâ for GoDaddy CAs\n  * bmo#1874383 - Replaced deprecated sprintf function with snprintf in dbtool.c\n  * bmo#1954612 - Need up update NSS for PKCS 3.1\n  * bmo#1773374 - avoid leaking localCert if it is already set in ssl3_FillInCachedSID\n  * bmo#1953097 - Decrease ASAN quarantine size for Cryptofuzz in CI\n  * bmo#1943962 - selfserv: Add support for zlib certificate compression\n\n- update to NSS 3.110\n  * bmo#1930806 - FIPS changes need to be upstreamed: force ems policy\n  * bmo#1954724 - Prevent excess allocations in sslBuffer_Grow\n  * bmo#1953429 - Remove Crl templates from ASN1 fuzz target\n  * bmo#1953429 - Remove CERT_CrlTemplate from ASN1 fuzz target\n  * bmo#1952855 - Fix memory leak in NSS_CMSMessage_IsSigned\n  * bmo#1930807 - NSS policy updates\n  * bmo#1951161 - Improve locking in nssPKIObject_GetInstances\n  * bmo#1951394 - Fix race in sdb_GetMetaData\n  * bmo#1951800 - Fix member access within null pointer\n  * bmo#1950077 - Increase smime fuzzer memory limit\n  * bmo#1949677 - Enable resumption when using custom extensions\n  * bmo#1952568 - change CN of server12 test certificate\n  * bmo#1949118 - Part 2: Add missing check in\n    NSS_CMSDigestContext_FinishSingle\n  * bmo#1949118 - Part 1: Fix smime UBSan errors\n  * bmo#1930806 - FIPS changes need to be upstreamed: updated key checks\n  * bmo#1951491 - Don't build libpkix in static builds\n  * bmo#1951395 - handle `-p all` in try syntax\n  * bmo#1951346 - fix opt-make builds to actually be opt\n  * bmo#1951346 - fix opt-static builds to actually be opt\n  * bmo#1916439 - Remove extraneous assert\n- Removed upstreamed nss-fips-stricter-dh.patch\n- Added bmo1962556.patch to fix test failures\n- Rebased nss-fips-approved-crypto-non-ec.patch nss-fips-combined-hash-sign-dsa-ecdsa.patch\n- update to NSS 3.109\n  * bmo#1939512 - Call BL_Init before RNG_RNGInit() so that special\n    SHA instructions can be used if available\n  * bmo#1930807 - NSS policy updates - fix inaccurate key policy issues\n  * bmo#1945883 - SMIME fuzz target\n  * bmo#1914256 - ASN1 decoder fuzz target\n  * bmo#1936001 - Part 2: Revert âExtract testcases from ssl gtests\n    for fuzzingâ\n  * bmo#1915155 - Add fuzz/README.md\n  * bmo#1936001 - Part 4: Fix tstclnt arguments script\n  * bmo#1944545 - Extend pkcs7 fuzz target\n  * bmo#1912320 - Extend certDN fuzz target\n  * bmo#1944300 - revert changes to HACL* files from bug 1866841\n  * bmo#1936001 - Part 3: Package frida corpus script\n- update to NSS 3.108\n  * bmo#1923285 - libclang-16 -\u0026gt; libclang-19\n  * bmo#1939086 - Turn off Secure Email Trust Bit for Security\n    Communication ECC RootCA1\n  * bmo#1937332 - Turn off Secure Email Trust Bit for BJCA Global Root\n    CA1 and BJCA Global Root CA2\n  * bmo#1915902 - Remove SwissSign Silver CA â G2\n  * bmo#1938245 - Add D-Trust 2023 TLS Roots to NSS\n  * bmo#1942301 - fix fips test failure on windows\n  * bmo#1935925 - change default sensitivity of KEM keys\n  * bmo#1936001 - Part 1: Introduce frida hooks and script\n  * bmo#1942350 - add missing arm_neon.h include to gcm.c\n  * bmo#1831552 - ci: update windows workers to win2022\n  * bmo#1831552 - strip trailing carriage returns in tools tests\n  * bmo#1880256 - work around unix/windows path translation issues\n    in cert test script\n  * bmo#1831552 - ci: let the windows setup script work without $m\n  * bmo#1880255 - detect msys\n  * bmo#1936680 - add a specialized CTR_Update variant for AES-GCM\n  * bmo#1930807 - NSS policy updates\n  * bmo#1930806 - FIPS changes need to be upstreamed: FIPS 140-3 RNG\n  * bmo#1930806 - FIPS changes need to be upstreamed: Add SafeZero\n  * bmo#1930806 - FIPS changes need to be upstreamed - updated POST\n  * bmo#1933031 - Segmentation fault in SECITEM_Hash during pkcs12 processing\n  * bmo#1929922 - Extending NSS with LoadModuleFromFunction functionality\n  * bmo#1935984 - Ensure zero-initialization of collectArgs.cert\n  * bmo#1934526 - pkcs7 fuzz target use CERT_DestroyCertificate\n  * bmo#1915898 - Fix actual underlying ODR violations issue\n  * bmo#1184059 - mozilla::pkix: allow reference ID labels to begin\n    and/or end with hyphens\n  * bmo#1927953 - don't look for secmod.db in nssutil_ReadSecmodDB if\n    NSS_DISABLE_DBM is set\n  * bmo#1934526 - Fix memory leak in pkcs7 fuzz target\n  * bmo#1934529 - Set -O2 for ASan builds in CI\n  * bmo#1934543 - Change branch of tlsfuzzer dependency\n  * bmo#1915898 - Run tests in CI for ASan builds with detect_odr_violation=1\n  * bmo#1934241 - Fix coverage failure in CI\n  * bmo#1934213 - Add fuzzing for delegated credentials, DTLS short\n    header and Tls13BackendEch\n  * bmo#1927142 - Add fuzzing for SSL_EnableTls13GreaseEch and\n    SSL_SetDtls13VersionWorkaround\n  * bmo#1913677 - Part 3: Restructure fuzz/\n  * bmo#1931925 - Extract testcases from ssl gtests for fuzzing\n  * bmo#1923037 - Force Cryptofuzz to use NSS in CI\n  * bmo#1923037 - Fix Cryptofuzz on 32 bit in CI\n  * bmo#1933154 - Update Cryptofuzz repository link\n  * bmo#1926256 - fix build error from 9505f79d\n  * bmo#1926256 - simplify error handling in get_token_objects_for_cache\n  * bmo#1931973 - nss doc: fix a warning\n  * bmo#1930797 - pkcs12 fixes from RHEL need to be picked up\n- remove obsolete patches\n  * nss-fips-safe-memset.patch\n  * nss-bmo1930797.patch\n- update to NSS 3.107\n  * bmo#1923038 - Remove MPI fuzz targets.\n  * bmo#1925512 - Remove globals `lockStatus` and `locksEverDisabled`.\n  * bmo#1919015 - Enable PKCS8 fuzz target.\n  * bmo#1923037 - Integrate Cryptofuzz in CI.\n  * bmo#1913677 - Part 2: Set tls server target socket options in config class\n  * bmo#1913677 - Part 1: Set tls client target socket options in config class\n  * bmo#1913680 - Support building with thread sanitizer.\n  * bmo#1922392 - set nssckbi version number to 2.72.\n  * bmo#1919913 - remove Websites Trust Bit from Entrust Root\n    Certification Authority - G4.\n  * bmo#1920641 - remove Security Communication RootCA3 root cert.\n  * bmo#1918559 - remove SecureSign RootCA11 root cert.\n  * bmo#1922387 - Add distrust-after for TLS to Entrust Roots.\n  * bmo#1927096 - update expected error code in pk12util pbmac1 tests.\n  * bmo#1929041 - Use random tstclnt args with handshake collection script\n  * bmo#1920466 - Remove extraneous assert in ssl3gthr.c.\n  * bmo#1928402 - Adding missing release notes for NSS_3_105.\n  * bmo#1874451 - Enable the disabled mlkem tests for dtls.\n  * bmo#1874451 - NSS gtests filter cleans up the constucted buffer\n    before the use.\n  * bmo#1925505 - Make ssl_SetDefaultsFromEnvironment thread-safe.\n  * bmo#1925503 - Remove short circuit test from ssl_Init.\n- fix build on loongarch64 (setting it as 64bit arch)\n- Remove upstreamed bmo-1400603.patch\n- Added nss-bmo1930797.patch to fix failing tests in testsuite\n- update to NSS 3.106\n  * bmo#1925975 - NSS 3.106 should be distributed with NSPR 4.36.\n  * bmo#1923767 - pk12util: improve error handling in p12U_ReadPKCS12File.\n  * bmo#1899402 - Correctly destroy bulkkey in error scenario.\n  * bmo#1919997 - PKCS7 fuzz target, r=djackson,nss-reviewers.\n  * bmo#1923002 - Extract certificates with handshake collection script.\n  * bmo#1923006 - Specify len_control for fuzz targets.\n  * bmo#1923280 - Fix memory leak in dumpCertificatePEM.\n  * bmo#1102981 - Fix UBSan errors for SECU_PrintCertificate and\n    SECU_PrintCertificateBasicInfo.\n  * bmo#1921528 - add new error codes to mozilla::pkix for Firefox to use.\n  * bmo#1921768 - allow null phKey in NSC_DeriveKey.\n  * bmo#1921801 - Only create seed corpus zip from existing corpus.\n  * bmo#1826035 - Use explicit allowlist for for KDF PRFS.\n  * bmo#1920138 - Increase optimization level for fuzz builds.\n  * bmo#1920470 - Remove incorrect assert.\n  * bmo#1914870 - Use libFuzzer options from fuzz/options/\\*.options in CI.\n  * bmo#1920945 - Polish corpus collection for automation.\n  * bmo#1917572 - Detect new and unfuzzed SSL options.\n  * bmo#1804646 - PKCS12 fuzzing target.\n- requires NSPR 4.36\n- update to NSS 3.105\n  * bmo#1915792 - Allow importing PKCS#8 private EC keys missing public key\n  * bmo#1909768 - UBSAN fix: applying zero offset to null pointer in sslsnce.c\n  * bmo#1919577 - set KRML_MUSTINLINE=inline in makefile builds\n  * bmo#1918965 - Don't set CKA_SIGN for CKK_EC_MONTGOMERY private keys\n  * bmo#1918767 - override default definition of KRML_MUSTINLINE\n  * bmo#1916525 - libssl support for mlkem768x25519\n  * bmo#1916524 - support for ML-KEM-768 in softoken and pk11wrap\n  * bmo#1866841 - Add Libcrux implementation of ML-KEM 768 to FreeBL\n  * bmo#1911912 - Avoid misuse of ctype(3) functions\n  * bmo#1917311 - part 2: run clang-format\n  * bmo#1917311 - part 1: upgrade to clang-format 13\n  * bmo#1916953 - clang-format fuzz\n  * bmo#1910370 - DTLS client message buffer may not empty be on retransmit\n  * bmo#1916413 - Optionally print config for TLS client and server\n    fuzz target\n  * bmo#1916059 - Fix some simple documentation issues in NSS.\n  * bmo#1915439 - improve performance of NSC_FindObjectsInit when\n    template has CKA_TOKEN attr\n  * bmo#1912828 - define CKM_NSS_ECDHE_NO_PAIRWISE_CHECK_KEY_PAIR_GEN\n- Fix build error under Leap by rebasing nss-fips-safe-memset.patch.\n- update to NSS 3.104\n  * bmo#1910071 - Copy original corpus to heap-allocated buffer\n  * bmo#1910079 - Fix min ssl version for DTLS client fuzzer\n  * bmo#1908990 - Remove OS2 support just like we did on NSPR\n  * bmo#1910605 - clang-format NSS improvements\n  * bmo#1902078 - Adding basicutil.h to use HexString2SECItem function\n  * bmo#1908990 - removing dirent.c from build\n  * bmo#1902078 - Allow handing in keymaterial to shlibsign to make\n    the output reproducible\n  * bmo#1908990 - remove nec4.3, sunos4, riscos and SNI references\n  * bmo#1908990 - remove other old OS (BSDI, old HP UX, NCR,\n    openunix, sco, unixware or reliantUnix\n  * bmo#1908990 - remove mentions of WIN95\n  * bmo#1908990 - remove mentions of WIN16\n  * bmo#1913750 - More explicit directory naming\n  * bmo#1913755 - Add more options to TLS server fuzz target\n  * bmo#1913675 - Add more options to TLS client fuzz target\n  * bmo#1835240 - Use OSS-Fuzz corpus in NSS CI\n  * bmo#1908012 - set nssckbi version number to 2.70.\n  * bmo#1914499 - Remove Email Trust bit from ACCVRAIZ1 root cert.\n  * bmo#1908009 - Remove Email Trust bit from certSIGN ROOT CA.\n  * bmo#1908006 - Add Cybertrust Japan Roots to NSS.\n  * bmo#1908004 - Add Taiwan CA Roots to NSS.\n  * bmo#1911354 - remove search by decoded serial in\n    nssToken_FindCertificateByIssuerAndSerialNumber\n  * bmo#1913132 - Fix tstclnt CI build failure\n  * bmo#1913047 - vfyserv: ensure peer cert chain is in db for\n    CERT_VerifyCertificateNow\n  * bmo#1912427 - Enable all supported protocol versions for UDP\n  * bmo#1910361 - Actually use random PSK hash type\n  * bmo#1911576 - Initialize NSS DB once\n  * bmo#1910361 - Additional ECH cipher suites and PSK hash types\n  * bmo#1903604 - Automate corpus file generation for TLS client Fuzzer\n  * bmo#1910364 - Fix crash with UNSAFE_FUZZER_MODE\n  * bmo#1910605 - clang-format shlibsign.c\n- remove obsolete nss-reproducible-builds.patch\n- update to NSS 3.103\n  * bmo#1908623 - move list size check after lock acquisition in sftk_PutObjectToList.\n  * bmo#1899542 - Add fuzzing support for SSL_ENABLE_POST_HANDSHAKE_AUTH,\n  * bmo#1909638 - Follow-up to fix test for presence of file nspr.patch.\n  * bmo#1903783 - Adjust libFuzzer size limits\n  * bmo#1899542 - Add fuzzing support for SSL_SetCertificateCompressionAlgorithm,\n    SSL_SetClientEchConfigs, SSL_VersionRangeSet and SSL_AddExternalPsk\n  * bmo#1899542 - Add fuzzing support for SSL_ENABLE_GREASE and\n    SSL_ENABLE_CH_EXTENSION_PERMUTATION\n- Add nss-reproducible-builds.patch to make the rpms reproducible,\n  by using a hardcoded, static key to generate the checksums (*.chk-files)\n- Updated nss-fips-approved-crypto-non-ec.patch to enforce\n  approved curves with the CKK_EC_MONTGOMERY key type (bsc#1224113).\n- update to NSS 3.102.1\n  * bmo#1905691 - ChaChaXor to return after the function\n- update to NSS 3.102\n  * bmo#1880351 - Add Valgrind annotations to freebl Chacha20-Poly1305.\n  * bmo#1901932 - missing sqlite header.\n  * bmo#1901080 - GLOBALTRUST 2020: Set Distrust After for TLS and S/MIME.\n  * bmo#1615298 - improve certutil keyUsage, extKeyUsage, and nsCertType keyword handling.\n  * bmo#1660676 - correct length of raw SPKI data before printing in pp utility.\n\n- Add nss-reproducible-chksums.patch to make NSS-build reproducible\n  Use key from openssl (bsc#1081723)\n\n- Updated nss-fips-approved-crypto-non-ec.patch to exclude the\n  SHA-1 hash from SLI approval.\n\nPackage libgcrypt was updated:\n\n- Security fix [bsc#1221107, CVE-2024-2236]  * Add --enable-marvin-workaround to spec to enable workaround\n  * Fix  timing based side-channel in RSA implementation ( Marvin attack )\n  * Add libgcrypt-CVE-2024-2236_01.patch\n  * Add libgcrypt-CVE-2024-2236_02.patch\n  * Add libgcrypt-CVE-2024-2236_03.patch\n\nPackage gnutls was updated:\n\n- Fix heap buffer overread when handling the CT SCT extension during X.509  certificate parsing [bsc#1246233, CVE-2025-32989]\n  * Add patch gnutls-CVE-2025-32989.patch\n- Fix double-free due to incorrect ownership handling in the export logic of\n  SAN entries containing an otherName [bsc#1246232, CVE-2025-32988]\n  * Add patch gnutls-CVE-2025-32988.patch\n- Fix 1-byte heap buffer overflow when parsing templates with certtool\n  [bsc#1246267, CVE-2025-32990]\n  * Add patch gnutls-CVE-2025-32990.patch\n- Fix NULL pointer dereference when 2nd Client Hello omits PSK\n  [bsc#1246299, CVE-2025-6395]\n  * Add patch gnutls-CVE-2025-6395.patch\n\nPackage icu was updated:\n\n- Add icu-CVE-2025-5222.patch:  Backport 2c667e3 from upstream, ICU-22973 Fix buffer overflow by\n  using CharString.\n  (CVE-2025-5222, bsc#1243721)\n\nPackage openssl-1_1 was updated:\n\n- FIPS: Use the NID_X9_62_prime256v1 curve in ECDSA KAT test  instead of NID_secp256k1. [bsc#1246697]\n  * Add openssl-fips-ECDSA-KAT.patch\n\nPackage polkit was updated:\n\n- CVE-2025-7519: Fixed that a XML policy file with a large number of  nested elements may lead to out-of-bounds write (bsc#1246472)\n  added 0001-Nested-.policy-files-cause-xml-parsing-overflow-lead.patch\n\nPackage python3 was updated:\n\n- Add CVE-2025-8194-tarfile-no-neg-offsets.patch which now  validates archives to ensure member offsets are non-negative\n  (gh#python/cpython#130577, CVE-2025-8194, bsc#1247249).\n\n- Add CVE-2025-4435-normalize-lnk-trgts-tarfile.patch\n  Security fixes for CVE-2025-4517, CVE-2025-4330, CVE-2025-4138,\n  CVE-2024-12718, CVE-2025-4435 on tarfile (bsc#1244032,\n  bsc#1244061, bsc#1244059, bsc#1244060, bsc#1244056).\n  The backported fixes do not contain changes for ntpath.py and\n  related tests, because the support for symlinks and junctions\n  were added later in Python 3.9, and it does not make sense to\n  backport them to 3.6 here.\n  The patch is contains the following changes:\n  - python@42deeab fixes symlink handling for tarfile.data_filter\n  - python@9d2c2a8 fixes handling of existing files/symlinks in tarfile\n  - python@00af979 adds a new \u0026quot;strict\u0026quot; argument to realpath()\n  - python@dd8f187 fixes mulriple CVE fixes in the tarfile module\n  - downstream only fixes that makes the changes work and\n    compatible with Python 3.6\n- Add CVE-2025-6069-quad-complex-HTMLParser.patch to avoid worst\n  case quadratic complexity when processing certain crafted\n  malformed inputs with HTMLParser (CVE-2025-6069, bsc#1244705).\n\n- Add python36-* provides/obsoletes to enable SLE-12 -\u0026gt; SLE-15\n  migration, bsc#1233012\n\n- Add ipaddress-update-pr60.patch from gh#phihag/ipaddress!60 to\n  update vendored ipaddress module to 3.8 equivalent\n- Add gh-128840_parse-IPv6-with-emb-IPv4.patch to limit buffer\n  size for IPv6 address parsing (gh#python/cpython#128840,\n  bsc#1244401).\n- Update CVE-2025-4516-DecodeError-handler.patch not to break\n  _PyBytes_DecodeEscape signature.\n\n- Add CVE-2025-4516-DecodeError-handler.patch fixing\n  CVE-2025-4516 (bsc#1243273) blocking DecodeError handling\n  vulnerability, which could lead to DoS.\n\nPackage ruby2.5 was updated:\n\n- update suse.patch to 3f3682bf07fcd4f2fa875958853d3843ee7dcdb9  - fix remote DoS via YAML manifest\n    bsc#1225905 CVE-2024-35221\n\n- update suse.patch to c76fb820676cfded16c697a62281a3bfeb8e4bb1\n  - fix webrick: Ruby WEBrick read_header HTTP Request Smuggling Vulnerability\n    bsc#1245254 CVE-2025-6442\n\n- update suse.patch to 5d79fc609c5761864aec47e1ae4796b93db99104\n  - fix ruby: userinfo leakage in URI#join, URI#merge and URI#+\n    bsc#1237805 CVE-2025-27221\n\nPackage libsolv was updated:\n\n- add support for product-obsoletes() provides in the product  autopackage generation code\n- bump version to 0.7.34\n\n- improve transaction ordering by allowing more uninst-\u0026gt;uninst\n  edges [bsc#1243457]\n- implement color filtering when adding update targets\n- support orderwithrequires dependencies in susedata.xml\n- bump version to 0.7.33\n\nPackage sqlite3 was updated:\n\n- Backpatch the URLs in sqlite3.n from https to http to avoid a  file conflict with the tcl package on SLE-15-GA up to SP2. In\n  SP3 and onwards the Tcl package does not contain the sqlite\n  extension anymore.\n\n- Sync version 3.50.2 from Factory:\n  * CVE-2025-6965, bsc#1246597:\n    Raise an error early if the number of aggregate terms in a\n    query exceeds the maximum number of columns, to avoid\n    downstream assertion faults.\n  * Add subpackage for the lemon parser generator.\n    + sqlite-3.49.0-fix-lemon-missing-cflags.patch\n    + sqlite-3.6.23-lemon-system-template.patch\n\nPackage libssh was updated:\n\n- Fix CVE-2025-5318: Likely read beyond bounds in sftp server handle management (bsc#1245311)  * Add patch libssh-CVE-2025-5318.patch\n- Fix CVE-2025-4877: Write beyond bounds in binary to base64 conversion functions (bsc#1245309)\n  * Add patch libssh-CVE-2025-4877.patch\n- Fix CVE-2025-4878: Use of uninitialized variable in privatekey_from_file() (bsc#1245310)\n  * Add patches:\n  - libssh-CVE-2025-4878-1.patch\n  - libssh-CVE-2025-4878-2.patch\n- Fix CVE-2025-5372: ssh_kdf() returns a success code on certain failures (bsc#1245314)\n  * Add patch libssh-CVE-2025-5372.patch\n\nPackage systemd was updated:\n\n- Start the systemd-coredump.socket unit on systemd-coredump package  installation.\n- Restore the kernel default values of the coredump sysctl settings on\n  systemd-coredump package removal.\n\n- Import commit 6b9681f9bb313728baa3ff0c16814eb33516cd54\n  a474df9866 coredump: get rid of a bogus assertion\n  d4546562f8 coredump: use %d in kernel core pattern (bsc#1243935 CVE-2025-4598)\n  a5784c2856 coredump: get rid of _META_MANDATORY_MAX\n  dbaa7bc4bd coredump: restore compatibility with older patterns\n  32b6cd311f basic/macro: add macro to iterate variadic args\n\n- Apply coredump sysctl settings on systemd-coredump updates/removals\n\nPackage tiff was updated:\n\n- security update:  * CVE-2025-8176 [bsc#1247108]\n    Fix heap use-after-free in tools/tiffmedian.c\n    + tiff-CVE-2025-8176.patch\n  * CVE-2025-8177 [bsc#1247106]\n    Fix possible buffer overflow in tools/thumbnail.c:setrow()\n    + tiff-CVE-2025-8177.patch\n\nPackage libxml2 was updated:\n\n- security update- added patches\n  CVE-2025-7425 [bsc#1246296], Heap Use-After-Free in libxslt caused by atype corruption in xmlAttrPtr\n  + libxml2-CVE-2025-7425.patch\n\n- security update\n- added patches\n  CVE-2025-49794 [bsc#1244554], heap use after free (UAF) can lead to Denial of service (DoS)\n  CVE-2025-49796 [bsc#1244557], type confusion may lead to Denial of service (DoS)\n  + libxml2-CVE-2025-49794,49796.patch\n\n- security update\n- added patches\n  CVE-2025-6170 [bsc#1244700], stack buffer overflow may lead to a crash\n  CVE-2025-6021 [bsc#1244580], Integer Overflow in xmlBuildQName() Leads to Stack Buffer Overflow in libxml2\n  + libxml2-CVE-2025-6170,6021.patch\n\nPackage libzypp was updated:\n\n- Fix evaluation of libproxy results (bsc#1247690)- Replace URL variables inside mirrorlist/metalink files\n  (fixes #667)\n- version 17.37.16 (35)\n\n- Append RepoInfo::path() to the mirror URLs in Preloader\n  (bsc#1247054)\n- version 17.37.15 (35)\n\n- During installation indicate the backend being used (bsc#1246038)\n  If some package actually needs to know, it should test for\n  ZYPP_CLASSIC_RPMTRANS being set in the environment.\n  Otherwise the transaction is driven by librpm.\n- version 17.37.14 (35)\n\n- Workaround 'rpm -vv' leaving scriptlets /var/tmp (bsc#1218459)\n- Verbose log libproxy results if PX_DEBUG=1 is set.\n- BuildRequires:  cmake \u0026gt;= 3.17.\n- version 17.37.13 (35)\n\n- Allow explicit request to probe an added repo's URL\n  (bsc#1246466)\n- Fix tests with -DISABLE_MEDIABACKEND_TESTS=1 (fixes #661)\n- version 17.37.12 (35)\n\n- Add runtime check for a broken rpm-4.18.0 --runpostrans\n  (bsc#1246149)\n- Add regression test for bsc#1245220 and some other filesize\n  related tests.\n- version 17.37.11 (35)\n\n- BuildRequires: %{libsolv_devel_package} \u0026gt;= 0.7.34 (bsc#1243486)\n  Newer rpm versions no longer allow a ':' in rpm package names or\n  obsoletes. So injecting an\n    Obsoletes: product:oldproductname \u0026lt; oldproductversion\n  into the -release package to indicate a product rename is no longer\n  possible.\n  Since libsolv-0.7.34 you can and should use:\n    Provides: product-obsoletes(oldproductname) \u0026lt; oldproductversion\n  in the -release package. libsolv will then inject the appropriate\n  Obsoletes into the Product.\n- version 17.37.10 (35)\n\n- Ignore DeltaRpm download errors (bsc#1245672)\n  DeltaRpms are in fact optional resources. In case of a failure\n  the full rpm is downloaded.\n- Improve fix for incorrect filesize handling (bsc#1245220)\n- version 17.37.9 (35)\n\n- Do not trigger download data exceeded errors on HTTP non data\n  responses (bsc#1245220)\n  In some cases a HTTP 401 or 407 did trigger a \u0026quot;filesize exceeded\u0026quot;\n  error, because the response payload size was compared against the\n  expected filesize. This patch adds some checks if the response\n  code is in the success range and only then takes expected\n  filesize into account. Otherwise the response content-length is\n  used or a fallback of 2Mb if no content-length is known.\n- version 17.37.8 (35)\n\n- Fix SEGV in MediaDISK handler (bsc#1245452)\n- Explicitly selecting DownloadAsNeeded also selects the\n  classic_rpmtrans backend.\n  DownloadAsNeeded can not be combined with the rpm singletrans\n  installer backend because a rpm transaction requires all package\n  headers to be available the the beginning of the transaction. So\n  explicitly selecting this mode also turns on the classic_rpmtrans\n  backend.\n- Fix evaluation of libproxy results (bsc#1244710)\n- version 17.37.7 (35)\n\n- Enhancements regarding mirror handling during repo refresh.\n  Added  means to disable the use of mirrors when downloading\n  security relevant files. Requires updaing zypper to 1.14.91.\n- Fix autotestcase writer if ZYPP_FULLLOG=1 (bsc#1244042)\n  If ZYPP_FULLLOG=1 a solver testcase to\n  \u0026quot;/var/log/YaST2/autoTestcase\u0026quot; should be written for each solver\n  run. There was no testcase written for the very first solver run.\n  This is now fixed.\n- Pass $1==2 to %posttrans script if it's an update (bsc#1243279)\n- version 17.37.6 (35)\n\n- Fix credential handling in HEAD requests (bsc#1244105)\n- version 17.37.5 (35)\n\n- RepoInfo: use pathNameSetTrailingSlash (fixes #643)\n- Fix wrong userdata parameter type when running zypp with debug\n  verbosity (bsc#1239012)\n- version 17.37.4 (35)\n\n- Do not warn about no mirrors if mirrorlist was switched on\n  automatically. (bsc#1243901)\n- Relax permission of cached packages to 0644 \u0026amp; ~umask\n  (bsc#1243887)\n- version 17.37.3 (35)\n\n- Add a note to service maintained .repo file entries (fixes #638)\n- Support using %{url} variable in a RIS service's repo section.\n- version 17.37.2 (35)\n\n- Use a cookie file to validate mirrorlist cache.\n  This patch extends the mirrorlist code to use a cookie file to\n  validate the contents of the cache against the source URL, making\n  sure that we do not accidentially use a old cache when the\n  mirrorlist url was changed. For example when migrating a system\n  from one release to the next where the same repo alias might just\n  have a different URL.\n- Let Service define and update gpgkey, mirrorlist and metalink.\n- Preserve a mirrorlist file in the raw cache during refresh.\n- version 17.37.1 (35)\n\n- Code16: Enable curl2 backend and parallel package download by\n  default. In Code15 it's optional.\n  Environment variables ZYPP_CURL2=\u0026lt;0|1\u0026gt; and ZYPP_PCK_PRELOAD=\u0026lt;0|1\u0026gt;\n  can be used to turn the features on or off.\n- Make gpgKeyUrl the default source for gpg keys.\n  When refreshing zypp now primarily uses gpgKeyUrl information\n  from the repo files and only falls back to a automatically\n  generated key Url if a gpgKeyUrl was not specified.\n- Introduce mirrors into the Media backends (bsc#1240132)\n- Drop MediaMultiCurl backend.\n- Throttle progress updates when preloading packages (bsc#1239543)\n- Check if request is in valid state in CURL callbacks (fixes\n  openSUSE/zypper#605)\n- spec/CMake: add conditional build\n  '--with[out] classic_rpmtrans_as_default'.\n  classic_rpmtrans is the current builtin default for SUSE,\n  otherwise it's single_rpmtrans.\n  The `enable_preview_single_rpmtrans_as_default_for_zypper` switch\n  was removed from the spec file.  Accordingly the CMake option\n  ENABLE_PREVIEW_SINGLE_RPMTRANS_AS_DEFAULT_FOR_ZYPPER was removed.\n- version 17.37.0 (35)\n\nPackage mozilla-nspr was updated:\n\n- update to version 4.36  * remove support for OS/2\n  * remove support for Unixware, Bsdi, old AIX, old HPUX9 \u0026amp; scoos\n  * remove support for Windows 16 bit\n  * renamed the prwin16.h header to prwin.h\n  * configure was updated from 2.69 to 2.71\n  * various build, test and automation script fixes\n  * major parts of the source code were reformatted\n\nPackage pam-config was updated:\n\n- Stop adding pam_env in AUTH stack, and be sure to put this module at the  really end of the SESSION stack.\n  [bsc#1243226, CVE-2025-6018, remove-pam_env-from-auth-stack.patch]\n\nPackage pam was updated:\n\n- Make sure that the buffer containing encrypted passwords get's erased  bedore free.\n- Replace to previous CVE fix which led to CPU performance issues.\n  [bsc#1246221, CVE-2024-10041,\n  + libpam-introduce-secure-memory-erasure-helpers.patch\n  + pam_modutil_get-overwrite-password-at-free.patch\n  - passverify-always-run-the-helper-to-obtain-shadow_pwd.patch]\n\n- pam_namespace: convert functions that may operate on a user-controlled path\n  to operate on file descriptors instead of absolute path. And keep the\n  bind-mount protection from protect_mount() as a defense in depthmeasure.\n  [bsc#1244509\n  pam_inline-introduce-pam_asprintf-pam_snprintf-and-p.patch,\n  pam_namespace-fix-potential-privilege-escalation.patch,\n  pam_namespace-add-flags-to-indicate-path-safety.patch,\n  pam_namespace-secure_opendir-do-not-look-at-the-grou.patch]\n- pam_namespace-fix-potential-privilege-escalation.patch adapted and includes\n  changes from upstream commits: ds6242a, bc856cd.\n  * pam_namespace fix logic in return value handling\n  * pam_namespace move functions around\n\n- pam_env: Change the default to not read the user .pam_environment file\n  [bsc#1243226, CVE-2025-6018,\n  pam_env-change-the-default-to-not-read-the-user-env.patch]\n\nPackage perl was updated:\n\n- do not change the current directory when cloning an open  directory handle [bnc#1244079] [CVE-2025-40909]\n  new patch: perl-dirdup.diff\n\nPackage permissions was updated:\n\n- Update to version 20201225:  * nvidia-modprobe: SLE-15-SP4 backport (bsc#1246776)\n\nPackage python-instance-billing-flavor-check was updated:\n\n- Update to version 1.0.1  + Fix infinite loop (bsc#1242064)\n  + Fix bug in update infrastructure request (bsc#1242064)\n\nPackage python-PyYAML was updated:\n\n- Add python36-PyYAML provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-appdirs was updated:\n\n- Add python36-appdirs provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-asn1crypto was updated:\n\n- Add python36-asn1crypto provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-certifi was updated:\n\n- Add python36-certifi provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-cffi was updated:\n\n- Add python36-cffi provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-chardet was updated:\n\n- Add python36-chardet provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python3-cryptography was updated:\n\n- Add python36-cryptography provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n- Skipping failing test\n\nPackage python-decorator was updated:\n\n- Add python36-decorator provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-idna was updated:\n\n- Add python36-idna provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-packaging was updated:\n\n- Add python36-packaging provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-ply was updated:\n\n- Add python36-ply provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python3-pyOpenSSL was updated:\n\n- Add python36-pyOpenSSL provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-pyasn1 was updated:\n\n- Add python36-pyasn1 provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-pycparser was updated:\n\n- Add python36-pycparser provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-pyparsing was updated:\n\n- Add python36-pyparsing provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-py was updated:\n\n- Add python36-py provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-requests was updated:\n\n- Add python36- provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\n- Add CVE-2024-47081.patch upstream patch, fixes netrc credential leak\n  (gh#psf/requests#6965, CVE-2024-47081, bsc#1244039)\n\nPackage python3-setuptools was updated:\n\n- Add python36-setuptools provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-six was updated:\n\n- Add python36-six provides/obsoletes to enable SLE-12 -\u0026gt;  SLE-15 migration, bsc#1233012\n\nPackage python-urllib3 was updated:\n\n- Add patch CVE-2025-50181-poolmanager-redirects.patch:  * Pool managers now properly control redirects when retries is passed\n    (CVE-2025-50181, GHSA-pq67-6m6q-mj2v, bsc#1244925)\n\n- Add python36-urllib3 provides/obsoletes to enable SLE-12 -\u0026gt;\n  SLE-15 migration, bsc#1233012\n\nPackage regionServiceClientConfigGCE was updated:\n\n- Update to version 5.0.0 (bsc#1246995)  + SLE 16 python-requests requiers SSL v3 certificates. Update 2\n    region server certs to support SLE 16 when it gets released.\n\n- Update conditional to handle name change of metadata package\n  in SLE 16 (bsc#1242063)\n\nPackage runc was updated:\n\n- Update to runc v1.2.6. Upstream changelog is available from  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.6\u0026gt;.\n\n- Update to runc v1.2.5. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.5\u0026gt;.\n\n- Update to runc v1.2.4. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.4\u0026gt;.\n- Update runc.keyring to match upstream.\n\n- Update to runc v1.2.3. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.3\u0026gt;.\n\n- Update to runc v1.2.2. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.2\u0026gt;.\n\n- Update to runc v1.2.1. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.1\u0026gt;.\n\n- Update to runc v1.2.0. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.0\u0026gt;.\n- Remove upstreamed patches.\n  - 0001-bsc1221050-libct-seccomp-patchbpf-rm-duplicated-code.patch\n  - 0002-bsc1221050-seccomp-patchbpf-rename-nativeArch-linuxA.patch\n  - 0003-bsc1221050-seccomp-patchbpf-always-include-native-ar.patch\n  - 0004-bsc1214960-nsenter-cloned_binary-remove-bindfd-logic.patch\n\n- Update to runc v1.2.0~rc3. Upstream changelog is available from\n  \u0026lt;https://github.com/opencontainers/runc/releases/tag/v1.2.0-rc.3\u0026gt;.\n  Includes the patch for CVE-2024-45310. bsc#1230092\n\nPackage samba was updated:\n\n- Windows security hardening locks out schannel'ed netlogon dc  calls like netr_DsRGetDCName; (bsc#1246431); (bso#15876).\n\n- Update shipped /etc/samba/smb.conf to point to smb.conf\n  man page;(bsc#1233880).\n\nPackage screen was updated:\n\n- also use tty fd passing after a suspend (MSG_CONT)  new patch: sendfdcont.diff\n- do not chmod the tty for multiattach, rely on tty fd passing\n  instead [bsc#1242269] [CVE-2025-46802]\n  new patch: nottychmod.diff\n- fix resume after suspend in multiuser mode\n  new patch: multicont.diff\n\nPackage 000release-packages:sle-module-basesystem-release was updated:\n\nPackage 000release-packages:sle-module-containers-release was updated:\n\nPackage 000release-packages:sle-module-desktop-applications-release was updated:\n\nPackage 000release-packages:sle-module-development-tools-release was updated:\n\nPackage 000release-packages:sle-module-public-cloud-release was updated:\n\nPackage 000release-packages:sle-module-python3-release was updated:\n\nPackage 000release-packages:sle-module-server-applications-release was updated:\n\nPackage 000release-packages:sle-module-web-scripting-release was updated:\n\nPackage sudo was updated:\n\n- Fix a possilbe local privilege escalation via the --host option  [bsc#1245274, CVE-2025-32462]\n\nPackage suse-build-key was updated:\n\n- adjust UID (name + email) of SLES16 signing key with official  names. (bsc#1245223)\n\nPackage suse-module-tools was updated:\n\n- Update to version 15.4.20:  * add blacklist entry for reiserfs (jsc#PED-6167)\n  * Add more modules to file system blacklist (jsc#PED-6167)\n  * Add hfsplus to file system blacklist (bsc#1240950, jsc#PED-12632)\n\nPackage sysstat was updated:\n\n- rename services to allow preset in systemd-presets-branding-SLE to work  [bsc#1244553], [bsc#1246835]\n- fix argument order of find [bsc#1246852]\n- modified patches\n  % sysstat-PED-12914.patch (amended)\n- added patches (bsc#1244553)\n  % sysstat-bsc-1244553.patch\n- deleted sources\n  - 90-sysstat.preset (not needed)\n\n- Automatically enable systemd timers upon installation.\n- Fix bsc#1244553.\n\n- Fix for PED#12914.\n  * Add sysstat-PED-12914.patch.\n\nPackage systemd-presets-branding-SLE was updated:\n\n- enable sysstat_collect.timer and sysstat_summary.timer [bsc#1244553]  and [bsc#1246835]\n- modified sources\n  % default-SLE.preset\n\nPackage systemd-rpm-macros was updated:\n\n- Bump version to 16\n- Introduce %udev_trigger_with_reload() for packages that need to trigger events\n  in theirs scriplets. The new macro automatically triggers a reload of the udev\n  rule files as this step is often overlooked by packages (bsc#1237143).\n\nPackage vim was updated:\n\n- Fix bsc#1228776 / CVE-2024-41965.- Fix bsc#1239602 / CVE-2025-29768.\n- Refresh patch:\n  vim-7.3-sh_is_bash.patch\n- Update to 9.1.1406:\n  9.1.1406: crash when importing invalid tuple\n  9.1.1405: tests: no test for mapping with special keys in session file\n  9.1.1404: wrong link to Chapter 2 in new-tutor\n  9.1.1403: expansion of 'tabpanelopt' value adds wrong values\n  9.1.1402: multi-byte mappings not properly stored in session file\n  9.1.1401: list not materialized in prop_list()\n  9.1.1400: [security]: use-after-free when evaluating tuple fails\n  9.1.1399: tests: test_codestyle fails for auto-generated files\n  9.1.1398: completion: trunc does not follow Pmenu highlighting attributes\n  9.1.1397: tabpanel not correctly updated on :tabonly\n  9.1.1396: 'errorformat' is a global option\n  9.1.1395: search_stat not reset when pattern differs in case\n  9.1.1394: tabpanel not correctly redrawn on tabonly\n  9.1.1393: missing test for switching buffers and reusing curbuf\n  9.1.1392: missing patch number\n  9.1.1391: Vim does not have a vertical tabpanel\n  9.1.1390: style: more wrong indentation\n  9.1.1389: completion: still some issue when 'isexpand' contains a space\n  9.1.1388: Scrolling one line too far with 'nosmoothscroll' page scrolling\n  9.1.1387: memory leak when buflist_new() fails to reuse curbuf\n  9.1.1386: MS-Windows: some minor problems building on AARCH64\n  9.1.1385: inefficient loop for 'nosmoothscroll' scrolling\n  9.1.1384: still some problem with the new tutors filetype plugin\n  9.1.1383: completion: 'isexpand' option does not handle space char correct\n  9.1.1382: if_ruby: unused compiler warnings from ruby internals\n  9.1.1381: completion: cannot return to original text\n  9.1.1380: 'eventignorewin' only checked for current buffer\n  9.1.1379: MS-Windows: error when running evim when space in path\n  9.1.1378: sign without text overwrites number option\n  9.1.1377: patch v9.1.1370 causes some GTK warning messages\n  9.1.1376: quickfix dummy buffer may remain as dummy buffer\n  9.1.1375: [security]: possible heap UAF with quickfix dummy buffer\n  9.1.1374: completion: 'smartcase' not respected when filtering matches\n  9.1.1373: 'completeopt' checking logic can be simplified\n  9.1.1372: style: braces issues in various files\n  9.1.1371: style: indentation and brace issues in insexpand.c\n  9.1.1370: CI Tests favor GTK2 over GTK3\n  9.1.1369: configure still using autoconf 2.71\n  9.1.1368: GTK3 and GTK4 will drop numeric cursor support.\n  9.1.1367: too many strlen() calls in gui.c\n  9.1.1366: v9.1.1364 unintentionally changed sign.c and sound.c\n  9.1.1365: MS-Windows: compile warnings and too many strlen() calls\n  9.1.1364: style: more indentation issues\n  9.1.1363: style: inconsistent indentation in various files\n  9.1.1362: Vim9: type ignored when adding tuple to instance list var\n  9.1.1361: [security]: possible use-after-free when closing a buffer\n  9.1.1360: filetype: GNU Radio companion files are not recognized\n  9.1.1359: filetype: GNU Radio config files are not recognized\n  9.1.1358: if_lua: compile warnings with gcc15\n  9.1.1357: Vim incorrectly escapes tags with \u0026quot;[\u0026quot; in a help buffer\n  9.1.1356: Vim9: crash when unletting variable\n  9.1.1355: The pum_redraw() function is too complex\n  9.1.1354: tests: Test_terminalwinscroll_topline() fails on Windows\n  9.1.1353: missing change from v9.1.1350\n  9.1.1352: style: inconsistent indent in insexpand.c\n  9.1.1351: Return value of getcmdline() inconsistent in CmdlineLeavePre\n  9.1.1350: tests: typo in Test_CmdlineLeavePre_cabbr()\n  9.1.1349: CmdlineLeavePre may trigger twice\n  9.1.1348: still E315 with the terminal feature\n  9.1.1347: small problems with gui_w32.c\n  9.1.1346: missing out-of-memory check in textformat.c\n  9.1.1345: tests: Test_xxd_color2() test failure dump diff is misleading\n  9.1.1344: double free in f_complete_match() (after v9.1.1341)\n  9.1.1343: filetype: IPython files are not recognized\n  9.1.1342: Shebang filetype detection can be improved\n  9.1.1341: cannot define completion triggers\n  9.1.1340: cannot complete :filetype arguments\n  9.1.1339: missing out-of-memory checks for enc_to_utf16()/utf16_to_enc()\n  9.1.1338: Calling expand() interferes with cmdcomplete_info()\n  9.1.1337: Undo corrupted with 'completeopt' \u0026quot;preinsert\u0026quot; when switching buffer\n  9.1.1336: comment plugin does not support case-insensitive 'commentstring'\n  9.1.1335: Coverity complains about Null pointer dereferences\n  9.1.1334: Coverity complains about unchecked return value\n  9.1.1333: Coverity: complains about unutilized variable\n  9.1.1332: Vim9: segfault when using super within a lambda\n  9.1.1331: Leaking memory with cmdcomplete()\n  9.1.1330: may receive E315 in terminal\n  9.1.1329: cannot get information about command line completion\n  9.1.1328: too many strlen() calls in indent.c\n  9.1.1327: filetype: nroff detection can be improved\n  9.1.1326: invalid cursor position after 'tagfunc'\n  9.1.1325: tests: not checking error numbers properly\n  9.1.1324: undefined behaviour if X11 connection dies\n  9.1.1323: b:undo_ftplugin not executed when re-using buffer\n  9.1.1322: small delete register cannot paste multi-line correctly\n  9.1.1321: filetype: MS ixx and mpp files are not recognized\n  9.1.1320: filetype: alsoft config files are not recognized\n  9.1.1319: Various typos in the code, issue with test_inst_complete.vim\n  9.1.1318: tests: test_format fails\n  9.1.1317: noisy error when restoring folds from session fails\n  9.1.1316: missing memory allocation failure in os_mswin.c\n  9.1.1315: completion: issue with fuzzy completion and 'completefuzzycollect'\n  9.1.1314: max allowed string width too small\n  9.1.1313: compile warning about uninitialized value\n  9.1.1312: tests: Test_backupskip() fails when HOME is defined\n  9.1.1311: completion: not possible to limit number of matches\n  9.1.1310: completion: redundant check for preinsert effect\n  9.1.1309: tests: no test for 'pummaxwidth' with non-truncated \u0026quot;kind\u0026quot;\n  9.1.1308: completion: cannot order matches by distance to cursor\n  9.1.1307: make syntax does not reliably detect different flavors\n  9.1.1306: completion menu rendering can be improved\n  9.1.1305: completion menu active after switching windows/tabs\n  9.1.1304: filetype: some man files are not recognized\n  9.1.1303: missing out-of-memory check in linematch.c\n  9.1.1302: Coverity warns about using uninitialized value\n  9.1.1301: completion: cannot configure completion functions with 'complete'\n  9.1.1300: wrong detection of -inf\n  9.1.1299: filetype: mbsyncrc files are not recognized\n  9.1.1298: define_function() is too long\n  9.1.1297: Ctrl-D scrolling can get stuck\n  9.1.1296: completion: incorrect truncation logic\n  9.1.1295: clientserver: does not handle :stopinsert correctly\n  9.1.1294: gui tabline menu does not use confirm when closing tabs\n  9.1.1293: comment plugin does not handle 'exclusive' selection for comment object\n  9.1.1292: statusline not correctly evaluated\n  9.1.1291: too many strlen() calls in buffer.c\n  9.1.1290: tests: missing cleanup in test_filetype.vim\n  9.1.1289: tests: no test for matchparen plugin with WinScrolled event\n  9.1.1288: Using wrong window in ll_resize_stack()\n  9.1.1287: quickfix code can be further improved\n  9.1.1286: filetype: help files not detected when 'iskeyword' includes \u0026quot;:\u0026quot;\n  9.1.1285: Vim9: no error message for missing method after \u0026quot;super.\u0026quot;\n  9.1.1284: not possible to configure pum truncation char\n  9.1.1283: quickfix stack is limited to 10 items\n  9.1.1282: Build and test failure without job feature\n  9.1.1281: extra newline output when editing stdin\n  9.1.1280: trailing additional semicolon in get_matches_in_str()\n  9.1.1279: Vim9: null_object and null_class are no reserved names\n  9.1.1278: Vim9: too long functions in vim9type.c\n  9.1.1277: tests: trailing comment char in test_popupwin\n  9.1.1276: inline word diff treats multibyte chars as word char\n  9.1.1275: MS-Windows: Not possible to pass additional flags to Make_mvc\n  9.1.1274: Vim9: no support for object\u0026lt;type\u0026gt; as variable type\n  9.1.1273: Coverity warns about using uninitialized value\n  9.1.1272: completion: in keyword completion Ctrl_P cannot go back after Ctrl_N\n  9.1.1271: filetype: Power Query files are not recognized\n  9.1.1270: missing out-of-memory checks in buffer.c\n  9.1.1269: completion: compl_shown_match is updated when starting keyword completion\n  9.1.1268: filetype: dax files are not recognized\n  9.1.1267: Vim9: no support for type list/dict\u0026lt;object\u0026lt;any\u0026gt;\u0026gt;\n  9.1.1266: MS-Windows: type conversion warnings\n  9.1.1265: tests: no tests for typing normal char during completion\n  9.1.1264: Vim9: error when comparing objects\n  9.1.1263: string length wrong in get_last_inserted_save()\n  9.1.1262: heap-buffer-overflow with narrow 'pummaxwidth' value\n  9.1.1261: No test for 'pummaxwidth' non-truncated items\n  9.1.1260: Hang when filtering buffer with NUL bytes\n  9.1.1259: some issues with comment package and tailing spaces\n  9.1.1258: regexp: max \\U and \\%U value is limited by INT_MAX\n  9.1.1257: Mixing vim_strsize() with mb_ptr2cells() in pum_redraw()\n  9.1.1256: if_python: duplicate tuple data entries\n  9.1.1255: missing test condition for 'pummaxwidth' setting\n  9.1.1254: need more tests for the comment plugin\n  9.1.1253: abort when closing window with attached quickfix data\n  9.1.1252: typos in code and docs related to 'diffopt' \u0026quot;inline:\u0026quot;\n  9.1.1251: if_python: build error with tuples and dynamic python\n  9.1.1250: cannot set the maximum popup menu width\n  9.1.1249: tests: no test that 'listchars' \u0026quot;eol\u0026quot; doesn't affect \u0026quot;gM\u0026quot;\n  9.1.1248: compile error when building without FEAT_QUICKFIX\n  9.1.1247: fragile setup to get (preferred) keys from key_name_entry\n  9.1.1246: coverity complains about some changes in v9.1.1243\n  9.1.1245: need some more tests for curly braces evaluation\n  9.1.1244: part of patch v9.1.1242 was wrong\n  9.1.1243: diff mode is lacking for changes within lines\n  9.1.1242: Crash when evaluating variable name\n  9.1.1241: wrong preprocessort indentation in term.c\n  9.1.1240: Regression with ic/ac text objects and comment plugin\n  9.1.1239: if_python: no tuple data type support\n  9.1.1238: wrong cursor column with 'set splitkeep=screen'\n  9.1.1237: Compile error with C89 compiler in term.c\n  9.1.1236: tests: test_comments leaves swapfiles around\n  9.1.1235: cproto files are outdated\n  9.1.1234: Compile error when SIZE_MAX is not defined\n  9.1.1233: Coverity warns about NULL pointer when triggering WinResized\n  9.1.1232: Vim script is missing the tuple data type\n  9.1.1231: filetype: SPA JSON files are not recognized\n  9.1.1230: inconsistent CTRL-C behaviour for popup windows\n  9.1.1229: the comment plugin can be improved\n  9.1.1228: completion: current position column wrong after got a match\n  9.1.1227: no tests for the comment package\n  9.1.1226: \u0026quot;shellcmdline\u0026quot; completion doesn't work with input()\n  9.1.1225: extra NULL check in VIM_CLEAR()\n  9.1.1224: cannot :put while keeping indent\n  9.1.1223: wrong translation used for encoding failures\n  9.1.1222: using wrong length for last inserted string\n  9.1.1221: Wrong cursor pos when leaving Insert mode just after 'autoindent'\n  9.1.1220: filetype: uv.lock file not recognized\n  9.1.1219: Strange error with wrong type for matchfuzzy() \u0026quot;camelcase\u0026quot;\n  9.1.1218: missing out-of-memory check in filepath.c\n  9.1.1217: tests: typos in test_matchfuzzy.vim\n  9.1.1216: Pasting the '.' register multiple times may not work\n  9.1.1215: Patch 9.1.1213 has some issues\n  9.1.1214: matchfuzzy() can be improved for camel case matches\n  9.1.1213: cannot :put while keeping indent\n  9.1.1212: too many strlen() calls in edit.c\n  9.1.1212: filetype: logrotate'd pacmanlogs are not recognized\n  9.1.1211: TabClosedPre is triggered just before the tab is being freed\n  9.1.1210: translation(ru): missing Russian translation for the new tutor\n  9.1.1209: colorcolumn not drawn after virtual text lines\n  9.1.1208: MS-Windows: not correctly restoring alternate screen on Win 10\n  9.1.1207: MS-Windows: build warning in filepath.c\n  9.1.1206: tests: test_filetype fails when a file is a directory\n  9.1.1205: completion: preinserted text not removed when closing pum\n  9.1.1204: MS-Windows: crash when passing long string to expand()\n  9.1.1203: matchparen keeps cursor on case label in sh filetype\n  9.1.1202: Missing TabClosedPre autocommand\n  9.1.1201: 'completefuzzycollect' does not handle dictionary correctly\n  9.1.1200: cmdline pum not cleared for input() completion\n  9.1.1199: gvim uses hardcoded xpm icon file\n  9.1.1198: [security]: potential data loss with zip.vim\n  9.1.1197: process_next_cpt_value() uses wrong condition\n  9.1.1196: filetype: config files for container tools are not recognized\n  9.1.1195: inside try-block: fn body executed with default arg undefined\n  9.1.1194: filetype: false positive help filetype detection\n  9.1.1193: Unnecessary use of STRCAT() in au_event_disable()\n  9.1.1192: Vim crashes with term response debug logging enabled\n  9.1.1191: tests: test for patch 9.1.1186 doesn't fail without the patch\n  9.1.1190: C indentation does not detect multibyte labels\n  9.1.1189: if_python: build error due to incompatible pointer types\n  9.1.1188: runtime(tera): tera support can be improved\n  9.1.1187: matchparen plugin wrong highlights shell case statement\n  9.1.1186: filetype: help files in git repos are not detected\n  9.1.1185: endless loop with completefuzzycollect and no match found\n  9.1.1184: Unnecessary use of vim_tolower() in vim_strnicmp_asc()\n  9.1.1083: \u0026quot;above\u0026quot; virtual text breaks cursorlineopt=number\n  9.1.1182: No cmdline completion for 'completefuzzycollect'\n  9.1.1181: Unnecessary STRLEN() calls in insexpand.c\n  9.1.1180: short-description\n  9.1.1179: too many strlen() calls in misc2.c\n  9.1.1178: not possible to generate completion candidates using fuzzy matching\n  9.1.1177: filetype: tera files not detected\n\nPackage xen was updated:\n\n- bsc#1246112, bsc#1238896 - VUL-0: xen: More AMD transient  execution attack (CVE-2024-36350, CVE-2024-36357, XSA-471)\n  xsa471-01.patch\n  xsa471-02.patch\n  xsa471-03.patch\n  xsa471-04.patch\n  xsa471-05.patch\n  xsa471-06.patch\n  xsa471-07.patch\n  xsa471-08.patch\n  xsa471-09.patch\n  xsa471-10.patch\n  xsa471-11.patch\n  xsa471-12.patch\n  xsa471-13.patch\n  xsa471-14.patch\n  xsa471-15.patch\n  xsa471-16.patch\n  xsa471-17.patch\n  xsa471-18.patch\n  xsa471-19.patch\n  xsa471-20.patch\n\n- bsc#1244644 - VUL-0: CVE-2025-27465: xen: x86: Incorrect stubs\n  exception handling for flags recovery (XSA-470)\n  xsa470.patch\n\n- bsc#1243117 - VUL-0: CVE-2024-28956: xen: Intel CPU: Indirect\n  Target Selection (ITS) (XSA-469)\n  xsa469-01.patch\n  xsa469-02.patch\n  xsa469-03.patch\n  xsa469-04.patch\n  xsa469-05.patch\n  xsa469-06.patch\n  xsa469-07.patch\n\n- bsc#1238043 - VUL-0: CVE-2025-1713: xen: deadlock potential with\n  VT-d and legacy PCI device pass-through (XSA-467)\n  xsa467.patch\n\n- bsc#1234282 - VUL-0: xen: XSA-466: Xen hypercall page unsafe\n  against speculative attacks\n  xsa466.patch\n- Update to Xen 4.16.7 security bug fix release (bsc#1027519)\n  xen-4.16.7-testing-src.tar.bz2\n  * No upstream changelog found in sources or webpage\n- Dropped patches contained in new tarball\n  661d00b8-VMX-prevent-fallthrough-in-vmx_set_reg.patch\n  662a6a4c-x86-spec-reporting-of-BHB-clearing.patch\n  662a6a8d-x86-spec-adjust-logic-to-elide-LFENCE.patch\n  669662ea-x86-IRQ-avoid-double-unlock-in-map_domain_pirq.patch\n  66bb6f78-x86-IOMMU-move-tracking-in-iommu_identity_mapping.patch\n  66bb6fa5-x86-pass-through-document-as-security-unsupported.patch\n  xen.stubdom.newlib.patch\n  xsa462.patch\n  xsa463-01.patch\n  xsa463-02.patch\n  xsa463-03.patch\n  xsa463-04.patch\n  xsa463-05.patch\n  xsa463-06.patch\n  xsa463-07.patch\n  xsa463-08.patch\n  xsa463-09.patch\n  xsa463-10.patch\n  xsa464.patch\n\nPackage xorg-x11-server was updated:\n\n- U_CVE-2025-49176-os-Check-for-integer-overflow-on-BigRequest-length.patch  * additional fix for CVE-2025-49176\n\n- U_CVE-2025-49175-render-Avoid-0-or-less-animated-cursors.patch\n  * Out-of-bounds access in X Rendering extension (Animated cursors)\n    (CVE-2025-49175, bsc#1244082)\n- U_CVE-2025-49176-os-Do-not-overflow-the-integer-size-with-BigRequest.patch\n  * Integer overflow in Big Requests Extension\n    (CVE-2025-49176, bsc#1244084)\n- U_CVE-2025-49178-os-Account-for-bytes-to-ignore-when-sharing-input-bu.patch\n  * Unprocessed client request via bytes to ignore\n    (CVE-2025-49178, bsc#1244087)\n- U_CVE-2025-49179-record-Check-for-overflow-in-RecordSanityCheckRegist.patch\n  * Integer overflow in X Record extension\n    (CVE-2025-49179, bsc#1244089)\n- U_CVE-2025-49180-randr-Check-for-overflow-in-RRChangeProviderProperty.patch\n  U_CVE-2025-49180-xfree86-Check-for-RandR-provider-functions.patch\n  * Integer overflow in RandR extension (RRChangeProviderProperty)\n    (CVE-2025-49180, bsc#1244090)\n\nPackage zypper was updated:\n\n- Fix addrepo to handle explicit --check and --no-check requests  (bsc#1246466)\n- Accept \u0026quot;show\u0026quot; as alias for \u0026quot;info\u0026quot; (bsc#1245985)\n- version 1.14.93\n\n- sh: Reset solver options after command (bsc#1245496)\n- Explicitly selecting DownloadAsNeeded also selects the\n  classic_rpmtrans backend.\n- version 1.14.92\n\n- BuildRequires:  libzypp-devel \u0026gt;= 17.37.6.\n  Enhancements regarding mirror handling during repo refresh. Adapt\n  to libzypp API changes. (bsc#1230267)\n- version 1.14.91\n\n- BuildRequires:  libzypp-devel \u0026gt;= 17.37.0.\n- Use libzypp improvements for preload and mirror handling.\n- xmlout.rnc: Update repo-element (bsc#1241463)\n  Add the \u0026quot;metalink\u0026quot; attribute and reflect that the \u0026quot;url\u0026quot; elements\n  list may in fact be empty, if no baseurls are defined in the\n  .repo files.\n- man: update --allow-unsigned-rpm description.\n  Explain how to achieve the same for packages provided by\n  repositories.\n- version 1.14.90\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "apache2-2.4.51-150400.6.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "apache2-prefork-2.4.51-150400.6.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "apache2-utils-2.4.51-150400.6.46.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "boost-license1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "branding-SLE-15-150400.38.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cairo-devel-1.16.0-150400.11.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cifs-utils-6.15-150400.3.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-10.5.2-150300.13.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-plugin-gce-1.0.0-150300.13.29.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "coreutils-8.32-150400.9.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-28.3.3_ce-150000.230.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gdk-pixbuf-query-loaders-2.42.12-150400.5.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-devel-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-dracut-config-0.0.4-150300.7.12.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-configs-20241205.00-150400.13.22.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-guest-oslogin-20240311.01-150000.1.56.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-osconfig-agent-20250416.02-150000.1.50.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-2.06-150400.11.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-i386-pc-2.06-150400.11.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "grub2-x86_64-efi-2.06-150400.11.63.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "haveged-1.9.14-150400.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "hwinfo-21.89-150400.3.21.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "iputils-20211215-150400.3.22.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "jq-1.6-150000.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-5.14.21-150400.24.173.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libarchive13-3.5.1-150400.3.21.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libatomic1-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libboost_regex1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libboost_system1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libboost_thread1_66_0-1.66.0-150200.12.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcairo-gobject2-1.16.0-150400.11.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcairo-script-interpreter2-1.16.0-150400.11.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libcairo2-1.16.0-150400.11.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfreebl3-3.112-150400.3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-32bit-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcrypt20-1.9.4-150400.6.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgdk_pixbuf-2_0-0-2.42.12-150400.5.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgnutls30-3.7.3-150400.4.50.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgomp1-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgthread-2_0-0-2.70.5-150400.3.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libhavege2-1.9.14-150400.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libicu-suse65_1-65.1-150200.4.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libicu60_2-60.2-150000.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libicu60_2-ledata-60.2-150000.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libicu65_1-ledata-65.1-150200.4.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libitm1-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libjq1-1.6-150000.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "liblsan0-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libobjc4-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-1.1.1l-150400.7.81.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl1_1-32bit-1.1.1l-150400.7.81.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpolkit0-0.116-150200.3.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_6m1_0-3.6.15-150300.10.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libquadmath0-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libruby2_5-2_5-2.5.9-150000.4.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsoftokn3-3.112-150400.3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsolv-tools-0.7.34-150400.3.41.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsolv-tools-base-0.7.34-150400.3.41.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsqlite3-0-3.50.2-150000.3.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh-config-0.9.8-150400.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh4-0.9.8-150400.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh4-32bit-0.9.8-150400.3.9.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-32bit-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-locale-14.3.0+git11799-150000.1.11.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsystemd0-249.17-150400.8.49.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtiff5-4.0.9-150000.45.50.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libudev1-249.17-150400.8.49.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-2-2.9.14-150400.5.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-devel-2.9.14-150400.5.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-tools-2.9.14-150400.5.47.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libyaml-0-2-0.1.7-150000.3.4.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-17.37.16-150400.3.142.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nspr-4.36-150000.3.32.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-3.112-150400.3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "mozilla-nss-certs-3.112-150400.3.57.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-1_1-1.1.1l-150400.7.81.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-1.3.0-150000.6.86.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-config-1.1-150200.3.14.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-5.26.1-150300.17.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-base-5.26.1-150300.17.20.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "permissions-20201225-150400.5.19.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "polkit-0.116-150200.3.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-instance-billing-flavor-check-1.0.1-150000.1.23.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-3.6.15-150300.10.97.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-PyYAML-5.4.1-150300.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-apipkg-1.4-150000.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-appdirs-1.4.3-150000.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-asn1crypto-0.24.0-150000.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-base-3.6.15-150300.10.97.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-certifi-2018.1.18-150000.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-cffi-1.13.2-150200.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-chardet-3.0.4-150000.5.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-cryptography-3.3.2-150400.26.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-curses-3.6.15-150300.10.97.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-decorator-4.4.2-150200.7.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-idna-2.6-150000.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-iniconfig-1.1.1-150000.1.13.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-packaging-21.3-150200.3.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-ply-3.10-150000.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-py-1.10.0-150100.5.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyOpenSSL-21.0.0-150400.10.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyasn1-0.4.2-150000.3.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pycparser-2.17-150000.3.5.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-pyparsing-2.4.7-150300.3.3.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-requests-2.25.1-150300.3.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-setuptools-44.1.1-150400.9.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-six-1.14.0-150200.15.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-solv-0.7.34-150400.3.41.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-urllib3-1.25.10-150300.4.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python3-zypp-plugin-0.6.5-150400.13.10.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "regionServiceClientConfigGCE-5.0.0-150000.4.18.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby-solv-0.7.34-150400.3.41.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-2.5.9-150000.4.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "ruby2.5-stdlib-2.5.9-150000.4.49.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "runc-1.2.6-150000.73.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "samba-4.15.13+git.731.923ab97f407-150400.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "samba-client-4.15.13+git.731.923ab97f407-150400.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "samba-client-libs-4.15.13+git.731.923ab97f407-150400.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "samba-libs-4.15.13+git.731.923ab97f407-150400.3.37.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "screen-4.6.2-150000.5.8.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sqlite3-tcl-3.50.2-150000.3.33.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sudo-1.9.9-150400.4.39.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-build-key-12.0-150000.8.61.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "suse-module-tools-15.4.20-150400.3.20.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sysstat-12.0.2-150000.3.48.3",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-249.17-150400.8.49.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-presets-branding-SLE-15.1-150100.20.17.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-rpm-macros-16-150000.7.42.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-sysvinit-249.17-150400.8.49.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "udev-249.17-150400.8.49.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "update-alternatives-1.19.0.4-150000.4.7.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-9.1.1406-150000.5.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "vim-data-common-9.1.1406-150000.5.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "wallpaper-branding-SLE-15-150400.38.6.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xen-libs-4.16.7_02-150400.4.72.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xorg-x11-server-1.20.3-150400.38.60.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xxd-9.1.1406-150000.5.75.1",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.93-150400.3.98.2",
        "RelatesToProductReference": "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sles-15-sp4-sapcal-v20250911-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2016-9840",
      "Description": "inftrees.c in zlib 1.2.8 might allow context-dependent attackers to have unspecified impact by leveraging improper pointer arithmetic.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "critical"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "6.8",
        "Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P"
      }
    },
    {
      "CVE": "CVE-2019-6461",
      "Description": "An issue was discovered in cairo 1.16.0. There is an assertion problem in the function _cairo_arc_in_direction in the file cairo-arc.c.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:cairo-devel-1.16.0-150400.11.6.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libcairo-gobject2-1.16.0-150400.11.6.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libcairo-script-interpreter2-1.16.0-150400.11.6.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libcairo2-1.16.0-150400.11.6.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "4.3",
        "Vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P"
      }
    },
    {
      "CVE": "CVE-2021-47557",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: sch_ets: don't peek at classes beyond 'nbands'\n\nwhen the number of DRR classes decreases, the round-robin active list can\ncontain elements that have already been freed in ets_qdisc_change(). As a\nconsequence, it's possible to see a NULL dereference crash, caused by the\nattempt to call cl-\u003eqdisc-\u003eops-\u003epeek(cl-\u003eqdisc) when cl-\u003eqdisc is NULL:\n\n BUG: kernel NULL pointer dereference, address: 0000000000000018\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP NOPTI\n CPU: 1 PID: 910 Comm: mausezahn Not tainted 5.16.0-rc1+ #475\n Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014\n RIP: 0010:ets_qdisc_dequeue+0x129/0x2c0 [sch_ets]\n Code: c5 01 41 39 ad e4 02 00 00 0f 87 18 ff ff ff 49 8b 85 c0 02 00 00 49 39 c4 0f 84 ba 00 00 00 49 8b ad c0 02 00 00 48 8b 7d 10 \u003c48\u003e 8b 47 18 48 8b 40 38 0f ae e8 ff d0 48 89 c3 48 85 c0 0f 84 9d\n RSP: 0000:ffffbb36c0b5fdd8 EFLAGS: 00010287\n RAX: ffff956678efed30 RBX: 0000000000000000 RCX: 0000000000000000\n RDX: 0000000000000002 RSI: ffffffff9b938dc9 RDI: 0000000000000000\n RBP: ffff956678efed30 R08: e2f3207fe360129c R09: 0000000000000000\n R10: 0000000000000001 R11: 0000000000000001 R12: ffff956678efeac0\n R13: ffff956678efe800 R14: ffff956611545000 R15: ffff95667ac8f100\n FS:  00007f2aa9120740(0000) GS:ffff95667b800000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000018 CR3: 000000011070c000 CR4: 0000000000350ee0\n Call Trace:\n  \u003cTASK\u003e\n  qdisc_peek_dequeued+0x29/0x70 [sch_ets]\n  tbf_dequeue+0x22/0x260 [sch_tbf]\n  __qdisc_run+0x7f/0x630\n  net_tx_action+0x290/0x4c0\n  __do_softirq+0xee/0x4f8\n  irq_exit_rcu+0xf4/0x130\n  sysvec_apic_timer_interrupt+0x52/0xc0\n  asm_sysvec_apic_timer_interrupt+0x12/0x20\n RIP: 0033:0x7f2aa7fc9ad4\n Code: b9 ff ff 48 8b 54 24 18 48 83 c4 08 48 89 ee 48 89 df 5b 5d e9 ed fc ff ff 0f 1f 00 66 2e 0f 1f 84 00 00 00 00 00 f3 0f 1e fa \u003c53\u003e 48 83 ec 10 48 8b 05 10 64 33 00 48 8b 00 48 85 c0 0f 85 84 00\n RSP: 002b:00007ffe5d33fab8 EFLAGS: 00000202\n RAX: 0000000000000002 RBX: 0000561f72c31460 RCX: 0000561f72c31720\n RDX: 0000000000000002 RSI: 0000561f72c31722 RDI: 0000561f72c31720\n RBP: 000000000000002a R08: 00007ffe5d33fa40 R09: 0000000000000014\n R10: 0000000000000000 R11: 0000000000000246 R12: 0000561f7187e380\n R13: 0000000000000000 R14: 0000000000000000 R15: 0000561f72c31460\n  \u003c/TASK\u003e\n Modules linked in: sch_ets sch_tbf dummy rfkill iTCO_wdt intel_rapl_msr iTCO_vendor_support intel_rapl_common joydev virtio_balloon lpc_ich i2c_i801 i2c_smbus pcspkr ip_tables xfs libcrc32c crct10dif_pclmul crc32_pclmul crc32c_intel ahci libahci ghash_clmulni_intel serio_raw libata virtio_blk virtio_console virtio_net net_failover failover sunrpc dm_mirror dm_region_hash dm_log dm_mod\n CR2: 0000000000000018\n\nEnsuring that 'alist' was never zeroed [1] was not sufficient, we need to\nremove from the active list those elements that are no more SP nor DRR.\n\n[1] https://lore.kernel.org/netdev/60d274838bf09777f0371253416e8af71360bc08.1633609148.git.dcaratti@redhat.com/\n\nv3: fix race between ets_qdisc_change() and ets_qdisc_dequeue() delisting\n    DRR classes beyond 'nbands' in ets_qdisc_change() with the qdisc lock\n    acquired, thanks to Cong Wang.\n\nv2: when a NULL qdisc is found in the DRR active list, try to dequeue skb\n    from the next list item.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2021-47595",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: sch_ets: don't remove idle classes from the round-robin list\n\nShuang reported that the following script:\n\n 1) tc qdisc add dev ddd0 handle 10: parent 1: ets bands 8 strict 4 priomap 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\n 2) mausezahn ddd0  -A 10.10.10.1 -B 10.10.10.2 -c 0 -a own -b 00:c1:a0:c1:a0:00 -t udp \u0026\n 3) tc qdisc change dev ddd0 handle 10: ets bands 4 strict 2 quanta 2500 2500 priomap 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n\ncrashes systematically when line 2) is commented:\n\n list_del corruption, ffff8e028404bd30-\u003enext is LIST_POISON1 (dead000000000100)\n ------------[ cut here ]------------\n kernel BUG at lib/list_debug.c:47!\n invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n CPU: 0 PID: 954 Comm: tc Not tainted 5.16.0-rc4+ #478\n Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014\n RIP: 0010:__list_del_entry_valid.cold.1+0x12/0x47\n Code: fe ff 0f 0b 48 89 c1 4c 89 c6 48 c7 c7 08 42 1b 87 e8 1d c5 fe ff 0f 0b 48 89 fe 48 89 c2 48 c7 c7 98 42 1b 87 e8 09 c5 fe ff \u003c0f\u003e 0b 48 c7 c7 48 43 1b 87 e8 fb c4 fe ff 0f 0b 48 89 f2 48 89 fe\n RSP: 0018:ffffae46807a3888 EFLAGS: 00010246\n RAX: 000000000000004e RBX: 0000000000000007 RCX: 0000000000000202\n RDX: 0000000000000000 RSI: ffffffff871ac536 RDI: 00000000ffffffff\n RBP: ffffae46807a3a10 R08: 0000000000000000 R09: c0000000ffff7fff\n R10: 0000000000000001 R11: ffffae46807a36a8 R12: ffff8e028404b800\n R13: ffff8e028404bd30 R14: dead000000000100 R15: ffff8e02fafa2400\n FS:  00007efdc92e4480(0000) GS:ffff8e02fb600000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000682f48 CR3: 00000001058be000 CR4: 0000000000350ef0\n Call Trace:\n  \u003cTASK\u003e\n  ets_qdisc_change+0x58b/0xa70 [sch_ets]\n  tc_modify_qdisc+0x323/0x880\n  rtnetlink_rcv_msg+0x169/0x4a0\n  netlink_rcv_skb+0x50/0x100\n  netlink_unicast+0x1a5/0x280\n  netlink_sendmsg+0x257/0x4d0\n  sock_sendmsg+0x5b/0x60\n  ____sys_sendmsg+0x1f2/0x260\n  ___sys_sendmsg+0x7c/0xc0\n  __sys_sendmsg+0x57/0xa0\n  do_syscall_64+0x3a/0x80\n  entry_SYSCALL_64_after_hwframe+0x44/0xae\n RIP: 0033:0x7efdc8031338\n Code: 89 02 48 c7 c0 ff ff ff ff eb b5 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 8d 05 25 43 2c 00 8b 00 85 c0 75 17 b8 2e 00 00 00 0f 05 \u003c48\u003e 3d 00 f0 ff ff 77 58 c3 0f 1f 80 00 00 00 00 41 54 41 89 d4 55\n RSP: 002b:00007ffdf1ce9828 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\n RAX: ffffffffffffffda RBX: 0000000061b37a97 RCX: 00007efdc8031338\n RDX: 0000000000000000 RSI: 00007ffdf1ce9890 RDI: 0000000000000003\n RBP: 0000000000000000 R08: 0000000000000001 R09: 000000000078a940\n R10: 000000000000000c R11: 0000000000000246 R12: 0000000000000001\n R13: 0000000000688880 R14: 0000000000000000 R15: 0000000000000000\n  \u003c/TASK\u003e\n Modules linked in: sch_ets sch_tbf dummy rfkill iTCO_wdt iTCO_vendor_support intel_rapl_msr intel_rapl_common joydev pcspkr i2c_i801 virtio_balloon i2c_smbus lpc_ich ip_tables xfs libcrc32c crct10dif_pclmul crc32_pclmul crc32c_intel serio_raw ghash_clmulni_intel ahci libahci libata virtio_blk virtio_console virtio_net net_failover failover sunrpc dm_mirror dm_region_hash dm_log dm_mod [last unloaded: sch_ets]\n ---[ end trace f35878d1912655c2 ]---\n RIP: 0010:__list_del_entry_valid.cold.1+0x12/0x47\n Code: fe ff 0f 0b 48 89 c1 4c 89 c6 48 c7 c7 08 42 1b 87 e8 1d c5 fe ff 0f 0b 48 89 fe 48 89 c2 48 c7 c7 98 42 1b 87 e8 09 c5 fe ff \u003c0f\u003e 0b 48 c7 c7 48 43 1b 87 e8 fb c4 fe ff 0f 0b 48 89 f2 48 89 fe\n RSP: 0018:ffffae46807a3888 EFLAGS: 00010246\n RAX: 000000000000004e RBX: 0000000000000007 RCX: 0000000000000202\n RDX: 0000000000000000 RSI: ffffffff871ac536 RDI: 00000000ffffffff\n RBP: ffffae46807a3a10 R08: 0000000000000000 R09: c0000000ffff7fff\n R10: 0000000000000001 R11: ffffae46807a36a8 R12: ffff8e028404b800\n R13: ffff8e028404bd30 R14: dead000000000100 R15: ffff8e02fafa2400\n FS:  00007efdc92e4480(0000) GS:ffff8e02fb600000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000000000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-1679",
      "Description": "A use-after-free flaw was found in the Linux kernel's Atheros wireless adapter driver in the way a user forces the ath9k_htc_wait_for_target function to fail with some input messages. This flaw allows a local user to crash or potentially escalate their privileges on the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {
        "BaseScore": "7.2",
        "Vector": "AV:L/AC:L/Au:N/C:C/I:C/A:C"
      }
    },
    {
      "CVE": "CVE-2022-2585",
      "Description": "It was discovered that when exec'ing from a non-leader thread, armed POSIX CPU timers would be left on a list but freed, leading to a use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-2586",
      "Description": "It was discovered that a nft object or expression could reference a nft set on a different nft table, leading to a use-after-free once that table was deleted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-2905",
      "Description": "An out-of-bounds memory read flaw was found in the Linux kernel's BPF subsystem in how a user calls the bpf_tail_call function with a key larger than the max_entries of the map. This flaw allows a local user to gain unauthorized access to data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-3564",
      "Description": "A vulnerability classified as critical was found in Linux Kernel. Affected by this vulnerability is the function l2cap_reassemble_sdu of the file net/bluetooth/l2cap_core.c of the component Bluetooth. The manipulation leads to use after free. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-211087.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-3619",
      "Description": "A vulnerability has been found in Linux Kernel and classified as problematic. This vulnerability affects the function l2cap_recv_acldata of the file net/bluetooth/l2cap_core.c of the component Bluetooth. The manipulation leads to memory leak. It is recommended to apply a patch to fix this issue. VDB-211918 is the identifier assigned to this vulnerability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-3640",
      "Description": "A vulnerability, which was classified as critical, was found in Linux Kernel. Affected is the function l2cap_conn_del of the file net/bluetooth/l2cap_core.c of the component Bluetooth. The manipulation leads to use after free. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-211944.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-3903",
      "Description": "An incorrect read request flaw was found in the Infrared Transceiver USB driver in the Linux kernel. This issue occurs when a user attaches a malicious USB device. A local user could use this flaw to starve the resources, causing denial of service or potentially crashing the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-4095",
      "Description": "A use-after-free flaw was found in Linux kernel before 5.19.2. This issue occurs in cmd_hdl_filter in drivers/staging/rtl8712/rtl8712_cmd.c, allowing an attacker to launch a local denial of service attack and gain escalation of privileges.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-4662",
      "Description": "A flaw incorrect access control in the Linux kernel USB core subsystem was found in the way user attaches usb device. A local user could use this flaw to crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49110",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: revisit gc autotuning\n\nas of commit 4608fdfc07e1\n(\"netfilter: conntrack: collect all entries in one cycle\")\nconntrack gc was changed to run every 2 minutes.\n\nOn systems where conntrack hash table is set to large value, most evictions\nhappen from gc worker rather than the packet path due to hash table\ndistribution.\n\nThis causes netlink event overflows when events are collected.\n\nThis change collects average expiry of scanned entries and\nreschedules to the average remaining value, within 1 to 60 second interval.\n\nTo avoid event overflows, reschedule after each bucket and add a\nlimit for both run time and number of evictions per run.\n\nIf more entries have to be evicted, reschedule and restart 1 jiffy\ninto the future.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_event: Ignore multiple conn complete events\n\nWhen one of the three connection complete events is received multiple\ntimes for the same handle, the device is registered multiple times which\nleads to memory corruptions. Therefore, consequent events for a single\nconnection are ignored.\n\nThe conn-\u003estate can hold different values, therefore HCI_CONN_HANDLE_UNSET\nis introduced to identify new connections. To make sure the events do not\ncontain this or another invalid handle HCI_CONN_HANDLE_MAX and checks\nare introduced.\n\nBuglink: https://bugzilla.kernel.org/show_bug.cgi?id=215497",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49139",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: fix null ptr deref on hci_sync_conn_complete_evt\n\nThis event is just specified for SCO and eSCO link types.\nOn the reception of a HCI_Synchronous_Connection_Complete for a BDADDR\nof an existing LE connection, LE link type and a status that triggers the\nsecond case of the packet processing a NULL pointer dereference happens,\nas conn-\u003elink is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49767",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\n9p/trans_fd: always use O_NONBLOCK read/write\n\nsyzbot is reporting hung task at p9_fd_close() [1], for p9_mux_poll_stop()\n from p9_conn_destroy() from p9_fd_close() is failing to interrupt already\nstarted kernel_read() from p9_fd_read() from p9_read_work() and/or\nkernel_write() from p9_fd_write() from p9_write_work() requests.\n\nSince p9_socket_open() sets O_NONBLOCK flag, p9_mux_poll_stop() does not\nneed to interrupt kernel_read()/kernel_write(). However, since p9_fd_open()\ndoes not set O_NONBLOCK flag, but pipe blocks unless signal is pending,\np9_mux_poll_stop() needs to interrupt kernel_read()/kernel_write() when\nthe file descriptor refers to a pipe. In other words, pipe file descriptor\nneeds to be handled as if socket file descriptor.\n\nWe somehow need to interrupt kernel_read()/kernel_write() on pipes.\n\nA minimal change, which this patch is doing, is to set O_NONBLOCK flag\n from p9_fd_open(), for O_NONBLOCK flag does not affect reading/writing\nof regular files. But this approach changes O_NONBLOCK flag on userspace-\nsupplied file descriptors (which might break userspace programs), and\nO_NONBLOCK flag could be changed by userspace. It would be possible to set\nO_NONBLOCK flag every time p9_fd_read()/p9_fd_write() is invoked, but still\nremains small race window for clearing O_NONBLOCK flag.\n\nIf we don't want to manipulate O_NONBLOCK flag, we might be able to\nsurround kernel_read()/kernel_write() with set_thread_flag(TIF_SIGPENDING)\nand recalc_sigpending(). Since p9_read_work()/p9_write_work() works are\nprocessed by kernel threads which process global system_wq workqueue,\nsignals could not be delivered from remote threads when p9_mux_poll_stop()\n from p9_conn_destroy() from p9_fd_close() is called. Therefore, calling\nset_thread_flag(TIF_SIGPENDING)/recalc_sigpending() every time would be\nneeded if we count on signals for making kernel_read()/kernel_write()\nnon-blocking.\n\n[Dominique: add comment at Christian's suggestion]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49769",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Check sb_bsize_shift after reading superblock\n\nFuzzers like to scribble over sb_bsize_shift but in reality it's very\nunlikely that this field would be corrupted on its own. Nevertheless it\nshould be checked to avoid the possibility of messy mount errors due to\nbad calculations. It's always a fixed value based on the block size so\nwe can just check that it's the expected value.\n\nTested with:\n\n    mkfs.gfs2 -O -p lock_nolock /dev/vdb\n    for i in 0 -1 64 65 32 33; do\n        gfs2_edit -p sb field sb_bsize_shift $i /dev/vdb\n        mount /dev/vdb /mnt/test \u0026\u0026 umount /mnt/test\n    done\n\nBefore this patch we get a withdraw after\n\n[   76.413681] gfs2: fsid=loop0.0: fatal: invalid metadata block\n[   76.413681]   bh = 19 (type: exp=5, found=4)\n[   76.413681]   function = gfs2_meta_buffer, file = fs/gfs2/meta_io.c, line = 492\n\nand with UBSAN configured we also get complaints like\n\n[   76.373395] UBSAN: shift-out-of-bounds in fs/gfs2/ops_fstype.c:295:19\n[   76.373815] shift exponent 4294967287 is too large for 64-bit type 'long unsigned int'\n\nAfter the patch, these complaints don't appear, mount fails immediately\nand we get an explanation in dmesg.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49770",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: avoid putting the realm twice when decoding snaps fails\n\nWhen decoding the snaps fails it maybe leaving the 'first_realm'\nand 'realm' pointing to the same snaprealm memory. And then it'll\nput it twice and could cause random use-after-free, BUG_ON, etc\nissues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49771",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm ioctl: fix misbehavior if list_versions races with module loading\n\n__list_versions will first estimate the required space using the\n\"dm_target_iterate(list_version_get_needed, \u0026needed)\" call and then will\nfill the space using the \"dm_target_iterate(list_version_get_info,\n\u0026iter_info)\" call. Each of these calls locks the targets using the\n\"down_read(\u0026_lock)\" and \"up_read(\u0026_lock)\" calls, however between the first\nand second \"dm_target_iterate\" there is no lock held and the target\nmodules can be loaded at this point, so the second \"dm_target_iterate\"\ncall may need more space than what was the first \"dm_target_iterate\"\nreturned.\n\nThe code tries to handle this overflow (see the beginning of\nlist_version_get_info), however this handling is incorrect.\n\nThe code sets \"param-\u003edata_size = param-\u003edata_start + needed\" and\n\"iter_info.end = (char *)vers+len\" - \"needed\" is the size returned by the\nfirst dm_target_iterate call; \"len\" is the size of the buffer allocated by\nuserspace.\n\n\"len\" may be greater than \"needed\"; in this case, the code will write up\nto \"len\" bytes into the buffer, however param-\u003edata_size is set to\n\"needed\", so it may write data past the param-\u003edata_size value. The ioctl\ninterface copies only up to param-\u003edata_size into userspace, thus part of\nthe result will be truncated.\n\nFix this bug by setting \"iter_info.end = (char *)vers + needed;\" - this\nguarantees that the second \"dm_target_iterate\" call will write only up to\nthe \"needed\" buffer and it will exit with \"DM_BUFFER_FULL_FLAG\" if it\noverflows the \"needed\" space - in this case, userspace will allocate a\nlarger buffer and retry.\n\nNote that there is also a bug in list_version_get_needed - we need to add\n\"strlen(tt-\u003ename) + 1\" to the needed size, not \"strlen(tt-\u003ename)\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Drop snd_BUG_ON() from snd_usbmidi_output_open()\n\nsnd_usbmidi_output_open() has a check of the NULL port with\nsnd_BUG_ON().  snd_BUG_ON() was used as this shouldn't have happened,\nbut in reality, the NULL port may be seen when the device gives an\ninvalid endpoint setup at the descriptor, hence the driver skips the\nallocation.  That is, the check itself is valid and snd_BUG_ON()\nshould be dropped from there.  Otherwise it's confusing as if it were\na real bug, as recently syzbot stumbled on it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49775",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: cdg: allow tcp_cdg_release() to be called multiple times\n\nApparently, mptcp is able to call tcp_disconnect() on an already\ndisconnected flow. This is generally fine, unless current congestion\ncontrol is CDG, because it might trigger a double-free [1]\n\nInstead of fixing MPTCP, and future bugs, we can make tcp_disconnect()\nmore resilient.\n\n[1]\nBUG: KASAN: double-free in slab_free mm/slub.c:3539 [inline]\nBUG: KASAN: double-free in kfree+0xe2/0x580 mm/slub.c:4567\n\nCPU: 0 PID: 3645 Comm: kworker/0:7 Not tainted 6.0.0-syzkaller-02734-g0326074ff465 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/22/2022\nWorkqueue: events mptcp_worker\nCall Trace:\n\u003cTASK\u003e\n__dump_stack lib/dump_stack.c:88 [inline]\ndump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106\nprint_address_description mm/kasan/report.c:317 [inline]\nprint_report.cold+0x2ba/0x719 mm/kasan/report.c:433\nkasan_report_invalid_free+0x81/0x190 mm/kasan/report.c:462\n____kasan_slab_free+0x18b/0x1c0 mm/kasan/common.c:356\nkasan_slab_free include/linux/kasan.h:200 [inline]\nslab_free_hook mm/slub.c:1759 [inline]\nslab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1785\nslab_free mm/slub.c:3539 [inline]\nkfree+0xe2/0x580 mm/slub.c:4567\ntcp_disconnect+0x980/0x1e20 net/ipv4/tcp.c:3145\n__mptcp_close_ssk+0x5ca/0x7e0 net/mptcp/protocol.c:2327\nmptcp_do_fastclose net/mptcp/protocol.c:2592 [inline]\nmptcp_worker+0x78c/0xff0 net/mptcp/protocol.c:2627\nprocess_one_work+0x991/0x1610 kernel/workqueue.c:2289\nworker_thread+0x665/0x1080 kernel/workqueue.c:2436\nkthread+0x2e4/0x3a0 kernel/kthread.c:376\nret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n\u003c/TASK\u003e\n\nAllocated by task 3671:\nkasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\nkasan_set_track mm/kasan/common.c:45 [inline]\nset_alloc_info mm/kasan/common.c:437 [inline]\n____kasan_kmalloc mm/kasan/common.c:516 [inline]\n____kasan_kmalloc mm/kasan/common.c:475 [inline]\n__kasan_kmalloc+0xa9/0xd0 mm/kasan/common.c:525\nkmalloc_array include/linux/slab.h:640 [inline]\nkcalloc include/linux/slab.h:671 [inline]\ntcp_cdg_init+0x10d/0x170 net/ipv4/tcp_cdg.c:380\ntcp_init_congestion_control+0xab/0x550 net/ipv4/tcp_cong.c:193\ntcp_reinit_congestion_control net/ipv4/tcp_cong.c:217 [inline]\ntcp_set_congestion_control+0x96c/0xaa0 net/ipv4/tcp_cong.c:391\ndo_tcp_setsockopt+0x505/0x2320 net/ipv4/tcp.c:3513\ntcp_setsockopt+0xd4/0x100 net/ipv4/tcp.c:3801\nmptcp_setsockopt+0x35f/0x2570 net/mptcp/sockopt.c:844\n__sys_setsockopt+0x2d6/0x690 net/socket.c:2252\n__do_sys_setsockopt net/socket.c:2263 [inline]\n__se_sys_setsockopt net/socket.c:2260 [inline]\n__x64_sys_setsockopt+0xba/0x150 net/socket.c:2260\ndo_syscall_x64 arch/x86/entry/common.c:50 [inline]\ndo_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nFreed by task 16:\nkasan_save_stack+0x1e/0x40 mm/kasan/common.c:38\nkasan_set_track+0x21/0x30 mm/kasan/common.c:45\nkasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370\n____kasan_slab_free mm/kasan/common.c:367 [inline]\n____kasan_slab_free+0x166/0x1c0 mm/kasan/common.c:329\nkasan_slab_free include/linux/kasan.h:200 [inline]\nslab_free_hook mm/slub.c:1759 [inline]\nslab_free_freelist_hook+0x8b/0x1c0 mm/slub.c:1785\nslab_free mm/slub.c:3539 [inline]\nkfree+0xe2/0x580 mm/slub.c:4567\ntcp_cleanup_congestion_control+0x70/0x120 net/ipv4/tcp_cong.c:226\ntcp_v4_destroy_sock+0xdd/0x750 net/ipv4/tcp_ipv4.c:2254\ntcp_v6_destroy_sock+0x11/0x20 net/ipv6/tcp_ipv6.c:1969\ninet_csk_destroy_sock+0x196/0x440 net/ipv4/inet_connection_sock.c:1157\ntcp_done+0x23b/0x340 net/ipv4/tcp.c:4649\ntcp_rcv_state_process+0x40e7/0x4990 net/ipv4/tcp_input.c:6624\ntcp_v6_do_rcv+0x3fc/0x13c0 net/ipv6/tcp_ipv6.c:1525\ntcp_v6_rcv+0x2e8e/0x3830 net/ipv6/tcp_ipv6.c:1759\nip6_protocol_deliver_rcu+0x2db/0x1950 net/ipv6/ip6_input.c:439\nip6_input_finish+0x14c/0x2c0 net/ipv6/ip6_input.c:484\nNF_HOOK include/linux/netfilter.h:302 [inline]\nNF_HOOK include/linux/netfilter.h:296 [inline]\nip6_input+0x9c/0xd\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49776",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmacvlan: enforce a consistent minimal mtu\n\nmacvlan should enforce a minimal mtu of 68, even at link creation.\n\nThis patch avoids the current behavior (which could lead to crashes\nin ipv6 stack if the link is brought up)\n\n$ ip link add macvlan1 link eno1 mtu 8 type macvlan  # This should fail !\n$ ip link sh dev macvlan1\n5: macvlan1@eno1: \u003cBROADCAST,MULTICAST\u003e mtu 8 qdisc noop\n    state DOWN mode DEFAULT group default qlen 1000\n    link/ether 02:47:6c:24:74:82 brd ff:ff:ff:ff:ff:ff\n$ ip link set macvlan1 mtu 67\nError: mtu less than device minimum.\n$ ip link set macvlan1 mtu 68\n$ ip link set macvlan1 mtu 8\nError: mtu less than device minimum.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49777",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: i8042 - fix leaking of platform device on module removal\n\nAvoid resetting the module-wide i8042_platform_device pointer in\ni8042_probe() or i8042_remove(), so that the device can be properly\ndestroyed by i8042_exit() on module unload.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49779",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Skip clearing aggrprobe's post_handler in kprobe-on-ftrace case\n\nIn __unregister_kprobe_top(), if the currently unregistered probe has\npost_handler but other child probes of the aggrprobe do not have\npost_handler, the post_handler of the aggrprobe is cleared. If this is\na ftrace-based probe, there is a problem. In later calls to\ndisarm_kprobe(), we will use kprobe_ftrace_ops because post_handler is\nNULL. But we're armed with kprobe_ipmodify_ops. This triggers a WARN in\n__disarm_kprobe_ftrace() and may even cause use-after-free:\n\n  Failed to disarm kprobe-ftrace at kernel_clone+0x0/0x3c0 (error -2)\n  WARNING: CPU: 5 PID: 137 at kernel/kprobes.c:1135 __disarm_kprobe_ftrace.isra.21+0xcf/0xe0\n  Modules linked in: testKprobe_007(-)\n  CPU: 5 PID: 137 Comm: rmmod Not tainted 6.1.0-rc4-dirty #18\n  [...]\n  Call Trace:\n   \u003cTASK\u003e\n   __disable_kprobe+0xcd/0xe0\n   __unregister_kprobe_top+0x12/0x150\n   ? mutex_lock+0xe/0x30\n   unregister_kprobes.part.23+0x31/0xa0\n   unregister_kprobe+0x32/0x40\n   __x64_sys_delete_module+0x15e/0x260\n   ? do_user_addr_fault+0x2cd/0x6b0\n   do_syscall_64+0x3a/0x90\n   entry_SYSCALL_64_after_hwframe+0x63/0xcd\n   [...]\n\nFor the kprobe-on-ftrace case, we keep the post_handler setting to\nidentify this aggrprobe armed with kprobe_ipmodify_ops. This way we\ncan disarm it correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49783",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/fpu: Drop fpregs lock before inheriting FPU permissions\n\nMike Galbraith reported the following against an old fork of preempt-rt\nbut the same issue also applies to the current preempt-rt tree.\n\n   BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:46\n   in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: systemd\n   preempt_count: 1, expected: 0\n   RCU nest depth: 0, expected: 0\n   Preemption disabled at:\n   fpu_clone\n   CPU: 6 PID: 1 Comm: systemd Tainted: G            E       (unreleased)\n   Call Trace:\n    \u003cTASK\u003e\n    dump_stack_lvl\n    ? fpu_clone\n    __might_resched\n    rt_spin_lock\n    fpu_clone\n    ? copy_thread\n    ? copy_process\n    ? shmem_alloc_inode\n    ? kmem_cache_alloc\n    ? kernel_clone\n    ? __do_sys_clone\n    ? do_syscall_64\n    ? __x64_sys_rt_sigprocmask\n    ? syscall_exit_to_user_mode\n    ? do_syscall_64\n    ? syscall_exit_to_user_mode\n    ? do_syscall_64\n    ? syscall_exit_to_user_mode\n    ? do_syscall_64\n    ? exc_page_fault\n    ? entry_SYSCALL_64_after_hwframe\n    \u003c/TASK\u003e\n\nMike says:\n\n  The splat comes from fpu_inherit_perms() being called under fpregs_lock(),\n  and us reaching the spin_lock_irq() therein due to fpu_state_size_dynamic()\n  returning true despite static key __fpu_state_size_dynamic having never\n  been enabled.\n\nMike's assessment looks correct. fpregs_lock on a PREEMPT_RT kernel disables\npreemption so calling spin_lock_irq() in fpu_inherit_perms() is unsafe. This\nproblem exists since commit\n\n  9e798e9aa14c (\"x86/fpu: Prepare fpu_clone() for dynamically enabled features\").\n\nEven though the original bug report should not have enabled the paths at\nall, the bug still exists.\n\nfpregs_lock is necessary when editing the FPU registers or a task's FP\nstate but it is not necessary for fpu_inherit_perms(). The only write\nof any FP state in fpu_inherit_perms() is for the new child which is\nnot running yet and cannot context switch or be borrowed by a kernel\nthread yet. Hence, fpregs_lock is not protecting anything in the new\nchild until clone() completes and can be dropped earlier. The siglock\nstill needs to be acquired by fpu_inherit_perms() as the read of the\nparent's permissions has to be serialised.\n\n  [ bp: Cleanup splat. ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49787",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdhci-pci: Fix possible memory leak caused by missing pci_dev_put()\n\npci_get_device() will increase the reference count for the returned\npci_dev. We need to use pci_dev_put() to decrease the reference count\nbefore amd_probe() returns. There is no problem for the 'smbus_dev ==\nNULL' branch because pci_dev_put() can also handle the NULL input\nparameter case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49788",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc/vmw_vmci: fix an infoleak in vmci_host_do_receive_datagram()\n\n`struct vmci_event_qp` allocated by qp_notify_peer() contains padding,\nwhich may carry uninitialized data to the userspace, as observed by\nKMSAN:\n\n  BUG: KMSAN: kernel-infoleak in instrument_copy_to_user ./include/linux/instrumented.h:121\n   instrument_copy_to_user ./include/linux/instrumented.h:121\n   _copy_to_user+0x5f/0xb0 lib/usercopy.c:33\n   copy_to_user ./include/linux/uaccess.h:169\n   vmci_host_do_receive_datagram drivers/misc/vmw_vmci/vmci_host.c:431\n   vmci_host_unlocked_ioctl+0x33d/0x43d0 drivers/misc/vmw_vmci/vmci_host.c:925\n   vfs_ioctl fs/ioctl.c:51\n  ...\n\n  Uninit was stored to memory at:\n   kmemdup+0x74/0xb0 mm/util.c:131\n   dg_dispatch_as_host drivers/misc/vmw_vmci/vmci_datagram.c:271\n   vmci_datagram_dispatch+0x4f8/0xfc0 drivers/misc/vmw_vmci/vmci_datagram.c:339\n   qp_notify_peer+0x19a/0x290 drivers/misc/vmw_vmci/vmci_queue_pair.c:1479\n   qp_broker_attach drivers/misc/vmw_vmci/vmci_queue_pair.c:1662\n   qp_broker_alloc+0x2977/0x2f30 drivers/misc/vmw_vmci/vmci_queue_pair.c:1750\n   vmci_qp_broker_alloc+0x96/0xd0 drivers/misc/vmw_vmci/vmci_queue_pair.c:1940\n   vmci_host_do_alloc_queuepair drivers/misc/vmw_vmci/vmci_host.c:488\n   vmci_host_unlocked_ioctl+0x24fd/0x43d0 drivers/misc/vmw_vmci/vmci_host.c:927\n  ...\n\n  Local variable ev created at:\n   qp_notify_peer+0x54/0x290 drivers/misc/vmw_vmci/vmci_queue_pair.c:1456\n   qp_broker_attach drivers/misc/vmw_vmci/vmci_queue_pair.c:1662\n   qp_broker_alloc+0x2977/0x2f30 drivers/misc/vmw_vmci/vmci_queue_pair.c:1750\n\n  Bytes 28-31 of 48 are uninitialized\n  Memory access of size 48 starts at ffff888035155e00\n  Data copied to user address 0000000020000100\n\nUse memset() to prevent the infoleaks.\n\nAlso speculatively fix qp_notify_peer_local(), which may suffer from the\nsame problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: zfcp: Fix double free of FSF request when qdio send fails\n\nWe used to use the wrong type of integer in 'zfcp_fsf_req_send()' to cache\nthe FSF request ID when sending a new FSF request. This is used in case the\nsending fails and we need to remove the request from our internal hash\ntable again (so we don't keep an invalid reference and use it when we free\nthe request again).\n\nIn 'zfcp_fsf_req_send()' we used to cache the ID as 'int' (signed and 32\nbit wide), but the rest of the zfcp code (and the firmware specification)\nhandles the ID as 'unsigned long'/'u64' (unsigned and 64 bit wide [s390x\nELF ABI]).  For one this has the obvious problem that when the ID grows\npast 32 bit (this can happen reasonably fast) it is truncated to 32 bit\nwhen storing it in the cache variable and so doesn't match the original ID\nanymore.  The second less obvious problem is that even when the original ID\nhas not yet grown past 32 bit, as soon as the 32nd bit is set in the\noriginal ID (0x80000000 = 2'147'483'648) we will have a mismatch when we\ncast it back to 'unsigned long'. As the cached variable is of a signed\ntype, the compiler will choose a sign-extending instruction to load the 32\nbit variable into a 64 bit register (e.g.: 'lgf %r11,188(%r15)'). So once\nwe pass the cached variable into 'zfcp_reqlist_find_rm()' to remove the\nrequest again all the leading zeros will be flipped to ones to extend the\nsign and won't match the original ID anymore (this has been observed in\npractice).\n\nIf we can't successfully remove the request from the hash table again after\n'zfcp_qdio_send()' fails (this happens regularly when zfcp cannot notify\nthe adapter about new work because the adapter is already gone during\ne.g. a ChpID toggle) we will end up with a double free.  We unconditionally\nfree the request in the calling function when 'zfcp_fsf_req_send()' fails,\nbut because the request is still in the hash table we end up with a stale\nmemory reference, and once the zfcp adapter is either reset during recovery\nor shutdown we end up freeing the same memory twice.\n\nThe resulting stack traces vary depending on the kernel and have no direct\ncorrelation to the place where the bug occurs. Here are three examples that\nhave been seen in practice:\n\n  list_del corruption. next-\u003eprev should be 00000001b9d13800, but was 00000000dead4ead. (next=00000001bd131a00)\n  ------------[ cut here ]------------\n  kernel BUG at lib/list_debug.c:62!\n  monitor event: 0040 ilc:2 [#1] PREEMPT SMP\n  Modules linked in: ...\n  CPU: 9 PID: 1617 Comm: zfcperp0.0.1740 Kdump: loaded\n  Hardware name: ...\n  Krnl PSW : 0704d00180000000 00000003cbeea1f8 (__list_del_entry_valid+0x98/0x140)\n             R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:1 PM:0 RI:0 EA:3\n  Krnl GPRS: 00000000916d12f1 0000000080000000 000000000000006d 00000003cb665cd6\n             0000000000000001 0000000000000000 0000000000000000 00000000d28d21e8\n             00000000d3844000 00000380099efd28 00000001bd131a00 00000001b9d13800\n             00000000d3290100 0000000000000000 00000003cbeea1f4 00000380099efc70\n  Krnl Code: 00000003cbeea1e8: c020004f68a7        larl    %r2,00000003cc8d7336\n             00000003cbeea1ee: c0e50027fd65        brasl   %r14,00000003cc3e9cb8\n            #00000003cbeea1f4: af000000            mc      0,0\n            \u003e00000003cbeea1f8: c02000920440        larl    %r2,00000003cd12aa78\n             00000003cbeea1fe: c0e500289c25        brasl   %r14,00000003cc3fda48\n             00000003cbeea204: b9040043            lgr     %r4,%r3\n             00000003cbeea208: b9040051            lgr     %r5,%r1\n             00000003cbeea20c: b9040032            lgr     %r3,%r2\n  Call Trace:\n   [\u003c00000003cbeea1f8\u003e] __list_del_entry_valid+0x98/0x140\n  ([\u003c00000003cbeea1f4\u003e] __list_del_entry_valid+0x94/0x140)\n   [\u003c000003ff7ff502fe\u003e] zfcp_fsf_req_dismiss_all+0xde/0x150 [zfcp]\n   [\u003c000003ff7ff49cd0\u003e] zfcp_erp_strategy_do_action+0x160/0x280 [zfcp]\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49790",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: iforce - invert valid length check when fetching device IDs\n\nsyzbot is reporting uninitialized value at iforce_init_device() [1], for\ncommit 6ac0aec6b0a6 (\"Input: iforce - allow callers supply data buffer\nwhen fetching device IDs\") is checking that valid length is shorter than\nbytes to read. Since iforce_get_id_packet() stores valid length when\nreturning 0, the caller needs to check that valid length is longer than or\nequals to bytes to read.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: mp2629: fix potential array out of bound access\n\nAdd sentinel at end of maps to avoid potential array out of\nbound access in iio core.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49793",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: trigger: sysfs: fix possible memory leak in iio_sysfs_trig_init()\n\ndev_set_name() allocates memory for name, it need be freed\nwhen device_add() fails, call put_device() to give up the\nreference that hold in device_initialize(), so that it can\nbe freed in kobject_cleanup() when the refcount hit to 0.\n\nFault injection test can trigger this:\n\nunreferenced object 0xffff8e8340a7b4c0 (size 32):\n  comm \"modprobe\", pid 243, jiffies 4294678145 (age 48.845s)\n  hex dump (first 32 bytes):\n    69 69 6f 5f 73 79 73 66 73 5f 74 72 69 67 67 65  iio_sysfs_trigge\n    72 00 a7 40 83 8e ff ff 00 86 13 c4 f6 ee ff ff  r..@............\n  backtrace:\n    [\u003c0000000074999de8\u003e] __kmem_cache_alloc_node+0x1e9/0x360\n    [\u003c00000000497fd30b\u003e] __kmalloc_node_track_caller+0x44/0x1a0\n    [\u003c000000003636c520\u003e] kstrdup+0x2d/0x60\n    [\u003c0000000032f84da2\u003e] kobject_set_name_vargs+0x1e/0x90\n    [\u003c0000000092efe493\u003e] dev_set_name+0x4e/0x70",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: at91_adc: fix possible memory leak in at91_adc_allocate_trigger()\n\nIf iio_trigger_register() returns error, it should call iio_trigger_free()\nto give up the reference that hold in iio_trigger_alloc(), so that it can\ncall iio_trig_release() to free memory when the refcount hit to 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49796",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: kprobe: Fix potential null-ptr-deref on trace_array in kprobe_event_gen_test_exit()\n\nWhen test_gen_kprobe_cmd() failed after kprobe_event_gen_cmd_end(), it\nwill goto delete, which will call kprobe_event_delete() and release the\ncorresponding resource. However, the trace_array in gen_kretprobe_test\nwill point to the invalid resource. Set gen_kretprobe_test to NULL\nafter called kprobe_event_delete() to prevent null-ptr-deref.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000070\nPGD 0 P4D 0\nOops: 0000 [#1] SMP PTI\nCPU: 0 PID: 246 Comm: modprobe Tainted: G        W\n6.1.0-rc1-00174-g9522dc5c87da-dirty #248\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014\nRIP: 0010:__ftrace_set_clr_event_nolock+0x53/0x1b0\nCode: e8 82 26 fc ff 49 8b 1e c7 44 24 0c ea ff ff ff 49 39 de 0f 84 3c\n01 00 00 c7 44 24 18 00 00 00 00 e8 61 26 fc ff 48 8b 6b 10 \u003c44\u003e 8b 65\n70 4c 8b 6d 18 41 f7 c4 00 02 00 00 75 2f\nRSP: 0018:ffffc9000159fe00 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: ffff88810971d268 RCX: 0000000000000000\nRDX: ffff8881080be600 RSI: ffffffff811b48ff RDI: ffff88810971d058\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000001\nR10: ffffc9000159fe58 R11: 0000000000000001 R12: ffffffffa0001064\nR13: ffffffffa000106c R14: ffff88810971d238 R15: 0000000000000000\nFS:  00007f89eeff6540(0000) GS:ffff88813b600000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000070 CR3: 000000010599e004 CR4: 0000000000330ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n __ftrace_set_clr_event+0x3e/0x60\n trace_array_set_clr_event+0x35/0x50\n ? 0xffffffffa0000000\n kprobe_event_gen_test_exit+0xcd/0x10b [kprobe_event_gen_test]\n __x64_sys_delete_module+0x206/0x380\n ? lockdep_hardirqs_on_prepare+0xd8/0x190\n ? syscall_enter_from_user_mode+0x1c/0x50\n do_syscall_64+0x3f/0x90\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7f89eeb061b7",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49797",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: kprobe: Fix potential null-ptr-deref on trace_event_file in kprobe_event_gen_test_exit()\n\nWhen trace_get_event_file() failed, gen_kretprobe_test will be assigned\nas the error code. If module kprobe_event_gen_test is removed now, the\nnull pointer dereference will happen in kprobe_event_gen_test_exit().\nCheck if gen_kprobe_test or gen_kretprobe_test is error code or NULL\nbefore dereference them.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000012\nPGD 0 P4D 0\nOops: 0000 [#1] SMP PTI\nCPU: 3 PID: 2210 Comm: modprobe Not tainted\n6.1.0-rc1-00171-g2159299a3b74-dirty #217\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014\nRIP: 0010:kprobe_event_gen_test_exit+0x1c/0xb5 [kprobe_event_gen_test]\nCode: Unable to access opcode bytes at 0xffffffff9ffffff2.\nRSP: 0018:ffffc900015bfeb8 EFLAGS: 00010246\nRAX: ffffffffffffffea RBX: ffffffffa0002080 RCX: 0000000000000000\nRDX: ffffffffa0001054 RSI: ffffffffa0001064 RDI: ffffffffdfc6349c\nRBP: ffffffffa0000000 R08: 0000000000000004 R09: 00000000001e95c0\nR10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000800\nR13: ffffffffa0002420 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007f56b75be540(0000) GS:ffff88813bc00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffff9ffffff2 CR3: 000000010874a006 CR4: 0000000000330ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n __x64_sys_delete_module+0x206/0x380\n ? lockdep_hardirqs_on_prepare+0xd8/0x190\n ? syscall_enter_from_user_mode+0x1c/0x50\n do_syscall_64+0x3f/0x90\n entry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49799",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix wild-memory-access in register_synth_event()\n\nIn register_synth_event(), if set_synth_event_print_fmt() failed, then\nboth trace_remove_event_call() and unregister_trace_event() will be\ncalled, which means the trace_event_call will call\n__unregister_trace_event() twice. As the result, the second unregister\nwill causes the wild-memory-access.\n\nregister_synth_event\n    set_synth_event_print_fmt failed\n    trace_remove_event_call\n        event_remove\n            if call-\u003eevent.funcs then\n            __unregister_trace_event (first call)\n    unregister_trace_event\n        __unregister_trace_event (second call)\n\nFix the bug by avoiding to call the second __unregister_trace_event() by\nchecking if the first one is called.\n\ngeneral protection fault, probably for non-canonical address\n\t0xfbd59c0000000024: 0000 [#1] SMP KASAN PTI\nKASAN: maybe wild-memory-access in range\n[0xdead000000000120-0xdead000000000127]\nCPU: 0 PID: 3807 Comm: modprobe Not tainted\n6.1.0-rc1-00186-g76f33a7eedb4 #299\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014\nRIP: 0010:unregister_trace_event+0x6e/0x280\nCode: 00 fc ff df 4c 89 ea 48 c1 ea 03 80 3c 02 00 0f 85 0e 02 00 00 48\nb8 00 00 00 00 00 fc ff df 4c 8b 63 08 4c 89 e2 48 c1 ea 03 \u003c80\u003e 3c 02\n00 0f 85 e2 01 00 00 49 89 2c 24 48 85 ed 74 28 e8 7a 9b\nRSP: 0018:ffff88810413f370 EFLAGS: 00010a06\nRAX: dffffc0000000000 RBX: ffff888105d050b0 RCX: 0000000000000000\nRDX: 1bd5a00000000024 RSI: ffff888119e276e0 RDI: ffffffff835a8b20\nRBP: dead000000000100 R08: 0000000000000000 R09: fffffbfff0913481\nR10: ffffffff8489a407 R11: fffffbfff0913480 R12: dead000000000122\nR13: ffff888105d050b8 R14: 0000000000000000 R15: ffff888105d05028\nFS:  00007f7823e8d540(0000) GS:ffff888119e00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f7823e7ebec CR3: 000000010a058002 CR4: 0000000000330ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n __create_synth_event+0x1e37/0x1eb0\n create_or_delete_synth_event+0x110/0x250\n synth_event_run_command+0x2f/0x110\n test_gen_synth_cmd+0x170/0x2eb [synth_event_gen_test]\n synth_event_gen_test_init+0x76/0x9bc [synth_event_gen_test]\n do_one_initcall+0xdb/0x480\n do_init_module+0x1cf/0x680\n load_module+0x6a50/0x70a0\n __do_sys_finit_module+0x12f/0x1c0\n do_syscall_64+0x3f/0x90\n entry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix memory leak in test_gen_synth_cmd() and test_empty_synth_event()\n\ntest_gen_synth_cmd() only free buf in fail path, hence buf will leak\nwhen there is no failure. Add kfree(buf) to prevent the memleak. The\nsame reason and solution in test_empty_synth_event().\n\nunreferenced object 0xffff8881127de000 (size 2048):\n  comm \"modprobe\", pid 247, jiffies 4294972316 (age 78.756s)\n  hex dump (first 32 bytes):\n    20 67 65 6e 5f 73 79 6e 74 68 5f 74 65 73 74 20   gen_synth_test\n    20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69 64 5f   pid_t next_pid_\n  backtrace:\n    [\u003c000000004254801a\u003e] kmalloc_trace+0x26/0x100\n    [\u003c0000000039eb1cf5\u003e] 0xffffffffa00083cd\n    [\u003c000000000e8c3bc8\u003e] 0xffffffffa00086ba\n    [\u003c00000000c293d1ea\u003e] do_one_initcall+0xdb/0x480\n    [\u003c00000000aa189e6d\u003e] do_init_module+0x1cf/0x680\n    [\u003c00000000d513222b\u003e] load_module+0x6a50/0x70a0\n    [\u003c000000001fd4d529\u003e] __do_sys_finit_module+0x12f/0x1c0\n    [\u003c00000000b36c4c0f\u003e] do_syscall_64+0x3f/0x90\n    [\u003c00000000bbf20cf3\u003e] entry_SYSCALL_64_after_hwframe+0x63/0xcd\nunreferenced object 0xffff8881127df000 (size 2048):\n  comm \"modprobe\", pid 247, jiffies 4294972324 (age 78.728s)\n  hex dump (first 32 bytes):\n    20 65 6d 70 74 79 5f 73 79 6e 74 68 5f 74 65 73   empty_synth_tes\n    74 20 20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69  t  pid_t next_pi\n  backtrace:\n    [\u003c000000004254801a\u003e] kmalloc_trace+0x26/0x100\n    [\u003c00000000d4db9a3d\u003e] 0xffffffffa0008071\n    [\u003c00000000c31354a5\u003e] 0xffffffffa00086ce\n    [\u003c00000000c293d1ea\u003e] do_one_initcall+0xdb/0x480\n    [\u003c00000000aa189e6d\u003e] do_init_module+0x1cf/0x680\n    [\u003c00000000d513222b\u003e] load_module+0x6a50/0x70a0\n    [\u003c000000001fd4d529\u003e] __do_sys_finit_module+0x12f/0x1c0\n    [\u003c00000000b36c4c0f\u003e] do_syscall_64+0x3f/0x90\n    [\u003c00000000bbf20cf3\u003e] entry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49801",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix memory leak in tracing_read_pipe()\n\nkmemleak reports this issue:\n\nunreferenced object 0xffff888105a18900 (size 128):\n  comm \"test_progs\", pid 18933, jiffies 4336275356 (age 22801.766s)\n  hex dump (first 32 bytes):\n    25 73 00 90 81 88 ff ff 26 05 00 00 42 01 58 04  %s......\u0026...B.X.\n    03 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c00000000560143a1\u003e] __kmalloc_node_track_caller+0x4a/0x140\n    [\u003c000000006af00822\u003e] krealloc+0x8d/0xf0\n    [\u003c00000000c309be6a\u003e] trace_iter_expand_format+0x99/0x150\n    [\u003c000000005a53bdb6\u003e] trace_check_vprintf+0x1e0/0x11d0\n    [\u003c0000000065629d9d\u003e] trace_event_printf+0xb6/0xf0\n    [\u003c000000009a690dc7\u003e] trace_raw_output_bpf_trace_printk+0x89/0xc0\n    [\u003c00000000d22db172\u003e] print_trace_line+0x73c/0x1480\n    [\u003c00000000cdba76ba\u003e] tracing_read_pipe+0x45c/0x9f0\n    [\u003c0000000015b58459\u003e] vfs_read+0x17b/0x7c0\n    [\u003c000000004aeee8ed\u003e] ksys_read+0xed/0x1c0\n    [\u003c0000000063d3d898\u003e] do_syscall_64+0x3b/0x90\n    [\u003c00000000a06dda7f\u003e] entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\niter-\u003efmt alloced in\n  tracing_read_pipe() -\u003e .. -\u003etrace_iter_expand_format(), but not\nfreed, to fix, add free in tracing_release_pipe()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49802",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix null pointer dereference in ftrace_add_mod()\n\nThe @ftrace_mod is allocated by kzalloc(), so both the members {prev,next}\nof @ftrace_mode-\u003elist are NULL, it's not a valid state to call list_del().\nIf kstrdup() for @ftrace_mod-\u003e{func|module} fails, it goes to @out_free\ntag and calls free_ftrace_mod() to destroy @ftrace_mod, then list_del()\nwill write prev-\u003enext and next-\u003eprev, where null pointer dereference\nhappens.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nOops: 0002 [#1] PREEMPT SMP NOPTI\nCall Trace:\n \u003cTASK\u003e\n ftrace_mod_callback+0x20d/0x220\n ? do_filp_open+0xd9/0x140\n ftrace_process_regex.isra.51+0xbf/0x130\n ftrace_regex_write.isra.52.part.53+0x6e/0x90\n vfs_write+0xee/0x3a0\n ? __audit_filter_op+0xb1/0x100\n ? auditd_test_task+0x38/0x50\n ksys_write+0xa5/0xe0\n do_syscall_64+0x3a/0x90\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\nKernel panic - not syncing: Fatal exception\n\nSo call INIT_LIST_HEAD() to initialize the list member to fix this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49807",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: fix a memory leak in nvmet_auth_set_key\n\nWhen changing dhchap secrets we need to release the old\nsecrets as well.\n\nkmemleak complaint:\n--\nunreferenced object 0xffff8c7f44ed8180 (size 64):\n  comm \"check\", pid 7304, jiffies 4295686133 (age 72034.246s)\n  hex dump (first 32 bytes):\n    44 48 48 43 2d 31 3a 30 30 3a 4c 64 4c 4f 64 71  DHHC-1:00:LdLOdq\n    79 56 69 67 77 48 55 32 6d 5a 59 4c 7a 35 59 38  yVigwHU2mZYLz5Y8\n  backtrace:\n    [\u003c00000000b6fc5071\u003e] kstrdup+0x2e/0x60\n    [\u003c00000000f0f4633f\u003e] 0xffffffffc0e07ee6\n    [\u003c0000000053006c05\u003e] 0xffffffffc0dff783\n    [\u003c00000000419ae922\u003e] configfs_write_iter+0xb1/0x120\n    [\u003c000000008183c424\u003e] vfs_write+0x2be/0x3c0\n    [\u003c000000009005a2a5\u003e] ksys_write+0x5f/0xe0\n    [\u003c00000000cd495c89\u003e] do_syscall_64+0x38/0x90\n    [\u003c00000000f2a84ac5\u003e] entry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49809",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/x25: Fix skb leak in x25_lapb_receive_frame()\n\nx25_lapb_receive_frame() using skb_copy() to get a private copy of\nskb, the new skb should be freed in the undersized/fragmented skb\nerror handling path. Otherwise there is a memory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49810",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix missing xas_retry() calls in xarray iteration\n\nnetfslib has a number of places in which it performs iteration of an xarray\nwhilst being under the RCU read lock.  It *should* call xas_retry() as the\nfirst thing inside of the loop and do \"continue\" if it returns true in case\nthe xarray walker passed out a special value indicating that the walk needs\nto be redone from the root[*].\n\nFix this by adding the missing retry checks.\n\n[*] I wonder if this should be done inside xas_find(), xas_next_node() and\n    suchlike, but I'm told that's not an simple change to effect.\n\nThis can cause an oops like that below.  Note the faulting address - this\nis an internal value (|0x2) returned from xarray.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000402\n...\nRIP: 0010:netfs_rreq_unlock+0xef/0x380 [netfs]\n...\nCall Trace:\n netfs_rreq_assess+0xa6/0x240 [netfs]\n netfs_readpage+0x173/0x3b0 [netfs]\n ? init_wait_var_entry+0x50/0x50\n filemap_read_page+0x33/0xf0\n filemap_get_pages+0x2f2/0x3f0\n filemap_read+0xaa/0x320\n ? do_filp_open+0xb2/0x150\n ? rmqueue+0x3be/0xe10\n ceph_read_iter+0x1fe/0x680 [ceph]\n ? new_sync_read+0x115/0x1a0\n new_sync_read+0x115/0x1a0\n vfs_read+0xf3/0x180\n ksys_read+0x5f/0xe0\n do_syscall_64+0x38/0x90\n entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nChanges:\n========\nver #2)\n - Changed an unsigned int to a size_t to reduce the likelihood of an\n   overflow as per Willy's suggestion.\n - Added an additional patch to fix the maths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49812",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbridge: switchdev: Fix memory leaks when changing VLAN protocol\n\nThe bridge driver can offload VLANs to the underlying hardware either\nvia switchdev or the 8021q driver. When the former is used, the VLAN is\nmarked in the bridge driver with the 'BR_VLFLAG_ADDED_BY_SWITCHDEV'\nprivate flag.\n\nTo avoid the memory leaks mentioned in the cited commit, the bridge\ndriver will try to delete a VLAN via the 8021q driver if the VLAN is not\nmarked with the previously mentioned flag.\n\nWhen the VLAN protocol of the bridge changes, switchdev drivers are\nnotified via the 'SWITCHDEV_ATTR_ID_BRIDGE_VLAN_PROTOCOL' attribute, but\nthe 8021q driver is also called to add the existing VLANs with the new\nprotocol and delete them with the old protocol.\n\nIn case the VLANs were offloaded via switchdev, the above behavior is\nboth redundant and buggy. Redundant because the VLANs are already\nprogrammed in hardware and drivers that support VLAN protocol change\n(currently only mlx5) change the protocol upon the switchdev attribute\nnotification. Buggy because the 8021q driver is called despite these\nVLANs being marked with 'BR_VLFLAG_ADDED_BY_SWITCHDEV'. This leads to\nmemory leaks [1] when the VLANs are deleted.\n\nFix by not calling the 8021q driver for VLANs that were already\nprogrammed via switchdev.\n\n[1]\nunreferenced object 0xffff8881f6771200 (size 256):\n  comm \"ip\", pid 446855, jiffies 4298238841 (age 55.240s)\n  hex dump (first 32 bytes):\n    00 00 7f 0e 83 88 ff ff 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003c00000000012819ac\u003e] vlan_vid_add+0x437/0x750\n    [\u003c00000000f2281fad\u003e] __br_vlan_set_proto+0x289/0x920\n    [\u003c000000000632b56f\u003e] br_changelink+0x3d6/0x13f0\n    [\u003c0000000089d25f04\u003e] __rtnl_newlink+0x8ae/0x14c0\n    [\u003c00000000f6276baf\u003e] rtnl_newlink+0x5f/0x90\n    [\u003c00000000746dc902\u003e] rtnetlink_rcv_msg+0x336/0xa00\n    [\u003c000000001c2241c0\u003e] netlink_rcv_skb+0x11d/0x340\n    [\u003c0000000010588814\u003e] netlink_unicast+0x438/0x710\n    [\u003c00000000e1a4cd5c\u003e] netlink_sendmsg+0x788/0xc40\n    [\u003c00000000e8992d4e\u003e] sock_sendmsg+0xb0/0xe0\n    [\u003c00000000621b8f91\u003e] ____sys_sendmsg+0x4ff/0x6d0\n    [\u003c000000000ea26996\u003e] ___sys_sendmsg+0x12e/0x1b0\n    [\u003c00000000684f7e25\u003e] __sys_sendmsg+0xab/0x130\n    [\u003c000000004538b104\u003e] do_syscall_64+0x3d/0x90\n    [\u003c0000000091ed9678\u003e] entry_SYSCALL_64_after_hwframe+0x46/0xb0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49813",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix error handling in ena_init()\n\nThe ena_init() won't destroy workqueue created by\ncreate_singlethread_workqueue() when pci_register_driver() failed.\nCall destroy_workqueue() when pci_register_driver() failed to prevent the\nresource leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49818",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix misuse of put_device() in mISDN_register_device()\n\nWe should not release reference by put_device() before calling device_initialize().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49821",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix possible memory leak in mISDN_dsp_element_register()\n\nAfer commit 1fa5ae857bb1 (\"driver core: get rid of struct device's\nbus_id string array\"), the name of device is allocated dynamically,\nuse put_device() to give up the reference, so that the name can be\nfreed in kobject_cleanup() when the refcount is 0.\n\nThe 'entry' is going to be freed in mISDN_dsp_dev_release(), so the\nkfree() is removed. list_del() is called in mISDN_dsp_dev_release(),\nso it need be initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49822",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix connections leak when tlink setup failed\n\nIf the tlink setup failed, lost to put the connections, then\nthe module refcnt leak since the cifsd kthread not exit.\n\nAlso leak the fscache info, and for next mount with fsc, it will\nprint the follow errors:\n  CIFS: Cache volume key already in use (cifs,127.0.0.1:445,TEST)\n\nLet's check the result of tlink setup, and do some cleanup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49823",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix error handling in ata_tdev_add()\n\nIn ata_tdev_add(), the return value of transport_add_device() is\nnot checked. As a result, it causes null-ptr-deref while removing\nthe module, because transport_remove_device() is called to remove\nthe device that was not added.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\nCPU: 13 PID: 13603 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc3+ #36\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x48/0x3a0\nlr : device_del+0x44/0x3a0\nCall trace:\n device_del+0x48/0x3a0\n attribute_container_class_device_del+0x28/0x40\n transport_remove_classdev+0x60/0x7c\n attribute_container_device_trigger+0x118/0x120\n transport_remove_device+0x20/0x30\n ata_tdev_delete+0x24/0x50 [libata]\n ata_tlink_delete+0x40/0xa0 [libata]\n ata_tport_delete+0x2c/0x60 [libata]\n ata_port_detach+0x148/0x1b0 [libata]\n ata_pci_remove_one+0x50/0x80 [libata]\n ahci_remove_one+0x4c/0x8c [ahci]\n\nFix this by checking and handling return value of transport_add_device()\nin ata_tdev_add(). In the error path, device_del() is called to delete\nthe device which was added earlier in this function, and ata_tdev_free()\nis called to free ata_dev.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49824",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix error handling in ata_tlink_add()\n\nIn ata_tlink_add(), the return value of transport_add_device() is\nnot checked. As a result, it causes null-ptr-deref while removing\nthe module, because transport_remove_device() is called to remove\nthe device that was not added.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\nCPU: 33 PID: 13850 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc3+ #12\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x48/0x39c\nlr : device_del+0x44/0x39c\nCall trace:\n device_del+0x48/0x39c\n attribute_container_class_device_del+0x28/0x40\n transport_remove_classdev+0x60/0x7c\n attribute_container_device_trigger+0x118/0x120\n transport_remove_device+0x20/0x30\n ata_tlink_delete+0x88/0xb0 [libata]\n ata_tport_delete+0x2c/0x60 [libata]\n ata_port_detach+0x148/0x1b0 [libata]\n ata_pci_remove_one+0x50/0x80 [libata]\n ahci_remove_one+0x4c/0x8c [ahci]\n\nFix this by checking and handling return value of transport_add_device()\nin ata_tlink_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49825",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix error handling in ata_tport_add()\n\nIn ata_tport_add(), the return value of transport_add_device() is\nnot checked. As a result, it causes null-ptr-deref while removing\nthe module, because transport_remove_device() is called to remove\nthe device that was not added.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\nCPU: 12 PID: 13605 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc3+ #8\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x48/0x39c\nlr : device_del+0x44/0x39c\nCall trace:\n device_del+0x48/0x39c\n attribute_container_class_device_del+0x28/0x40\n transport_remove_classdev+0x60/0x7c\n attribute_container_device_trigger+0x118/0x120\n transport_remove_device+0x20/0x30\n ata_tport_delete+0x34/0x60 [libata]\n ata_port_detach+0x148/0x1b0 [libata]\n ata_pci_remove_one+0x50/0x80 [libata]\n ahci_remove_one+0x4c/0x8c [ahci]\n\nFix this by checking and handling return value of transport_add_device()\nin ata_tport_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49826",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix double ata_host_put() in ata_tport_add()\n\nIn the error path in ata_tport_add(), when calling put_device(),\nata_tport_release() is called, it will put the refcount of 'ap-\u003ehost'.\n\nAnd then ata_host_put() is called again, the refcount is decreased\nto 0, ata_host_release() is called, all ports are freed and set to\nnull.\n\nWhen unbinding the device after failure, ata_host_stop() is called\nto release the resources, it leads a null-ptr-deref(), because all\nthe ports all freed and null.\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000008\nCPU: 7 PID: 18671 Comm: modprobe Kdump: loaded Tainted: G            E      6.1.0-rc3+ #8\npstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : ata_host_stop+0x3c/0x84 [libata]\nlr : release_nodes+0x64/0xd0\nCall trace:\n ata_host_stop+0x3c/0x84 [libata]\n release_nodes+0x64/0xd0\n devres_release_all+0xbc/0x1b0\n device_unbind_cleanup+0x20/0x70\n really_probe+0x158/0x320\n __driver_probe_device+0x84/0x120\n driver_probe_device+0x44/0x120\n __driver_attach+0xb4/0x220\n bus_for_each_dev+0x78/0xdc\n driver_attach+0x2c/0x40\n bus_add_driver+0x184/0x240\n driver_register+0x80/0x13c\n __pci_register_driver+0x4c/0x60\n ahci_pci_driver_init+0x30/0x1000 [ahci]\n\nFix this by removing redundant ata_host_put() in the error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49827",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Fix potential null-ptr-deref in drm_vblank_destroy_worker()\n\ndrm_vblank_init() call drmm_add_action_or_reset() with\ndrm_vblank_init_release() as action. If __drmm_add_action() failed, will\ndirectly call drm_vblank_init_release() with the vblank whose worker is\nNULL. As the resule, a null-ptr-deref will happen in\nkthread_destroy_worker(). Add the NULL check before calling\ndrm_vblank_destroy_worker().\n\nBUG: null-ptr-deref\nKASAN: null-ptr-deref in range [0x0000000000000068-0x000000000000006f]\nCPU: 5 PID: 961 Comm: modprobe Not tainted 6.0.0-11331-gd465bff130bf-dirty\nRIP: 0010:kthread_destroy_worker+0x25/0xb0\n  Call Trace:\n    \u003cTASK\u003e\n    drm_vblank_init_release+0x124/0x220 [drm]\n    ? drm_crtc_vblank_restore+0x8b0/0x8b0 [drm]\n    __drmm_add_action_or_reset+0x41/0x50 [drm]\n    drm_vblank_init+0x282/0x310 [drm]\n    vkms_init+0x35f/0x1000 [vkms]\n    ? 0xffffffffc4508000\n    ? lock_is_held_type+0xd7/0x130\n    ? __kmem_cache_alloc_node+0x1c2/0x2b0\n    ? lock_is_held_type+0xd7/0x130\n    ? 0xffffffffc4508000\n    do_one_initcall+0xd0/0x4f0\n    ...\n    do_syscall_64+0x35/0x80\n    entry_SYSCALL_64_after_hwframe+0x46/0xb0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49830",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/drv: Fix potential memory leak in drm_dev_init()\n\ndrm_dev_init() will add drm_dev_init_release() as a callback. When\ndrmm_add_action() failed, the release function won't be added. As the\nresult, the ref cnt added by device_get() in drm_dev_init() won't be put\nby drm_dev_init_release(), which leads to the memleak. Use\ndrmm_add_action_or_reset() instead of drmm_add_action() to prevent\nmemleak.\n\nunreferenced object 0xffff88810bc0c800 (size 2048):\n  comm \"modprobe\", pid 8322, jiffies 4305809845 (age 15.292s)\n  hex dump (first 32 bytes):\n    e8 cc c0 0b 81 88 ff ff ff ff ff ff 00 00 00 00  ................\n    20 24 3c 0c 81 88 ff ff 18 c8 c0 0b 81 88 ff ff   $\u003c.............\n  backtrace:\n    [\u003c000000007251f72d\u003e] __kmalloc+0x4b/0x1c0\n    [\u003c0000000045f21f26\u003e] platform_device_alloc+0x2d/0xe0\n    [\u003c000000004452a479\u003e] platform_device_register_full+0x24/0x1c0\n    [\u003c0000000089f4ea61\u003e] 0xffffffffa0736051\n    [\u003c00000000235b2441\u003e] do_one_initcall+0x7a/0x380\n    [\u003c0000000001a4a177\u003e] do_init_module+0x5c/0x230\n    [\u003c000000002bf8a8e2\u003e] load_module+0x227d/0x2420\n    [\u003c00000000637d6d0a\u003e] __do_sys_finit_module+0xd5/0x140\n    [\u003c00000000c99fc324\u003e] do_syscall_64+0x3f/0x90\n    [\u003c000000004d85aa77\u003e] entry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49832",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: devicetree: fix null pointer dereferencing in pinctrl_dt_to_map\n\nHere is the BUG report by KASAN about null pointer dereference:\n\nBUG: KASAN: null-ptr-deref in strcmp+0x2e/0x50\nRead of size 1 at addr 0000000000000000 by task python3/2640\nCall Trace:\n strcmp\n __of_find_property\n of_find_property\n pinctrl_dt_to_map\n\nkasprintf() would return NULL pointer when kmalloc() fail to allocate.\nSo directly return ENOMEM, if kasprintf() return NULL pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49834",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix use-after-free bug of ns_writer on remount\n\nIf a nilfs2 filesystem is downgraded to read-only due to metadata\ncorruption on disk and is remounted read/write, or if emergency read-only\nremount is performed, detaching a log writer and synchronizing the\nfilesystem can be done at the same time.\n\nIn these cases, use-after-free of the log writer (hereinafter\nnilfs-\u003ens_writer) can happen as shown in the scenario below:\n\n Task1                               Task2\n --------------------------------    ------------------------------\n nilfs_construct_segment\n   nilfs_segctor_sync\n     init_wait\n     init_waitqueue_entry\n     add_wait_queue\n     schedule\n                                     nilfs_remount (R/W remount case)\n\t\t\t\t       nilfs_attach_log_writer\n                                         nilfs_detach_log_writer\n                                           nilfs_segctor_destroy\n                                             kfree\n     finish_wait\n       _raw_spin_lock_irqsave\n         __raw_spin_lock_irqsave\n           do_raw_spin_lock\n             debug_spin_lock_before  \u003c-- use-after-free\n\nWhile Task1 is sleeping, nilfs-\u003ens_writer is freed by Task2.  After Task1\nwaked up, Task1 accesses nilfs-\u003ens_writer which is already freed.  This\nscenario diagram is based on the Shigeru Yoshida's post [1].\n\nThis patch fixes the issue by not detaching nilfs-\u003ens_writer on remount so\nthat this UAF race doesn't happen.  Along with this change, this patch\nalso inserts a few necessary read-only checks with superblock instance\nwhere only the ns_writer pointer was used to check if the filesystem is\nread-only.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49835",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: fix potential memleak in 'add_widget_node'\n\nAs 'kobject_add' may allocated memory for 'kobject-\u003ename' when return error.\nAnd in this function, if call 'kobject_add' failed didn't free kobject.\nSo call 'kobject_put' to recycling resources.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49836",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsiox: fix possible memory leak in siox_device_add()\n\nIf device_register() returns error in siox_device_add(),\nthe name allocated by dev_set_name() need be freed. As\ncomment of device_register() says, it should use put_device()\nto give up the reference in the error path. So fix this\nby calling put_device(), then the name can be freed in\nkobject_cleanup(), and sdevice is freed in siox_device_release(),\nset it to null in error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49839",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_transport_sas: Fix error handling in sas_phy_add()\n\nIf transport_add_device() fails in sas_phy_add(), the kernel will crash\ntrying to delete the device in transport_remove_device() called from\nsas_remove_host().\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000108\nCPU: 61 PID: 42829 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc1+ #173\npstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x54/0x3d0\nlr : device_del+0x37c/0x3d0\nCall trace:\n device_del+0x54/0x3d0\n attribute_container_class_device_del+0x28/0x38\n transport_remove_classdev+0x6c/0x80\n attribute_container_device_trigger+0x108/0x110\n transport_remove_device+0x28/0x38\n sas_phy_delete+0x30/0x60 [scsi_transport_sas]\n do_sas_phy_delete+0x6c/0x80 [scsi_transport_sas]\n device_for_each_child+0x68/0xb0\n sas_remove_children+0x40/0x50 [scsi_transport_sas]\n sas_remove_host+0x20/0x38 [scsi_transport_sas]\n hisi_sas_remove+0x40/0x68 [hisi_sas_main]\n hisi_sas_v2_remove+0x20/0x30 [hisi_sas_v2_hw]\n platform_remove+0x2c/0x60\n\nFix this by checking and handling return value of transport_add_device()\nin sas_phy_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49841",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: imx: Add missing .thaw_noirq hook\n\nThe following warning is seen with non-console UART instance when\nsystem hibernates.\n\n[   37.371969] ------------[ cut here ]------------\n[   37.376599] uart3_root_clk already disabled\n[   37.380810] WARNING: CPU: 0 PID: 296 at drivers/clk/clk.c:952 clk_core_disable+0xa4/0xb0\n...\n[   37.506986] Call trace:\n[   37.509432]  clk_core_disable+0xa4/0xb0\n[   37.513270]  clk_disable+0x34/0x50\n[   37.516672]  imx_uart_thaw+0x38/0x5c\n[   37.520250]  platform_pm_thaw+0x30/0x6c\n[   37.524089]  dpm_run_callback.constprop.0+0x3c/0xd4\n[   37.528972]  device_resume+0x7c/0x160\n[   37.532633]  dpm_resume+0xe8/0x230\n[   37.536036]  hibernation_snapshot+0x288/0x430\n[   37.540397]  hibernate+0x10c/0x2e0\n[   37.543798]  state_store+0xc4/0xd0\n[   37.547203]  kobj_attr_store+0x1c/0x30\n[   37.550953]  sysfs_kf_write+0x48/0x60\n[   37.554619]  kernfs_fop_write_iter+0x118/0x1ac\n[   37.559063]  new_sync_write+0xe8/0x184\n[   37.562812]  vfs_write+0x230/0x290\n[   37.566214]  ksys_write+0x68/0xf4\n[   37.569529]  __arm64_sys_write+0x20/0x2c\n[   37.573452]  invoke_syscall.constprop.0+0x50/0xf0\n[   37.578156]  do_el0_svc+0x11c/0x150\n[   37.581648]  el0_svc+0x30/0x140\n[   37.584792]  el0t_64_sync_handler+0xe8/0xf0\n[   37.588976]  el0t_64_sync+0x1a0/0x1a4\n[   37.592639] ---[ end trace 56e22eec54676d75 ]---\n\nOn hibernating, pm core calls into related hooks in sequence like:\n\n    .freeze\n    .freeze_noirq\n    .thaw_noirq\n    .thaw\n\nWith .thaw_noirq hook being absent, the clock will be disabled in a\nunbalanced call which results the warning above.\n\n    imx_uart_freeze()\n        clk_prepare_enable()\n    imx_uart_suspend_noirq()\n        clk_disable()\n    imx_uart_thaw\n        clk_disable_unprepare()\n\nAdding the missing .thaw_noirq hook as imx_uart_resume_noirq() will have\nthe call sequence corrected as below and thus fix the warning.\n\n    imx_uart_freeze()\n        clk_prepare_enable()\n    imx_uart_suspend_noirq()\n        clk_disable()\n    imx_uart_resume_noirq()\n        clk_enable()\n    imx_uart_thaw\n        clk_disable_unprepare()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49842",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: core: Fix use-after-free in snd_soc_exit()\n\nKASAN reports a use-after-free:\n\nBUG: KASAN: use-after-free in device_del+0xb5b/0xc60\nRead of size 8 at addr ffff888008655050 by task rmmod/387\nCPU: 2 PID: 387 Comm: rmmod\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nCall Trace:\n\u003cTASK\u003e\ndump_stack_lvl+0x79/0x9a\nprint_report+0x17f/0x47b\nkasan_report+0xbb/0xf0\ndevice_del+0xb5b/0xc60\nplatform_device_del.part.0+0x24/0x200\nplatform_device_unregister+0x2e/0x40\nsnd_soc_exit+0xa/0x22 [snd_soc_core]\n__do_sys_delete_module.constprop.0+0x34f/0x5b0\ndo_syscall_64+0x3a/0x90\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n...\n\u003c/TASK\u003e\n\nIt's bacause in snd_soc_init(), snd_soc_util_init() is possble to fail,\nbut its ret is ignored, which makes soc_dummy_dev unregistered twice.\n\nsnd_soc_init()\n    snd_soc_util_init()\n        platform_device_register_simple(soc_dummy_dev)\n        platform_driver_register() # fail\n    \tplatform_device_unregister(soc_dummy_dev)\n    platform_driver_register() # success\n...\nsnd_soc_exit()\n    snd_soc_util_exit()\n    # soc_dummy_dev will be unregistered for second time\n\nTo fix it, handle error and stop snd_soc_init() when util_init() fail.\nAlso clean debugfs when util_init() or driver_register() fail.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49845",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: j1939_send_one(): fix missing CAN header initialization\n\nThe read access to struct canxl_frame::len inside of a j1939 created\nskbuff revealed a missing initialization of reserved and later filled\nelements in struct can_frame.\n\nThis patch initializes the 8 byte CAN header with zero.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49846",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Fix a slab-out-of-bounds write bug in udf_find_entry()\n\nSyzbot reported a slab-out-of-bounds Write bug:\n\nloop0: detected capacity change from 0 to 2048\n==================================================================\nBUG: KASAN: slab-out-of-bounds in udf_find_entry+0x8a5/0x14f0\nfs/udf/namei.c:253\nWrite of size 105 at addr ffff8880123ff896 by task syz-executor323/3610\n\nCPU: 0 PID: 3610 Comm: syz-executor323 Not tainted\n6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0\nHardware name: Google Compute Engine/Google Compute Engine, BIOS\nGoogle 10/11/2022\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x1b1/0x28e lib/dump_stack.c:106\n print_address_description+0x74/0x340 mm/kasan/report.c:284\n print_report+0x107/0x1f0 mm/kasan/report.c:395\n kasan_report+0xcd/0x100 mm/kasan/report.c:495\n kasan_check_range+0x2a7/0x2e0 mm/kasan/generic.c:189\n memcpy+0x3c/0x60 mm/kasan/shadow.c:66\n udf_find_entry+0x8a5/0x14f0 fs/udf/namei.c:253\n udf_lookup+0xef/0x340 fs/udf/namei.c:309\n lookup_open fs/namei.c:3391 [inline]\n open_last_lookups fs/namei.c:3481 [inline]\n path_openat+0x10e6/0x2df0 fs/namei.c:3710\n do_filp_open+0x264/0x4f0 fs/namei.c:3740\n do_sys_openat2+0x124/0x4e0 fs/open.c:1310\n do_sys_open fs/open.c:1326 [inline]\n __do_sys_creat fs/open.c:1402 [inline]\n __se_sys_creat fs/open.c:1396 [inline]\n __x64_sys_creat+0x11f/0x160 fs/open.c:1396\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7ffab0d164d9\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89\nf7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01\nf0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffe1a7e6bb8 EFLAGS: 00000246 ORIG_RAX: 0000000000000055\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffab0d164d9\nRDX: 00007ffab0d164d9 RSI: 0000000000000000 RDI: 0000000020000180\nRBP: 00007ffab0cd5a10 R08: 0000000000000000 R09: 0000000000000000\nR10: 00005555573552c0 R11: 0000000000000246 R12: 00007ffab0cd5aa0\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n \u003c/TASK\u003e\n\nAllocated by task 3610:\n kasan_save_stack mm/kasan/common.c:45 [inline]\n kasan_set_track+0x3d/0x60 mm/kasan/common.c:52\n ____kasan_kmalloc mm/kasan/common.c:371 [inline]\n __kasan_kmalloc+0x97/0xb0 mm/kasan/common.c:380\n kmalloc include/linux/slab.h:576 [inline]\n udf_find_entry+0x7b6/0x14f0 fs/udf/namei.c:243\n udf_lookup+0xef/0x340 fs/udf/namei.c:309\n lookup_open fs/namei.c:3391 [inline]\n open_last_lookups fs/namei.c:3481 [inline]\n path_openat+0x10e6/0x2df0 fs/namei.c:3710\n do_filp_open+0x264/0x4f0 fs/namei.c:3740\n do_sys_openat2+0x124/0x4e0 fs/open.c:1310\n do_sys_open fs/open.c:1326 [inline]\n __do_sys_creat fs/open.c:1402 [inline]\n __se_sys_creat fs/open.c:1396 [inline]\n __x64_sys_creat+0x11f/0x160 fs/open.c:1396\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe buggy address belongs to the object at ffff8880123ff800\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 150 bytes inside of\n 256-byte region [ffff8880123ff800, ffff8880123ff900)\n\nThe buggy address belongs to the physical page:\npage:ffffea000048ff80 refcount:1 mapcount:0 mapping:0000000000000000\nindex:0x0 pfn:0x123fe\nhead:ffffea000048ff80 order:1 compound_mapcount:0 compound_pincount:0\nflags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)\nraw: 00fff00000010200 ffffea00004b8500 dead000000000003 ffff888012041b40\nraw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x0(),\npid 1, tgid 1 (swapper/0), ts 1841222404, free_ts 0\n create_dummy_stack mm/page_owner.c:\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49850",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix deadlock in nilfs_count_free_blocks()\n\nA semaphore deadlock can occur if nilfs_get_block() detects metadata\ncorruption while locating data blocks and a superblock writeback occurs at\nthe same time:\n\ntask 1                               task 2\n------                               ------\n* A file operation *\nnilfs_truncate()\n  nilfs_get_block()\n    down_read(rwsem A) \u003c--\n    nilfs_bmap_lookup_contig()\n      ...                            generic_shutdown_super()\n                                       nilfs_put_super()\n                                         * Prepare to write superblock *\n                                         down_write(rwsem B) \u003c--\n                                         nilfs_cleanup_super()\n      * Detect b-tree corruption *         nilfs_set_log_cursor()\n      nilfs_bmap_convert_error()             nilfs_count_free_blocks()\n        __nilfs_error()                        down_read(rwsem A) \u003c--\n          nilfs_set_error()\n            down_write(rwsem B) \u003c--\n\n                           *** DEADLOCK ***\n\nHere, nilfs_get_block() readlocks rwsem A (= NILFS_MDT(dat_inode)-\u003emi_sem)\nand then calls nilfs_bmap_lookup_contig(), but if it fails due to metadata\ncorruption, __nilfs_error() is called from nilfs_bmap_convert_error()\ninside the lock section.\n\nSince __nilfs_error() calls nilfs_set_error() unless the filesystem is\nread-only and nilfs_set_error() attempts to writelock rwsem B (=\nnilfs-\u003ens_sem) to write back superblock exclusively, hierarchical lock\nacquisition occurs in the order rwsem A -\u003e rwsem B.\n\nNow, if another task starts updating the superblock, it may writelock\nrwsem B during the lock sequence above, and can deadlock trying to\nreadlock rwsem A in nilfs_count_free_blocks().\n\nHowever, there is actually no need to take rwsem A in\nnilfs_count_free_blocks() because it, within the lock section, only reads\na single integer data on a shared struct with\nnilfs_sufile_get_ncleansegs().  This has been the case after commit\naa474a220180 (\"nilfs2: add local variable to cache the number of clean\nsegments\"), that is, even before this bug was introduced.\n\nSo, this resolves the deadlock problem by just not taking the semaphore in\nnilfs_count_free_blocks().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: macvlan: fix memory leaks of macvlan_common_newlink\n\nkmemleak reports memory leaks in macvlan_common_newlink, as follows:\n\n ip link add link eth0 name .. type macvlan mode source macaddr add\n \u003cMAC-ADDR\u003e\n\nkmemleak reports:\n\nunreferenced object 0xffff8880109bb140 (size 64):\n  comm \"ip\", pid 284, jiffies 4294986150 (age 430.108s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 b8 aa 5a 12 80 88 ff ff  ..........Z.....\n    80 1b fa 0d 80 88 ff ff 1e ff ac af c7 c1 6b 6b  ..............kk\n  backtrace:\n    [\u003cffffffff813e06a7\u003e] kmem_cache_alloc_trace+0x1c7/0x300\n    [\u003cffffffff81b66025\u003e] macvlan_hash_add_source+0x45/0xc0\n    [\u003cffffffff81b66a67\u003e] macvlan_changelink_sources+0xd7/0x170\n    [\u003cffffffff81b6775c\u003e] macvlan_common_newlink+0x38c/0x5a0\n    [\u003cffffffff81b6797e\u003e] macvlan_newlink+0xe/0x20\n    [\u003cffffffff81d97f8f\u003e] __rtnl_newlink+0x7af/0xa50\n    [\u003cffffffff81d98278\u003e] rtnl_newlink+0x48/0x70\n    ...\n\nIn the scenario where the macvlan mode is configured as 'source',\nmacvlan_changelink_sources() will be execured to reconfigure list of\nremote source mac addresses, at the same time, if register_netdevice()\nreturn an error, the resource generated by macvlan_changelink_sources()\nis not cleaned up.\n\nUsing this patch, in the case of an error, it will execute\nmacvlan_flush_sources() to ensure that the resource is cleaned up.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49858",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix SQE threshold checking\n\nCurrent way of checking available SQE count which is based on\nHW updated SQB count could result in driver submitting an SQE\neven before CQE for the previously transmitted SQE at the same\nindex is processed in NAPI resulting losing SKB pointers,\nhence a leak. Fix this by checking a consumer index which\nis updated once CQE is processed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: k3-udma-glue: fix memory leak when register device fail\n\nIf device_register() fails, it should call put_device() to give\nup reference, the name allocated in dev_set_name() can be freed\nin callback function kobject_cleanup().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49861",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: mv_xor_v2: Fix a resource leak in mv_xor_v2_remove()\n\nA clk_prepare_enable() call in the probe is not balanced by a corresponding\nclk_disable_unprepare() in the remove function.\n\nAdd the missing call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49863",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: af_can: fix NULL pointer dereference in can_rx_register()\n\nIt causes NULL pointer dereference when testing as following:\n(a) use syscall(__NR_socket, 0x10ul, 3ul, 0) to create netlink socket.\n(b) use syscall(__NR_sendmsg, ...) to create bond link device and vxcan\n    link device, and bind vxcan device to bond device (can also use\n    ifenslave command to bind vxcan device to bond device).\n(c) use syscall(__NR_socket, 0x1dul, 3ul, 1) to create CAN socket.\n(d) use syscall(__NR_bind, ...) to bind the bond device to CAN socket.\n\nThe bond device invokes the can-raw protocol registration interface to\nreceive CAN packets. However, ml_priv is not allocated to the dev,\ndev_rcv_lists is assigned to NULL in can_rx_register(). In this case,\nit will occur the NULL pointer dereference issue.\n\nThe following is the stack information:\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nPGD 122a4067 P4D 122a4067 PUD 1223c067 PMD 0\nOops: 0000 [#1] PREEMPT SMP\nRIP: 0010:can_rx_register+0x12d/0x1e0\nCall Trace:\n\u003cTASK\u003e\nraw_enable_filters+0x8d/0x120\nraw_enable_allfilters+0x3b/0x130\nraw_bind+0x118/0x4f0\n__sys_bind+0x163/0x1a0\n__x64_sys_bind+0x1e/0x30\ndo_syscall_64+0x35/0x80\nentry_SYSCALL_64_after_hwframe+0x63/0xcd\n\u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49864",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix NULL pointer dereference in svm_migrate_to_ram()\n\n./drivers/gpu/drm/amd/amdkfd/kfd_migrate.c:985:58-62: ERROR: p is NULL but dereferenced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: addrlabel: fix infoleak when sending struct ifaddrlblmsg to network\n\nWhen copying a `struct ifaddrlblmsg` to the network, __ifal_reserved\nremained uninitialized, resulting in a 1-byte infoleak:\n\n  BUG: KMSAN: kernel-network-infoleak in __netdev_start_xmit ./include/linux/netdevice.h:4841\n   __netdev_start_xmit ./include/linux/netdevice.h:4841\n   netdev_start_xmit ./include/linux/netdevice.h:4857\n   xmit_one net/core/dev.c:3590\n   dev_hard_start_xmit+0x1dc/0x800 net/core/dev.c:3606\n   __dev_queue_xmit+0x17e8/0x4350 net/core/dev.c:4256\n   dev_queue_xmit ./include/linux/netdevice.h:3009\n   __netlink_deliver_tap_skb net/netlink/af_netlink.c:307\n   __netlink_deliver_tap+0x728/0xad0 net/netlink/af_netlink.c:325\n   netlink_deliver_tap net/netlink/af_netlink.c:338\n   __netlink_sendskb net/netlink/af_netlink.c:1263\n   netlink_sendskb+0x1d9/0x200 net/netlink/af_netlink.c:1272\n   netlink_unicast+0x56d/0xf50 net/netlink/af_netlink.c:1360\n   nlmsg_unicast ./include/net/netlink.h:1061\n   rtnl_unicast+0x5a/0x80 net/core/rtnetlink.c:758\n   ip6addrlbl_get+0xfad/0x10f0 net/ipv6/addrlabel.c:628\n   rtnetlink_rcv_msg+0xb33/0x1570 net/core/rtnetlink.c:6082\n  ...\n  Uninit was created at:\n   slab_post_alloc_hook+0x118/0xb00 mm/slab.h:742\n   slab_alloc_node mm/slub.c:3398\n   __kmem_cache_alloc_node+0x4f2/0x930 mm/slub.c:3437\n   __do_kmalloc_node mm/slab_common.c:954\n   __kmalloc_node_track_caller+0x117/0x3d0 mm/slab_common.c:975\n   kmalloc_reserve net/core/skbuff.c:437\n   __alloc_skb+0x27a/0xab0 net/core/skbuff.c:509\n   alloc_skb ./include/linux/skbuff.h:1267\n   nlmsg_new ./include/net/netlink.h:964\n   ip6addrlbl_get+0x490/0x10f0 net/ipv6/addrlabel.c:608\n   rtnetlink_rcv_msg+0xb33/0x1570 net/core/rtnetlink.c:6082\n   netlink_rcv_skb+0x299/0x550 net/netlink/af_netlink.c:2540\n   rtnetlink_rcv+0x26/0x30 net/core/rtnetlink.c:6109\n   netlink_unicast_kernel net/netlink/af_netlink.c:1319\n   netlink_unicast+0x9ab/0xf50 net/netlink/af_netlink.c:1345\n   netlink_sendmsg+0xebc/0x10f0 net/netlink/af_netlink.c:1921\n  ...\n\nThis patch ensures that the reserved field is always initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ralink: mt7621-pci: add sentinel to quirks table\n\nWith mt7621 soc_dev_attr fixed to register the soc as a device,\nkernel will experience an oops in soc_device_match_attr\n\nThis quirk test was introduced in the staging driver in\ncommit 9445ccb3714c (\"staging: mt7621-pci-phy: add quirks for 'E2'\nrevision using 'soc_device_attribute'\"). The staging driver was removed,\nand later re-added in commit d87da32372a0 (\"phy: ralink: Add PHY driver\nfor MT7621 PCIe PHY\") for kernel 5.11",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49869",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible crash in bnxt_hwrm_set_coal()\n\nDuring the error recovery sequence, the rtnl_lock is not held for the\nentire duration and some datastructures may be freed during the sequence.\nCheck for the BNXT_STATE_OPEN flag instead of netif_running() to ensure\nthat the device is fully operational before proceeding to reconfigure\nthe coalescing settings.\n\nThis will fix a possible crash like this:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000000\nPGD 0 P4D 0\nOops: 0000 [#1] SMP NOPTI\nCPU: 10 PID: 181276 Comm: ethtool Kdump: loaded Tainted: G          IOE    --------- -  - 4.18.0-348.el8.x86_64 #1\nHardware name: Dell Inc. PowerEdge R740/0F9N89, BIOS 2.3.10 08/15/2019\nRIP: 0010:bnxt_hwrm_set_coal+0x1fb/0x2a0 [bnxt_en]\nCode: c2 66 83 4e 22 08 66 89 46 1c e8 10 cb 00 00 41 83 c6 01 44 39 b3 68 01 00 00 0f 8e a3 00 00 00 48 8b 93 c8 00 00 00 49 63 c6 \u003c48\u003e 8b 2c c2 48 8b 85 b8 02 00 00 48 85 c0 74 2e 48 8b 74 24 08 f6\nRSP: 0018:ffffb11c8dcaba50 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff8d168a8b0ac0 RCX: 00000000000000c5\nRDX: 0000000000000000 RSI: ffff8d162f72c000 RDI: ffff8d168a8b0b28\nRBP: 0000000000000000 R08: b6e1f68a12e9a7eb R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000037 R12: ffff8d168a8b109c\nR13: ffff8d168a8b10aa R14: 0000000000000000 R15: ffffffffc01ac4e0\nFS:  00007f3852e4c740(0000) GS:ffff8d24c0080000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000041b3ee003 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ethnl_set_coalesce+0x3ce/0x4c0\n genl_family_rcv_msg_doit.isra.15+0x10f/0x150\n genl_family_rcv_msg+0xb3/0x160\n ? coalesce_fill_reply+0x480/0x480\n genl_rcv_msg+0x47/0x90\n ? genl_family_rcv_msg+0x160/0x160\n netlink_rcv_skb+0x4c/0x120\n genl_rcv+0x24/0x40\n netlink_unicast+0x196/0x230\n netlink_sendmsg+0x204/0x3d0\n sock_sendmsg+0x4c/0x50\n __sys_sendto+0xee/0x160\n ? syscall_trace_enter+0x1d3/0x2c0\n ? __audit_syscall_exit+0x249/0x2a0\n __x64_sys_sendto+0x24/0x30\n do_syscall_64+0x5b/0x1a0\n entry_SYSCALL_64_after_hwframe+0x65/0xca\nRIP: 0033:0x7f38524163bb",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncapabilities: fix undefined behavior in bit shift for CAP_TO_MASK\n\nShifting signed 32-bit value by 31 bits is undefined, so changing\nsignificant bit to unsigned. The UBSAN warning calltrace like below:\n\nUBSAN: shift-out-of-bounds in security/commoncap.c:1252:2\nleft shift of 1 by 31 places cannot be represented in type 'int'\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x7d/0xa5\n dump_stack+0x15/0x1b\n ubsan_epilogue+0xe/0x4e\n __ubsan_handle_shift_out_of_bounds+0x1e7/0x20c\n cap_task_prctl+0x561/0x6f0\n security_task_prctl+0x5a/0xb0\n __x64_sys_prctl+0x61/0x8f0\n do_syscall_64+0x58/0x80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49871",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: Fix memory leaks of napi_get_frags\n\nkmemleak reports after running test_progs:\n\nunreferenced object 0xffff8881b1672dc0 (size 232):\n  comm \"test_progs\", pid 394388, jiffies 4354712116 (age 841.975s)\n  hex dump (first 32 bytes):\n    e0 84 d7 a8 81 88 ff ff 80 2c 67 b1 81 88 ff ff  .........,g.....\n    00 40 c5 9b 81 88 ff ff 00 00 00 00 00 00 00 00  .@..............\n  backtrace:\n    [\u003c00000000c8f01748\u003e] napi_skb_cache_get+0xd4/0x150\n    [\u003c0000000041c7fc09\u003e] __napi_build_skb+0x15/0x50\n    [\u003c00000000431c7079\u003e] __napi_alloc_skb+0x26e/0x540\n    [\u003c000000003ecfa30e\u003e] napi_get_frags+0x59/0x140\n    [\u003c0000000099b2199e\u003e] tun_get_user+0x183d/0x3bb0 [tun]\n    [\u003c000000008a5adef0\u003e] tun_chr_write_iter+0xc0/0x1b1 [tun]\n    [\u003c0000000049993ff4\u003e] do_iter_readv_writev+0x19f/0x320\n    [\u003c000000008f338ea2\u003e] do_iter_write+0x135/0x630\n    [\u003c000000008a3377a4\u003e] vfs_writev+0x12e/0x440\n    [\u003c00000000a6b5639a\u003e] do_writev+0x104/0x280\n    [\u003c00000000ccf065d8\u003e] do_syscall_64+0x3b/0x90\n    [\u003c00000000d776e329\u003e] entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nThe issue occurs in the following scenarios:\ntun_get_user()\n  napi_gro_frags()\n    napi_frags_finish()\n      case GRO_NORMAL:\n        gro_normal_one()\n          list_add_tail(\u0026skb-\u003elist, \u0026napi-\u003erx_list);\n          \u003c-- While napi-\u003erx_count \u003c READ_ONCE(gro_normal_batch),\n          \u003c-- gro_normal_list() is not called, napi-\u003erx_list is not empty\n  \u003c-- not ask to complete the gro work, will cause memory leaks in\n  \u003c-- following tun_napi_del()\n...\ntun_napi_del()\n  netif_napi_del()\n    __netif_napi_del()\n    \u003c-- \u0026napi-\u003erx_list is not empty, which caused memory leaks\n\nTo fix, add napi_complete() after napi_gro_frags().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49874",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hyperv: fix possible memory leak in mousevsc_probe()\n\nIf hid_add_device() returns error, it should call hid_destroy_device()\nto free hid_dev which is allocated in hid_allocate_device().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49879",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix BUG_ON() when directory entry has invalid rec_len\n\nThe rec_len field in the directory entry has to be a multiple of 4.  A\ncorrupted filesystem image can be used to hit a BUG() in\next4_rec_len_to_disk(), called from make_indexed_dir().\n\n ------------[ cut here ]------------\n kernel BUG at fs/ext4/ext4.h:2413!\n ...\n RIP: 0010:make_indexed_dir+0x53f/0x5f0\n ...\n Call Trace:\n  \u003cTASK\u003e\n  ? add_dirent_to_buf+0x1b2/0x200\n  ext4_add_entry+0x36e/0x480\n  ext4_add_nondir+0x2b/0xc0\n  ext4_create+0x163/0x200\n  path_openat+0x635/0xe90\n  do_filp_open+0xb4/0x160\n  ? __create_object.isra.0+0x1de/0x3b0\n  ? _raw_spin_unlock+0x12/0x30\n  do_sys_openat2+0x91/0x150\n  __x64_sys_open+0x6c/0xa0\n  do_syscall_64+0x3c/0x80\n  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nThe fix simply adds a call to ext4_check_dir_entry() to validate the\ndirectory entry, returning -EFSCORRUPTED if the entry is invalid.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49880",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix warning in 'ext4_da_release_space'\n\nSyzkaller report issue as follows:\nEXT4-fs (loop0): Free/Dirty block details\nEXT4-fs (loop0): free_blocks=0\nEXT4-fs (loop0): dirty_blocks=0\nEXT4-fs (loop0): Block reservation details\nEXT4-fs (loop0): i_reserved_data_blocks=0\nEXT4-fs warning (device loop0): ext4_da_release_space:1527: ext4_da_release_space: ino 18, to_free 1 with only 0 reserved data blocks\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 92 at fs/ext4/inode.c:1528 ext4_da_release_space+0x25e/0x370 fs/ext4/inode.c:1524\nModules linked in:\nCPU: 0 PID: 92 Comm: kworker/u4:4 Not tainted 6.0.0-syzkaller-09423-g493ffd6605b2 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/22/2022\nWorkqueue: writeback wb_workfn (flush-7:0)\nRIP: 0010:ext4_da_release_space+0x25e/0x370 fs/ext4/inode.c:1528\nRSP: 0018:ffffc900015f6c90 EFLAGS: 00010296\nRAX: 42215896cd52ea00 RBX: 0000000000000000 RCX: 42215896cd52ea00\nRDX: 0000000000000000 RSI: 0000000080000001 RDI: 0000000000000000\nRBP: 1ffff1100e907d96 R08: ffffffff816aa79d R09: fffff520002bece5\nR10: fffff520002bece5 R11: 1ffff920002bece4 R12: ffff888021fd2000\nR13: ffff88807483ecb0 R14: 0000000000000001 R15: ffff88807483e740\nFS:  0000000000000000(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005555569ba628 CR3: 000000000c88e000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n ext4_es_remove_extent+0x1ab/0x260 fs/ext4/extents_status.c:1461\n mpage_release_unused_pages+0x24d/0xef0 fs/ext4/inode.c:1589\n ext4_writepages+0x12eb/0x3be0 fs/ext4/inode.c:2852\n do_writepages+0x3c3/0x680 mm/page-writeback.c:2469\n __writeback_single_inode+0xd1/0x670 fs/fs-writeback.c:1587\n writeback_sb_inodes+0xb3b/0x18f0 fs/fs-writeback.c:1870\n wb_writeback+0x41f/0x7b0 fs/fs-writeback.c:2044\n wb_do_writeback fs/fs-writeback.c:2187 [inline]\n wb_workfn+0x3cb/0xef0 fs/fs-writeback.c:2227\n process_one_work+0x877/0xdb0 kernel/workqueue.c:2289\n worker_thread+0xb14/0x1330 kernel/workqueue.c:2436\n kthread+0x266/0x300 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n \u003c/TASK\u003e\n\nAbove issue may happens as follows:\next4_da_write_begin\n  ext4_create_inline_data\n    ext4_clear_inode_flag(inode, EXT4_INODE_EXTENTS);\n    ext4_set_inode_flag(inode, EXT4_INODE_INLINE_DATA);\n__ext4_ioctl\n  ext4_ext_migrate -\u003e will lead to eh-\u003eeh_entries not zero, and set extent flag\next4_da_write_begin\n  ext4_da_convert_inline_data_to_extent\n    ext4_da_write_inline_data_begin\n      ext4_da_map_blocks\n        ext4_insert_delayed_block\n\t  if (!ext4_es_scan_clu(inode, \u0026ext4_es_is_delonly, lblk))\n\t    if (!ext4_es_scan_clu(inode, \u0026ext4_es_is_mapped, lblk))\n\t      ext4_clu_mapped(inode, EXT4_B2C(sbi, lblk)); -\u003e will return 1\n\t       allocated = true;\n          ext4_es_insert_delayed_block(inode, lblk, allocated);\next4_writepages\n  mpage_map_and_submit_extent(handle, \u0026mpd, \u0026give_up_on_write); -\u003e return -ENOSPC\n  mpage_release_unused_pages(\u0026mpd, give_up_on_write); -\u003e give_up_on_write == 1\n    ext4_es_remove_extent\n      ext4_da_release_space(inode, reserved);\n        if (unlikely(to_free \u003e ei-\u003ei_reserved_data_blocks))\n\t  -\u003e to_free == 1  but ei-\u003ei_reserved_data_blocks == 0\n\t  -\u003e then trigger warning as above\n\nTo solve above issue, forbid inode do migrate which has inline data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: fix memory leak in query_regdb_file()\n\nIn the function query_regdb_file() the alpha2 parameter is duplicated\nusing kmemdup() and subsequently freed in regdb_fw_cb(). However,\nrequest_firmware_nowait() can fail without calling regdb_fw_cb() and\nthus leak memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49885",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: APEI: Fix integer overflow in ghes_estatus_pool_init()\n\nChange num_ghes from int to unsigned int, preventing an overflow\nand causing subsequent vmalloc() to fail.\n\nThe overflow happens in ghes_estatus_pool_init() when calculating\nlen during execution of the statement below as both multiplication\noperands here are signed int:\n\nlen += (num_ghes * GHES_ESOURCE_PREALLOC_MAX_SIZE);\n\nThe following call trace is observed because of this bug:\n\n[    9.317108] swapper/0: vmalloc error: size 18446744071562596352, exceeds total pages, mode:0xcc0(GFP_KERNEL), nodemask=(null),cpuset=/,mems_allowed=0-1\n[    9.317131] Call Trace:\n[    9.317134]  \u003cTASK\u003e\n[    9.317137]  dump_stack_lvl+0x49/0x5f\n[    9.317145]  dump_stack+0x10/0x12\n[    9.317146]  warn_alloc.cold+0x7b/0xdf\n[    9.317150]  ? __device_attach+0x16a/0x1b0\n[    9.317155]  __vmalloc_node_range+0x702/0x740\n[    9.317160]  ? device_add+0x17f/0x920\n[    9.317164]  ? dev_set_name+0x53/0x70\n[    9.317166]  ? platform_device_add+0xf9/0x240\n[    9.317168]  __vmalloc_node+0x49/0x50\n[    9.317170]  ? ghes_estatus_pool_init+0x43/0xa0\n[    9.317176]  vmalloc+0x21/0x30\n[    9.317177]  ghes_estatus_pool_init+0x43/0xa0\n[    9.317179]  acpi_hest_init+0x129/0x19c\n[    9.317185]  acpi_init+0x434/0x4a4\n[    9.317188]  ? acpi_sleep_proc_init+0x2a/0x2a\n[    9.317190]  do_one_initcall+0x48/0x200\n[    9.317195]  kernel_init_freeable+0x221/0x284\n[    9.317200]  ? rest_init+0xe0/0xe0\n[    9.317204]  kernel_init+0x1a/0x130\n[    9.317205]  ret_from_fork+0x22/0x30\n[    9.317208]  \u003c/TASK\u003e\n\n[ rjw: Subject and changelog edits ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49887",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: meson: vdec: fix possible refcount leak in vdec_probe()\n\nv4l2_device_unregister need to be called to put the refcount got by\nv4l2_device_register when vdec_probe fails or vdec_remove is called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49888",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: entry: avoid kprobe recursion\n\nThe cortex_a76_erratum_1463225_debug_handler() function is called when\nhandling debug exceptions (and synchronous exceptions from BRK\ninstructions), and so is called when a probed function executes. If the\ncompiler does not inline cortex_a76_erratum_1463225_debug_handler(), it\ncan be probed.\n\nIf cortex_a76_erratum_1463225_debug_handler() is probed, any debug\nexception or software breakpoint exception will result in recursive\nexceptions leading to a stack overflow. This can be triggered with the\nftrace multiple_probes selftest, and as per the example splat below.\n\nThis is a regression caused by commit:\n\n  6459b8469753e9fe (\"arm64: entry: consolidate Cortex-A76 erratum 1463225 workaround\")\n\n... which removed the NOKPROBE_SYMBOL() annotation associated with the\nfunction.\n\nMy intent was that cortex_a76_erratum_1463225_debug_handler() would be\ninlined into its caller, el1_dbg(), which is marked noinstr and cannot\nbe probed. Mark cortex_a76_erratum_1463225_debug_handler() as\n__always_inline to ensure this.\n\nExample splat prior to this patch (with recursive entries elided):\n\n| # echo p cortex_a76_erratum_1463225_debug_handler \u003e /sys/kernel/debug/tracing/kprobe_events\n| # echo p do_el0_svc \u003e\u003e /sys/kernel/debug/tracing/kprobe_events\n| # echo 1 \u003e /sys/kernel/debug/tracing/events/kprobes/enable\n| Insufficient stack space to handle exception!\n| ESR: 0x0000000096000047 -- DABT (current EL)\n| FAR: 0xffff800009cefff0\n| Task stack:     [0xffff800009cf0000..0xffff800009cf4000]\n| IRQ stack:      [0xffff800008000000..0xffff800008004000]\n| Overflow stack: [0xffff00007fbc00f0..0xffff00007fbc10f0]\n| CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2\n| Hardware name: linux,dummy-virt (DT)\n| pstate: 604003c5 (nZCv DAIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n| pc : arm64_enter_el1_dbg+0x4/0x20\n| lr : el1_dbg+0x24/0x5c\n| sp : ffff800009cf0000\n| x29: ffff800009cf0000 x28: ffff000002c74740 x27: 0000000000000000\n| x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n| x23: 00000000604003c5 x22: ffff80000801745c x21: 0000aaaac95ac068\n| x20: 00000000f2000004 x19: ffff800009cf0040 x18: 0000000000000000\n| x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n| x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n| x11: 0000000000000010 x10: ffff800008c87190 x9 : ffff800008ca00d0\n| x8 : 000000000000003c x7 : 0000000000000000 x6 : 0000000000000000\n| x5 : 0000000000000000 x4 : 0000000000000000 x3 : 00000000000043a4\n| x2 : 00000000f2000004 x1 : 00000000f2000004 x0 : ffff800009cf0040\n| Kernel panic - not syncing: kernel stack overflow\n| CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2\n| Hardware name: linux,dummy-virt (DT)\n| Call trace:\n|  dump_backtrace+0xe4/0x104\n|  show_stack+0x18/0x4c\n|  dump_stack_lvl+0x64/0x7c\n|  dump_stack+0x18/0x38\n|  panic+0x14c/0x338\n|  test_taint+0x0/0x2c\n|  panic_bad_stack+0x104/0x118\n|  handle_bad_stack+0x34/0x48\n|  __bad_stack+0x78/0x7c\n|  arm64_enter_el1_dbg+0x4/0x20\n|  el1h_64_sync_handler+0x40/0x98\n|  el1h_64_sync+0x64/0x68\n|  cortex_a76_erratum_1463225_debug_handler+0x0/0x34\n...\n|  el1h_64_sync_handler+0x40/0x98\n|  el1h_64_sync+0x64/0x68\n|  cortex_a76_erratum_1463225_debug_handler+0x0/0x34\n...\n|  el1h_64_sync_handler+0x40/0x98\n|  el1h_64_sync+0x64/0x68\n|  cortex_a76_erratum_1463225_debug_handler+0x0/0x34\n|  el1h_64_sync_handler+0x40/0x98\n|  el1h_64_sync+0x64/0x68\n|  do_el0_svc+0x0/0x28\n|  el0t_64_sync_handler+0x84/0xf0\n|  el0t_64_sync+0x18c/0x190\n| Kernel Offset: disabled\n| CPU features: 0x0080,00005021,19001080\n| Memory Limit: none\n| ---[ end Kernel panic - not syncing: kernel stack overflow ]---\n\nWith this patch, cortex_a76_erratum_1463225_debug_handler() is inlined\ninto el1_dbg(), and el1_dbg() cannot be probed:\n\n| # echo p cortex_a76_erratum_1463225_debug_handler \u003e /sys/kernel/debug/tracing/kprobe_events\n| sh: write error: No such file or directory\n| # grep -w cortex_a76_errat\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49889",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Check for NULL cpu_buffer in ring_buffer_wake_waiters()\n\nOn some machines the number of listed CPUs may be bigger than the actual\nCPUs that exist. The tracing subsystem allocates a per_cpu directory with\naccess to the per CPU ring buffer via a cpuX file. But to save space, the\nring buffer will only allocate buffers for online CPUs, even though the\nCPU array will be as big as the nr_cpu_ids.\n\nWith the addition of waking waiters on the ring buffer when closing the\nfile, the ring_buffer_wake_waiters() now needs to make sure that the\nbuffer is allocated (with the irq_work allocated with it) before trying to\nwake waiters, as it will cause a NULL pointer dereference.\n\nWhile debugging this, I added a NULL check for the buffer itself (which is\nOK to do), and also NULL pointer checks against buffer-\u003ebuffers (which is\nnot fine, and will WARN) as well as making sure the CPU number passed in\nis within the nr_cpu_ids (which is also not fine if it isn't).\n\n\nBugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=1204705",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncapabilities: fix potential memleak on error path from vfs_getxattr_alloc()\n\nIn cap_inode_getsecurity(), we will use vfs_getxattr_alloc() to\ncomplete the memory allocation of tmpbuf, if we have completed\nthe memory allocation of tmpbuf, but failed to call handler-\u003eget(...),\nthere will be a memleak in below logic:\n\n  |-- ret = (int)vfs_getxattr_alloc(mnt_userns, ...)\n    |           /* ^^^ alloc for tmpbuf */\n    |-- value = krealloc(*xattr_value, error + 1, flags)\n    |           /* ^^^ alloc memory */\n    |-- error = handler-\u003eget(handler, ...)\n    |           /* error! */\n    |-- *xattr_value = value\n    |           /* xattr_value is \u0026tmpbuf (memory leak!) */\n\nSo we will try to free(tmpbuf) after vfs_getxattr_alloc() fails to fix it.\n\n[PM: subject line and backtrace tweaks]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49891",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: kprobe: Fix memory leak in test_gen_kprobe/kretprobe_cmd()\n\ntest_gen_kprobe_cmd() only free buf in fail path, hence buf will leak\nwhen there is no failure. Move kfree(buf) from fail path to common path\nto prevent the memleak. The same reason and solution in\ntest_gen_kretprobe_cmd().\n\nunreferenced object 0xffff888143b14000 (size 2048):\n  comm \"insmod\", pid 52490, jiffies 4301890980 (age 40.553s)\n  hex dump (first 32 bytes):\n    70 3a 6b 70 72 6f 62 65 73 2f 67 65 6e 5f 6b 70  p:kprobes/gen_kp\n    72 6f 62 65 5f 74 65 73 74 20 64 6f 5f 73 79 73  robe_test do_sys\n  backtrace:\n    [\u003c000000006d7b836b\u003e] kmalloc_trace+0x27/0xa0\n    [\u003c0000000009528b5b\u003e] 0xffffffffa059006f\n    [\u003c000000008408b580\u003e] do_one_initcall+0x87/0x2a0\n    [\u003c00000000c4980a7e\u003e] do_init_module+0xdf/0x320\n    [\u003c00000000d775aad0\u003e] load_module+0x3006/0x3390\n    [\u003c00000000e9a74b80\u003e] __do_sys_finit_module+0x113/0x1b0\n    [\u003c000000003726480d\u003e] do_syscall_64+0x35/0x80\n    [\u003c000000003441e93b\u003e] entry_SYSCALL_64_after_hwframe+0x46/0xb0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49892",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix use-after-free for dynamic ftrace_ops\n\nKASAN reported a use-after-free with ftrace ops [1]. It was found from\nvmcore that perf had registered two ops with the same content\nsuccessively, both dynamic. After unregistering the second ops, a\nuse-after-free occurred.\n\nIn ftrace_shutdown(), when the second ops is unregistered, the\nFTRACE_UPDATE_CALLS command is not set because there is another enabled\nops with the same content.  Also, both ops are dynamic and the ftrace\ncallback function is ftrace_ops_list_func, so the\nFTRACE_UPDATE_TRACE_FUNC command will not be set. Eventually the value\nof 'command' will be 0 and ftrace_shutdown() will skip the rcu\nsynchronization.\n\nHowever, ftrace may be activated. When the ops is released, another CPU\nmay be accessing the ops.  Add the missing synchronization to fix this\nproblem.\n\n[1]\nBUG: KASAN: use-after-free in __ftrace_ops_list_func kernel/trace/ftrace.c:7020 [inline]\nBUG: KASAN: use-after-free in ftrace_ops_list_func+0x2b0/0x31c kernel/trace/ftrace.c:7049\nRead of size 8 at addr ffff56551965bbc8 by task syz-executor.2/14468\n\nCPU: 1 PID: 14468 Comm: syz-executor.2 Not tainted 5.10.0 #7\nHardware name: linux,dummy-virt (DT)\nCall trace:\n dump_backtrace+0x0/0x40c arch/arm64/kernel/stacktrace.c:132\n show_stack+0x30/0x40 arch/arm64/kernel/stacktrace.c:196\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x1b4/0x248 lib/dump_stack.c:118\n print_address_description.constprop.0+0x28/0x48c mm/kasan/report.c:387\n __kasan_report mm/kasan/report.c:547 [inline]\n kasan_report+0x118/0x210 mm/kasan/report.c:564\n check_memory_region_inline mm/kasan/generic.c:187 [inline]\n __asan_load8+0x98/0xc0 mm/kasan/generic.c:253\n __ftrace_ops_list_func kernel/trace/ftrace.c:7020 [inline]\n ftrace_ops_list_func+0x2b0/0x31c kernel/trace/ftrace.c:7049\n ftrace_graph_call+0x0/0x4\n __might_sleep+0x8/0x100 include/linux/perf_event.h:1170\n __might_fault mm/memory.c:5183 [inline]\n __might_fault+0x58/0x70 mm/memory.c:5171\n do_strncpy_from_user lib/strncpy_from_user.c:41 [inline]\n strncpy_from_user+0x1f4/0x4b0 lib/strncpy_from_user.c:139\n getname_flags+0xb0/0x31c fs/namei.c:149\n getname+0x2c/0x40 fs/namei.c:209\n [...]\n\nAllocated by task 14445:\n kasan_save_stack+0x24/0x50 mm/kasan/common.c:48\n kasan_set_track mm/kasan/common.c:56 [inline]\n __kasan_kmalloc mm/kasan/common.c:479 [inline]\n __kasan_kmalloc.constprop.0+0x110/0x13c mm/kasan/common.c:449\n kasan_kmalloc+0xc/0x14 mm/kasan/common.c:493\n kmem_cache_alloc_trace+0x440/0x924 mm/slub.c:2950\n kmalloc include/linux/slab.h:563 [inline]\n kzalloc include/linux/slab.h:675 [inline]\n perf_event_alloc.part.0+0xb4/0x1350 kernel/events/core.c:11230\n perf_event_alloc kernel/events/core.c:11733 [inline]\n __do_sys_perf_event_open kernel/events/core.c:11831 [inline]\n __se_sys_perf_event_open+0x550/0x15f4 kernel/events/core.c:11723\n __arm64_sys_perf_event_open+0x6c/0x80 kernel/events/core.c:11723\n [...]\n\nFreed by task 14445:\n kasan_save_stack+0x24/0x50 mm/kasan/common.c:48\n kasan_set_track+0x24/0x34 mm/kasan/common.c:56\n kasan_set_free_info+0x20/0x40 mm/kasan/generic.c:358\n __kasan_slab_free.part.0+0x11c/0x1b0 mm/kasan/common.c:437\n __kasan_slab_free mm/kasan/common.c:445 [inline]\n kasan_slab_free+0x2c/0x40 mm/kasan/common.c:446\n slab_free_hook mm/slub.c:1569 [inline]\n slab_free_freelist_hook mm/slub.c:1608 [inline]\n slab_free mm/slub.c:3179 [inline]\n kfree+0x12c/0xc10 mm/slub.c:4176\n perf_event_alloc.part.0+0xa0c/0x1350 kernel/events/core.c:11434\n perf_event_alloc kernel/events/core.c:11733 [inline]\n __do_sys_perf_event_open kernel/events/core.c:11831 [inline]\n __se_sys_perf_event_open+0x550/0x15f4 kernel/events/core.c:11723\n [...]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: piix4: Fix adapter not be removed in piix4_remove()\n\nIn piix4_probe(), the piix4 adapter will be registered in:\n\n   piix4_probe()\n     piix4_add_adapters_sb800() / piix4_add_adapter()\n       i2c_add_adapter()\n\nBased on the probed device type, piix4_add_adapters_sb800() or single\npiix4_add_adapter() will be called.\nFor the former case, piix4_adapter_count is set as the number of adapters,\nwhile for antoher case it is not set and kept default *zero*.\n\nWhen piix4 is removed, piix4_remove() removes the adapters added in\npiix4_probe(), basing on the piix4_adapter_count value.\nBecause the count is zero for the single adapter case, the adapter won't\nbe removed and makes the sources allocated for adapter leaked, such as\nthe i2c client and device.\n\nThese sources can still be accessed by i2c or bus and cause problems.\nAn easily reproduced case is that if a new adapter is registered, i2c\nwill get the leaked adapter and try to call smbus_algorithm, which was\nalready freed:\n\nTriggered by: rmmod i2c_piix4 \u0026\u0026 modprobe max31730\n\n BUG: unable to handle page fault for address: ffffffffc053d860\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n Oops: 0000 [#1] PREEMPT SMP KASAN\n CPU: 0 PID: 3752 Comm: modprobe Tainted: G\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n RIP: 0010:i2c_default_probe (drivers/i2c/i2c-core-base.c:2259) i2c_core\n RSP: 0018:ffff888107477710 EFLAGS: 00000246\n ...\n \u003cTASK\u003e\n  i2c_detect (drivers/i2c/i2c-core-base.c:2302) i2c_core\n  __process_new_driver (drivers/i2c/i2c-core-base.c:1336) i2c_core\n  bus_for_each_dev (drivers/base/bus.c:301)\n  i2c_for_each_dev (drivers/i2c/i2c-core-base.c:1823) i2c_core\n  i2c_register_driver (drivers/i2c/i2c-core-base.c:1861) i2c_core\n  do_one_initcall (init/main.c:1296)\n  do_init_module (kernel/module/main.c:2455)\n  ...\n \u003c/TASK\u003e\n ---[ end trace 0000000000000000 ]---\n\nFix this problem by correctly set piix4_adapter_count as 1 for the\nsingle adapter so it can be normally removed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: Fix possible leaked pernet namespace in smc_init()\n\nIn smc_init(), register_pernet_subsys(\u0026smc_net_stat_ops) is called\nwithout any error handling.\nIf it fails, registering of \u0026smc_net_ops won't be reverted.\nAnd if smc_nl_init() fails, \u0026smc_net_stat_ops itself won't be reverted.\n\nThis leaves wild ops in subsystem linkedlist and when another module\ntries to call register_pernet_operations() it triggers page fault:\n\nBUG: unable to handle page fault for address: fffffbfff81b964c\nRIP: 0010:register_pernet_operations+0x1b9/0x5f0\nCall Trace:\n  \u003cTASK\u003e\n  register_pernet_subsys+0x29/0x40\n  ebtables_init+0x58/0x1000 [ebtables]\n  ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49906",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: Free rwi on reset success\n\nFree the rwi structure in the event that the last rwi in the list\nprocessed successfully. The logic in commit 4f408e1fa6e1 (\"ibmvnic:\nretry reset if there are no other resets\") introduces an issue that\nresults in a 32 byte memory leak whenever the last rwi in the list\ngets processed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix possible memory leak in mISDN_register_device()\n\nAfer commit 1fa5ae857bb1 (\"driver core: get rid of struct device's\nbus_id string array\"), the name of device is allocated dynamically,\nadd put_device() to give up the reference, so that the name can be\nfreed in kobject_cleanup() when the refcount is 0.\n\nSet device class before put_device() to avoid null release() function\nWARN message in device_release().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49916",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrose: Fix NULL pointer dereference in rose_send_frame()\n\nThe syzkaller reported an issue:\n\nKASAN: null-ptr-deref in range [0x0000000000000380-0x0000000000000387]\nCPU: 0 PID: 4069 Comm: kworker/0:15 Not tainted 6.0.0-syzkaller-02734-g0326074ff465 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/22/2022\nWorkqueue: rcu_gp srcu_invoke_callbacks\nRIP: 0010:rose_send_frame+0x1dd/0x2f0 net/rose/rose_link.c:101\nCall Trace:\n \u003cIRQ\u003e\n rose_transmit_clear_request+0x1d5/0x290 net/rose/rose_link.c:255\n rose_rx_call_request+0x4c0/0x1bc0 net/rose/af_rose.c:1009\n rose_loopback_timer+0x19e/0x590 net/rose/rose_loopback.c:111\n call_timer_fn+0x1a0/0x6b0 kernel/time/timer.c:1474\n expire_timers kernel/time/timer.c:1519 [inline]\n __run_timers.part.0+0x674/0xa80 kernel/time/timer.c:1790\n __run_timers kernel/time/timer.c:1768 [inline]\n run_timer_softirq+0xb3/0x1d0 kernel/time/timer.c:1803\n __do_softirq+0x1d0/0x9c8 kernel/softirq.c:571\n [...]\n \u003c/IRQ\u003e\n\nIt triggers NULL pointer dereference when 'neigh-\u003edev-\u003edev_addr' is\ncalled in the rose_send_frame(). It's the first occurrence of the\n`neigh` is in rose_loopback_timer() as `rose_loopback_neigh', and\nthe 'dev' in 'rose_loopback_neigh' is initialized sa nullptr.\n\nIt had been fixed by commit 3b3fd068c56e3fbea30090859216a368398e39bf\n(\"rose: Fix Null pointer dereference in rose_send_frame()\") ever.\nBut it's introduced by commit 3c53cd65dece47dd1f9d3a809f32e59d1d87b2b8\n(\"rose: check NULL rose_loopback_neigh-\u003eloopback\") again.\n\nWe fix it by add NULL check in rose_transmit_clear_request(). When\nthe 'dev' in 'neigh' is NULL, we don't reply the request and just\nclear it.\n\nsyzkaller don't provide repro, and I provide a syz repro like:\nr0 = syz_init_net_socket$bt_sco(0x1f, 0x5, 0x2)\nioctl$sock_inet_SIOCSIFFLAGS(r0, 0x8914, \u0026(0x7f0000000180)={'rose0\\x00', 0x201})\nr1 = syz_init_net_socket$rose(0xb, 0x5, 0x0)\nbind$rose(r1, \u0026(0x7f00000000c0)=@full={0xb, @dev, @null, 0x0, [@null, @null, @netrom, @netrom, @default, @null]}, 0x40)\nconnect$rose(r1, \u0026(0x7f0000000240)=@short={0xb, @dev={0xbb, 0xbb, 0xbb, 0x1, 0x0}, @remote={0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1}, 0x1, @netrom={0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0x0, 0x0}}, 0x1c)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49922",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nfcmrvl: Fix potential memory leak in nfcmrvl_i2c_nci_send()\n\nnfcmrvl_i2c_nci_send() will be called by nfcmrvl_nci_send(), and skb\nshould be freed in nfcmrvl_i2c_nci_send(). However, nfcmrvl_nci_send()\nwill only free skb when i2c_master_send() return \u003e=0, which means skb\nwill memleak when i2c_master_send() failed. Free skb no matter whether\ni2c_master_send() succeeds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nxp-nci: Fix potential memory leak in nxp_nci_send()\n\nnxp_nci_send() will call nxp_nci_i2c_write(), and only free skb when\nnxp_nci_i2c_write() failed. However, even if the nxp_nci_i2c_write()\nrun succeeds, the skb will not be freed in nxp_nci_i2c_write(). As the\nresult, the skb will memleak. nxp_nci_send() should also free the skb\nwhen nxp_nci_i2c_write() succeeds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: fdp: Fix potential memory leak in fdp_nci_send()\n\nfdp_nci_send() will call fdp_nci_i2c_write that will not free skb in\nthe function. As a result, when fdp_nci_i2c_write() finished, the skb\nwill memleak. fdp_nci_send() should free skb after fdp_nci_i2c_write()\nfinished.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/core: Fix null-ptr-deref in ib_core_cleanup()\n\nKASAN reported a null-ptr-deref error:\n\n  KASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f]\n  CPU: 1 PID: 379\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n  RIP: 0010:destroy_workqueue+0x2f/0x740\n  RSP: 0018:ffff888016137df8 EFLAGS: 00000202\n  ...\n  Call Trace:\n   ib_core_cleanup+0xa/0xa1 [ib_core]\n   __do_sys_delete_module.constprop.0+0x34f/0x5b0\n   do_syscall_64+0x3a/0x90\n   entry_SYSCALL_64_after_hwframe+0x63/0xcd\n  RIP: 0033:0x7fa1a0d221b7\n  ...\n\nIt is because the fail of roce_gid_mgmt_init() is ignored:\n\n ib_core_init()\n   roce_gid_mgmt_init()\n     gid_cache_wq = alloc_ordered_workqueue # fail\n ...\n ib_core_cleanup()\n   roce_gid_mgmt_cleanup()\n     destroy_workqueue(gid_cache_wq)\n     # destroy an unallocated wq\n\nFix this by catching the fail of roce_gid_mgmt_init() in ib_core_init().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs4: Fix kmemleak when allocate slot failed\n\nIf one of the slot allocate failed, should cleanup all the other\nallocated slots, otherwise, the allocated slots will leak:\n\n  unreferenced object 0xffff8881115aa100 (size 64):\n    comm \"\"mount.nfs\"\", pid 679, jiffies 4294744957 (age 115.037s)\n    hex dump (first 32 bytes):\n      00 cc 19 73 81 88 ff ff 00 a0 5a 11 81 88 ff ff  ...s......Z.....\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace:\n      [\u003c000000007a4c434a\u003e] nfs4_find_or_create_slot+0x8e/0x130\n      [\u003c000000005472a39c\u003e] nfs4_realloc_slot_table+0x23f/0x270\n      [\u003c00000000cd8ca0eb\u003e] nfs40_init_client+0x4a/0x90\n      [\u003c00000000128486db\u003e] nfs4_init_client+0xce/0x270\n      [\u003c000000008d2cacad\u003e] nfs4_set_client+0x1a2/0x2b0\n      [\u003c000000000e593b52\u003e] nfs4_create_server+0x300/0x5f0\n      [\u003c00000000e4425dd2\u003e] nfs4_try_get_tree+0x65/0x110\n      [\u003c00000000d3a6176f\u003e] vfs_get_tree+0x41/0xf0\n      [\u003c0000000016b5ad4c\u003e] path_mount+0x9b3/0xdd0\n      [\u003c00000000494cae71\u003e] __x64_sys_mount+0x190/0x1d0\n      [\u003c000000005d56bdec\u003e] do_syscall_64+0x35/0x80\n      [\u003c00000000687c9ae4\u003e] entry_SYSCALL_64_after_hwframe+0x46/0xb0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix null-ptr-deref when xps sysfs alloc failed\n\nThere is a null-ptr-deref when xps sysfs alloc failed:\n  BUG: KASAN: null-ptr-deref in sysfs_do_create_link_sd+0x40/0xd0\n  Read of size 8 at addr 0000000000000030 by task gssproxy/457\n\n  CPU: 5 PID: 457 Comm: gssproxy Not tainted 6.0.0-09040-g02357b27ee03 #9\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x34/0x44\n   kasan_report+0xa3/0x120\n   sysfs_do_create_link_sd+0x40/0xd0\n   rpc_sysfs_client_setup+0x161/0x1b0\n   rpc_new_client+0x3fc/0x6e0\n   rpc_create_xprt+0x71/0x220\n   rpc_create+0x1d4/0x350\n   gssp_rpc_create+0xc3/0x160\n   set_gssp_clnt+0xbc/0x140\n   write_gssp+0x116/0x1a0\n   proc_reg_write+0xd6/0x130\n   vfs_write+0x177/0x690\n   ksys_write+0xb9/0x150\n   do_syscall_64+0x35/0x80\n   entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nWhen the xprt_switch sysfs alloc failed, should not add xprt and\nswitch sysfs to it, otherwise, maybe null-ptr-deref; also initialize\nthe 'xps_sysfs' to NULL to avoid oops when destroy it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Correctly move list in sc_disable()\n\nCommit 13bac861952a (\"IB/hfi1: Fix abba locking issue with sc_disable()\")\nincorrectly tries to move a list from one list head to another.  The\nresult is a kernel crash.\n\nThe crash is triggered when a link goes down and there are waiters for a\nsend to complete.  The following signature is seen:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000030\n  [...]\n  Call Trace:\n   sc_disable+0x1ba/0x240 [hfi1]\n   pio_freeze+0x3d/0x60 [hfi1]\n   handle_freeze+0x27/0x1b0 [hfi1]\n   process_one_work+0x1b0/0x380\n   ? process_one_work+0x380/0x380\n   worker_thread+0x30/0x360\n   ? process_one_work+0x380/0x380\n   kthread+0xd7/0x100\n   ? kthread_complete_and_exit+0x20/0x20\n   ret_from_fork+0x1f/0x30\n\nThe fix is to use the correct call to move the list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49934",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Fix UAF in ieee80211_scan_rx()\n\nieee80211_scan_rx() tries to access scan_req-\u003eflags after a\nnull check, but a UAF is observed when the scan is completed\nand __ieee80211_scan_completed() executes, which then calls\ncfg80211_scan_done() leading to the freeing of scan_req.\n\nSince scan_req is rcu_dereference()'d, prevent the racing in\n__ieee80211_scan_completed() by ensuring that from mac80211's\nPOV it is no longer accessed from an RCU read critical section\nbefore we call cfg80211_scan_done().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix small mempool leak in SMB2_negotiate()\n\nIn some cases of failure (dialect mismatches) in SMB2_negotiate(), after\nthe request is sent, the checks would return -EIO when they should be\nrather setting rc = -EIO and jumping to neg_exit to free the response\nbuffer from mempool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49940",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: add sanity check for gsm-\u003ereceive in gsm_receive_buf()\n\nA null pointer dereference can happen when attempting to access the\n\"gsm-\u003ereceive()\" function in gsmld_receive_buf(). Currently, the code\nassumes that gsm-\u003erecieve is only called after MUX activation.\nSince the gsmld_receive_buf() function can be accessed without the need to\ninitialize the MUX, the gsm-\u003ereceive() function will not be set and a\nNULL pointer dereference will occur.\n\nFix this by avoiding the call to \"gsm-\u003ereceive()\" in case the function is\nnot initialized by adding a sanity check.\n\nCall Trace:\n \u003cTASK\u003e\n gsmld_receive_buf+0x1c2/0x2f0 drivers/tty/n_gsm.c:2861\n tiocsti drivers/tty/tty_io.c:2293 [inline]\n tty_ioctl+0xa75/0x15d0 drivers/tty/tty_io.c:2692\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:870 [inline]\n __se_sys_ioctl fs/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:856\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49942",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Don't finalize CSA in IBSS mode if state is disconnected\n\nWhen we are not connected to a channel, sending channel \"switch\"\nannouncement doesn't make any sense.\n\nThe BSS list is empty in that case. This causes the for loop in\ncfg80211_get_bss() to be bypassed, so the function returns NULL\n(check line 1424 of net/wireless/scan.c), causing the WARN_ON()\nin ieee80211_ibss_csa_beacon() to get triggered (check line 500\nof net/mac80211/ibss.c), which was consequently reported on the\nsyzkaller dashboard.\n\nThus, check if we have an existing connection before generating\nthe CSA beacon in ieee80211_ibss_finish_csa().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (gpio-fan) Fix array out of bounds access\n\nThe driver does not check if the cooling state passed to\ngpio_fan_set_cur_state() exceeds the maximum cooling state as\nstored in fan_data-\u003enum_speeds. Since the cooling state is later\nused as an array index in set_fan_speed(), an array out of bounds\naccess can occur.\nThis can be exploited by setting the state of the thermal cooling device\nto arbitrary values, causing for example a kernel oops when unavailable\nmemory is accessed this way.\n\nExample kernel oops:\n[  807.987276] Unable to handle kernel paging request at virtual address ffffff80d0588064\n[  807.987369] Mem abort info:\n[  807.987398]   ESR = 0x96000005\n[  807.987428]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  807.987477]   SET = 0, FnV = 0\n[  807.987507]   EA = 0, S1PTW = 0\n[  807.987536]   FSC = 0x05: level 1 translation fault\n[  807.987570] Data abort info:\n[  807.987763]   ISV = 0, ISS = 0x00000005\n[  807.987801]   CM = 0, WnR = 0\n[  807.987832] swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000001165000\n[  807.987872] [ffffff80d0588064] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000\n[  807.987961] Internal error: Oops: 96000005 [#1] PREEMPT SMP\n[  807.987992] Modules linked in: cmac algif_hash aes_arm64 algif_skcipher af_alg bnep hci_uart btbcm bluetooth ecdh_generic ecc 8021q garp stp llc snd_soc_hdmi_codec brcmfmac vc4 brcmutil cec drm_kms_helper snd_soc_core cfg80211 snd_compress bcm2835_codec(C) snd_pcm_dmaengine syscopyarea bcm2835_isp(C) bcm2835_v4l2(C) sysfillrect v4l2_mem2mem bcm2835_mmal_vchiq(C) raspberrypi_hwmon sysimgblt videobuf2_dma_contig videobuf2_vmalloc fb_sys_fops videobuf2_memops rfkill videobuf2_v4l2 videobuf2_common i2c_bcm2835 snd_bcm2835(C) videodev snd_pcm snd_timer snd mc vc_sm_cma(C) gpio_fan uio_pdrv_genirq uio drm fuse drm_panel_orientation_quirks backlight ip_tables x_tables ipv6\n[  807.988508] CPU: 0 PID: 1321 Comm: bash Tainted: G         C        5.15.56-v8+ #1575\n[  807.988548] Hardware name: Raspberry Pi 3 Model B Rev 1.2 (DT)\n[  807.988574] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  807.988608] pc : set_fan_speed.part.5+0x34/0x80 [gpio_fan]\n[  807.988654] lr : gpio_fan_set_cur_state+0x34/0x50 [gpio_fan]\n[  807.988691] sp : ffffffc008cf3bd0\n[  807.988710] x29: ffffffc008cf3bd0 x28: ffffff80019edac0 x27: 0000000000000000\n[  807.988762] x26: 0000000000000000 x25: 0000000000000000 x24: ffffff800747c920\n[  807.988787] x23: 000000000000000a x22: ffffff800369f000 x21: 000000001999997c\n[  807.988854] x20: ffffff800369f2e8 x19: ffffff8002ae8080 x18: 0000000000000000\n[  807.988877] x17: 0000000000000000 x16: 0000000000000000 x15: 000000559e271b70\n[  807.988938] x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n[  807.988960] x11: 0000000000000000 x10: ffffffc008cf3c20 x9 : ffffffcfb60c741c\n[  807.989018] x8 : 000000000000000a x7 : 00000000ffffffc9 x6 : 0000000000000009\n[  807.989040] x5 : 000000000000002a x4 : 0000000000000000 x3 : ffffff800369f2e8\n[  807.989062] x2 : 000000000000e780 x1 : 0000000000000001 x0 : ffffff80d0588060\n[  807.989084] Call trace:\n[  807.989091]  set_fan_speed.part.5+0x34/0x80 [gpio_fan]\n[  807.989113]  gpio_fan_set_cur_state+0x34/0x50 [gpio_fan]\n[  807.989199]  cur_state_store+0x84/0xd0\n[  807.989221]  dev_attr_store+0x20/0x38\n[  807.989262]  sysfs_kf_write+0x4c/0x60\n[  807.989282]  kernfs_fop_write_iter+0x130/0x1c0\n[  807.989298]  new_sync_write+0x10c/0x190\n[  807.989315]  vfs_write+0x254/0x378\n[  807.989362]  ksys_write+0x70/0xf8\n[  807.989379]  __arm64_sys_write+0x24/0x30\n[  807.989424]  invoke_syscall+0x4c/0x110\n[  807.989442]  el0_svc_common.constprop.3+0xfc/0x120\n[  807.989458]  do_el0_svc+0x2c/0x90\n[  807.989473]  el0_svc+0x24/0x60\n[  807.989544]  el0t_64_sync_handler+0x90/0xb8\n[  807.989558]  el0t_64_sync+0x1a0/0x1a4\n[  807.989579] Code: b9403801 f9402800 7100003f 8b35cc00 (b9400416)\n[  807.989627] ---[ end t\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: bcm: rpi: Prevent out-of-bounds access\n\nThe while loop in raspberrypi_discover_clocks() relies on the assumption\nthat the id of the last clock element is zero. Because this data comes\nfrom the Videocore firmware and it doesn't guarantuee such a behavior\nthis could lead to out-of-bounds access. So fix this by providing\na sentinel element.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvt: Clear selection before changing the font\n\nWhen changing the console font with ioctl(KDFONTOP) the new font size\ncan be bigger than the previous font. A previous selection may thus now\nbe outside of the new screen size and thus trigger out-of-bounds\naccesses to graphics memory if the selection is removed in\nvc_do_resize().\n\nPrevent such out-of-memory accesses by dropping the selection before the\nvarious con_font_set() console handlers are called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49950",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: fix memory corruption on open\n\nThe probe session-duplication overflow check incremented the session\ncount also when there were no more available sessions so that memory\nbeyond the fixed-size slab-allocated session array could be corrupted in\nfastrpc_session_alloc() on open().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49952",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: fix memory corruption on probe\n\nAdd the missing sanity check on the probed-session count to avoid\ncorrupting memory beyond the fixed-size slab-allocated session array\nwhen there are more than FASTRPC_MAX_SESSIONS sessions defined in the\ndevicetree.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49954",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: iforce - wake up after clearing IFORCE_XMIT_RUNNING flag\n\nsyzbot is reporting hung task at __input_unregister_device() [1], for\niforce_close() waiting at wait_event_interruptible() with dev-\u003emutex held\nis blocking input_disconnect_device() from __input_unregister_device().\n\nIt seems that the cause is simply that commit c2b27ef672992a20 (\"Input:\niforce - wait for command completion when closing the device\") forgot to\ncall wake_up() after clear_bit().\n\nFix this problem by introducing a helper that calls clear_bit() followed\nby wake_up_all().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49957",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkcm: fix strp_init() order and cleanup\n\nstrp_init() is called just a few lines above this csk-\u003esk_user_data\ncheck, it also initializes strp-\u003ework etc., therefore, it is\nunnecessary to call strp_done() to cancel the freshly initialized\nwork.\n\nAnd if sk_user_data is already used by KCM, psock-\u003estrp should not be\ntouched, particularly strp-\u003ework state, so we need to move strp_init()\nafter the csk-\u003esk_user_data check.\n\nThis also makes a lockdep warning reported by syzbot go away.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: fix netdevice reference leaks in attach_default_qdiscs()\n\nIn attach_default_qdiscs(), if a dev has multiple queues and queue 0 fails\nto attach qdisc because there is no memory in attach_one_default_qdisc().\nThen dev-\u003eqdisc will be noop_qdisc by default. But the other queues may be\nable to successfully attach to default qdisc.\n\nIn this case, the fallback to noqueue process will be triggered. If the\noriginal attached qdisc is not released and a new one is directly\nattached, this will cause netdevice reference leaks.\n\nThe following is the bug log:\n\nveth0: default qdisc (fq_codel) fail, fallback to noqueue\nunregister_netdevice: waiting for veth0 to become free. Usage count = 32\nleaked reference.\n qdisc_alloc+0x12e/0x210\n qdisc_create_dflt+0x62/0x140\n attach_one_default_qdisc.constprop.41+0x44/0x70\n dev_activate+0x128/0x290\n __dev_open+0x12a/0x190\n __dev_change_flags+0x1a2/0x1f0\n dev_change_flags+0x23/0x60\n do_setlink+0x332/0x1150\n __rtnl_newlink+0x52f/0x8e0\n rtnl_newlink+0x43/0x70\n rtnetlink_rcv_msg+0x140/0x3b0\n netlink_rcv_skb+0x50/0x100\n netlink_unicast+0x1bb/0x290\n netlink_sendmsg+0x37c/0x4e0\n sock_sendmsg+0x5f/0x70\n ____sys_sendmsg+0x208/0x280\n\nFix this bug by clearing any non-noop qdiscs that may have been assigned\nbefore trying to re-attach.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915: fix null pointer dereference\n\nAsus chromebook CX550 crashes during boot on v5.17-rc1 kernel.\nThe root cause is null pointer defeference of bi_next\nin tgl_get_bw_info() in drivers/gpu/drm/i915/display/intel_bw.c.\n\nBUG: kernel NULL pointer dereference, address: 000000000000002e\nPGD 0 P4D 0\nOops: 0002 [#1] PREEMPT SMP NOPTI\nCPU: 0 PID: 1 Comm: swapper/0 Tainted: G     U            5.17.0-rc1\nHardware name: Google Delbin/Delbin, BIOS Google_Delbin.13672.156.3 05/14/2021\nRIP: 0010:tgl_get_bw_info+0x2de/0x510\n...\n[    2.554467] Call Trace:\n[    2.554467]  \u003cTASK\u003e\n[    2.554467]  intel_bw_init_hw+0x14a/0x434\n[    2.554467]  ? _printk+0x59/0x73\n[    2.554467]  ? _dev_err+0x77/0x91\n[    2.554467]  i915_driver_hw_probe+0x329/0x33e\n[    2.554467]  i915_driver_probe+0x4c8/0x638\n[    2.554467]  i915_pci_probe+0xf8/0x14e\n[    2.554467]  ? _raw_spin_unlock_irqrestore+0x12/0x2c\n[    2.554467]  pci_device_probe+0xaa/0x142\n[    2.554467]  really_probe+0x13f/0x2f4\n[    2.554467]  __driver_probe_device+0x9e/0xd3\n[    2.554467]  driver_probe_device+0x24/0x7c\n[    2.554467]  __driver_attach+0xba/0xcf\n[    2.554467]  ? driver_attach+0x1f/0x1f\n[    2.554467]  bus_for_each_dev+0x8c/0xc0\n[    2.554467]  bus_add_driver+0x11b/0x1f7\n[    2.554467]  driver_register+0x60/0xea\n[    2.554467]  ? mipi_dsi_bus_init+0x16/0x16\n[    2.554467]  i915_init+0x2c/0xb9\n[    2.554467]  ? mipi_dsi_bus_init+0x16/0x16\n[    2.554467]  do_one_initcall+0x12e/0x2b3\n[    2.554467]  do_initcall_level+0xd6/0xf3\n[    2.554467]  do_initcalls+0x4e/0x79\n[    2.554467]  kernel_init_freeable+0xed/0x14d\n[    2.554467]  ? rest_init+0xc1/0xc1\n[    2.554467]  kernel_init+0x1a/0x120\n[    2.554467]  ret_from_fork+0x1f/0x30\n[    2.554467]  \u003c/TASK\u003e\n...\nKernel panic - not syncing: Fatal exception\n\n(cherry picked from commit c247cd03898c4c43c3bce6d4014730403bc13032)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: cacheinfo: Fix incorrect assignment of signed error value to unsigned fw_level\n\nThough acpi_find_last_cache_level() always returned signed value and the\ndocument states it will return any errors caused by lack of a PPTT table,\nit never returned negative values before.\n\nCommit 0c80f9e165f8 (\"ACPI: PPTT: Leave the table mapped for the runtime usage\")\nhowever changed it by returning -ENOENT if no PPTT was found. The value\nreturned from acpi_find_last_cache_level() is then assigned to unsigned\nfw_level.\n\nIt will result in the number of cache leaves calculated incorrectly as\na huge value which will then cause the following warning from __alloc_pages\nas the order would be great than MAX_ORDER because of incorrect and huge\ncache leaves value.\n\n  |  WARNING: CPU: 0 PID: 1 at mm/page_alloc.c:5407 __alloc_pages+0x74/0x314\n  |  Modules linked in:\n  |  CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.19.0-10393-g7c2a8d3ac4c0 #73\n  |  pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  |  pc : __alloc_pages+0x74/0x314\n  |  lr : alloc_pages+0xe8/0x318\n  |  Call trace:\n  |   __alloc_pages+0x74/0x314\n  |   alloc_pages+0xe8/0x318\n  |   kmalloc_order_trace+0x68/0x1dc\n  |   __kmalloc+0x240/0x338\n  |   detect_cache_attributes+0xe0/0x56c\n  |   update_siblings_masks+0x38/0x284\n  |   store_cpu_topology+0x78/0x84\n  |   smp_prepare_cpus+0x48/0x134\n  |   kernel_init_freeable+0xc4/0x14c\n  |   kernel_init+0x2c/0x1b4\n  |   ret_from_fork+0x10/0x20\n\nFix the same by changing fw_level to be signed integer and return the\nerror from init_cache_level() early in case of error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49966",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: add missing -\u003efini_microcode interface for Sienna Cichlid\n\nTo avoid any potential memory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49968",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nieee802154/adf7242: defer destroy_workqueue call\n\nThere is a possible race condition (use-after-free) like below\n\n  (FREE)                     |  (USE)\n  adf7242_remove             |  adf7242_channel\n   cancel_delayed_work_sync  |\n    destroy_workqueue (1)    |   adf7242_cmd_rx\n                             |    mod_delayed_work (2)\n                             |\n\nThe root cause for this race is that the upper layer (ieee802154) is\nunaware of this detaching event and the function adf7242_channel can\nbe called without any checks.\n\nTo fix this, we can add a flag write at the beginning of adf7242_remove\nand add flag check in adf7242_channel. Or we can just defer the\ndestructive operation like other commit 3e0588c291d6 (\"hamradio: defer\nax25 kfree after unregister_netdev\") which let the\nieee802154_unregister_hw() to handle the synchronization. This patch\ntakes the second option.\n\nruns\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: clear optc underflow before turn off odm clock\n\n[Why]\nAfter ODM clock off, optc underflow bit will be kept there always and clear not work.\nWe need to clear that before clock off.\n\n[How]\nClear that if have when clock off.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49977",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix NULL pointer dereference in is_ftrace_trampoline when ftrace is dead\n\nftrace_startup does not remove ops from ftrace_ops_list when\nftrace_startup_enable fails:\n\nregister_ftrace_function\n  ftrace_startup\n    __register_ftrace_function\n      ...\n      add_ftrace_ops(\u0026ftrace_ops_list, ops)\n      ...\n    ...\n    ftrace_startup_enable // if ftrace failed to modify, ftrace_disabled is set to 1\n    ...\n  return 0 // ops is in the ftrace_ops_list.\n\nWhen ftrace_disabled = 1, unregister_ftrace_function simply returns without doing anything:\nunregister_ftrace_function\n  ftrace_shutdown\n    if (unlikely(ftrace_disabled))\n            return -ENODEV;  // return here, __unregister_ftrace_function is not executed,\n                             // as a result, ops is still in the ftrace_ops_list\n    __unregister_ftrace_function\n    ...\n\nIf ops is dynamically allocated, it will be free later, in this case,\nis_ftrace_trampoline accesses NULL pointer:\n\nis_ftrace_trampoline\n  ftrace_ops_trampoline\n    do_for_each_ftrace_op(op, ftrace_ops_list) // OOPS! op may be NULL!\n\nSyzkaller reports as follows:\n[ 1203.506103] BUG: kernel NULL pointer dereference, address: 000000000000010b\n[ 1203.508039] #PF: supervisor read access in kernel mode\n[ 1203.508798] #PF: error_code(0x0000) - not-present page\n[ 1203.509558] PGD 800000011660b067 P4D 800000011660b067 PUD 130fb8067 PMD 0\n[ 1203.510560] Oops: 0000 [#1] SMP KASAN PTI\n[ 1203.511189] CPU: 6 PID: 29532 Comm: syz-executor.2 Tainted: G    B   W         5.10.0 #8\n[ 1203.512324] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014\n[ 1203.513895] RIP: 0010:is_ftrace_trampoline+0x26/0xb0\n[ 1203.514644] Code: ff eb d3 90 41 55 41 54 49 89 fc 55 53 e8 f2 00 fd ff 48 8b 1d 3b 35 5d 03 e8 e6 00 fd ff 48 8d bb 90 00 00 00 e8 2a 81 26 00 \u003c48\u003e 8b ab 90 00 00 00 48 85 ed 74 1d e8 c9 00 fd ff 48 8d bb 98 00\n[ 1203.518838] RSP: 0018:ffffc900012cf960 EFLAGS: 00010246\n[ 1203.520092] RAX: 0000000000000000 RBX: 000000000000007b RCX: ffffffff8a331866\n[ 1203.521469] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 000000000000010b\n[ 1203.522583] RBP: 0000000000000000 R08: 0000000000000000 R09: ffffffff8df18b07\n[ 1203.523550] R10: fffffbfff1be3160 R11: 0000000000000001 R12: 0000000000478399\n[ 1203.524596] R13: 0000000000000000 R14: ffff888145088000 R15: 0000000000000008\n[ 1203.525634] FS:  00007f429f5f4700(0000) GS:ffff8881daf00000(0000) knlGS:0000000000000000\n[ 1203.526801] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1203.527626] CR2: 000000000000010b CR3: 0000000170e1e001 CR4: 00000000003706e0\n[ 1203.528611] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 1203.529605] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n\nTherefore, when ftrace_startup_enable fails, we need to rollback registration\nprocess and remove ops from ftrace_ops_list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: fb_pm2fb: Avoid potential divide by zero error\n\nIn `do_fb_ioctl()` of fbmem.c, if cmd is FBIOPUT_VSCREENINFO, var will be\ncopied from user, then go through `fb_set_var()` and\n`info-\u003efbops-\u003efb_check_var()` which could may be `pm2fb_check_var()`.\nAlong the path, `var-\u003epixclock` won't be modified. This function checks\nwhether reciprocal of `var-\u003epixclock` is too high. If `var-\u003epixclock` is\nzero, there will be a divide by zero error. So, it is necessary to check\nwhether denominator is zero to avoid crash. As this bug is found by\nSyzkaller, logs are listed below.\n\ndivide error in pm2fb_check_var\nCall Trace:\n \u003cTASK\u003e\n fb_set_var+0x367/0xeb0 drivers/video/fbdev/core/fbmem.c:1015\n do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110\n fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49981",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hidraw: fix memory leak in hidraw_release()\n\nFree the buffered reports before deleting the list entry.\n\nBUG: memory leak\nunreferenced object 0xffff88810e72f180 (size 32):\n  comm \"softirq\", pid 0, jiffies 4294945143 (age 16.080s)\n  hex dump (first 32 bytes):\n    64 f3 c6 6a d1 88 07 04 00 00 00 00 00 00 00 00  d..j............\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [\u003cffffffff814ac6c3\u003e] kmemdup+0x23/0x50 mm/util.c:128\n    [\u003cffffffff8357c1d2\u003e] kmemdup include/linux/fortify-string.h:440 [inline]\n    [\u003cffffffff8357c1d2\u003e] hidraw_report_event+0xa2/0x150 drivers/hid/hidraw.c:521\n    [\u003cffffffff8356ddad\u003e] hid_report_raw_event+0x27d/0x740 drivers/hid/hid-core.c:1992\n    [\u003cffffffff8356e41e\u003e] hid_input_report+0x1ae/0x270 drivers/hid/hid-core.c:2065\n    [\u003cffffffff835f0d3f\u003e] hid_irq_in+0x1ff/0x250 drivers/hid/usbhid/hid-core.c:284\n    [\u003cffffffff82d3c7f9\u003e] __usb_hcd_giveback_urb+0xf9/0x230 drivers/usb/core/hcd.c:1670\n    [\u003cffffffff82d3cc26\u003e] usb_hcd_giveback_urb+0x1b6/0x1d0 drivers/usb/core/hcd.c:1747\n    [\u003cffffffff82ef1e14\u003e] dummy_timer+0x8e4/0x14c0 drivers/usb/gadget/udc/dummy_hcd.c:1988\n    [\u003cffffffff812f50a8\u003e] call_timer_fn+0x38/0x200 kernel/time/timer.c:1474\n    [\u003cffffffff812f5586\u003e] expire_timers kernel/time/timer.c:1519 [inline]\n    [\u003cffffffff812f5586\u003e] __run_timers.part.0+0x316/0x430 kernel/time/timer.c:1790\n    [\u003cffffffff812f56e4\u003e] __run_timers kernel/time/timer.c:1768 [inline]\n    [\u003cffffffff812f56e4\u003e] run_timer_softirq+0x44/0x90 kernel/time/timer.c:1803\n    [\u003cffffffff848000e6\u003e] __do_softirq+0xe6/0x2ea kernel/softirq.c:571\n    [\u003cffffffff81246db0\u003e] invoke_softirq kernel/softirq.c:445 [inline]\n    [\u003cffffffff81246db0\u003e] __irq_exit_rcu kernel/softirq.c:650 [inline]\n    [\u003cffffffff81246db0\u003e] irq_exit_rcu+0xc0/0x110 kernel/softirq.c:662\n    [\u003cffffffff84574f02\u003e] sysvec_apic_timer_interrupt+0xa2/0xd0 arch/x86/kernel/apic/apic.c:1106\n    [\u003cffffffff84600c8b\u003e] asm_sysvec_apic_timer_interrupt+0x1b/0x20 arch/x86/include/asm/idtentry.h:649\n    [\u003cffffffff8458a070\u003e] native_safe_halt arch/x86/include/asm/irqflags.h:51 [inline]\n    [\u003cffffffff8458a070\u003e] arch_safe_halt arch/x86/include/asm/irqflags.h:89 [inline]\n    [\u003cffffffff8458a070\u003e] acpi_safe_halt drivers/acpi/processor_idle.c:111 [inline]\n    [\u003cffffffff8458a070\u003e] acpi_idle_do_entry+0xc0/0xd0 drivers/acpi/processor_idle.c:554",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: pvrusb2: fix memory leak in pvr_probe\n\nThe error handling code in pvr2_hdw_create forgets to unregister the\nv4l2 device. When pvr2_hdw_create returns back to pvr2_context_create,\nit calls pvr2_context_destroy to destroy context, but mp-\u003ehdw is NULL,\nwhich leads to that pvr2_hdw_destroy directly returns.\n\nFix this by adding v4l2_device_unregister to decrease the refcount of\nusb interface.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49983",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudmabuf: Set the DMA mask for the udmabuf device (v2)\n\nIf the DMA mask is not set explicitly, the following warning occurs\nwhen the userspace tries to access the dma-buf via the CPU as\nreported by syzbot here:\n\nWARNING: CPU: 1 PID: 3595 at kernel/dma/mapping.c:188\n__dma_map_sg_attrs+0x181/0x1f0 kernel/dma/mapping.c:188\nModules linked in:\nCPU: 0 PID: 3595 Comm: syz-executor249 Not tainted\n5.17.0-rc2-syzkaller-00316-g0457e5153e0e #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nRIP: 0010:__dma_map_sg_attrs+0x181/0x1f0 kernel/dma/mapping.c:188\nCode: 00 00 00 00 00 fc ff df 48 c1 e8 03 80 3c 10 00 75 71 4c 8b 3d c0\n83 b5 0d e9 db fe ff ff e8 b6 0f 13 00 0f 0b e8 af 0f 13 00 \u003c0f\u003e 0b 45\n   31 e4 e9 54 ff ff ff e8 a0 0f 13 00 49 8d 7f 50 48 b8 00\nRSP: 0018:ffffc90002a07d68 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: ffff88807e25e2c0 RSI: ffffffff81649e91 RDI: ffff88801b848408\nRBP: ffff88801b848000 R08: 0000000000000002 R09: ffff88801d86c74f\nR10: ffffffff81649d72 R11: 0000000000000001 R12: 0000000000000002\nR13: ffff88801d86c680 R14: 0000000000000001 R15: 0000000000000000\nFS:  0000555556e30300(0000) GS:ffff8880b9d00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000200000cc CR3: 000000001d74a000 CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n dma_map_sgtable+0x70/0xf0 kernel/dma/mapping.c:264\n get_sg_table.isra.0+0xe0/0x160 drivers/dma-buf/udmabuf.c:72\n begin_cpu_udmabuf+0x130/0x1d0 drivers/dma-buf/udmabuf.c:126\n dma_buf_begin_cpu_access+0xfd/0x1d0 drivers/dma-buf/dma-buf.c:1164\n dma_buf_ioctl+0x259/0x2b0 drivers/dma-buf/dma-buf.c:363\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:874 [inline]\n __se_sys_ioctl fs/ioctl.c:860 [inline]\n __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f62fcf530f9\nCode: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89\nf7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01\nf0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffe3edab9b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f62fcf530f9\nRDX: 0000000020000200 RSI: 0000000040086200 RDI: 0000000000000006\nRBP: 00007f62fcf170e0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f62fcf17170\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n \u003c/TASK\u003e\n\nv2: Dont't forget to deregister if DMA mask setup fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49984",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: steam: Prevent NULL pointer dereference in steam_{recv,send}_report\n\nIt is possible for a malicious device to forgo submitting a Feature\nReport.  The HID Steam driver presently makes no prevision for this\nand de-references the 'struct hid_report' pointer obtained from the\nHID devices without first checking its validity.  Let's change that.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49986",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: storvsc: Remove WQ_MEM_RECLAIM from storvsc_error_wq\n\nstorvsc_error_wq workqueue should not be marked as WQ_MEM_RECLAIM as it\ndoesn't need to make forward progress under memory pressure.  Marking this\nworkqueue as WQ_MEM_RECLAIM may cause deadlock while flushing a\nnon-WQ_MEM_RECLAIM workqueue.  In the current state it causes the following\nwarning:\n\n[   14.506347] ------------[ cut here ]------------\n[   14.506354] workqueue: WQ_MEM_RECLAIM storvsc_error_wq_0:storvsc_remove_lun is flushing !WQ_MEM_RECLAIM events_freezable_power_:disk_events_workfn\n[   14.506360] WARNING: CPU: 0 PID: 8 at \u003c-snip-\u003ekernel/workqueue.c:2623 check_flush_dependency+0xb5/0x130\n[   14.506390] CPU: 0 PID: 8 Comm: kworker/u4:0 Not tainted 5.4.0-1086-azure #91~18.04.1-Ubuntu\n[   14.506391] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.1 05/09/2022\n[   14.506393] Workqueue: storvsc_error_wq_0 storvsc_remove_lun\n[   14.506395] RIP: 0010:check_flush_dependency+0xb5/0x130\n\t\t\u003c-snip-\u003e\n[   14.506408] Call Trace:\n[   14.506412]  __flush_work+0xf1/0x1c0\n[   14.506414]  __cancel_work_timer+0x12f/0x1b0\n[   14.506417]  ? kernfs_put+0xf0/0x190\n[   14.506418]  cancel_delayed_work_sync+0x13/0x20\n[   14.506420]  disk_block_events+0x78/0x80\n[   14.506421]  del_gendisk+0x3d/0x2f0\n[   14.506423]  sr_remove+0x28/0x70\n[   14.506427]  device_release_driver_internal+0xef/0x1c0\n[   14.506428]  device_release_driver+0x12/0x20\n[   14.506429]  bus_remove_device+0xe1/0x150\n[   14.506431]  device_del+0x167/0x380\n[   14.506432]  __scsi_remove_device+0x11d/0x150\n[   14.506433]  scsi_remove_device+0x26/0x40\n[   14.506434]  storvsc_remove_lun+0x40/0x60\n[   14.506436]  process_one_work+0x209/0x400\n[   14.506437]  worker_thread+0x34/0x400\n[   14.506439]  kthread+0x121/0x140\n[   14.506440]  ? process_one_work+0x400/0x400\n[   14.506441]  ? kthread_park+0x90/0x90\n[   14.506443]  ret_from_fork+0x35/0x40\n[   14.506445] ---[ end trace 2d9633159fdc6ee7 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49987",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: call __md_stop_writes in md_stop\n\nFrom the link [1], we can see raid1d was running even after the path\nraid_dtr -\u003e md_stop -\u003e __md_stop.\n\nLet's stop write first in destructor to align with normal md-raid to\nfix the KASAN issue.\n\n[1]. https://lore.kernel.org/linux-raid/CAPhsuW5gc4AakdGNdF8ubpezAuDLFOYUO_sfMZcec6hQFm8nhg@mail.gmail.com/T/#m7f12bf90481c02c6d2da68c64aeed4779b7df74a",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49989",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/privcmd: fix error exit of privcmd_ioctl_dm_op()\n\nThe error exit of privcmd_ioctl_dm_op() is calling unlock_pages()\npotentially with pages being NULL, leading to a NULL dereference.\n\nAdditionally lock_pages() doesn't check for pin_user_pages_fast()\nhaving been completely successful, resulting in potentially not\nlocking all pages into memory. This could result in sporadic failures\nwhen using the related memory in user mode.\n\nFix all of that by calling unlock_pages() always with the real number\nof pinned pages, which will be zero in case pages being NULL, and by\nchecking the number of pages pinned by pin_user_pages_fast() matching\nthe expected number of pages.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390: fix double free of GS and RI CBs on fork() failure\n\nThe pointers for guarded storage and runtime instrumentation control\nblocks are stored in the thread_struct of the associated task. These\npointers are initially copied on fork() via arch_dup_task_struct()\nand then cleared via copy_thread() before fork() returns. If fork()\nhappens to fail after the initial task dup and before copy_thread(),\nthe newly allocated task and associated thread_struct memory are\nfreed via free_task() -\u003e arch_release_task_struct(). This results in\na double free of the guarded storage and runtime info structs\nbecause the fields in the failed task still refer to memory\nassociated with the source task.\n\nThis problem can manifest as a BUG_ON() in set_freepointer() (with\nCONFIG_SLAB_FREELIST_HARDENED enabled) or KASAN splat (if enabled)\nwhen running trinity syscall fuzz tests on s390x. To avoid this\nproblem, clear the associated pointer fields in\narch_dup_task_struct() immediately after the new task is copied.\nNote that the RI flag is still cleared in copy_thread() because it\nresides in thread stack memory and that is where stack info is\ncopied.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49993",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nloop: Check for overflow while configuring loop\n\nThe userspace can configure a loop using an ioctl call, wherein\na configuration of type loop_config is passed (see lo_ioctl()'s\ncase on line 1550 of drivers/block/loop.c). This proceeds to call\nloop_configure() which in turn calls loop_set_status_from_info()\n(see line 1050 of loop.c), passing \u0026config-\u003einfo which is of type\nloop_info64*. This function then sets the appropriate values, like\nthe offset.\n\nloop_device has lo_offset of type loff_t (see line 52 of loop.c),\nwhich is typdef-chained to long long, whereas loop_info64 has\nlo_offset of type __u64 (see line 56 of include/uapi/linux/loop.h).\n\nThe function directly copies offset from info to the device as\nfollows (See line 980 of loop.c):\n\tlo-\u003elo_offset = info-\u003elo_offset;\n\nThis results in an overflow, which triggers a warning in iomap_iter()\ndue to a call to iomap_iter_done() which has:\n\tWARN_ON_ONCE(iter-\u003eiomap.offset \u003e iter-\u003epos);\n\nThus, check for negative value during loop_set_status_from_info().\n\nBug report: https://syzkaller.appspot.com/bug?id=c620fe14aac810396d3c3edc9ad73848bf69a29e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwriteback: avoid use-after-free after removing device\n\nWhen a disk is removed, bdi_unregister gets called to stop further\nwriteback and wait for associated delayed work to complete.  However,\nwb_inode_writeback_end() may schedule bandwidth estimation dwork after\nthis has completed, which can result in the timer attempting to access the\njust freed bdi_writeback.\n\nFix this by checking if the bdi_writeback is alive, similar to when\nscheduling writeback work.\n\nSince this requires wb-\u003ework_lock, and wb_inode_writeback_end() may get\ncalled from interrupt, switch wb-\u003ework_lock to an irqsafe lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-49999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix space cache corruption and potential double allocations\n\nWhen testing space_cache v2 on a large set of machines, we encountered a\nfew symptoms:\n\n1. \"unable to add free space :-17\" (EEXIST) errors.\n2. Missing free space info items, sometimes caught with a \"missing free\n   space info for X\" error.\n3. Double-accounted space: ranges that were allocated in the extent tree\n   and also marked as free in the free space tree, ranges that were\n   marked as allocated twice in the extent tree, or ranges that were\n   marked as free twice in the free space tree. If the latter made it\n   onto disk, the next reboot would hit the BUG_ON() in\n   add_new_free_space().\n4. On some hosts with no on-disk corruption or error messages, the\n   in-memory space cache (dumped with drgn) disagreed with the free\n   space tree.\n\nAll of these symptoms have the same underlying cause: a race between\ncaching the free space for a block group and returning free space to the\nin-memory space cache for pinned extents causes us to double-add a free\nrange to the space cache. This race exists when free space is cached\nfrom the free space tree (space_cache=v2) or the extent tree\n(nospace_cache, or space_cache=v1 if the cache needs to be regenerated).\nstruct btrfs_block_group::last_byte_to_unpin and struct\nbtrfs_block_group::progress are supposed to protect against this race,\nbut commit d0c2f4fa555e (\"btrfs: make concurrent fsyncs wait less when\nwaiting for a transaction commit\") subtly broke this by allowing\nmultiple transactions to be unpinning extents at the same time.\n\nSpecifically, the race is as follows:\n\n1. An extent is deleted from an uncached block group in transaction A.\n2. btrfs_commit_transaction() is called for transaction A.\n3. btrfs_run_delayed_refs() -\u003e __btrfs_free_extent() runs the delayed\n   ref for the deleted extent.\n4. __btrfs_free_extent() -\u003e do_free_extent_accounting() -\u003e\n   add_to_free_space_tree() adds the deleted extent back to the free\n   space tree.\n5. do_free_extent_accounting() -\u003e btrfs_update_block_group() -\u003e\n   btrfs_cache_block_group() queues up the block group to get cached.\n   block_group-\u003eprogress is set to block_group-\u003estart.\n6. btrfs_commit_transaction() for transaction A calls\n   switch_commit_roots(). It sets block_group-\u003elast_byte_to_unpin to\n   block_group-\u003eprogress, which is block_group-\u003estart because the block\n   group hasn't been cached yet.\n7. The caching thread gets to our block group. Since the commit roots\n   were already switched, load_free_space_tree() sees the deleted extent\n   as free and adds it to the space cache. It finishes caching and sets\n   block_group-\u003eprogress to U64_MAX.\n8. btrfs_commit_transaction() advances transaction A to\n   TRANS_STATE_SUPER_COMMITTED.\n9. fsync calls btrfs_commit_transaction() for transaction B. Since\n   transaction A is already in TRANS_STATE_SUPER_COMMITTED and the\n   commit is for fsync, it advances.\n10. btrfs_commit_transaction() for transaction B calls\n    switch_commit_roots(). This time, the block group has already been\n    cached, so it sets block_group-\u003elast_byte_to_unpin to U64_MAX.\n11. btrfs_commit_transaction() for transaction A calls\n    btrfs_finish_extent_commit(), which calls unpin_extent_range() for\n    the deleted extent. It sees last_byte_to_unpin set to U64_MAX (by\n    transaction B!), so it adds the deleted extent to the space cache\n    again!\n\nThis explains all of our symptoms above:\n\n* If the sequence of events is exactly as described above, when the free\n  space is re-added in step 11, it will fail with EEXIST.\n* If another thread reallocates the deleted extent in between steps 7\n  and 11, then step 11 will silently re-add that space to the space\n  cache as free even though it is actually allocated. Then, if that\n  space is allocated *again*, the free space tree will be corrupted\n  (namely, the wrong item will be deleted).\n* If we don't catch this free space tree corr\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50005",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: Fix use-after-free bugs caused by pn532_cmd_timeout\n\nWhen the pn532 uart device is detaching, the pn532_uart_remove()\nis called. But there are no functions in pn532_uart_remove() that\ncould delete the cmd_timeout timer, which will cause use-after-free\nbugs. The process is shown below:\n\n    (thread 1)                  |        (thread 2)\n                                |  pn532_uart_send_frame\npn532_uart_remove               |    mod_timer(\u0026pn532-\u003ecmd_timeout,...)\n  ...                           |    (wait a time)\n  kfree(pn532) //FREE           |    pn532_cmd_timeout\n                                |      pn532_uart_send_frame\n                                |        pn532-\u003e... //USE\n\nThis patch adds del_timer_sync() in pn532_uart_remove() in order to\nprevent the use-after-free bugs. What's more, the pn53x_unregister_nfc()\nis well synchronized, it sets nfc_dev-\u003eshutting_down to true and there\nare no syscalls could restart the cmd_timeout timer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50006",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4.2 fix problems with __nfs42_ssc_open\n\nA destination server while doing a COPY shouldn't accept using the\npassed in filehandle if its not a regular filehandle.\n\nIf alloc_file_pseudo() has failed, we need to decrement a reference\non the newly created inode, otherwise it leaks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50008",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: don't call disarm_kprobe() for disabled kprobes\n\nThe assumption in __disable_kprobe() is wrong, and it could try to disarm\nan already disarmed kprobe and fire the WARN_ONCE() below. [0]  We can\neasily reproduce this issue.\n\n1. Write 0 to /sys/kernel/debug/kprobes/enabled.\n\n  # echo 0 \u003e /sys/kernel/debug/kprobes/enabled\n\n2. Run execsnoop.  At this time, one kprobe is disabled.\n\n  # /usr/share/bcc/tools/execsnoop \u0026\n  [1] 2460\n  PCOMM            PID    PPID   RET ARGS\n\n  # cat /sys/kernel/debug/kprobes/list\n  ffffffff91345650  r  __x64_sys_execve+0x0    [FTRACE]\n  ffffffff91345650  k  __x64_sys_execve+0x0    [DISABLED][FTRACE]\n\n3. Write 1 to /sys/kernel/debug/kprobes/enabled, which changes\n   kprobes_all_disarmed to false but does not arm the disabled kprobe.\n\n  # echo 1 \u003e /sys/kernel/debug/kprobes/enabled\n\n  # cat /sys/kernel/debug/kprobes/list\n  ffffffff91345650  r  __x64_sys_execve+0x0    [FTRACE]\n  ffffffff91345650  k  __x64_sys_execve+0x0    [DISABLED][FTRACE]\n\n4. Kill execsnoop, when __disable_kprobe() calls disarm_kprobe() for the\n   disabled kprobe and hits the WARN_ONCE() in __disarm_kprobe_ftrace().\n\n  # fg\n  /usr/share/bcc/tools/execsnoop\n  ^C\n\nActually, WARN_ONCE() is fired twice, and __unregister_kprobe_top() misses\nsome cleanups and leaves the aggregated kprobe in the hash table.  Then,\n__unregister_trace_kprobe() initialises tk-\u003erp.kp.list and creates an\ninfinite loop like this.\n\n  aggregated kprobe.list -\u003e kprobe.list -.\n                                     ^    |\n                                     '.__.'\n\nIn this situation, these commands fall into the infinite loop and result\nin RCU stall or soft lockup.\n\n  cat /sys/kernel/debug/kprobes/list : show_kprobe_addr() enters into the\n                                       infinite loop with RCU.\n\n  /usr/share/bcc/tools/execsnoop : warn_kprobe_rereg() holds kprobe_mutex,\n                                   and __get_valid_kprobe() is stuck in\n\t\t\t\t   the loop.\n\nTo avoid the issue, make sure we don't call disarm_kprobe() for disabled\nkprobes.\n\n[0]\nFailed to disarm kprobe-ftrace at __x64_sys_execve+0x0/0x40 (error -2)\nWARNING: CPU: 6 PID: 2460 at kernel/kprobes.c:1130 __disarm_kprobe_ftrace.isra.19 (kernel/kprobes.c:1129)\nModules linked in: ena\nCPU: 6 PID: 2460 Comm: execsnoop Not tainted 5.19.0+ #28\nHardware name: Amazon EC2 c5.2xlarge/, BIOS 1.0 10/16/2017\nRIP: 0010:__disarm_kprobe_ftrace.isra.19 (kernel/kprobes.c:1129)\nCode: 24 8b 02 eb c1 80 3d c4 83 f2 01 00 75 d4 48 8b 75 00 89 c2 48 c7 c7 90 fa 0f 92 89 04 24 c6 05 ab 83 01 e8 e4 94 f0 ff \u003c0f\u003e 0b 8b 04 24 eb b1 89 c6 48 c7 c7 60 fa 0f 92 89 04 24 e8 cc 94\nRSP: 0018:ffff9e6ec154bd98 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffffffff930f7b00 RCX: 0000000000000001\nRDX: 0000000080000001 RSI: ffffffff921461c5 RDI: 00000000ffffffff\nRBP: ffff89c504286da8 R08: 0000000000000000 R09: c0000000fffeffff\nR10: 0000000000000000 R11: ffff9e6ec154bc28 R12: ffff89c502394e40\nR13: ffff89c502394c00 R14: ffff9e6ec154bc00 R15: 0000000000000000\nFS:  00007fe800398740(0000) GS:ffff89c812d80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000c00057f010 CR3: 0000000103b54006 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n\u003cTASK\u003e\n __disable_kprobe (kernel/kprobes.c:1716)\n disable_kprobe (kernel/kprobes.c:2392)\n __disable_trace_kprobe (kernel/trace/trace_kprobe.c:340)\n disable_trace_kprobe (kernel/trace/trace_kprobe.c:429)\n perf_trace_event_unreg.isra.2 (./include/linux/tracepoint.h:93 kernel/trace/trace_event_perf.c:168)\n perf_kprobe_destroy (kernel/trace/trace_event_perf.c:295)\n _free_event (kernel/events/core.c:4971)\n perf_event_release_kernel (kernel/events/core.c:5176)\n perf_release (kernel/events/core.c:5186)\n __fput (fs/file_table.c:321)\n task_work_run (./include/linux/\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50010",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: i740fb: Check the argument of i740_calc_vclk()\n\nSince the user can control the arguments of the ioctl() from the user\nspace, under special arguments that may result in a divide-by-zero bug.\n\nIf the user provides an improper 'pixclock' value that makes the argumet\nof i740_calc_vclk() less than 'I740_RFREQ_FIX', it will cause a\ndivide-by-zero bug in:\n    drivers/video/fbdev/i740fb.c:353 p_best = min(15, ilog2(I740_MAX_VCO_FREQ / (freq / I740_RFREQ_FIX)));\n\nThe following log can reveal it:\n\ndivide error: 0000 [#1] PREEMPT SMP KASAN PTI\nRIP: 0010:i740_calc_vclk drivers/video/fbdev/i740fb.c:353 [inline]\nRIP: 0010:i740fb_decode_var drivers/video/fbdev/i740fb.c:646 [inline]\nRIP: 0010:i740fb_set_par+0x163f/0x3b70 drivers/video/fbdev/i740fb.c:742\nCall Trace:\n fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1034\n do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110\n fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189\n\nFix this by checking the argument of i740_calc_vclk() first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvenus: pm_helpers: Fix warning in OPP during probe\n\nFix the following WARN triggered during Venus driver probe on\n5.19.0-rc8-next-20220728:\n\n WARNING: CPU: 7 PID: 339 at drivers/opp/core.c:2471 dev_pm_opp_set_config+0x49c/0x610\n Modules linked in: qcom_spmi_adc5 rtc_pm8xxx qcom_spmi_adc_tm5 leds_qcom_lpg led_class_multicolor\n  qcom_pon qcom_vadc_common venus_core(+) qcom_spmi_temp_alarm v4l2_mem2mem videobuf2_v4l2 msm(+)\n  videobuf2_common crct10dif_ce spi_geni_qcom snd_soc_sm8250 i2c_qcom_geni gpu_sched\n  snd_soc_qcom_common videodev qcom_q6v5_pas soundwire_qcom drm_dp_aux_bus qcom_stats\n  drm_display_helper qcom_pil_info soundwire_bus snd_soc_lpass_va_macro mc qcom_q6v5\n  phy_qcom_snps_femto_v2 qcom_rng snd_soc_lpass_macro_common snd_soc_lpass_wsa_macro\n  lpass_gfm_sm8250 slimbus qcom_sysmon qcom_common qcom_glink_smem qmi_helpers\n  qcom_wdt mdt_loader socinfo icc_osm_l3 display_connector\n  drm_kms_helper qnoc_sm8250 drm fuse ip_tables x_tables ipv6\n CPU: 7 PID: 339 Comm: systemd-udevd Not tainted 5.19.0-rc8-next-20220728 #4\n Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)\n pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : dev_pm_opp_set_config+0x49c/0x610\n lr : dev_pm_opp_set_config+0x58/0x610\n sp : ffff8000093c3710\n x29: ffff8000093c3710 x28: ffffbca3959d82b8 x27: ffff8000093c3d00\n x26: ffffbca3959d8e08 x25: ffff4396cac98118 x24: ffff4396c0e24810\n x23: ffff4396c4272c40 x22: ffff4396c0e24810 x21: ffff8000093c3810\n x20: ffff4396cac36800 x19: ffff4396cac96800 x18: 0000000000000000\n x17: 0000000000000003 x16: ffffbca3f4edf198 x15: 0000001cba64a858\n x14: 0000000000000180 x13: 000000000000017e x12: 0000000000000000\n x11: 0000000000000002 x10: 0000000000000a60 x9 : ffff8000093c35c0\n x8 : ffff4396c4273700 x7 : ffff43983efca6c0 x6 : ffff43983efca640\n x5 : 00000000410fd0d0 x4 : ffff4396c4272c40 x3 : ffffbca3f5d1e008\n x2 : 0000000000000000 x1 : ffff4396c2421600 x0 : ffff4396cac96860\n Call trace:\n  dev_pm_opp_set_config+0x49c/0x610\n  devm_pm_opp_set_config+0x18/0x70\n  vcodec_domains_get+0xb8/0x1638 [venus_core]\n  core_get_v4+0x1d8/0x218 [venus_core]\n  venus_probe+0xf4/0x468 [venus_core]\n  platform_probe+0x68/0xd8\n  really_probe+0xbc/0x2a8\n  __driver_probe_device+0x78/0xe0\n  driver_probe_device+0x3c/0xf0\n  __driver_attach+0x70/0x120\n  bus_for_each_dev+0x70/0xc0\n  driver_attach+0x24/0x30\n  bus_add_driver+0x150/0x200\n  driver_register+0x64/0x120\n  __platform_driver_register+0x28/0x38\n  qcom_venus_driver_init+0x24/0x1000 [venus_core]\n  do_one_initcall+0x54/0x1c8\n  do_init_module+0x44/0x1d0\n  load_module+0x16c8/0x1aa0\n  __do_sys_finit_module+0xbc/0x110\n  __arm64_sys_finit_module+0x20/0x30\n  invoke_syscall+0x44/0x108\n  el0_svc_common.constprop.0+0xcc/0xf0\n  do_el0_svc+0x2c/0xb8\n  el0_svc+0x2c/0x88\n  el0t_64_sync_handler+0xb8/0xc0\n  el0t_64_sync+0x18c/0x190\n  qcom-venus: probe of aa00000.video-codec failed with error -16\n\nThe fix is re-ordering the code related to OPP core. The OPP core\nexpects all configuration options to be provided before the OPP\ntable is added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50012",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/64: Init jump labels before parse_early_param()\n\nOn 64-bit, calling jump_label_init() in setup_feature_keys() is too\nlate because static keys may be used in subroutines of\nparse_early_param() which is again subroutine of early_init_devtree().\n\nFor example booting with \"threadirqs\":\n\n  static_key_enable_cpuslocked(): static key '0xc000000002953260' used before call to jump_label_init()\n  WARNING: CPU: 0 PID: 0 at kernel/jump_label.c:166 static_key_enable_cpuslocked+0xfc/0x120\n  ...\n  NIP static_key_enable_cpuslocked+0xfc/0x120\n  LR  static_key_enable_cpuslocked+0xf8/0x120\n  Call Trace:\n    static_key_enable_cpuslocked+0xf8/0x120 (unreliable)\n    static_key_enable+0x30/0x50\n    setup_forced_irqthreads+0x28/0x40\n    do_early_param+0xa0/0x108\n    parse_args+0x290/0x4e0\n    parse_early_options+0x48/0x5c\n    parse_early_param+0x58/0x84\n    early_init_devtree+0xd4/0x518\n    early_setup+0xb4/0x214\n\nSo call jump_label_init() just before parse_early_param() in\nearly_init_devtree().\n\n[mpe: Add call trace to change log and minor wording edits.]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50019",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: Fix refcount leak bug in ucc_uart.c\n\nIn soc_info(), of_find_node_by_type() will return a node pointer\nwith refcount incremented. We should use of_node_put() when it is\nnot used anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid resizing to a partial cluster size\n\nThis patch avoids an attempt to resize the filesystem to an\nunaligned cluster boundary.  An online resize to a size that is not\nintegral to cluster size results in the last iteration attempting to\ngrow the fs by a negative amount, which trips a BUG_ON and leaves the fs\nwith a corrupted in-memory superblock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: block range must be validated before use in ext4_mb_clear_bb()\n\nBlock range to free is validated in ext4_free_blocks() using\next4_inode_block_valid() and then it's passed to ext4_mb_clear_bb().\nHowever in some situations on bigalloc file system the range might be\nadjusted after the validation in ext4_free_blocks() which can lead to\ntroubles on corrupted file systems such as one found by syzkaller that\nresulted in the following BUG\n\nkernel BUG at fs/ext4/ext4.h:3319!\nPREEMPT SMP NOPTI\nCPU: 28 PID: 4243 Comm: repro Kdump: loaded Not tainted 5.19.0-rc6+ #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1.fc35 04/01/2014\nRIP: 0010:ext4_free_blocks+0x95e/0xa90\nCall Trace:\n \u003cTASK\u003e\n ? lock_timer_base+0x61/0x80\n ? __es_remove_extent+0x5a/0x760\n ? __mod_timer+0x256/0x380\n ? ext4_ind_truncate_ensure_credits+0x90/0x220\n ext4_clear_blocks+0x107/0x1b0\n ext4_free_data+0x15b/0x170\n ext4_ind_truncate+0x214/0x2c0\n ? _raw_spin_unlock+0x15/0x30\n ? ext4_discard_preallocations+0x15a/0x410\n ? ext4_journal_check_start+0xe/0x90\n ? __ext4_journal_start_sb+0x2f/0x110\n ext4_truncate+0x1b5/0x460\n ? __ext4_journal_start_sb+0x2f/0x110\n ext4_evict_inode+0x2b4/0x6f0\n evict+0xd0/0x1d0\n ext4_enable_quotas+0x11f/0x1f0\n ext4_orphan_cleanup+0x3de/0x430\n ? proc_create_seq_private+0x43/0x50\n ext4_fill_super+0x295f/0x3ae0\n ? snprintf+0x39/0x40\n ? sget_fc+0x19c/0x330\n ? ext4_reconfigure+0x850/0x850\n get_tree_bdev+0x16d/0x260\n vfs_get_tree+0x25/0xb0\n path_mount+0x431/0xa70\n __x64_sys_mount+0xe2/0x120\n do_syscall_64+0x5b/0x80\n ? do_user_addr_fault+0x1e2/0x670\n ? exc_page_fault+0x70/0x170\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\nRIP: 0033:0x7fdf4e512ace\n\nFix it by making sure that the block range is properly validated before\nused every time it changes in ext4_free_blocks() or ext4_mb_clear_bb().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50022",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers:md:fix a potential use-after-free bug\n\nIn line 2884, \"raid5_release_stripe(sh);\" drops the reference to sh and\nmay cause sh to be released. However, sh is subsequently used in lines\n2886 \"if (sh-\u003ebatch_head \u0026\u0026 sh != sh-\u003ebatch_head)\". This may result in an\nuse-after-free bug.\n\nIt can be fixed by moving \"raid5_release_stripe(sh);\" to the bottom of\nthe function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50023",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: dw-axi-dmac: ignore interrupt if no descriptor\n\nIf the channel has no descriptor and the interrupt is raised then the\nkernel will OOPS. Check the result of vchan_next_desc() in the handler\naxi_chan_block_xfer_complete() to avoid the error happening.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: dw-axi-dmac: do not print NULL LLI during error\n\nDuring debugging we have seen an issue where axi_chan_dump_lli()\nis passed a NULL LLI pointer which ends up causing an OOPS due\nto trying to get fields from it. Simply print NULL LLI and exit\nto avoid this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50026",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhabanalabs/gaudi: fix shift out of bounds\n\nWhen validating NIC queues, queue offset calculation must be\nperformed only for NIC queues.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50027",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix possible memory leak when failing to issue CMF WQE\n\nThere is no corresponding free routine if lpfc_sli4_issue_wqe fails to\nissue the CMF WQE in lpfc_issue_cmf_sync_wqe.\n\nIf ret_val is non-zero, then free the iocbq request structure.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50028",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ngadgetfs: ep_io - wait until IRQ finishes\n\nafter usb_ep_queue() if wait_for_completion_interruptible() is\ninterrupted we need to wait until IRQ gets finished.\n\nOtherwise complete() from epio_complete() can corrupt stack.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50029",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: ipq8074: dont disable gcc_sleep_clk_src\n\nOnce the usb sleep clocks are disabled, clock framework is trying to\ndisable the sleep clock source also.\n\nHowever, it seems that it cannot be disabled and trying to do so produces:\n[  245.436390] ------------[ cut here ]------------\n[  245.441233] gcc_sleep_clk_src status stuck at 'on'\n[  245.441254] WARNING: CPU: 2 PID: 223 at clk_branch_wait+0x130/0x140\n[  245.450435] Modules linked in: xhci_plat_hcd xhci_hcd dwc3 dwc3_qcom leds_gpio\n[  245.456601] CPU: 2 PID: 223 Comm: sh Not tainted 5.18.0-rc4 #215\n[  245.463889] Hardware name: Xiaomi AX9000 (DT)\n[  245.470050] pstate: 204000c5 (nzCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  245.474307] pc : clk_branch_wait+0x130/0x140\n[  245.481073] lr : clk_branch_wait+0x130/0x140\n[  245.485588] sp : ffffffc009f2bad0\n[  245.489838] x29: ffffffc009f2bad0 x28: ffffff8003e6c800 x27: 0000000000000000\n[  245.493057] x26: 0000000000000000 x25: 0000000000000000 x24: ffffff800226ef20\n[  245.500175] x23: ffffffc0089ff550 x22: 0000000000000000 x21: ffffffc008476ad0\n[  245.507294] x20: 0000000000000000 x19: ffffffc00965ac70 x18: fffffffffffc51a7\n[  245.514413] x17: 68702e3030303837 x16: 3a6d726f6674616c x15: ffffffc089f2b777\n[  245.521531] x14: ffffffc0095c9d18 x13: 0000000000000129 x12: 0000000000000129\n[  245.528649] x11: 00000000ffffffea x10: ffffffc009621d18 x9 : 0000000000000001\n[  245.535767] x8 : 0000000000000001 x7 : 0000000000017fe8 x6 : 0000000000000001\n[  245.542885] x5 : ffffff803fdca6d8 x4 : 0000000000000000 x3 : 0000000000000027\n[  245.550002] x2 : 0000000000000027 x1 : 0000000000000023 x0 : 0000000000000026\n[  245.557122] Call trace:\n[  245.564229]  clk_branch_wait+0x130/0x140\n[  245.566490]  clk_branch2_disable+0x2c/0x40\n[  245.570656]  clk_core_disable+0x60/0xb0\n[  245.574561]  clk_core_disable+0x68/0xb0\n[  245.578293]  clk_disable+0x30/0x50\n[  245.582113]  dwc3_qcom_remove+0x60/0xc0 [dwc3_qcom]\n[  245.585588]  platform_remove+0x28/0x60\n[  245.590361]  device_remove+0x4c/0x80\n[  245.594179]  device_release_driver_internal+0x1dc/0x230\n[  245.597914]  device_driver_detach+0x18/0x30\n[  245.602861]  unbind_store+0xec/0x110\n[  245.607027]  drv_attr_store+0x24/0x40\n[  245.610847]  sysfs_kf_write+0x44/0x60\n[  245.614405]  kernfs_fop_write_iter+0x128/0x1c0\n[  245.618052]  new_sync_write+0xc0/0x130\n[  245.622391]  vfs_write+0x1d4/0x2a0\n[  245.626123]  ksys_write+0x58/0xe0\n[  245.629508]  __arm64_sys_write+0x1c/0x30\n[  245.632895]  invoke_syscall.constprop.0+0x5c/0x110\n[  245.636890]  do_el0_svc+0xa0/0x150\n[  245.641488]  el0_svc+0x18/0x60\n[  245.644872]  el0t_64_sync_handler+0xa4/0x130\n[  245.647914]  el0t_64_sync+0x174/0x178\n[  245.652340] ---[ end trace 0000000000000000 ]---\n\nSo, add CLK_IS_CRITICAL flag to the clock so that the kernel won't try\nto disable the sleep clock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50030",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Prevent buffer overflow crashes in debugfs with malformed user input\n\nMalformed user input to debugfs results in buffer overflow crashes.  Adapt\ninput string lengths to fit within internal buffers, leaving space for NULL\nterminators.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50031",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50032",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: renesas: Fix refcount leak bug\n\nIn usbhs_rza1_hardware_init(), of_find_node_by_name() will return\na node pointer with refcount incremented. We should use of_node_put()\nwhen it is not used anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50033",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: host: ohci-ppc-of: Fix refcount leak bug\n\nIn ohci_hcd_ppc_of_probe(), of_find_compatible_node() will return\na node pointer with refcount incremented. We should use of_node_put()\nwhen it is not used anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50034",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: cdns3 fix use-after-free at workaround 2\n\nBUG: KFENCE: use-after-free read in __list_del_entry_valid+0x10/0xac\n\ncdns3_wa2_remove_old_request()\n{\n\t...\n\tkfree(priv_req-\u003erequest.buf);\n\tcdns3_gadget_ep_free_request(\u0026priv_ep-\u003eendpoint, \u0026priv_req-\u003erequest);\n\tlist_del_init(\u0026priv_req-\u003elist);\n\t^^^ use after free\n\t...\n}\n\ncdns3_gadget_ep_free_request() free the space pointed by priv_req,\nbut priv_req is used in the following list_del_init().\n\nThis patch move list_del_init() before cdns3_gadget_ep_free_request().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50036",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/sun4i: dsi: Prevent underflow when computing packet sizes\n\nCurrently, the packet overhead is subtracted using unsigned arithmetic.\nWith a short sync pulse, this could underflow and wrap around to near\nthe maximal u16 value. Fix this by using signed subtraction. The call to\nmax() will correctly handle any negative numbers that are produced.\n\nApply the same fix to the other timings, even though those subtractions\nare less likely to underflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50038",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/meson: Fix refcount bugs in meson_vpu_has_available_connectors()\n\nIn this function, there are two refcount leak bugs:\n(1) when breaking out of for_each_endpoint_of_node(), we need call\nthe of_node_put() for the 'ep';\n(2) we should call of_node_put() for the reference returned by\nof_graph_get_remote_port() when it is not used anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50039",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nstmmac: intel: Add a missing clk_disable_unprepare() call in intel_eth_pci_remove()\n\nCommit 09f012e64e4b (\"stmmac: intel: Fix clock handling on error and remove\npaths\") removed this clk_disable_unprepare()\n\nThis was partly revert by commit ac322f86b56c (\"net: stmmac: Fix clock\nhandling on remove path\") which removed this clk_disable_unprepare()\nbecause:\n\"\n   While unloading the dwmac-intel driver, clk_disable_unprepare() is\n   being called twice in stmmac_dvr_remove() and\n   intel_eth_pci_remove(). This causes kernel panic on the second call.\n\"\n\nHowever later on, commit 5ec55823438e8 (\"net: stmmac: add clocks management\nfor gmac driver\") has updated stmmac_dvr_remove() which do not call\nclk_disable_unprepare() anymore.\n\nSo this call should now be called from intel_eth_pci_remove().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50040",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: sja1105: fix buffer overflow in sja1105_setup_devlink_regions()\n\nIf an error occurs in dsa_devlink_region_create(), then 'priv-\u003eregions'\narray will be accessed by negative index '-1'.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pci: Fix get_phb_number() locking\n\nThe recent change to get_phb_number() causes a DEBUG_ATOMIC_SLEEP\nwarning on some systems:\n\n  BUG: sleeping function called from invalid context at kernel/locking/mutex.c:580\n  in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: swapper\n  preempt_count: 1, expected: 0\n  RCU nest depth: 0, expected: 0\n  1 lock held by swapper/1:\n   #0: c157efb0 (hose_spinlock){+.+.}-{2:2}, at: pcibios_alloc_controller+0x64/0x220\n  Preemption disabled at:\n  [\u003c00000000\u003e] 0x0\n  CPU: 0 PID: 1 Comm: swapper Not tainted 5.19.0-yocto-standard+ #1\n  Call Trace:\n  [d101dc90] [c073b264] dump_stack_lvl+0x50/0x8c (unreliable)\n  [d101dcb0] [c0093b70] __might_resched+0x258/0x2a8\n  [d101dcd0] [c0d3e634] __mutex_lock+0x6c/0x6ec\n  [d101dd50] [c0a84174] of_alias_get_id+0x50/0xf4\n  [d101dd80] [c002ec78] pcibios_alloc_controller+0x1b8/0x220\n  [d101ddd0] [c140c9dc] pmac_pci_init+0x198/0x784\n  [d101de50] [c140852c] discover_phbs+0x30/0x4c\n  [d101de60] [c0007fd4] do_one_initcall+0x94/0x344\n  [d101ded0] [c1403b40] kernel_init_freeable+0x1a8/0x22c\n  [d101df10] [c00086e0] kernel_init+0x34/0x160\n  [d101df30] [c001b334] ret_from_kernel_thread+0x5c/0x64\n\nThis is because pcibios_alloc_controller() holds hose_spinlock but\nof_alias_get_id() takes of_mutex which can sleep.\n\nThe hose_spinlock protects the phb_bitmap, and also the hose_list, but\nit doesn't need to be held while get_phb_number() calls the OF routines,\nbecause those are only looking up information in the device tree.\n\nSo fix it by having get_phb_number() take the hose_spinlock itself, only\nwhere required, and then dropping the lock before returning.\npcibios_alloc_controller() then needs to take the lock again before the\nlist_add() but that's safe, the order of the list is not important.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50046",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sunrpc: fix potential memory leaks in rpc_sysfs_xprt_state_change()\n\nThe issue happens on some error handling paths. When the function\nfails to grab the object `xprt`, it simply returns 0, forgetting to\ndecrease the reference count of another object `xps`, which is\nincreased by rpc_sysfs_xprt_kobj_get_xprt_switch(), causing refcount\nleaks. Also, the function forgets to check whether `xps` is valid\nbefore using it, which may result in NULL-dereferencing issues.\n\nFix it by adding proper error handling code when either `xprt` or\n`xps` is NULL.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50047",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6060: prevent crash on an unused port\n\nIf the port isn't a CPU port nor a user port, 'cpu_dp'\nis a null pointer and a crash happened on dereferencing\nit in mv88e6060_setup_port():\n\n[    9.575872] Unable to handle kernel NULL pointer dereference at virtual address 00000014\n...\n[    9.942216]  mv88e6060_setup from dsa_register_switch+0x814/0xe84\n[    9.948616]  dsa_register_switch from mdio_probe+0x2c/0x54\n[    9.954433]  mdio_probe from really_probe.part.0+0x98/0x2a0\n[    9.960375]  really_probe.part.0 from driver_probe_device+0x30/0x10c\n[    9.967029]  driver_probe_device from __device_attach_driver+0xb8/0x13c\n[    9.973946]  __device_attach_driver from bus_for_each_drv+0x90/0xe0\n[    9.980509]  bus_for_each_drv from __device_attach+0x110/0x184\n[    9.986632]  __device_attach from bus_probe_device+0x8c/0x94\n[    9.992577]  bus_probe_device from deferred_probe_work_func+0x78/0xa8\n[    9.999311]  deferred_probe_work_func from process_one_work+0x290/0x73c\n[   10.006292]  process_one_work from worker_thread+0x30/0x4b8\n[   10.012155]  worker_thread from kthread+0xd4/0x10c\n[   10.017238]  kthread from ret_from_fork+0x14/0x3c",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50051",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: debug: Fix potential buffer overflow by snprintf()\n\nsnprintf() returns the would-be-filled size when the string overflows\nthe given buffer size, hence using this value may result in the buffer\noverflow (although it's unrealistic).\n\nThis patch replaces with a safer version, scnprintf() for papering\nover such a potential issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix reset error handling\n\nDo not call iavf_close in iavf_reset_task error handling. Doing so can\nlead to double call of napi_disable, which can lead to deadlock there.\nRemoving VF would lead to iavf_remove task being stuck, because it\nrequires crit_lock, which is held by iavf_close.\nCall iavf_disable_vf if reset fail, so that driver will clean up\nremaining invalid resources.\nDuring rapid VF resets, HW can fail to setup VF mailbox. Wrong\nerror handling can lead to iavf_remove being stuck with:\n[ 5218.999087] iavf 0000:82:01.0: Failed to init adminq: -53\n...\n[ 5267.189211] INFO: task repro.sh:11219 blocked for more than 30 seconds.\n[ 5267.189520]       Tainted: G S          E     5.18.0-04958-ga54ce3703613-dirty #1\n[ 5267.189764] \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[ 5267.190062] task:repro.sh        state:D stack:    0 pid:11219 ppid:  8162 flags:0x00000000\n[ 5267.190347] Call Trace:\n[ 5267.190647]  \u003cTASK\u003e\n[ 5267.190927]  __schedule+0x460/0x9f0\n[ 5267.191264]  schedule+0x44/0xb0\n[ 5267.191563]  schedule_preempt_disabled+0x14/0x20\n[ 5267.191890]  __mutex_lock.isra.12+0x6e3/0xac0\n[ 5267.192237]  ? iavf_remove+0xf9/0x6c0 [iavf]\n[ 5267.192565]  iavf_remove+0x12a/0x6c0 [iavf]\n[ 5267.192911]  ? _raw_spin_unlock_irqrestore+0x1e/0x40\n[ 5267.193285]  pci_device_remove+0x36/0xb0\n[ 5267.193619]  device_release_driver_internal+0xc1/0x150\n[ 5267.193974]  pci_stop_bus_device+0x69/0x90\n[ 5267.194361]  pci_stop_and_remove_bus_device+0xe/0x20\n[ 5267.194735]  pci_iov_remove_virtfn+0xba/0x120\n[ 5267.195130]  sriov_disable+0x2f/0xe0\n[ 5267.195506]  ice_free_vfs+0x7d/0x2f0 [ice]\n[ 5267.196056]  ? pci_get_device+0x4f/0x70\n[ 5267.196496]  ice_sriov_configure+0x78/0x1a0 [ice]\n[ 5267.196995]  sriov_numvfs_store+0xfe/0x140\n[ 5267.197466]  kernfs_fop_write_iter+0x12e/0x1c0\n[ 5267.197918]  new_sync_write+0x10c/0x190\n[ 5267.198404]  vfs_write+0x24e/0x2d0\n[ 5267.198886]  ksys_write+0x5c/0xd0\n[ 5267.199367]  do_syscall_64+0x3a/0x80\n[ 5267.199827]  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n[ 5267.200317] RIP: 0033:0x7f5b381205c8\n[ 5267.200814] RSP: 002b:00007fff8c7e8c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[ 5267.201981] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f5b381205c8\n[ 5267.202620] RDX: 0000000000000002 RSI: 00005569420ee900 RDI: 0000000000000001\n[ 5267.203426] RBP: 00005569420ee900 R08: 000000000000000a R09: 00007f5b38180820\n[ 5267.204327] R10: 000000000000000a R11: 0000000000000246 R12: 00007f5b383c06e0\n[ 5267.205193] R13: 0000000000000002 R14: 00007f5b383bb880 R15: 0000000000000002\n[ 5267.206041]  \u003c/TASK\u003e\n[ 5267.206970] Kernel panic - not syncing: hung_task: blocked tasks\n[ 5267.207809] CPU: 48 PID: 551 Comm: khungtaskd Kdump: loaded Tainted: G S          E     5.18.0-04958-ga54ce3703613-dirty #1\n[ 5267.208726] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.11.0 11/02/2019\n[ 5267.209623] Call Trace:\n[ 5267.210569]  \u003cTASK\u003e\n[ 5267.211480]  dump_stack_lvl+0x33/0x42\n[ 5267.212472]  panic+0x107/0x294\n[ 5267.213467]  watchdog.cold.8+0xc/0xbb\n[ 5267.214413]  ? proc_dohung_task_timeout_secs+0x30/0x30\n[ 5267.215511]  kthread+0xf4/0x120\n[ 5267.216459]  ? kthread_complete_and_exit+0x20/0x20\n[ 5267.217505]  ret_from_fork+0x22/0x30\n[ 5267.218459]  \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50055",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix adminq error handling\n\niavf_alloc_asq_bufs/iavf_alloc_arq_bufs allocates with dma_alloc_coherent\nmemory for VF mailbox.\nFree DMA regions for both ASQ and ARQ in case error happens during\nconfiguration of ASQ/ARQ registers.\nWithout this change it is possible to see when unloading interface:\n74626.583369: dma_debug_device_change: device driver has pending DMA allocations while released from device [count=32]\nOne of leaked entries details: [device address=0x0000000b27ff9000] [size=4096 bytes] [mapped with DMA_BIDIRECTIONAL] [mapped as coherent]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nceph: don't leak snap_rwsem in handle_cap_grant\n\nWhen handle_cap_grant is called on an IMPORT op, then the snap_rwsem is\nheld and the function is expected to release it before returning. It\ncurrently fails to do that in all cases which could lead to a deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-af: Fix mcam entry resource leak\n\nThe teardown sequence in FLR handler returns if no NIX LF\nis attached to PF/VF because it indicates that graceful\nshutdown of resources already happened. But there is a\nchance of all allocated MCAM entries not being freed by\nPF/VF. Hence free mcam entries even in case of detached LF.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50061",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: nomadik: Fix refcount leak in nmk_pinctrl_dt_subnode_to_map\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bgmac: Fix a BUG triggered by wrong bytes_compl\n\nOn one of our machines we got:\n\nkernel BUG at lib/dynamic_queue_limits.c:27!\nInternal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM\nCPU: 0 PID: 1166 Comm: irq/41-bgmac Tainted: G        W  O    4.14.275-rt132 #1\nHardware name: BRCM XGS iProc\ntask: ee3415c0 task.stack: ee32a000\nPC is at dql_completed+0x168/0x178\nLR is at bgmac_poll+0x18c/0x6d8\npc : [\u003cc03b9430\u003e]    lr : [\u003cc04b5a18\u003e]    psr: 800a0313\nsp : ee32be14  ip : 000005ea  fp : 00000bd4\nr10: ee558500  r9 : c0116298  r8 : 00000002\nr7 : 00000000  r6 : ef128810  r5 : 01993267  r4 : 01993851\nr3 : ee558000  r2 : 000070e1  r1 : 00000bd4  r0 : ee52c180\nFlags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\nControl: 12c5387d  Table: 8e88c04a  DAC: 00000051\nProcess irq/41-bgmac (pid: 1166, stack limit = 0xee32a210)\nStack: (0xee32be14 to 0xee32c000)\nbe00:                                              ee558520 ee52c100 ef128810\nbe20: 00000000 00000002 c0116298 c04b5a18 00000000 c0a0c8c4 c0951780 00000040\nbe40: c0701780 ee558500 ee55d520 ef05b340 ef6f9780 ee558520 00000001 00000040\nbe60: ffffe000 c0a56878 ef6fa040 c0952040 0000012c c0528744 ef6f97b0 fffcfb6a\nbe80: c0a04104 2eda8000 c0a0c4ec c0a0d368 ee32bf44 c0153534 ee32be98 ee32be98\nbea0: ee32bea0 ee32bea0 ee32bea8 ee32bea8 00000000 c01462e4 ffffe000 ef6f22a8\nbec0: ffffe000 00000008 ee32bee4 c0147430 ffffe000 c094a2a8 00000003 ffffe000\nbee0: c0a54528 00208040 0000000c c0a0c8c4 c0a65980 c0124d3c 00000008 ee558520\nbf00: c094a23c c0a02080 00000000 c07a9910 ef136970 ef136970 ee30a440 ef136900\nbf20: ee30a440 00000001 ef136900 ee30a440 c016d990 00000000 c0108db0 c012500c\nbf40: ef136900 c016da14 ee30a464 ffffe000 00000001 c016dd14 00000000 c016db28\nbf60: ffffe000 ee21a080 ee30a400 00000000 ee32a000 ee30a440 c016dbfc ee25fd70\nbf80: ee21a09c c013edcc ee32a000 ee30a400 c013ec7c 00000000 00000000 00000000\nbfa0: 00000000 00000000 00000000 c0108470 00000000 00000000 00000000 00000000\nbfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\nbfe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000\n[\u003cc03b9430\u003e] (dql_completed) from [\u003cc04b5a18\u003e] (bgmac_poll+0x18c/0x6d8)\n[\u003cc04b5a18\u003e] (bgmac_poll) from [\u003cc0528744\u003e] (net_rx_action+0x1c4/0x494)\n[\u003cc0528744\u003e] (net_rx_action) from [\u003cc0124d3c\u003e] (do_current_softirqs+0x1ec/0x43c)\n[\u003cc0124d3c\u003e] (do_current_softirqs) from [\u003cc012500c\u003e] (__local_bh_enable+0x80/0x98)\n[\u003cc012500c\u003e] (__local_bh_enable) from [\u003cc016da14\u003e] (irq_forced_thread_fn+0x84/0x98)\n[\u003cc016da14\u003e] (irq_forced_thread_fn) from [\u003cc016dd14\u003e] (irq_thread+0x118/0x1c0)\n[\u003cc016dd14\u003e] (irq_thread) from [\u003cc013edcc\u003e] (kthread+0x150/0x158)\n[\u003cc013edcc\u003e] (kthread) from [\u003cc0108470\u003e] (ret_from_fork+0x14/0x24)\nCode: a83f15e0 0200001a 0630a0e1 c3ffffea (f201f0e7)\n\nThe issue seems similar to commit 90b3b339364c (\"net: hisilicon: Fix a BUG\ntrigered by wrong bytes_compl\") and potentially introduced by commit\nb38c83dd0866 (\"bgmac: simplify tx ring index handling\").\n\nIf there is an RX interrupt between setting ring-\u003eend\nand netdev_sent_queue() we can hit the BUG_ON as bgmac_dma_tx_free()\ncan miscalculate the queue size while called from bgmac_poll().\n\nThe machine which triggered the BUG runs a v4.14 RT kernel - but the issue\nseems present in mainline too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50065",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: fix memory leak inside XPD_TX with mergeable\n\nWhen we call xdp_convert_buff_to_frame() to get xdpf, if it returns\nNULL, we should check if xdp_page was allocated by xdp_linearize_page().\nIf it is newly allocated, it should be freed here alone. Just like any\nother \"goto err_xdp\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50066",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atlantic: fix aq_vec index out of range error\n\nThe final update statement of the for loop exceeds the array range, the\ndereference of self-\u003eaq_vec[i] is not checked and then leads to the\nindex out of range error.\nAlso fixed this kind of coding style in other for loop.\n\n[   97.937604] UBSAN: array-index-out-of-bounds in drivers/net/ethernet/aquantia/atlantic/aq_nic.c:1404:48\n[   97.937607] index 8 is out of range for type 'aq_vec_s *[8]'\n[   97.937608] CPU: 38 PID: 3767 Comm: kworker/u256:18 Not tainted 5.19.0+ #2\n[   97.937610] Hardware name: Dell Inc. Precision 7865 Tower/, BIOS 1.0.0 06/12/2022\n[   97.937611] Workqueue: events_unbound async_run_entry_fn\n[   97.937616] Call Trace:\n[   97.937617]  \u003cTASK\u003e\n[   97.937619]  dump_stack_lvl+0x49/0x63\n[   97.937624]  dump_stack+0x10/0x16\n[   97.937626]  ubsan_epilogue+0x9/0x3f\n[   97.937627]  __ubsan_handle_out_of_bounds.cold+0x44/0x49\n[   97.937629]  ? __scm_send+0x348/0x440\n[   97.937632]  ? aq_vec_stop+0x72/0x80 [atlantic]\n[   97.937639]  aq_nic_stop+0x1b6/0x1c0 [atlantic]\n[   97.937644]  aq_suspend_common+0x88/0x90 [atlantic]\n[   97.937648]  aq_pm_suspend_poweroff+0xe/0x20 [atlantic]\n[   97.937653]  pci_pm_suspend+0x7e/0x1a0\n[   97.937655]  ? pci_pm_suspend_noirq+0x2b0/0x2b0\n[   97.937657]  dpm_run_callback+0x54/0x190\n[   97.937660]  __device_suspend+0x14c/0x4d0\n[   97.937661]  async_suspend+0x23/0x70\n[   97.937663]  async_run_entry_fn+0x33/0x120\n[   97.937664]  process_one_work+0x21f/0x3f0\n[   97.937666]  worker_thread+0x4a/0x3c0\n[   97.937668]  ? process_one_work+0x3f0/0x3f0\n[   97.937669]  kthread+0xf0/0x120\n[   97.937671]  ? kthread_complete_and_exit+0x20/0x20\n[   97.937672]  ret_from_fork+0x22/0x30\n[   97.937676]  \u003c/TASK\u003e\n\nv2. fixed \"warning: variable 'aq_vec' set but not used\"\n\nv3. simplified a for loop",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/ttm: Fix dummy res NULL ptr deref bug\n\nCheck the bo-\u003eresource value before accessing the resource\nmem_type.\n\nv2: Fix commit description unwrapped warning\n\n\u003clog snip\u003e\n[   40.191227][  T184] general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] SMP KASAN PTI\n[   40.192995][  T184] KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\n[   40.194411][  T184] CPU: 1 PID: 184 Comm: systemd-udevd Not tainted 5.19.0-rc4-00721-gb297c22b7070 #1\n[   40.196063][  T184] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-4 04/01/2014\n[   40.199605][  T184] RIP: 0010:ttm_bo_validate+0x1b3/0x240 [ttm]\n[   40.200754][  T184] Code: e8 72 c5 ff ff 83 f8 b8 74 d4 85 c0 75 54 49 8b 9e 58 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 8d 7b 10 48 89 fa 48 c1 ea 03 \u003c0f\u003e b6 04 02 84 c0 74 04 3c 03 7e 44 8b 53 10 31 c0 85 d2 0f 85 58\n[   40.203685][  T184] RSP: 0018:ffffc900006df0c8 EFLAGS: 00010202\n[   40.204630][  T184] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 1ffff1102f4bb71b\n[   40.205864][  T184] RDX: 0000000000000002 RSI: ffffc900006df208 RDI: 0000000000000010\n[   40.207102][  T184] RBP: 1ffff920000dbe1a R08: ffffc900006df208 R09: 0000000000000000\n[   40.208394][  T184] R10: ffff88817a5f0000 R11: 0000000000000001 R12: ffffc900006df110\n[   40.209692][  T184] R13: ffffc900006df0f0 R14: ffff88817a5db800 R15: ffffc900006df208\n[   40.210862][  T184] FS:  00007f6b1d16e8c0(0000) GS:ffff88839d700000(0000) knlGS:0000000000000000\n[   40.212250][  T184] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   40.213275][  T184] CR2: 000055a1001d4ff0 CR3: 00000001700f4000 CR4: 00000000000006e0\n[   40.214469][  T184] Call Trace:\n[   40.214974][  T184]  \u003cTASK\u003e\n[   40.215438][  T184]  ? ttm_bo_bounce_temp_buffer+0x140/0x140 [ttm]\n[   40.216572][  T184]  ? mutex_spin_on_owner+0x240/0x240\n[   40.217456][  T184]  ? drm_vma_offset_add+0xaa/0x100 [drm]\n[   40.218457][  T184]  ttm_bo_init_reserved+0x3d6/0x540 [ttm]\n[   40.219410][  T184]  ? shmem_get_inode+0x744/0x980\n[   40.220231][  T184]  ttm_bo_init_validate+0xb1/0x200 [ttm]\n[   40.221172][  T184]  ? bo_driver_evict_flags+0x340/0x340 [drm_vram_helper]\n[   40.222530][  T184]  ? ttm_bo_init_reserved+0x540/0x540 [ttm]\n[   40.223643][  T184]  ? __do_sys_finit_module+0x11a/0x1c0\n[   40.224654][  T184]  ? __shmem_file_setup+0x102/0x280\n[   40.234764][  T184]  drm_gem_vram_create+0x305/0x480 [drm_vram_helper]\n[   40.235766][  T184]  ? bo_driver_evict_flags+0x340/0x340 [drm_vram_helper]\n[   40.236846][  T184]  ? __kasan_slab_free+0x108/0x180\n[   40.237650][  T184]  drm_gem_vram_fill_create_dumb+0x134/0x340 [drm_vram_helper]\n[   40.238864][  T184]  ? local_pci_probe+0xdf/0x180\n[   40.239674][  T184]  ? drmm_vram_helper_init+0x400/0x400 [drm_vram_helper]\n[   40.240826][  T184]  drm_client_framebuffer_create+0x19c/0x400 [drm]\n[   40.241955][  T184]  ? drm_client_buffer_delete+0x200/0x200 [drm]\n[   40.243001][  T184]  ? drm_client_pick_crtcs+0x554/0xb80 [drm]\n[   40.244030][  T184]  drm_fb_helper_generic_probe+0x23f/0x940 [drm_kms_helper]\n[   40.245226][  T184]  ? __cond_resched+0x1c/0xc0\n[   40.245987][  T184]  ? drm_fb_helper_memory_range_to_clip+0x180/0x180 [drm_kms_helper]\n[   40.247316][  T184]  ? mutex_unlock+0x80/0x100\n[   40.248005][  T184]  ? __mutex_unlock_slowpath+0x2c0/0x2c0\n[   40.249083][  T184]  drm_fb_helper_single_fb_probe+0x907/0xf00 [drm_kms_helper]\n[   40.250314][  T184]  ? drm_fb_helper_check_var+0x1180/0x1180 [drm_kms_helper]\n[   40.251540][  T184]  ? __cond_resched+0x1c/0xc0\n[   40.252321][  T184]  ? mutex_lock+0x9f/0x100\n[   40.253062][  T184]  __drm_fb_helper_initial_config_and_unlock+0xb9/0x2c0 [drm_kms_helper]\n[   40.254394][  T184]  drm_fbdev_client_hotplug+0x56f/0x840 [drm_kms_helper]\n[   40.255477][  T184]  drm_fbdev_generic_setup+0x165/0x3c0 [drm_kms_helper]\n[   40.256607][  T184]  bochs_pci_probe+0x6b7/0x900 [bochs]\n[   \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4/pnfs: Fix a use-after-free bug in open\n\nIf someone cancels the open RPC call, then we must not try to free\neither the open slot or the layoutget operation arguments, since they\nare likely still in use by the hung RPC call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50073",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tap: NULL pointer derefence in dev_parse_header_protocol when skb-\u003edev is null\n\nFixes a NULL pointer derefence bug triggered from tap driver.\nWhen tap_get_user calls virtio_net_hdr_to_skb the skb-\u003edev is null\n(in tap.c skb-\u003edev is set after the call to virtio_net_hdr_to_skb)\nvirtio_net_hdr_to_skb calls dev_parse_header_protocol which\nneeds skb-\u003edev field to be valid.\n\nThe line that trigers the bug is in dev_parse_header_protocol\n(dev is at offset 0x10 from skb and is stored in RAX register)\n  if (!dev-\u003eheader_ops || !dev-\u003eheader_ops-\u003eparse_protocol)\n  22e1:   mov    0x10(%rbx),%rax\n  22e5:\t  mov    0x230(%rax),%rax\n\nSetting skb-\u003edev before the call in tap.c fixes the issue.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000230\nRIP: 0010:virtio_net_hdr_to_skb.constprop.0+0x335/0x410 [tap]\nCode: c0 0f 85 b7 fd ff ff eb d4 41 39 c6 77 cf 29 c6 48 89 df 44 01 f6 e8 7a 79 83 c1 48 85 c0 0f 85 d9 fd ff ff eb b7 48 8b 43 10 \u003c48\u003e 8b 80 30 02 00 00 48 85 c0 74 55 48 8b 40 28 48 85 c0 74 4c 48\nRSP: 0018:ffffc90005c27c38 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff888298f25300 RCX: 0000000000000010\nRDX: 0000000000000005 RSI: ffffc90005c27cb6 RDI: ffff888298f25300\nRBP: ffffc90005c27c80 R08: 00000000ffffffea R09: 00000000000007e8\nR10: ffff88858ec77458 R11: 0000000000000000 R12: 0000000000000001\nR13: 0000000000000014 R14: ffffc90005c27e08 R15: ffffc90005c27cb6\nFS:  0000000000000000(0000) GS:ffff88858ec40000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000230 CR3: 0000000281408006 CR4: 00000000003706e0\nCall Trace:\n tap_get_user+0x3f1/0x540 [tap]\n tap_sendmsg+0x56/0x362 [tap]\n ? get_tx_bufs+0xc2/0x1e0 [vhost_net]\n handle_tx_copy+0x114/0x670 [vhost_net]\n handle_tx+0xb0/0xe0 [vhost_net]\n handle_tx_kick+0x15/0x20 [vhost_net]\n vhost_worker+0x7b/0xc0 [vhost]\n ? vhost_vring_call_reset+0x40/0x40 [vhost]\n kthread+0xfa/0x120\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50074",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: Fix memleak in aa_simple_write_to_buffer()\n\nWhen copy_from_user failed, the memory is freed by kvfree. however the\nmanagement struct and data blob are allocated independently, so only\nkvfree(data) cause a memleak issue here. Use aa_put_loaddata(data) to\nfix this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50076",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix memory leak on the deferred close\n\nxfstests on smb21 report kmemleak as below:\n\n  unreferenced object 0xffff8881767d6200 (size 64):\n    comm \"xfs_io\", pid 1284, jiffies 4294777434 (age 20.789s)\n    hex dump (first 32 bytes):\n      80 5a d0 11 81 88 ff ff 78 8a aa 63 81 88 ff ff  .Z......x..c....\n      00 71 99 76 81 88 ff ff 00 00 00 00 00 00 00 00  .q.v............\n    backtrace:\n      [\u003c00000000ad04e6ea\u003e] cifs_close+0x92/0x2c0\n      [\u003c0000000028b93c82\u003e] __fput+0xff/0x3f0\n      [\u003c00000000d8116851\u003e] task_work_run+0x85/0xc0\n      [\u003c0000000027e14f9e\u003e] do_exit+0x5e5/0x1240\n      [\u003c00000000fb492b95\u003e] do_group_exit+0x58/0xe0\n      [\u003c00000000129a32d9\u003e] __x64_sys_exit_group+0x28/0x30\n      [\u003c00000000e3f7d8e9\u003e] do_syscall_64+0x35/0x80\n      [\u003c00000000102e8a0b\u003e] entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nWhen cancel the deferred close work, we should also cleanup the struct\ncifs_deferred_close.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\napparmor: fix reference count leak in aa_pivotroot()\n\nThe aa_pivotroot() function has a reference counting bug in a specific\npath. When aa_replace_current_label() returns on success, the function\nforgets to decrement the reference count of \"target\", which is\nincreased earlier by build_pivotroot(), causing a reference leak.\n\nFix it by decreasing the refcount of \"target\" in that path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50079",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Check correct bounds for stream encoder instances for DCN303\n\n[Why \u0026 How]\neng_id for DCN303 cannot be more than 1, since we have only two\ninstances of stream encoders.\n\nCheck the correct boundary condition for engine ID for DCN303 prevent\nthe potential out of bounds access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50083",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50084",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm raid: fix address sanitizer warning in raid_status\n\nThere is this warning when using a kernel with the address sanitizer\nand running this testsuite:\nhttps://gitlab.com/cki-project/kernel-tests/-/tree/main/storage/swraid/scsi_raid\n\n==================================================================\nBUG: KASAN: slab-out-of-bounds in raid_status+0x1747/0x2820 [dm_raid]\nRead of size 4 at addr ffff888079d2c7e8 by task lvcreate/13319\nCPU: 0 PID: 13319 Comm: lvcreate Not tainted 5.18.0-0.rc3.\u003csnip\u003e #1\nHardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x6a/0x9c\n print_address_description.constprop.0+0x1f/0x1e0\n print_report.cold+0x55/0x244\n kasan_report+0xc9/0x100\n raid_status+0x1747/0x2820 [dm_raid]\n dm_ima_measure_on_table_load+0x4b8/0xca0 [dm_mod]\n table_load+0x35c/0x630 [dm_mod]\n ctl_ioctl+0x411/0x630 [dm_mod]\n dm_ctl_ioctl+0xa/0x10 [dm_mod]\n __x64_sys_ioctl+0x12a/0x1a0\n do_syscall_64+0x5b/0x80\n\nThe warning is caused by reading conf-\u003emax_nr_stripes in raid_status. The\ncode in raid_status reads mddev-\u003eprivate, casts it to struct r5conf and\nreads the entry max_nr_stripes.\n\nHowever, if we have different raid type than 4/5/6, mddev-\u003eprivate\ndoesn't point to struct r5conf; it may point to struct r0conf, struct\nr1conf, struct r10conf or struct mpconf. If we cast a pointer to one\nof these structs to struct r5conf, we will be reading invalid memory\nand KASAN warns about it.\n\nFix this bug by reading struct r5conf only if raid type is 4, 5 or 6.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50085",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm raid: fix address sanitizer warning in raid_resume\n\nThere is a KASAN warning in raid_resume when running the lvm test\nlvconvert-raid.sh. The reason for the warning is that mddev-\u003eraid_disks\nis greater than rs-\u003eraid_disks, so the loop touches one entry beyond\nthe allocated length.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50087",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scpi: Ensure scpi_info is not assigned if the probe fails\n\nWhen scpi probe fails, at any point, we need to ensure that the scpi_info\nis not set and will remain NULL until the probe succeeds. If it is not\ntaken care, then it could result use-after-free as the value is exported\nvia get_scpi_ops() and could refer to a memory allocated via devm_kzalloc()\nbut freed when the probe fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50092",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm thin: fix use-after-free crash in dm_sm_register_threshold_callback\n\nFault inject on pool metadata device reports:\n  BUG: KASAN: use-after-free in dm_pool_register_metadata_threshold+0x40/0x80\n  Read of size 8 at addr ffff8881b9d50068 by task dmsetup/950\n\n  CPU: 7 PID: 950 Comm: dmsetup Tainted: G        W         5.19.0-rc6 #1\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33 04/01/2014\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x34/0x44\n   print_address_description.constprop.0.cold+0xeb/0x3f4\n   kasan_report.cold+0xe6/0x147\n   dm_pool_register_metadata_threshold+0x40/0x80\n   pool_ctr+0xa0a/0x1150\n   dm_table_add_target+0x2c8/0x640\n   table_load+0x1fd/0x430\n   ctl_ioctl+0x2c4/0x5a0\n   dm_ctl_ioctl+0xa/0x10\n   __x64_sys_ioctl+0xb3/0xd0\n   do_syscall_64+0x35/0x80\n   entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nThis can be easily reproduced using:\n  echo offline \u003e /sys/block/sda/device/state\n  dd if=/dev/zero of=/dev/mapper/thin bs=4k count=10\n  dmsetup load pool --table \"0 20971520 thin-pool /dev/sda /dev/sdb 128 0 0\"\n\nIf a metadata commit fails, the transaction will be aborted and the\nmetadata space maps will be destroyed. If a DM table reload then\nhappens for this failed thin-pool, a use-after-free will occur in\ndm_sm_register_threshold_callback (called from\ndm_pool_register_metadata_threshold).\n\nFix this by in dm_pool_register_metadata_threshold() by returning the\n-EINVAL error if the thin-pool is in fail mode. Also fail pool_ctr()\nwith a new error message: \"Error registering metadata threshold\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: avoid invalid memory access via node_online(NUMA_NO_NODE)\n\nKASAN reports:\n\n[ 4.668325][ T0] BUG: KASAN: wild-memory-access in dmar_parse_one_rhsa (arch/x86/include/asm/bitops.h:214 arch/x86/include/asm/bitops.h:226 include/asm-generic/bitops/instrumented-non-atomic.h:142 include/linux/nodemask.h:415 drivers/iommu/intel/dmar.c:497)\n[    4.676149][    T0] Read of size 8 at addr 1fffffff85115558 by task swapper/0/0\n[    4.683454][    T0]\n[    4.685638][    T0] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.19.0-rc3-00004-g0e862838f290 #1\n[    4.694331][    T0] Hardware name: Supermicro SYS-5018D-FN4T/X10SDV-8C-TLN4F, BIOS 1.1 03/02/2016\n[    4.703196][    T0] Call Trace:\n[    4.706334][    T0]  \u003cTASK\u003e\n[ 4.709133][ T0] ? dmar_parse_one_rhsa (arch/x86/include/asm/bitops.h:214 arch/x86/include/asm/bitops.h:226 include/asm-generic/bitops/instrumented-non-atomic.h:142 include/linux/nodemask.h:415 drivers/iommu/intel/dmar.c:497)\n\nafter converting the type of the first argument (@nr, bit number)\nof arch_test_bit() from `long` to `unsigned long`[0].\n\nUnder certain conditions (for example, when ACPI NUMA is disabled\nvia command line), pxm_to_node() can return %NUMA_NO_NODE (-1).\nIt is valid 'magic' number of NUMA node, but not valid bit number\nto use in bitops.\nnode_online() eventually descends to test_bit() without checking\nfor the input, assuming it's on caller side (which might be good\nfor perf-critical tasks). There, -1 becomes %ULONG_MAX which leads\nto an insane array index when calculating bit position in memory.\n\nFor now, add an explicit check for @node being not %NUMA_NO_NODE\nbefore calling test_bit(). The actual logics didn't change here\nat all.\n\n[0] https://github.com/norov/linux/commit/0e862838f290147ea9c16db852d8d494b552d38d",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50094",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspmi: trace: fix stack-out-of-bound access in SPMI tracing functions\n\ntrace_spmi_write_begin() and trace_spmi_read_end() both call\nmemcpy() with a length of \"len + 1\".  This leads to one extra\nbyte being read beyond the end of the specified buffer.  Fix\nthis out-of-bound memory access by using a length of \"len\"\ninstead.\n\nHere is a KASAN log showing the issue:\n\nBUG: KASAN: stack-out-of-bounds in trace_event_raw_event_spmi_read_end+0x1d0/0x234\nRead of size 2 at addr ffffffc0265b7540 by task thermal@2.0-ser/1314\n...\nCall trace:\n dump_backtrace+0x0/0x3e8\n show_stack+0x2c/0x3c\n dump_stack_lvl+0xdc/0x11c\n print_address_description+0x74/0x384\n kasan_report+0x188/0x268\n kasan_check_range+0x270/0x2b0\n memcpy+0x90/0xe8\n trace_event_raw_event_spmi_read_end+0x1d0/0x234\n spmi_read_cmd+0x294/0x3ac\n spmi_ext_register_readl+0x84/0x9c\n regmap_spmi_ext_read+0x144/0x1b0 [regmap_spmi]\n _regmap_raw_read+0x40c/0x754\n regmap_raw_read+0x3a0/0x514\n regmap_bulk_read+0x418/0x494\n adc5_gen3_poll_wait_hs+0xe8/0x1e0 [qcom_spmi_adc5_gen3]\n ...\n __arm64_sys_read+0x4c/0x60\n invoke_syscall+0x80/0x218\n el0_svc_common+0xec/0x1c8\n ...\n\naddr ffffffc0265b7540 is located in stack of task thermal@2.0-ser/1314 at offset 32 in frame:\n adc5_gen3_poll_wait_hs+0x0/0x1e0 [qcom_spmi_adc5_gen3]\n\nthis frame has 1 object:\n [32, 33) 'status'\n\nMemory state around the buggy address:\n ffffffc0265b7400: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n ffffffc0265b7480: 04 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\n\u003effffffc0265b7500: 00 00 00 00 f1 f1 f1 f1 01 f3 f3 f3 00 00 00 00\n                                           ^\n ffffffc0265b7580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffffffc0265b7600: f1 f1 f1 f1 01 f2 07 f2 f2 f2 01 f3 00 00 00 00\n==================================================================",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: s3fb: Check the size of screen before memset_io()\n\nIn the function s3fb_set_par(), the value of 'screen_size' is\ncalculated by the user input. If the user provides the improper value,\nthe value of 'screen_size' may larger than 'info-\u003escreen_size', which\nmay cause the following bug:\n\n[   54.083733] BUG: unable to handle page fault for address: ffffc90003000000\n[   54.083742] #PF: supervisor write access in kernel mode\n[   54.083744] #PF: error_code(0x0002) - not-present page\n[   54.083760] RIP: 0010:memset_orig+0x33/0xb0\n[   54.083782] Call Trace:\n[   54.083788]  s3fb_set_par+0x1ec6/0x4040\n[   54.083806]  fb_set_var+0x604/0xeb0\n[   54.083836]  do_fb_ioctl+0x234/0x670\n\nFix the this by checking the value of 'screen_size' before memset_io().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50098",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix crash due to stale SRB access around I/O timeouts\n\nEnsure SRB is returned during I/O timeout error escalation. If that is not\npossible fail the escalation path.\n\nFollowing crash stack was seen:\n\nBUG: unable to handle kernel paging request at 0000002f56aa90f8\nIP: qla_chk_edif_rx_sa_delete_pending+0x14/0x30 [qla2xxx]\nCall Trace:\n ? qla2x00_status_entry+0x19f/0x1c50 [qla2xxx]\n ? qla2x00_start_sp+0x116/0x1170 [qla2xxx]\n ? dma_pool_alloc+0x1d6/0x210\n ? mempool_alloc+0x54/0x130\n ? qla24xx_process_response_queue+0x548/0x12b0 [qla2xxx]\n ? qla_do_work+0x2d/0x40 [qla2xxx]\n ? process_one_work+0x14c/0x390",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50099",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: arkfb: Check the size of screen before memset_io()\n\nIn the function arkfb_set_par(), the value of 'screen_size' is\ncalculated by the user input. If the user provides the improper value,\nthe value of 'screen_size' may larger than 'info-\u003escreen_size', which\nmay cause the following bug:\n\n[  659.399066] BUG: unable to handle page fault for address: ffffc90003000000\n[  659.399077] #PF: supervisor write access in kernel mode\n[  659.399079] #PF: error_code(0x0002) - not-present page\n[  659.399094] RIP: 0010:memset_orig+0x33/0xb0\n[  659.399116] Call Trace:\n[  659.399122]  arkfb_set_par+0x143f/0x24c0\n[  659.399130]  fb_set_var+0x604/0xeb0\n[  659.399161]  do_fb_ioctl+0x234/0x670\n[  659.399189]  fb_ioctl+0xdd/0x130\n\nFix the this by checking the value of 'screen_size' before memset_io().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/core: Do not requeue task on CPU excluded from cpus_mask\n\nThe following warning was triggered on a large machine early in boot on\na distribution kernel but the same problem should also affect mainline.\n\n   WARNING: CPU: 439 PID: 10 at ../kernel/workqueue.c:2231 process_one_work+0x4d/0x440\n   Call Trace:\n    \u003cTASK\u003e\n    rescuer_thread+0x1f6/0x360\n    kthread+0x156/0x180\n    ret_from_fork+0x22/0x30\n    \u003c/TASK\u003e\n\nCommit c6e7bd7afaeb (\"sched/core: Optimize ttwu() spinning on p-\u003eon_cpu\")\noptimises ttwu by queueing a task that is descheduling on the wakelist,\nbut does not check if the task descheduling is still allowed to run on that CPU.\n\nIn this warning, the problematic task is a workqueue rescue thread which\nchecks if the rescue is for a per-cpu workqueue and running on the wrong CPU.\nWhile this is early in boot and it should be possible to create workers,\nthe rescue thread may still used if the MAYDAY_INITIAL_TIMEOUT is reached\nor MAYDAY_INTERVAL and on a sufficiently large machine, the rescue\nthread is being used frequently.\n\nTracing confirmed that the task should have migrated properly using the\nstopper thread to handle the migration. However, a parallel wakeup from udev\nrunning on another CPU that does not share CPU cache observes p-\u003eon_cpu and\nuses task_cpu(p), queues the task on the old CPU and triggers the warning.\n\nCheck that the wakee task that is descheduling is still allowed to run\non its current CPU and if not, wait for the descheduling to complete\nand select an allowed CPU.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: vt8623fb: Check the size of screen before memset_io()\n\nIn the function vt8623fb_set_par(), the value of 'screen_size' is\ncalculated by the user input. If the user provides the improper value,\nthe value of 'screen_size' may larger than 'info-\u003escreen_size', which\nmay cause the following bug:\n\n[  583.339036] BUG: unable to handle page fault for address: ffffc90005000000\n[  583.339049] #PF: supervisor write access in kernel mode\n[  583.339052] #PF: error_code(0x0002) - not-present page\n[  583.339074] RIP: 0010:memset_orig+0x33/0xb0\n[  583.339110] Call Trace:\n[  583.339118]  vt8623fb_set_par+0x11cd/0x21e0\n[  583.339146]  fb_set_var+0x604/0xeb0\n[  583.339181]  do_fb_ioctl+0x234/0x670\n[  583.339209]  fb_ioctl+0xdd/0x130\n\nFix the this by checking the value of 'screen_size' before memset_io().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50102",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: arkfb: Fix a divide-by-zero bug in ark_set_pixclock()\n\nSince the user can control the arguments of the ioctl() from the user\nspace, under special arguments that may result in a divide-by-zero bug\nin:\n  drivers/video/fbdev/arkfb.c:784: ark_set_pixclock(info, (hdiv * info-\u003evar.pixclock) / hmul);\nwith hdiv=1, pixclock=1 and hmul=2 you end up with (1*1)/2 = (int) 0.\nand then in:\n  drivers/video/fbdev/arkfb.c:504: rv = dac_set_freq(par-\u003edac, 0, 1000000000 / pixclock);\nwe'll get a division-by-zero.\n\nThe following log can reveal it:\n\ndivide error: 0000 [#1] PREEMPT SMP KASAN PTI\nRIP: 0010:ark_set_pixclock drivers/video/fbdev/arkfb.c:504 [inline]\nRIP: 0010:arkfb_set_par+0x10fc/0x24c0 drivers/video/fbdev/arkfb.c:784\nCall Trace:\n fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1034\n do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110\n fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189\n\nFix this by checking the argument of ark_set_pixclock() first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50103",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched, cpuset: Fix dl_cpu_busy() panic due to empty cs-\u003ecpus_allowed\n\nWith cgroup v2, the cpuset's cpus_allowed mask can be empty indicating\nthat the cpuset will just use the effective CPUs of its parent. So\ncpuset_can_attach() can call task_can_attach() with an empty mask.\nThis can lead to cpumask_any_and() returns nr_cpu_ids causing the call\nto dl_bw_of() to crash due to percpu value access of an out of bound\nCPU value. For example:\n\n\t[80468.182258] BUG: unable to handle page fault for address: ffffffff8b6648b0\n\t  :\n\t[80468.191019] RIP: 0010:dl_cpu_busy+0x30/0x2b0\n\t  :\n\t[80468.207946] Call Trace:\n\t[80468.208947]  cpuset_can_attach+0xa0/0x140\n\t[80468.209953]  cgroup_migrate_execute+0x8c/0x490\n\t[80468.210931]  cgroup_update_dfl_csses+0x254/0x270\n\t[80468.211898]  cgroup_subtree_control_write+0x322/0x400\n\t[80468.212854]  kernfs_fop_write_iter+0x11c/0x1b0\n\t[80468.213777]  new_sync_write+0x11f/0x1b0\n\t[80468.214689]  vfs_write+0x1eb/0x280\n\t[80468.215592]  ksys_write+0x5f/0xe0\n\t[80468.216463]  do_syscall_64+0x5c/0x80\n\t[80468.224287]  entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nFix that by using effective_cpus instead. For cgroup v1, effective_cpus\nis the same as cpus_allowed. For v2, effective_cpus is the real cpumask\nto be used by tasks within the cpuset anyway.\n\nAlso update task_can_attach()'s 2nd argument name to cs_effective_cpus to\nreflect the change. In addition, a check is added to task_can_attach()\nto guard against the possibility that cpumask_any_and() may return a\nvalue \u003e= nr_cpu_ids.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/xive: Fix refcount leak in xive_get_max_prio\n\nof_find_node_by_path() returns a node pointer with\nrefcount incremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50108",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: max77620: Fix refcount leak in max77620_initialise_fps\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50109",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: amba-clcd: Fix refcount leak bugs\n\nIn clcdfb_of_init_display(), we should call of_node_put() for the\nreferences returned by of_graph_get_next_endpoint() and\nof_graph_get_remote_port_parent() which have increased the refcount.\n\nBesides, we should call of_node_put() both in fail path or when\nthe references are not used anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50110",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: sp5100_tco: Fix a memory leak of EFCH MMIO resource\n\nUnlike release_mem_region(), a call to release_resource() does not\nfree the resource, so it has to be freed explicitly to avoid a memory\nleak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50111",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mt6359: Fix refcount leak bug\n\nIn mt6359_parse_dt() and mt6359_accdet_parse_dt(), we should call\nof_node_put() for the reference returned by of_get_child_by_name()\nwhich has increased the refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50112",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrpmsg: qcom_smd: Fix refcount leak in qcom_smd_parse_edge\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50116",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix deadlock and link starvation in outgoing data path\n\nThe current implementation queues up new control and user packets as needed\nand processes this queue down to the ldisc in the same code path.\nThat means that the upper and the lower layer are hard coupled in the code.\nDue to this deadlocks can happen as seen below while transmitting data,\nespecially during ldisc congestion. Furthermore, the data channels starve\nthe control channel on high transmission load on the ldisc.\n\nIntroduce an additional control channel data queue to prevent timeouts and\nlink hangups during ldisc congestion. This is being processed before the\nuser channel data queue in gsm_data_kick(), i.e. with the highest priority.\nPut the queue to ldisc data path into a workqueue and trigger it whenever\nnew data has been put into the transmission queue. Change\ngsm_dlci_data_sweep() accordingly to fill up the transmission queue until\nTX_THRESH_HI. This solves the locking issue, keeps latency low and provides\ngood performance on high data load.\nNote that now all packets from a DLCI are removed from the internal queue\nif the associated DLCI was closed. This ensures that no data is sent by the\nintroduced write task to an already closed DLCI.\n\nBUG: spinlock recursion on CPU#0, test_v24_loop/124\n lock: serial8250_ports+0x3a8/0x7500, .magic: dead4ead, .owner: test_v24_loop/124, .owner_cpu: 0\nCPU: 0 PID: 124 Comm: test_v24_loop Tainted: G           O      5.18.0-rc2 #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\nCall Trace:\n \u003cIRQ\u003e\n dump_stack_lvl+0x34/0x44\n do_raw_spin_lock+0x76/0xa0\n _raw_spin_lock_irqsave+0x72/0x80\n uart_write_room+0x3b/0xc0\n gsm_data_kick+0x14b/0x240 [n_gsm]\n gsmld_write_wakeup+0x35/0x70 [n_gsm]\n tty_wakeup+0x53/0x60\n tty_port_default_wakeup+0x1b/0x30\n serial8250_tx_chars+0x12f/0x220\n serial8250_handle_irq.part.0+0xfe/0x150\n serial8250_default_handle_irq+0x48/0x80\n serial8250_interrupt+0x56/0xa0\n __handle_irq_event_percpu+0x78/0x1f0\n handle_irq_event+0x34/0x70\n handle_fasteoi_irq+0x90/0x1e0\n __common_interrupt+0x69/0x100\n common_interrupt+0x48/0xc0\n asm_common_interrupt+0x1e/0x40\nRIP: 0010:__do_softirq+0x83/0x34e\nCode: 2a 0a ff 0f b7 ed c7 44 24 10 0a 00 00 00 48 c7 c7 51 2a 64 82 e8 2d\ne2 d5 ff 65 66 c7 05 83 af 1e 7e 00 00 fb b8 ff ff ff ff \u003c49\u003e c7 c2 40 61\n80 82 0f bc c5 41 89 c4 41 83 c4 01 0f 84 e6 00 00\nRSP: 0018:ffffc90000003f98 EFLAGS: 00000286\nRAX: 00000000ffffffff RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffffff82642a51 RDI: ffffffff825bb5e7\nRBP: 0000000000000200 R08: 00000008de3271a8 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: 0000000000000030 R14: 0000000000000000 R15: 0000000000000000\n ? __do_softirq+0x73/0x34e\n irq_exit_rcu+0xb5/0x100\n common_interrupt+0xa4/0xc0\n \u003c/IRQ\u003e\n \u003cTASK\u003e\n asm_common_interrupt+0x1e/0x40\nRIP: 0010:_raw_spin_unlock_irqrestore+0x2e/0x50\nCode: 00 55 48 89 fd 48 83 c7 18 53 48 89 f3 48 8b 74 24 10 e8 85 28 36 ff\n48 89 ef e8 cd 58 36 ff 80 e7 02 74 01 fb bf 01 00 00 00 \u003ce8\u003e 3d 97 33 ff\n65 8b 05 96 23 2b 7e 85 c0 74 03 5b 5d c3 0f 1f 44\nRSP: 0018:ffffc9000020fd08 EFLAGS: 00000202\nRAX: 0000000000000000 RBX: 0000000000000246 RCX: 0000000000000000\nRDX: 0000000000000004 RSI: ffffffff8257fd74 RDI: 0000000000000001\nRBP: ffff8880057de3a0 R08: 00000008de233000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: 0000000000000100 R14: 0000000000000202 R15: ffff8880057df0b8\n ? _raw_spin_unlock_irqrestore+0x23/0x50\n gsmtty_write+0x65/0x80 [n_gsm]\n n_tty_write+0x33f/0x530\n ? swake_up_all+0xe0/0xe0\n file_tty_write.constprop.0+0x1b1/0x320\n ? n_tty_flush_buffer+0xb0/0xb0\n new_sync_write+0x10c/0x190\n vfs_write+0x282/0x310\n ksys_write+0x68/0xe0\n do_syscall_64+0x3b/0x90\n entry_SYSCALL_64_after_hwframe+0x44/0xae\nRIP: 0033:0x7f3e5e35c15c\nCode: 8b 7c 24 08 89 c5 e8 c5 ff ff ff 89 ef 89 44 24\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50118",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/perf: Optimize clearing the pending PMI and remove WARN_ON for PMI check in power_pmu_disable\n\ncommit 2c9ac51b850d (\"powerpc/perf: Fix PMU callbacks to clear\npending PMI before resetting an overflown PMC\") added a new\nfunction \"pmi_irq_pending\" in hw_irq.h. This function is to check\nif there is a PMI marked as pending in Paca (PACA_IRQ_PMI).This is\nused in power_pmu_disable in a WARN_ON. The intention here is to\nprovide a warning if there is PMI pending, but no counter is found\noverflown.\n\nDuring some of the perf runs, below warning is hit:\n\nWARNING: CPU: 36 PID: 0 at arch/powerpc/perf/core-book3s.c:1332 power_pmu_disable+0x25c/0x2c0\n Modules linked in:\n -----\n\n NIP [c000000000141c3c] power_pmu_disable+0x25c/0x2c0\n LR [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0\n Call Trace:\n [c000000baffcfb90] [c000000000141c8c] power_pmu_disable+0x2ac/0x2c0 (unreliable)\n [c000000baffcfc10] [c0000000003e2f8c] perf_pmu_disable+0x4c/0x60\n [c000000baffcfc30] [c0000000003e3344] group_sched_out.part.124+0x44/0x100\n [c000000baffcfc80] [c0000000003e353c] __perf_event_disable+0x13c/0x240\n [c000000baffcfcd0] [c0000000003dd334] event_function+0xc4/0x140\n [c000000baffcfd20] [c0000000003d855c] remote_function+0x7c/0xa0\n [c000000baffcfd50] [c00000000026c394] flush_smp_call_function_queue+0xd4/0x300\n [c000000baffcfde0] [c000000000065b24] smp_ipi_demux_relaxed+0xa4/0x100\n [c000000baffcfe20] [c0000000000cb2b0] xive_muxed_ipi_action+0x20/0x40\n [c000000baffcfe40] [c000000000207c3c] __handle_irq_event_percpu+0x8c/0x250\n [c000000baffcfee0] [c000000000207e2c] handle_irq_event_percpu+0x2c/0xa0\n [c000000baffcff10] [c000000000210a04] handle_percpu_irq+0x84/0xc0\n [c000000baffcff40] [c000000000205f14] generic_handle_irq+0x54/0x80\n [c000000baffcff60] [c000000000015740] __do_irq+0x90/0x1d0\n [c000000baffcff90] [c000000000016990] __do_IRQ+0xc0/0x140\n [c0000009732f3940] [c000000bafceaca8] 0xc000000bafceaca8\n [c0000009732f39d0] [c000000000016b78] do_IRQ+0x168/0x1c0\n [c0000009732f3a00] [c0000000000090c8] hardware_interrupt_common_virt+0x218/0x220\n\nThis means that there is no PMC overflown among the active events\nin the PMU, but there is a PMU pending in Paca. The function\n\"any_pmc_overflown\" checks the PMCs on active events in\ncpuhw-\u003en_events. Code snippet:\n\n\u003c\u003c\u003e\u003e\nif (any_pmc_overflown(cpuhw))\n \tclear_pmi_irq_pending();\n else\n \tWARN_ON(pmi_irq_pending());\n\u003c\u003c\u003e\u003e\n\nHere the PMC overflown is not from active event. Example: When we do\nperf record, default cycles and instructions will be running on PMC6\nand PMC5 respectively. It could happen that overflowed event is currently\nnot active and pending PMI is for the inactive event. Debug logs from\ntrace_printk:\n\n\u003c\u003c\u003e\u003e\nany_pmc_overflown: idx is 5: pmc value is 0xd9a\npower_pmu_disable: PMC1: 0x0, PMC2: 0x0, PMC3: 0x0, PMC4: 0x0, PMC5: 0xd9a, PMC6: 0x80002011\n\u003c\u003c\u003e\u003e\n\nHere active PMC (from idx) is PMC5 , but overflown PMC is PMC6(0x80002011).\nWhen we handle PMI interrupt for such cases, if the PMC overflown is\nfrom inactive event, it will be ignored. Reference commit:\ncommit bc09c219b2e6 (\"powerpc/perf: Fix finding overflowed PMC in interrupt\")\n\nPatch addresses two changes:\n1) Fix 1 : Removal of warning ( WARN_ON(pmi_irq_pending()); )\n   We were printing warning if no PMC is found overflown among active PMU\n   events, but PMI pending in PACA. But this could happen in cases where\n   PMC overflown is not in active PMC. An inactive event could have caused\n   the overflow. Hence the warning is not needed. To know pending PMI is\n   from an inactive event, we need to loop through all PMC's which will\n   cause more SPR reads via mfspr and increase in context switch. Also in\n   existing function: perf_event_interrupt, already we ignore PMI's\n   overflown when it is from an inactive PMC.\n\n2) Fix 2: optimization in clearing pending PMI.\n   Currently we check for any active PMC overflown before clearing PMI\n   pending in Paca. This is causing additional SP\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50120",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: imx_rproc: Fix refcount leak in imx_rproc_addr_init\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not needed anymore.\nThis function has two paths missing of_node_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50121",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: k3-r5: Fix refcount leak in k3_r5_cluster_of_init\n\nEvery iteration of for_each_available_child_of_node() decrements\nthe reference count of the previous node.\nWhen breaking early from a for_each_available_child_of_node() loop,\nwe need to explicitly call of_node_put() on the child node.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50124",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mt6797-mt6351: Fix refcount leak in mt6797_mt6351_dev_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50125",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: cros_ec_codec: Fix refcount leak in cros_ec_codec_platform_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50126",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njbd2: fix assertion 'jh-\u003eb_frozen_data == NULL' failure when journal aborted\n\nFollowing process will fail assertion 'jh-\u003eb_frozen_data == NULL' in\njbd2_journal_dirty_metadata():\n\n                   jbd2_journal_commit_transaction\nunlink(dir/a)\n jh-\u003eb_transaction = trans1\n jh-\u003eb_jlist = BJ_Metadata\n                    journal-\u003ej_running_transaction = NULL\n                    trans1-\u003et_state = T_COMMIT\nunlink(dir/b)\n handle-\u003eh_trans = trans2\n do_get_write_access\n  jh-\u003eb_modified = 0\n  jh-\u003eb_frozen_data = frozen_buffer\n  jh-\u003eb_next_transaction = trans2\n jbd2_journal_dirty_metadata\n  is_handle_aborted\n   is_journal_aborted // return false\n\n           --\u003e jbd2 abort \u003c--\n\n                     while (commit_transaction-\u003et_buffers)\n                      if (is_journal_aborted)\n                       jbd2_journal_refile_buffer\n                        __jbd2_journal_refile_buffer\n                         WRITE_ONCE(jh-\u003eb_transaction,\n\t\t\t\t\t\tjh-\u003eb_next_transaction)\n                         WRITE_ONCE(jh-\u003eb_next_transaction, NULL)\n                         __jbd2_journal_file_buffer(jh, BJ_Reserved)\n        J_ASSERT_JH(jh, jh-\u003eb_frozen_data == NULL) // assertion failure !\n\nThe reproducer (See detail in [Link]) reports:\n ------------[ cut here ]------------\n kernel BUG at fs/jbd2/transaction.c:1629!\n invalid opcode: 0000 [#1] PREEMPT SMP\n CPU: 2 PID: 584 Comm: unlink Tainted: G        W\n 5.19.0-rc6-00115-g4a57a8400075-dirty #697\n RIP: 0010:jbd2_journal_dirty_metadata+0x3c5/0x470\n RSP: 0018:ffffc90000be7ce0 EFLAGS: 00010202\n Call Trace:\n  \u003cTASK\u003e\n  __ext4_handle_dirty_metadata+0xa0/0x290\n  ext4_handle_dirty_dirblock+0x10c/0x1d0\n  ext4_delete_entry+0x104/0x200\n  __ext4_unlink+0x22b/0x360\n  ext4_unlink+0x275/0x390\n  vfs_unlink+0x20b/0x4c0\n  do_unlinkat+0x42f/0x4c0\n  __x64_sys_unlink+0x37/0x50\n  do_syscall_64+0x35/0x80\n\nAfter journal aborting, __jbd2_journal_refile_buffer() is executed with\nholding @jh-\u003eb_state_lock, we can fix it by moving 'is_handle_aborted()'\ninto the area protected by @jh-\u003eb_state_lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50127",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Fix error unwind in rxe_create_qp()\n\nIn the function rxe_create_qp(), rxe_qp_from_init() is called to\ninitialize qp, internally things like the spin locks are not setup until\nrxe_qp_init_req().\n\nIf an error occures before this point then the unwind will call\nrxe_cleanup() and eventually to rxe_qp_do_cleanup()/rxe_cleanup_task()\nwhich will oops when trying to access the uninitialized spinlock.\n\nMove the spinlock initializations earlier before any failures.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50129",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/srpt: Fix a use-after-free\n\nChange the LIO port members inside struct srpt_port from regular members\ninto pointers. Allocate the LIO port data structures from inside\nsrpt_make_tport() and free these from inside srpt_make_tport(). Keep\nstruct srpt_device as long as either an RDMA port or a LIO target port is\nassociated with it. This patch decouples the lifetime of struct srpt_port\n(controlled by the RDMA core) and struct srpt_port_id (controlled by LIO).\nThis patch fixes the following KASAN complaint:\n\n  BUG: KASAN: use-after-free in srpt_enable_tpg+0x31/0x70 [ib_srpt]\n  Read of size 8 at addr ffff888141cc34b8 by task check/5093\n\n  Call Trace:\n   \u003cTASK\u003e\n   show_stack+0x4e/0x53\n   dump_stack_lvl+0x51/0x66\n   print_address_description.constprop.0.cold+0xea/0x41e\n   print_report.cold+0x90/0x205\n   kasan_report+0xb9/0xf0\n   __asan_load8+0x69/0x90\n   srpt_enable_tpg+0x31/0x70 [ib_srpt]\n   target_fabric_tpg_base_enable_store+0xe2/0x140 [target_core_mod]\n   configfs_write_iter+0x18b/0x210\n   new_sync_write+0x1f2/0x2f0\n   vfs_write+0x3e3/0x540\n   ksys_write+0xbb/0x140\n   __x64_sys_write+0x42/0x50\n   do_syscall_64+0x34/0x80\n   entry_SYSCALL_64_after_hwframe+0x46/0xb0\n   \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50131",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: mcp2221: prevent a buffer overflow in mcp_smbus_write()\n\nSmatch Warning:\ndrivers/hid/hid-mcp2221.c:388 mcp_smbus_write() error: __memcpy()\n'\u0026mcp-\u003etxbuf[5]' too small (59 vs 255)\ndrivers/hid/hid-mcp2221.c:388 mcp_smbus_write() error: __memcpy() 'buf'\ntoo small (34 vs 255)\n\nThe 'len' variable can take a value between 0-255 as it can come from\ndata-\u003eblock[0] and it is user data. So add an bound check to prevent a\nbuffer overflow in memcpy().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50132",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: cdns3: change place of 'priv_ep' assignment in cdns3_gadget_ep_dequeue(), cdns3_gadget_ep_enable()\n\nIf 'ep' is NULL, result of ep_to_cdns3_ep(ep) is invalid pointer\nand its dereference with priv_ep-\u003ecdns3_dev may cause panic.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50134",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/hfi1: fix potential memory leak in setup_base_ctxt()\n\nsetup_base_ctxt() allocates a memory chunk for uctxt-\u003egroups with\nhfi1_alloc_ctxt_rcv_groups(). When init_user_ctxt() fails, uctxt-\u003egroups\nis not released, which will lead to a memory leak.\n\nWe should release the uctxt-\u003egroups with hfi1_free_ctxt_rcv_groups()\nwhen init_user_ctxt() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50136",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix duplicated reported IW_CM_EVENT_CONNECT_REPLY event\n\nIf siw_recv_mpa_rr returns -EAGAIN, it means that the MPA reply hasn't\nbeen received completely, and should not report IW_CM_EVENT_CONNECT_REPLY\nin this case. This may trigger a call trace in iw_cm. A simple way to\ntrigger this:\n server: ib_send_lat\n client: ib_send_lat -R \u003cserver_ip\u003e\n\nThe call trace looks like this:\n\n kernel BUG at drivers/infiniband/core/iwcm.c:894!\n invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n \u003c...\u003e\n Workqueue: iw_cm_wq cm_work_handler [iw_cm]\n Call Trace:\n  \u003cTASK\u003e\n  cm_work_handler+0x1dd/0x370 [iw_cm]\n  process_one_work+0x1e2/0x3b0\n  worker_thread+0x49/0x2e0\n  ? rescuer_thread+0x370/0x370\n  kthread+0xe5/0x110\n  ? kthread_complete_and_exit+0x20/0x20\n  ret_from_fork+0x1f/0x30\n  \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50137",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/irdma: Fix a window for use-after-free\n\nDuring a destroy CQ an interrupt may cause processing of a CQE after CQ\nresources are freed by irdma_cq_free_rsrc(). Fix this by moving the call\nto irdma_cq_free_rsrc() after the irdma_sc_cleanup_ceqes(), which is\ncalled under the cq_lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/qedr: Fix potential memory leak in __qedr_alloc_mr()\n\n__qedr_alloc_mr() allocates a memory chunk for \"mr-\u003einfo.pbl_table\" with\ninit_mr_info(). When rdma_alloc_tid() and rdma_register_tid() fail, \"mr\"\nis released while \"mr-\u003einfo.pbl_table\" is not released, which will lead\nto a memory leak.\n\nWe should release the \"mr-\u003einfo.pbl_table\" with qedr_free_pbl() when error\noccurs to fix the memory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50139",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: aspeed-vhub: Fix refcount leak bug in ast_vhub_init_desc()\n\nWe should call of_node_put() for the reference returned by\nof_get_child_by_name() which has increased the refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50140",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemstick/ms_block: Fix a memory leak\n\n'erased_blocks_bitmap' is never freed. As it is allocated at the same time\nas 'used_blocks_bitmap', it is likely that it should be freed also at the\nsame time.\n\nAdd the corresponding bitmap_free() in msb_data_clear().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdhci-of-esdhc: Fix refcount leak in esdhc_signal_voltage_switch\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\nof_node_put() checks null pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nintel_th: msu: Fix vmalloced buffers\n\nAfter commit f5ff79fddf0e (\"dma-mapping: remove CONFIG_DMA_REMAP\") there's\na chance of DMA buffer getting allocated via vmalloc(), which messes up\nthe mmapping code:\n\n\u003e RIP: msc_mmap_fault [intel_th_msu]\n\u003e Call Trace:\n\u003e  \u003cTASK\u003e\n\u003e  __do_fault\n\u003e  do_fault\n...\n\nFix this by accounting for vmalloc possibility.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50143",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nintel_th: Fix a resource leak in an error handling path\n\nIf an error occurs after calling 'pci_alloc_irq_vectors()',\n'pci_free_irq_vectors()' must be called as already done in the remove\nfunction.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: sf-pdma: Add multithread support for a DMA channel\n\nWhen we get a DMA channel and try to use it in multiple threads it\nwill cause oops and hanging the system.\n\n% echo 64 \u003e /sys/module/dmatest/parameters/threads_per_chan\n% echo 10000 \u003e /sys/module/dmatest/parameters/iterations\n% echo 1 \u003e /sys/module/dmatest/parameters/run\n[   89.480664] Unable to handle kernel NULL pointer dereference at virtual\n               address 00000000000000a0\n[   89.488725] Oops [#1]\n[   89.494708] CPU: 2 PID: 1008 Comm: dma0chan0-copy0 Not tainted\n               5.17.0-rc5\n[   89.509385] epc : vchan_find_desc+0x32/0x46\n[   89.513553]  ra : sf_pdma_tx_status+0xca/0xd6\n\nThis happens because of data race. Each thread rewrite channels's\ndescriptor as soon as device_prep_dma_memcpy() is called. It leads to the\nsituation when the driver thinks that it uses right descriptor that\nactually is freed or substituted for other one.\n\nWith current fixes a descriptor changes its value only when it has\nbeen used. A new descriptor is acquired from vc-\u003edesc_issued queue that\nis already filled with descriptors that are ready to be sent. Threads\nhave no direct access to DMA channel descriptor. Now it is just possible\nto queue a descriptor for further processing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50146",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: dwc: Deallocate EPC memory on dw_pcie_ep_init() errors\n\nIf dw_pcie_ep_init() fails to perform any action after the EPC memory is\ninitialized and the MSI memory region is allocated, the latter parts won't\nbe undone thus causing a memory leak.  Add a cleanup-on-error path to fix\nthese leaks.\n\n[bhelgaas: commit log]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50149",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: fix potential deadlock in __driver_attach\n\nIn __driver_attach function, There are also AA deadlock problem,\nlike the commit b232b02bf3c2 (\"driver core: fix deadlock in\n__device_attach\").\n\nstack like commit b232b02bf3c2 (\"driver core: fix deadlock in\n__device_attach\").\nlist below:\n    In __driver_attach function, The lock holding logic is as follows:\n    ...\n    __driver_attach\n    if (driver_allows_async_probing(drv))\n      device_lock(dev)      // get lock dev\n        async_schedule_dev(__driver_attach_async_helper, dev); // func\n          async_schedule_node\n            async_schedule_node_domain(func)\n              entry = kzalloc(sizeof(struct async_entry), GFP_ATOMIC);\n              /* when fail or work limit, sync to execute func, but\n                 __driver_attach_async_helper will get lock dev as\n                 will, which will lead to A-A deadlock.  */\n              if (!entry || atomic_read(\u0026entry_count) \u003e MAX_WORK) {\n                func;\n              else\n                queue_work_node(node, system_unbound_wq, \u0026entry-\u003ework)\n      device_unlock(dev)\n\n    As above show, when it is allowed to do async probes, because of\n    out of memory or work limit, async work is not be allowed, to do\n    sync execute instead. it will lead to A-A deadlock because of\n    __driver_attach_async_helper getting lock dev.\n\nReproduce:\nand it can be reproduce by make the condition\n(if (!entry || atomic_read(\u0026entry_count) \u003e MAX_WORK)) untenable, like\nbelow:\n\n[  370.785650] \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables\nthis message.\n[  370.787154] task:swapper/0       state:D stack:    0 pid:    1 ppid:\n0 flags:0x00004000\n[  370.788865] Call Trace:\n[  370.789374]  \u003cTASK\u003e\n[  370.789841]  __schedule+0x482/0x1050\n[  370.790613]  schedule+0x92/0x1a0\n[  370.791290]  schedule_preempt_disabled+0x2c/0x50\n[  370.792256]  __mutex_lock.isra.0+0x757/0xec0\n[  370.793158]  __mutex_lock_slowpath+0x1f/0x30\n[  370.794079]  mutex_lock+0x50/0x60\n[  370.794795]  __device_driver_lock+0x2f/0x70\n[  370.795677]  ? driver_probe_device+0xd0/0xd0\n[  370.796576]  __driver_attach_async_helper+0x1d/0xd0\n[  370.797318]  ? driver_probe_device+0xd0/0xd0\n[  370.797957]  async_schedule_node_domain+0xa5/0xc0\n[  370.798652]  async_schedule_node+0x19/0x30\n[  370.799243]  __driver_attach+0x246/0x290\n[  370.799828]  ? driver_allows_async_probing+0xa0/0xa0\n[  370.800548]  bus_for_each_dev+0x9d/0x130\n[  370.801132]  driver_attach+0x22/0x30\n[  370.801666]  bus_add_driver+0x290/0x340\n[  370.802246]  driver_register+0x88/0x140\n[  370.802817]  ? virtio_scsi_init+0x116/0x116\n[  370.803425]  scsi_register_driver+0x1a/0x30\n[  370.804057]  init_sd+0x184/0x226\n[  370.804533]  do_one_initcall+0x71/0x3a0\n[  370.805107]  kernel_init_freeable+0x39a/0x43a\n[  370.805759]  ? rest_init+0x150/0x150\n[  370.806283]  kernel_init+0x26/0x230\n[  370.806799]  ret_from_fork+0x1f/0x30\n\nTo fix the deadlock, move the async_schedule_dev outside device_lock,\nas we can see, in async_schedule_node_domain, the parameter of\nqueue_work_node is system_unbound_wq, so it can accept concurrent\noperations. which will also not change the code logic, and will\nnot lead to deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50151",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: cdns3: fix random warning message when driver load\n\nWarning log:\n[    4.141392] Unexpected gfp: 0x4 (GFP_DMA32). Fixing up to gfp: 0xa20 (GFP_ATOMIC). Fix your code!\n[    4.150340] CPU: 1 PID: 175 Comm: 1-0050 Not tainted 5.15.5-00039-g2fd9ae1b568c #20\n[    4.158010] Hardware name: Freescale i.MX8QXP MEK (DT)\n[    4.163155] Call trace:\n[    4.165600]  dump_backtrace+0x0/0x1b0\n[    4.169286]  show_stack+0x18/0x68\n[    4.172611]  dump_stack_lvl+0x68/0x84\n[    4.176286]  dump_stack+0x18/0x34\n[    4.179613]  kmalloc_fix_flags+0x60/0x88\n[    4.183550]  new_slab+0x334/0x370\n[    4.186878]  ___slab_alloc.part.108+0x4d4/0x748\n[    4.191419]  __slab_alloc.isra.109+0x30/0x78\n[    4.195702]  kmem_cache_alloc+0x40c/0x420\n[    4.199725]  dma_pool_alloc+0xac/0x1f8\n[    4.203486]  cdns3_allocate_trb_pool+0xb4/0xd0\n\npool_alloc_page(struct dma_pool *pool, gfp_t mem_flags)\n{\n\t...\n\tpage = kmalloc(sizeof(*page), mem_flags);\n\tpage-\u003evaddr = dma_alloc_coherent(pool-\u003edev, pool-\u003eallocation,\n\t\t\t\t\t \u0026page-\u003edma, mem_flags);\n\t...\n}\n\nkmalloc was called with mem_flags, which is passed down in\ncdns3_allocate_trb_pool() and have GFP_DMA32 flags.\nkmall_fix_flags() report warning.\n\nGFP_DMA32 is not useful at all. dma_alloc_coherent() will handle\nDMA memory region correctly by pool-\u003edev. GFP_DMA32 can be removed\nsafely.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50152",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: ohci-nxp: Fix refcount leak in ohci_hcd_nxp_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50153",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: host: Fix refcount leak in ehci_hcd_ppc_of_probe\n\nof_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50154",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: mediatek-gen3: Fix refcount leak in mtk_pcie_init_irq_domains()\n\nof_get_child_by_name() returns a node pointer with refcount incremented, so\nwe should use of_node_put() on it when we don't need it anymore.\n\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50155",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: parsers: ofpart: Fix refcount leak in bcm4908_partitions_fw_offset\n\nof_find_node_by_path() returns a node pointer with refcount incremented,\nwe should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50156",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: cp2112: prevent a buffer overflow in cp2112_xfer()\n\nSmatch warnings:\ndrivers/hid/hid-cp2112.c:793 cp2112_xfer() error: __memcpy()\n'data-\u003eblock[1]' too small (33 vs 255)\ndrivers/hid/hid-cp2112.c:793 cp2112_xfer() error: __memcpy() 'buf' too\nsmall (64 vs 255)\n\nThe 'read_length' variable is provided by 'data-\u003eblock[0]' which comes\nfrom user and it(read_length) can take a value between 0-255. Add an\nupper bound to 'read_length' variable to prevent a buffer overflow in\nmemcpy().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50157",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: microchip: Fix refcount leak in mc_pcie_init_irq_domains()\n\nof_get_next_child() returns a node pointer with refcount incremented, so we\nshould use of_node_put() on it when we don't need it anymore.\n\nmc_pcie_init_irq_domains() only calls of_node_put() in the normal path,\nmissing it in some error paths.  Add missing of_node_put() to avoid\nrefcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50158",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: partitions: Fix refcount leak in parse_redboot_of\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50160",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: maps: Fix refcount leak in ap_flash_init\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50161",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: maps: Fix refcount leak in of_flash_probe_versatile\n\nof_find_matching_node_and_match() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: libertas: Fix possible refcount leak in if_usb_probe()\n\nusb_get_dev will be called before lbs_get_firmware_async which means that\nusb_put_dev need to be called when lbs_get_firmware_async fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50164",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: fix double list_add at iwl_mvm_mac_wake_tx_queue\n\nAfter successfull station association, if station queues are disabled for\nsome reason, the related lists are not emptied. So if some new element is\nadded to the list in iwl_mvm_mac_wake_tx_queue, it can match with the old\none and produce a BUG like this:\n\n[   46.535263] list_add corruption. prev-\u003enext should be next (ffff94c1c318a360), but was 0000000000000000. (prev=ffff94c1d02d3388).\n[   46.535283] ------------[ cut here ]------------\n[   46.535284] kernel BUG at lib/list_debug.c:26!\n[   46.535290] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[   46.585304] CPU: 0 PID: 623 Comm: wpa_supplicant Not tainted 5.19.0-rc3+ #1\n[   46.592380] Hardware name: Dell Inc. Inspiron 660s/0478VN       , BIOS A07 08/24/2012\n[   46.600336] RIP: 0010:__list_add_valid.cold+0x3d/0x3f\n[   46.605475] Code: f2 4c 89 c1 48 89 fe 48 c7 c7 c8 40 67 93 e8 20 cc fd ff 0f 0b 48 89 d1 4c 89 c6 4c 89 ca 48 c7 c7 70 40 67 93 e8 09 cc fd ff \u003c0f\u003e 0b 48 89 fe 48 c7 c7 00 41 67 93 e8 f8 cb fd ff 0f 0b 48 89 d1\n[   46.624469] RSP: 0018:ffffb20800ab76d8 EFLAGS: 00010286\n[   46.629854] RAX: 0000000000000075 RBX: ffff94c1c318a0e0 RCX: 0000000000000000\n[   46.637105] RDX: 0000000000000201 RSI: ffffffff9365e100 RDI: 00000000ffffffff\n[   46.644356] RBP: ffff94c1c5f43370 R08: 0000000000000075 R09: 3064316334396666\n[   46.651607] R10: 3364323064316334 R11: 39666666663d7665 R12: ffff94c1c5f43388\n[   46.658857] R13: ffff94c1d02d3388 R14: ffff94c1c318a360 R15: ffff94c1cf2289c0\n[   46.666108] FS:  00007f65634ff7c0(0000) GS:ffff94c1da200000(0000) knlGS:0000000000000000\n[   46.674331] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   46.680170] CR2: 00007f7dfe984460 CR3: 000000010e894003 CR4: 00000000000606f0\n[   46.687422] Call Trace:\n[   46.689906]  \u003cTASK\u003e\n[   46.691950]  iwl_mvm_mac_wake_tx_queue+0xec/0x15c [iwlmvm]\n[   46.697601]  ieee80211_queue_skb+0x4b3/0x720 [mac80211]\n[   46.702973]  ? sta_info_get+0x46/0x60 [mac80211]\n[   46.707703]  ieee80211_tx+0xad/0x110 [mac80211]\n[   46.712355]  __ieee80211_tx_skb_tid_band+0x71/0x90 [mac80211]\n...\n\nIn order to avoid this problem, we must also remove the related lists when\nstation queues are disabled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50165",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wil6210: debugfs: fix uninitialized variable use in `wil_write_file_wmi()`\n\nCommit 7a4836560a61 changes simple_write_to_buffer() with memdup_user()\nbut it forgets to change the value to be returned that came from\nsimple_write_to_buffer() call. It results in the following warning:\n\n  warning: variable 'rc' is uninitialized when used here [-Wuninitialized]\n           return rc;\n                  ^~\n\nRemove rc variable and just return the passed in length if the\nmemdup_user() succeeds.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50169",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wil6210: debugfs: fix info leak in wil_write_file_wmi()\n\nThe simple_write_to_buffer() function will succeed if even a single\nbyte is initialized.  However, we need to initialize the whole buffer\nto prevent information leaks.  Just use memdup_user().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50171",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: hisilicon/sec - don't sleep when in softirq\n\nWhen kunpeng920 encryption driver is used to deencrypt and decrypt\npackets during the softirq, it is not allowed to use mutex lock. The\nkernel will report the following error:\n\nBUG: scheduling while atomic: swapper/57/0/0x00000300\nCall trace:\ndump_backtrace+0x0/0x1e4\nshow_stack+0x20/0x2c\ndump_stack+0xd8/0x140\n__schedule_bug+0x68/0x80\n__schedule+0x728/0x840\nschedule+0x50/0xe0\nschedule_preempt_disabled+0x18/0x24\n__mutex_lock.constprop.0+0x594/0x5dc\n__mutex_lock_slowpath+0x1c/0x30\nmutex_lock+0x50/0x60\nsec_request_init+0x8c/0x1a0 [hisi_sec2]\nsec_process+0x28/0x1ac [hisi_sec2]\nsec_skcipher_crypto+0xf4/0x1d4 [hisi_sec2]\nsec_skcipher_encrypt+0x1c/0x30 [hisi_sec2]\ncrypto_skcipher_encrypt+0x2c/0x40\ncrypto_authenc_encrypt+0xc8/0xfc [authenc]\ncrypto_aead_encrypt+0x2c/0x40\nechainiv_encrypt+0x144/0x1a0 [echainiv]\ncrypto_aead_encrypt+0x2c/0x40\nesp_output_tail+0x348/0x5c0 [esp4]\nesp_output+0x120/0x19c [esp4]\nxfrm_output_one+0x25c/0x4d4\nxfrm_output_resume+0x6c/0x1fc\nxfrm_output+0xac/0x3c0\nxfrm4_output+0x64/0x130\nip_build_and_send_pkt+0x158/0x20c\ntcp_v4_send_synack+0xdc/0x1f0\ntcp_conn_request+0x7d0/0x994\ntcp_v4_conn_request+0x58/0x6c\ntcp_v6_conn_request+0xf0/0x100\ntcp_rcv_state_process+0x1cc/0xd60\ntcp_v4_do_rcv+0x10c/0x250\ntcp_v4_rcv+0xfc4/0x10a4\nip_protocol_deliver_rcu+0xf4/0x200\nip_local_deliver_finish+0x58/0x70\nip_local_deliver+0x68/0x120\nip_sublist_rcv_finish+0x70/0x94\nip_list_rcv_finish.constprop.0+0x17c/0x1d0\nip_sublist_rcv+0x40/0xb0\nip_list_rcv+0x140/0x1dc\n__netif_receive_skb_list_core+0x154/0x28c\n__netif_receive_skb_list+0x120/0x1a0\nnetif_receive_skb_list_internal+0xe4/0x1f0\nnapi_complete_done+0x70/0x1f0\ngro_cell_poll+0x9c/0xb0\nnapi_poll+0xcc/0x264\nnet_rx_action+0xd4/0x21c\n__do_softirq+0x130/0x358\nirq_exit+0x11c/0x13c\n__handle_domain_irq+0x88/0xf0\ngic_handle_irq+0x78/0x2c0\nel1_irq+0xb8/0x140\narch_cpu_idle+0x18/0x40\ndefault_idle_call+0x5c/0x1c0\ncpuidle_idle_call+0x174/0x1b0\ndo_idle+0xc8/0x160\ncpu_startup_entry+0x30/0x11c\nsecondary_start_kernel+0x158/0x1e4\nsoftirq: huh, entered softirq 3 NET_RX 0000000093774ee4 with\npreempt_count 00000100, exited with fffffe00?",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50172",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: mt76x02u: fix possible memory leak in __mt76x02u_mcu_send_msg\n\nFree the skb if mt76u_bulk_msg fails in __mt76x02u_mcu_send_msg routine.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50173",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/msm/mdp5: Fix global state lock backoff\n\nWe need to grab the lock after the early return for !hwpipe case.\nOtherwise, we could have hit contention yet still returned 0.\n\nFixes an issue that the new CONFIG_DRM_DEBUG_MODESET_LOCK stuff flagged\nin CI:\n\n   WARNING: CPU: 0 PID: 282 at drivers/gpu/drm/drm_modeset_lock.c:296 drm_modeset_lock+0xf8/0x154\n   Modules linked in:\n   CPU: 0 PID: 282 Comm: kms_cursor_lega Tainted: G        W         5.19.0-rc2-15930-g875cc8bc536a #1\n   Hardware name: Qualcomm Technologies, Inc. DB820c (DT)\n   pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n   pc : drm_modeset_lock+0xf8/0x154\n   lr : drm_atomic_get_private_obj_state+0x84/0x170\n   sp : ffff80000cfab6a0\n   x29: ffff80000cfab6a0 x28: 0000000000000000 x27: ffff000083bc4d00\n   x26: 0000000000000038 x25: 0000000000000000 x24: ffff80000957ca58\n   x23: 0000000000000000 x22: ffff000081ace080 x21: 0000000000000001\n   x20: ffff000081acec18 x19: ffff80000cfabb80 x18: 0000000000000038\n   x17: 0000000000000000 x16: 0000000000000000 x15: fffffffffffea0d0\n   x14: 0000000000000000 x13: 284e4f5f4e524157 x12: 5f534b434f4c5f47\n   x11: ffff80000a386aa8 x10: 0000000000000029 x9 : ffff80000cfab610\n   x8 : 0000000000000029 x7 : 0000000000000014 x6 : 0000000000000000\n   x5 : 0000000000000001 x4 : ffff8000081ad904 x3 : 0000000000000029\n   x2 : ffff0000801db4c0 x1 : ffff80000cfabb80 x0 : ffff000081aceb58\n   Call trace:\n    drm_modeset_lock+0xf8/0x154\n    drm_atomic_get_private_obj_state+0x84/0x170\n    mdp5_get_global_state+0x54/0x6c\n    mdp5_pipe_release+0x2c/0xd4\n    mdp5_plane_atomic_check+0x2ec/0x414\n    drm_atomic_helper_check_planes+0xd8/0x210\n    drm_atomic_helper_check+0x54/0xb0\n    ...\n   ---[ end trace 0000000000000000 ]---\n   drm_modeset_lock attempting to lock a contended lock without backoff:\n      drm_modeset_lock+0x148/0x154\n      mdp5_get_global_state+0x30/0x6c\n      mdp5_pipe_release+0x2c/0xd4\n      mdp5_plane_atomic_check+0x290/0x414\n      drm_atomic_helper_check_planes+0xd8/0x210\n      drm_atomic_helper_check+0x54/0xb0\n      drm_atomic_check_only+0x4b0/0x8f4\n      drm_atomic_commit+0x68/0xe0\n\nPatchwork: https://patchwork.freedesktop.org/patch/492701/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50175",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: tw686x: Fix memory leak in tw686x_video_init\n\nvideo_device_alloc() allocates memory for vdev,\nwhen video_register_device() fails, it doesn't release the memory and\nleads to memory leak, call video_device_release() to fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50176",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mcde: Fix refcount leak in mcde_dsi_bind\n\nEvery iteration of for_each_available_child_of_node() decrements\nthe reference counter of the previous node. There is no decrement\nwhen break out from the loop and results in refcount leak.\nAdd missing of_node_put() to fix this.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50178",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: 8852a: rfk: fix div 0 exception\n\nThe DPK is a kind of RF calibration whose algorithm is to fine tune\nparameters and calibrate, and check the result. If the result isn't good\nenough, it could adjust parameters and try again.\n\nThis issue is to read and show the result, but it could be a negative\ncalibration result that causes divisor 0 and core dump. So, fix it by\nphy_div() that does division only if divisor isn't zero; otherwise,\nzero is adopted.\n\n  divide error: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 1 PID: 728 Comm: wpa_supplicant Not tainted 5.10.114-16019-g462a1661811a #1 \u003cHASH:d024 28\u003e\n  RIP: 0010:rtw8852a_dpk+0x14ae/0x288f [rtw89_core]\n  RSP: 0018:ffffa9bb412a7520 EFLAGS: 00010246\n  RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n  RDX: 0000000000000000 RSI: 00000000000180fc RDI: ffffa141d01023c0\n  RBP: ffffa9bb412a76a0 R08: 0000000000001319 R09: 00000000ffffff92\n  R10: ffffffffc0292de3 R11: ffffffffc00d2f51 R12: 0000000000000000\n  R13: ffffa141d01023c0 R14: ffffffffc0290250 R15: ffffa141d0102638\n  FS:  00007fa99f5c2740(0000) GS:ffffa142e5e80000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000013e8e010 CR3: 0000000110d2c000 CR4: 0000000000750ee0\n  PKRU: 55555554\n  Call Trace:\n   rtw89_core_sta_add+0x95/0x9c [rtw89_core \u003cHASH:d239 29\u003e]\n   rtw89_ops_sta_state+0x5d/0x108 [rtw89_core \u003cHASH:d239 29\u003e]\n   drv_sta_state+0x115/0x66f [mac80211 \u003cHASH:81fe 30\u003e]\n   sta_info_insert_rcu+0x45c/0x713 [mac80211 \u003cHASH:81fe 30\u003e]\n   sta_info_insert+0xf/0x1b [mac80211 \u003cHASH:81fe 30\u003e]\n   ieee80211_prep_connection+0x9d6/0xb0c [mac80211 \u003cHASH:81fe 30\u003e]\n   ieee80211_mgd_auth+0x2aa/0x352 [mac80211 \u003cHASH:81fe 30\u003e]\n   cfg80211_mlme_auth+0x160/0x1f6 [cfg80211 \u003cHASH:00cd 31\u003e]\n   nl80211_authenticate+0x2e5/0x306 [cfg80211 \u003cHASH:00cd 31\u003e]\n   genl_rcv_msg+0x371/0x3a1\n   ? nl80211_stop_sched_scan+0xe5/0xe5 [cfg80211 \u003cHASH:00cd 31\u003e]\n   ? genl_rcv+0x36/0x36\n   netlink_rcv_skb+0x8a/0xf9\n   genl_rcv+0x28/0x36\n   netlink_unicast+0x27b/0x3a0\n   netlink_sendmsg+0x2aa/0x469\n   sock_sendmsg_nosec+0x49/0x4d\n   ____sys_sendmsg+0xe5/0x213\n   __sys_sendmsg+0xec/0x157\n   ? syscall_enter_from_user_mode+0xd7/0x116\n   do_syscall_64+0x43/0x55\n   entry_SYSCALL_64_after_hwframe+0x44/0xa9\n  RIP: 0033:0x7fa99f6e689b",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50181",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-gpu: fix a missing check to avoid NULL dereference\n\n'cache_ent' could be set NULL inside virtio_gpu_cmd_get_capset()\nand it will lead to a NULL dereference by a lately use of it\n(i.e., ptr = cache_ent-\u003ecaps_cache). Fix it with a NULL check.\n\n\n[ kraxel: minor codestyle fixup ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50185",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/radeon: fix potential buffer overflow in ni_set_mc_special_registers()\n\nThe last case label can write two buffers 'mc_reg_address[j]' and\n'mc_data[j]' with 'j' offset equal to SMC_NISLANDS_MC_REGISTER_ARRAY_SIZE\nsince there are no checks for this value in both case labels after the\nlast 'j++'.\n\nInstead of changing '\u003e' to '\u003e=' there, add the bounds check at the start\nof the second 'case' (the first one already has it).\n\nAlso, remove redundant last checks for 'j' index bigger than array size.\nThe expression is always false. Moreover, before or after the patch\n'table-\u003elast' can be equal to SMC_NISLANDS_MC_REGISTER_ARRAY_SIZE and it\nseems it can be a valid value.\n\nDetected using the static analysis tool - Svace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50187",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: fix netdev open race\n\nMake sure to allocate resources needed before registering the device.\n\nThis specifically avoids having a racing open() trigger a BUG_ON() in\nmod_timer() when ath11k_mac_op_start() is called before the\nmon_reap_timer as been set up.\n\nI did not see this issue with next-20220310, but I hit it on every probe\nwith next-20220511. Perhaps some timing changed in between.\n\nHere's the backtrace:\n\n[   51.346947] kernel BUG at kernel/time/timer.c:990!\n[   51.346958] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP\n...\n[   51.578225] Call trace:\n[   51.583293]  __mod_timer+0x298/0x390\n[   51.589518]  mod_timer+0x14/0x20\n[   51.595368]  ath11k_mac_op_start+0x41c/0x4a0 [ath11k]\n[   51.603165]  drv_start+0x38/0x60 [mac80211]\n[   51.610110]  ieee80211_do_open+0x29c/0x7d0 [mac80211]\n[   51.617945]  ieee80211_open+0x60/0xb0 [mac80211]\n[   51.625311]  __dev_open+0x100/0x1c0\n[   51.631420]  __dev_change_flags+0x194/0x210\n[   51.638214]  dev_change_flags+0x24/0x70\n[   51.644646]  do_setlink+0x228/0xdb0\n[   51.650723]  __rtnl_newlink+0x460/0x830\n[   51.657162]  rtnl_newlink+0x4c/0x80\n[   51.663229]  rtnetlink_rcv_msg+0x124/0x390\n[   51.669917]  netlink_rcv_skb+0x58/0x130\n[   51.676314]  rtnetlink_rcv+0x18/0x30\n[   51.682460]  netlink_unicast+0x250/0x310\n[   51.688960]  netlink_sendmsg+0x19c/0x3e0\n[   51.695458]  ____sys_sendmsg+0x220/0x290\n[   51.701938]  ___sys_sendmsg+0x7c/0xc0\n[   51.708148]  __sys_sendmsg+0x68/0xd0\n[   51.714254]  __arm64_sys_sendmsg+0x28/0x40\n[   51.720900]  invoke_syscall+0x48/0x120\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50190",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: Fix simplification of devm_spi_register_controller\n\nThis reverts commit 59ebbe40fb51 (\"spi: simplify\ndevm_spi_register_controller\").\n\nIf devm_add_action() fails in devm_add_action_or_reset(),\ndevm_spi_unregister() will be called, it decreases the\nrefcount of 'ctlr-\u003edev' to 0, then it will cause uaf in\nthe drivers that calling spi_put_controller() in error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50191",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: of: Fix refcount leak bug in of_get_regulation_constraints()\n\nWe should call the of_node_put() for the reference returned by\nof_get_child_by_name() which has increased the refcount.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50192",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: tegra20-slink: fix UAF in tegra_slink_remove()\n\nAfter calling spi_unregister_master(), the refcount of master will\nbe decrease to 0, and it will be freed in spi_controller_release(),\nthe device data also will be freed, so it will lead a UAF when using\n'tspi'. To fix this, get the master before unregister and put it when\nfinish using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50194",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: aoss: Fix refcount leak in qmp_cooling_devices_register\n\nEvery iteration of for_each_available_child_of_node() decrements\nthe reference count of the previous node.\nWhen breaking early from a for_each_available_child_of_node() loop,\nwe need to explicitly call of_node_put() on the child node.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50196",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: ocmem: Fix refcount leak in of_get_ocmem\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\nof_node_put() will check NULL pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50197",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: zynq: Fix refcount leak in zynq_get_revision\n\nof_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50198",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: OMAP2+: Fix refcount leak in omap3xxx_prm_late_init\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50199",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: OMAP2+: Fix refcount leak in omapdss_init_of\n\nomapdss_find_dss_of_node() calls of_find_compatible_node() to get device\nnode. of_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() in later error path and normal path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50200",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: Add boundary check in put_entry()\n\nJust like next_entry(), boundary check is necessary to prevent memory\nout-of-bound access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50201",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: fix memleak in security_read_state_kernel()\n\nIn this function, it directly returns the result of __security_read_policy\nwithout freeing the allocated memory in *data, cause memory leak issue,\nso free the memory if __security_read_policy failed.\n\n[PM: subject line tweak]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50202",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPM: hibernate: defer device probing when resuming from hibernation\n\nsyzbot is reporting hung task at misc_open() [1], for there is a race\nwindow of AB-BA deadlock which involves probe_count variable. Currently\nwait_for_device_probe() from snapshot_open() from misc_open() can sleep\nforever with misc_mtx held if probe_count cannot become 0.\n\nWhen a device is probed by hub_event() work function, probe_count is\nincremented before the probe function starts, and probe_count is\ndecremented after the probe function completed.\n\nThere are three cases that can prevent probe_count from dropping to 0.\n\n  (a) A device being probed stopped responding (i.e. broken/malicious\n      hardware).\n\n  (b) A process emulating a USB device using /dev/raw-gadget interface\n      stopped responding for some reason.\n\n  (c) New device probe requests keeps coming in before existing device\n      probe requests complete.\n\nThe phenomenon syzbot is reporting is (b). A process which is holding\nsystem_transition_mutex and misc_mtx is waiting for probe_count to become\n0 inside wait_for_device_probe(), but the probe function which is called\n from hub_event() work function is waiting for the processes which are\nblocked at mutex_lock(\u0026misc_mtx) to respond via /dev/raw-gadget interface.\n\nThis patch mitigates (b) by deferring wait_for_device_probe() from\nsnapshot_open() to snapshot_write() and snapshot_ioctl(). Please note that\nthe possibility of (b) remains as long as any thread which is emulating a\nUSB device via /dev/raw-gadget interface can be blocked by uninterruptible\nblocking operations (e.g. mutex_lock()).\n\nPlease also note that (a) and (c) are not addressed. Regarding (c), we\nshould change the code to wait for only one device which contains the\nimage for resuming from hibernation. I don't know how to address (a), for\nuse of timeout for wait_for_device_probe() might result in loss of user\ndata in the image. Maybe we should require the userland to wait for the\nimage device before opening /dev/snapshot interface.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50203",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: OMAP2+: display: Fix refcount leak bug\n\nIn omapdss_init_fbdev(), of_find_node_by_name() will return a node\npointer with refcount incremented. We should use of_node_put() when\nit is not used anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50204",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: OMAP2+: pdata-quirks: Fix refcount leak bug\n\nIn pdata_quirks_init_clocks(), the loop contains\nof_find_node_by_name() but without corresponding of_node_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50206",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: fix oops in concurrently setting insn_emulation sysctls\n\nemulation_proc_handler() changes table-\u003edata for proc_dointvec_minmax\nand can generate the following Oops if called concurrently with itself:\n\n | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010\n | Internal error: Oops: 96000006 [#1] SMP\n | Call trace:\n | update_insn_emulation_mode+0xc0/0x148\n | emulation_proc_handler+0x64/0xb8\n | proc_sys_call_handler+0x9c/0xf8\n | proc_sys_write+0x18/0x20\n | __vfs_write+0x20/0x48\n | vfs_write+0xe4/0x1d0\n | ksys_write+0x70/0xf8\n | __arm64_sys_write+0x20/0x28\n | el0_svc_common.constprop.0+0x7c/0x1c0\n | el0_svc_handler+0x2c/0xa0\n | el0_svc+0x8/0x200\n\nTo fix this issue, keep the table-\u003edata as \u0026insn-\u003ecurrent_mode and\nuse container_of() to retrieve the insn pointer. Another mutex is\nused to protect against the current_mode update but not for retrieving\ninsn_emulation as table-\u003edata is no longer changing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50207",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: bcm: Fix refcount leak in bcm_kona_smc_init\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50208",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: amlogic: Fix refcount leak in meson-secure-pwrc.c\n\nIn meson_secure_pwrc_probe(), there is a refcount leak in one fail\npath.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50209",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmeson-mx-socinfo: Fix refcount leak in meson_mx_socinfo_init\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50211",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd-raid10: fix KASAN warning\n\nThere's a KASAN warning in raid10_remove_disk when running the lvm\ntest lvconvert-raid-reshape.sh. We fix this warning by verifying that the\nvalue \"number\" is valid.\n\nBUG: KASAN: slab-out-of-bounds in raid10_remove_disk+0x61/0x2a0 [raid10]\nRead of size 8 at addr ffff889108f3d300 by task mdX_raid10/124682\n\nCPU: 3 PID: 124682 Comm: mdX_raid10 Not tainted 5.19.0-rc6 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x34/0x44\n print_report.cold+0x45/0x57a\n ? __lock_text_start+0x18/0x18\n ? raid10_remove_disk+0x61/0x2a0 [raid10]\n kasan_report+0xa8/0xe0\n ? raid10_remove_disk+0x61/0x2a0 [raid10]\n raid10_remove_disk+0x61/0x2a0 [raid10]\nBuffer I/O error on dev dm-76, logical block 15344, async page read\n ? __mutex_unlock_slowpath.constprop.0+0x1e0/0x1e0\n remove_and_add_spares+0x367/0x8a0 [md_mod]\n ? super_written+0x1c0/0x1c0 [md_mod]\n ? mutex_trylock+0xac/0x120\n ? _raw_spin_lock+0x72/0xc0\n ? _raw_spin_lock_bh+0xc0/0xc0\n md_check_recovery+0x848/0x960 [md_mod]\n raid10d+0xcf/0x3360 [raid10]\n ? sched_clock_cpu+0x185/0x1a0\n ? rb_erase+0x4d4/0x620\n ? var_wake_function+0xe0/0xe0\n ? psi_group_change+0x411/0x500\n ? preempt_count_sub+0xf/0xc0\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? __lock_text_start+0x18/0x18\n ? raid10_sync_request+0x36c0/0x36c0 [raid10]\n ? preempt_count_sub+0xf/0xc0\n ? _raw_spin_unlock_irqrestore+0x19/0x40\n ? del_timer_sync+0xa9/0x100\n ? try_to_del_timer_sync+0xc0/0xc0\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? __lock_text_start+0x18/0x18\n ? _raw_spin_unlock_irq+0x11/0x24\n ? __list_del_entry_valid+0x68/0xa0\n ? finish_wait+0xa3/0x100\n md_thread+0x161/0x260 [md_mod]\n ? unregister_md_personality+0xa0/0xa0 [md_mod]\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? prepare_to_wait_event+0x2c0/0x2c0\n ? unregister_md_personality+0xa0/0xa0 [md_mod]\n kthread+0x148/0x180\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30\n \u003c/TASK\u003e\n\nAllocated by task 124495:\n kasan_save_stack+0x1e/0x40\n __kasan_kmalloc+0x80/0xa0\n setup_conf+0x140/0x5c0 [raid10]\n raid10_run+0x4cd/0x740 [raid10]\n md_run+0x6f9/0x1300 [md_mod]\n raid_ctr+0x2531/0x4ac0 [dm_raid]\n dm_table_add_target+0x2b0/0x620 [dm_mod]\n table_load+0x1c8/0x400 [dm_mod]\n ctl_ioctl+0x29e/0x560 [dm_mod]\n dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]\n __do_compat_sys_ioctl+0xfa/0x160\n do_syscall_64+0x90/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nLast potentially related work creation:\n kasan_save_stack+0x1e/0x40\n __kasan_record_aux_stack+0x9e/0xc0\n kvfree_call_rcu+0x84/0x480\n timerfd_release+0x82/0x140\nL __fput+0xfa/0x400\n task_work_run+0x80/0xc0\n exit_to_user_mode_prepare+0x155/0x160\n syscall_exit_to_user_mode+0x12/0x40\n do_syscall_64+0x42/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nSecond to last potentially related work creation:\n kasan_save_stack+0x1e/0x40\n __kasan_record_aux_stack+0x9e/0xc0\n kvfree_call_rcu+0x84/0x480\n timerfd_release+0x82/0x140\n __fput+0xfa/0x400\n task_work_run+0x80/0xc0\n exit_to_user_mode_prepare+0x155/0x160\n syscall_exit_to_user_mode+0x12/0x40\n do_syscall_64+0x42/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nThe buggy address belongs to the object at ffff889108f3d200\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 0 bytes to the right of\n 256-byte region [ffff889108f3d200, ffff889108f3d300)\n\nThe buggy address belongs to the physical page:\npage:000000007ef2a34c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1108f3c\nhead:000000007ef2a34c order:2 compound_mapcount:0 compound_pincount:0\nflags: 0x4000000000010200(slab|head|zone=2)\nraw: 4000000000010200 0000000000000000 dead000000000001 ffff889100042b40\nraw: 0000000000000000 0000000080200020 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff889108f3d200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff889108f3d280: 00 00\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50215",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Allow waiting for commands to complete on removed device\n\nWhen a SCSI device is removed while in active use, currently sg will\nimmediately return -ENODEV on any attempt to wait for active commands that\nwere sent before the removal.  This is problematic for commands that use\nSG_FLAG_DIRECT_IO since the data buffer may still be in use by the kernel\nwhen userspace frees or reuses it after getting ENODEV, leading to\ncorrupted userspace memory (in the case of READ-type commands) or corrupted\ndata being sent to the device (in the case of WRITE-type commands).  This\nhas been seen in practice when logging out of a iscsi_tcp session, where\nthe iSCSI driver may still be processing commands after the device has been\nmarked for removal.\n\nChange the policy to allow userspace to wait for active sg commands even\nwhen the device is being removed.  Return -ENODEV only when there are no\nmore responses to read.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50218",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: light: isl29028: Fix the warning in isl29028_remove()\n\nThe driver use the non-managed form of the register function in\nisl29028_remove(). To keep the release order as mirroring the ordering\nin probe, the driver should use non-managed form in probe, too.\n\nThe following log reveals it:\n\n[   32.374955] isl29028 0-0010: remove\n[   32.376861] general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN PTI\n[   32.377676] KASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\n[   32.379432] RIP: 0010:kernfs_find_and_get_ns+0x28/0xe0\n[   32.385461] Call Trace:\n[   32.385807]  sysfs_unmerge_group+0x59/0x110\n[   32.386110]  dpm_sysfs_remove+0x58/0xc0\n[   32.386391]  device_del+0x296/0xe50\n[   32.386959]  cdev_device_del+0x1d/0xd0\n[   32.387231]  devm_iio_device_unreg+0x27/0xb0\n[   32.387542]  devres_release_group+0x319/0x3d0\n[   32.388162]  i2c_device_remove+0x93/0x1f0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50220",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: Fix linkwatch use-after-free on disconnect\n\nusbnet uses the work usbnet_deferred_kevent() to perform tasks which may\nsleep.  On disconnect, completion of the work was originally awaited in\n-\u003endo_stop().  But in 2003, that was moved to -\u003edisconnect() by historic\ncommit \"[PATCH] USB: usbnet, prevent exotic rtnl deadlock\":\n\n  https://git.kernel.org/tglx/history/c/0f138bbfd83c\n\nThe change was made because back then, the kernel's workqueue\nimplementation did not allow waiting for a single work.  One had to wait\nfor completion of *all* work by calling flush_scheduled_work(), and that\ncould deadlock when waiting for usbnet_deferred_kevent() with rtnl_mutex\nheld in -\u003endo_stop().\n\nThe commit solved one problem but created another:  It causes a\nuse-after-free in USB Ethernet drivers aqc111.c, asix_devices.c,\nax88179_178a.c, ch9200.c and smsc75xx.c:\n\n* If the drivers receive a link change interrupt immediately before\n  disconnect, they raise EVENT_LINK_RESET in their (non-sleepable)\n  -\u003estatus() callback and schedule usbnet_deferred_kevent().\n* usbnet_deferred_kevent() invokes the driver's -\u003elink_reset() callback,\n  which calls netif_carrier_{on,off}().\n* That in turn schedules the work linkwatch_event().\n\nBecause usbnet_deferred_kevent() is awaited after unregister_netdev(),\nnetif_carrier_{on,off}() may operate on an unregistered netdev and\nlinkwatch_event() may run after free_netdev(), causing a use-after-free.\n\nIn 2010, usbnet was changed to only wait for a single instance of\nusbnet_deferred_kevent() instead of *all* work by commit 23f333a2bfaf\n(\"drivers/net: don't use flush_scheduled_work()\").\n\nUnfortunately the commit neglected to move the wait back to\n-\u003endo_stop().  Rectify that omission at long last.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50222",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: vt: initialize unicode screen buffer\n\nsyzbot reports kernel infoleak at vcs_read() [1], for buffer can be read\nimmediately after resize operation. Initialize buffer using kzalloc().\n\n  ----------\n  #include \u003cfcntl.h\u003e\n  #include \u003cunistd.h\u003e\n  #include \u003csys/ioctl.h\u003e\n  #include \u003clinux/fb.h\u003e\n\n  int main(int argc, char *argv[])\n  {\n    struct fb_var_screeninfo var = { };\n    const int fb_fd = open(\"/dev/fb0\", 3);\n    ioctl(fb_fd, FBIOGET_VSCREENINFO, \u0026var);\n    var.yres = 0x21;\n    ioctl(fb_fd, FBIOPUT_VSCREENINFO, \u0026var);\n    return read(open(\"/dev/vcsu\", O_RDONLY), \u0026var, sizeof(var)) == -1;\n  }\n  ----------",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50226",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: ccp - Use kzalloc for sev ioctl interfaces to prevent kernel memory leak\n\nFor some sev ioctl interfaces, input may be passed that is less than or\nequal to SEV_FW_BLOB_MAX_SIZE, but larger than the data that PSP\nfirmware returns. In this case, kmalloc will allocate memory that is the\nsize of the input rather than the size of the data. Since PSP firmware\ndoesn't fully overwrite the buffer, the sev ioctl interfaces with the\nissue may return uninitialized slab memory.\n\nCurrently, all of the ioctl interfaces in the ccp driver are safe, but\nto prevent future problems, change all ioctl interfaces that allocate\nmemory with kmalloc to use kzalloc and memset the data buffer to zero\nin sev_ioctl_do_platform_status.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50228",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: Don't BUG if userspace injects an interrupt with GIF=0\n\nDon't BUG/WARN on interrupt injection due to GIF being cleared,\nsince it's trivial for userspace to force the situation via\nKVM_SET_VCPU_EVENTS (even if having at least a WARN there would be correct\nfor KVM internally generated injections).\n\n  kernel BUG at arch/x86/kvm/svm/svm.c:3386!\n  invalid opcode: 0000 [#1] SMP\n  CPU: 15 PID: 926 Comm: smm_test Not tainted 5.17.0-rc3+ #264\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n  RIP: 0010:svm_inject_irq+0xab/0xb0 [kvm_amd]\n  Code: \u003c0f\u003e 0b 0f 1f 00 0f 1f 44 00 00 80 3d ac b3 01 00 00 55 48 89 f5 53\n  RSP: 0018:ffffc90000b37d88 EFLAGS: 00010246\n  RAX: 0000000000000000 RBX: ffff88810a234ac0 RCX: 0000000000000006\n  RDX: 0000000000000000 RSI: ffffc90000b37df7 RDI: ffff88810a234ac0\n  RBP: ffffc90000b37df7 R08: ffff88810a1fa410 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000\n  R13: ffff888109571000 R14: ffff88810a234ac0 R15: 0000000000000000\n  FS:  0000000001821380(0000) GS:ffff88846fdc0000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f74fc550008 CR3: 000000010a6fe000 CR4: 0000000000350ea0\n  Call Trace:\n   \u003cTASK\u003e\n   inject_pending_event+0x2f7/0x4c0 [kvm]\n   kvm_arch_vcpu_ioctl_run+0x791/0x17a0 [kvm]\n   kvm_vcpu_ioctl+0x26d/0x650 [kvm]\n   __x64_sys_ioctl+0x82/0xb0\n   do_syscall_64+0x3b/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n   \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50229",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: bcd2000: Fix a UAF bug on the error path of probing\n\nWhen the driver fails in snd_card_register() at probe time, it will free\nthe 'bcd2k-\u003emidi_out_urb' before killing it, which may cause a UAF bug.\n\nThe following log can reveal it:\n\n[   50.727020] BUG: KASAN: use-after-free in bcd2000_input_complete+0x1f1/0x2e0 [snd_bcd2000]\n[   50.727623] Read of size 8 at addr ffff88810fab0e88 by task swapper/4/0\n[   50.729530] Call Trace:\n[   50.732899]  bcd2000_input_complete+0x1f1/0x2e0 [snd_bcd2000]\n\nFix this by adding usb_kill_urb() before usb_free_urb().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2022-50231",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: arm64/poly1305 - fix a read out-of-bound\n\nA kasan error was reported during fuzzing:\n\nBUG: KASAN: slab-out-of-bounds in neon_poly1305_blocks.constprop.0+0x1b4/0x250 [poly1305_neon]\nRead of size 4 at addr ffff0010e293f010 by task syz-executor.5/1646715\nCPU: 4 PID: 1646715 Comm: syz-executor.5 Kdump: loaded Not tainted 5.10.0.aarch64 #1\nHardware name: Huawei TaiShan 2280 /BC11SPCD, BIOS 1.59 01/31/2019\nCall trace:\n dump_backtrace+0x0/0x394\n show_stack+0x34/0x4c arch/arm64/kernel/stacktrace.c:196\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0x158/0x1e4 lib/dump_stack.c:118\n print_address_description.constprop.0+0x68/0x204 mm/kasan/report.c:387\n __kasan_report+0xe0/0x140 mm/kasan/report.c:547\n kasan_report+0x44/0xe0 mm/kasan/report.c:564\n check_memory_region_inline mm/kasan/generic.c:187 [inline]\n __asan_load4+0x94/0xd0 mm/kasan/generic.c:252\n neon_poly1305_blocks.constprop.0+0x1b4/0x250 [poly1305_neon]\n neon_poly1305_do_update+0x6c/0x15c [poly1305_neon]\n neon_poly1305_update+0x9c/0x1c4 [poly1305_neon]\n crypto_shash_update crypto/shash.c:131 [inline]\n shash_finup_unaligned+0x84/0x15c crypto/shash.c:179\n crypto_shash_finup+0x8c/0x140 crypto/shash.c:193\n shash_digest_unaligned+0xb8/0xe4 crypto/shash.c:201\n crypto_shash_digest+0xa4/0xfc crypto/shash.c:217\n crypto_shash_tfm_digest+0xb4/0x150 crypto/shash.c:229\n essiv_skcipher_setkey+0x164/0x200 [essiv]\n crypto_skcipher_setkey+0xb0/0x160 crypto/skcipher.c:612\n skcipher_setkey+0x3c/0x50 crypto/algif_skcipher.c:305\n alg_setkey+0x114/0x2a0 crypto/af_alg.c:220\n alg_setsockopt+0x19c/0x210 crypto/af_alg.c:253\n __sys_setsockopt+0x190/0x2e0 net/socket.c:2123\n __do_sys_setsockopt net/socket.c:2134 [inline]\n __se_sys_setsockopt net/socket.c:2131 [inline]\n __arm64_sys_setsockopt+0x78/0x94 net/socket.c:2131\n __invoke_syscall arch/arm64/kernel/syscall.c:36 [inline]\n invoke_syscall+0x64/0x100 arch/arm64/kernel/syscall.c:48\n el0_svc_common.constprop.0+0x220/0x230 arch/arm64/kernel/syscall.c:155\n do_el0_svc+0xb4/0xd4 arch/arm64/kernel/syscall.c:217\n el0_svc+0x24/0x3c arch/arm64/kernel/entry-common.c:353\n el0_sync_handler+0x160/0x164 arch/arm64/kernel/entry-common.c:369\n el0_sync+0x160/0x180 arch/arm64/kernel/entry.S:683\n\nThis error can be reproduced by the following code compiled as ko on a\nsystem with kasan enabled:\n\n#include \u003clinux/module.h\u003e\n#include \u003clinux/crypto.h\u003e\n#include \u003ccrypto/hash.h\u003e\n#include \u003ccrypto/poly1305.h\u003e\n\nchar test_data[] = \"\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\"\n                   \"\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\"\n                   \"\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\"\n                   \"\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\";\n\nint init(void)\n{\n        struct crypto_shash *tfm = NULL;\n        char *data = NULL, *out = NULL;\n\n        tfm = crypto_alloc_shash(\"poly1305\", 0, 0);\n        data = kmalloc(POLY1305_KEY_SIZE - 1, GFP_KERNEL);\n        out = kmalloc(POLY1305_DIGEST_SIZE, GFP_KERNEL);\n        memcpy(data, test_data, POLY1305_KEY_SIZE - 1);\n        crypto_shash_tfm_digest(tfm, data, POLY1305_KEY_SIZE - 1, out);\n\n        kfree(data);\n        kfree(out);\n        return 0;\n}\n\nvoid deinit(void)\n{\n}\n\nmodule_init(init)\nmodule_exit(deinit)\nMODULE_LICENSE(\"GPL\");\n\nThe root cause of the bug sits in neon_poly1305_blocks. The logic\nneon_poly1305_blocks() performed is that if it was called with both s[]\nand r[] uninitialized, it will first try to initialize them with the\ndata from the first \"block\" that it believed to be 32 bytes in length.\nFirst 16 bytes are used as the key and the next 16 bytes for s[]. This\nwould lead to the aforementioned read out-of-bound. However, after\ncalling poly1305_init_arch(), only 16 bytes were deducted from the input\nand s[] is initialized yet again with the following 16 bytes. The second\ninitialization of s[] is certainly redundent which indicates that the\nfirst initialization should be for r[] only.\n\nThis patch fixes the issue by calling poly1305_init_arm64() instead o\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-1990",
      "Description": "A use-after-free flaw was found in ndlc_remove in drivers/nfc/st-nci/ndlc.c in the Linux Kernel. This flaw could allow an attacker to crash the system due to a race problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-3111",
      "Description": "A use after free vulnerability was found in prepare_to_relocate in fs/btrfs/relocation.c in btrfs in the Linux Kernel. This possible flaw can be triggered by calling btrfs_ioctl_balance() before calling btrfs_ioctl_defrag().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: adapt set backend to use GC transaction API\n\nUse the GC transaction API to replace the old and buggy gc API and the\nbusy mark approach.\n\nNo set elements are removed from async garbage collection anymore,\ninstead the _DEAD bit is set on so the set element is not visible from\nlookup path anymore. Async GC enqueues transaction work that might be\naborted and retried later.\n\nrbtree and pipapo set backends does not set on the _DEAD bit from the\nsync GC path since this runs in control plane path where mutex is held.\nIn this case, set elements are deactivated, removed and then released\nvia RCU callback, sync GC never fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: don't skip expired elements during walk\n\nThere is an asymmetry between commit/abort and preparation phase if the\nfollowing conditions are met:\n\n1. set is a verdict map (\"1.2.3.4 : jump foo\")\n2. timeouts are enabled\n\nIn this case, following sequence is problematic:\n\n1. element E in set S refers to chain C\n2. userspace requests removal of set S\n3. kernel does a set walk to decrement chain-\u003euse count for all elements\n   from preparation phase\n4. kernel does another set walk to remove elements from the commit phase\n   (or another walk to do a chain-\u003euse increment for all elements from\n    abort phase)\n\nIf E has already expired in 1), it will be ignored during list walk, so its use count\nwon't have been changed.\n\nThen, when set is culled, -\u003edestroy callback will zap the element via\nnf_tables_set_elem_destroy(), but this function is only safe for\nelements that have been deactivated earlier from the preparation phase:\nlack of earlier deactivate removes the element but leaks the chain use\ncount, which results in a WARN splat when the chain gets removed later,\nplus a leak of the nft_chain structure.\n\nUpdate pipapo_get() not to skip expired elements, otherwise flush\ncommand reports bogus ENOENT errors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: don't fail inserts if duplicate has expired\n\nnftables selftests fail:\nrun-tests.sh testcases/sets/0044interval_overlap_0\nExpected: 0-2 . 0-3, got:\nW: [FAILED]     ./testcases/sets/0044interval_overlap_0: got 1\n\nInsertion must ignore duplicate but expired entries.\n\nMoreover, there is a strange asymmetry in nft_pipapo_activate:\n\nIt refetches the current element, whereas the other -\u003eactivate callbacks\n(bitmap, hash, rhash, rbtree) use elem-\u003epriv.\nSame for .remove: other set implementations take elem-\u003epriv,\nnft_pipapo_remove fetches elem-\u003epriv, then does a relookup,\nremove this.\n\nI suspect this was the reason for the change that prompted the\nremoval of the expired check in pipapo_get() in the first place,\nbut skipping exired elements there makes no sense to me, this helper\nis used for normal get requests, insertions (duplicate check)\nand deactivate callback.\n\nIn first two cases expired elements must be skipped.\n\nFor -\u003edeactivate(), this gets called for DELSETELEM, so it\nseems to me that expired elements should be skipped as well, i.e.\ndelete request should fail with -ENOENT error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: allow exp not to be removed in nf_ct_find_expectation\n\nCurrently nf_conntrack_in() calling nf_ct_find_expectation() will\nremove the exp from the hash table. However, in some scenario, we\nexpect the exp not to be removed when the created ct will not be\nconfirmed, like in OVS and TC conntrack in the following patches.\n\nThis patch allows exp not to be removed by setting IPS_CONFIRMED\nin the status of the tmpl.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53035",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix kernel-infoleak in nilfs_ioctl_wrap_copy()\n\nThe ioctl helper function nilfs_ioctl_wrap_copy(), which exchanges a\nmetadata array to/from user space, may copy uninitialized buffer regions\nto user space memory for read-only ioctl commands NILFS_IOCTL_GET_SUINFO\nand NILFS_IOCTL_GET_CPINFO.\n\nThis can occur when the element size of the user space metadata given by\nthe v_size member of the argument nilfs_argv structure is larger than the\nsize of the metadata element (nilfs_suinfo structure or nilfs_cpinfo\nstructure) on the file system side.\n\nKMSAN-enabled kernels detect this issue as follows:\n\n BUG: KMSAN: kernel-infoleak in instrument_copy_to_user\n include/linux/instrumented.h:121 [inline]\n BUG: KMSAN: kernel-infoleak in _copy_to_user+0xc0/0x100 lib/usercopy.c:33\n  instrument_copy_to_user include/linux/instrumented.h:121 [inline]\n  _copy_to_user+0xc0/0x100 lib/usercopy.c:33\n  copy_to_user include/linux/uaccess.h:169 [inline]\n  nilfs_ioctl_wrap_copy+0x6fa/0xc10 fs/nilfs2/ioctl.c:99\n  nilfs_ioctl_get_info fs/nilfs2/ioctl.c:1173 [inline]\n  nilfs_ioctl+0x2402/0x4450 fs/nilfs2/ioctl.c:1290\n  nilfs_compat_ioctl+0x1b8/0x200 fs/nilfs2/ioctl.c:1343\n  __do_compat_sys_ioctl fs/ioctl.c:968 [inline]\n  __se_compat_sys_ioctl+0x7dd/0x1000 fs/ioctl.c:910\n  __ia32_compat_sys_ioctl+0x93/0xd0 fs/ioctl.c:910\n  do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]\n  __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c:178\n  do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c:203\n  do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:246\n  entry_SYSENTER_compat_after_hwframe+0x70/0x82\n\n Uninit was created at:\n  __alloc_pages+0x9f6/0xe90 mm/page_alloc.c:5572\n  alloc_pages+0xab0/0xd80 mm/mempolicy.c:2287\n  __get_free_pages+0x34/0xc0 mm/page_alloc.c:5599\n  nilfs_ioctl_wrap_copy+0x223/0xc10 fs/nilfs2/ioctl.c:74\n  nilfs_ioctl_get_info fs/nilfs2/ioctl.c:1173 [inline]\n  nilfs_ioctl+0x2402/0x4450 fs/nilfs2/ioctl.c:1290\n  nilfs_compat_ioctl+0x1b8/0x200 fs/nilfs2/ioctl.c:1343\n  __do_compat_sys_ioctl fs/ioctl.c:968 [inline]\n  __se_compat_sys_ioctl+0x7dd/0x1000 fs/ioctl.c:910\n  __ia32_compat_sys_ioctl+0x93/0xd0 fs/ioctl.c:910\n  do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]\n  __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c:178\n  do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c:203\n  do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:246\n  entry_SYSENTER_compat_after_hwframe+0x70/0x82\n\n Bytes 16-127 of 3968 are uninitialized\n ...\n\nThis eliminates the leak issue by initializing the page allocated as\nbuffer using get_zeroed_page().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53038",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Check kzalloc() in lpfc_sli4_cgn_params_read()\n\nIf kzalloc() fails in lpfc_sli4_cgn_params_read(), then we rely on\nlpfc_read_object()'s routine to NULL check pdata.\n\nCurrently, an early return error is thrown from lpfc_read_object() to\nprotect us from NULL ptr dereference, but the errno code is -ENODEV.\n\nChange the errno code to a more appropriate -ENOMEM.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "not set"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53039",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: intel-ish-hid: ipc: Fix potential use-after-free in work function\n\nWhen a reset notify IPC message is received, the ISR schedules a work\nfunction and passes the ISHTP device to it via a global pointer\nishtp_dev. If ish_probe() fails, the devm-managed device resources\nincluding ishtp_dev are freed, but the work is not cancelled, causing a\nuse-after-free when the work function tries to access ishtp_dev. Use\ndevm_work_autocancel() instead, so that the work is automatically\ncancelled if probe fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53040",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nca8210: fix mac_len negative array access\n\nThis patch fixes a buffer overflow access of skb-\u003edata if\nieee802154_hdr_peek_addrs() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53041",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Perform lockless command completion in abort path\n\nWhile adding and removing the controller, the following call trace was\nobserved:\n\nWARNING: CPU: 3 PID: 623596 at kernel/dma/mapping.c:532 dma_free_attrs+0x33/0x50\nCPU: 3 PID: 623596 Comm: sh Kdump: loaded Not tainted 5.14.0-96.el9.x86_64 #1\nRIP: 0010:dma_free_attrs+0x33/0x50\n\nCall Trace:\n   qla2x00_async_sns_sp_done+0x107/0x1b0 [qla2xxx]\n   qla2x00_abort_srb+0x8e/0x250 [qla2xxx]\n   ? ql_dbg+0x70/0x100 [qla2xxx]\n   __qla2x00_abort_all_cmds+0x108/0x190 [qla2xxx]\n   qla2x00_abort_all_cmds+0x24/0x70 [qla2xxx]\n   qla2x00_abort_isp_cleanup+0x305/0x3e0 [qla2xxx]\n   qla2x00_remove_one+0x364/0x400 [qla2xxx]\n   pci_device_remove+0x36/0xa0\n   __device_release_driver+0x17a/0x230\n   device_release_driver+0x24/0x30\n   pci_stop_bus_device+0x68/0x90\n   pci_stop_and_remove_bus_device_locked+0x16/0x30\n   remove_store+0x75/0x90\n   kernfs_fop_write_iter+0x11c/0x1b0\n   new_sync_write+0x11f/0x1b0\n   vfs_write+0x1eb/0x280\n   ksys_write+0x5f/0xe0\n   do_syscall_64+0x5c/0x80\n   ? do_user_addr_fault+0x1d8/0x680\n   ? do_syscall_64+0x69/0x80\n   ? exc_page_fault+0x62/0x140\n   ? asm_exc_page_fault+0x8/0x30\n   entry_SYSCALL_64_after_hwframe+0x44/0xae\n\nThe command was completed in the abort path during driver unload with a\nlock held, causing the warning in abort path. Hence complete the command\nwithout any lock held.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53044",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm stats: check for and propagate alloc_percpu failure\n\nCheck alloc_precpu()'s return value and return an error from\ndm_stats_init() if it fails. Update alloc_dev() to fail if\ndm_stats_init() does.\n\nOtherwise, a NULL pointer dereference will occur in dm_stats_cleanup()\neven if dm-stats isn't being actively used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: u_audio: don't let userspace block driver unbind\n\nIn the unbind callback for f_uac1 and f_uac2, a call to snd_card_free()\nvia g_audio_cleanup() will disconnect the card and then wait for all\nresources to be released, which happens when the refcount falls to zero.\nSince userspace can keep the refcount incremented by not closing the\nrelevant file descriptor, the call to unbind may block indefinitely.\nThis can cause a deadlock during reboot, as evidenced by the following\nblocked task observed on my machine:\n\n  task:reboot  state:D stack:0   pid:2827  ppid:569    flags:0x0000000c\n  Call trace:\n   __switch_to+0xc8/0x140\n   __schedule+0x2f0/0x7c0\n   schedule+0x60/0xd0\n   schedule_timeout+0x180/0x1d4\n   wait_for_completion+0x78/0x180\n   snd_card_free+0x90/0xa0\n   g_audio_cleanup+0x2c/0x64\n   afunc_unbind+0x28/0x60\n   ...\n   kernel_restart+0x4c/0xac\n   __do_sys_reboot+0xcc/0x1ec\n   __arm64_sys_reboot+0x28/0x30\n   invoke_syscall+0x4c/0x110\n   ...\n\nThe issue can also be observed by opening the card with arecord and\nthen stopping the process through the shell before unbinding:\n\n  # arecord -D hw:UAC2Gadget -f S32_LE -c 2 -r 48000 /dev/null\n  Recording WAVE '/dev/null' : Signed 32 bit Little Endian, Rate 48000 Hz, Stereo\n  ^Z[1]+  Stopped                    arecord -D hw:UAC2Gadget -f S32_LE -c 2 -r 48000 /dev/null\n  # echo gadget.0 \u003e /sys/bus/gadget/drivers/configfs-gadget/unbind\n  (observe that the unbind command never finishes)\n\nFix the problem by using snd_card_free_when_closed() instead, which will\nstill disconnect the card as desired, but defer the task of freeing the\nresources to the core once userspace closes its file descriptor.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53048",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: fix warning when handle discover_identity message\n\nSince both source and sink device can send discover_identity message in\nPD3, kernel may dump below warning:\n\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 169 at drivers/usb/typec/tcpm/tcpm.c:1446 tcpm_queue_vdm+0xe0/0xf0\nModules linked in:\nCPU: 0 PID: 169 Comm: 1-0050 Not tainted 6.1.1-00038-g6a3c36cf1da2-dirty #567\nHardware name: NXP i.MX8MPlus EVK board (DT)\npstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : tcpm_queue_vdm+0xe0/0xf0\nlr : tcpm_queue_vdm+0x2c/0xf0\nsp : ffff80000c19bcd0\nx29: ffff80000c19bcd0 x28: 0000000000000001 x27: ffff0000d11c8ab8\nx26: ffff0000d11cc000 x25: 0000000000000000 x24: 00000000ff008081\nx23: 0000000000000001 x22: 00000000ff00a081 x21: ffff80000c19bdbc\nx20: 0000000000000000 x19: ffff0000d11c8080 x18: ffffffffffffffff\nx17: 0000000000000000 x16: 0000000000000000 x15: ffff0000d716f580\nx14: 0000000000000001 x13: ffff0000d716f507 x12: 0000000000000001\nx11: 0000000000000000 x10: 0000000000000020 x9 : 00000000000ee098\nx8 : 00000000ffffffff x7 : 000000000000001c x6 : ffff0000d716f580\nx5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000000000\nx2 : ffff80000c19bdbc x1 : 00000000ff00a081 x0 : 0000000000000004\nCall trace:\ntcpm_queue_vdm+0xe0/0xf0\ntcpm_pd_rx_handler+0x340/0x1ab0\nkthread_worker_fn+0xcc/0x18c\nkthread+0x10c/0x110\nret_from_fork+0x10/0x20\n---[ end trace 0000000000000000 ]---\n\nBelow sequences may trigger this warning:\n\ntcpm_send_discover_work(work)\n  tcpm_send_vdm(port, USB_SID_PD, CMD_DISCOVER_IDENT, NULL, 0);\n   tcpm_queue_vdm(port, header, data, count);\n    port-\u003evdm_state = VDM_STATE_READY;\n\nvdm_state_machine_work(work);\n\t\t\t\u003c-- received discover_identity from partner\n vdm_run_state_machine(port);\n  port-\u003evdm_state = VDM_STATE_SEND_MESSAGE;\n   mod_vdm_delayed_work(port, x);\n\ntcpm_pd_rx_handler(work);\n tcpm_pd_data_request(port, msg);\n  tcpm_handle_vdm_request(port, msg-\u003epayload, cnt);\n   tcpm_queue_vdm(port, response[0], \u0026response[1], rlen - 1);\n--\u003e WARN_ON(port-\u003evdm_state \u003e VDM_STATE_DONE);\n\nFor this case, the state machine could still send out discover\nidentity message later if we skip current discover_identity message.\nSo we should handle the received message firstly and override the pending\ndiscover_identity message without warning in this case. Then, a delayed\nsend_discover work will send discover_identity message again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53049",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: ucsi: Fix NULL pointer deref in ucsi_connector_change()\n\nWhen ucsi_init() fails, ucsi-\u003econnector is NULL, yet in case of\nucsi_acpi we may still get events which cause the ucs_acpi code to call\nucsi_connector_change(), which then derefs the NULL ucsi-\u003econnector\npointer.\n\nFix this by not setting ucsi-\u003entfy inside ucsi_init() until ucsi_init()\nhas succeeded, so that ucsi_connector_change() ignores the events\nbecause UCSI_ENABLE_NTFY_CONNECTOR_CHANGE is not set in the ntfy mask.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53051",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm crypt: add cond_resched() to dmcrypt_write()\n\nThe loop in dmcrypt_write may be running for unbounded amount of time,\nthus we need cond_resched() in it.\n\nThis commit fixes the following warning:\n\n[ 3391.153255][   C12] watchdog: BUG: soft lockup - CPU#12 stuck for 23s! [dmcrypt_write/2:2897]\n...\n[ 3391.387210][   C12] Call trace:\n[ 3391.390338][   C12]  blk_attempt_bio_merge.part.6+0x38/0x158\n[ 3391.395970][   C12]  blk_attempt_plug_merge+0xc0/0x1b0\n[ 3391.401085][   C12]  blk_mq_submit_bio+0x398/0x550\n[ 3391.405856][   C12]  submit_bio_noacct+0x308/0x380\n[ 3391.410630][   C12]  dmcrypt_write+0x1e4/0x208 [dm_crypt]\n[ 3391.416005][   C12]  kthread+0x130/0x138\n[ 3391.419911][   C12]  ret_from_fork+0x10/0x18",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53052",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix use-after-free bug in refresh_cache_worker()\n\nThe UAF bug occurred because we were putting DFS root sessions in\ncifs_umount() while DFS cache refresher was being executed.\n\nMake DFS root sessions have same lifetime as DFS tcons so we can avoid\nthe use-after-free bug is DFS cache refresher and other places that\nrequire IPCs to get new DFS referrals on.  Also, get rid of mount\ngroup handling in DFS cache as we no longer need it.\n\nThis fixes below use-after-free bug catched by KASAN\n\n[ 379.946955] BUG: KASAN: use-after-free in __refresh_tcon.isra.0+0x10b/0xc10 [cifs]\n[ 379.947642] Read of size 8 at addr ffff888018f57030 by task kworker/u4:3/56\n[ 379.948096]\n[ 379.948208] CPU: 0 PID: 56 Comm: kworker/u4:3 Not tainted 6.2.0-rc7-lku #23\n[ 379.948661] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\nrel-1.16.0-0-gd239552-rebuilt.opensuse.org 04/01/2014\n[ 379.949368] Workqueue: cifs-dfscache refresh_cache_worker [cifs]\n[ 379.949942] Call Trace:\n[ 379.950113] \u003cTASK\u003e\n[ 379.950260] dump_stack_lvl+0x50/0x67\n[ 379.950510] print_report+0x16a/0x48e\n[ 379.950759] ? __virt_addr_valid+0xd8/0x160\n[ 379.951040] ? __phys_addr+0x41/0x80\n[ 379.951285] kasan_report+0xdb/0x110\n[ 379.951533] ? __refresh_tcon.isra.0+0x10b/0xc10 [cifs]\n[ 379.952056] ? __refresh_tcon.isra.0+0x10b/0xc10 [cifs]\n[ 379.952585] __refresh_tcon.isra.0+0x10b/0xc10 [cifs]\n[ 379.953096] ? __pfx___refresh_tcon.isra.0+0x10/0x10 [cifs]\n[ 379.953637] ? __pfx___mutex_lock+0x10/0x10\n[ 379.953915] ? lock_release+0xb6/0x720\n[ 379.954167] ? __pfx_lock_acquire+0x10/0x10\n[ 379.954443] ? refresh_cache_worker+0x34e/0x6d0 [cifs]\n[ 379.954960] ? __pfx_wb_workfn+0x10/0x10\n[ 379.955239] refresh_cache_worker+0x4ad/0x6d0 [cifs]\n[ 379.955755] ? __pfx_refresh_cache_worker+0x10/0x10 [cifs]\n[ 379.956323] ? __pfx_lock_acquired+0x10/0x10\n[ 379.956615] ? read_word_at_a_time+0xe/0x20\n[ 379.956898] ? lockdep_hardirqs_on_prepare+0x12/0x220\n[ 379.957235] process_one_work+0x535/0x990\n[ 379.957509] ? __pfx_process_one_work+0x10/0x10\n[ 379.957812] ? lock_acquired+0xb7/0x5f0\n[ 379.958069] ? __list_add_valid+0x37/0xd0\n[ 379.958341] ? __list_add_valid+0x37/0xd0\n[ 379.958611] worker_thread+0x8e/0x630\n[ 379.958861] ? __pfx_worker_thread+0x10/0x10\n[ 379.959148] kthread+0x17d/0x1b0\n[ 379.959369] ? __pfx_kthread+0x10/0x10\n[ 379.959630] ret_from_fork+0x2c/0x50\n[ 379.959879] \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53054",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: fix a devres leak in hw_enable upon suspend resume\n\nEach time the platform goes to low power, PM suspend / resume routines\ncall: __dwc2_lowlevel_hw_enable -\u003e devm_add_action_or_reset().\nThis adds a new devres each time.\nThis may also happen at runtime, as dwc2_lowlevel_hw_enable() can be\ncalled from udc_start().\n\nThis can be seen with tracing:\n- echo 1 \u003e /sys/kernel/debug/tracing/events/dev/devres_log/enable\n- go to low power\n- cat /sys/kernel/debug/tracing/trace\n\nA new \"ADD\" entry is found upon each low power cycle:\n... devres_log: 49000000.usb-otg ADD 82a13bba devm_action_release (8 bytes)\n... devres_log: 49000000.usb-otg ADD 49889daf devm_action_release (8 bytes)\n...\n\nA second issue is addressed here:\n- regulator_bulk_enable() is called upon each PM cycle (suspend/resume).\n- regulator_bulk_disable() never gets called.\n\nSo the reference count for these regulators constantly increase, by one\nupon each low power cycle, due to missing regulator_bulk_disable() call\nin __dwc2_lowlevel_hw_disable().\n\nThe original fix that introduced the devm_add_action_or_reset() call,\nfixed an issue during probe, that happens due to other errors in\ndwc2_driver_probe() -\u003e dwc2_core_reset(). Then the probe fails without\ndisabling regulators, when dr_mode == USB_DR_MODE_PERIPHERAL.\n\nRather fix the error path: disable all the low level hardware in the\nerror path, by using the \"hsotg-\u003ell_hw_enabled\" flag. Checking dr_mode\nhas been introduced to avoid a dual call to dwc2_lowlevel_hw_disable().\n\"ll_hw_enabled\" should achieve the same (and is used currently in the\nremove() routine).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53056",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Synchronize the IOCB count to be in order\n\nA system hang was observed with the following call trace:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 15 PID: 86747 Comm: nvme Kdump: loaded Not tainted 6.2.0+ #1\nHardware name: Dell Inc. PowerEdge R6515/04F3CJ, BIOS 2.7.3 03/31/2022\nRIP: 0010:__wake_up_common+0x55/0x190\nCode: 41 f6 01 04 0f 85 b2 00 00 00 48 8b 43 08 4c 8d\n      40 e8 48 8d 43 08 48 89 04 24 48 89 c6\\\n      49 8d 40 18 48 39 c6 0f 84 e9 00 00 00 \u003c49\u003e 8b 40 18 89 6c 24 14 31\n      ed 4c 8d 60 e8 41 8b 18 f6 c3 04 75 5d\nRSP: 0018:ffffb05a82afbba0 EFLAGS: 00010082\nRAX: 0000000000000000 RBX: ffff8f9b83a00018 RCX: 0000000000000000\nRDX: 0000000000000001 RSI: ffff8f9b83a00020 RDI: ffff8f9b83a00018\nRBP: 0000000000000001 R08: ffffffffffffffe8 R09: ffffb05a82afbbf8\nR10: 70735f7472617473 R11: 5f30307832616c71 R12: 0000000000000001\nR13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007f815cf4c740(0000) GS:ffff8f9eeed80000(0000)\n\tknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000010633a000 CR4: 0000000000350ee0\nCall Trace:\n    \u003cTASK\u003e\n    __wake_up_common_lock+0x83/0xd0\n    qla_nvme_ls_req+0x21b/0x2b0 [qla2xxx]\n    __nvme_fc_send_ls_req+0x1b5/0x350 [nvme_fc]\n    nvme_fc_xmt_disconnect_assoc+0xca/0x110 [nvme_fc]\n    nvme_fc_delete_association+0x1bf/0x220 [nvme_fc]\n    ? nvme_remove_namespaces+0x9f/0x140 [nvme_core]\n    nvme_do_delete_ctrl+0x5b/0xa0 [nvme_core]\n    nvme_sysfs_delete+0x5f/0x70 [nvme_core]\n    kernfs_fop_write_iter+0x12b/0x1c0\n    vfs_write+0x2a3/0x3b0\n    ksys_write+0x5f/0xe0\n    do_syscall_64+0x5c/0x90\n    ? syscall_exit_work+0x103/0x130\n    ? syscall_exit_to_user_mode+0x12/0x30\n    ? do_syscall_64+0x69/0x90\n    ? exit_to_user_mode_loop+0xd0/0x130\n    ? exit_to_user_mode_prepare+0xec/0x100\n    ? syscall_exit_to_user_mode+0x12/0x30\n    ? do_syscall_64+0x69/0x90\n    ? syscall_exit_to_user_mode+0x12/0x30\n    ? do_syscall_64+0x69/0x90\n    entry_SYSCALL_64_after_hwframe+0x72/0xdc\n    RIP: 0033:0x7f815cd3eb97\n\nThe IOCB counts are out of order and that would block any commands from\ngoing out and subsequently hang the system. Synchronize the IOCB count to\nbe in correct order.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53058",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: E-Switch, Fix an Oops in error handling code\n\nThe error handling dereferences \"vport\".  There is nothing we can do if\nit is an error pointer except returning the error code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/chrome: cros_ec_chardev: fix kernel data leak from ioctl\n\nIt is possible to peep kernel page's data by providing larger `insize`\nin struct cros_ec_command[1] when invoking EC host commands.\n\nFix it by using zeroed memory.\n\n[1]: https://elixir.bootlin.com/linux/v6.2/source/include/linux/platform_data/cros_ec_proto.h#L74",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigb: revert rtnl_lock() that causes deadlock\n\nThe commit 6faee3d4ee8b (\"igb: Add lock to avoid data race\") adds\nrtnl_lock to eliminate a false data race shown below\n\n (FREE from device detaching)      |   (USE from netdev core)\nigb_remove                         |  igb_ndo_get_vf_config\n igb_disable_sriov                 |  vf \u003e= adapter-\u003evfs_allocated_count?\n  kfree(adapter-\u003evf_data)          |\n  adapter-\u003evfs_allocated_count = 0 |\n                                   |    memcpy(... adapter-\u003evf_data[vf]\n\nThe above race will never happen and the extra rtnl_lock causes deadlock\nbelow\n\n[  141.420169]  \u003cTASK\u003e\n[  141.420672]  __schedule+0x2dd/0x840\n[  141.421427]  schedule+0x50/0xc0\n[  141.422041]  schedule_preempt_disabled+0x11/0x20\n[  141.422678]  __mutex_lock.isra.13+0x431/0x6b0\n[  141.423324]  unregister_netdev+0xe/0x20\n[  141.423578]  igbvf_remove+0x45/0xe0 [igbvf]\n[  141.423791]  pci_device_remove+0x36/0xb0\n[  141.423990]  device_release_driver_internal+0xc1/0x160\n[  141.424270]  pci_stop_bus_device+0x6d/0x90\n[  141.424507]  pci_stop_and_remove_bus_device+0xe/0x20\n[  141.424789]  pci_iov_remove_virtfn+0xba/0x120\n[  141.425452]  sriov_disable+0x2f/0xf0\n[  141.425679]  igb_disable_sriov+0x4e/0x100 [igb]\n[  141.426353]  igb_remove+0xa0/0x130 [igb]\n[  141.426599]  pci_device_remove+0x36/0xb0\n[  141.426796]  device_release_driver_internal+0xc1/0x160\n[  141.427060]  driver_detach+0x44/0x90\n[  141.427253]  bus_remove_driver+0x55/0xe0\n[  141.427477]  pci_unregister_driver+0x2a/0xa0\n[  141.428296]  __x64_sys_delete_module+0x141/0x2b0\n[  141.429126]  ? mntput_no_expire+0x4a/0x240\n[  141.429363]  ? syscall_trace_enter.isra.19+0x126/0x1a0\n[  141.429653]  do_syscall_64+0x5b/0x80\n[  141.429847]  ? exit_to_user_mode_prepare+0x14d/0x1c0\n[  141.430109]  ? syscall_exit_to_user_mode+0x12/0x30\n[  141.430849]  ? do_syscall_64+0x67/0x80\n[  141.431083]  ? syscall_exit_to_user_mode_prepare+0x183/0x1b0\n[  141.431770]  ? syscall_exit_to_user_mode+0x12/0x30\n[  141.432482]  ? do_syscall_64+0x67/0x80\n[  141.432714]  ? exc_page_fault+0x64/0x140\n[  141.432911]  entry_SYSCALL_64_after_hwframe+0x72/0xdc\n\nSince the igb_disable_sriov() will call pci_disable_sriov() before\nreleasing any resources, the netdev core will synchronize the cleanup to\navoid any races. This patch removes the useless rtnl_(un)lock to guarantee\ncorrectness.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc95xx: Limit packet length to skb-\u003elen\n\nPacket length retrieved from descriptor may be larger than\nthe actual socket buffer length. In such case the cloned\nskb passed up the network stack will leak kernel memory contents.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53064",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niavf: fix hang on reboot with ice\n\nWhen a system with E810 with existing VFs gets rebooted the following\nhang may be observed.\n\n Pid 1 is hung in iavf_remove(), part of a network driver:\n PID: 1        TASK: ffff965400e5a340  CPU: 24   COMMAND: \"systemd-shutdow\"\n  #0 [ffffaad04005fa50] __schedule at ffffffff8b3239cb\n  #1 [ffffaad04005fae8] schedule at ffffffff8b323e2d\n  #2 [ffffaad04005fb00] schedule_hrtimeout_range_clock at ffffffff8b32cebc\n  #3 [ffffaad04005fb80] usleep_range_state at ffffffff8b32c930\n  #4 [ffffaad04005fbb0] iavf_remove at ffffffffc12b9b4c [iavf]\n  #5 [ffffaad04005fbf0] pci_device_remove at ffffffff8add7513\n  #6 [ffffaad04005fc10] device_release_driver_internal at ffffffff8af08baa\n  #7 [ffffaad04005fc40] pci_stop_bus_device at ffffffff8adcc5fc\n  #8 [ffffaad04005fc60] pci_stop_and_remove_bus_device at ffffffff8adcc81e\n  #9 [ffffaad04005fc70] pci_iov_remove_virtfn at ffffffff8adf9429\n #10 [ffffaad04005fca8] sriov_disable at ffffffff8adf98e4\n #11 [ffffaad04005fcc8] ice_free_vfs at ffffffffc04bb2c8 [ice]\n #12 [ffffaad04005fd10] ice_remove at ffffffffc04778fe [ice]\n #13 [ffffaad04005fd38] ice_shutdown at ffffffffc0477946 [ice]\n #14 [ffffaad04005fd50] pci_device_shutdown at ffffffff8add58f1\n #15 [ffffaad04005fd70] device_shutdown at ffffffff8af05386\n #16 [ffffaad04005fd98] kernel_restart at ffffffff8a92a870\n #17 [ffffaad04005fda8] __do_sys_reboot at ffffffff8a92abd6\n #18 [ffffaad04005fee0] do_syscall_64 at ffffffff8b317159\n #19 [ffffaad04005ff08] __context_tracking_enter at ffffffff8b31b6fc\n #20 [ffffaad04005ff18] syscall_exit_to_user_mode at ffffffff8b31b50d\n #21 [ffffaad04005ff28] do_syscall_64 at ffffffff8b317169\n #22 [ffffaad04005ff50] entry_SYSCALL_64_after_hwframe at ffffffff8b40009b\n     RIP: 00007f1baa5c13d7  RSP: 00007fffbcc55a98  RFLAGS: 00000202\n     RAX: ffffffffffffffda  RBX: 0000000000000000  RCX: 00007f1baa5c13d7\n     RDX: 0000000001234567  RSI: 0000000028121969  RDI: 00000000fee1dead\n     RBP: 00007fffbcc55ca0   R8: 0000000000000000   R9: 00007fffbcc54e90\n     R10: 00007fffbcc55050  R11: 0000000000000202  R12: 0000000000000005\n     R13: 0000000000000000  R14: 00007fffbcc55af0  R15: 0000000000000000\n     ORIG_RAX: 00000000000000a9  CS: 0033  SS: 002b\n\nDuring reboot all drivers PM shutdown callbacks are invoked.\nIn iavf_shutdown() the adapter state is changed to __IAVF_REMOVE.\nIn ice_shutdown() the call chain above is executed, which at some point\ncalls iavf_remove(). However iavf_remove() expects the VF to be in one\nof the states __IAVF_RUNNING, __IAVF_DOWN or __IAVF_INIT_FAILED. If\nthat's not the case it sleeps forever.\nSo if iavf_shutdown() gets invoked before iavf_remove() the system will\nhang indefinitely because the adapter is already in state __IAVF_REMOVE.\n\nFix this by returning from iavf_remove() if the state is __IAVF_REMOVE,\nas we already went through iavf_shutdown().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53065",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/core: Fix perf_output_begin parameter is incorrectly invoked in perf_event_bpf_output\n\nsyzkaller reportes a KASAN issue with stack-out-of-bounds.\nThe call trace is as follows:\n  dump_stack+0x9c/0xd3\n  print_address_description.constprop.0+0x19/0x170\n  __kasan_report.cold+0x6c/0x84\n  kasan_report+0x3a/0x50\n  __perf_event_header__init_id+0x34/0x290\n  perf_event_header__init_id+0x48/0x60\n  perf_output_begin+0x4a4/0x560\n  perf_event_bpf_output+0x161/0x1e0\n  perf_iterate_sb_cpu+0x29e/0x340\n  perf_iterate_sb+0x4c/0xc0\n  perf_event_bpf_event+0x194/0x2c0\n  __bpf_prog_put.constprop.0+0x55/0xf0\n  __cls_bpf_delete_prog+0xea/0x120 [cls_bpf]\n  cls_bpf_delete_prog_work+0x1c/0x30 [cls_bpf]\n  process_one_work+0x3c2/0x730\n  worker_thread+0x93/0x650\n  kthread+0x1b8/0x210\n  ret_from_fork+0x1f/0x30\n\ncommit 267fb27352b6 (\"perf: Reduce stack usage of perf_output_begin()\")\nuse on-stack struct perf_sample_data of the caller function.\n\nHowever, perf_event_bpf_output uses incorrect parameter to convert\nsmall-sized data (struct perf_bpf_event) into large-sized data\n(struct perf_sample_data), which causes memory overwriting occurs in\n__perf_event_header__init_id.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53066",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nqed/qed_sriov: guard against NULL derefs from qed_iov_get_vf_info\n\nWe have to make sure that the info returned by the helper is valid\nbefore using it.\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE\nstatic analysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: lan78xx: Limit packet length to skb-\u003elen\n\nPacket length retrieved from descriptor may be larger than\nthe actual socket buffer length. In such case the cloned\nskb passed up the network stack will leak kernel memory contents.\n\nAdditionally prevent integer underflow when size is less than\nETH_FCS_LEN.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53075",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix invalid address access in lookup_rec() when index is 0\n\nKASAN reported follow problem:\n\n BUG: KASAN: use-after-free in lookup_rec\n Read of size 8 at addr ffff000199270ff0 by task modprobe\n CPU: 2 Comm: modprobe\n Call trace:\n  kasan_report\n  __asan_load8\n  lookup_rec\n  ftrace_location\n  arch_check_ftrace_location\n  check_kprobe_address_safe\n  register_kprobe\n\nWhen checking pg-\u003erecords[pg-\u003eindex - 1].ip in lookup_rec(), it can get a\npg which is newly added to ftrace_pages_start in ftrace_process_locs().\nBefore the first pg-\u003eindex++, index is 0 and accessing pg-\u003erecords[-1].ip\nwill cause this problem.\n\nDon't check the ip when pg-\u003eindex is 0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53076",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: fix shift-out-of-bounds in CalculateVMAndRowBytes\n\n[WHY]\nWhen PTEBufferSizeInRequests is zero, UBSAN reports the following\nwarning because dml_log2 returns an unexpected negative value:\n\n  shift exponent 4294966273 is too large for 32-bit type 'int'\n\n[HOW]\n\nIn the case PTEBufferSizeInRequests is zero, skip the dml_log2() and\nassign the result directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_dh_alua: Fix memleak for 'qdata' in alua_activate()\n\nIf alua_rtpg_queue() failed from alua_activate(), then 'qdata' is not\nfreed, which will cause following memleak:\n\nunreferenced object 0xffff88810b2c6980 (size 32):\n  comm \"kworker/u16:2\", pid 635322, jiffies 4355801099 (age 1216426.076s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    40 39 24 c1 ff ff ff ff 00 f8 ea 0a 81 88 ff ff  @9$.............\n  backtrace:\n    [\u003c0000000098f3a26d\u003e] alua_activate+0xb0/0x320\n    [\u003c000000003b529641\u003e] scsi_dh_activate+0xb2/0x140\n    [\u003c000000007b296db3\u003e] activate_path_work+0xc6/0xe0 [dm_multipath]\n    [\u003c000000007adc9ace\u003e] process_one_work+0x3c5/0x730\n    [\u003c00000000c457a985\u003e] worker_thread+0x93/0x650\n    [\u003c00000000cb80e628\u003e] kthread+0x1ba/0x210\n    [\u003c00000000a1e61077\u003e] ret_from_fork+0x22/0x30\n\nFix the problem by freeing 'qdata' in error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53079",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5: Fix steering rules cleanup\n\nvport's mc, uc and multicast rules are not deleted in teardown path when\nEEH happens. Since the vport's promisc settings(uc, mc and all) in\nfirmware are reset after EEH, mlx5 driver will try to delete the above\nrules in the initialization path. This cause kernel crash because these\nsoftware rules are no longer valid.\n\nFix by nullifying these rules right after delete to avoid accessing any dangling\npointers.\n\nCall Trace:\n__list_del_entry_valid+0xcc/0x100 (unreliable)\ntree_put_node+0xf4/0x1b0 [mlx5_core]\ntree_remove_node+0x30/0x70 [mlx5_core]\nmlx5_del_flow_rules+0x14c/0x1f0 [mlx5_core]\nesw_apply_vport_rx_mode+0x10c/0x200 [mlx5_core]\nesw_update_vport_rx_mode+0xb4/0x180 [mlx5_core]\nesw_vport_change_handle_locked+0x1ec/0x230 [mlx5_core]\nesw_enable_vport+0x130/0x260 [mlx5_core]\nmlx5_eswitch_enable_sriov+0x2a0/0x2f0 [mlx5_core]\nmlx5_device_enable_sriov+0x74/0x440 [mlx5_core]\nmlx5_load_one+0x114c/0x1550 [mlx5_core]\nmlx5_pci_resume+0x68/0xf0 [mlx5_core]\neeh_report_resume+0x1a4/0x230\neeh_pe_dev_traverse+0x98/0x170\neeh_handle_normal_event+0x3e4/0x640\neeh_handle_event+0x4c/0x370\neeh_event_handler+0x14c/0x210\nkthread+0x168/0x1b0\nret_from_kernel_thread+0x5c/0x84",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53081",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix data corruption after failed write\n\nWhen buffered write fails to copy data into underlying page cache page,\nocfs2_write_end_nolock() just zeroes out and dirties the page.  This can\nleave dirty page beyond EOF and if page writeback tries to write this page\nbefore write succeeds and expands i_size, page gets into inconsistent\nstate where page dirty bit is clear but buffer dirty bits stay set\nresulting in page data never getting written and so data copied to the\npage is lost.  Fix the problem by invalidating page beyond EOF after\nfailed write.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53084",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/shmem-helper: Remove another errant put in error path\n\ndrm_gem_shmem_mmap() doesn't own reference in error code path, resulting\nin the dma-buf shmem GEM object getting prematurely freed leading to a\nlater use-after-free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53087",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/active: Fix misuse of non-idle barriers as fence trackers\n\nUsers reported oopses on list corruptions when using i915 perf with a\nnumber of concurrently running graphics applications.  Root cause analysis\npointed at an issue in barrier processing code -- a race among perf open /\nclose replacing active barriers with perf requests on kernel context and\nconcurrent barrier preallocate / acquire operations performed during user\ncontext first pin / last unpin.\n\nWhen adding a request to a composite tracker, we try to reuse an existing\nfence tracker, already allocated and registered with that composite.  The\ntracker we obtain may already track another fence, may be an idle barrier,\nor an active barrier.\n\nIf the tracker we get occurs a non-idle barrier then we try to delete that\nbarrier from a list of barrier tasks it belongs to.  However, while doing\nthat we don't respect return value from a function that performs the\nbarrier deletion.  Should the deletion ever fail, we would end up reusing\nthe tracker still registered as a barrier task.  Since the same structure\nfield is reused with both fence callback lists and barrier tasks list,\nlist corruptions would likely occur.\n\nBarriers are now deleted from a barrier tasks list by temporarily removing\nthe list content, traversing that content with skip over the node to be\ndeleted, then populating the list back with the modified content.  Should\nthat intentionally racy concurrent deletion attempts be not serialized,\none or more of those may fail because of the list being temporary empty.\n\nRelated code that ignores the results of barrier deletion was initially\nintroduced in v5.4 by commit d8af05ff38ae (\"drm/i915: Allow sharing the\nidle-barrier from other kernel requests\").  However, all users of the\nbarrier deletion routine were apparently serialized at that time, then the\nissue didn't exhibit itself.  Results of git bisect with help of a newly\ndeveloped igt@gem_barrier_race@remote-request IGT test indicate that list\ncorruptions might start to appear after commit 311770173fac (\"drm/i915/gt:\nSchedule request retirement when timeline idles\"), introduced in v5.5.\n\nRespect results of barrier deletion attempts -- mark the barrier as idle\nonly if successfully deleted from the list.  Then, before proceeding with\nsetting our fence as the one currently tracked, make sure that the tracker\nwe've got is not a non-idle barrier.  If that check fails then don't use\nthat tracker but go back and try to acquire a new, usable one.\n\nv3: use unlikely() to document what outcome we expect (Andi),\n  - fix bad grammar in commit description.\nv2: no code changes,\n  - blame commit 311770173fac (\"drm/i915/gt: Schedule request retirement\n    when timeline idles\"), v5.5, not commit d8af05ff38ae (\"drm/i915: Allow\n    sharing the idle-barrier from other kernel requests\"), v5.4,\n  - reword commit description.\n\n(cherry picked from commit 506006055769b10d1b2b4e22f636f3b45e0e9fc7)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53089",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix task hung in ext4_xattr_delete_inode\n\nSyzbot reported a hung task problem:\n==================================================================\nINFO: task syz-executor232:5073 blocked for more than 143 seconds.\n      Not tainted 6.2.0-rc2-syzkaller-00024-g512dee0c00ad #0\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:syz-exec232 state:D stack:21024 pid:5073 ppid:5072 flags:0x00004004\nCall Trace:\n \u003cTASK\u003e\n context_switch kernel/sched/core.c:5244 [inline]\n __schedule+0x995/0xe20 kernel/sched/core.c:6555\n schedule+0xcb/0x190 kernel/sched/core.c:6631\n __wait_on_freeing_inode fs/inode.c:2196 [inline]\n find_inode_fast+0x35a/0x4c0 fs/inode.c:950\n iget_locked+0xb1/0x830 fs/inode.c:1273\n __ext4_iget+0x22e/0x3ed0 fs/ext4/inode.c:4861\n ext4_xattr_inode_iget+0x68/0x4e0 fs/ext4/xattr.c:389\n ext4_xattr_inode_dec_ref_all+0x1a7/0xe50 fs/ext4/xattr.c:1148\n ext4_xattr_delete_inode+0xb04/0xcd0 fs/ext4/xattr.c:2880\n ext4_evict_inode+0xd7c/0x10b0 fs/ext4/inode.c:296\n evict+0x2a4/0x620 fs/inode.c:664\n ext4_orphan_cleanup+0xb60/0x1340 fs/ext4/orphan.c:474\n __ext4_fill_super fs/ext4/super.c:5516 [inline]\n ext4_fill_super+0x81cd/0x8700 fs/ext4/super.c:5644\n get_tree_bdev+0x400/0x620 fs/super.c:1282\n vfs_get_tree+0x88/0x270 fs/super.c:1489\n do_new_mount+0x289/0xad0 fs/namespace.c:3145\n do_mount fs/namespace.c:3488 [inline]\n __do_sys_mount fs/namespace.c:3697 [inline]\n __se_sys_mount+0x2d3/0x3c0 fs/namespace.c:3674\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\nRIP: 0033:0x7fa5406fd5ea\nRSP: 002b:00007ffc7232f968 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fa5406fd5ea\nRDX: 0000000020000440 RSI: 0000000020000000 RDI: 00007ffc7232f970\nRBP: 00007ffc7232f970 R08: 00007ffc7232f9b0 R09: 0000000000000432\nR10: 0000000000804a03 R11: 0000000000000202 R12: 0000000000000004\nR13: 0000555556a7a2c0 R14: 00007ffc7232f9b0 R15: 0000000000000000\n \u003c/TASK\u003e\n==================================================================\n\nThe problem is that the inode contains an xattr entry with ea_inum of 15\nwhen cleaning up an orphan inode \u003c15\u003e. When evict inode \u003c15\u003e, the reference\ncounting of the corresponding EA inode is decreased. When EA inode \u003c15\u003e is\nfound by find_inode_fast() in __ext4_iget(), it is found that the EA inode\nholds the I_FREEING flag and waits for the EA inode to complete deletion.\nAs a result, when inode \u003c15\u003e is being deleted, we wait for inode \u003c15\u003e to\ncomplete the deletion, resulting in an infinite loop and triggering Hung\nTask. To solve this problem, we only need to check whether the ino of EA\ninode and parent is the same before getting EA inode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix an illegal memory access\n\nIn the kfd_wait_on_events() function, the kfd_event_waiter structure is\nallocated by alloc_event_waiters(), but the event field of the waiter\nstructure is not initialized; When copy_from_user() fails in the\nkfd_wait_on_events() function, it will enter exception handling to\nrelease the previously allocated memory of the waiter structure;\nDue to the event field of the waiters structure being accessed\nin the free_waiters() function, this results in illegal memory access\nand system crash, here is the crash log:\n\nlocalhost kernel: RIP: 0010:native_queued_spin_lock_slowpath+0x185/0x1e0\nlocalhost kernel: RSP: 0018:ffffaa53c362bd60 EFLAGS: 00010082\nlocalhost kernel: RAX: ff3d3d6bff4007cb RBX: 0000000000000282 RCX: 00000000002c0000\nlocalhost kernel: RDX: ffff9e855eeacb80 RSI: 000000000000279c RDI: ffffe7088f6a21d0\nlocalhost kernel: RBP: ffffe7088f6a21d0 R08: 00000000002c0000 R09: ffffaa53c362be64\nlocalhost kernel: R10: ffffaa53c362bbd8 R11: 0000000000000001 R12: 0000000000000002\nlocalhost kernel: R13: ffff9e7ead15d600 R14: 0000000000000000 R15: ffff9e7ead15d698\nlocalhost kernel: FS:  0000152a3d111700(0000) GS:ffff9e855ee80000(0000) knlGS:0000000000000000\nlocalhost kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nlocalhost kernel: CR2: 0000152938000010 CR3: 000000044d7a4000 CR4: 00000000003506e0\nlocalhost kernel: Call Trace:\nlocalhost kernel: _raw_spin_lock_irqsave+0x30/0x40\nlocalhost kernel: remove_wait_queue+0x12/0x50\nlocalhost kernel: kfd_wait_on_events+0x1b6/0x490 [hydcu]\nlocalhost kernel: ? ftrace_graph_caller+0xa0/0xa0\nlocalhost kernel: kfd_ioctl+0x38c/0x4a0 [hydcu]\nlocalhost kernel: ? kfd_ioctl_set_trap_handler+0x70/0x70 [hydcu]\nlocalhost kernel: ? kfd_ioctl_create_queue+0x5a0/0x5a0 [hydcu]\nlocalhost kernel: ? ftrace_graph_caller+0xa0/0xa0\nlocalhost kernel: __x64_sys_ioctl+0x8e/0xd0\nlocalhost kernel: ? syscall_trace_enter.isra.18+0x143/0x1b0\nlocalhost kernel: do_syscall_64+0x33/0x80\nlocalhost kernel: entry_SYSCALL_64_after_hwframe+0x44/0xa9\nlocalhost kernel: RIP: 0033:0x152a4dff68d7\n\nAllocate the structure with kcalloc, and remove redundant 0-initialization\nand a redundant loop condition check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53091",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: update s_journal_inum if it changes after journal replay\n\nWhen mounting a crafted ext4 image, s_journal_inum may change after journal\nreplay, which is obviously unreasonable because we have successfully loaded\nand replayed the journal through the old s_journal_inum. And the new\ns_journal_inum bypasses some of the checks in ext4_get_journal(), which\nmay trigger a null pointer dereference problem. So if s_journal_inum\nchanges after the journal replay, we ignore the change, and rewrite the\ncurrent journal_inum to the superblock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53092",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninterconnect: exynos: fix node leak in probe PM QoS error path\n\nMake sure to add the newly allocated interconnect node to the provider\nbefore adding the PM QoS request so that the node is freed on errors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Do not let histogram values have some modifiers\n\nHistogram values can not be strings, stacktraces, graphs, symbols,\nsyscalls, or grouped in buckets or log. Give an error if a value is set to\ndo so.\n\nNote, the histogram code was not prepared to handle these modifiers for\nhistograms and caused a bug.\n\nMark Rutland reported:\n\n # echo 'p:copy_to_user __arch_copy_to_user n=$arg2' \u003e\u003e /sys/kernel/tracing/kprobe_events\n # echo 'hist:keys=n:vals=hitcount.buckets=8:sort=hitcount' \u003e /sys/kernel/tracing/events/kprobes/copy_to_user/trigger\n # cat /sys/kernel/tracing/events/kprobes/copy_to_user/hist\n[  143.694628] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[  143.695190] Mem abort info:\n[  143.695362]   ESR = 0x0000000096000004\n[  143.695604]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  143.695889]   SET = 0, FnV = 0\n[  143.696077]   EA = 0, S1PTW = 0\n[  143.696302]   FSC = 0x04: level 0 translation fault\n[  143.702381] Data abort info:\n[  143.702614]   ISV = 0, ISS = 0x00000004\n[  143.702832]   CM = 0, WnR = 0\n[  143.703087] user pgtable: 4k pages, 48-bit VAs, pgdp=00000000448f9000\n[  143.703407] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n[  143.704137] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[  143.704714] Modules linked in:\n[  143.705273] CPU: 0 PID: 133 Comm: cat Not tainted 6.2.0-00003-g6fc512c10a7c #3\n[  143.706138] Hardware name: linux,dummy-virt (DT)\n[  143.706723] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  143.707120] pc : hist_field_name.part.0+0x14/0x140\n[  143.707504] lr : hist_field_name.part.0+0x104/0x140\n[  143.707774] sp : ffff800008333a30\n[  143.707952] x29: ffff800008333a30 x28: 0000000000000001 x27: 0000000000400cc0\n[  143.708429] x26: ffffd7a653b20260 x25: 0000000000000000 x24: ffff10d303ee5800\n[  143.708776] x23: ffffd7a6539b27b0 x22: ffff10d303fb8c00 x21: 0000000000000001\n[  143.709127] x20: ffff10d303ec2000 x19: 0000000000000000 x18: 0000000000000000\n[  143.709478] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[  143.709824] x14: 0000000000000000 x13: 203a6f666e692072 x12: 6567676972742023\n[  143.710179] x11: 0a230a6d6172676f x10: 000000000000002c x9 : ffffd7a6521e018c\n[  143.710584] x8 : 000000000000002c x7 : 7f7f7f7f7f7f7f7f x6 : 000000000000002c\n[  143.710915] x5 : ffff10d303b0103e x4 : ffffd7a653b20261 x3 : 000000000000003d\n[  143.711239] x2 : 0000000000020001 x1 : 0000000000000001 x0 : 0000000000000000\n[  143.711746] Call trace:\n[  143.712115]  hist_field_name.part.0+0x14/0x140\n[  143.712642]  hist_field_name.part.0+0x104/0x140\n[  143.712925]  hist_field_print+0x28/0x140\n[  143.713125]  event_hist_trigger_print+0x174/0x4d0\n[  143.713348]  hist_show+0xf8/0x980\n[  143.713521]  seq_read_iter+0x1bc/0x4b0\n[  143.713711]  seq_read+0x8c/0xc4\n[  143.713876]  vfs_read+0xc8/0x2a4\n[  143.714043]  ksys_read+0x70/0xfc\n[  143.714218]  __arm64_sys_read+0x24/0x30\n[  143.714400]  invoke_syscall+0x50/0x120\n[  143.714587]  el0_svc_common.constprop.0+0x4c/0x100\n[  143.714807]  do_el0_svc+0x44/0xd0\n[  143.714970]  el0_svc+0x2c/0x84\n[  143.715134]  el0t_64_sync_handler+0xbc/0x140\n[  143.715334]  el0t_64_sync+0x190/0x194\n[  143.715742] Code: a9bd7bfd 910003fd a90153f3 aa0003f3 (f9400000)\n[  143.716510] ---[ end trace 0000000000000000 ]---\nSegmentation fault",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53096",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninterconnect: fix mem leak when freeing nodes\n\nThe node link array is allocated when adding links to a node but is not\ndeallocated when nodes are destroyed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/iommu: fix memory leak with using debugfs_lookup()\n\nWhen calling debugfs_lookup() the result must have dput() called on it,\notherwise the memory will leak over time.  To make things simpler, just\ncall debugfs_lookup_and_remove() instead which handles all of the logic\nat once.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53098",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rc: gpio-ir-recv: add remove function\n\nIn case runtime PM is enabled, do runtime PM clean up to remove\ncpu latency qos request, otherwise driver removal may have below\nkernel dump:\n\n[   19.463299] Unable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000048\n[   19.472161] Mem abort info:\n[   19.474985]   ESR = 0x0000000096000004\n[   19.478754]   EC = 0x25: DABT (current EL), IL = 32 bits\n[   19.484081]   SET = 0, FnV = 0\n[   19.487149]   EA = 0, S1PTW = 0\n[   19.490361]   FSC = 0x04: level 0 translation fault\n[   19.495256] Data abort info:\n[   19.498149]   ISV = 0, ISS = 0x00000004\n[   19.501997]   CM = 0, WnR = 0\n[   19.504977] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000049f81000\n[   19.511432] [0000000000000048] pgd=0000000000000000,\np4d=0000000000000000\n[   19.518245] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[   19.524520] Modules linked in: gpio_ir_recv(+) rc_core [last\nunloaded: rc_core]\n[   19.531845] CPU: 0 PID: 445 Comm: insmod Not tainted\n6.2.0-rc1-00028-g2c397a46d47c #72\n[   19.531854] Hardware name: FSL i.MX8MM EVK board (DT)\n[   19.531859] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS\nBTYPE=--)\n[   19.551777] pc : cpu_latency_qos_remove_request+0x20/0x110\n[   19.557277] lr : gpio_ir_recv_runtime_suspend+0x18/0x30\n[gpio_ir_recv]\n[   19.557294] sp : ffff800008ce3740\n[   19.557297] x29: ffff800008ce3740 x28: 0000000000000000 x27:\nffff800008ce3d50\n[   19.574270] x26: ffffc7e3e9cea100 x25: 00000000000f4240 x24:\nffffc7e3f9ef0e30\n[   19.574284] x23: 0000000000000000 x22: ffff0061803820f4 x21:\n0000000000000008\n[   19.574296] x20: ffffc7e3fa75df30 x19: 0000000000000020 x18:\nffffffffffffffff\n[   19.588570] x17: 0000000000000000 x16: ffffc7e3f9efab70 x15:\nffffffffffffffff\n[   19.595712] x14: ffff800008ce37b8 x13: ffff800008ce37aa x12:\n0000000000000001\n[   19.602853] x11: 0000000000000001 x10: ffffcbe3ec0dff87 x9 :\n0000000000000008\n[   19.609991] x8 : 0101010101010101 x7 : 0000000000000000 x6 :\n000000000f0bfe9f\n[   19.624261] x5 : 00ffffffffffffff x4 : 0025ab8e00000000 x3 :\nffff006180382010\n[   19.631405] x2 : ffffc7e3e9ce8030 x1 : ffffc7e3fc3eb810 x0 :\n0000000000000020\n[   19.638548] Call trace:\n[   19.640995]  cpu_latency_qos_remove_request+0x20/0x110\n[   19.646142]  gpio_ir_recv_runtime_suspend+0x18/0x30 [gpio_ir_recv]\n[   19.652339]  pm_generic_runtime_suspend+0x2c/0x44\n[   19.657055]  __rpm_callback+0x48/0x1dc\n[   19.660807]  rpm_callback+0x6c/0x80\n[   19.664301]  rpm_suspend+0x10c/0x640\n[   19.667880]  rpm_idle+0x250/0x2d0\n[   19.671198]  update_autosuspend+0x38/0xe0\n[   19.675213]  pm_runtime_set_autosuspend_delay+0x40/0x60\n[   19.680442]  gpio_ir_recv_probe+0x1b4/0x21c [gpio_ir_recv]\n[   19.685941]  platform_probe+0x68/0xc0\n[   19.689610]  really_probe+0xc0/0x3dc\n[   19.693189]  __driver_probe_device+0x7c/0x190\n[   19.697550]  driver_probe_device+0x3c/0x110\n[   19.701739]  __driver_attach+0xf4/0x200\n[   19.705578]  bus_for_each_dev+0x70/0xd0\n[   19.709417]  driver_attach+0x24/0x30\n[   19.712998]  bus_add_driver+0x17c/0x240\n[   19.716834]  driver_register+0x78/0x130\n[   19.720676]  __platform_driver_register+0x28/0x34\n[   19.725386]  gpio_ir_recv_driver_init+0x20/0x1000 [gpio_ir_recv]\n[   19.731404]  do_one_initcall+0x44/0x2ac\n[   19.735243]  do_init_module+0x48/0x1d0\n[   19.739003]  load_module+0x19fc/0x2034\n[   19.742759]  __do_sys_finit_module+0xac/0x12c\n[   19.747124]  __arm64_sys_finit_module+0x20/0x30\n[   19.751664]  invoke_syscall+0x48/0x114\n[   19.755420]  el0_svc_common.constprop.0+0xcc/0xec\n[   19.760132]  do_el0_svc+0x38/0xb0\n[   19.763456]  el0_svc+0x2c/0x84\n[   19.766516]  el0t_64_sync_handler+0xf4/0x120\n[   19.770789]  el0t_64_sync+0x190/0x194\n[   19.774460] Code: 910003fd a90153f3 aa0003f3 91204021 (f9401400)\n[   19.780556] ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53099",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: xilinx: don't make a sleepable memory allocation from an atomic context\n\nThe following issue was discovered using lockdep:\n[    6.691371] BUG: sleeping function called from invalid context at include/linux/sched/mm.h:209\n[    6.694602] in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 1, name: swapper/0\n[    6.702431] 2 locks held by swapper/0/1:\n[    6.706300]  #0: ffffff8800f6f188 (\u0026dev-\u003emutex){....}-{3:3}, at: __device_driver_lock+0x4c/0x90\n[    6.714900]  #1: ffffffc009a2abb8 (enable_lock){....}-{2:2}, at: clk_enable_lock+0x4c/0x140\n[    6.723156] irq event stamp: 304030\n[    6.726596] hardirqs last  enabled at (304029): [\u003cffffffc008d17ee0\u003e] _raw_spin_unlock_irqrestore+0xc0/0xd0\n[    6.736142] hardirqs last disabled at (304030): [\u003cffffffc00876bc5c\u003e] clk_enable_lock+0xfc/0x140\n[    6.744742] softirqs last  enabled at (303958): [\u003cffffffc0080904f0\u003e] _stext+0x4f0/0x894\n[    6.752655] softirqs last disabled at (303951): [\u003cffffffc0080e53b8\u003e] irq_exit+0x238/0x280\n[    6.760744] CPU: 1 PID: 1 Comm: swapper/0 Tainted: G     U            5.15.36 #2\n[    6.768048] Hardware name: xlnx,zynqmp (DT)\n[    6.772179] Call trace:\n[    6.774584]  dump_backtrace+0x0/0x300\n[    6.778197]  show_stack+0x18/0x30\n[    6.781465]  dump_stack_lvl+0xb8/0xec\n[    6.785077]  dump_stack+0x1c/0x38\n[    6.788345]  ___might_sleep+0x1a8/0x2a0\n[    6.792129]  __might_sleep+0x6c/0xd0\n[    6.795655]  kmem_cache_alloc_trace+0x270/0x3d0\n[    6.800127]  do_feature_check_call+0x100/0x220\n[    6.804513]  zynqmp_pm_invoke_fn+0x8c/0xb0\n[    6.808555]  zynqmp_pm_clock_getstate+0x90/0xe0\n[    6.813027]  zynqmp_pll_is_enabled+0x8c/0x120\n[    6.817327]  zynqmp_pll_enable+0x38/0xc0\n[    6.821197]  clk_core_enable+0x144/0x400\n[    6.825067]  clk_core_enable+0xd4/0x400\n[    6.828851]  clk_core_enable+0xd4/0x400\n[    6.832635]  clk_core_enable+0xd4/0x400\n[    6.836419]  clk_core_enable+0xd4/0x400\n[    6.840203]  clk_core_enable+0xd4/0x400\n[    6.843987]  clk_core_enable+0xd4/0x400\n[    6.847771]  clk_core_enable+0xd4/0x400\n[    6.851555]  clk_core_enable_lock+0x24/0x50\n[    6.855683]  clk_enable+0x24/0x40\n[    6.858952]  fclk_probe+0x84/0xf0\n[    6.862220]  platform_probe+0x8c/0x110\n[    6.865918]  really_probe+0x110/0x5f0\n[    6.869530]  __driver_probe_device+0xcc/0x210\n[    6.873830]  driver_probe_device+0x64/0x140\n[    6.877958]  __driver_attach+0x114/0x1f0\n[    6.881828]  bus_for_each_dev+0xe8/0x160\n[    6.885698]  driver_attach+0x34/0x50\n[    6.889224]  bus_add_driver+0x228/0x300\n[    6.893008]  driver_register+0xc0/0x1e0\n[    6.896792]  __platform_driver_register+0x44/0x60\n[    6.901436]  fclk_driver_init+0x1c/0x28\n[    6.905220]  do_one_initcall+0x104/0x590\n[    6.909091]  kernel_init_freeable+0x254/0x2bc\n[    6.913390]  kernel_init+0x24/0x130\n[    6.916831]  ret_from_fork+0x10/0x20\n\nFix it by passing the GFP_ATOMIC gfp flag for the corresponding\nmemory allocation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix WARNING in ext4_update_inline_data\n\nSyzbot found the following issue:\nEXT4-fs (loop0): mounted filesystem 00000000-0000-0000-0000-000000000000 without journal. Quota mode: none.\nfscrypt: AES-256-CTS-CBC using implementation \"cts-cbc-aes-aesni\"\nfscrypt: AES-256-XTS using implementation \"xts-aes-aesni\"\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 5071 at mm/page_alloc.c:5525 __alloc_pages+0x30a/0x560 mm/page_alloc.c:5525\nModules linked in:\nCPU: 1 PID: 5071 Comm: syz-executor263 Not tainted 6.2.0-rc1-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022\nRIP: 0010:__alloc_pages+0x30a/0x560 mm/page_alloc.c:5525\nRSP: 0018:ffffc90003c2f1c0 EFLAGS: 00010246\nRAX: ffffc90003c2f220 RBX: 0000000000000014 RCX: 0000000000000000\nRDX: 0000000000000028 RSI: 0000000000000000 RDI: ffffc90003c2f248\nRBP: ffffc90003c2f2d8 R08: dffffc0000000000 R09: ffffc90003c2f220\nR10: fffff52000785e49 R11: 1ffff92000785e44 R12: 0000000000040d40\nR13: 1ffff92000785e40 R14: dffffc0000000000 R15: 1ffff92000785e3c\nFS:  0000555556c0d300(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f95d5e04138 CR3: 00000000793aa000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n __alloc_pages_node include/linux/gfp.h:237 [inline]\n alloc_pages_node include/linux/gfp.h:260 [inline]\n __kmalloc_large_node+0x95/0x1e0 mm/slab_common.c:1113\n __do_kmalloc_node mm/slab_common.c:956 [inline]\n __kmalloc+0xfe/0x190 mm/slab_common.c:981\n kmalloc include/linux/slab.h:584 [inline]\n kzalloc include/linux/slab.h:720 [inline]\n ext4_update_inline_data+0x236/0x6b0 fs/ext4/inline.c:346\n ext4_update_inline_dir fs/ext4/inline.c:1115 [inline]\n ext4_try_add_inline_entry+0x328/0x990 fs/ext4/inline.c:1307\n ext4_add_entry+0x5a4/0xeb0 fs/ext4/namei.c:2385\n ext4_add_nondir+0x96/0x260 fs/ext4/namei.c:2772\n ext4_create+0x36c/0x560 fs/ext4/namei.c:2817\n lookup_open fs/namei.c:3413 [inline]\n open_last_lookups fs/namei.c:3481 [inline]\n path_openat+0x12ac/0x2dd0 fs/namei.c:3711\n do_filp_open+0x264/0x4f0 fs/namei.c:3741\n do_sys_openat2+0x124/0x4e0 fs/open.c:1310\n do_sys_open fs/open.c:1326 [inline]\n __do_sys_openat fs/open.c:1342 [inline]\n __se_sys_openat fs/open.c:1337 [inline]\n __x64_sys_openat+0x243/0x290 fs/open.c:1337\n do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\nAbove issue happens as follows:\next4_iget\n   ext4_find_inline_data_nolock -\u003ei_inline_off=164 i_inline_size=60\next4_try_add_inline_entry\n   __ext4_mark_inode_dirty\n      ext4_expand_extra_isize_ea -\u003ei_extra_isize=32 s_want_extra_isize=44\n         ext4_xattr_shift_entries\n\t -\u003eafter shift i_inline_off is incorrect, actually is change to 176\next4_try_add_inline_entry\n  ext4_update_inline_dir\n    get_max_inline_xattr_value_size\n      if (EXT4_I(inode)-\u003ei_inline_off)\n\tentry = (struct ext4_xattr_entry *)((void *)raw_inode +\n\t\t\tEXT4_I(inode)-\u003ei_inline_off);\n        free += EXT4_XATTR_SIZE(le32_to_cpu(entry-\u003ee_value_size));\n\t-\u003eAs entry is incorrect, then 'free' may be negative\n   ext4_update_inline_data\n      value = kzalloc(len, GFP_NOFS);\n      -\u003e len is unsigned int, maybe very large, then trigger warning when\n         'kzalloc()'\n\nTo resolve the above issue we need to update 'i_inline_off' after\n'ext4_xattr_shift_entries()'.  We do not need to set\nEXT4_STATE_MAY_INLINE_DATA flag here, since ext4_mark_inode_dirty()\nalready sets this flag if needed.  Setting EXT4_STATE_MAY_INLINE_DATA\nwhen it is needed may trigger a BUG_ON in ext4_writepages().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53101",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: zero i_disksize when initializing the bootloader inode\n\nIf the boot loader inode has never been used before, the\nEXT4_IOC_SWAP_BOOT inode will initialize it, including setting the\ni_size to 0.  However, if the \"never before used\" boot loader has a\nnon-zero i_size, then i_disksize will be non-zero, and the\ninconsistency between i_size and i_disksize can trigger a kernel\nwarning:\n\n WARNING: CPU: 0 PID: 2580 at fs/ext4/file.c:319\n CPU: 0 PID: 2580 Comm: bb Not tainted 6.3.0-rc1-00004-g703695902cfa\n RIP: 0010:ext4_file_write_iter+0xbc7/0xd10\n Call Trace:\n  vfs_write+0x3b1/0x5c0\n  ksys_write+0x77/0x160\n  __x64_sys_write+0x22/0x30\n  do_syscall_64+0x39/0x80\n\nReproducer:\n 1. create corrupted image and mount it:\n       mke2fs -t ext4 /tmp/foo.img 200\n       debugfs -wR \"sif \u003c5\u003e size 25700\" /tmp/foo.img\n       mount -t ext4 /tmp/foo.img /mnt\n       cd /mnt\n       echo 123 \u003e file\n 2. Run the reproducer program:\n       posix_memalign(\u0026buf, 1024, 1024)\n       fd = open(\"file\", O_RDWR | O_DIRECT);\n       ioctl(fd, EXT4_IOC_SWAP_BOOT);\n       write(fd, buf, 1024);\n\nFix this by setting i_disksize as well as i_size to zero when\ninitiaizing the boot loader inode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53108",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/iucv: Fix size of interrupt data\n\niucv_irq_data needs to be 4 bytes larger.\nThese bytes are not used by the iucv module, but written by\nthe z/VM hypervisor in case a CPU is deconfigured.\n\nReported as:\nBUG dma-kmalloc-64 (Not tainted): kmalloc Redzone overwritten\n-----------------------------------------------------------------------------\n0x0000000000400564-0x0000000000400567 @offset=1380. First byte 0x80 instead of 0xcc\nAllocated in iucv_cpu_prepare+0x44/0xd0 age=167839 cpu=2 pid=1\n__kmem_cache_alloc_node+0x166/0x450\nkmalloc_node_trace+0x3a/0x70\niucv_cpu_prepare+0x44/0xd0\ncpuhp_invoke_callback+0x156/0x2f0\ncpuhp_issue_call+0xf0/0x298\n__cpuhp_setup_state_cpuslocked+0x136/0x338\n__cpuhp_setup_state+0xf4/0x288\niucv_init+0xf4/0x280\ndo_one_initcall+0x78/0x390\ndo_initcalls+0x11a/0x140\nkernel_init_freeable+0x25e/0x2a0\nkernel_init+0x2e/0x170\n__ret_from_fork+0x3c/0x58\nret_from_fork+0xa/0x40\nFreed in iucv_init+0x92/0x280 age=167839 cpu=2 pid=1\n__kmem_cache_free+0x308/0x358\niucv_init+0x92/0x280\ndo_one_initcall+0x78/0x390\ndo_initcalls+0x11a/0x140\nkernel_init_freeable+0x25e/0x2a0\nkernel_init+0x2e/0x170\n__ret_from_fork+0x3c/0x58\nret_from_fork+0xa/0x40\nSlab 0x0000037200010000 objects=32 used=30 fp=0x0000000000400640 flags=0x1ffff00000010200(slab|head|node=0|zone=0|\nObject 0x0000000000400540 @offset=1344 fp=0x0000000000000000\nRedzone  0000000000400500: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400510: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400520: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400530: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nObject   0000000000400540: 00 01 00 03 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject   0000000000400550: f3 86 81 f2 f4 82 f8 82 f0 f0 f0 f0 f0 f0 f0 f2  ................\nObject   0000000000400560: 00 00 00 00 80 00 00 00 cc cc cc cc cc cc cc cc  ................\nObject   0000000000400570: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400580: cc cc cc cc cc cc cc cc                          ........\nPadding  00000000004005d4: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a  ZZZZZZZZZZZZZZZZ\nPadding  00000000004005e4: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a  ZZZZZZZZZZZZZZZZ\nPadding  00000000004005f4: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a              ZZZZZZZZZZZZ\nCPU: 6 PID: 121030 Comm: 116-pai-crypto. Not tainted 6.3.0-20230221.rc0.git4.99b8246b2d71.300.fc37.s390x+debug #1\nHardware name: IBM 3931 A01 704 (z/VM 7.3.0)\nCall Trace:\n[\u003c000000032aa034ec\u003e] dump_stack_lvl+0xac/0x100\n[\u003c0000000329f5a6cc\u003e] check_bytes_and_report+0x104/0x140\n[\u003c0000000329f5aa78\u003e] check_object+0x370/0x3c0\n[\u003c0000000329f5ede6\u003e] free_debug_processing+0x15e/0x348\n[\u003c0000000329f5f06a\u003e] free_to_partial_list+0x9a/0x2f0\n[\u003c0000000329f5f4a4\u003e] __slab_free+0x1e4/0x3a8\n[\u003c0000000329f61768\u003e] __kmem_cache_free+0x308/0x358\n[\u003c000000032a91465c\u003e] iucv_cpu_dead+0x6c/0x88\n[\u003c0000000329c2fc66\u003e] cpuhp_invoke_callback+0x156/0x2f0\n[\u003c000000032aa062da\u003e] _cpu_down.constprop.0+0x22a/0x5e0\n[\u003c0000000329c3243e\u003e] cpu_device_down+0x4e/0x78\n[\u003c000000032a61dee0\u003e] device_offline+0xc8/0x118\n[\u003c000000032a61e048\u003e] online_store+0x60/0xe0\n[\u003c000000032a08b6b0\u003e] kernfs_fop_write_iter+0x150/0x1e8\n[\u003c0000000329fab65c\u003e] vfs_write+0x174/0x360\n[\u003c0000000329fab9fc\u003e] ksys_write+0x74/0x100\n[\u003c000000032aa03a5a\u003e] __do_syscall+0x1da/0x208\n[\u003c000000032aa177b2\u003e] system_call+0x82/0xb0\nINFO: lockdep is turned off.\nFIX dma-kmalloc-64: Restoring kmalloc Redzone 0x0000000000400564-0x0000000000400567=0xcc\nFIX dma-kmalloc-64: Object at 0x0000000000400540 not freed",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53111",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nloop: Fix use-after-free issues\n\ndo_req_filebacked() calls blk_mq_complete_request() synchronously or\nasynchronously when using asynchronous I/O unless memory allocation fails.\nHence, modify loop_handle_cmd() such that it does not dereference 'cmd' nor\n'rq' after do_req_filebacked() finished unless we are sure that the request\nhas not yet been completed. This patch fixes the following kernel crash:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000054\nCall trace:\n css_put.42938+0x1c/0x1ac\n loop_process_work+0xc8c/0xfd4\n loop_rootcg_workfn+0x24/0x34\n process_one_work+0x244/0x558\n worker_thread+0x400/0x8fc\n kthread+0x16c/0x1e0\n ret_from_fork+0x10/0x20",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53114",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix kernel crash during reboot when adapter is in recovery mode\n\nIf the driver detects during probe that firmware is in recovery\nmode then i40e_init_recovery_mode() is called and the rest of\nprobe function is skipped including pci_set_drvdata(). Subsequent\ni40e_shutdown() called during shutdown/reboot dereferences NULL\npointer as pci_get_drvdata() returns NULL.\n\nTo fix call pci_set_drvdata() also during entering to recovery mode.\n\nReproducer:\n1) Lets have i40e NIC with firmware in recovery mode\n2) Run reboot\n\nResult:\n[  139.084698] i40e: Intel(R) Ethernet Connection XL710 Network Driver\n[  139.090959] i40e: Copyright (c) 2013 - 2019 Intel Corporation.\n[  139.108438] i40e 0000:02:00.0: Firmware recovery mode detected. Limiting functionality.\n[  139.116439] i40e 0000:02:00.0: Refer to the Intel(R) Ethernet Adapters and Devices User Guide for details on firmware recovery mode.\n[  139.129499] i40e 0000:02:00.0: fw 8.3.64775 api 1.13 nvm 8.30 0x8000b78d 1.3106.0 [8086:1583] [15d9:084a]\n[  139.215932] i40e 0000:02:00.0 enp2s0f0: renamed from eth0\n[  139.223292] i40e 0000:02:00.1: Firmware recovery mode detected. Limiting functionality.\n[  139.231292] i40e 0000:02:00.1: Refer to the Intel(R) Ethernet Adapters and Devices User Guide for details on firmware recovery mode.\n[  139.244406] i40e 0000:02:00.1: fw 8.3.64775 api 1.13 nvm 8.30 0x8000b78d 1.3106.0 [8086:1583] [15d9:084a]\n[  139.329209] i40e 0000:02:00.1 enp2s0f1: renamed from eth0\n...\n[  156.311376] BUG: kernel NULL pointer dereference, address: 00000000000006c2\n[  156.318330] #PF: supervisor write access in kernel mode\n[  156.323546] #PF: error_code(0x0002) - not-present page\n[  156.328679] PGD 0 P4D 0\n[  156.331210] Oops: 0002 [#1] PREEMPT SMP NOPTI\n[  156.335567] CPU: 26 PID: 15119 Comm: reboot Tainted: G            E      6.2.0+ #1\n[  156.343126] Hardware name: Abacus electric, s.r.o. - servis@abacus.cz Super Server/H12SSW-iN, BIOS 2.4 04/13/2022\n[  156.353369] RIP: 0010:i40e_shutdown+0x15/0x130 [i40e]\n[  156.358430] Code: c1 fc ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 55 48 89 fd 53 48 8b 9f 48 01 00 00 \u003cf0\u003e 80 8b c2 06 00 00 04 f0 80 8b c0 06 00 00 08 48 8d bb 08 08 00\n[  156.377168] RSP: 0018:ffffb223c8447d90 EFLAGS: 00010282\n[  156.382384] RAX: ffffffffc073ee70 RBX: 0000000000000000 RCX: 0000000000000001\n[  156.389510] RDX: 0000000080000001 RSI: 0000000000000246 RDI: ffff95db49988000\n[  156.396634] RBP: ffff95db49988000 R08: ffffffffffffffff R09: ffffffff8bd17d40\n[  156.403759] R10: 0000000000000001 R11: ffffffff8a5e3d28 R12: ffff95db49988000\n[  156.410882] R13: ffffffff89a6fe17 R14: ffff95db49988150 R15: 0000000000000000\n[  156.418007] FS:  00007fe7c0cc3980(0000) GS:ffff95ea8ee80000(0000) knlGS:0000000000000000\n[  156.426083] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  156.431819] CR2: 00000000000006c2 CR3: 00000003092fc005 CR4: 0000000000770ee0\n[  156.438944] PKRU: 55555554\n[  156.441647] Call Trace:\n[  156.444096]  \u003cTASK\u003e\n[  156.446199]  pci_device_shutdown+0x38/0x60\n[  156.450297]  device_shutdown+0x163/0x210\n[  156.454215]  kernel_restart+0x12/0x70\n[  156.457872]  __do_sys_reboot+0x1ab/0x230\n[  156.461789]  ? vfs_writev+0xa6/0x1a0\n[  156.465362]  ? __pfx_file_free_rcu+0x10/0x10\n[  156.469635]  ? __call_rcu_common.constprop.85+0x109/0x5a0\n[  156.475034]  do_syscall_64+0x3e/0x90\n[  156.478611]  entry_SYSCALL_64_after_hwframe+0x72/0xdc\n[  156.483658] RIP: 0033:0x7fe7bff37ab7",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53116",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: avoid potential UAF in nvmet_req_complete()\n\nAn nvme target -\u003equeue_response() operation implementation may free the\nrequest passed as argument. Such implementation potentially could result\nin a use after free of the request pointer when percpu_ref_put() is\ncalled in nvmet_req_complete().\n\nAvoid such problem by using a local variable to save the sq pointer\nbefore calling __nvmet_req_complete(), thus avoiding dereferencing the\nreq pointer after that function call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53117",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: prevent out-of-bounds array speculation when closing a file descriptor\n\nGoogle-Bug-Id: 114199369",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53118",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix a procfs host directory removal regression\n\nscsi_proc_hostdir_rm() decreases a reference counter and hence must only be\ncalled once per host that is removed. This change does not require a\nscsi_add_host_with_dma() change since scsi_add_host_with_dma() will return\n0 (success) if scsi_proc_host_add() is called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53119",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: initialize struct pn533_out_arg properly\n\nstruct pn533_out_arg used as a temporary context for out_urb is not\ninitialized properly. Its uninitialized 'phy' field can be dereferenced in\nerror cases inside pn533_out_complete() callback function. It causes the\nfollowing failure:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 1 PID: 0 Comm: swapper/1 Not tainted 6.2.0-rc3-next-20230110-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022\nRIP: 0010:pn533_out_complete.cold+0x15/0x44 drivers/nfc/pn533/usb.c:441\nCall Trace:\n \u003cIRQ\u003e\n __usb_hcd_giveback_urb+0x2b6/0x5c0 drivers/usb/core/hcd.c:1671\n usb_hcd_giveback_urb+0x384/0x430 drivers/usb/core/hcd.c:1754\n dummy_timer+0x1203/0x32d0 drivers/usb/gadget/udc/dummy_hcd.c:1988\n call_timer_fn+0x1da/0x800 kernel/time/timer.c:1700\n expire_timers+0x234/0x330 kernel/time/timer.c:1751\n __run_timers kernel/time/timer.c:2022 [inline]\n __run_timers kernel/time/timer.c:1995 [inline]\n run_timer_softirq+0x326/0x910 kernel/time/timer.c:2035\n __do_softirq+0x1fb/0xaf6 kernel/softirq.c:571\n invoke_softirq kernel/softirq.c:445 [inline]\n __irq_exit_rcu+0x123/0x180 kernel/softirq.c:650\n irq_exit_rcu+0x9/0x20 kernel/softirq.c:662\n sysvec_apic_timer_interrupt+0x97/0xc0 arch/x86/kernel/apic/apic.c:1107\n\nInitialize the field with the pn533_usb_phy currently used.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53123",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: s390: Fix use-after-free of PCI resources with per-function hotplug\n\nOn s390 PCI functions may be hotplugged individually even when they\nbelong to a multi-function device. In particular on an SR-IOV device VFs\nmay be removed and later re-added.\n\nIn commit a50297cf8235 (\"s390/pci: separate zbus creation from\nscanning\") it was missed however that struct pci_bus and struct\nzpci_bus's resource list retained a reference to the PCI functions MMIO\nresources even though those resources are released and freed on\nhot-unplug. These stale resources may subsequently be claimed when the\nPCI function re-appears resulting in use-after-free.\n\nOne idea of fixing this use-after-free in s390 specific code that was\ninvestigated was to simply keep resources around from the moment a PCI\nfunction first appeared until the whole virtual PCI bus created for\na multi-function device disappears. The problem with this however is\nthat due to the requirement of artificial MMIO addreesses (address\ncookies) extra logic is then needed to keep the address cookies\ncompatible on re-plug. At the same time the MMIO resources semantically\nbelong to the PCI function so tying their lifecycle to the function\nseems more logical.\n\nInstead a simpler approach is to remove the resources of an individually\nhot-unplugged PCI function from the PCI bus's resource list while\nkeeping the resources of other PCI functions on the PCI bus untouched.\n\nThis is done by introducing pci_bus_remove_resource() to remove an\nindividual resource. Similarly the resource also needs to be removed\nfrom the struct zpci_bus's resource list. It turns out however, that\nthere is really no need to add the MMIO resources to the struct\nzpci_bus's resource list at all and instead we can simply use the\nzpci_bar_struct's resource pointer directly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53124",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Fix NULL pointer access in mpt3sas_transport_port_add()\n\nPort is allocated by sas_port_alloc_num() and rphy is allocated by either\nsas_end_device_alloc() or sas_expander_alloc(), all of which may return\nNULL. So we need to check the rphy to avoid possible NULL pointer access.\n\nIf sas_rphy_add() returned with failure, rphy is set to NULL. We would\naccess the rphy in the following lines which would also result NULL pointer\naccess.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53125",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Limit packet length to skb-\u003elen\n\nPacket length retrieved from skb data may be larger than\nthe actual socket buffer length (up to 9026 bytes). In such\ncase the cloned skb passed up the network stack will leak\nkernel memory contents.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53131",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix a server shutdown leak\n\nFix a race where kthread_stop() may prevent the threadfn from ever getting\ncalled.  If that happens the svc_rqst will not be cleaned up.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53134",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Avoid order-5 memory allocation for TPA data\n\nThe driver needs to keep track of all the possible concurrent TPA (GRO/LRO)\ncompletions on the aggregation ring.  On P5 chips, the maximum number\nof concurrent TPA is 256 and the amount of memory we allocate is order-5\non systems using 4K pages.  Memory allocation failure has been reported:\n\nNetworkManager: page allocation failure: order:5, mode:0x40dc0(GFP_KERNEL|__GFP_COMP|__GFP_ZERO), nodemask=(null),cpuset=/,mems_allowed=0-1\nCPU: 15 PID: 2995 Comm: NetworkManager Kdump: loaded Not tainted 5.10.156 #1\nHardware name: Dell Inc. PowerEdge R660/0M1CC5, BIOS 0.2.25 08/12/2022\nCall Trace:\n dump_stack+0x57/0x6e\n warn_alloc.cold.120+0x7b/0xdd\n ? _cond_resched+0x15/0x30\n ? __alloc_pages_direct_compact+0x15f/0x170\n __alloc_pages_slowpath.constprop.108+0xc58/0xc70\n __alloc_pages_nodemask+0x2d0/0x300\n kmalloc_order+0x24/0xe0\n kmalloc_order_trace+0x19/0x80\n bnxt_alloc_mem+0x1150/0x15c0 [bnxt_en]\n ? bnxt_get_func_stat_ctxs+0x13/0x60 [bnxt_en]\n __bnxt_open_nic+0x12e/0x780 [bnxt_en]\n bnxt_open+0x10b/0x240 [bnxt_en]\n __dev_open+0xe9/0x180\n __dev_change_flags+0x1af/0x220\n dev_change_flags+0x21/0x60\n do_setlink+0x35c/0x1100\n\nInstead of allocating this big chunk of memory and dividing it up for the\nconcurrent TPA instances, allocate each small chunk separately for each\nTPA instance.  This will reduce it to order-0 allocations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53137",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53139",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: fdp: add null check of devm_kmalloc_array in fdp_nci_i2c_read_device_properties\n\ndevm_kmalloc_array may fails, *fw_vsc_cfg might be null and cause\nout-of-bounds write in device_property_read_u8_array later.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53140",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Remove the /proc/scsi/${proc_name} directory earlier\n\nRemove the /proc/scsi/${proc_name} directory earlier to fix a race\ncondition between unloading and reloading kernel modules. This fixes a bug\nintroduced in 2009 by commit 77c019768f06 (\"[SCSI] fix /proc memory leak in\nthe SCSI core\").\n\nFix the following kernel warning:\n\nproc_dir_entry 'scsi/scsi_debug' already registered\nWARNING: CPU: 19 PID: 27986 at fs/proc/generic.c:376 proc_register+0x27d/0x2e0\nCall Trace:\n proc_mkdir+0xb5/0xe0\n scsi_proc_hostdir_add+0xb5/0x170\n scsi_host_alloc+0x683/0x6c0\n sdebug_driver_probe+0x6b/0x2d0 [scsi_debug]\n really_probe+0x159/0x540\n __driver_probe_device+0xdc/0x230\n driver_probe_device+0x4f/0x120\n __device_attach_driver+0xef/0x180\n bus_for_each_drv+0xe5/0x130\n __device_attach+0x127/0x290\n device_initial_probe+0x17/0x20\n bus_probe_device+0x110/0x130\n device_add+0x673/0xc80\n device_register+0x1e/0x30\n sdebug_add_host_helper+0x1a7/0x3b0 [scsi_debug]\n scsi_debug_init+0x64f/0x1000 [scsi_debug]\n do_one_initcall+0xd7/0x470\n do_init_module+0xe7/0x330\n load_module+0x122a/0x12c0\n __do_sys_finit_module+0x124/0x1a0\n __x64_sys_finit_module+0x46/0x50\n do_syscall_64+0x38/0x80\n entry_SYSCALL_64_after_hwframe+0x46/0xb0",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: copy last block omitted in ice_get_module_eeprom()\n\nice_get_module_eeprom() is broken since commit e9c9692c8a81 (\"ice:\nReimplement module reads used by ethtool\") In this refactor,\nice_get_module_eeprom() reads the eeprom in blocks of size 8.\nBut the condition that should protect the buffer overflow\nignores the last block. The last block always contains zeros.\n\nBug uncovered by ethtool upstream commit 9538f384b535\n(\"netlink: eeprom: Defer page requests to individual parsers\")\nAfter this commit, ethtool reads a block with length = 1;\nto read the SFF-8024 identifier value.\n\nunpatched driver:\n$ ethtool -m enp65s0f0np0 offset 0x90 length 8\nOffset          Values\n------          ------\n0x0090:         00 00 00 00 00 00 00 00\n$ ethtool -m enp65s0f0np0 offset 0x90 length 12\nOffset          Values\n------          ------\n0x0090:         00 00 01 a0 4d 65 6c 6c 00 00 00 00\n$\n\n$ ethtool -m enp65s0f0np0\nOffset          Values\n------          ------\n0x0000:         11 06 06 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0010:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0020:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0030:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0040:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0050:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0060:         00 00 00 00 00 00 00 00 00 00 00 00 00 01 08 00\n0x0070:         00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\npatched driver:\n$ ethtool -m enp65s0f0np0 offset 0x90 length 8\nOffset          Values\n------          ------\n0x0090:         00 00 01 a0 4d 65 6c 6c\n$ ethtool -m enp65s0f0np0 offset 0x90 length 12\nOffset          Values\n------          ------\n0x0090:         00 00 01 a0 4d 65 6c 6c 61 6e 6f 78\n$ ethtool -m enp65s0f0np0\n    Identifier                                : 0x11 (QSFP28)\n    Extended identifier                       : 0x00\n    Extended identifier description           : 1.5W max. Power consumption\n    Extended identifier description           : No CDR in TX, No CDR in RX\n    Extended identifier description           : High Power Class (\u003e 3.5 W) not enabled\n    Connector                                 : 0x23 (No separable connector)\n    Transceiver codes                         : 0x88 0x00 0x00 0x00 0x00 0x00 0x00 0x00\n    Transceiver type                          : 40G Ethernet: 40G Base-CR4\n    Transceiver type                          : 25G Ethernet: 25G Base-CR CA-N\n    Encoding                                  : 0x05 (64B/66B)\n    BR, Nominal                               : 25500Mbps\n    Rate identifier                           : 0x00\n    Length (SMF,km)                           : 0km\n    Length (OM3 50um)                         : 0m\n    Length (OM2 50um)                         : 0m\n    Length (OM1 62.5um)                       : 0m\n    Length (Copper or Active cable)           : 1m\n    Transmitter technology                    : 0xa0 (Copper cable unequalized)\n    Attenuation at 2.5GHz                     : 4db\n    Attenuation at 5.0GHz                     : 5db\n    Attenuation at 7.0GHz                     : 7db\n    Attenuation at 12.9GHz                    : 10db\n    ........\n    ....",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53143",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix another off-by-one fsmap error on 1k block filesystems\n\nApparently syzbot figured out that issuing this FSMAP call:\n\nstruct fsmap_head cmd = {\n\t.fmh_count\t= ...;\n\t.fmh_keys\t= {\n\t\t{ .fmr_device = /* ext4 dev */, .fmr_physical = 0, },\n\t\t{ .fmr_device = /* ext4 dev */, .fmr_physical = 0, },\n\t},\n...\n};\nret = ioctl(fd, FS_IOC_GETFSMAP, \u0026cmd);\n\nProduces this crash if the underlying filesystem is a 1k-block ext4\nfilesystem:\n\nkernel BUG at fs/ext4/ext4.h:3331!\ninvalid opcode: 0000 [#1] PREEMPT SMP\nCPU: 3 PID: 3227965 Comm: xfs_io Tainted: G        W  O       6.2.0-rc8-achx\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014\nRIP: 0010:ext4_mb_load_buddy_gfp+0x47c/0x570 [ext4]\nRSP: 0018:ffffc90007c03998 EFLAGS: 00010246\nRAX: ffff888004978000 RBX: ffffc90007c03a20 RCX: ffff888041618000\nRDX: 0000000000000000 RSI: 00000000000005a4 RDI: ffffffffa0c99b11\nRBP: ffff888012330000 R08: ffffffffa0c2b7d0 R09: 0000000000000400\nR10: ffffc90007c03950 R11: 0000000000000000 R12: 0000000000000001\nR13: 00000000ffffffff R14: 0000000000000c40 R15: ffff88802678c398\nFS:  00007fdf2020c880(0000) GS:ffff88807e100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffd318a5fe8 CR3: 000000007f80f001 CR4: 00000000001706e0\nCall Trace:\n \u003cTASK\u003e\n ext4_mballoc_query_range+0x4b/0x210 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n ext4_getfsmap_datadev+0x713/0x890 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n ext4_getfsmap+0x2b7/0x330 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n ext4_ioc_getfsmap+0x153/0x2b0 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n __ext4_ioctl+0x2a7/0x17e0 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n __x64_sys_ioctl+0x82/0xa0\n do_syscall_64+0x2b/0x80\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\nRIP: 0033:0x7fdf20558aff\nRSP: 002b:00007ffd318a9e30 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00000000000200c0 RCX: 00007fdf20558aff\nRDX: 00007fdf1feb2010 RSI: 00000000c0c0583b RDI: 0000000000000003\nRBP: 00005625c0634be0 R08: 00005625c0634c40 R09: 0000000000000001\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fdf1feb2010\nR13: 00005625be70d994 R14: 0000000000000800 R15: 0000000000000000\n\nFor GETFSMAP calls, the caller selects a physical block device by\nwriting its block number into fsmap_head.fmh_keys[01].fmr_device.\nTo query mappings for a subrange of the device, the starting byte of the\nrange is written to fsmap_head.fmh_keys[0].fmr_physical and the last\nbyte of the range goes in fsmap_head.fmh_keys[1].fmr_physical.\n\nIOWs, to query what mappings overlap with bytes 3-14 of /dev/sda, you'd\nset the inputs as follows:\n\n\tfmh_keys[0] = { .fmr_device = major(8, 0), .fmr_physical = 3},\n\tfmh_keys[1] = { .fmr_device = major(8, 0), .fmr_physical = 14},\n\nWhich would return you whatever is mapped in the 12 bytes starting at\nphysical offset 3.\n\nThe crash is due to insufficient range validation of keys[1] in\next4_getfsmap_datadev.  On 1k-block filesystems, block 0 is not part of\nthe filesystem, which means that s_first_data_block is nonzero.\next4_get_group_no_and_offset subtracts this quantity from the blocknr\nargument before cracking it into a group number and a block number\nwithin a group.  IOWs, block group 0 spans blocks 1-8192 (1-based)\ninstead of 0-8191 (0-based) like what happens with larger blocksizes.\n\nThe net result of this encoding is that blocknr \u003c s_first_data_block is\nnot a valid input to this function.  The end_fsb variable is set from\nthe keys that are copied from userspace, which means that in the above\nexample, its value is zero.  That leads to an underflow here:\n\n\tblocknr = blocknr - le32_to_cpu(es-\u003es_first_data_block);\n\nThe division then operates on -1:\n\n\toffset = do_div(blocknr, EXT4_BLOCKS_PER_GROUP(sb)) \u003e\u003e\n\t\tEXT4_SB(sb)-\u003es_cluster_bits;\n\nLeaving an impossibly large group number (2^32-1) in blocknr.\next4_getfsmap_check_keys checked that keys[0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btsdio: fix use after free bug in btsdio_remove due to race condition\n\nIn btsdio_probe, the data-\u003ework is bound with btsdio_work. It will be\nstarted in btsdio_send_frame.\n\nIf the btsdio_remove runs with a unfinished work, there may be a race\ncondition that hdev is freed but used in btsdio_work. Fix it by\ncanceling the work before do cleanup in btsdio_remove.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-10041",
      "Description": "A vulnerability was found in PAM. The secret information is stored in memory, where the attacker can trigger the victim program to execute by sending characters to its standard input (stdin). As this occurs, the attacker can train the branch predictor to execute an ROP chain speculatively. This flaw could result in leaked passwords, such as those found in /etc/shadow while performing authentications.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:pam-1.3.0-150000.6.86.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12718",
      "Description": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"  or file permissions (chmod) with filter=\"tar\"  of files outside the extraction directory.\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2236",
      "Description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgcrypt20-1.9.4-150400.6.11.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-23337",
      "Description": "jq is a command-line JSON processor. In versions up to and including 1.7.1, an integer overflow arises when assigning value using an index of 2147483647, the signed integer limit. This causes a denial of service. Commit de21386681c0df0104a99d9d09db23a9b2a78b1e contains a patch for the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:jq-1.6-150000.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libjq1-1.6-150000.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26643",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: mark set as dead when unbinding anonymous set with timeout\n\nWhile the rhashtable set gc runs asynchronously, a race allows it to\ncollect elements from anonymous sets with timeouts while it is being\nreleased from the commit path.\n\nMingi Cho originally reported this issue in a different path in 6.1.x\nwith a pipapo set with low timeouts which is not possible upstream since\n7395dfacfff6 (\"netfilter: nf_tables: use timestamp to check for set\nelement timeout\").\n\nFix this by setting on the dead flag for anonymous sets to skip async gc\nin this case.\n\nAccording to 08e4c8c5919f (\"netfilter: nf_tables: mark newset as dead on\ntransaction abort\"), Florian plans to accelerate abort path by releasing\nobjects via workqueue, therefore, this sets on the dead flag for abort\npath too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26808",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_chain_filter: handle NETDEV_UNREGISTER for inet/ingress basechain\n\nRemove netdevice from inet/ingress basechain in case NETDEV_UNREGISTER\nevent is reported, otherwise a stale reference to netdevice remains in\nthe hook list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_pipapo: do not free live element\n\nPablo reports a crash with large batches of elements with a\nback-to-back add/remove pattern.  Quoting Pablo:\n\n  add_elem(\"00000000\") timeout 100 ms\n  ...\n  add_elem(\"0000000X\") timeout 100 ms\n  del_elem(\"0000000X\") \u003c---------------- delete one that was just added\n  ...\n  add_elem(\"00005000\") timeout 100 ms\n\n  1) nft_pipapo_remove() removes element 0000000X\n  Then, KASAN shows a splat.\n\nLooking at the remove function there is a chance that we will drop a\nrule that maps to a non-deactivated element.\n\nRemoval happens in two steps, first we do a lookup for key k and return the\nto-be-removed element and mark it as inactive in the next generation.\nThen, in a second step, the element gets removed from the set/map.\n\nThe _remove function does not work correctly if we have more than one\nelement that share the same key.\n\nThis can happen if we insert an element into a set when the set already\nholds an element with same key, but the element mapping to the existing\nkey has timed out or is not active in the next generation.\n\nIn such case its possible that removal will unmap the wrong element.\nIf this happens, we will leak the non-deactivated element, it becomes\nunreachable.\n\nThe element that got deactivated (and will be freed later) will\nremain reachable in the set data structure, this can result in\na crash when such an element is retrieved during lookup (stale\npointer).\n\nAdd a check that the fully matching key does in fact map to the element\nthat we have marked as inactive in the deactivation step.\nIf not, we need to continue searching.\n\nAdd a bug/warn trap at the end of the function as well, the remove\nfunction must not ever be called with an invisible/unreachable/non-existent\nelement.\n\nv2: avoid uneeded temporary variable (Stefano)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26935",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix unremoved procfs host directory regression\n\nCommit fc663711b944 (\"scsi: core: Remove the /proc/scsi/${proc_name}\ndirectory earlier\") fixed a bug related to modules loading/unloading, by\nadding a call to scsi_proc_hostdir_rm() on scsi_remove_host(). But that led\nto a potential duplicate call to the hostdir_rm() routine, since it's also\ncalled from scsi_host_dev_release(). That triggered a regression report,\nwhich was then fixed by commit be03df3d4bfe (\"scsi: core: Fix a procfs host\ndirectory removal regression\"). The fix just dropped the hostdir_rm() call\nfrom dev_release().\n\nBut it happens that this proc directory is created on scsi_host_alloc(),\nand that function \"pairs\" with scsi_host_dev_release(), while\nscsi_remove_host() pairs with scsi_add_host(). In other words, it seems the\nreason for removing the proc directory on dev_release() was meant to cover\ncases in which a SCSI host structure was allocated, but the call to\nscsi_add_host() didn't happen. And that pattern happens to exist in some\nerror paths, for example.\n\nSyzkaller causes that by using USB raw gadget device, error'ing on\nusb-storage driver, at usb_stor_probe2(). By checking that path, we can see\nthat the BadDevice label leads to a scsi_host_put() after a SCSI host\nallocation, but there's no call to scsi_add_host() in such path. That leads\nto messages like this in dmesg (and a leak of the SCSI host proc\nstructure):\n\nusb-storage 4-1:87.51: USB Mass Storage device detected\nproc_dir_entry 'scsi/usb-storage' already registered\nWARNING: CPU: 1 PID: 3519 at fs/proc/generic.c:377 proc_register+0x347/0x4e0 fs/proc/generic.c:376\n\nThe proper fix seems to still call scsi_proc_hostdir_rm() on dev_release(),\nbut guard that with the state check for SHOST_CREATED; there is even a\ncomment in scsi_host_dev_release() detailing that: such conditional is\nmeant for cases where the SCSI host was allocated but there was no calls to\n{add,remove}_host(), like the usb-storage case.\n\nThis is what we propose here and with that, the error path of usb-storage\ndoes not trigger the warning anymore.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27397",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: use timestamp to check for set element timeout\n\nAdd a timestamp field at the beginning of the transaction, store it\nin the nftables per-netns area.\n\nUpdate set backend .insert, .deactivate and sync gc path to use the\ntimestamp, this avoids that an element expires while control plane\ntransaction is still unfinished.\n\n.lookup and .update, which are used from packet path, still use the\ncurrent time to check if the element has expired. And .get path and dump\nalso since this runs lockless under rcu read size lock. Then, there is\nasync gc which also needs to check the current time since it runs\nasynchronously from a workqueue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28956",
      "Description": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution for some Intel(R) Processors may allow an authenticated user to potentially enable information disclosure via local access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xen-libs-4.16.7_02-150400.4.72.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35221",
      "Description": "Rubygems.org is the Ruby community's gem hosting service. A Gem publisher can cause a Remote DoS when publishing a Gem. This is due to how Ruby reads the Manifest of Gem files when using Gem::Specification.from_yaml. from_yaml makes use of SafeYAML.load which allows YAML aliases inside the YAML-based metadata of a gem. YAML aliases allow for Denial of Service attacks with so-called `YAML-bombs` (comparable to Billion laughs attacks). This was patched. There is is no action required by users. This issue is also tracked as GHSL-2024-001 and was discovered by the GitHub security lab.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libruby2_5-2_5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:ruby2.5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:ruby2.5-stdlib-2.5.9-150000.4.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36350",
      "Description": "A transient execution vulnerability in some AMD processors may allow an attacker to infer data from previous stores, potentially resulting in the leakage of privileged information.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xen-libs-4.16.7_02-150400.4.72.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-36978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: sch_multiq: fix possible OOB write in multiq_tune()\n\nq-\u003ebands will be assigned to qopt-\u003ebands to execute subsequent code logic\nafter kmalloc. So the old q-\u003ebands should not be used in kmalloc.\nOtherwise, an out-of-bounds write will occur.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-41965",
      "Description": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim \u003c v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:vim-9.1.1406-150000.5.75.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:vim-data-common-9.1.1406-150000.5.75.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xxd-9.1.1406-150000.5.75.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42265",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nprotect the fetch of -\u003efd[fd] in do_dup2() from mispredictions\n\nboth callers have verified that fd is not greater than -\u003emax_fds;\nhowever, misprediction might end up with\n        tofree = fdt-\u003efd[fd];\nbeing speculatively executed.  That's wrong for the same reasons\nwhy it's wrong in close_fd()/file_close_fd_locked(); the same\nsolution applies - array_index_nospec(fd, fdt-\u003emax_fds) could differ\nfrom fd only in case of speculative execution on mispredicted path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-42516",
      "Description": "HTTP response splitting in the core of Apache HTTP Server allows an attacker who can manipulate the Content-Type response headers of applications hosted or proxied by the server can split the HTTP response.\n\nThis vulnerability was described as CVE-2023-38709 but the patch included in Apache HTTP Server 2.4.59 did not address the issue.\n\nUsers are recommended to upgrade to version 2.4.64, which fixes this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43204",
      "Description": "SSRF in Apache HTTP Server with mod_proxy loaded allows an attacker to send outbound proxy requests to a URL controlled by the attacker.   Requires an unlikely configuration where mod_headers is configured to modify the Content-Type request or response header with a value provided in the HTTP request.\n\nUsers are recommended to upgrade to version 2.4.64 which fixes this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45310",
      "Description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:runc-1.2.6-150000.73.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-45339",
      "Description": "When logs are written to a widely-writable directory (the default), an unprivileged attacker may predict a privileged process's log file path and pre-create a symbolic link to a sensitive file in its place. When that privileged process runs, it will follow the planted symlink and overwrite that sensitive file. To fix that, glog now causes the program to exit (with status code 2) when it finds that the configured log file already exists.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:google-osconfig-agent-20250416.02-150000.1.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsch/netem: fix use after free in netem_dequeue\n\nIf netem_dequeue() enqueues packet to inner qdisc and that qdisc\nreturns __NET_XMIT_STOLEN. The packet is dropped but\nqdisc_tree_reduce_backlog() is not called to update the parent's\nq.qlen, leading to the similar use-after-free as Commit\ne04991a48dbaf382 (\"netem: fix return value if duplicate enqueue\nfails\")\n\nCommands to trigger KASAN UaF:\n\nip link add type dummy\nip link set lo up\nip link set dummy0 up\ntc qdisc add dev lo parent root handle 1: drr\ntc filter add dev lo parent 1: basic classid 1:1\ntc class add dev lo classid 1:1 drr\ntc qdisc add dev lo parent 1:1 handle 2: netem\ntc qdisc add dev lo parent 2: handle 3: drr\ntc filter add dev lo parent 3: basic classid 3:1 action mirred egress\nredirect dev dummy0\ntc class add dev lo classid 3:1 drr\nping -c1 -W0.01 localhost # Trigger bug\ntc class del dev lo classid 1:1\ntc class add dev lo classid 1:1 drr\nping -c1 -W0.01 localhost # UaF",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47081",
      "Description": "Requests is a HTTP library. Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs. Users should upgrade to version 2.32.4 to receive a fix. For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on one's Requests Session.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-requests-2.25.1-150300.3.18.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47252",
      "Description": "Insufficient escaping of user-supplied data in mod_ssl in Apache HTTP Server 2.4.63 and earlier allows an untrusted SSL/TLS client to insert escape characters into log files in some configurations.\n\nIn a logging configuration where CustomLog is used with \"%{varname}x\" or \"%{varname}c\" to log variables provided by mod_ssl such as SSL_TLS_SNI, no escaping is performed by either mod_log_config or mod_ssl and unsanitized data provided by the client may appear in log files.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53057",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: stop qdisc_tree_reduce_backlog on TC_H_ROOT\n\nIn qdisc_tree_reduce_backlog, Qdiscs with major handle ffff: are assumed\nto be either root or ingress. This assumption is bogus since it's valid\nto create egress qdiscs with major handle ffff:\nBudimir Markovic found that for qdiscs like DRR that maintain an active\nclass list, it will cause a UAF with a dangling class pointer.\n\nIn 066a3b5b2346, the concern was to avoid iterating over the ingress\nqdisc since its parent is itself. The proper fix is to stop when parent\nTC_H_ROOT is reached because the only way to retrieve ingress is when a\nhierarchy which does not contain a ffff: major handle call into\nqdisc_lookup with TC_H_MAJ(TC_H_ROOT).\n\nIn the scenario where major ffff: is an egress qdisc in any of the tree\nlevels, the updates will also propagate to TC_H_ROOT, which then the\niteration must stop.\n\n\n net/sched/sch_api.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53125",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: sync_linked_regs() must preserve subreg_def\n\nRange propagation must not affect subreg_def marks, otherwise the\nfollowing example is rewritten by verifier incorrectly when\nBPF_F_TEST_RND_HI32 flag is set:\n\n  0: call bpf_ktime_get_ns                   call bpf_ktime_get_ns\n  1: r0 \u0026= 0x7fffffff       after verifier   r0 \u0026= 0x7fffffff\n  2: w1 = w0                rewrites         w1 = w0\n  3: if w0 \u003c 10 goto +0     --------------\u003e  r11 = 0x2f5674a6     (r)\n  4: r1 \u003e\u003e= 32                               r11 \u003c\u003c= 32           (r)\n  5: r0 = r1                                 r1 |= r11            (r)\n  6: exit;                                   if w0 \u003c 0xa goto pc+0\n                                             r1 \u003e\u003e= 32\n                                             r0 = r1\n                                             exit\n\n(or zero extension of w1 at (2) is missing for architectures that\n require zero extension for upper register half).\n\nThe following happens w/o this patch:\n- r0 is marked as not a subreg at (0);\n- w1 is marked as subreg at (2);\n- w1 subreg_def is overridden at (3) by copy_register_state();\n- w1 is read at (5) but mark_insn_zext() does not mark (2)\n  for zero extension, because w1 subreg_def is not set;\n- because of BPF_F_TEST_RND_HI32 flag verifier inserts random\n  value for hi32 bits of (2) (marked (r));\n- this random value is read at (5).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: add missing range check in bitmap_ip_uadt\n\nWhen tb[IPSET_ATTR_IP_TO] is not present but tb[IPSET_ATTR_CIDR] exists,\nthe values of ip and ip_to are slightly swapped. Therefore, the range check\nfor ip should be done later, but this part is missing and it seems that the\nvulnerability occurs.\n\nSo we should add missing range checks and remove unnecessary range checks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53164",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix ordering of qlen adjustment\n\nChanges to sch-\u003eq.qlen around qdisc_tree_reduce_backlog() need to happen\n_before_ a call to said function because otherwise it may fail to notify\nparent qdiscs when the child is about to become empty.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53168",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsunrpc: fix one UAF issue caused by sunrpc kernel tcp socket\n\nBUG: KASAN: slab-use-after-free in tcp_write_timer_handler+0x156/0x3e0\nRead of size 1 at addr ffff888111f322cd by task swapper/0/0\n\nCPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted 6.12.0-rc4-dirty #7\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1\nCall Trace:\n \u003cIRQ\u003e\n dump_stack_lvl+0x68/0xa0\n print_address_description.constprop.0+0x2c/0x3d0\n print_report+0xb4/0x270\n kasan_report+0xbd/0xf0\n tcp_write_timer_handler+0x156/0x3e0\n tcp_write_timer+0x66/0x170\n call_timer_fn+0xfb/0x1d0\n __run_timers+0x3f8/0x480\n run_timer_softirq+0x9b/0x100\n handle_softirqs+0x153/0x390\n __irq_exit_rcu+0x103/0x120\n irq_exit_rcu+0xe/0x20\n sysvec_apic_timer_interrupt+0x76/0x90\n \u003c/IRQ\u003e\n \u003cTASK\u003e\n asm_sysvec_apic_timer_interrupt+0x1a/0x20\nRIP: 0010:default_idle+0xf/0x20\nCode: 4c 01 c7 4c 29 c2 e9 72 ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90\n 90 90 90 90 f3 0f 1e fa 66 90 0f 00 2d 33 f8 25 00 fb f4 \u003cfa\u003e c3 cc cc cc\n cc 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90\nRSP: 0018:ffffffffa2007e28 EFLAGS: 00000242\nRAX: 00000000000f3b31 RBX: 1ffffffff4400fc7 RCX: ffffffffa09c3196\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffffff9f00590f\nRBP: 0000000000000000 R08: 0000000000000001 R09: ffffed102360835d\nR10: ffff88811b041aeb R11: 0000000000000001 R12: 0000000000000000\nR13: ffffffffa202d7c0 R14: 0000000000000000 R15: 00000000000147d0\n default_idle_call+0x6b/0xa0\n cpuidle_idle_call+0x1af/0x1f0\n do_idle+0xbc/0x130\n cpu_startup_entry+0x33/0x40\n rest_init+0x11f/0x210\n start_kernel+0x39a/0x420\n x86_64_start_reservations+0x18/0x30\n x86_64_start_kernel+0x97/0xa0\n common_startup_64+0x13e/0x141\n \u003c/TASK\u003e\n\nAllocated by task 595:\n kasan_save_stack+0x24/0x50\n kasan_save_track+0x14/0x30\n __kasan_slab_alloc+0x87/0x90\n kmem_cache_alloc_noprof+0x12b/0x3f0\n copy_net_ns+0x94/0x380\n create_new_namespaces+0x24c/0x500\n unshare_nsproxy_namespaces+0x75/0xf0\n ksys_unshare+0x24e/0x4f0\n __x64_sys_unshare+0x1f/0x30\n do_syscall_64+0x70/0x180\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFreed by task 100:\n kasan_save_stack+0x24/0x50\n kasan_save_track+0x14/0x30\n kasan_save_free_info+0x3b/0x60\n __kasan_slab_free+0x54/0x70\n kmem_cache_free+0x156/0x5d0\n cleanup_net+0x5d3/0x670\n process_one_work+0x776/0xa90\n worker_thread+0x2e2/0x560\n kthread+0x1a8/0x1f0\n ret_from_fork+0x34/0x60\n ret_from_fork_asm+0x1a/0x30\n\nReproduction script:\n\nmkdir -p /mnt/nfsshare\nmkdir -p /mnt/nfs/netns_1\nmkfs.ext4 /dev/sdb\nmount /dev/sdb /mnt/nfsshare\nsystemctl restart nfs-server\nchmod 777 /mnt/nfsshare\nexportfs -i -o rw,no_root_squash *:/mnt/nfsshare\n\nip netns add netns_1\nip link add name veth_1_peer type veth peer veth_1\nifconfig veth_1_peer 11.11.0.254 up\nip link set veth_1 netns netns_1\nip netns exec netns_1 ifconfig veth_1 11.11.0.1\n\nip netns exec netns_1 /root/iptables -A OUTPUT -d 11.11.0.254 -p tcp \\\n\t--tcp-flags FIN FIN  -j DROP\n\n(note: In my environment, a DESTROY_CLIENTID operation is always sent\n immediately, breaking the nfs tcp connection.)\nip netns exec netns_1 timeout -s 9 300 mount -t nfs -o proto=tcp,vers=4.1 \\\n\t11.11.0.254:/mnt/nfsshare /mnt/nfs/netns_1\n\nip netns del netns_1\n\nThe reason here is that the tcp socket in netns_1 (nfs side) has been\nshutdown and closed (done in xs_destroy), but the FIN message (with ack)\nis discarded, and the nfsd side keeps sending retransmission messages.\nAs a result, when the tcp sock in netns_1 processes the received message,\nit sends the message (FIN message) in the sending queue, and the tcp timer\nis re-established. When the network namespace is deleted, the net structure\naccessed by tcp's timer handler function causes problems.\n\nTo fix this problem, let's hold netns refcnt for the tcp kernel socket as\ndone in other modules. This is an ugly hack which can easily be backported\nto earlier kernels. A proper fix which cleans up the interfaces will\nfollow, but may not be so easy to backport.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56558",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: make sure exp active before svc_export_show\n\nThe function `e_show` was called with protection from RCU. This only\nensures that `exp` will not be freed. Therefore, the reference count for\n`exp` can drop to zero, which will trigger a refcount use-after-free\nwarning when `exp_get` is called. To resolve this issue, use\n`cache_get_rcu` to ensure that `exp` remains active.\n\n------------[ cut here ]------------\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 3 PID: 819 at lib/refcount.c:25\nrefcount_warn_saturate+0xb1/0x120\nCPU: 3 UID: 0 PID: 819 Comm: cat Not tainted 6.12.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.1-2.fc37 04/01/2014\nRIP: 0010:refcount_warn_saturate+0xb1/0x120\n...\nCall Trace:\n \u003cTASK\u003e\n e_show+0x20b/0x230 [nfsd]\n seq_read_iter+0x589/0x770\n seq_read+0x1e5/0x270\n vfs_read+0x125/0x530\n ksys_read+0xc1/0x160\n do_syscall_64+0x5f/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56738",
      "Description": "GNU GRUB (aka GRUB2) through 2.12 does not use a constant-time algorithm for grub_crypto_memcmp and thus allows side-channel attacks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:grub2-2.06-150400.11.63.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:grub2-i386-pc-2.06-150400.11.63.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:grub2-x86_64-efi-2.06-150400.11.63.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56770",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: netem: account for backlog updates from child qdisc\n\nIn general, 'qlen' of any classful qdisc should keep track of the\nnumber of packets that the qdisc itself and all of its children holds.\nIn case of netem, 'qlen' only accounts for the packets in its internal\ntfifo. When netem is used with a child qdisc, the child qdisc can use\n'qdisc_tree_reduce_backlog' to inform its parent, netem, about created\nor dropped SKBs. This function updates 'qlen' and the backlog statistics\nof netem, but netem does not account for changes made by a child qdisc.\n'qlen' then indicates the wrong number of packets in the tfifo.\nIf a child qdisc creates new SKBs during enqueue and informs its parent\nabout this, netem's 'qlen' value is increased. When netem dequeues the\nnewly created SKBs from the child, the 'qlen' in netem is not updated.\nIf 'qlen' reaches the configured sch-\u003elimit, the enqueue function stops\nworking, even though the tfifo is not full.\n\nReproduce the bug:\nEnsure that the sender machine has GSO enabled. Configure netem as root\nqdisc and tbf as its child on the outgoing interface of the machine\nas follows:\n$ tc qdisc add dev \u003coif\u003e root handle 1: netem delay 100ms limit 100\n$ tc qdisc add dev \u003coif\u003e parent 1:0 tbf rate 50Mbit burst 1542 latency 50ms\n\nSend bulk TCP traffic out via this interface, e.g., by running an iPerf3\nclient on the machine. Check the qdisc statistics:\n$ tc -s qdisc show dev \u003coif\u003e\n\nStatistics after 10s of iPerf3 TCP test before the fix (note that\nnetem's backlog \u003e limit, netem stopped accepting packets):\nqdisc netem 1: root refcnt 2 limit 1000 delay 100ms\n Sent 2767766 bytes 1848 pkt (dropped 652, overlimits 0 requeues 0)\n backlog 4294528236b 1155p requeues 0\nqdisc tbf 10: parent 1:1 rate 50Mbit burst 1537b lat 50ms\n Sent 2767766 bytes 1848 pkt (dropped 327, overlimits 7601 requeues 0)\n backlog 0b 0p requeues 0\n\nStatistics after the fix:\nqdisc netem 1: root refcnt 2 limit 1000 delay 100ms\n Sent 37766372 bytes 24974 pkt (dropped 9, overlimits 0 requeues 0)\n backlog 0b 0p requeues 0\nqdisc tbf 10: parent 1:1 rate 50Mbit burst 1537b lat 50ms\n Sent 37766372 bytes 24974 pkt (dropped 327, overlimits 96017 requeues 0)\n backlog 0b 0p requeues 0\n\ntbf segments the GSO SKBs (tbf_segment) and updates the netem's 'qlen'.\nThe interface fully stops transferring packets and \"locks\". In this case,\nthe child qdisc and tfifo are empty, but 'qlen' indicates the tfifo is at\nits limit and no more packets are accepted.\n\nThis patch adds a counter for the entries in the tfifo. Netem's 'qlen' is\nonly decreased when a packet is returned by its dequeue function, and not\nduring enqueuing into the child qdisc. External updates to 'qlen' are thus\naccounted for and only the behavior of the backlog statistics changes. As\nin other qdiscs, 'qlen' then keeps track of  how many packets are held in\nnetem and all of its children. As before, sch-\u003elimit remains as the\nmaximum number of packets in the tfifo. The same applies to netem's\nbacklog statistics.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57947",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_set_pipapo: fix initial map fill\n\nThe initial buffer has to be inited to all-ones, but it must restrict\nit to the size of the first field, not the total field size.\n\nAfter each round in the map search step, the result and the fill map\nare swapped, so if we have a set where f-\u003ebsize of the first element\nis smaller than m-\u003ebsize_max, those one-bits are leaked into future\nrounds result map.\n\nThis makes pipapo find an incorrect matching results for sets where\nfirst field size is not the largest.\n\nFollowup patch adds a test case to nft_concat_range.sh selftest script.\n\nThanks to Stefano Brivio for pointing out that we need to zero out\nthe remainder explicitly, only correcting memset() argument isn't enough.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/pseries/iommu: IOMMU incorrectly marks MMIO range in DDW\n\nPower Hypervisor can possibily allocate MMIO window intersecting with\nDynamic DMA Window (DDW) range, which is over 32-bit addressing.\n\nThese MMIO pages needs to be marked as reserved so that IOMMU doesn't map\nDMA buffers in this range.\n\nThe current code is not marking these pages correctly which is resulting\nin LPAR to OOPS while booting. The stack is at below\n\nBUG: Unable to handle kernel data access on read at 0xc00800005cd40000\nFaulting instruction address: 0xc00000000005cdac\nOops: Kernel access of bad area, sig: 11 [#1]\nLE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: af_packet rfkill ibmveth(X) lpfc(+) nvmet_fc nvmet nvme_keyring crct10dif_vpmsum nvme_fc nvme_fabrics nvme_core be2net(+) nvme_auth rtc_generic nfsd auth_rpcgss nfs_acl lockd grace sunrpc fuse configfs ip_tables x_tables xfs libcrc32c dm_service_time ibmvfc(X) scsi_transport_fc vmx_crypto gf128mul crc32c_vpmsum dm_mirror dm_region_hash dm_log dm_multipath dm_mod sd_mod scsi_dh_emc scsi_dh_rdac scsi_dh_alua t10_pi crc64_rocksoft_generic crc64_rocksoft sg crc64 scsi_mod\nSupported: Yes, External\nCPU: 8 PID: 241 Comm: kworker/8:1 Kdump: loaded Not tainted 6.4.0-150600.23.14-default #1 SLE15-SP6 b44ee71c81261b9e4bab5e0cde1f2ed891d5359b\nHardware name: IBM,9080-M9S POWER9 (raw) 0x4e2103 0xf000005 of:IBM,FW950.B0 (VH950_149) hv:phyp pSeries\nWorkqueue: events work_for_cpu_fn\nNIP:  c00000000005cdac LR: c00000000005e830 CTR: 0000000000000000\nREGS: c00001400c9ff770 TRAP: 0300   Not tainted  (6.4.0-150600.23.14-default)\nMSR:  800000000280b033 \u003cSF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE\u003e  CR: 24228448  XER: 00000001\nCFAR: c00000000005cdd4 DAR: c00800005cd40000 DSISR: 40000000 IRQMASK: 0\nGPR00: c00000000005e830 c00001400c9ffa10 c000000001987d00 c00001400c4fe800\nGPR04: 0000080000000000 0000000000000001 0000000004000000 0000000000800000\nGPR08: 0000000004000000 0000000000000001 c00800005cd40000 ffffffffffffffff\nGPR12: 0000000084228882 c00000000a4c4f00 0000000000000010 0000080000000000\nGPR16: c00001400c4fe800 0000000004000000 0800000000000000 c00000006088b800\nGPR20: c00001401a7be980 c00001400eff3800 c000000002a2da68 000000000000002b\nGPR24: c0000000026793a8 c000000002679368 000000000000002a c0000000026793c8\nGPR28: 000008007effffff 0000080000000000 0000000000800000 c00001400c4fe800\nNIP [c00000000005cdac] iommu_table_reserve_pages+0xac/0x100\nLR [c00000000005e830] iommu_init_table+0x80/0x1e0\nCall Trace:\n[c00001400c9ffa10] [c00000000005e810] iommu_init_table+0x60/0x1e0 (unreliable)\n[c00001400c9ffa90] [c00000000010356c] iommu_bypass_supported_pSeriesLP+0x9cc/0xe40\n[c00001400c9ffc30] [c00000000005c300] dma_iommu_dma_supported+0xf0/0x230\n[c00001400c9ffcb0] [c00000000024b0c4] dma_supported+0x44/0x90\n[c00001400c9ffcd0] [c00000000024b14c] dma_set_mask+0x3c/0x80\n[c00001400c9ffd00] [c0080000555b715c] be_probe+0xc4/0xb90 [be2net]\n[c00001400c9ffdc0] [c000000000986f3c] local_pci_probe+0x6c/0x110\n[c00001400c9ffe40] [c000000000188f28] work_for_cpu_fn+0x38/0x60\n[c00001400c9ffe70] [c00000000018e454] process_one_work+0x314/0x620\n[c00001400c9fff10] [c00000000018f280] worker_thread+0x2b0/0x620\n[c00001400c9fff90] [c00000000019bb18] kthread+0x148/0x150\n[c00001400c9fffe0] [c00000000000ded8] start_kernel_thread+0x14/0x18\n\nThere are 2 issues in the code\n\n1. The index is \"int\" while the address is \"unsigned long\". This results in\n   negative value when setting the bitmap.\n\n2. The DMA offset is page shifted but the MMIO range is used as-is (64-bit\n   address). MMIO address needs to be page shifted as well.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0495",
      "Description": "Buildx is a Docker CLI plugin that extends build capabilities using BuildKit.\n\nCache backends support credentials by setting secrets directly as attribute values in cache-to/cache-from  configuration. When supplied as user input, these secure values may be inadvertently captured in OpenTelemetry traces as part of the arguments and flags for the traced CLI command.  OpenTelemetry traces are also saved in BuildKit daemon's history records.\n\n\nThis vulnerability does not impact secrets passed to the Github cache backend  via environment variables or registry authentication.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-1713",
      "Description": "When setting up interrupt remapping for legacy PCI(-X) devices,\nincluding PCI(-X) bridges, a lookup of the upstream bridge is required.\nThis lookup, itself involving acquiring of a lock, is done in a context\nwhere acquiring that lock is unsafe.  This can lead to a deadlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xen-libs-4.16.7_02-150400.4.72.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21700",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: Disallow replacing of child qdisc from one parent to another\n\nLion Ackermann was able to create a UAF which can be abused for privilege\nescalation with the following script\n\nStep 1. create root qdisc\ntc qdisc add dev lo root handle 1:0 drr\n\nstep2. a class for packet aggregation do demonstrate uaf\ntc class add dev lo classid 1:1 drr\n\nstep3. a class for nesting\ntc class add dev lo classid 1:2 drr\n\nstep4. a class to graft qdisc to\ntc class add dev lo classid 1:3 drr\n\nstep5.\ntc qdisc add dev lo parent 1:1 handle 2:0 plug limit 1024\n\nstep6.\ntc qdisc add dev lo parent 1:2 handle 3:0 drr\n\nstep7.\ntc class add dev lo classid 3:1 drr\n\nstep 8.\ntc qdisc add dev lo parent 3:1 handle 4:0 pfifo\n\nstep 9. Display the class/qdisc layout\n\ntc class ls dev lo\n class drr 1:1 root leaf 2: quantum 64Kb\n class drr 1:2 root leaf 3: quantum 64Kb\n class drr 3:1 root leaf 4: quantum 64Kb\n\ntc qdisc ls\n qdisc drr 1: dev lo root refcnt 2\n qdisc plug 2: dev lo parent 1:1\n qdisc pfifo 4: dev lo parent 3:1 limit 1000p\n qdisc drr 3: dev lo parent 1:2\n\nstep10. trigger the bug \u003c=== prevented by this patch\ntc qdisc replace dev lo parent 1:3 handle 4:0\n\nstep 11. Redisplay again the qdiscs/classes\n\ntc class ls dev lo\n class drr 1:1 root leaf 2: quantum 64Kb\n class drr 1:2 root leaf 3: quantum 64Kb\n class drr 1:3 root leaf 4: quantum 64Kb\n class drr 3:1 root leaf 4: quantum 64Kb\n\ntc qdisc ls\n qdisc drr 1: dev lo root refcnt 2\n qdisc plug 2: dev lo parent 1:1\n qdisc pfifo 4: dev lo parent 3:1 refcnt 2 limit 1000p\n qdisc drr 3: dev lo parent 1:2\n\nObserve that a) parent for 4:0 does not change despite the replace request.\nThere can only be one parent.  b) refcount has gone up by two for 4:0 and\nc) both class 1:3 and 3:1 are pointing to it.\n\nStep 12.  send one packet to plug\necho \"\" | socat -u STDIN UDP4-DATAGRAM:127.0.0.1:8888,priority=$((0x10001))\nstep13.  send one packet to the grafted fifo\necho \"\" | socat -u STDIN UDP4-DATAGRAM:127.0.0.1:8888,priority=$((0x10003))\n\nstep14. lets trigger the uaf\ntc class delete dev lo classid 1:3\ntc class delete dev lo classid 1:1\n\nThe semantics of \"replace\" is for a del/add _on the same node_ and not\na delete from one node(3:1) and add to another node (1:3) as in step10.\nWhile we could \"fix\" with a more complex approach there could be\nconsequences to expectations so the patch takes the preventive approach of\n\"disallow such config\".\n\nJoint work with Lion Ackermann \u003cnnamrec@gmail.com\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21702",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npfifo_tail_enqueue: Drop new packet when sch-\u003elimit == 0\n\nExpected behaviour:\nIn case we reach scheduler's limit, pfifo_tail_enqueue() will drop a\npacket in scheduler's queue and decrease scheduler's qlen by one.\nThen, pfifo_tail_enqueue() enqueue new packet and increase\nscheduler's qlen by one. Finally, pfifo_tail_enqueue() return\n`NET_XMIT_CN` status code.\n\nWeird behaviour:\nIn case we set `sch-\u003elimit == 0` and trigger pfifo_tail_enqueue() on a\nscheduler that has no packet, the 'drop a packet' step will do nothing.\nThis means the scheduler's qlen still has value equal 0.\nThen, we continue to enqueue new packet and increase scheduler's qlen by\none. In summary, we can leverage pfifo_tail_enqueue() to increase qlen by\none and return `NET_XMIT_CN` status code.\n\nThe problem is:\nLet's say we have two qdiscs: Qdisc_A and Qdisc_B.\n - Qdisc_A's type must have '-\u003egraft()' function to create parent/child relationship.\n   Let's say Qdisc_A's type is `hfsc`. Enqueue packet to this qdisc will trigger `hfsc_enqueue`.\n - Qdisc_B's type is pfifo_head_drop. Enqueue packet to this qdisc will trigger `pfifo_tail_enqueue`.\n - Qdisc_B is configured to have `sch-\u003elimit == 0`.\n - Qdisc_A is configured to route the enqueued's packet to Qdisc_B.\n\nEnqueue packet through Qdisc_A will lead to:\n - hfsc_enqueue(Qdisc_A) -\u003e pfifo_tail_enqueue(Qdisc_B)\n - Qdisc_B-\u003eq.qlen += 1\n - pfifo_tail_enqueue() return `NET_XMIT_CN`\n - hfsc_enqueue() check for `NET_XMIT_SUCCESS` and see `NET_XMIT_CN` =\u003e hfsc_enqueue() don't increase qlen of Qdisc_A.\n\nThe whole process lead to a situation where Qdisc_A-\u003eq.qlen == 0 and Qdisc_B-\u003eq.qlen == 1.\nReplace 'hfsc' with other type (for example: 'drr') still lead to the same problem.\nThis violate the design where parent's qlen should equal to the sum of its childrens'qlen.\n\nBug impact: This issue can be used for user-\u003ekernel privilege escalation when it is reachable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21703",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetem: Update sch-\u003eq.qlen before qdisc_tree_reduce_backlog()\n\nqdisc_tree_reduce_backlog() notifies parent qdisc only if child\nqdisc becomes empty, therefore we need to reduce the backlog of the\nchild qdisc before calling it. Otherwise it would miss the opportunity\nto call cops-\u003eqlen_notify(), in the case of DRR, it resulted in UAF\nsince DRR uses -\u003eqlen_notify() to maintain its active list.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21756",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: Keep the binding until socket destruction\n\nPreserve sockets bindings; this includes both resulting from an explicit\nbind() and those implicitly bound through autobind during connect().\n\nPrevents socket unbinding during a transport reassignment, which fixes a\nuse-after-free:\n\n    1. vsock_create() (refcnt=1) calls vsock_insert_unbound() (refcnt=2)\n    2. transport-\u003erelease() calls vsock_remove_bound() without checking if\n       sk was bound and moved to bound list (refcnt=1)\n    3. vsock_bind() assumes sk is in unbound list and before\n       __vsock_insert_bound(vsock_bound_sockets()) calls\n       __vsock_remove_bound() which does:\n           list_del_init(\u0026vsk-\u003ebound_table); // nop\n           sock_put(\u0026vsk-\u003esk);               // refcnt=0\n\nBUG: KASAN: slab-use-after-free in __vsock_bind+0x62e/0x730\nRead of size 4 at addr ffff88816b46a74c by task a.out/2057\n dump_stack_lvl+0x68/0x90\n print_report+0x174/0x4f6\n kasan_report+0xb9/0x190\n __vsock_bind+0x62e/0x730\n vsock_bind+0x97/0xe0\n __sys_bind+0x154/0x1f0\n __x64_sys_bind+0x6e/0xb0\n do_syscall_64+0x93/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nAllocated by task 2057:\n kasan_save_stack+0x1e/0x40\n kasan_save_track+0x10/0x30\n __kasan_slab_alloc+0x85/0x90\n kmem_cache_alloc_noprof+0x131/0x450\n sk_prot_alloc+0x5b/0x220\n sk_alloc+0x2c/0x870\n __vsock_create.constprop.0+0x2e/0xb60\n vsock_create+0xe4/0x420\n __sock_create+0x241/0x650\n __sys_socket+0xf2/0x1a0\n __x64_sys_socket+0x6e/0xb0\n do_syscall_64+0x93/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFreed by task 2057:\n kasan_save_stack+0x1e/0x40\n kasan_save_track+0x10/0x30\n kasan_save_free_info+0x37/0x60\n __kasan_slab_free+0x4b/0x70\n kmem_cache_free+0x1a1/0x590\n __sk_destruct+0x388/0x5a0\n __vsock_bind+0x5e1/0x730\n vsock_bind+0x97/0xe0\n __sys_bind+0x154/0x1f0\n __x64_sys_bind+0x6e/0xb0\n do_syscall_64+0x93/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 7 PID: 2057 at lib/refcount.c:25 refcount_warn_saturate+0xce/0x150\nRIP: 0010:refcount_warn_saturate+0xce/0x150\n __vsock_bind+0x66d/0x730\n vsock_bind+0x97/0xe0\n __sys_bind+0x154/0x1f0\n __x64_sys_bind+0x6e/0xb0\n do_syscall_64+0x93/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 7 PID: 2057 at lib/refcount.c:28 refcount_warn_saturate+0xee/0x150\nRIP: 0010:refcount_warn_saturate+0xee/0x150\n vsock_remove_bound+0x187/0x1e0\n __vsock_release+0x383/0x4a0\n vsock_release+0x90/0x120\n __sock_release+0xa3/0x250\n sock_close+0x14/0x20\n __fput+0x359/0xa80\n task_work_run+0x107/0x1d0\n do_exit+0x847/0x2560\n do_group_exit+0xb8/0x250\n __x64_sys_exit_group+0x3a/0x50\n x64_sys_call+0xfec/0x14f0\n do_syscall_64+0x93/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuprobes: Reject the shared zeropage in uprobe_write_opcode()\n\nWe triggered the following crash in syzkaller tests:\n\n  BUG: Bad page state in process syz.7.38  pfn:1eff3\n  page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1eff3\n  flags: 0x3fffff00004004(referenced|reserved|node=0|zone=1|lastcpupid=0x1fffff)\n  raw: 003fffff00004004 ffffe6c6c07bfcc8 ffffe6c6c07bfcc8 0000000000000000\n  raw: 0000000000000000 0000000000000000 00000000fffffffe 0000000000000000\n  page dumped because: PAGE_FLAGS_CHECK_AT_FREE flag(s) set\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x32/0x50\n   bad_page+0x69/0xf0\n   free_unref_page_prepare+0x401/0x500\n   free_unref_page+0x6d/0x1b0\n   uprobe_write_opcode+0x460/0x8e0\n   install_breakpoint.part.0+0x51/0x80\n   register_for_each_vma+0x1d9/0x2b0\n   __uprobe_register+0x245/0x300\n   bpf_uprobe_multi_link_attach+0x29b/0x4f0\n   link_create+0x1e2/0x280\n   __sys_bpf+0x75f/0xac0\n   __x64_sys_bpf+0x1a/0x30\n   do_syscall_64+0x56/0x100\n   entry_SYSCALL_64_after_hwframe+0x78/0xe2\n\n   BUG: Bad rss-counter state mm:00000000452453e0 type:MM_FILEPAGES val:-1\n\nThe following syzkaller test case can be used to reproduce:\n\n  r2 = creat(\u0026(0x7f0000000000)='./file0\\x00', 0x8)\n  write$nbd(r2, \u0026(0x7f0000000580)=ANY=[], 0x10)\n  r4 = openat(0xffffffffffffff9c, \u0026(0x7f0000000040)='./file0\\x00', 0x42, 0x0)\n  mmap$IORING_OFF_SQ_RING(\u0026(0x7f0000ffd000/0x3000)=nil, 0x3000, 0x0, 0x12, r4, 0x0)\n  r5 = userfaultfd(0x80801)\n  ioctl$UFFDIO_API(r5, 0xc018aa3f, \u0026(0x7f0000000040)={0xaa, 0x20})\n  r6 = userfaultfd(0x80801)\n  ioctl$UFFDIO_API(r6, 0xc018aa3f, \u0026(0x7f0000000140))\n  ioctl$UFFDIO_REGISTER(r6, 0xc020aa00, \u0026(0x7f0000000100)={{\u0026(0x7f0000ffc000/0x4000)=nil, 0x4000}, 0x2})\n  ioctl$UFFDIO_ZEROPAGE(r5, 0xc020aa04, \u0026(0x7f0000000000)={{\u0026(0x7f0000ffd000/0x1000)=nil, 0x1000}})\n  r7 = bpf$PROG_LOAD(0x5, \u0026(0x7f0000000140)={0x2, 0x3, \u0026(0x7f0000000200)=ANY=[@ANYBLOB=\"1800000000120000000000000000000095\"], \u0026(0x7f0000000000)='GPL\\x00', 0x7, 0x0, 0x0, 0x0, 0x0, '\\x00', 0x0, @fallback=0x30, 0xffffffffffffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, @void, @value}, 0x94)\n  bpf$BPF_LINK_CREATE_XDP(0x1c, \u0026(0x7f0000000040)={r7, 0x0, 0x30, 0x1e, @val=@uprobe_multi={\u0026(0x7f0000000080)='./file0\\x00', \u0026(0x7f0000000100)=[0x2], 0x0, 0x0, 0x1}}, 0x40)\n\nThe cause is that zero pfn is set to the PTE without increasing the RSS\ncount in mfill_atomic_pte_zeropage() and the refcount of zero folio does\nnot increase accordingly. Then, the operation on the same pfn is performed\nin uprobe_write_opcode()-\u003e__replace_page() to unconditional decrease the\nRSS count and old_folio's refcount.\n\nTherefore, two bugs are introduced:\n\n 1. The RSS count is incorrect, when process exit, the check_mm() report\n    error \"Bad rss-count\".\n\n 2. The reserved folio (zero folio) is freed when folio-\u003erefcount is zero,\n    then free_pages_prepare-\u003efree_page_is_bad() report error\n    \"Bad page state\".\n\nThere is more, the following warning could also theoretically be triggered:\n\n  __replace_page()\n    -\u003e ...\n      -\u003e folio_remove_rmap_pte()\n        -\u003e VM_WARN_ON_FOLIO(is_zero_folio(folio), folio)\n\nConsidering that uprobe hit on the zero folio is a very rare case, just\nreject zero old folio immediately after get_user_page_vma_remote().\n\n[ mingo: Cleaned up the changelog ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21888",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Fix a WARN during dereg_mr for DM type\n\nMemory regions (MR) of type DM (device memory) do not have an associated\numem.\n\nIn the __mlx5_ib_dereg_mr() -\u003e mlx5_free_priv_descs() flow, the code\nincorrectly takes the wrong branch, attempting to call\ndma_unmap_single() on a DMA address that is not mapped.\n\nThis results in a WARN [1], as shown below.\n\nThe issue is resolved by properly accounting for the DM type and\nensuring the correct branch is selected in mlx5_free_priv_descs().\n\n[1]\nWARNING: CPU: 12 PID: 1346 at drivers/iommu/dma-iommu.c:1230 iommu_dma_unmap_page+0x79/0x90\nModules linked in: ip6table_mangle ip6table_nat ip6table_filter ip6_tables iptable_mangle xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcgss oid_registry ovelay rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core fuse mlx5_core\nCPU: 12 UID: 0 PID: 1346 Comm: ibv_rc_pingpong Not tainted 6.12.0-rc7+ #1631\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nRIP: 0010:iommu_dma_unmap_page+0x79/0x90\nCode: 2b 49 3b 29 72 26 49 3b 69 08 73 20 4d 89 f0 44 89 e9 4c 89 e2 48 89 ee 48 89 df 5b 5d 41 5c 41 5d 41 5e 41 5f e9 07 b8 88 ff \u003c0f\u003e 0b 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 66 0f 1f 44 00\nRSP: 0018:ffffc90001913a10 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88810194b0a8 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000001\nRBP: ffff88810194b0a8 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: 0000000000000001 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007f537abdd740(0000) GS:ffff88885fb00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f537aeb8000 CR3: 000000010c248001 CR4: 0000000000372eb0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n\u003cTASK\u003e\n? __warn+0x84/0x190\n? iommu_dma_unmap_page+0x79/0x90\n? report_bug+0xf8/0x1c0\n? handle_bug+0x55/0x90\n? exc_invalid_op+0x13/0x60\n? asm_exc_invalid_op+0x16/0x20\n? iommu_dma_unmap_page+0x79/0x90\ndma_unmap_page_attrs+0xe6/0x290\nmlx5_free_priv_descs+0xb0/0xe0 [mlx5_ib]\n__mlx5_ib_dereg_mr+0x37e/0x520 [mlx5_ib]\n? _raw_spin_unlock_irq+0x24/0x40\n? wait_for_completion+0xfe/0x130\n? rdma_restrack_put+0x63/0xe0 [ib_core]\nib_dereg_mr_user+0x5f/0x120 [ib_core]\n? lock_release+0xc6/0x280\ndestroy_hw_idr_uobject+0x1d/0x60 [ib_uverbs]\nuverbs_destroy_uobject+0x58/0x1d0 [ib_uverbs]\nuobj_destroy+0x3f/0x70 [ib_uverbs]\nib_uverbs_cmd_verbs+0x3e4/0xbb0 [ib_uverbs]\n? __pfx_uverbs_destroy_def_handler+0x10/0x10 [ib_uverbs]\n? lock_acquire+0xc1/0x2f0\n? ib_uverbs_ioctl+0xcb/0x170 [ib_uverbs]\n? ib_uverbs_ioctl+0x116/0x170 [ib_uverbs]\n? lock_release+0xc6/0x280\nib_uverbs_ioctl+0xe7/0x170 [ib_uverbs]\n? ib_uverbs_ioctl+0xcb/0x170 [ib_uverbs]\n__x64_sys_ioctl+0x1b0/0xa70\ndo_syscall_64+0x6b/0x140\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\nRIP: 0033:0x7f537adaf17b\nCode: 0f 1e fa 48 8b 05 1d ad 0c 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 0f 1f 44 00 00 f3 0f 1e fa b8 10 00 00 00 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d ed ac 0c 00 f7 d8 64 89 01 48\nRSP: 002b:00007ffff218f0b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007ffff218f1d8 RCX: 00007f537adaf17b\nRDX: 00007ffff218f1c0 RSI: 00000000c0181b01 RDI: 0000000000000003\nRBP: 00007ffff218f1a0 R08: 00007f537aa8d010 R09: 0000561ee2e4f270\nR10: 00007f537aace3a8 R11: 0000000000000246 R12: 00007ffff218f190\nR13: 000000000000001c R14: 0000561ee2e4d7c0 R15: 00007ffff218f450\n\u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21971",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: Prevent creation of classes with TC_H_ROOT\n\nThe function qdisc_tree_reduce_backlog() uses TC_H_ROOT as a termination\ncondition when traversing up the qdisc tree to update parent backlog\ncounters. However, if a class is created with classid TC_H_ROOT, the\ntraversal terminates prematurely at this class instead of reaching the\nactual root qdisc, causing parent statistics to be incorrectly maintained.\nIn case of DRR, this could lead to a crash as reported by Mingi Cho.\n\nPrevent the creation of any Qdisc class with classid TC_H_ROOT\n(0xFFFFFFFF) across all qdisc types, as suggested by Jamal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nproc: fix UAF in proc_get_inode()\n\nFix race between rmmod and /proc/XXX's inode instantiation.\n\nThe bug is that pde-\u003eproc_ops don't belong to /proc, it belongs to a\nmodule, therefore dereferencing it after /proc entry has been registered\nis a bug unless use_pde/unuse_pde() pair has been used.\n\nuse_pde/unuse_pde can be avoided (2 atomic ops!) because pde-\u003eproc_ops\nnever changes so information necessary for inode instantiation can be\nsaved _before_ proc_register() in PDE itself and used later, avoiding\npde-\u003eproc_ops-\u003e...  dereference.\n\n      rmmod                         lookup\nsys_delete_module\n                         proc_lookup_de\n\t\t\t   pde_get(de);\n\t\t\t   proc_get_inode(dir-\u003ei_sb, de);\n  mod-\u003eexit()\n    proc_remove\n      remove_proc_subtree\n       proc_entry_rundown(de);\n  free_module(mod);\n\n                               if (S_ISREG(inode-\u003ei_mode))\n\t                         if (de-\u003eproc_ops-\u003eproc_read_iter)\n                           --\u003e As module is already freed, will trigger UAF\n\nBUG: unable to handle page fault for address: fffffbfff80a702b\nPGD 817fc4067 P4D 817fc4067 PUD 817fc0067 PMD 102ef4067 PTE 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 26 UID: 0 PID: 2667 Comm: ls Tainted: G\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nRIP: 0010:proc_get_inode+0x302/0x6e0\nRSP: 0018:ffff88811c837998 EFLAGS: 00010a06\nRAX: dffffc0000000000 RBX: ffffffffc0538140 RCX: 0000000000000007\nRDX: 1ffffffff80a702b RSI: 0000000000000001 RDI: ffffffffc0538158\nRBP: ffff8881299a6000 R08: 0000000067bbe1e5 R09: 1ffff11023906f20\nR10: ffffffffb560ca07 R11: ffffffffb2b43a58 R12: ffff888105bb78f0\nR13: ffff888100518048 R14: ffff8881299a6004 R15: 0000000000000001\nFS:  00007f95b9686840(0000) GS:ffff8883af100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: fffffbfff80a702b CR3: 0000000117dd2000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n proc_lookup_de+0x11f/0x2e0\n __lookup_slow+0x188/0x350\n walk_component+0x2ab/0x4f0\n path_lookupat+0x120/0x660\n filename_lookup+0x1ce/0x560\n vfs_statx+0xac/0x150\n __do_sys_newstat+0x96/0x110\n do_syscall_64+0x5f/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n[adobriyan@gmail.com: don't do 2 atomic ops on the common path]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22056",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_tunnel: fix geneve_opt type confusion addition\n\nWhen handling multiple NFTA_TUNNEL_KEY_OPTS_GENEVE attributes, the\nparsing logic should place every geneve_opt structure one by one\ncompactly. Hence, when deciding the next geneve_opt position, the\npointer addition should be in units of char *.\n\nHowever, the current implementation erroneously does type conversion\nbefore the addition, which will lead to heap out-of-bounds write.\n\n[    6.989857] ==================================================================\n[    6.990293] BUG: KASAN: slab-out-of-bounds in nft_tunnel_obj_init+0x977/0xa70\n[    6.990725] Write of size 124 at addr ffff888005f18974 by task poc/178\n[    6.991162]\n[    6.991259] CPU: 0 PID: 178 Comm: poc-oob-write Not tainted 6.1.132 #1\n[    6.991655] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\n[    6.992281] Call Trace:\n[    6.992423]  \u003cTASK\u003e\n[    6.992586]  dump_stack_lvl+0x44/0x5c\n[    6.992801]  print_report+0x184/0x4be\n[    6.993790]  kasan_report+0xc5/0x100\n[    6.994252]  kasan_check_range+0xf3/0x1a0\n[    6.994486]  memcpy+0x38/0x60\n[    6.994692]  nft_tunnel_obj_init+0x977/0xa70\n[    6.995677]  nft_obj_init+0x10c/0x1b0\n[    6.995891]  nf_tables_newobj+0x585/0x950\n[    6.996922]  nfnetlink_rcv_batch+0xdf9/0x1020\n[    6.998997]  nfnetlink_rcv+0x1df/0x220\n[    6.999537]  netlink_unicast+0x395/0x530\n[    7.000771]  netlink_sendmsg+0x3d0/0x6d0\n[    7.001462]  __sock_sendmsg+0x99/0xa0\n[    7.001707]  ____sys_sendmsg+0x409/0x450\n[    7.002391]  ___sys_sendmsg+0xfd/0x170\n[    7.003145]  __sys_sendmsg+0xea/0x170\n[    7.004359]  do_syscall_64+0x5e/0x90\n[    7.005817]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n[    7.006127] RIP: 0033:0x7ec756d4e407\n[    7.006339] Code: 48 89 fa 4c 89 df e8 38 aa 00 00 8b 93 08 03 00 00 59 5e 48 83 f8 fc 74 1a 5b c3 0f 1f 84 00 00 00 00 00 48 8b 44 24 10 0f 05 \u003c5b\u003e c3 0f 1f 80 00 00 00 00 83 e2 39 83 faf\n[    7.007364] RSP: 002b:00007ffed5d46760 EFLAGS: 00000202 ORIG_RAX: 000000000000002e\n[    7.007827] RAX: ffffffffffffffda RBX: 00007ec756cc4740 RCX: 00007ec756d4e407\n[    7.008223] RDX: 0000000000000000 RSI: 00007ffed5d467f0 RDI: 0000000000000003\n[    7.008620] RBP: 00007ffed5d468a0 R08: 0000000000000000 R09: 0000000000000000\n[    7.009039] R10: 0000000000000000 R11: 0000000000000202 R12: 0000000000000000\n[    7.009429] R13: 00007ffed5d478b0 R14: 00007ec756ee5000 R15: 00005cbd4e655cb8\n\nFix this bug with correct pointer addition and conversion in parse\nand dump code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvpp2: Prevent parser TCAM memory corruption\n\nProtect the parser TCAM/SRAM memory, and the cached (shadow) SRAM\ninformation, from concurrent modifications.\n\nBoth the TCAM and SRAM tables are indirectly accessed by configuring\nan index register that selects the row to read or write to. This means\nthat operations must be atomic in order to, e.g., avoid spreading\nwrites across multiple rows. Since the shadow SRAM array is used to\nfind free rows in the hardware table, it must also be protected in\norder to avoid TOCTOU errors where multiple cores allocate the same\nrow.\n\nThis issue was detected in a situation where `mvpp2_set_rx_mode()` ran\nconcurrently on two CPUs. In this particular case the\nMVPP2_PE_MAC_UC_PROMISCUOUS entry was corrupted, causing the\nclassifier unit to drop all incoming unicast - indicated by the\n`rx_classifier_drops` counter.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22868",
      "Description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22869",
      "Description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22872",
      "Description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23048",
      "Description": "In some mod_ssl configurations on Apache HTTP Server 2.4.35 through to 2.4.63, an access control bypass by trusted clients is possible using TLS 1.3 session resumption.\n\nConfigurations are affected when mod_ssl is configured for multiple virtual hosts, with each restricted to a different set of trusted client certificates (for example with a different SSLCACertificateFile/Path setting). In such a case, a client trusted to access one virtual host may be able to access another virtual host, if SSLStrictSNIVHostCheck is not enabled in either virtual host.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatch_queue: fix pipe accounting mismatch\n\nCurrently, watch_queue_set_size() modifies the pipe buffers charged to\nuser-\u003epipe_bufs without updating the pipe-\u003enr_accounted on the pipe\nitself, due to the if (!pipe_has_watch_queue()) test in\npipe_resize_ring(). This means that when the pipe is ultimately freed,\nwe decrement user-\u003epipe_bufs by something other than what than we had\ncharged to it, potentially leading to an underflow. This in turn can\ncause subsequent too_many_pipe_buffers_soft() tests to fail with -EPERM.\n\nTo remedy this, explicitly account for the pipe usage in\nwatch_queue_set_size() to match the number set via account_pipe_buffers()\n\n(It's unclear why watch_queue_set_size() does not update nr_accounted;\nit may be due to intentional overprovisioning in watch_queue_set_size()?)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Acquire SRCU in KVM_GET_MP_STATE to protect guest memory accesses\n\nAcquire a lock on kvm-\u003esrcu when userspace is getting MP state to handle a\nrather extreme edge case where \"accepting\" APIC events, i.e. processing\npending INIT or SIPI, can trigger accesses to guest memory.  If the vCPU\nis in L2 with INIT *and* a TRIPLE_FAULT request pending, then getting MP\nstate will trigger a nested VM-Exit by way of -\u003echeck_nested_events(), and\nemuating the nested VM-Exit can access guest memory.\n\nThe splat was originally hit by syzkaller on a Google-internal kernel, and\nreproduced on an upstream kernel by hacking the triple_fault_event_test\nselftest to stuff a pending INIT, store an MSR on VM-Exit (to generate a\nmemory access on VMX), and do vcpu_mp_state_get() to trigger the scenario.\n\n  =============================\n  WARNING: suspicious RCU usage\n  6.14.0-rc3-b112d356288b-vmx/pi_lockdep_false_pos-lock #3 Not tainted\n  -----------------------------\n  include/linux/kvm_host.h:1058 suspicious rcu_dereference_check() usage!\n\n  other info that might help us debug this:\n\n  rcu_scheduler_active = 2, debug_locks = 1\n  1 lock held by triple_fault_ev/1256:\n   #0: ffff88810df5a330 (\u0026vcpu-\u003emutex){+.+.}-{4:4}, at: kvm_vcpu_ioctl+0x8b/0x9a0 [kvm]\n\n  stack backtrace:\n  CPU: 11 UID: 1000 PID: 1256 Comm: triple_fault_ev Not tainted 6.14.0-rc3-b112d356288b-vmx #3\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x7f/0x90\n   lockdep_rcu_suspicious+0x144/0x190\n   kvm_vcpu_gfn_to_memslot+0x156/0x180 [kvm]\n   kvm_vcpu_read_guest+0x3e/0x90 [kvm]\n   read_and_check_msr_entry+0x2e/0x180 [kvm_intel]\n   __nested_vmx_vmexit+0x550/0xde0 [kvm_intel]\n   kvm_check_nested_events+0x1b/0x30 [kvm]\n   kvm_apic_accept_events+0x33/0x100 [kvm]\n   kvm_arch_vcpu_ioctl_get_mpstate+0x30/0x1d0 [kvm]\n   kvm_vcpu_ioctl+0x33e/0x9a0 [kvm]\n   __x64_sys_ioctl+0x8b/0xb0\n   do_syscall_64+0x6c/0x170\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\n   \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix NULL pointer in can_accept_new_subflow\n\nWhen testing valkey benchmark tool with MPTCP, the kernel panics in\n'mptcp_can_accept_new_subflow' because subflow_req-\u003emsk is NULL.\n\nCall trace:\n\n  mptcp_can_accept_new_subflow (./net/mptcp/subflow.c:63 (discriminator 4)) (P)\n  subflow_syn_recv_sock (./net/mptcp/subflow.c:854)\n  tcp_check_req (./net/ipv4/tcp_minisocks.c:863)\n  tcp_v4_rcv (./net/ipv4/tcp_ipv4.c:2268)\n  ip_protocol_deliver_rcu (./net/ipv4/ip_input.c:207)\n  ip_local_deliver_finish (./net/ipv4/ip_input.c:234)\n  ip_local_deliver (./net/ipv4/ip_input.c:254)\n  ip_rcv_finish (./net/ipv4/ip_input.c:449)\n  ...\n\nAccording to the debug log, the same req received two SYN-ACK in a very\nshort time, very likely because the client retransmits the syn ack due\nto multiple reasons.\n\nEven if the packets are transmitted with a relevant time interval, they\ncan be processed by the server on different CPUs concurrently). The\n'subflow_req-\u003emsk' ownership is transferred to the subflow the first,\nand there will be a risk of a null pointer dereference here.\n\nThis patch fixes this issue by moving the 'subflow_req-\u003emsk' under the\n`own_req == true` conditional.\n\nNote that the !msk check in subflow_hmac_valid() can be dropped, because\nthe same check already exists under the own_req mpj branch where the\ncode has been moved to.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27221",
      "Description": "In the URI gem before 1.0.3 for Ruby, the URI handling methods (URI.join, URI#merge, URI#+) have an inadvertent leakage of authentication credentials because userinfo is retained even after changing the host.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libruby2_5-2_5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:ruby2.5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:ruby2.5-stdlib-2.5.9-150000.4.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27465",
      "Description": "Certain instructions need intercepting and emulating by Xen.  In some\ncases Xen emulates the instruction by replaying it, using an executable\nstub.  Some instructions may raise an exception, which is supposed to be\nhandled gracefully.  Certain replayed instructions have additional logic\nto set up and recover the changes to the arithmetic flags.\n\nFor replayed instructions where the flags recovery logic is used, the\nmetadata for exception handling was incorrect, preventing Xen from\nhandling the the exception gracefully, treating it as fatal instead.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xen-libs-4.16.7_02-150400.4.72.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-29768",
      "Description": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:vim-9.1.1406-150000.5.75.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:vim-data-common-9.1.1406-150000.5.75.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xxd-9.1.1406-150000.5.75.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32462",
      "Description": "Sudo before 1.9.17p1, when used with a sudoers file that specifies a host that is neither the current host nor ALL, allows listed users to execute commands on unintended machines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:sudo-1.9.9-150400.4.39.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32988",
      "Description": "A flaw was found in GnuTLS. A double-free vulnerability exists in GnuTLS due to incorrect ownership handling in the export logic of Subject Alternative Name (SAN) entries containing an otherName. If the type-id OID is invalid or malformed, GnuTLS will call asn1_delete_structure() on an ASN.1 node it does not own, leading to a double-free condition when the parent function or caller later attempts to free the same structure.\n\nThis vulnerability can be triggered using only public GnuTLS APIs and may result in denial of service or memory corruption, depending on allocator behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgnutls30-3.7.3-150400.4.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32989",
      "Description": "A heap-buffer-overread vulnerability was found in GnuTLS in how it handles the Certificate Transparency (CT) Signed Certificate Timestamp (SCT) extension during X.509 certificate parsing. This flaw allows a malicious user to create a certificate containing a malformed SCT extension (OID 1.3.6.1.4.1.11129.2.4.2) that contains sensitive data. This issue leads to the exposure of confidential information when GnuTLS verifies certificates from certain websites when the certificate (SCT) is not checked correctly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgnutls30-3.7.3-150400.4.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32990",
      "Description": "A heap-buffer-overflow (off-by-one) flaw was found in the GnuTLS software in the template parsing logic within the certtool utility. When it reads certain settings from a template file, it allows an attacker to cause an out-of-bounds (OOB) NULL pointer write, resulting in memory corruption and a denial-of-service (DoS) that could potentially crash the system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgnutls30-3.7.3-150400.4.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37752",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: sch_sfq: move the limit validation\n\nIt is not sufficient to directly validate the limit on the data that\nthe user passes as it can be updated based on how the other parameters\nare changed.\n\nMove the check at the end of the configuration update process to also\ncatch scenarios where the limit is indirectly updated, for example\nwith the following configurations:\n\ntc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 depth 1\ntc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 divisor 1\n\nThis fixes the following syzkaller reported crash:\n\n------------[ cut here ]------------\nUBSAN: array-index-out-of-bounds in net/sched/sch_sfq.c:203:6\nindex 65535 is out of range for type 'struct sfq_head[128]'\nCPU: 1 UID: 0 PID: 3037 Comm: syz.2.16 Not tainted 6.14.0-rc2-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 12/27/2024\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x201/0x300 lib/dump_stack.c:120\n ubsan_epilogue lib/ubsan.c:231 [inline]\n __ubsan_handle_out_of_bounds+0xf5/0x120 lib/ubsan.c:429\n sfq_link net/sched/sch_sfq.c:203 [inline]\n sfq_dec+0x53c/0x610 net/sched/sch_sfq.c:231\n sfq_dequeue+0x34e/0x8c0 net/sched/sch_sfq.c:493\n sfq_reset+0x17/0x60 net/sched/sch_sfq.c:518\n qdisc_reset+0x12e/0x600 net/sched/sch_generic.c:1035\n tbf_reset+0x41/0x110 net/sched/sch_tbf.c:339\n qdisc_reset+0x12e/0x600 net/sched/sch_generic.c:1035\n dev_reset_queue+0x100/0x1b0 net/sched/sch_generic.c:1311\n netdev_for_each_tx_queue include/linux/netdevice.h:2590 [inline]\n dev_deactivate_many+0x7e5/0xe70 net/sched/sch_generic.c:1375",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37785",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix OOB read when checking dotdot dir\n\nMounting a corrupted filesystem with directory which contains '.' dir\nentry with rec_len == block size results in out-of-bounds read (later\non, when the corrupted directory is removed).\n\next4_empty_dir() assumes every ext4 directory contains at least '.'\nand '..' as directory entries in the first data block. It first loads\nthe '.' dir entry, performs sanity checks by calling ext4_check_dir_entry()\nand then uses its rec_len member to compute the location of '..' dir\nentry (in ext4_next_entry). It assumes the '..' dir entry fits into the\nsame data block.\n\nIf the rec_len of '.' is precisely one block (4KB), it slips through the\nsanity checks (it is considered the last directory entry in the data\nblock) and leaves \"struct ext4_dir_entry_2 *de\" point exactly past the\nmemory slot allocated to the data block. The following call to\next4_check_dir_entry() on new value of de then dereferences this pointer\nwhich results in out-of-bounds mem access.\n\nFix this by extending __ext4_check_dir_entry() to check for '.' dir\nentries that reach the end of data block. Make sure to ignore the phony\ndir entries for checksum (by checking name_len for non-zero).\n\nNote: This is reported by KASAN as use-after-free in case another\nstructure was recently freed from the slot past the bound, but it is\nreally an OOB read.\n\nThis issue was found by syzkaller tool.\n\nCall Trace:\n[   38.594108] BUG: KASAN: slab-use-after-free in __ext4_check_dir_entry+0x67e/0x710\n[   38.594649] Read of size 2 at addr ffff88802b41a004 by task syz-executor/5375\n[   38.595158]\n[   38.595288] CPU: 0 UID: 0 PID: 5375 Comm: syz-executor Not tainted 6.14.0-rc7 #1\n[   38.595298] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\n[   38.595304] Call Trace:\n[   38.595308]  \u003cTASK\u003e\n[   38.595311]  dump_stack_lvl+0xa7/0xd0\n[   38.595325]  print_address_description.constprop.0+0x2c/0x3f0\n[   38.595339]  ? __ext4_check_dir_entry+0x67e/0x710\n[   38.595349]  print_report+0xaa/0x250\n[   38.595359]  ? __ext4_check_dir_entry+0x67e/0x710\n[   38.595368]  ? kasan_addr_to_slab+0x9/0x90\n[   38.595378]  kasan_report+0xab/0xe0\n[   38.595389]  ? __ext4_check_dir_entry+0x67e/0x710\n[   38.595400]  __ext4_check_dir_entry+0x67e/0x710\n[   38.595410]  ext4_empty_dir+0x465/0x990\n[   38.595421]  ? __pfx_ext4_empty_dir+0x10/0x10\n[   38.595432]  ext4_rmdir.part.0+0x29a/0xd10\n[   38.595441]  ? __dquot_initialize+0x2a7/0xbf0\n[   38.595455]  ? __pfx_ext4_rmdir.part.0+0x10/0x10\n[   38.595464]  ? __pfx___dquot_initialize+0x10/0x10\n[   38.595478]  ? down_write+0xdb/0x140\n[   38.595487]  ? __pfx_down_write+0x10/0x10\n[   38.595497]  ext4_rmdir+0xee/0x140\n[   38.595506]  vfs_rmdir+0x209/0x670\n[   38.595517]  ? lookup_one_qstr_excl+0x3b/0x190\n[   38.595529]  do_rmdir+0x363/0x3c0\n[   38.595537]  ? __pfx_do_rmdir+0x10/0x10\n[   38.595544]  ? strncpy_from_user+0x1ff/0x2e0\n[   38.595561]  __x64_sys_unlinkat+0xf0/0x130\n[   38.595570]  do_syscall_64+0x5b/0x180\n[   38.595583]  entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix nested key length validation in the set() action\n\nIt's not safe to access nla_len(ovs_key) if the data is smaller than\nthe netlink header.  Check that the attribute is OK first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37797",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a UAF vulnerability in class handling\n\nThis patch fixes a Use-After-Free vulnerability in the HFSC qdisc class\nhandling. The issue occurs due to a time-of-check/time-of-use condition\nin hfsc_change_class() when working with certain child qdiscs like netem\nor codel.\n\nThe vulnerability works as follows:\n1. hfsc_change_class() checks if a class has packets (q.qlen != 0)\n2. It then calls qdisc_peek_len(), which for certain qdiscs (e.g.,\n   codel, netem) might drop packets and empty the queue\n3. The code continues assuming the queue is still non-empty, adding\n   the class to vttree\n4. This breaks HFSC scheduler assumptions that only non-empty classes\n   are in vttree\n5. Later, when the class is destroyed, this can lead to a Use-After-Free\n\nThe fix adds a second queue length check after qdisc_peek_len() to verify\nthe queue wasn't emptied.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37798",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncodel: remove sch-\u003eq.qlen check before qdisc_tree_reduce_backlog()\n\nAfter making all -\u003eqlen_notify() callbacks idempotent, now it is safe to\nremove the check of qlen!=0 from both fq_codel_dequeue() and\ncodel_qdisc_dequeue().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37823",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a potential UAF in hfsc_dequeue() too\n\nSimilarly to the previous patch, we need to safe guard hfsc_dequeue()\ntoo. But for this one, we don't have a reliable reproducer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a UAF vulnerability in class with netem as child qdisc\n\nAs described in Gerrard's report [1], we have a UAF case when an hfsc class\nhas a netem child qdisc. The crux of the issue is that hfsc is assuming\nthat checking for cl-\u003eqdisc-\u003eq.qlen == 0 guarantees that it hasn't inserted\nthe class in the vttree or eltree (which is not true for the netem\nduplicate case).\n\nThis patch checks the n_active class variable to make sure that the code\nwon't insert the class in the vttree or eltree twice, catering for the\nreentrant case.\n\n[1] https://lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: bpf: Add BHB mitigation to the epilogue for cBPF programs\n\nA malicious BPF program may manipulate the branch history to influence\nwhat the hardware speculates will happen next.\n\nOn exit from a BPF program, emit the BHB mititgation sequence.\n\nThis is only applied for 'classic' cBPF programs that are loaded by\nseccomp.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: bpf: Only mitigate cBPF programs loaded by unprivileged users\n\nSupport for eBPF programs loaded by unprivileged users is typically\ndisabled. This means only cBPF programs need to be mitigated for BHB.\n\nIn addition, only mitigate cBPF programs that were loaded by an\nunprivileged user. Privileged users can also load the same program\nvia eBPF, making the mitigation pointless.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: fix region locking in hash types\n\nRegion locking introduced in v5.6-rc4 contained three macros to handle\nthe region locks: ahash_bucket_start(), ahash_bucket_end() which gave\nback the start and end hash bucket values belonging to a given region\nlock and ahash_region() which should give back the region lock belonging\nto a given hash bucket. The latter was incorrect which can lead to a\nrace condition between the garbage collector and adding new elements\nwhen a hash type of set is defined with timeouts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38000",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsch_hfsc: Fix qlen accounting bug when using peek in hfsc_enqueue()\n\nWhen enqueuing the first packet to an HFSC class, hfsc_enqueue() calls the\nchild qdisc's peek() operation before incrementing sch-\u003eq.qlen and\nsch-\u003eqstats.backlog. If the child qdisc uses qdisc_peek_dequeued(), this may\ntrigger an immediate dequeue and potential packet drop. In such cases,\nqdisc_tree_reduce_backlog() is called, but the HFSC qdisc's qlen and backlog\nhave not yet been updated, leading to inconsistent queue accounting. This\ncan leave an empty HFSC class in the active list, causing further\nconsequences like use-after-free.\n\nThis patch fixes the bug by moving the increment of sch-\u003eq.qlen and\nsch-\u003eqstats.backlog before the call to the child qdisc's peek() operation.\nThis ensures that queue length and backlog are always accurate when packet\ndrops or dequeues are triggered during the peek.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38001",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Address reentrant enqueue adding class to eltree twice\n\nSavino says:\n    \"We are writing to report that this recent patch\n    (141d34391abbb315d68556b7c67ad97885407547) [1]\n    can be bypassed, and a UAF can still occur when HFSC is utilized with\n    NETEM.\n\n    The patch only checks the cl-\u003ecl_nactive field to determine whether\n    it is the first insertion or not [2], but this field is only\n    incremented by init_vf [3].\n\n    By using HFSC_RSC (which uses init_ed) [4], it is possible to bypass the\n    check and insert the class twice in the eltree.\n    Under normal conditions, this would lead to an infinite loop in\n    hfsc_dequeue for the reasons we already explained in this report [5].\n\n    However, if TBF is added as root qdisc and it is configured with a\n    very low rate,\n    it can be utilized to prevent packets from being dequeued.\n    This behavior can be exploited to perform subsequent insertions in the\n    HFSC eltree and cause a UAF.\"\n\nTo fix both the UAF and the infinite loop, with netem as an hfsc child,\ncheck explicitly in hfsc_enqueue whether the class is already in the eltree\nwhenever the HFSC_RSC flag is set.\n\n[1] https://web.git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=141d34391abbb315d68556b7c67ad97885407547\n[2] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L1572\n[3] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L677\n[4] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L1574\n[5] https://lore.kernel.org/netdev/8DuRWwfqjoRDLDmBMlIfbrsZg9Gx50DHJc1ilxsEBNe2D6NMoigR_eIRIG0LOjMc3r10nUUZtArXx4oZBIdUfZQrwjcQhdinnMis_0G7VEk=@willsroot.io/T/#u",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Refactor remove call with idxd_cleanup() helper\n\nThe idxd_cleanup() helper cleans up perfmon, interrupts, internals and\nso on. Refactor remove call with the idxd_cleanup() helper to avoid code\nduplication. Note, this also fixes the missing put_device() for idxd\ngroups, enginces and wqs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38079",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: algif_hash - fix double free in hash_accept\n\nIf accept(2) is called on socket type algif_hash with\nMSG_MORE flag set and crypto_ahash_import fails,\nsk2 is freed. However, it is also freed in af_alg_release,\nleading to slab-use-after-free error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: prio: fix a race in prio_tune()\n\nGerrard Tai reported a race condition in PRIO, whenever SFQ perturb timer\nfires at the wrong time.\n\nThe race is as follows:\n\nCPU 0                                 CPU 1\n[1]: lock root\n[2]: qdisc_tree_flush_backlog()\n[3]: unlock root\n |\n |                                    [5]: lock root\n |                                    [6]: rehash\n |                                    [7]: qdisc_tree_reduce_backlog()\n |\n[4]: qdisc_put()\n\nThis can be abused to underflow a parent's qlen.\n\nCalling qdisc_purge_queue() instead of qdisc_tree_flush_backlog()\nshould fix the race, because all packets will be purged from the qdisc\nbefore releasing the lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38088",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc/powernv/memtrace: Fix out of bounds issue in memtrace mmap\n\nmemtrace mmap issue has an out of bounds issue. This patch fixes the by\nchecking that the requested mapping region size should stay within the\nallocated region size.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38181",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncalipso: Fix null-ptr-deref in calipso_req_{set,del}attr().\n\nsyzkaller reported a null-ptr-deref in sock_omalloc() while allocating\na CALIPSO option.  [0]\n\nThe NULL is of struct sock, which was fetched by sk_to_full_sk() in\ncalipso_req_setattr().\n\nSince commit a1a5344ddbe8 (\"tcp: avoid two atomic ops for syncookies\"),\nreqsk-\u003ersk_listener could be NULL when SYN Cookie is returned to its\nclient, as hinted by the leading SYN Cookie log.\n\nHere are 3 options to fix the bug:\n\n  1) Return 0 in calipso_req_setattr()\n  2) Return an error in calipso_req_setattr()\n  3) Alaways set rsk_listener\n\n1) is no go as it bypasses LSM, but 2) effectively disables SYN Cookie\nfor CALIPSO.  3) is also no go as there have been many efforts to reduce\natomic ops and make TCP robust against DDoS.  See also commit 3b24d854cb35\n(\"tcp/dccp: do not touch listener sk_refcnt under synflood\").\n\nAs of the blamed commit, SYN Cookie already did not need refcounting,\nand no one has stumbled on the bug for 9 years, so no CALIPSO user will\ncare about SYN Cookie.\n\nLet's return an error in calipso_req_setattr() and calipso_req_delattr()\nin the SYN Cookie case.\n\nThis can be reproduced by [1] on Fedora and now connect() of nc times out.\n\n[0]:\nTCP: request_sock_TCPv6: Possible SYN flooding on port [::]:20002. Sending cookies.\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\nCPU: 3 UID: 0 PID: 12262 Comm: syz.1.2611 Not tainted 6.14.0 #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\nRIP: 0010:read_pnet include/net/net_namespace.h:406 [inline]\nRIP: 0010:sock_net include/net/sock.h:655 [inline]\nRIP: 0010:sock_kmalloc+0x35/0x170 net/core/sock.c:2806\nCode: 89 d5 41 54 55 89 f5 53 48 89 fb e8 25 e3 c6 fd e8 f0 91 e3 00 48 8d 7b 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 26 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b\nRSP: 0018:ffff88811af89038 EFLAGS: 00010216\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffff888105266400\nRDX: 0000000000000006 RSI: ffff88800c890000 RDI: 0000000000000030\nRBP: 0000000000000050 R08: 0000000000000000 R09: ffff88810526640e\nR10: ffffed1020a4cc81 R11: ffff88810526640f R12: 0000000000000000\nR13: 0000000000000820 R14: ffff888105266400 R15: 0000000000000050\nFS:  00007f0653a07640(0000) GS:ffff88811af80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f863ba096f4 CR3: 00000000163c0005 CR4: 0000000000770ef0\nPKRU: 80000000\nCall Trace:\n \u003cIRQ\u003e\n ipv6_renew_options+0x279/0x950 net/ipv6/exthdrs.c:1288\n calipso_req_setattr+0x181/0x340 net/ipv6/calipso.c:1204\n calipso_req_setattr+0x56/0x80 net/netlabel/netlabel_calipso.c:597\n netlbl_req_setattr+0x18a/0x440 net/netlabel/netlabel_kapi.c:1249\n selinux_netlbl_inet_conn_request+0x1fb/0x320 security/selinux/netlabel.c:342\n selinux_inet_conn_request+0x1eb/0x2c0 security/selinux/hooks.c:5551\n security_inet_conn_request+0x50/0xa0 security/security.c:4945\n tcp_v6_route_req+0x22c/0x550 net/ipv6/tcp_ipv6.c:825\n tcp_conn_request+0xec8/0x2b70 net/ipv4/tcp_input.c:7275\n tcp_v6_conn_request+0x1e3/0x440 net/ipv6/tcp_ipv6.c:1328\n tcp_rcv_state_process+0xafa/0x52b0 net/ipv4/tcp_input.c:6781\n tcp_v6_do_rcv+0x8a6/0x1a40 net/ipv6/tcp_ipv6.c:1667\n tcp_v6_rcv+0x505e/0x5b50 net/ipv6/tcp_ipv6.c:1904\n ip6_protocol_deliver_rcu+0x17c/0x1da0 net/ipv6/ip6_input.c:436\n ip6_input_finish+0x103/0x180 net/ipv6/ip6_input.c:480\n NF_HOOK include/linux/netfilter.h:314 [inline]\n NF_HOOK include/linux/netfilter.h:308 [inline]\n ip6_input+0x13c/0x6b0 net/ipv6/ip6_input.c:491\n dst_input include/net/dst.h:469 [inline]\n ip6_rcv_finish net/ipv6/ip6_input.c:79 [inline]\n ip6_rcv_finish+0xb6/0x490 net/ipv6/ip6_input.c:69\n NF_HOOK include/linux/netfilter.h:314 [inline]\n NF_HOOK include/linux/netf\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38200",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: fix MMIO write access to an invalid page in i40e_clear_hw\n\nWhen the device sends a specific input, an integer underflow can occur, leading\nto MMIO write access to an invalid page.\n\nPrevent the integer underflow by changing the type of related variables.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38206",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: fix double free in delayed_free\n\nThe double free could happen in the following path.\n\nexfat_create_upcase_table()\n        exfat_create_upcase_table() : return error\n        exfat_free_upcase_table() : free -\u003evol_utbl\n        exfat_load_default_upcase_table : return error\n     exfat_kill_sb()\n           delayed_free()\n                  exfat_free_upcase_table() \u003c--------- double free\nThis patch set -\u003evol_util as NULL after freeing it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38212",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipc: fix to protect IPCS lookups using RCU\n\nsyzbot reported that it discovered a use-after-free vulnerability, [0]\n\n[0]: https://lore.kernel.org/all/67af13f8.050a0220.21dd3.0038.GAE@google.com/\n\nidr_for_each() is protected by rwsem, but this is not enough.  If it is\nnot protected by RCU read-critical region, when idr_for_each() calls\nradix_tree_node_free() through call_rcu() to free the radix_tree_node\nstructure, the node will be freed immediately, and when reading the next\nnode in radix_tree_for_each_slot(), the already freed memory may be read.\n\nTherefore, we need to add code to make sure that idr_for_each() is\nprotected within the RCU read-critical region when we call it in\nshm_destroy_orphaned().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38213",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38257",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pkey: Prevent overflow in size calculation for memdup_user()\n\nNumber of apqn target list entries contained in 'nr_apqns' variable is\ndetermined by userspace via an ioctl call so the result of the product in\ncalculation of size passed to memdup_user() may overflow.\n\nIn this case the actual size of the allocated area and the value\ndescribing it won't be in sync leading to various types of unpredictable\nbehaviour later.\n\nUse a proper memdup_array_user() helper which returns an error if an\noverflow is detected. Note that it is different from when nr_apqns is\ninitially zero - that case is considered valid and should be handled in\nsubsequent pkey_handler implementations.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38350",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: Always pass notifications when child class becomes empty\n\nCertain classful qdiscs may invoke their classes' dequeue handler on an\nenqueue operation. This may unexpectedly empty the child qdisc and thus\nmake an in-flight class passive via qlen_notify(). Most qdiscs do not\nexpect such behaviour at this point in time and may re-activate the\nclass eventually anyways which will lead to a use-after-free.\n\nThe referenced fix commit attempted to fix this behavior for the HFSC\ncase by moving the backlog accounting around, though this turned out to\nbe incomplete since the parent's parent may run into the issue too.\nThe following reproducer demonstrates this use-after-free:\n\n    tc qdisc add dev lo root handle 1: drr\n    tc filter add dev lo parent 1: basic classid 1:1\n    tc class add dev lo parent 1: classid 1:1 drr\n    tc qdisc add dev lo parent 1:1 handle 2: hfsc def 1\n    tc class add dev lo parent 2: classid 2:1 hfsc rt m1 8 d 1 m2 0\n    tc qdisc add dev lo parent 2:1 handle 3: netem\n    tc qdisc add dev lo parent 3:1 handle 4: blackhole\n\n    echo 1 | socat -u STDIN UDP4-DATAGRAM:127.0.0.1:8888\n    tc class delete dev lo classid 1:1\n    echo 1 | socat -u STDIN UDP4-DATAGRAM:127.0.0.1:8888\n\nSince backlog accounting issues leading to a use-after-frees on stale\nclass pointers is a recurring pattern at this point, this patch takes\na different approach. Instead of trying to fix the accounting, the patch\nensures that qdisc_tree_reduce_backlog always calls qlen_notify when\nthe child qdisc is empty. This solves the problem because deletion of\nqdiscs always involves a call to qdisc_reset() and / or\nqdisc_purge_queue() which ultimately resets its qlen to 0 thus causing\nthe following qdisc_tree_reduce_backlog() to report to the parent. Note\nthat this may call qlen_notify on passive classes multiple times. This\nis not a problem after the recent patch series that made all the\nclassful qdiscs qlen_notify() handlers idempotent.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38468",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: Return NULL when htb_lookup_leaf encounters an empty rbtree\n\nhtb_lookup_leaf has a BUG_ON that can trigger with the following:\n\ntc qdisc del dev lo root\ntc qdisc add dev lo root handle 1: htb default 1\ntc class add dev lo parent 1: classid 1:1 htb rate 64bit\ntc qdisc add dev lo parent 1:1 handle 2: netem\ntc qdisc add dev lo parent 2:1 handle 3: blackhole\nping -I lo -c1 -W0.001 127.0.0.1\n\nThe root cause is the following:\n\n1. htb_dequeue calls htb_dequeue_tree which calls the dequeue handler on\n   the selected leaf qdisc\n2. netem_dequeue calls enqueue on the child qdisc\n3. blackhole_enqueue drops the packet and returns a value that is not\n   just NET_XMIT_SUCCESS\n4. Because of this, netem_dequeue calls qdisc_tree_reduce_backlog, and\n   since qlen is now 0, it calls htb_qlen_notify -\u003e htb_deactivate -\u003e\n   htb_deactiviate_prios -\u003e htb_remove_class_from_row -\u003e htb_safe_rb_erase\n5. As this is the only class in the selected hprio rbtree,\n   __rb_change_child in __rb_erase_augmented sets the rb_root pointer to\n   NULL\n6. Because blackhole_dequeue returns NULL, netem_dequeue returns NULL,\n   which causes htb_dequeue_tree to call htb_lookup_leaf with the same\n   hprio rbtree, and fail the BUG_ON\n\nThe function graph for this scenario is shown here:\n 0)               |  htb_enqueue() {\n 0) + 13.635 us   |    netem_enqueue();\n 0)   4.719 us    |    htb_activate_prios();\n 0) # 2249.199 us |  }\n 0)               |  htb_dequeue() {\n 0)   2.355 us    |    htb_lookup_leaf();\n 0)               |    netem_dequeue() {\n 0) + 11.061 us   |      blackhole_enqueue();\n 0)               |      qdisc_tree_reduce_backlog() {\n 0)               |        qdisc_lookup_rcu() {\n 0)   1.873 us    |          qdisc_match_from_root();\n 0)   6.292 us    |        }\n 0)   1.894 us    |        htb_search();\n 0)               |        htb_qlen_notify() {\n 0)   2.655 us    |          htb_deactivate_prios();\n 0)   6.933 us    |        }\n 0) + 25.227 us   |      }\n 0)   1.983 us    |      blackhole_dequeue();\n 0) + 86.553 us   |    }\n 0) # 2932.761 us |    qdisc_warn_nonwc();\n 0)               |    htb_lookup_leaf() {\n 0)               |      BUG_ON();\n ------------------------------------------\n\nThe full original bug report can be seen here [1].\n\nWe can fix this just by returning NULL instead of the BUG_ON,\nas htb_dequeue_tree returns NULL when htb_lookup_leaf returns\nNULL.\n\n[1] https://lore.kernel.org/netdev/pF5XOOIim0IuEfhI-SOxTgRvNoDwuux7UHKnE_Y5-zVd4wmGvNk2ceHjKb8ORnzw0cGwfmVu42g9dL7XyJLf1NEzaztboTWcm0Ogxuojoeo=@willsroot.io/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38477",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/sched: sch_qfq: Fix race condition on qfq_aggregate\n\nA race condition can occur when 'agg' is modified in qfq_change_agg\n(called during qfq_enqueue) while other threads access it\nconcurrently. For example, qfq_dump_class may trigger a NULL\ndereference, and qfq_delete_class may cause a use-after-free.\n\nThis patch addresses the issue by:\n\n1. Moved qfq_destroy_class into the critical section.\n\n2. Added sch_tree_lock protection to qfq_dump_class and\nqfq_dump_class_stats.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38494",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: do not bypass hid_hw_raw_request\n\nhid_hw_raw_request() is actually useful to ensure the provided buffer\nand length are valid. Directly calling in the low level transport driver\nfunction bypassed those checks and allowed invalid paramto be used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38495",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: ensure the allocated report buffer can contain the reserved report ID\n\nWhen the report ID is not used, the low level transport drivers expect\nthe first byte to be 0. However, currently the allocated buffer not\naccount for that extra byte, meaning that instead of having 8 guaranteed\nbytes for implement to be working, we only have 7.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38497",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: configfs: Fix OOB read on empty string write\n\nWhen writing an empty string to either 'qw_sign' or 'landingPage'\nsysfs attributes, the store functions attempt to access page[l - 1]\nbefore validating that the length 'l' is greater than zero.\n\nThis patch fixes the vulnerability by adding a check at the beginning\nof os_desc_qw_sign_store() and webusb_landingPage_store() to handle\nthe zero-length input case gracefully by returning immediately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:kernel-default-5.14.21-150400.24.173.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-40909",
      "Description": "Perl threads have a working directory race condition where file operations may target unintended paths.\n\nIf a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone  that handle for the new thread, which is visible from any third (or  more) thread already running. \n\nThis may lead to unintended operations  such as loading code or accessing files from unexpected locations,  which a local attacker may be able to exploit.\n\nThe bug was introduced in commit  11a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:perl-5.26.1-150300.17.20.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:perl-base-5.26.1-150300.17.20.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4373",
      "Description": "A flaw was found in GLib, which is vulnerable to an integer overflow in the g_string_insert_unichar() function. When the position at which to insert the character is large, the position will overflow, leading to a buffer underwrite.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:glib2-devel-2.70.5-150400.3.23.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:glib2-tools-2.70.5-150400.3.23.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgio-2_0-0-2.70.5-150400.3.23.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libglib-2_0-0-2.70.5-150400.3.23.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgmodule-2_0-0-2.70.5-150400.3.23.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgobject-2_0-0-2.70.5-150400.3.23.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgthread-2_0-0-2.70.5-150400.3.23.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4435",
      "Description": "When using a TarFile.errorlevel = 0  and extracting with a filter the documented behavior is that any filtered members would be skipped and not extracted. However the actual behavior of TarFile.errorlevel = 0  in affected versions is that the member would still be extracted and not skipped.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4516",
      "Description": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4517",
      "Description": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".\n\n\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4598",
      "Description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libsystemd0-249.17-150400.8.49.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libudev1-249.17-150400.8.49.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:systemd-249.17-150400.8.49.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:systemd-sysvinit-249.17-150400.8.49.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:udev-249.17-150400.8.49.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-46802",
      "Description": "For a short time they PTY is set to mode 666, allowing any user on the system to connect to the screen session.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:screen-4.6.2-150000.5.8.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-48060",
      "Description": "jq is a command-line JSON processor. In versions up to and including 1.7.1, a heap-buffer-overflow is present in function `jv_string_vfmt` in the jq_fuzz_execute harness from oss-fuzz. This crash happens on file jv.c, line 1456 `void* p = malloc(sz);`. As of time of publication, no patched versions are available.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:jq-1.6-150000.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libjq1-1.6-150000.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4877",
      "Description": "There's a vulnerability in the libssh package where when a libssh consumer passes in an unexpectedly large input buffer to ssh_get_fingerprint_hash() function. In such cases the bin_to_base64() function can experience an integer overflow leading to a memory under allocation, when that happens it's possible that the program perform out of bounds write leading to a heap corruption.\nThis issue affects only 32-bits builds of libssh.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh-config-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-32bit-0.9.8-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4878",
      "Description": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the privatekey_from_file() function. This flaw can be triggered if the file specified by the filename doesn't exist and may lead to possible signing failures or heap corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh-config-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-32bit-0.9.8-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-48964",
      "Description": "ping in iputils before 20250602 allows a denial of service (application error in adaptive ping mode or incorrect data collection) via a crafted ICMP Echo Reply packet, because a zero timestamp can lead to large intermediate values that have an integer overflow when squared during statistics calculations. NOTE: this issue exists because of an incomplete fix for CVE-2025-47268 (that fix was only about timestamp calculations, and it did not account for a specific scenario where the original timestamp in the ICMP payload is zero).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:iputils-20211215-150400.3.22.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49175",
      "Description": "A flaw was found in the X Rendering extension's handling of animated cursors. If a client provides no cursors, the server assumes at least one is present, leading to an out-of-bounds read and potential crash.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xorg-x11-server-1.20.3-150400.38.60.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49176",
      "Description": "A flaw was found in the Big Requests extension. The request length is multiplied by 4 before checking against the maximum allowed size, potentially causing an integer overflow and bypassing the size check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xorg-x11-server-1.20.3-150400.38.60.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49178",
      "Description": "A flaw was found in the X server's request handling. Non-zero 'bytes to ignore' in a client's request can cause the server to skip processing another client's request, potentially leading to a denial of service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xorg-x11-server-1.20.3-150400.38.60.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49179",
      "Description": "A flaw was found in the X Record extension. The RecordSanityCheckRegisterClients function does not check for an integer overflow when computing request length, which allows a client to bypass length checks.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xorg-x11-server-1.20.3-150400.38.60.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49180",
      "Description": "A flaw was found in the RandR extension, where the RRChangeProviderProperty function does not properly validate input. This issue leads to an integer overflow when computing the total size to allocate.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:xorg-x11-server-1.20.3-150400.38.60.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49630",
      "Description": "In certain proxy configurations, a denial of service attack against  Apache HTTP Server versions 2.4.26 through to 2.4.63 can be triggered by untrusted clients causing an assertion in mod_proxy_http2.\n\nConfigurations affected are a reverse proxy is configured for an HTTP/2 backend, with ProxyPreserveHost set to \"on\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49794",
      "Description": "A use-after-free vulnerability was found in libxml2. This issue occurs when parsing XPath elements under certain circumstances when the XML schematron has the \u003csch:name path=\"...\"/\u003e schema elements. This flaw allows a malicious actor to craft a malicious XML document used as input for libxml, resulting in the program's crash using libxml or other possible undefined behaviors.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-2-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-devel-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-tools-2.9.14-150400.5.47.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49796",
      "Description": "A vulnerability was found in libxml2. Processing certain sch:name elements from the input XML file can trigger a memory corruption issue. This flaw allows an attacker to craft a malicious XML input file that can lead libxml to crash, resulting in a denial of service or other possible undefined behavior due to sensitive data being corrupted in memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-2-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-devel-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-tools-2.9.14-150400.5.47.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-49812",
      "Description": "In some mod_ssl configurations on Apache HTTP Server versions through to 2.4.63, an HTTP desynchronisation attack allows a man-in-the-middle attacker to hijack an HTTP session via a TLS upgrade.\n\nOnly configurations using \"SSLEngine optional\" to enable TLS upgrades are affected. Users are recommended to upgrade to version 2.4.64, which removes support for TLS upgrade.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-50181",
      "Description": "urllib3 is a user-friendly HTTP client library for Python. Prior to 2.5.0, it is possible to disable redirects for all requests by instantiating a PoolManager and specifying retries in a way that disable redirects. By default, requests and botocore users are not affected. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable. This issue has been patched in version 2.5.0.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-urllib3-1.25.10-150300.4.18.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5222",
      "Description": "A stack buffer overflow was found in Internationl components for unicode (ICU ). While running the genrb binary, the 'subtag' struct overflowed at the SRBRoot::addTag function. This issue may lead to memory corruption and local arbitrary code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libicu-suse65_1-65.1-150200.4.15.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libicu60_2-60.2-150000.3.18.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libicu60_2-ledata-60.2-150000.3.18.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libicu65_1-ledata-65.1-150200.4.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5278",
      "Description": "A flaw was found in GNU Coreutils. The sort utility's begfield() function is vulnerable to a heap buffer under-read. The program may access memory outside the allocated buffer if a user runs a crafted command using the traditional key format. A malicious input could lead to a crash or leak sensitive data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:coreutils-8.32-150400.9.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-53020",
      "Description": "Late Release of Memory after Effective Lifetime vulnerability in Apache HTTP Server.\n\nThis issue affects Apache HTTP Server: from 2.4.17 up to 2.4.63.\n\nUsers are recommended to upgrade to version 2.4.64, which fixes the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-prefork-2.4.51-150400.6.46.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:apache2-utils-2.4.51-150400.6.46.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5318",
      "Description": "A flaw was found in the libssh library in versions less than 0.11.2. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh-config-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-32bit-0.9.8-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5372",
      "Description": "A flaw was found in libssh versions built with OpenSSL versions older than 3.0, specifically in the ssh_kdf() function responsible for key derivation. Due to inconsistent interpretation of return values where OpenSSL uses 0 to indicate failure and libssh uses 0 for success-the function may mistakenly return a success status even when key derivation fails. This results in uninitialized cryptographic key buffers being used in subsequent communication, potentially compromising SSH sessions' confidentiality, integrity, and availability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh-config-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-0.9.8-150400.3.9.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libssh4-32bit-0.9.8-150400.3.9.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-54388",
      "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. In versions 28.2.0 through 28.3.2, when the firewalld service is reloaded it removes all iptables rules including those created by Docker. While Docker should automatically recreate these rules, versions before 28.3.3 fail to recreate the specific rules that block external access to containers. This means that after a firewalld reload, containers with ports published to localhost (like 127.0.0.1:8080) become accessible from remote machines that have network routing to the Docker bridge, even though they should only be accessible from the host itself. The vulnerability only affects explicitly published ports - unpublished ports remain protected. This issue is fixed in version 28.3.3.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:docker-28.3.3_ce-150000.230.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5914",
      "Description": "A vulnerability has been identified in the libarchive library, specifically within the archive_read_format_rar_seek_data() function. This flaw involves an integer overflow that can ultimately lead to a double-free condition. Exploiting a double-free vulnerability can result in memory corruption, enabling an attacker to execute arbitrary code or cause a denial-of-service condition.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libarchive13-3.5.1-150400.3.21.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5915",
      "Description": "A vulnerability has been identified in the libarchive library. This flaw can lead to a heap buffer over-read due to the size of a filter block potentially exceeding the Lempel-Ziv-Storer-Schieber (LZSS) window. This means the library may attempt to read beyond the allocated memory buffer, which can result in unpredictable program behavior, crashes (denial of service), or the disclosure of sensitive information from adjacent memory regions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libarchive13-3.5.1-150400.3.21.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5916",
      "Description": "A vulnerability has been identified in the libarchive library. This flaw involves an integer overflow that can be triggered when processing a Web Archive (WARC) file that claims to have more than INT64_MAX - 4 content bytes. An attacker could craft a malicious WARC archive to induce this overflow, potentially leading to unpredictable program behavior, memory corruption, or a denial-of-service condition within applications that process such archives using libarchive.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libarchive13-3.5.1-150400.3.21.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5917",
      "Description": "A vulnerability has been identified in the libarchive library. This flaw involves an 'off-by-one' miscalculation when handling prefixes and suffixes for file names. This can lead to a 1-byte write overflow. While seemingly small, such an overflow can corrupt adjacent memory, leading to unpredictable program behavior, crashes, or in specific circumstances, could be leveraged as a building block for more sophisticated exploitation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libarchive13-3.5.1-150400.3.21.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5918",
      "Description": "A vulnerability has been identified in the libarchive library. This flaw can be triggered when file streams are piped into bsdtar, potentially allowing for reading past the end of the file. This out-of-bounds read can lead to unintended consequences, including unpredictable program behavior, memory corruption, or a denial-of-service condition.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libarchive13-3.5.1-150400.3.21.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6018",
      "Description": "A Local Privilege Escalation (LPE) vulnerability has been discovered in pam-config within Linux Pluggable Authentication Modules (PAM). This flaw allows an unprivileged local attacker (for example, a user logged in via SSH) to obtain the elevated privileges normally reserved for a physically present, \"allow_active\" user. The highest risk is that the attacker can then perform all allow_active yes Polkit actions, which are typically restricted to console users, potentially gaining unauthorized control over system configurations, services, or other sensitive operations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:pam-1.3.0-150000.6.86.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:pam-config-1.1-150200.3.14.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6021",
      "Description": "A flaw was found in libxml2's xmlBuildQName function, where integer overflows in buffer size calculations can lead to a stack-based buffer overflow. This issue can result in memory corruption or a denial of service when processing crafted input.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-2-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-devel-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-tools-2.9.14-150400.5.47.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6069",
      "Description": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6170",
      "Description": "A flaw was found in the interactive shell of the xmllint command-line tool, used for parsing XML files. When a user inputs an overly long command, the program does not check the input size properly, which can cause it to crash. This issue might allow attackers to run harmful code in rare configurations without modern protections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-2-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-devel-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-tools-2.9.14-150400.5.47.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6199",
      "Description": "A flaw was found in the GIF parser of GdkPixbuf's LZW decoder. When an invalid symbol is encountered during decompression, the decoder sets the reported output size to the full buffer length rather than the actual number of written bytes. This logic error results in uninitialized sections of the buffer being included in the output, potentially leaking arbitrary memory contents in the processed image.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:gdk-pixbuf-query-loaders-2.42.12-150400.5.14.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgdk_pixbuf-2_0-0-2.42.12-150400.5.14.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6395",
      "Description": "A NULL pointer dereference flaw was found in the GnuTLS software in _gnutls_figure_common_ciphersuite().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgnutls30-3.7.3-150400.4.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6442",
      "Description": "Ruby WEBrick read_header HTTP Request Smuggling Vulnerability. This vulnerability allows remote attackers to smuggle arbitrary HTTP requests on affected installations of Ruby WEBrick. This issue is exploitable when the product is deployed behind an HTTP proxy that fulfills specific conditions.\n\nThe specific flaw exists within the read_headers method. The issue results from the inconsistent parsing of terminators of HTTP headers. An attacker can leverage this vulnerability to smuggle arbitrary HTTP requests. Was ZDI-CAN-21876.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libruby2_5-2_5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:ruby2.5-2.5.9-150000.4.49.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:ruby2.5-stdlib-2.5.9-150000.4.49.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6965",
      "Description": "There exists a vulnerability in SQLite versions before 3.50.2 where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. We recommend upgrading to version 3.50.2 or above.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libsqlite3-0-3.50.2-150000.3.33.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:sqlite3-tcl-3.50.2-150000.3.33.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-7345",
      "Description": "A flaw exists in gdk-pixbuf within the gdk_pixbuf__jpeg_image_load_increment function (io-jpeg.c) and in glib's g_base64_encode_step (glib/gbase64.c). When processing maliciously crafted JPEG images, a heap buffer overflow can occur during Base64 encoding, allowing out-of-bounds reads from heap memory, potentially causing application crashes or arbitrary code execution.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:gdk-pixbuf-query-loaders-2.42.12-150400.5.14.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libgdk_pixbuf-2_0-0-2.42.12-150400.5.14.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-7425",
      "Description": "A flaw was found in libxslt where the attribute type, atype, flags are modified in a way that corrupts internal memory management. When XSLT functions, such as the key() process, result in tree fragments, this corruption prevents the proper cleanup of ID attributes. As a result, the system may access freed memory, causing crashes or enabling attackers to trigger heap corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-2-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-devel-2.9.14-150400.5.47.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libxml2-tools-2.9.14-150400.5.47.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-7519",
      "Description": "A flaw was found in polkit. When processing an XML policy with 32 or more nested elements in depth, an out-of-bounds write can be triggered. This issue can lead to a crash or other unexpected behavior, and arbitrary code execution is not discarded. To exploit this flaw, a high-privilege account is needed as it's required to place the malicious policy file properly.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libpolkit0-0.116-150200.3.15.1",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:polkit-0.116-150200.3.15.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-8176",
      "Description": "A vulnerability was found in LibTIFF up to 4.7.0. It has been declared as critical. This vulnerability affects the function get_histogram of the file tools/tiffmedian.c. The manipulation leads to use after free. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used. The patch is identified as fe10872e53efba9cc36c66ac4ab3b41a839d5172. It is recommended to apply a patch to fix this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libtiff5-4.0.9-150000.45.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-8177",
      "Description": "A vulnerability was found in LibTIFF up to 4.7.0. It has been rated as critical. This issue affects the function setrow of the file tools/thumbnail.c. The manipulation leads to buffer overflow. An attack has to be approached locally. The patch is named e8c9d6c616b19438695fd829e58ae4fde5bfbc22. It is recommended to apply a patch to fix this issue. This vulnerability only affects products that are no longer supported by the maintainer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:libtiff5-4.0.9-150000.45.50.1"
          ]
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-8194",
      "Description": "There is a defect in the CPython \"tarfile\" module affecting the \"TarFile\" extraction and entry enumeration APIs. The tar implementation would process tar archives with negative offsets without error, resulting in an infinite loop and deadlock during the parsing of maliciously crafted tar archives. \n\nThis vulnerability can be mitigated by including the following patch after importing the \"tarfile\" module:   https://gist.github.com/sethmlarson/1716ac5b82b73dbcbf23ad2eff8b33e1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": [
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-3.6.15-150300.10.97.2",
            "Public Cloud Image google/sles-15-sp4-sapcal-v20250911-x86-64:python3-curses-3.6.15-150300.10.97.2"
          ]
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}